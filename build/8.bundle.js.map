{"version":3,"sources":["webpack:////home/srikanth/kepler.gl/node_modules/@math.gl/geospatial/src/constants.js","webpack:////home/srikanth/kepler.gl/node_modules/@math.gl/geospatial/src/type-utils.js","webpack:////home/srikanth/kepler.gl/node_modules/@math.gl/geospatial/src/ellipsoid/helpers/scale-to-geodetic-surface.js","webpack:////home/srikanth/kepler.gl/node_modules/@math.gl/geospatial/src/ellipsoid/helpers/ellipsoid-transform.js","webpack:////home/srikanth/kepler.gl/node_modules/@math.gl/geospatial/src/ellipsoid/ellipsoid.js","webpack:////home/srikanth/kepler.gl/node_modules/@mapbox/vector-tile/lib/vectortilelayer.js","webpack:////home/srikanth/kepler.gl/node_modules/@mapbox/vector-tile/lib/vectortilefeature.js","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/edit-modes/src/lib/scale-mode.ts","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/edit-modes/src/lib/rotate-mode.ts","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/edit-modes/src/lib/composite-mode.ts","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/edit-modes/src/lib/three-click-polygon-mode.ts","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/edit-modes/src/memoize.ts","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/layers/src/layers/editable-layer.ts","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/layers/src/utils.ts","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/layers/src/layers/path-outline-layer/path-outline-layer.ts","webpack:////home/srikanth/kepler.gl/node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-client.js","webpack:////home/srikanth/kepler.gl/node_modules/@mapbox/parse-mapbox-token/index.js","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/edit-modes/src/lib/geojson-edit-mode.ts","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/edit-modes/node_modules/@math.gl/web-mercator/src/math-utils.js","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/edit-modes/node_modules/@math.gl/web-mercator/src/assert.js","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/edit-modes/node_modules/@math.gl/web-mercator/src/web-mercator-utils.js","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/edit-modes/node_modules/@math.gl/web-mercator/src/fit-bounds.js","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/edit-modes/node_modules/@math.gl/web-mercator/src/get-bounds.js","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/edit-modes/node_modules/@math.gl/web-mercator/src/web-mercator-viewport.js","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/edit-modes/node_modules/@math.gl/web-mercator/src/normalize-viewport-props.js","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/edit-modes/node_modules/@math.gl/web-mercator/src/fly-to-viewport.js","webpack:////home/srikanth/kepler.gl/node_modules/@mapbox/tiny-sdf/index.js","webpack:////home/srikanth/kepler.gl/node_modules/@mapbox/vector-tile/index.js","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/layers/src/index.ts","webpack:////home/srikanth/kepler.gl/node_modules/@math.gl/core/src/classes/matrix4.js","webpack:////home/srikanth/kepler.gl/node_modules/@mapbox/sphericalmercator/sphericalmercator.js","webpack:////home/srikanth/kepler.gl/node_modules/@mapbox/vector-tile/lib/vectortile.js","webpack:////home/srikanth/kepler.gl/node_modules/@mapbox/point-geometry/index.js","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/layers/src/style.ts","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/edit-modes/src/lib/resize-circle-mode.ts","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/edit-modes/src/lib/duplicate-mode.ts","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/edit-modes/src/lib/extend-line-string-mode.ts","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/edit-modes/src/lib/split-polygon-mode.ts","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/edit-modes/src/lib/extrude-mode.ts","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/edit-modes/src/lib/elevation-mode.ts","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/edit-modes/src/lib/transform-mode.ts","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/edit-modes/src/lib/draw-point-mode.ts","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/edit-modes/src/lib/draw-line-string-mode.ts","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/edit-modes/src/lib/draw-rectangle-mode.ts","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/edit-modes/src/lib/draw-rectangle-from-center-mode.ts","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/edit-modes/src/lib/draw-square-from-center-mode.ts","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/edit-modes/src/lib/draw-circle-by-diameter-mode.ts","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/edit-modes/src/lib/draw-circle-from-center-mode.ts","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/edit-modes/src/lib/draw-ellipse-by-bounding-box-mode.ts","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/edit-modes/src/lib/draw-ellipse-using-three-points-mode.ts","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/edit-modes/src/lib/draw-rectangle-using-three-points-mode.ts","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/edit-modes/src/lib/draw-90degree-polygon-mode.ts","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/edit-modes/src/lib/draw-polygon-by-dragging-mode.ts","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/edit-modes/src/lib/view-mode.ts","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/edit-modes/src/lib/measure-distance-mode.ts","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/edit-modes/src/lib/measure-area-mode.ts","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/edit-modes/src/lib/measure-angle-mode.ts","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/edit-modes/src/lib/snappable-mode.ts","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/layers/src/layers/editable-path-layer.ts","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/layers/src/layers/editable-h3-cluster-layer.ts","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/layers/src/layers/selection-layer.ts","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/layers/src/layers/elevated-edit-handle-layer.ts","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/layers/src/shaderlib/outline/outline.ts","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/layers/src/layers/path-marker-layer/path-marker-layer.ts","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/layers/src/layers/path-marker-layer/arrow-2d-geometry.ts","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/layers/src/layers/path-marker-layer/create-path-markers.ts","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/layers/src/layers/path-marker-layer/polyline.ts","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/layers/src/layers/junction-scatterplot-layer.ts","webpack:////home/srikanth/kepler.gl/node_modules/@math.gl/core/src/lib/common.js","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/edit-modes/src/utils.ts","webpack:////home/srikanth/kepler.gl/node_modules/@mapbox/mapbox-sdk/services/service-helpers/validator.js","webpack:////home/srikanth/kepler.gl/node_modules/@mapbox/fusspot/lib/index.js","webpack:////home/srikanth/kepler.gl/node_modules/@mapbox/mapbox-sdk/services/service-helpers/pick.js","webpack:////home/srikanth/kepler.gl/node_modules/@mapbox/mapbox-sdk/services/service-helpers/stringify-booleans.js","webpack:////home/srikanth/kepler.gl/node_modules/@mapbox/mapbox-sdk/services/service-helpers/object-map.js","webpack:////home/srikanth/kepler.gl/node_modules/@mapbox/mapbox-sdk/services/service-helpers/create-service-factory.js","webpack:////home/srikanth/kepler.gl/node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-request.js","webpack:////home/srikanth/kepler.gl/node_modules/@mapbox/mapbox-sdk/lib/helpers/url-utils.js","webpack:////home/srikanth/kepler.gl/node_modules/@mapbox/mapbox-sdk/lib/browser/browser-client.js","webpack:////home/srikanth/kepler.gl/node_modules/@mapbox/mapbox-sdk/lib/browser/browser-layer.js","webpack:////home/srikanth/kepler.gl/node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-response.js","webpack:////home/srikanth/kepler.gl/node_modules/@mapbox/mapbox-sdk/lib/helpers/parse-link-header.js","webpack:////home/srikanth/kepler.gl/node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-error.js","webpack:////home/srikanth/kepler.gl/node_modules/@mapbox/mapbox-sdk/lib/helpers/parse-headers.js","webpack:////home/srikanth/kepler.gl/node_modules/@math.gl/core/src/lib/assert.js","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/layers/node_modules/@math.gl/web-mercator/src/math-utils.js","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/layers/node_modules/@math.gl/web-mercator/src/assert.js","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/layers/node_modules/@math.gl/web-mercator/src/web-mercator-utils.js","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/layers/node_modules/@math.gl/web-mercator/src/fit-bounds.js","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/layers/node_modules/@math.gl/web-mercator/src/get-bounds.js","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/layers/node_modules/@math.gl/web-mercator/src/web-mercator-viewport.js","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/layers/node_modules/@math.gl/web-mercator/src/normalize-viewport-props.js","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/layers/node_modules/@math.gl/web-mercator/src/fly-to-viewport.js","webpack:////home/srikanth/kepler.gl/node_modules/@math.gl/core/src/classes/quaternion.js","webpack:////home/srikanth/kepler.gl/node_modules/@math.gl/core/src/lib/math-utils.js","webpack:////home/srikanth/kepler.gl/node_modules/@math.gl/core/src/classes/matrix3.js","webpack:////home/srikanth/kepler.gl/node_modules/@math.gl/core/src/classes/vector2.js","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/edit-modes/src/lib/immutable-feature-collection.ts","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/edit-modes/src/index.ts","webpack:////home/srikanth/kepler.gl/node_modules/@math.gl/core/src/lib/gl-matrix-extras.js","webpack:////home/srikanth/kepler.gl/node_modules/@math.gl/culling/src/constants.ts","webpack:////home/srikanth/kepler.gl/node_modules/@math.gl/culling/node_modules/@math.gl/core/src/lib/assert.ts","webpack:////home/srikanth/kepler.gl/node_modules/@math.gl/culling/node_modules/@math.gl/core/src/lib/common.ts","webpack:////home/srikanth/kepler.gl/node_modules/@math.gl/culling/node_modules/@math.gl/core/src/classes/base/math-array.ts","webpack:////home/srikanth/kepler.gl/node_modules/@math.gl/culling/node_modules/@math.gl/core/src/lib/validators.ts","webpack:////home/srikanth/kepler.gl/node_modules/@math.gl/culling/node_modules/@math.gl/core/src/classes/base/vector.ts","webpack:////home/srikanth/kepler.gl/node_modules/@math.gl/culling/node_modules/gl-matrix/esm/common.js","webpack:////home/srikanth/kepler.gl/node_modules/@math.gl/culling/node_modules/gl-matrix/esm/vec3.js","webpack:////home/srikanth/kepler.gl/node_modules/@math.gl/culling/node_modules/@math.gl/core/src/lib/gl-matrix-extras.ts","webpack:////home/srikanth/kepler.gl/node_modules/@math.gl/culling/node_modules/@math.gl/core/src/classes/vector3.ts","webpack:////home/srikanth/kepler.gl/node_modules/@math.gl/culling/src/lib/bounding-volumes/axis-aligned-bounding-box.ts","webpack:////home/srikanth/kepler.gl/node_modules/@math.gl/culling/node_modules/gl-matrix/esm/mat4.js","webpack:////home/srikanth/kepler.gl/node_modules/@math.gl/culling/src/lib/bounding-volumes/bounding-sphere.ts","webpack:////home/srikanth/kepler.gl/node_modules/@math.gl/culling/node_modules/@math.gl/core/src/classes/base/matrix.ts","webpack:////home/srikanth/kepler.gl/node_modules/@math.gl/culling/node_modules/gl-matrix/esm/mat3.js","webpack:////home/srikanth/kepler.gl/node_modules/@math.gl/culling/node_modules/gl-matrix/esm/vec2.js","webpack:////home/srikanth/kepler.gl/node_modules/@math.gl/culling/node_modules/@math.gl/core/src/classes/matrix3.ts","webpack:////home/srikanth/kepler.gl/node_modules/@math.gl/culling/node_modules/@math.gl/core/src/classes/vector4.ts","webpack:////home/srikanth/kepler.gl/node_modules/@math.gl/culling/node_modules/gl-matrix/esm/vec4.js","webpack:////home/srikanth/kepler.gl/node_modules/@math.gl/culling/node_modules/gl-matrix/esm/quat.js","webpack:////home/srikanth/kepler.gl/node_modules/@math.gl/culling/node_modules/@math.gl/core/src/classes/quaternion.ts","webpack:////home/srikanth/kepler.gl/node_modules/@math.gl/culling/src/lib/bounding-volumes/oriented-bounding-box.ts","webpack:////home/srikanth/kepler.gl/node_modules/@math.gl/culling/src/lib/plane.ts","webpack:////home/srikanth/kepler.gl/node_modules/@math.gl/culling/src/lib/culling-volume.ts","webpack:////home/srikanth/kepler.gl/node_modules/@math.gl/culling/node_modules/@math.gl/core/src/classes/matrix4.ts","webpack:////home/srikanth/kepler.gl/node_modules/@math.gl/culling/src/lib/perspective-off-center-frustum.ts","webpack:////home/srikanth/kepler.gl/node_modules/@math.gl/culling/src/lib/algorithms/bounding-sphere-from-points.ts","webpack:////home/srikanth/kepler.gl/node_modules/@math.gl/culling/node_modules/@math.gl/core/src/lib/math-utils.ts","webpack:////home/srikanth/kepler.gl/node_modules/@math.gl/culling/src/lib/algorithms/compute-eigen-decomposition.ts","webpack:////home/srikanth/kepler.gl/node_modules/@math.gl/culling/src/lib/algorithms/bounding-box-from-points.ts","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/edit-modes/src/lib/two-click-polygon-mode.ts","webpack:////home/srikanth/kepler.gl/node_modules/@mapbox/geo-viewport/index.js","webpack:////home/srikanth/kepler.gl/node_modules/@math.gl/core/src/classes/base/math-array.js","webpack:////home/srikanth/kepler.gl/node_modules/@mapbox/geojson-normalize/index.js","webpack:////home/srikanth/kepler.gl/node_modules/@math.gl/polygon/src/polygon-utils.js","webpack:////home/srikanth/kepler.gl/node_modules/@math.gl/polygon/src/earcut.js","webpack:////home/srikanth/kepler.gl/node_modules/@math.gl/web-mercator/node_modules/gl-matrix/esm/common.js","webpack:////home/srikanth/kepler.gl/node_modules/@math.gl/web-mercator/node_modules/gl-matrix/esm/vec4.js","webpack:////home/srikanth/kepler.gl/node_modules/@math.gl/web-mercator/src/math-utils.ts","webpack:////home/srikanth/kepler.gl/node_modules/@math.gl/web-mercator/node_modules/gl-matrix/esm/mat4.js","webpack:////home/srikanth/kepler.gl/node_modules/@math.gl/web-mercator/node_modules/gl-matrix/esm/vec2.js","webpack:////home/srikanth/kepler.gl/node_modules/@math.gl/web-mercator/node_modules/gl-matrix/esm/vec3.js","webpack:////home/srikanth/kepler.gl/node_modules/@math.gl/web-mercator/src/assert.ts","webpack:////home/srikanth/kepler.gl/node_modules/@math.gl/web-mercator/src/web-mercator-utils.ts","webpack:////home/srikanth/kepler.gl/node_modules/@math.gl/web-mercator/src/fit-bounds.ts","webpack:////home/srikanth/kepler.gl/node_modules/@math.gl/web-mercator/src/get-bounds.ts","webpack:////home/srikanth/kepler.gl/node_modules/@math.gl/web-mercator/src/normalize-viewport-props.ts","webpack:////home/srikanth/kepler.gl/node_modules/@math.gl/web-mercator/src/fly-to-viewport.ts","webpack:////home/srikanth/kepler.gl/node_modules/@mapbox/mapbox-sdk/lib/constants.js","webpack:////home/srikanth/kepler.gl/node_modules/@math.gl/core/src/classes/base/vector.js","webpack:////home/srikanth/kepler.gl/node_modules/@math.gl/core/src/classes/base/matrix.js","webpack:////home/srikanth/kepler.gl/node_modules/@math.gl/core/src/lib/validators.js","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/layers/src/layers/editable-geojson-layer.ts","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/edit-modes/src/lib/modify-mode.ts","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/edit-modes/src/lib/translate-mode.ts","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/edit-modes/src/lib/draw-polygon-mode.ts","webpack:////home/srikanth/kepler.gl/node_modules/@nebula.gl/layers/src/constants.ts","webpack:////home/srikanth/kepler.gl/node_modules/@mapbox/mapbox-sdk/services/geocoding.js","webpack:////home/srikanth/kepler.gl/node_modules/@math.gl/sun/src/suncalc.ts","webpack:////home/srikanth/kepler.gl/node_modules/@math.gl/core/src/classes/vector3.js"],"names":["Math","max","noop","x","scratchVector","Vector3","fromCartographic","cartographic","result","map","isArray","longitude","latitude","height","y","z","toCartographic","vector","scaleToGeodeticSurfaceIntersection","scaleToGeodeticSurfaceGradient","scratchOrigin","VECTOR_PRODUCT_LOCAL_FRAME","up","south","north","west","east","down","degeneratePositionLocalFrame","scratchAxisVectors","scratchVector1","scratchVector2","scratchVector3","localFrameToFixedFrame","ellipsoid","firstAxis","secondAxis","thirdAxis","cartesianOrigin","thirdAxisInferred","firstAxisVector","secondAxisVector","thirdAxisVector","assert","origin","copy","equalsEpsilon","sign","fromArray","scale","set","normalize","geodeticSurfaceNormal","cross","scratchNormal","scratchK","scratchPosition","scratchHeight","scratchCartesian","wgs84","Ellipsoid","constructor","this","radii","radiiSquared","radiiToTheFourth","oneOverRadii","oneOverRadiiSquared","minimumRadius","min","maximumRadius","centerToleranceSquared","_MathUtils","EPSILON1","squaredXOverSquaredZ","Object","freeze","equals","right","Boolean","toString","cartographicToCartesian","normal","k","geodeticSurfaceNormalCartographic","gamma","sqrt","dot","add","to","cartesianToCartographic","cartesian","from","point","scaleToGeodeticSurface","h","subtract","atan2","asin","vec3","config","_cartographicRadians","toDegrees","eastNorthUpToFixedFrame","Matrix4","geocentricSurfaceNormal","cartographicVectorRadians","toRadians","fromCartographicToRadians","cosLatitude","cos","sin","positionX","positionY","positionZ","oneOverRadiiX","oneOverRadiiY","oneOverRadiiZ","x2","y2","z2","squaredNorm","ratio","Number","isFinite","intersection","oneOverRadiiSquaredX","oneOverRadiiSquaredY","oneOverRadiiSquaredZ","gradient","xMultiplier","yMultiplier","zMultiplier","func","lambda","len","correction","xMultiplier2","yMultiplier2","zMultiplier2","abs","EPSILON12","scaleToGeocentricSurface","beta","multiplyScalar","transformPositionToScaledSpace","position","transformPositionFromScaledSpace","getSurfaceNormalIntersectionWithZAxis","buffer","EPSILON15","VectorTileFeature","VectorTileLayer","pbf","end","version","name","extent","length","_pbf","_keys","_values","_features","readFields","readLayer","tag","layer","readVarint","readString","push","pos","value","readFloat","readDouble","readVarint64","readSVarint","readBoolean","readValueMessage","module","exports","prototype","feature","i","Error","Point","keys","values","properties","type","_geometry","readFeature","id","key","readTag","signedArea","ring","p1","p2","sum","j","types","loadGeometry","line","cmd","lines","cmdLen","clone","bbox","x1","Infinity","y1","toGeoJSON","size","pow","x0","y0","coords","project","p","PI","atan","exp","points","rings","polygon","ccw","polygons","area","undefined","classifyRings","geometry","coordinates","ScaleMode","features","Array","getGeom","selectedHandle","selectedHandleIndex","positionIndexes","guidePointCount","_cornerGuidePoints","oppositeIndex","find","props","editedData","updatedData","ImmutableFeatureCollection","data","selectedIndexes","selectedIndex","movedFeature","replaceGeometry","getObject","_selectedEditHandle","startDragPoint","currentPoint","editType","oppositeHandle","_getOppositeScaleHandle","getCoord","scaleFactor","getScaleFactor","scaledFeatures","_geometryBeingScaled","_getUpdatedData","editContext","featureIndexes","_cursor","onUpdateCursor","cursorGeometry","getSelectedFeaturesAsFeatureCollection","centroid","bearing","positiveBearing","event","_isScaling","selectedEditHandle","getPickedEditHandle","picks","editHandleType","updateCursor","scaleAction","getScaleAction","pointerDownMapCoords","mapCoords","onEdit","cancelPan","selectedGeometry","_isSinglePointGeometrySelected","boundingBox","mode","cornerGuidePoints","coordEach","coord","coordIndex","cornerPoint","guideType","featureCollection","GeoJsonEditMode","startDistance","RotateMode","_isRotating","_geometryBeingRotated","previousCoord","topEdgeMidpointCoords","longestEdgeLength","edgeMidpoint","getIntermediatePosition","edgeDistance","rotateHandleCoords","lineFromEnvelopeToRotateHandle","lineString","rotateHandle","rotateAction","getRotateAction","angle","bearing1","getRotationAngle","rotatedFeatures","pivot","CompositeMode","modes","_modes","callback","resultEval","_coalesce","handler","handleClick","handlePointerMove","handleStartDragging","handleStopDragging","handleDragging","allGuides","getGuides","ThreeClickPolygonMode","addClickSequence","clickSequence","getClickSequence","tentativeFeature","getTentativeGuide","editAction","getAddFeatureOrBooleanPolygonAction","resetClickSequence","lastPointerMoveEvent","modeConfig","guides","hoveredCoord","getThreeClickPolygon","coord1","coord2","coord3","lastCoords","isEqual","a","b","compute","cachedResult","cachedArgs","args","EVENT_TYPES","EditableLayer","setState","_editableLayerState","pointerDownPicks","pointerDownScreenCoords","eventHandler","_forwardEventToCurrentLayer","bind","_addEventHandlers","_removeEventHandlers","eventManager","context","deck","state","eventType","on","priority","off","currentLayer","getCurrentLayer","console","warn","srcEvent","screenCoords","getScreenCoords","getMapCoords","getPicks","onLayerClick","sourceEvent","onLayerKeyUp","onStartDragging","stopImmediatePropagation","onDragging","onStopDragging","onPointerMove","pickMultipleObjects","layerIds","radius","pickingRadius","depth","pickingDepth","pointerEvent","clientX","gl","canvas","getBoundingClientRect","left","clientY","top","viewport","unproject","CompositeLayer","color","defaultColor","recursivelyTraverseNestedArrays","array","prefix","fn","groundCoords","pt","ddistance","lineBearing","orthogonalBearing","p3","p4","inPoint","wmViewport","WebMercatorViewport","projectedCoords","minDistance","minPointInfo","forEach","index","A","B","C","div","distance","z1","lineLength","distance2d","startToPointLength","z0","mix","dist","base","insertBefore","toInsert","at","indexOf","slice","dx","dy","injectShaderCode","source","code","replace","concat","PathOutlineLayer","shaders","assign","modules","outline","vs","fs","outlineFramebuffer","Framebuffer","dummyTexture","Texture2D","attributeManager","addInstanced","instanceZLevel","GL","UNSIGNED_BYTE","accessor","moduleParameters","parameters","uniforms","jointRounded","capRounded","billboard","miterLimit","widthUnits","widthScale","widthMinPixels","widthMaxPixels","jointType","capType","UNIT","resize","clear","model","updateModuleSettings","outlineEnabled","outlineRenderShadowmap","outlineShadowmap","draw","depthTest","blendEquation","MAX","framebuffer","PathLayer","getZLevel","parseToken","MapiRequest","constants","MapiClient","options","accessToken","API_ORIGIN","createRequest","requestOptions","base64","tokenCache","has","obj","hasOwnProperty","call","token","parts","split","usage","rawPayload","parsedPayload","JSON","parse","decode","parseError","parsePaylod","user","u","authorization","expires","created","iat","scopes","client","lastLogin","ll","impersonator","iu","position1","position2","DEFAULT_GUIDES","DEFAULT_TOOLTIPS","getSelectedFeature","_clickSequence","f","pickedFeatures","getNonGuidePicks","pickedHandles","getPickedEditHandles","featureIndex","pickedIndexes","Set","some","featureOrGeometry","featureOrGeometryAsAny","rewindFeature","rewindPolygon","addFeature","featuresToAdd","initialIndex","updatedIndexes","geometryAsAny","selectedFeature","booleanOperation","updatedGeometry","getAddFeatureAction","createTentativeFeature","transformVector","matrix","vec4","mod","divisor","modulus","log2","log","LOG2E","condition","message","PI_4","DEGREES_TO_RADIANS","RADIANS_TO_DEGREES","zoomToScale","zoom","scaleToZoom","lngLatToWorld","lng","lat","phi2","tan","worldToLngLat","lambda2","getMeterZoom","getDistanceScales","highPrecision","latCosine","unitsPerDegreeY","altUnitsPerMeter","unitsPerMeter","metersPerUnit","unitsPerDegree","degreesPerUnit","latCosine2","unitsPerDegreeY2","altUnitsPerDegree2","altUnitsPerMeter2","unitsPerDegree2","unitsPerMeter2","addMetersToLngLat","lngLatZ","xyz","worldspace","newLngLat","newZ","getViewMatrix","pitch","altitude","center","vm","mat4","getProjectionParameters","width","fovy","altitudeToFovy","nearZMultiplier","farZMultiplier","halfFov","focalDistance","fovyToAltitude","pitchRadians","topHalfSurfaceDistance","fov","aspect","near","far","getProjectionMatrix","worldToPixels","pixelProjectionMatrix","pixelsToWorld","pixelUnprojectionMatrix","targetZ","coord0","t","vec2","fitBounds","bounds","minExtent","maxZoom","padding","offset","bottom","nw","se","targetSize","scaleX","scaleY","offsetX","offsetY","centerLngLat","getBounds","unprojectOps","bottomLeft","bottomRight","topLeft","topRight","unprojectOnFarPlane","distanceScales","projectionMatrix","viewMatrix","meterOffset","_initMatrices","projectPosition","unprojectPosition","vpm","viewProjectionMatrix","m","mInverse","targetZWorld","X","Y","Z","projectFlat","lngLat","unprojectFlat","xy","getMapCenterByLngLatPosition","fromLocation","toLocation","translate","getLocationAtPoint","corners","getBoundingRegion","normalizeViewportProps","minZoom","halfHeightPixels","minLatitude","maxLatitude","VIEWPORT_TRANSITION_PROPS","DEFAULT_OPTS","curve","speed","flyToViewport","startProps","endProps","opts","startZoom","startCenterXY","uDelta","w0","u1","S","rho","rho2","r0","getFlyToTransitionParams","startValue","endValue","step","s","w","cosh","tanh","sinh","newZoom","newCenterWorld","newCenter","getFlyToDuration","screenSpeed","maxDuration","duration","startCenter","startScale","endZoom","endCenter","endCenterXY","w1","_u1","b0","b1","r1","INF","TinySDF","fontSize","cutoff","fontFamily","fontWeight","fontStyle","_createCanvas","ctx","getContext","willReadFrequently","font","textBaseline","textAlign","fillStyle","gridOuter","Float64Array","gridInner","v","Uint16Array","document","createElement","char","glyphAdvance","actualBoundingBoxAscent","actualBoundingBoxDescent","actualBoundingBoxLeft","actualBoundingBoxRight","measureText","glyphTop","ceil","glyphWidth","glyphHeight","Uint8ClampedArray","glyph","glyphLeft","clearRect","fillText","imgData","getImageData","fill","d","edt","round","gridSize","edt1d","grid","stride","q","q2","r","qr","VectorTile","IDENTITY","ZERO","INDICES","COL0ROW0","COL0ROW1","COL0ROW2","COL0ROW3","COL1ROW0","COL1ROW1","COL1ROW2","COL1ROW3","COL2ROW0","COL2ROW1","COL2ROW2","COL2ROW3","COL3ROW0","COL3ROW1","COL3ROW2","COL3ROW3","Matrix","super","arguments","identity","check","m00","m10","m20","m30","m01","m11","m21","m31","m02","m12","m22","m32","m03","m13","m23","m33","setRowMajor","toRowMajor","fromQuaternion","frustum","_computeInfinitePerspectiveOffCenter","column0Row0","column1Row1","column2Row0","column2Row1","column3Row2","lookAt","eye","ortho","orthographic","halfY","perspective","determinant","getScale","getTranslation","getRotation","scaleResult","inverseScale0","inverseScale1","inverseScale2","getRotationMatrix3","transpose","invert","multiplyLeft","multiplyRight","rotateX","radians","rotateY","rotateZ","rotateXYZ","rx","ry","rz","rotateAxis","axis","factor","vec","transform","checkVector","transformAsPoint","transformAsVector","vec2_transformMat4AsVector","vec3_transformMat4AsVector","makeRotationX","makeTranslation","transformPoint","deprecated","transformDirection","SphericalMercator","cache","D2R","R2D","MAXEXTENT","isFloat","n","c","Bc","Cc","zc","Ac","px","bc","cc","ac","g","tms_style","srs","ur","convert","px_ll","px_ur","floor","minX","apply","minY","maxX","maxY","tms","forward","inverse","readTile","layers","_add","sub","_sub","multByPoint","_multByPoint","divByPoint","_divByPoint","mult","_mult","_div","rotate","_rotate","rotateAround","_rotateAround","matMult","_matMult","unit","_unit","perp","_perp","_round","mag","other","distSqr","angleTo","angleWith","angleWithSep","NONE","FORWARD","BACKWARD","BOTH","ResizeCircleMode","handles","selectedFeatureIndexes","_isResizing","featureAsPick","pick","isGuide","object","shape","includes","intermediatePoint","positionIndexPrefix","referencePoint","lineStringFeature","candidateIntermediatePoint","getNearestPoint","nearestPointOnProjectedLine","editHandle","editHandleProperties","numberOfSteps","entries","steps","cursor","getCursor","DuplicateMode","_geometryBeforeTranslate","getAddManyFeaturesAction","_isTranslatable","TranslateMode","ExtendLineStringMode","getSelectedGeometry","selectedLineString","getSingleSelectedLineString","drawAtFront","addPosition","startPosition","SplitPolygonMode","lock90Degree","firstPoint","MAX_SAFE_INTEGER","closestPoint","snapPoint","distanceFromOrigin","lastBearing","currentDistance","units","lastPoint","approximatePoint","generatePointsParallelToLinePoints","calculateMapCoords","isPointInPolygon","splitPolygon","gap","updatedCoordinates","reduce","agg","prev","ExtrudeMode","coordinatesSize","isPointAdded","nextPositionIndexes","getPointForPositionIndexes","prevPositionIndexes","replacePosition","getPickedIntermediateEditHandle","isOrthogonal","prevPoint","nextPoint","prevAngle","getBearing","nextAngle","next","ModifyMode","defaultCalculateElevationChange","ElevationMode","minElevation","maxElevation","calculateElevationChange","elevation","makeElevatedEvent","TransformMode","updatedCursor","scaleMode","translateMode","filteredModes","isEditHandleSelected","filter","compositeGuides","rotateMode","nonEnvelopeGuides","guide","guidesToFilterOut","getIsRotating","DrawPointMode","DrawLineStringMode","clickedEditHandle","positionAdded","lineStringToAdd","editHandles","clickedCoord","DrawRectangleMode","rectangle","TwoClickPolygonMode","DrawRectangleFromCenterMode","DrawSquareFromCenterMode","coord4","distance1","distance2","shortestDistance","corner","square","DrawCircleByDiameterMode","centerCoordinates","DrawCircleFromCenterMode","DrawEllipseByBoundingBoxMode","polygonPoints","xSemiAxis","ySemiAxis","DrawEllipseUsingThreePointsMode","DrawRectangleUsingThreePointsMode","Draw90DegreePolygonMode","getEditHandlesForGeometry","polygonToAdd","finalizedCoordinates","fakePointerMoveEvent","getIntermediatePoint","tc","splice","angle1","angle2","angles","first","second","newAngle1","newAngle2","indexFirst","line1","indexSecond","line2","fc","DrawPolygonByDraggingMode","throttleMs","handleDraggingThrottled","handleDraggingAux","cancel","DrawPolygonMode","ViewMode","MeasureDistanceMode","positionA","positionB","turfOptions","measurementCallback","formatTooltip","parseFloat","toFixed","_isMeasuringSessionFinished","_currentTooltips","_currentDistance","_calculateDistanceForTooltip","text","_formatTooltip","stopPropagation","clickSequenceLength","positions","MeasureAreaMode","propsWithoutEdit","tentativeGuide","MeasureAngleMode","vertex","point1","point2","tooltips","getPoints","_getTooltips","SnappableMode","_handler","snapSource","snapTarget","handle","getPickedSnapSourceEditHandle","snapSourceHandle","snapSourceFeature","additionalSnapTargets","_getSnapTargets","enableSnapping","_getPickedSnapSource","_getSnapTargetHandles","_getUpdatedSnapSourceHandle","_getPickedSnapTarget","_getSnappedMouseEvent","_getSnapAwareEvent","defaultProps","pickingLineWidthExtraPixels","EditablePathLayer","inject","layerName","DEFAULT_EDIT_MODE","EMPTY_FEATURE_COLLECTION","EditableGeoJsonLayer","filled","stroked","lineWidthScale","PROJECTED_PIXEL_SIZE_MULTIPLIER","lineWidthMinPixels","lineWidthMaxPixels","lineWidthUnits","getHexagons","hexIds","getEditedCluster","updatedHexagons","existingCluster","resolution","EditableH3ClusterLayer","tentativeHexagonIDs","polyfill","geoToH3","getSubLayerProps","hexIDs","getDerivedHexagonIDs","hexID","getDerivedHexagonID","finalHexagonIDs","committedHexagonIDs","getSelectedHexIDs","H3ClusterLayer","cumulativeHexIDs","selectedCluster","isDragging","SELECTION_TYPE","RECTANGLE","POLYGON","MODE_MAP","MODE_CONFIG_MAP","dragToDraw","selectionType","onSelect","EMPTY_DATA","PASS_THROUGH_PROPS","SelectionLayer","pickingInfos","pickObjects","bigPolygon","mousePoints","allX","mousePoint","allY","landPointsPoly","bigBuffer","e","pendingPolygonSelection","blockerId","setTimeout","item","inheritedProps","pickable","_selectRectangleObjects","_selectPolygonObjects","PolygonLayer","opacity","getLineColor","getFillColor","getPolygon","o","changeFlags","stateChanged","propsOrDataChanged","ElevatedEditHandleLayer","ScatterplotLayer","LineLayer","getSourcePosition","getTargetPosition","getColor","getStrokeWidth","INITIAL_STATE","getUniforms","outline_uEnabled","outline_uRenderOutlines","outline_uShadowmap","DEFAULT_MARKER_LAYER","SimpleMeshLayer","DEFAULT_MARKER_LAYER_PROPS","mesh","Arrow2DGeometry","headSize","tailWidth","MarkerLayer","markerLayerProps","sizeScale","fp64","highlightIndex","highlightPoint","getPath","path","getMarkerColor","getDirection","direction","getMarkerPercentages","PathMarkerLayer","markers","coordinateSystem","coordinateOrigin","COORDINATE_SYSTEM","METER_OFFSETS","metersToLngLatDelta","LNGLAT_OFFSETS","oldProps","dataChanged","updateTriggersChanged","_recalculateClosestPoint","propsChanged","getClosestPointOnPolyline","closestPoints","info","getOrientation","blend","attributes","getArrowAttributes","Geometry","tailStart","texCoords","i3","Float32Array","normals","DEFAULT_COLOR","DEFAULT_DIRECTION","vPoints","Vector2","vPointsReverse","reverse","getLineLength","percentage","marker","createMarkerAlongPath","backward","distanceAlong","previousDistance","beforeLastPoint","along","vCenter","multiply","verticalAngle","pClosest","distanceSquared","pClosestOnLine","getClosestPointOnLine","distanceToLineSquared","clampToLine","lineVector","pointVector","dotProduct","clamp","lerp","JunctionScatterplotLayer","getStrokeColor","getInnerRadius","updateTriggers","getRadius","formatValue","precision","EPSILON","toPrecision","ArrayBuffer","isView","DataView","degrees","epsilon","oldEpsilon","debug","printTypes","printDegrees","printRowMajor","mercator","flattenEach","minDist","segmentIdx","getCoords","pointCoords","lineCoordinates","pointCoordinate","lineCoordinate","slope","inverseSlope","rl2","ln2","lnm12","dist2","calcrl2","idx","pixelToLatLong","getEditHandlesForCoordinates","editHandleIndex","p0","isNaN","xtend","file","window","global","Blob","pipe","date","Date","getTime","tuple","number","assertShape","validatorObj","apiName","strictShape","isPlainObject","createArrayValidator","validators","validatingTuple","validationResult","validate","plainArray","validator","processMessage","formatErrorMessage","nounPhrase","test","addArticle","prettifyResult","orList","list","join","prettyResult","isArrayCulprit","rootValidator","errorMessage","plainObject","errorMessages","objectId","shapeValidator","shapeResult","invalidKeys","memo","valueKey","arrayOf","required","requiredValidator","__required","oneOfType","messages","every","arr","equal","compareWith","stringify","oneOf","range","any","boolean","string","val","objectMap","_","cb","createClient","ServicePrototype","clientOrConfig","isPrototypeOf","service","create","EventEmitter","urlUtils","requestId","method","defaultHeaders","body","headersWithDefaults","headers","toLowerCase","_options","emitter","response","error","sent","aborted","query","params","encoding","sendFileAs","url","prependOrigin","appendQueryObject","routeParams","actualAccessToken","appendQueryParam","accessTokenOwnerId","ownerId","interpolateRouteParams","send","self","sendRequest","then","emit","EVENT_RESPONSE","EVENT_ERROR","abort","_nextPageRequest","abortRequest","eachPage","handleResponse","nextPageRequest","nextPage","getPage","handleError","request","_extend","extendedOptions","encodeValue","encodeURIComponent","String","punctuation","queryObject","delimiter","route","paramId","browser","BrowserClient","browserSend","browserAbort","MapiResponse","MapiError","parseHeaders","requestsUnderway","normalizeBrowserProgressEvent","total","transferred","loaded","percent","sendRequestXhr","xhr","Promise","resolve","reject","onprogress","EVENT_PROGRESS_DOWNLOAD","upload","EVENT_PROGRESS_UPLOAD","onerror","onabort","mapiError","ERROR_REQUEST_ABORTED","onload","status","statusCode","getAllResponseHeaders","createResponse","createRequestXhr","XMLHttpRequest","open","setRequestHeader","parseLinkHeader","responseData","rawBody","links","link","hasNextPage","linkHeader","parsed","match","linkUrl","linkParams","rel","parsedLinkParams","param","parseParam","parseLink","errorType","ERROR_HTTP","raw","trim","rawHeader","boundary","substring","parseSingleHeader","IDENTITY_QUATERNION","Quaternion","MathArray","fromMatrix3","quat","fromAxisRotation","rad","setAxisAngle","checkNumber","lengthSquared","rotationTo","vectorA","vectorB","calculateW","conjugate","l","slerp","start","target","transformVector4","lengthSq","setFromAxisAngle","premultiply","EPSILON2","EPSILON3","EPSILON4","EPSILON5","EPSILON6","EPSILON7","EPSILON8","EPSILON9","EPSILON10","EPSILON11","EPSILON13","EPSILON14","EPSILON16","EPSILON17","EPSILON18","EPSILON19","EPSILON20","PI_OVER_TWO","PI_OVER_FOUR","PI_OVER_SIX","TWO_PI","Matrix3","mat3","vec4_transformMat3","transformVector2","transformVector3","Vector","fromObject","toObject","horizontalAngle","matrix4","transformByMatrix3","matrix3","transformByMatrix2x3","matrix2x3","transformByMatrix2","matrix2","updatedPosition","isPolygonal","immutablyReplacePosition","immutablyRemovePosition","holeIndex","removeHoleIfNecessary","prunePolygonIfNecessary","lineStringIndex","pruneMultiLineStringIfNecessary","polygonIndex","pruneMultiPolygonIfNecessary","pruneGeometryIfNecessary","positionToAdd","immutablyAddPosition","updatedFeature","addFeatures","deleteFeatures","sort","getUpdatedPosition","previousPosition","updated","out","vec3_transformMat2","INTERSECTION","ELEMENTS","toArray","targetArray","arrayOrObject","toTarget","toFloat32Array","formatString","exactEquals","negate","ai","minVector","maxVector","vectors","multiplyByScalar","scalar","valid","setScalar","addScalar","subScalar","divideScalar","clampScalar","callerName","validateVector","magnitude","magnitudeSquared","mathArray","product","divide","distanceTo","distanceToSquared","getComponent","setComponent","addVectors","subVectors","multiplyVectors","addScaledVector","ARRAY_TYPE","random","fromValues","ax","ay","az","bx","by","bz","transformMat4","transformMat3","transformQuat","qx","qy","qz","qw","uvx","uvy","uvz","uuvx","uuvy","uuvz","w2","hypot","ORIGIN","cosine","acos","transformByQuaternion","quaternion","AxisAlignedBoundingBox","minimum","maximum","halfDiagonal","intersectPlane","plane","distanceSquaredTo","getScaling","mat","BoundingSphere","fromCenterRadius","fromCornerPoints","oppositeCorner","union","boundingSphere","leftCenter","leftRadius","rightCenter","rightRadius","toRightCenter","centerSeparation","halfDistanceBetweenTangentPoints","expand","delta","distanceToPlane","row","RANK","col","getElementIndex","getElement","setElement","getColumn","columnIndex","firstIndex","setColumn","columnVector","a00","a01","a02","a10","a11","a12","a20","a21","a22","b00","b01","b02","b10","b11","b12","b20","b21","b22","IDENTITY_MATRIX","IDENTITY_MATRIX3","getIdentityMatrix","ZERO_MATRIX3","getZeroMatrix","xx","yx","yy","zx","zy","zz","wx","wy","wz","det","Vector4","vec4_transformMat2","applyMatrix4","aw","bw","omega","cosom","sinom","scale0","scale1","fromMat3","fRoot","fTrace","tmpvec3","xUnitVec3","yUnitVec3","temp1","temp2","matr","a0","a1","a2","a3","invDot","arg0","arg1","arg2","ix","iy","iz","iw","scratchOffset","scratchVectorU","scratchVectorV","scratchVectorW","scratchCorner","scratchToCenter","MATRIX3","OrientedBoundingBox","halfAxes","xAxis","yAxis","zAxis","normXAxis","normYAxis","normZAxis","fromCenterHalfSizeQuaternion","halfSize","quaternionObject","directionsMatrix","getBoundingSphere","cornerVector","normalX","normalY","normalZ","radEffective","uHalf","vHalf","wHalf","computePlaneDistances","POSITIVE_INFINITY","maxDist","NEGATIVE_INFINITY","toCenter","transformation","getTransform","Plane","fromNormalDistance","fromPointNormal","fromCoefficients","getPointDistance","projectPointOntoPlane","pointDistance","scaledNormal","faces","scratchPlaneCenter","scratchPlaneNormal","CullingVolume","planes","fromBoundingSphere","planeIndex","faceNormal","plane0","plane1","plane0Center","plane1Center","negatedFaceNormal","computeVisibility","boundingVolume","intersect","computeVisibilityWithPlaneMask","parentPlaneMask","MASK_OUTSIDE","MASK_INSIDE","mask","flag","scratchMatrix","scratchUnitary","scratchDiagonal","jMatrix","jMatrixTranspose","computeEigenDecomposition","EIGEN_TOLERANCE","count","sweep","unitaryMatrix","diagonalMatrix","norm","temp","computeFrobeniusNorm","offDiagonalFrobeniusNorm","shurDecomposition","unitary","diagonal","rowVal","colVal","tolerance","maxDiagonal","rotAxis","tau","scratchVector4","scratchVector5","scratchVector6","scratchCovarianceResult","scratchEigenResult","makeOrientedBoundingBoxFromPoints","meanPoint","invLength","exx","exy","exz","eyy","eyz","ezz","covarianceMatrix","rotation","v1","v2","v3","MAX_VALUE","u2","u3","l1","l2","l3","scaleMatrix","checkAndFinishPolygon","corner1","corner2","getTwoClickPolygon","smCache","fetchMerc","tileSize","dimensions","minzoom","maxzoom","allowFloat","merc","bl","tr","centerPixelX","centerPixelY","ratios","adjusted","getAdjusted","lon","tl","br","gj","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","Feature","FeatureCollection","getPolygonSignedArea","dim","earcut","holeIndices","areas","hasHoles","outerLen","outerNode","linkedList","triangles","invSize","queue","steiner","getLeftmost","compareX","eliminateHole","filterPoints","eliminateHoles","earcutLinked","clockwise","last","insertNode","removeNode","again","ear","pass","zOrder","prevZ","nextZ","numMerges","pSize","qSize","tail","inSize","sortLinked","indexCurve","stop","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minTX","minTY","maxTX","maxTY","minZ","maxZ","intersects","locallyInside","isValidDiagonal","hole","hx","hy","mx","my","tanMin","sectorContainsSector","findHoleBridge","leftmost","cx","cy","py","intersectsPolygon","inside","middleInside","q1","o1","o2","o3","o4","onSegment","num","Node","b2","an","bp","a03","a13","a23","DEFAULT_ALTITUDE","relativeScale","fovRadians","cameraToSeaLevelDistance","fovAboveCenter","furthestDistance","horizonDistance","getPaddingObject","DEFAULT_LINE_COLOR","DEFAULT_FILL_COLOR","DEFAULT_SELECTED_LINE_COLOR","DEFAULT_SELECTED_FILL_COLOR","DEFAULT_TENTATIVE_LINE_COLOR","DEFAULT_TENTATIVE_FILL_COLOR","DEFAULT_EDITING_EXISTING_POINT_COLOR","DEFAULT_EDITING_INTERMEDIATE_POINT_COLOR","DEFAULT_EDITING_SNAP_POINT_COLOR","DEFAULT_EDITING_POINT_OUTLINE_COLOR","DEFAULT_TOOLTIP_FONT_SIZE","guideAccessor","guideMaybeWrapped","__source","sourceFeature","unwrapGuide","getEditHandleColor","lineJointRounded","lineCapRounded","lineMiterLimit","pointRadiusScale","pointRadiusMinPixels","pointRadiusMaxPixels","isSelected","getLineWidth","lineWidth","getTentativeLineColor","getTentativeFillColor","getTentativeLineWidth","editHandlePointRadiusScale","editHandlePointOutline","editHandlePointStrokeWidth","editHandlePointRadiusUnits","editHandlePointRadiusMinPixels","editHandlePointRadiusMaxPixels","getEditHandlePointColor","getEditHandlePointOutlineColor","getEditHandlePointRadius","editHandleIconAtlas","editHandleIconMapping","editHandleIconSizeScale","editHandleIconSizeUnits","getEditHandleIcon","getEditHandleIconSize","getEditHandleIconColor","getEditHandleIconAngle","modeNameMapping","view","modify","duplicate","extrude","drawPoint","drawLineString","drawPolygon","drawRectangle","drawRectangleFromCenter","drawSquareFromCenter","drawCircleFromCenter","drawCircleByBoundingBox","drawEllipseByBoundingBox","drawRectangleUsing3Points","drawEllipseUsing3Points","draw90DegreePolygon","drawPolygonByDragging","subLayerProps","selectionAwareAccessor","getPointRadius","_subLayerProps","linestrings","all","GeoJsonLayer","createGuidesLayers","createTooltipsLayers","selectedFeatures","ModeConstructor","elem","setNeedsUpdate","isFeatureSelected","sourceLayer","endsWith","getSubLayers","updateAutoHighlight","getActiveMode","getModeProps","autoHighlight","IconLayer","iconAtlas","iconMapping","sizeUnits","getIcon","getSize","getAngle","radiusScale","radiusUnits","radiusMinPixels","radiusMaxPixels","pointType","getTooltips","TextLayer","handleKeyUp","getPickedExistingEditHandle","lockRectangles","nearestPointOnLine","pickedExistingHandle","pickedIntermediateHandle","removePosition","ignored","_dragEditHandle","editedFeature","updateRectanglePosition","getTranslateAction","isSelectionPicked","viewportDesc","screenSpace","pixels","distanceMoved","movedFeatures","common","meters","stringifyBooleans","createServiceFactory","Geocoding","featureTypes","forwardGeocode","countries","proximity","autocomplete","limit","language","routing","fuzzyMatch","worldview","country","reverseGeocode","reverseMode","getSunPosition","timestamp","longitudeWestInRadians","phi","toJulianDay","toDays","dates","L","meanAnomaly","M","getEclipticLongitude","days","declination","getDeclination","rightAscension","getRightAscension","getSunCoords","H","getSiderealTime","azimuth","getAzimuth","getAltitude","getSunDirection","eclipticLongitude","hourAngle","latitudeInRadians"],"mappings":"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","file":"8.bundle.js","sourcesContent":["// This file is derived from the Cesium math library under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nexport const WGS84_RADIUS_X = 6378137.0;\nexport const WGS84_RADIUS_Y = 6378137.0;\nexport const WGS84_RADIUS_Z = 6356752.3142451793;\n\n// Pre-calculated ellipsoid defaults to avoid utils depending on `ellipsoid.js`\n\nexport const WGS84_CONSTANTS = {\n  radii: [WGS84_RADIUS_X, WGS84_RADIUS_Y, WGS84_RADIUS_Z],\n  radiiSquared: [\n    WGS84_RADIUS_X * WGS84_RADIUS_X,\n    WGS84_RADIUS_Y * WGS84_RADIUS_Y,\n    WGS84_RADIUS_Z * WGS84_RADIUS_Z\n  ],\n  oneOverRadii: [1.0 / WGS84_RADIUS_X, 1.0 / WGS84_RADIUS_Y, 1.0 / WGS84_RADIUS_Z],\n  oneOverRadiiSquared: [\n    1.0 / (WGS84_RADIUS_X * WGS84_RADIUS_X),\n    1.0 / (WGS84_RADIUS_Y * WGS84_RADIUS_Y),\n    1.0 / (WGS84_RADIUS_Z * WGS84_RADIUS_Z)\n  ],\n  maximumRadius: Math.max(WGS84_RADIUS_X, WGS84_RADIUS_Y, WGS84_RADIUS_Z),\n  centerToleranceSquared: 1e-1 // EPSILON1;\n};\n","// This file is derived from the Cesium math library under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {Vector3, isArray, toRadians, toDegrees, config} from '@math.gl/core';\nimport {WGS84_CONSTANTS} from './constants';\n\nconst noop = (x) => x;\n\nconst scratchVector = new Vector3();\n\nexport function fromCartographic(cartographic, result, map = noop) {\n  if (isArray(cartographic)) {\n    result[0] = map(cartographic[0]);\n    result[1] = map(cartographic[1]);\n    result[2] = cartographic[2];\n  } else if ('longitude' in cartographic) {\n    result[0] = map(cartographic.longitude);\n    result[1] = map(cartographic.latitude);\n    result[2] = cartographic.height;\n  } else {\n    result[0] = map(cartographic.x);\n    result[1] = map(cartographic.y);\n    result[2] = cartographic.z;\n  }\n  return result;\n}\n\nexport function fromCartographicToRadians(cartographic, vector = scratchVector) {\n  return fromCartographic(cartographic, vector, config._cartographicRadians ? noop : toRadians);\n}\n\nexport function fromCartographicToDegrees(cartographic, vector = scratchVector) {\n  return fromCartographic(cartographic, vector, config._cartographicRadians ? toDegrees : noop);\n}\n\nexport function toCartographic(vector, cartographic, map = noop) {\n  if (isArray(cartographic)) {\n    cartographic[0] = map(vector[0]);\n    cartographic[1] = map(vector[1]);\n    cartographic[2] = vector[2];\n  } else if ('longitude' in cartographic) {\n    cartographic.longitude = map(vector[0]);\n    cartographic.latitude = map(vector[1]);\n    cartographic.height = vector[2];\n  } else {\n    cartographic.x = map(vector[0]);\n    cartographic.y = map(vector[1]);\n    cartographic.z = vector[2];\n  }\n  return cartographic;\n}\n\nexport function toCartographicFromRadians(vector, cartographic) {\n  return toCartographic(vector, cartographic, config._cartographicRadians ? noop : toDegrees);\n}\n\nexport function toCartographicFromDegrees(vector, cartographic) {\n  return toCartographic(vector, cartographic, config._cartographicRadians ? toRadians : noop);\n}\n\nexport function isWGS84(vector) {\n  if (!vector) {\n    return false;\n  }\n  scratchVector.from(vector);\n  const {oneOverRadiiSquared, centerToleranceSquared} = WGS84_CONSTANTS;\n  const x2 = vector[0] * vector[0] * oneOverRadiiSquared[0];\n  const y2 = vector[1] * vector[1] * oneOverRadiiSquared[1];\n  const z2 = vector[2] * vector[2] * oneOverRadiiSquared[2];\n  return Math.abs(x2 + y2 + z2 - 1) < centerToleranceSquared;\n}\n","/* eslint-disable */\nimport {Vector3, assert, _MathUtils} from '@math.gl/core';\nimport * as vec3 from 'gl-matrix/vec3';\n\nconst scratchVector = new Vector3();\nconst scaleToGeodeticSurfaceIntersection = new Vector3();\nconst scaleToGeodeticSurfaceGradient = new Vector3();\n\n// Scales the provided Cartesian position along the geodetic surface normal\n// so that it is on the surface of this ellipsoid.  If the position is\n// at the center of the ellipsoid, this function returns undefined.\nexport default function scaleToGeodeticSurface(cartesian, ellipsoid, result = new Vector3()) {\n  const {oneOverRadii, oneOverRadiiSquared, centerToleranceSquared} = ellipsoid;\n\n  scratchVector.from(cartesian);\n\n  const positionX = cartesian.x;\n  const positionY = cartesian.y;\n  const positionZ = cartesian.z;\n\n  const oneOverRadiiX = oneOverRadii.x;\n  const oneOverRadiiY = oneOverRadii.y;\n  const oneOverRadiiZ = oneOverRadii.z;\n\n  const x2 = positionX * positionX * oneOverRadiiX * oneOverRadiiX;\n  const y2 = positionY * positionY * oneOverRadiiY * oneOverRadiiY;\n  const z2 = positionZ * positionZ * oneOverRadiiZ * oneOverRadiiZ;\n\n  // Compute the squared ellipsoid norm.\n  const squaredNorm = x2 + y2 + z2;\n  const ratio = Math.sqrt(1.0 / squaredNorm);\n\n  // When very close to center or at center\n  if (!Number.isFinite(ratio)) {\n    return undefined;\n  }\n\n  // As an initial approximation, assume that the radial intersection is the projection point.\n  const intersection = scaleToGeodeticSurfaceIntersection;\n  intersection.copy(cartesian).scale(ratio);\n\n  // If the position is near the center, the iteration will not converge.\n  if (squaredNorm < centerToleranceSquared) {\n    return intersection.to(result);\n  }\n\n  const oneOverRadiiSquaredX = oneOverRadiiSquared.x;\n  const oneOverRadiiSquaredY = oneOverRadiiSquared.y;\n  const oneOverRadiiSquaredZ = oneOverRadiiSquared.z;\n\n  // Use the gradient at the intersection point in place of the true unit normal.\n  // The difference in magnitude will be absorbed in the multiplier.\n  const gradient = scaleToGeodeticSurfaceGradient;\n  gradient.set(\n    intersection.x * oneOverRadiiSquaredX * 2.0,\n    intersection.y * oneOverRadiiSquaredY * 2.0,\n    intersection.z * oneOverRadiiSquaredZ * 2.0\n  );\n\n  // Compute the initial guess at the normal vector multiplier, lambda.\n  let lambda = ((1.0 - ratio) * cartesian.len()) / (0.5 * gradient.len());\n  let correction = 0.0;\n\n  let xMultiplier;\n  let yMultiplier;\n  let zMultiplier;\n  let func;\n\n  do {\n    lambda -= correction;\n\n    xMultiplier = 1.0 / (1.0 + lambda * oneOverRadiiSquaredX);\n    yMultiplier = 1.0 / (1.0 + lambda * oneOverRadiiSquaredY);\n    zMultiplier = 1.0 / (1.0 + lambda * oneOverRadiiSquaredZ);\n\n    const xMultiplier2 = xMultiplier * xMultiplier;\n    const yMultiplier2 = yMultiplier * yMultiplier;\n    const zMultiplier2 = zMultiplier * zMultiplier;\n\n    const xMultiplier3 = xMultiplier2 * xMultiplier;\n    const yMultiplier3 = yMultiplier2 * yMultiplier;\n    const zMultiplier3 = zMultiplier2 * zMultiplier;\n\n    func = x2 * xMultiplier2 + y2 * yMultiplier2 + z2 * zMultiplier2 - 1.0;\n\n    // \"denominator\" here refers to the use of this expression in the velocity and acceleration\n    // computations in the sections to follow.\n    const denominator =\n      x2 * xMultiplier3 * oneOverRadiiSquaredX +\n      y2 * yMultiplier3 * oneOverRadiiSquaredY +\n      z2 * zMultiplier3 * oneOverRadiiSquaredZ;\n\n    const derivative = -2.0 * denominator;\n\n    correction = func / derivative;\n  } while (Math.abs(func) > _MathUtils.EPSILON12);\n\n  return scratchVector.scale([xMultiplier, yMultiplier, zMultiplier]).to(result);\n}\n","import {Vector3, assert, equals as equalsEpsilon} from '@math.gl/core';\n\nconst EPSILON14 = 1e-14;\n\nconst scratchOrigin = new Vector3();\n\n// Caclulate third axis from given two axii\nconst VECTOR_PRODUCT_LOCAL_FRAME = {\n  up: {\n    south: 'east',\n    north: 'west',\n    west: 'south',\n    east: 'north'\n  },\n  down: {\n    south: 'west',\n    north: 'east',\n    west: 'north',\n    east: 'south'\n  },\n  south: {\n    up: 'west',\n    down: 'east',\n    west: 'down',\n    east: 'up'\n  },\n  north: {\n    up: 'east',\n    down: 'west',\n    west: 'up',\n    east: 'down'\n  },\n  west: {\n    up: 'north',\n    down: 'south',\n    north: 'down',\n    south: 'up'\n  },\n  east: {\n    up: 'south',\n    down: 'north',\n    north: 'up',\n    south: 'down'\n  }\n};\n\nconst degeneratePositionLocalFrame = {\n  north: [-1, 0, 0],\n  east: [0, 1, 0],\n  up: [0, 0, 1],\n  south: [1, 0, 0],\n  west: [0, -1, 0],\n  down: [0, 0, -1]\n};\n\nconst scratchAxisVectors = {\n  east: new Vector3(),\n  north: new Vector3(),\n  up: new Vector3(),\n  west: new Vector3(),\n  south: new Vector3(),\n  down: new Vector3()\n};\n\nconst scratchVector1 = new Vector3();\nconst scratchVector2 = new Vector3();\nconst scratchVector3 = new Vector3();\n\n// Computes a 4x4 transformation matrix from a reference frame\n// centered at the provided origin to the provided ellipsoid's fixed reference frame.\n// eslint-disable-next-line max-statements, max-params, complexity\nexport default function localFrameToFixedFrame(\n  ellipsoid,\n  firstAxis,\n  secondAxis,\n  thirdAxis,\n  cartesianOrigin,\n  result\n) {\n  const thirdAxisInferred =\n    VECTOR_PRODUCT_LOCAL_FRAME[firstAxis] && VECTOR_PRODUCT_LOCAL_FRAME[firstAxis][secondAxis];\n  // firstAxis and secondAxis must be east, north, up, west, south or down.');\n  assert(thirdAxisInferred && (!thirdAxis || thirdAxis === thirdAxisInferred));\n\n  let firstAxisVector;\n  let secondAxisVector;\n  let thirdAxisVector;\n\n  const origin = scratchOrigin.copy(cartesianOrigin);\n\n  // If x and y are zero, assume origin is at a pole, which is a special case.\n  const atPole = equalsEpsilon(origin.x, 0.0, EPSILON14) && equalsEpsilon(origin.y, 0.0, EPSILON14);\n\n  if (atPole) {\n    // Look up axis value and adjust\n    const sign = Math.sign(origin.z);\n\n    firstAxisVector = scratchVector1.fromArray(degeneratePositionLocalFrame[firstAxis]);\n    if (firstAxis !== 'east' && firstAxis !== 'west') {\n      firstAxisVector.scale(sign);\n    }\n\n    secondAxisVector = scratchVector2.fromArray(degeneratePositionLocalFrame[secondAxis]);\n    if (secondAxis !== 'east' && secondAxis !== 'west') {\n      secondAxisVector.scale(sign);\n    }\n\n    thirdAxisVector = scratchVector3.fromArray(degeneratePositionLocalFrame[thirdAxis]);\n    if (thirdAxis !== 'east' && thirdAxis !== 'west') {\n      thirdAxisVector.scale(sign);\n    }\n  } else {\n    // Calculate all axis\n    const {up, east, north} = scratchAxisVectors;\n\n    east.set(-origin.y, origin.x, 0.0).normalize();\n    ellipsoid.geodeticSurfaceNormal(origin, up);\n    north.copy(up).cross(east);\n\n    const {down, west, south} = scratchAxisVectors;\n\n    down.copy(up).scale(-1);\n    west.copy(east).scale(-1);\n    south.copy(north).scale(-1);\n\n    // Pick three axis based on desired orientation\n    firstAxisVector = scratchAxisVectors[firstAxis];\n    secondAxisVector = scratchAxisVectors[secondAxis];\n    thirdAxisVector = scratchAxisVectors[thirdAxis];\n  }\n\n  // TODO - assuming the result is column-major\n  result[0] = firstAxisVector.x;\n  result[1] = firstAxisVector.y;\n  result[2] = firstAxisVector.z;\n  result[3] = 0.0;\n  result[4] = secondAxisVector.x;\n  result[5] = secondAxisVector.y;\n  result[6] = secondAxisVector.z;\n  result[7] = 0.0;\n  result[8] = thirdAxisVector.x;\n  result[9] = thirdAxisVector.y;\n  result[10] = thirdAxisVector.z;\n  result[11] = 0.0;\n  result[12] = origin.x;\n  result[13] = origin.y;\n  result[14] = origin.z;\n  result[15] = 1.0;\n  return result;\n}\n","// This file is derived from the Cesium math library under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\n/* eslint-disable */\nimport {Vector3, Matrix4, toRadians, toDegrees, assert, equals, _MathUtils} from '@math.gl/core';\nimport * as vec3 from 'gl-matrix/vec3';\n\nimport {WGS84_RADIUS_X, WGS84_RADIUS_Y, WGS84_RADIUS_Z} from '../constants';\nimport {fromCartographicToRadians, toCartographicFromRadians} from '../type-utils';\n\nimport scaleToGeodeticSurface from './helpers/scale-to-geodetic-surface';\nimport localFrameToFixedFrame from './helpers/ellipsoid-transform';\n\nconst scratchVector = new Vector3();\nconst scratchNormal = new Vector3();\nconst scratchK = new Vector3();\nconst scratchPosition = new Vector3();\nconst scratchHeight = new Vector3();\nconst scratchCartesian = new Vector3();\n\nlet wgs84;\n\n// A quadratic surface defined in Cartesian coordinates by the equation\n// <code>(x / a)^2 + (y / b)^2 + (z / c)^2 = 1</code>.  Primarily used\n// to represent the shape of planetary bodies.\nexport default class Ellipsoid {\n  // An Ellipsoid instance initialized to the WGS84 standard.\n  static get WGS84() {\n    wgs84 = wgs84 || new Ellipsoid(WGS84_RADIUS_X, WGS84_RADIUS_Y, WGS84_RADIUS_Z);\n    return wgs84;\n  }\n\n  // Creates an Ellipsoid from a Cartesian specifying the radii in x, y, and z directions.\n  constructor(x = 0.0, y = 0.0, z = 0.0) {\n    assert(x >= 0.0);\n    assert(y >= 0.0);\n    assert(z >= 0.0);\n\n    this.radii = new Vector3(x, y, z);\n\n    this.radiiSquared = new Vector3(x * x, y * y, z * z);\n\n    this.radiiToTheFourth = new Vector3(x * x * x * x, y * y * y * y, z * z * z * z);\n\n    this.oneOverRadii = new Vector3(\n      x === 0.0 ? 0.0 : 1.0 / x,\n      y === 0.0 ? 0.0 : 1.0 / y,\n      z === 0.0 ? 0.0 : 1.0 / z\n    );\n\n    this.oneOverRadiiSquared = new Vector3(\n      x === 0.0 ? 0.0 : 1.0 / (x * x),\n      y === 0.0 ? 0.0 : 1.0 / (y * y),\n      z === 0.0 ? 0.0 : 1.0 / (z * z)\n    );\n\n    this.minimumRadius = Math.min(x, y, z);\n\n    this.maximumRadius = Math.max(x, y, z);\n\n    this.centerToleranceSquared = _MathUtils.EPSILON1;\n\n    if (this.radiiSquared.z !== 0) {\n      this.squaredXOverSquaredZ = this.radiiSquared.x / this.radiiSquared.z;\n    }\n\n    Object.freeze(this);\n  }\n\n  // Compares this Ellipsoid against the provided Ellipsoid componentwise and returns\n  equals(right) {\n    return this === right || Boolean(right && this.radii.equals(right.radii));\n  }\n\n  // Creates a string representing this Ellipsoid in the format '(radii.x, radii.y, radii.z)'.\n  toString() {\n    return this.radii.toString();\n  }\n\n  // Converts the provided cartographic to Cartesian representation.\n  cartographicToCartesian(cartographic, result = [0, 0, 0]) {\n    const normal = scratchNormal;\n    const k = scratchK;\n\n    const [, , height] = cartographic;\n    this.geodeticSurfaceNormalCartographic(cartographic, normal);\n    k.copy(this.radiiSquared).scale(normal);\n\n    const gamma = Math.sqrt(normal.dot(k));\n    k.scale(1 / gamma);\n\n    normal.scale(height);\n\n    k.add(normal);\n\n    return k.to(result);\n  }\n\n  // Converts the provided cartesian to cartographic (lng/lat/z) representation.\n  // The cartesian is undefined at the center of the ellipsoid.\n  cartesianToCartographic(cartesian, result = [0, 0, 0]) {\n    scratchCartesian.from(cartesian);\n    const point = this.scaleToGeodeticSurface(scratchCartesian, scratchPosition);\n\n    if (!point) {\n      return undefined;\n    }\n\n    const normal = this.geodeticSurfaceNormal(point, scratchNormal);\n\n    const h = scratchHeight;\n    h.copy(scratchCartesian).subtract(point);\n\n    const longitude = Math.atan2(normal.y, normal.x);\n    const latitude = Math.asin(normal.z);\n    const height = Math.sign(vec3.dot(h, scratchCartesian)) * vec3.length(h);\n\n    return toCartographicFromRadians([longitude, latitude, height], result);\n  }\n\n  // Computes a 4x4 transformation matrix from a reference frame with an east-north-up axes\n  // centered at the provided origin to the provided ellipsoid's fixed reference frame.\n  eastNorthUpToFixedFrame(origin, result = new Matrix4()) {\n    return localFrameToFixedFrame(this, 'east', 'north', 'up', origin, result);\n  }\n\n  // Computes a 4x4 transformation matrix from a reference frame centered at\n  // the provided origin to the ellipsoid's fixed reference frame.\n  localFrameToFixedFrame(firstAxis, secondAxis, thirdAxis, origin, result = new Matrix4()) {\n    return localFrameToFixedFrame(this, firstAxis, secondAxis, thirdAxis, origin, result);\n  }\n\n  // Computes the unit vector directed from the center of this ellipsoid toward\n  // the provided Cartesian position.\n  geocentricSurfaceNormal(cartesian, result = [0, 0, 0]) {\n    return scratchVector.from(cartesian).normalize().to(result);\n  }\n\n  // Computes the normal of the plane tangent to the surface of the ellipsoid at provided position.\n  geodeticSurfaceNormalCartographic(cartographic, result = [0, 0, 0]) {\n    const cartographicVectorRadians = fromCartographicToRadians(cartographic);\n\n    const longitude = cartographicVectorRadians[0];\n    const latitude = cartographicVectorRadians[1];\n\n    const cosLatitude = Math.cos(latitude);\n\n    scratchVector\n      .set(cosLatitude * Math.cos(longitude), cosLatitude * Math.sin(longitude), Math.sin(latitude))\n      .normalize();\n\n    return scratchVector.to(result);\n  }\n\n  // Computes the normal of the plane tangent to the surface of the ellipsoid at the provided position.\n  geodeticSurfaceNormal(cartesian, result = [0, 0, 0]) {\n    return scratchVector.from(cartesian).scale(this.oneOverRadiiSquared).normalize().to(result);\n  }\n\n  // Scales the provided Cartesian position along the geodetic surface normal\n  // so that it is on the surface of this ellipsoid.  If the position is\n  // at the center of the ellipsoid, this function returns undefined.\n  scaleToGeodeticSurface(cartesian, result) {\n    return scaleToGeodeticSurface(cartesian, this, result);\n  }\n\n  // Scales the provided Cartesian position along the geocentric surface normal\n  // so that it is on the surface of this ellipsoid.\n  scaleToGeocentricSurface(cartesian, result = [0, 0, 0]) {\n    scratchPosition.from(cartesian);\n\n    const positionX = scratchPosition.x;\n    const positionY = scratchPosition.y;\n    const positionZ = scratchPosition.z;\n    const oneOverRadiiSquared = this.oneOverRadiiSquared;\n\n    const beta =\n      1.0 /\n      Math.sqrt(\n        positionX * positionX * oneOverRadiiSquared.x +\n          positionY * positionY * oneOverRadiiSquared.y +\n          positionZ * positionZ * oneOverRadiiSquared.z\n      );\n\n    return scratchPosition.multiplyScalar(beta).to(result);\n  }\n\n  // Transforms a Cartesian X, Y, Z position to the ellipsoid-scaled space by multiplying\n  // its components by the result of `Ellipsoid#oneOverRadii`\n  transformPositionToScaledSpace(position, result = [0, 0, 0]) {\n    return scratchPosition.from(position).scale(this.oneOverRadii).to(result);\n  }\n\n  // Transforms a Cartesian X, Y, Z position from the ellipsoid-scaled space by multiplying\n  // its components by the result of `Ellipsoid#radii`.\n  transformPositionFromScaledSpace(position, result = [0, 0, 0]) {\n    return scratchPosition.from(position).scale(this.radii).to(result);\n  }\n\n  // Computes a point which is the intersection of the surface normal with the z-axis.\n  getSurfaceNormalIntersectionWithZAxis(position, buffer = 0.0, result = [0, 0, 0]) {\n    // Ellipsoid must be an ellipsoid of revolution (radii.x == radii.y)\n    assert(equals(this.radii.x, this.radii.y, _MathUtils.EPSILON15));\n    assert(this.radii.z > 0);\n\n    scratchPosition.from(position);\n    const z = scratchPosition.z * (1 - this.squaredXOverSquaredZ);\n\n    if (Math.abs(z) >= this.radii.z - buffer) {\n      return undefined;\n    }\n\n    return scratchPosition.set(0.0, 0.0, z).to(result);\n  }\n}\n","'use strict';\n\nvar VectorTileFeature = require('./vectortilefeature.js');\n\nmodule.exports = VectorTileLayer;\n\nfunction VectorTileLayer(pbf, end) {\n    // Public\n    this.version = 1;\n    this.name = null;\n    this.extent = 4096;\n    this.length = 0;\n\n    // Private\n    this._pbf = pbf;\n    this._keys = [];\n    this._values = [];\n    this._features = [];\n\n    pbf.readFields(readLayer, this, end);\n\n    this.length = this._features.length;\n}\n\nfunction readLayer(tag, layer, pbf) {\n    if (tag === 15) layer.version = pbf.readVarint();\n    else if (tag === 1) layer.name = pbf.readString();\n    else if (tag === 5) layer.extent = pbf.readVarint();\n    else if (tag === 2) layer._features.push(pbf.pos);\n    else if (tag === 3) layer._keys.push(pbf.readString());\n    else if (tag === 4) layer._values.push(readValueMessage(pbf));\n}\n\nfunction readValueMessage(pbf) {\n    var value = null,\n        end = pbf.readVarint() + pbf.pos;\n\n    while (pbf.pos < end) {\n        var tag = pbf.readVarint() >> 3;\n\n        value = tag === 1 ? pbf.readString() :\n            tag === 2 ? pbf.readFloat() :\n            tag === 3 ? pbf.readDouble() :\n            tag === 4 ? pbf.readVarint64() :\n            tag === 5 ? pbf.readVarint() :\n            tag === 6 ? pbf.readSVarint() :\n            tag === 7 ? pbf.readBoolean() : null;\n    }\n\n    return value;\n}\n\n// return feature `i` from this layer as a `VectorTileFeature`\nVectorTileLayer.prototype.feature = function(i) {\n    if (i < 0 || i >= this._features.length) throw new Error('feature index out of bounds');\n\n    this._pbf.pos = this._features[i];\n\n    var end = this._pbf.readVarint() + this._pbf.pos;\n    return new VectorTileFeature(this._pbf, end, this.extent, this._keys, this._values);\n};\n","'use strict';\n\nvar Point = require('@mapbox/point-geometry');\n\nmodule.exports = VectorTileFeature;\n\nfunction VectorTileFeature(pbf, end, extent, keys, values) {\n    // Public\n    this.properties = {};\n    this.extent = extent;\n    this.type = 0;\n\n    // Private\n    this._pbf = pbf;\n    this._geometry = -1;\n    this._keys = keys;\n    this._values = values;\n\n    pbf.readFields(readFeature, this, end);\n}\n\nfunction readFeature(tag, feature, pbf) {\n    if (tag == 1) feature.id = pbf.readVarint();\n    else if (tag == 2) readTag(pbf, feature);\n    else if (tag == 3) feature.type = pbf.readVarint();\n    else if (tag == 4) feature._geometry = pbf.pos;\n}\n\nfunction readTag(pbf, feature) {\n    var end = pbf.readVarint() + pbf.pos;\n\n    while (pbf.pos < end) {\n        var key = feature._keys[pbf.readVarint()],\n            value = feature._values[pbf.readVarint()];\n        feature.properties[key] = value;\n    }\n}\n\nVectorTileFeature.types = ['Unknown', 'Point', 'LineString', 'Polygon'];\n\nVectorTileFeature.prototype.loadGeometry = function() {\n    var pbf = this._pbf;\n    pbf.pos = this._geometry;\n\n    var end = pbf.readVarint() + pbf.pos,\n        cmd = 1,\n        length = 0,\n        x = 0,\n        y = 0,\n        lines = [],\n        line;\n\n    while (pbf.pos < end) {\n        if (length <= 0) {\n            var cmdLen = pbf.readVarint();\n            cmd = cmdLen & 0x7;\n            length = cmdLen >> 3;\n        }\n\n        length--;\n\n        if (cmd === 1 || cmd === 2) {\n            x += pbf.readSVarint();\n            y += pbf.readSVarint();\n\n            if (cmd === 1) { // moveTo\n                if (line) lines.push(line);\n                line = [];\n            }\n\n            line.push(new Point(x, y));\n\n        } else if (cmd === 7) {\n\n            // Workaround for https://github.com/mapbox/mapnik-vector-tile/issues/90\n            if (line) {\n                line.push(line[0].clone()); // closePolygon\n            }\n\n        } else {\n            throw new Error('unknown command ' + cmd);\n        }\n    }\n\n    if (line) lines.push(line);\n\n    return lines;\n};\n\nVectorTileFeature.prototype.bbox = function() {\n    var pbf = this._pbf;\n    pbf.pos = this._geometry;\n\n    var end = pbf.readVarint() + pbf.pos,\n        cmd = 1,\n        length = 0,\n        x = 0,\n        y = 0,\n        x1 = Infinity,\n        x2 = -Infinity,\n        y1 = Infinity,\n        y2 = -Infinity;\n\n    while (pbf.pos < end) {\n        if (length <= 0) {\n            var cmdLen = pbf.readVarint();\n            cmd = cmdLen & 0x7;\n            length = cmdLen >> 3;\n        }\n\n        length--;\n\n        if (cmd === 1 || cmd === 2) {\n            x += pbf.readSVarint();\n            y += pbf.readSVarint();\n            if (x < x1) x1 = x;\n            if (x > x2) x2 = x;\n            if (y < y1) y1 = y;\n            if (y > y2) y2 = y;\n\n        } else if (cmd !== 7) {\n            throw new Error('unknown command ' + cmd);\n        }\n    }\n\n    return [x1, y1, x2, y2];\n};\n\nVectorTileFeature.prototype.toGeoJSON = function(x, y, z) {\n    var size = this.extent * Math.pow(2, z),\n        x0 = this.extent * x,\n        y0 = this.extent * y,\n        coords = this.loadGeometry(),\n        type = VectorTileFeature.types[this.type],\n        i, j;\n\n    function project(line) {\n        for (var j = 0; j < line.length; j++) {\n            var p = line[j], y2 = 180 - (p.y + y0) * 360 / size;\n            line[j] = [\n                (p.x + x0) * 360 / size - 180,\n                360 / Math.PI * Math.atan(Math.exp(y2 * Math.PI / 180)) - 90\n            ];\n        }\n    }\n\n    switch (this.type) {\n    case 1:\n        var points = [];\n        for (i = 0; i < coords.length; i++) {\n            points[i] = coords[i][0];\n        }\n        coords = points;\n        project(coords);\n        break;\n\n    case 2:\n        for (i = 0; i < coords.length; i++) {\n            project(coords[i]);\n        }\n        break;\n\n    case 3:\n        coords = classifyRings(coords);\n        for (i = 0; i < coords.length; i++) {\n            for (j = 0; j < coords[i].length; j++) {\n                project(coords[i][j]);\n            }\n        }\n        break;\n    }\n\n    if (coords.length === 1) {\n        coords = coords[0];\n    } else {\n        type = 'Multi' + type;\n    }\n\n    var result = {\n        type: \"Feature\",\n        geometry: {\n            type: type,\n            coordinates: coords\n        },\n        properties: this.properties\n    };\n\n    if ('id' in this) {\n        result.id = this.id;\n    }\n\n    return result;\n};\n\n// classifies an array of rings into polygons with outer rings and holes\n\nfunction classifyRings(rings) {\n    var len = rings.length;\n\n    if (len <= 1) return [rings];\n\n    var polygons = [],\n        polygon,\n        ccw;\n\n    for (var i = 0; i < len; i++) {\n        var area = signedArea(rings[i]);\n        if (area === 0) continue;\n\n        if (ccw === undefined) ccw = area < 0;\n\n        if (ccw === area < 0) {\n            if (polygon) polygons.push(polygon);\n            polygon = [rings[i]];\n\n        } else {\n            polygon.push(rings[i]);\n        }\n    }\n    if (polygon) polygons.push(polygon);\n\n    return polygons;\n}\n\nfunction signedArea(ring) {\n    var sum = 0;\n    for (var i = 0, len = ring.length, j = len - 1, p1, p2; i < len; j = i++) {\n        p1 = ring[i];\n        p2 = ring[j];\n        sum += (p2.x - p1.x) * (p1.y + p2.y);\n    }\n    return sum;\n}\n","/* eslint-disable prettier/prettier */\nimport bbox from '@turf/bbox';\nimport turfCentroid from '@turf/centroid';\nimport turfBearing from '@turf/bearing';\nimport bboxPolygon from '@turf/bbox-polygon';\nimport { point, featureCollection } from '@turf/helpers';\nimport polygonToLine from '@turf/polygon-to-line';\nimport { coordEach } from '@turf/meta';\nimport turfDistance from '@turf/distance';\nimport turfTransformScale from '@turf/transform-scale';\nimport { getCoord, getGeom } from '@turf/invariant';\nimport { FeatureCollection, Position } from '../geojson-types';\nimport {\n  ModeProps,\n  PointerMoveEvent,\n  StartDraggingEvent,\n  StopDraggingEvent,\n  DraggingEvent,\n  EditHandleFeature,\n  GuideFeatureCollection,\n} from '../types';\nimport { getPickedEditHandle } from '../utils';\nimport { GeoJsonEditMode } from './geojson-edit-mode';\nimport { ImmutableFeatureCollection } from './immutable-feature-collection';\n\nexport class ScaleMode extends GeoJsonEditMode {\n  _geometryBeingScaled: FeatureCollection | null | undefined;\n  _selectedEditHandle: EditHandleFeature | null | undefined;\n  _cornerGuidePoints: Array<EditHandleFeature>;\n  _cursor: string | null | undefined;\n  _isScaling = false;\n\n  _isSinglePointGeometrySelected = (geometry: FeatureCollection | null | undefined): boolean => {\n    const { features } = geometry || {};\n    if (Array.isArray(features) && features.length === 1) {\n      // @ts-ignore\n      const { type } = getGeom(features[0]);\n      return type === 'Point';\n    }\n    return false;\n  };\n\n  _getOppositeScaleHandle = (selectedHandle: EditHandleFeature) => {\n    const selectedHandleIndex =\n      selectedHandle &&\n      selectedHandle.properties &&\n      Array.isArray(selectedHandle.properties.positionIndexes) &&\n      selectedHandle.properties.positionIndexes[0];\n\n    if (typeof selectedHandleIndex !== 'number') {\n      return null;\n    }\n    const guidePointCount = this._cornerGuidePoints.length;\n    const oppositeIndex = (selectedHandleIndex + guidePointCount / 2) % guidePointCount;\n    return this._cornerGuidePoints.find((p) => {\n      if (!Array.isArray(p.properties.positionIndexes)) {\n        return false;\n      }\n      return p.properties.positionIndexes[0] === oppositeIndex;\n    });\n  };\n\n  _getUpdatedData = (props: ModeProps<FeatureCollection>, editedData: FeatureCollection) => {\n    let updatedData = new ImmutableFeatureCollection(props.data);\n    const selectedIndexes = props.selectedIndexes;\n    for (let i = 0; i < selectedIndexes.length; i++) {\n      const selectedIndex = selectedIndexes[i];\n      const movedFeature = editedData.features[i];\n      updatedData = updatedData.replaceGeometry(selectedIndex, movedFeature.geometry);\n    }\n    return updatedData.getObject();\n  };\n\n  isEditHandleSelected = (): boolean => Boolean(this._selectedEditHandle);\n\n  getScaleAction = (\n    startDragPoint: Position,\n    currentPoint: Position,\n    editType: string,\n    props: ModeProps<FeatureCollection>\n  ) => {\n    if (!this._selectedEditHandle) {\n      return null;\n    }\n\n    const oppositeHandle = this._getOppositeScaleHandle(this._selectedEditHandle);\n    const origin = getCoord(oppositeHandle);\n    // @ts-ignore\n    const scaleFactor = getScaleFactor(origin, startDragPoint, currentPoint);\n    // @ts-ignore\n    const scaledFeatures: FeatureCollection = turfTransformScale(\n      // @ts-ignore\n      this._geometryBeingScaled,\n      scaleFactor,\n      { origin }\n    );\n\n    return {\n      updatedData: this._getUpdatedData(props, scaledFeatures),\n      editType,\n      editContext: {\n        featureIndexes: props.selectedIndexes,\n      },\n    };\n  };\n\n  updateCursor = (props: ModeProps<FeatureCollection>) => {\n    if (this._selectedEditHandle) {\n      if (this._cursor) {\n        props.onUpdateCursor(this._cursor);\n      }\n      const cursorGeometry = this.getSelectedFeaturesAsFeatureCollection(props);\n\n      // Get resize cursor direction from the hovered scale editHandle (e.g. nesw or nwse)\n      const centroid = turfCentroid(cursorGeometry);\n      const bearing = turfBearing(centroid, this._selectedEditHandle);\n      const positiveBearing = bearing < 0 ? bearing + 180 : bearing;\n      if (\n        (positiveBearing >= 0 && positiveBearing <= 90) ||\n        (positiveBearing >= 180 && positiveBearing <= 270)\n      ) {\n        this._cursor = 'nesw-resize';\n        props.onUpdateCursor('nesw-resize');\n      } else {\n        this._cursor = 'nwse-resize';\n        props.onUpdateCursor('nwse-resize');\n      }\n    } else {\n      props.onUpdateCursor(null);\n      this._cursor = null;\n    }\n  };\n\n  handlePointerMove(event: PointerMoveEvent, props: ModeProps<FeatureCollection>) {\n    if (!this._isScaling) {\n      const selectedEditHandle = getPickedEditHandle(event.picks);\n      this._selectedEditHandle =\n        selectedEditHandle && selectedEditHandle.properties.editHandleType === 'scale'\n          ? selectedEditHandle\n          : null;\n\n      this.updateCursor(props);\n    }\n  }\n\n  handleStartDragging(event: StartDraggingEvent, props: ModeProps<FeatureCollection>) {\n    if (this._selectedEditHandle) {\n      this._isScaling = true;\n      this._geometryBeingScaled = this.getSelectedFeaturesAsFeatureCollection(props);\n    }\n  }\n\n  handleDragging(event: DraggingEvent, props: ModeProps<FeatureCollection>) {\n    if (!this._isScaling) {\n      return;\n    }\n\n    props.onUpdateCursor(this._cursor);\n\n    const scaleAction = this.getScaleAction(\n      event.pointerDownMapCoords,\n      event.mapCoords,\n      'scaling',\n      props\n    );\n    if (scaleAction) {\n      props.onEdit(scaleAction);\n    }\n\n    event.cancelPan();\n  }\n\n  handleStopDragging(event: StopDraggingEvent, props: ModeProps<FeatureCollection>) {\n    if (this._isScaling) {\n      // Scale the geometry\n      const scaleAction = this.getScaleAction(\n        event.pointerDownMapCoords,\n        event.mapCoords,\n        'scaled',\n        props\n      );\n      if (scaleAction) {\n        props.onEdit(scaleAction);\n      }\n\n      props.onUpdateCursor(null);\n\n      this._geometryBeingScaled = null;\n      this._selectedEditHandle = null;\n      this._cursor = null;\n      this._isScaling = false;\n    }\n  }\n\n  getGuides(props: ModeProps<FeatureCollection>): GuideFeatureCollection {\n    this._cornerGuidePoints = [];\n    const selectedGeometry = this.getSelectedFeaturesAsFeatureCollection(props);\n\n    // Add buffer to the enveloping box if a single Point feature is selected\n    if (this._isSinglePointGeometrySelected(selectedGeometry)) {\n      return { type: 'FeatureCollection', features: [] };\n    }\n\n    const boundingBox = bboxPolygon(bbox(selectedGeometry));\n    boundingBox.properties.mode = 'scale';\n    const cornerGuidePoints = [];\n\n    coordEach(boundingBox, (coord, coordIndex) => {\n      if (coordIndex < 4) {\n        // Get corner midpoint guides from the enveloping box\n        const cornerPoint = point(coord, {\n          guideType: 'editHandle',\n          editHandleType: 'scale',\n          positionIndexes: [coordIndex],\n        });\n        cornerGuidePoints.push(cornerPoint);\n      }\n    });\n\n    this._cornerGuidePoints = cornerGuidePoints;\n    // @ts-ignore\n    return featureCollection([polygonToLine(boundingBox), ...this._cornerGuidePoints]);\n  }\n}\n\nfunction getScaleFactor(centroid: Position, startDragPoint: Position, currentPoint: Position) {\n  const startDistance = turfDistance(centroid, startDragPoint);\n  const endDistance = turfDistance(centroid, currentPoint);\n  return endDistance / startDistance;\n}\n","/* eslint-disable prettier/prettier */\nimport bbox from '@turf/bbox';\nimport turfCentroid from '@turf/centroid';\nimport turfBearing from '@turf/bearing';\nimport bboxPolygon from '@turf/bbox-polygon';\nimport turfDistance from '@turf/distance';\nimport { coordEach } from '@turf/meta';\nimport { getGeom } from '@turf/invariant';\nimport { point, featureCollection, lineString } from '@turf/helpers';\nimport turfTransformRotate from '@turf/transform-rotate';\nimport polygonToLine from '@turf/polygon-to-line';\nimport {\n  PointerMoveEvent,\n  StartDraggingEvent,\n  StopDraggingEvent,\n  DraggingEvent,\n  ModeProps,\n  EditHandleFeature,\n  GuideFeatureCollection,\n} from '../types';\nimport { getPickedEditHandle } from '../utils';\nimport { FeatureCollection, Position } from '../geojson-types';\nimport { GeoJsonEditMode, GeoJsonEditAction, getIntermediatePosition } from './geojson-edit-mode';\nimport { ImmutableFeatureCollection } from './immutable-feature-collection';\n\nexport class RotateMode extends GeoJsonEditMode {\n  _selectedEditHandle: EditHandleFeature | null | undefined;\n  _geometryBeingRotated: FeatureCollection | null | undefined;\n  _isRotating = false;\n\n  _isSinglePointGeometrySelected = (geometry: FeatureCollection | null | undefined): boolean => {\n    const { features } = geometry || {};\n    if (Array.isArray(features) && features.length === 1) {\n      // @ts-ignore\n      const { type } = getGeom(features[0]);\n      return type === 'Point';\n    }\n    return false;\n  };\n\n  getIsRotating = () => this._isRotating;\n\n  getGuides(props: ModeProps<FeatureCollection>): GuideFeatureCollection {\n    const selectedGeometry =\n      this._geometryBeingRotated || this.getSelectedFeaturesAsFeatureCollection(props);\n\n    if (this._isSinglePointGeometrySelected(selectedGeometry)) {\n      return { type: 'FeatureCollection', features: [] };\n    }\n\n    if (this._isRotating) {\n      // Display rotate pivot\n      return featureCollection([turfCentroid(selectedGeometry)]) as GuideFeatureCollection;\n    }\n\n    const boundingBox = bboxPolygon(bbox(selectedGeometry));\n\n    let previousCoord = null;\n    let topEdgeMidpointCoords = null;\n    let longestEdgeLength = 0;\n\n    coordEach(boundingBox, (coord) => {\n      if (previousCoord) {\n        // @ts-ignore\n        const edgeMidpoint = getIntermediatePosition(coord, previousCoord);\n        if (!topEdgeMidpointCoords || edgeMidpoint[1] > topEdgeMidpointCoords[1]) {\n          // Get the top edge midpoint of the enveloping box\n          topEdgeMidpointCoords = edgeMidpoint;\n        }\n        // Get the length of the longest edge of the enveloping box\n        const edgeDistance = turfDistance(coord, previousCoord);\n        longestEdgeLength = Math.max(longestEdgeLength, edgeDistance);\n      }\n      previousCoord = coord;\n    });\n\n    // Scale the length of the line between the rotate handler and the enveloping box\n    // relative to the length of the longest edge of the enveloping box\n    const rotateHandleCoords = topEdgeMidpointCoords && [\n      topEdgeMidpointCoords[0],\n      topEdgeMidpointCoords[1] + longestEdgeLength / 1000,\n    ];\n\n    const lineFromEnvelopeToRotateHandle = lineString([topEdgeMidpointCoords, rotateHandleCoords]);\n    const rotateHandle = point(rotateHandleCoords, {\n      guideType: 'editHandle',\n      editHandleType: 'rotate',\n    });\n    // @ts-ignore\n    return featureCollection([\n      // @ts-ignore\n      polygonToLine(boundingBox),\n      // @ts-ignore\n      rotateHandle,\n      // @ts-ignore\n      lineFromEnvelopeToRotateHandle,\n    ]);\n  }\n\n  handleDragging(event: DraggingEvent, props: ModeProps<FeatureCollection>) {\n    if (!this._isRotating) {\n      return;\n    }\n\n    const rotateAction = this.getRotateAction(\n      event.pointerDownMapCoords,\n      event.mapCoords,\n      'rotating',\n      props\n    );\n    if (rotateAction) {\n      props.onEdit(rotateAction);\n    }\n\n    event.cancelPan();\n  }\n\n  handlePointerMove(event: PointerMoveEvent, props: ModeProps<FeatureCollection>) {\n    if (!this._isRotating) {\n      const selectedEditHandle = getPickedEditHandle(event.picks);\n      this._selectedEditHandle =\n        selectedEditHandle && selectedEditHandle.properties.editHandleType === 'rotate'\n          ? selectedEditHandle\n          : null;\n    }\n\n    this.updateCursor(props);\n  }\n\n  handleStartDragging(event: StartDraggingEvent, props: ModeProps<FeatureCollection>) {\n    if (this._selectedEditHandle) {\n      this._isRotating = true;\n      this._geometryBeingRotated = this.getSelectedFeaturesAsFeatureCollection(props);\n    }\n  }\n\n  handleStopDragging(event: StopDraggingEvent, props: ModeProps<FeatureCollection>) {\n    if (this._isRotating) {\n      // Rotate the geometry\n      const rotateAction = this.getRotateAction(\n        event.pointerDownMapCoords,\n        event.mapCoords,\n        'rotated',\n        props\n      );\n\n      if (rotateAction) {\n        props.onEdit(rotateAction);\n      }\n\n      this._geometryBeingRotated = null;\n      this._selectedEditHandle = null;\n      this._isRotating = false;\n    }\n  }\n\n  updateCursor(props: ModeProps<FeatureCollection>) {\n    if (this._selectedEditHandle) {\n      // TODO: look at doing SVG cursors to get a better \"rotate\" cursor\n      props.onUpdateCursor('crosshair');\n    } else {\n      props.onUpdateCursor(null);\n    }\n  }\n\n  getRotateAction(\n    startDragPoint: Position,\n    currentPoint: Position,\n    editType: string,\n    props: ModeProps<FeatureCollection>\n  ): GeoJsonEditAction | null | undefined {\n    if (!this._geometryBeingRotated) {\n      return null;\n    }\n\n    const centroid = turfCentroid(this._geometryBeingRotated);\n    const angle = getRotationAngle(centroid, startDragPoint, currentPoint);\n    // @ts-ignore\n    const rotatedFeatures: FeatureCollection = turfTransformRotate(\n      // @ts-ignore\n      this._geometryBeingRotated,\n      angle,\n      {\n        pivot: centroid,\n      }\n    );\n\n    let updatedData = new ImmutableFeatureCollection(props.data);\n\n    const selectedIndexes = props.selectedIndexes;\n    for (let i = 0; i < selectedIndexes.length; i++) {\n      const selectedIndex = selectedIndexes[i];\n      const movedFeature = rotatedFeatures.features[i];\n      updatedData = updatedData.replaceGeometry(selectedIndex, movedFeature.geometry);\n    }\n\n    return {\n      updatedData: updatedData.getObject(),\n      editType,\n      editContext: {\n        featureIndexes: selectedIndexes,\n      },\n    };\n  }\n}\n\nfunction getRotationAngle(centroid: Position, startDragPoint: Position, currentPoint: Position) {\n  const bearing1 = turfBearing(centroid, startDragPoint);\n  const bearing2 = turfBearing(centroid, currentPoint);\n  return bearing2 - bearing1;\n}\n","import { FeatureCollection } from '../geojson-types';\nimport {\n  ModeProps,\n  ClickEvent,\n  PointerMoveEvent,\n  StartDraggingEvent,\n  StopDraggingEvent,\n  DraggingEvent,\n  GuideFeatureCollection,\n} from '../types';\nimport { GeoJsonEditMode } from './geojson-edit-mode';\n\nexport class CompositeMode extends GeoJsonEditMode {\n  _modes: Array<GeoJsonEditMode>;\n\n  constructor(modes: Array<GeoJsonEditMode>) {\n    super();\n    this._modes = modes;\n  }\n\n  _coalesce<T>(\n    callback: (arg0: GeoJsonEditMode) => T,\n    resultEval: (arg0: T) => boolean | null | undefined = null\n  ): T {\n    let result: T;\n\n    for (let i = 0; i < this._modes.length; i++) {\n      result = callback(this._modes[i]);\n      if (resultEval ? resultEval(result) : result) {\n        break;\n      }\n    }\n\n    return result as any;\n  }\n\n  handleClick(event: ClickEvent, props: ModeProps<FeatureCollection>): void {\n    this._coalesce((handler) => handler.handleClick(event, props));\n  }\n\n  handlePointerMove(event: PointerMoveEvent, props: ModeProps<FeatureCollection>): void {\n    return this._coalesce((handler) => handler.handlePointerMove(event, props));\n  }\n\n  handleStartDragging(event: StartDraggingEvent, props: ModeProps<FeatureCollection>): void {\n    return this._coalesce((handler) => handler.handleStartDragging(event, props));\n  }\n\n  handleStopDragging(event: StopDraggingEvent, props: ModeProps<FeatureCollection>): void {\n    return this._coalesce((handler) => handler.handleStopDragging(event, props));\n  }\n\n  handleDragging(event: DraggingEvent, props: ModeProps<FeatureCollection>): void {\n    return this._coalesce((handler) => handler.handleDragging(event, props));\n  }\n\n  getGuides(props: ModeProps<FeatureCollection>): GuideFeatureCollection {\n    // TODO: Combine the guides *BUT* make sure if none of the results have\n    // changed to return the same object so that \"guides !== this.state.guides\"\n    // in editable-geojson-layer works.\n\n    const allGuides = [];\n    for (const mode of this._modes) {\n      allGuides.push(...mode.getGuides(props).features);\n    }\n\n    return {\n      type: 'FeatureCollection',\n      features: allGuides,\n    };\n  }\n}\n","import {\n  ClickEvent,\n  PointerMoveEvent,\n  ModeProps,\n  GuideFeatureCollection,\n  TentativeFeature,\n} from '../types';\nimport { Position, Polygon, FeatureOf, FeatureCollection } from '../geojson-types';\nimport { GeoJsonEditMode } from './geojson-edit-mode';\n\nexport class ThreeClickPolygonMode extends GeoJsonEditMode {\n  handleClick(event: ClickEvent, props: ModeProps<FeatureCollection>) {\n    this.addClickSequence(event);\n    const clickSequence = this.getClickSequence();\n    const tentativeFeature = this.getTentativeGuide(props);\n\n    if (\n      clickSequence.length > 2 &&\n      tentativeFeature &&\n      tentativeFeature.geometry.type === 'Polygon'\n    ) {\n      const editAction = this.getAddFeatureOrBooleanPolygonAction(tentativeFeature.geometry, props);\n      this.resetClickSequence();\n\n      if (editAction) {\n        props.onEdit(editAction);\n      }\n    }\n  }\n\n  getGuides(props: ModeProps<FeatureCollection>): GuideFeatureCollection {\n    const { lastPointerMoveEvent, modeConfig } = props;\n    const clickSequence = this.getClickSequence();\n\n    const guides: GuideFeatureCollection = {\n      type: 'FeatureCollection',\n      features: [],\n    };\n\n    if (clickSequence.length === 0) {\n      // nothing to do yet\n      return guides;\n    }\n\n    const hoveredCoord = lastPointerMoveEvent.mapCoords;\n\n    if (clickSequence.length === 1) {\n      guides.features.push({\n        type: 'Feature',\n        properties: {\n          guideType: 'tentative',\n        },\n        geometry: {\n          type: 'LineString',\n          coordinates: [clickSequence[0], hoveredCoord],\n        },\n      });\n    } else {\n      const polygon = this.getThreeClickPolygon(\n        clickSequence[0],\n        clickSequence[1],\n        hoveredCoord,\n        modeConfig\n      );\n      if (polygon) {\n        guides.features.push({\n          type: 'Feature',\n          properties: {\n            guideType: 'tentative',\n          },\n          geometry: polygon.geometry,\n        });\n      }\n    }\n\n    return guides;\n  }\n\n  getThreeClickPolygon(\n    coord1: Position,\n    coord2: Position,\n    coord3: Position,\n    modeConfig: any\n  ): FeatureOf<Polygon> | null | undefined {\n    return null;\n  }\n\n  handlePointerMove(event: PointerMoveEvent, props: ModeProps<FeatureCollection>) {\n    props.onUpdateCursor('cell');\n    super.handlePointerMove(event, props);\n  }\n\n  createTentativeFeature(props: ModeProps<FeatureCollection>): TentativeFeature {\n    const { lastPointerMoveEvent } = props;\n    const clickSequence = this.getClickSequence();\n\n    const lastCoords = lastPointerMoveEvent ? [lastPointerMoveEvent.mapCoords] : [];\n\n    let tentativeFeature;\n    if (clickSequence.length === 2) {\n      tentativeFeature = this.getThreeClickPolygon(\n        clickSequence[0],\n        clickSequence[1],\n        lastCoords[0],\n        props.modeConfig\n      );\n    }\n\n    return tentativeFeature;\n  }\n}\n","// port from @deck.gl/core\nfunction isEqual(a: any, b: any) {\n  if (a === b) {\n    return true;\n  }\n  if (Array.isArray(a)) {\n    // Special treatment for arrays: compare 1-level deep\n    // This is to support equality of matrix/coordinate props\n    const len = a.length;\n    if (!b || b.length !== len) {\n      return false;\n    }\n\n    for (let i = 0; i < len; i++) {\n      if (a[i] !== b[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return false;\n}\n\n/**\n * Speed up consecutive function calls by caching the result of calls with identical input\n * https://en.wikipedia.org/wiki/Memoization\n * @param {function} compute - the function to be memoized\n */\nexport default function memoize(compute: Function) {\n  let cachedArgs = {};\n  let cachedResult;\n\n  return (args: any) => {\n    for (const key in args) {\n      if (!isEqual(args[key], cachedArgs[key])) {\n        cachedResult = compute(args);\n        cachedArgs = args;\n        break;\n      }\n    }\n    return cachedResult;\n  };\n}\n","/* eslint-env browser */\n\nimport { CompositeLayer } from '@deck.gl/core';\nimport { CompositeLayerProps } from '@deck.gl/core/lib/composite-layer';\nimport {\n  ClickEvent,\n  StartDraggingEvent,\n  StopDraggingEvent,\n  DraggingEvent,\n  PointerMoveEvent,\n  Position,\n} from '@nebula.gl/edit-modes';\n\nconst EVENT_TYPES = ['anyclick', 'pointermove', 'panstart', 'panmove', 'panend', 'keyup'];\n\nexport interface EditableLayerProps<D> extends CompositeLayerProps<D> {\n  pickingRadius?: number;\n  pickingDepth?: number;\n}\n\nexport default class EditableLayer<\n  D,\n  P extends EditableLayerProps<D> = EditableLayerProps<D>\n> extends CompositeLayer<D, P> {\n  static layerName = 'EditableLayer';\n\n  // Overridable interaction event handlers\n  onLayerClick(event: ClickEvent) {\n    // default implementation - do nothing\n  }\n\n  onStartDragging(event: StartDraggingEvent) {\n    // default implementation - do nothing\n  }\n\n  onStopDragging(event: StopDraggingEvent) {\n    // default implementation - do nothing\n  }\n\n  onDragging(event: DraggingEvent) {\n    // default implementation - do nothing\n  }\n\n  onPointerMove(event: PointerMoveEvent) {\n    // default implementation - do nothing\n  }\n\n  onLayerKeyUp(event: KeyboardEvent): void {\n    // default implementation - do nothing;\n  }\n  // TODO: implement onCancelDragging (e.g. drag off screen)\n\n  initializeState() {\n    this.setState({\n      _editableLayerState: {\n        // Picked objects at the time the pointer went down\n        pointerDownPicks: null,\n        // Screen coordinates where the pointer went down\n        pointerDownScreenCoords: null,\n        // Ground coordinates where the pointer went down\n        pointerDownMapCoords: null,\n\n        // Keep track of the mjolnir.js event handler so it can be deregistered\n        eventHandler: this._forwardEventToCurrentLayer.bind(this),\n      },\n    });\n\n    this._addEventHandlers();\n  }\n\n  finalizeState() {\n    this._removeEventHandlers();\n  }\n\n  _addEventHandlers() {\n    // @ts-ignore\n    const { eventManager } = this.context.deck;\n    const { eventHandler } = this.state._editableLayerState;\n\n    for (const eventType of EVENT_TYPES) {\n      eventManager.on(eventType, eventHandler, {\n        // give nebula a higher priority so that it can stop propagation to deck.gl's map panning handlers\n        priority: 100,\n      });\n    }\n  }\n\n  _removeEventHandlers() {\n    // @ts-ignore\n    const { eventManager } = this.context.deck;\n    const { eventHandler } = this.state._editableLayerState;\n\n    for (const eventType of EVENT_TYPES) {\n      eventManager.off(eventType, eventHandler);\n    }\n  }\n\n  // A new layer instance is created on every render, so forward the event to the current layer\n  // This means that the first layer instance will stick around to be the event listener, but will forward the event\n  // to the latest layer instance.\n  _forwardEventToCurrentLayer(event: any) {\n    const currentLayer = this.getCurrentLayer();\n\n    // Use a naming convention to find the event handling function for this event type\n    const func = currentLayer[`_on${event.type}`].bind(currentLayer);\n    if (!func) {\n      console.warn(`no handler for mjolnir.js event ${event.type}`); // eslint-disable-line\n      return;\n    }\n    func(event);\n  }\n\n  _onanyclick({ srcEvent }: any) {\n    const screenCoords = this.getScreenCoords(srcEvent);\n    const mapCoords = this.getMapCoords(screenCoords);\n    // @ts-ignore\n    const picks = this.getPicks(screenCoords);\n\n    this.onLayerClick({\n      mapCoords,\n      // @ts-ignore\n      screenCoords,\n      picks,\n      sourceEvent: srcEvent,\n    });\n  }\n\n  _onkeyup({ srcEvent }: { srcEvent: KeyboardEvent }) {\n    this.onLayerKeyUp(srcEvent);\n  }\n\n  _onpanstart(event: any) {\n    const screenCoords = this.getScreenCoords(event.srcEvent);\n    const mapCoords = this.getMapCoords(screenCoords);\n    // @ts-ignore\n    const picks = this.getPicks(screenCoords);\n\n    this.setState({\n      _editableLayerState: {\n        ...this.state._editableLayerState,\n        pointerDownScreenCoords: screenCoords,\n        pointerDownMapCoords: mapCoords,\n        pointerDownPicks: picks,\n      },\n    });\n\n    this.onStartDragging({\n      picks,\n      // @ts-ignore\n      screenCoords,\n      // @ts-ignore\n      mapCoords,\n      // @ts-ignore\n      pointerDownScreenCoords: screenCoords,\n      pointerDownMapCoords: mapCoords,\n      cancelPan: event.stopImmediatePropagation,\n      sourceEvent: event.srcEvent,\n    });\n  }\n\n  _onpanmove(event: any) {\n    const { srcEvent } = event;\n    const screenCoords = this.getScreenCoords(srcEvent);\n    const mapCoords = this.getMapCoords(screenCoords);\n\n    const {\n      pointerDownPicks,\n      pointerDownScreenCoords,\n      pointerDownMapCoords,\n    } = this.state._editableLayerState;\n    // @ts-ignore\n    const picks = this.getPicks(screenCoords);\n\n    this.onDragging({\n      // @ts-ignore\n      screenCoords,\n      mapCoords,\n      picks,\n      pointerDownPicks,\n      pointerDownScreenCoords,\n      pointerDownMapCoords,\n      sourceEvent: srcEvent,\n      cancelPan: event.stopImmediatePropagation,\n      // another (hacky) approach for cancelling map panning\n      // const controller = this.context.deck.viewManager.controllers[\n      //   Object.keys(this.context.deck.viewManager.controllers)[0]\n      // ];\n      // controller._state.isDragging = false;\n    });\n  }\n\n  _onpanend({ srcEvent }: any) {\n    const screenCoords = this.getScreenCoords(srcEvent);\n    const mapCoords = this.getMapCoords(screenCoords);\n\n    const {\n      pointerDownPicks,\n      pointerDownScreenCoords,\n      pointerDownMapCoords,\n    } = this.state._editableLayerState;\n    // @ts-ignore\n    const picks = this.getPicks(screenCoords);\n\n    this.onStopDragging({\n      picks,\n      // @ts-ignore\n      screenCoords,\n      mapCoords,\n      pointerDownPicks,\n      pointerDownScreenCoords,\n      pointerDownMapCoords,\n      sourceEvent: srcEvent,\n    });\n\n    this.setState({\n      _editableLayerState: {\n        ...this.state._editableLayerState,\n        pointerDownScreenCoords: null,\n        pointerDownMapCoords: null,\n        pointerDownPicks: null,\n      },\n    });\n  }\n\n  _onpointermove(event: any) {\n    const { srcEvent } = event;\n    const screenCoords = this.getScreenCoords(srcEvent);\n    const mapCoords = this.getMapCoords(screenCoords);\n\n    const {\n      pointerDownPicks,\n      pointerDownScreenCoords,\n      pointerDownMapCoords,\n    } = this.state._editableLayerState;\n    // @ts-ignore\n    const picks = this.getPicks(screenCoords);\n\n    this.onPointerMove({\n      // @ts-ignore\n      screenCoords,\n      mapCoords,\n      picks,\n      pointerDownPicks,\n      pointerDownScreenCoords,\n      pointerDownMapCoords,\n      sourceEvent: srcEvent,\n    });\n  }\n\n  getPicks(screenCoords: [number, number]) {\n    // @ts-ignore\n    return this.context.deck.pickMultipleObjects({\n      x: screenCoords[0],\n      y: screenCoords[1],\n      layerIds: [this.props.id],\n      radius: this.props.pickingRadius,\n      depth: this.props.pickingDepth,\n    });\n  }\n\n  getScreenCoords(pointerEvent: any): Position {\n    return [\n      pointerEvent.clientX -\n        (this.context.gl.canvas as HTMLCanvasElement).getBoundingClientRect().left,\n      pointerEvent.clientY -\n        (this.context.gl.canvas as HTMLCanvasElement).getBoundingClientRect().top,\n    ];\n  }\n\n  getMapCoords(screenCoords: Position): Position {\n    // @ts-ignore\n    return this.context.viewport.unproject([screenCoords[0], screenCoords[1]]);\n  }\n}\n","import destination from '@turf/destination';\nimport bearing from '@turf/bearing';\nimport pointToLineDistance from '@turf/point-to-line-distance';\nimport { point } from '@turf/helpers';\nimport {\n  Position,\n  Point,\n  LineString,\n  FeatureOf,\n  FeatureWithProps,\n  Viewport,\n} from '@nebula.gl/edit-modes';\nimport WebMercatorViewport from 'viewport-mercator-project';\n\n// TODO edit-modes: delete and use edit-modes/utils instead\n\nexport type NearestPointType = FeatureWithProps<Point, { dist: number; index: number }>;\n\nexport function toDeckColor(\n  color?: [number, number, number, number] | number,\n  defaultColor: [number, number, number, number] = [255, 0, 0, 255]\n): [number, number, number, number] {\n  if (!Array.isArray(color)) {\n    return defaultColor;\n  }\n  return [color[0] * 255, color[1] * 255, color[2] * 255, color[3] * 255];\n}\n\n//\n// a GeoJSON helper function that calls the provided function with\n// an argument that is the most deeply-nested array having elements\n// that are arrays of primitives as an argument, e.g.\n//\n// {\n//   \"type\": \"MultiPolygon\",\n//   \"coordinates\": [\n//       [\n//           [[30, 20], [45, 40], [10, 40], [30, 20]]\n//       ],\n//       [\n//           [[15, 5], [40, 10], [10, 20], [5, 10], [15, 5]]\n//       ]\n//   ]\n// }\n//\n// the function would be called on:\n//\n// [[30, 20], [45, 40], [10, 40], [30, 20]]\n//\n// and\n//\n// [[15, 5], [40, 10], [10, 20], [5, 10], [15, 5]]\n//\nexport function recursivelyTraverseNestedArrays(\n  array: Array<any>,\n  prefix: Array<number>,\n  fn: Function\n) {\n  if (!Array.isArray(array[0])) {\n    return true;\n  }\n  for (let i = 0; i < array.length; i++) {\n    if (recursivelyTraverseNestedArrays(array[i], [...prefix, i], fn)) {\n      fn(array, prefix);\n      break;\n    }\n  }\n  return false;\n}\n\nexport function generatePointsParallelToLinePoints(\n  p1: Position,\n  p2: Position,\n  groundCoords: Position\n): Position[] {\n  const lineString: LineString = {\n    type: 'LineString',\n    coordinates: [p1, p2],\n  };\n  const pt = point(groundCoords);\n  const ddistance = pointToLineDistance(pt, lineString);\n  const lineBearing = bearing(p1, p2);\n\n  // Check if current point is to the left or right of line\n  // Line from A=(x1,y1) to B=(x2,y2) a point P=(x,y)\n  // then (x−x1)(y2−y1)−(y−y1)(x2−x1)\n  const isPointToLeftOfLine =\n    (groundCoords[0] - p1[0]) * (p2[1] - p1[1]) - (groundCoords[1] - p1[1]) * (p2[0] - p1[0]);\n\n  // Bearing to draw perpendicular to the line string\n  const orthogonalBearing = isPointToLeftOfLine < 0 ? lineBearing - 90 : lineBearing - 270;\n\n  // Get coordinates for the point p3 and p4 which are perpendicular to the lineString\n  // Add the distance as the current position moves away from the lineString\n  const p3 = destination(p2, ddistance, orthogonalBearing);\n  const p4 = destination(p1, ddistance, orthogonalBearing);\n  //@ts-ignore\n  return [p3.geometry.coordinates, p4.geometry.coordinates];\n}\n\nexport function distance2d(x1: number, y1: number, x2: number, y2: number): number {\n  const dx = x1 - x2;\n  const dy = y1 - y2;\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nexport function mix(a: number, b: number, ratio: number): number {\n  return b * ratio + a * (1 - ratio);\n}\n\nexport function nearestPointOnProjectedLine(\n  line: FeatureOf<LineString>,\n  inPoint: FeatureOf<Point>,\n  viewport: Viewport\n): NearestPointType {\n  const wmViewport = new WebMercatorViewport(viewport);\n  // Project the line to viewport, then find the nearest point\n  const coordinates: Array<Array<number>> = line.geometry.coordinates as any;\n  const projectedCoords = coordinates.map(([x, y, z = 0]) => wmViewport.project([x, y, z]));\n  //@ts-ignore\n  const [x, y] = wmViewport.project(inPoint.geometry.coordinates);\n  // console.log('projectedCoords', JSON.stringify(projectedCoords));\n\n  let minDistance = Infinity;\n  let minPointInfo = {};\n\n  projectedCoords.forEach(([x2, y2], index) => {\n    if (index === 0) {\n      return;\n    }\n\n    const [x1, y1] = projectedCoords[index - 1];\n\n    // line from projectedCoords[index - 1] to projectedCoords[index]\n    // convert to Ax + By + C = 0\n    const A = y1 - y2;\n    const B = x2 - x1;\n    const C = x1 * y2 - x2 * y1;\n\n    // https://en.wikipedia.org/wiki/Distance_from_a_point_to_a_line\n    const div = A * A + B * B;\n    const distance = Math.abs(A * x + B * y + C) / Math.sqrt(div);\n\n    // TODO: Check if inside bounds\n\n    if (distance < minDistance) {\n      minDistance = distance;\n      minPointInfo = {\n        index,\n        x0: (B * (B * x - A * y) - A * C) / div,\n        y0: (A * (-B * x + A * y) - B * C) / div,\n      };\n    }\n  });\n  //@ts-ignore\n  const { index, x0, y0 } = minPointInfo;\n  const [x1, y1, z1 = 0] = projectedCoords[index - 1];\n  const [x2, y2, z2 = 0] = projectedCoords[index];\n\n  // calculate what ratio of the line we are on to find the proper z\n  const lineLength = distance2d(x1, y1, x2, y2);\n  const startToPointLength = distance2d(x1, y1, x0, y0);\n  const ratio = startToPointLength / lineLength;\n  const z0 = mix(z1, z2, ratio);\n\n  return {\n    type: 'Feature',\n    geometry: {\n      type: 'Point',\n      coordinates: wmViewport.unproject([x0, y0, z0]),\n    },\n    properties: {\n      // TODO: calculate the distance in proper units\n      dist: minDistance,\n      index: index - 1,\n    },\n  };\n}\n\n/**\n * Inserts toInsert string into base string before insertBefore string.\n * @param base A string to insert into.\n * @param insertBefore A sub string in `base` string to insert before.\n * @param toInsert A string to insert.\n * @returns Combined string. `base` string if `insertBefore` string isn't found.\n */\nexport function insertBefore(base: string, insertBefore: string, toInsert: string): string {\n  const at = base.indexOf(insertBefore);\n  if (at < 0) {\n    return base;\n  }\n  return base.slice(0, at) + toInsert + base.slice(at);\n}\n","import { PathLayer } from '@deck.gl/layers';\nimport { PathLayerProps } from '@deck.gl/layers/path-layer/path-layer';\nimport GL from '@luma.gl/constants';\nimport { Framebuffer, Texture2D } from '@luma.gl/core';\nimport outline from '../../shaderlib/outline/outline';\nimport { UNIT } from '../../constants';\n\n// TODO - this should be built into assembleShaders\nfunction injectShaderCode({ source, code = '' }) {\n  const INJECT_CODE = /}[^{}]*$/;\n  return source.replace(INJECT_CODE, code.concat('\\n}\\n'));\n}\n\nconst VS_CODE = `\\\n  outline_setUV(gl_Position);\n  outline_setZLevel(instanceZLevel);\n`;\n\nconst FS_CODE = `\\\n  gl_FragColor = outline_filterColor(gl_FragColor);\n`;\n\nexport interface PathOutlineLayerProps<D> extends PathLayerProps<D> {\n  dashJustified?: boolean;\n  getDashArray?: [number, number] | ((d: D) => [number, number] | null);\n  getZLevel?: (d: D, index: number) => number;\n}\n\nconst defaultProps: PathOutlineLayerProps<any> = {\n  getZLevel: () => 0,\n};\n\nexport default class PathOutlineLayer<\n  D,\n  P extends PathOutlineLayerProps<D> = PathOutlineLayerProps<D>\n> extends PathLayer<D, P> {\n  static layerName = 'PathOutlineLayer';\n  static defaultProps = defaultProps;\n\n  // Override getShaders to inject the outline module\n  getShaders() {\n    const shaders = super.getShaders();\n    return Object.assign({}, shaders, {\n      modules: shaders.modules.concat([outline]),\n      vs: injectShaderCode({ source: shaders.vs, code: VS_CODE }),\n      fs: injectShaderCode({ source: shaders.fs, code: FS_CODE }),\n    });\n  }\n\n  initializeState(context: any) {\n    super.initializeState(context);\n\n    // Create an outline \"shadow\" map\n    // TODO - we should create a single outlineMap for all layers\n    this.setState({\n      outlineFramebuffer: new Framebuffer(context.gl),\n      dummyTexture: new Texture2D(context.gl),\n    });\n\n    // Create an attribute manager\n    this.state.attributeManager.addInstanced({\n      instanceZLevel: {\n        size: 1,\n        type: GL.UNSIGNED_BYTE,\n        accessor: 'getZLevel',\n      },\n    });\n  }\n\n  // Override draw to add render module\n  draw({ moduleParameters = {}, parameters, uniforms, context }) {\n    // Need to calculate same uniforms as base layer\n    const {\n      jointRounded,\n      capRounded,\n      billboard,\n      miterLimit,\n      widthUnits,\n      widthScale,\n      widthMinPixels,\n      widthMaxPixels,\n    } = this.props;\n\n    uniforms = Object.assign({}, uniforms, {\n      jointType: Number(jointRounded),\n      capType: Number(capRounded),\n      billboard,\n      widthUnits: UNIT[widthUnits],\n      widthScale,\n      miterLimit,\n      widthMinPixels,\n      widthMaxPixels,\n    });\n\n    // Render the outline shadowmap (based on segment z orders)\n    const { outlineFramebuffer, dummyTexture } = this.state;\n    outlineFramebuffer.resize();\n    outlineFramebuffer.clear({ color: true, depth: true });\n\n    this.state.model.updateModuleSettings({\n      outlineEnabled: true,\n      outlineRenderShadowmap: true,\n      outlineShadowmap: dummyTexture,\n    });\n\n    this.state.model.draw({\n      uniforms: Object.assign({}, uniforms, {\n        jointType: 0,\n        widthScale: this.props.widthScale * 1.3,\n      }),\n      parameters: {\n        depthTest: false,\n        // Biggest value needs to go into buffer\n        blendEquation: GL.MAX,\n      },\n      framebuffer: outlineFramebuffer,\n    });\n\n    // Now use the outline shadowmap to render the lines (with outlines)\n    this.state.model.updateModuleSettings({\n      outlineEnabled: true,\n      outlineRenderShadowmap: false,\n      outlineShadowmap: outlineFramebuffer,\n    });\n    this.state.model.draw({\n      uniforms: Object.assign({}, uniforms, {\n        jointType: Number(jointRounded),\n        capType: Number(capRounded),\n        widthScale: this.props.widthScale,\n      }),\n      parameters: {\n        depthTest: false,\n      },\n    });\n  }\n}\n","'use strict';\n\nvar parseToken = require('@mapbox/parse-mapbox-token');\nvar MapiRequest = require('./mapi-request');\nvar constants = require('../constants');\n\n/**\n * A low-level Mapbox API client. Use it to create service clients\n * that share the same configuration.\n *\n * Services and `MapiRequest`s use the underlying `MapiClient` to\n * determine how to create, send, and abort requests in a way\n * that is appropriate to the configuration and environment\n * (Node or the browser).\n *\n * @class MapiClient\n * @property {string} accessToken - The Mapbox access token assigned\n *   to this client.\n * @property {string} [origin] - The origin\n *   to use for API requests. Defaults to https://api.mapbox.com.\n */\n\nfunction MapiClient(options) {\n  if (!options || !options.accessToken) {\n    throw new Error('Cannot create a client without an access token');\n  }\n  // Try parsing the access token to determine right away if it's valid.\n  parseToken(options.accessToken);\n\n  this.accessToken = options.accessToken;\n  this.origin = options.origin || constants.API_ORIGIN;\n}\n\nMapiClient.prototype.createRequest = function createRequest(requestOptions) {\n  return new MapiRequest(this, requestOptions);\n};\n\nmodule.exports = MapiClient;\n","'use strict';\n\nvar base64 = require('base-64');\n\nvar tokenCache = {};\n\nfunction parseToken(token) {\n  if (tokenCache[token]) {\n    return tokenCache[token];\n  }\n\n  var parts = token.split('.');\n  var usage = parts[0];\n  var rawPayload = parts[1];\n  if (!rawPayload) {\n    throw new Error('Invalid token');\n  }\n\n  var parsedPayload = parsePaylod(rawPayload);\n\n  var result = {\n    usage: usage,\n    user: parsedPayload.u\n  };\n  if (has(parsedPayload, 'a')) result.authorization = parsedPayload.a;\n  if (has(parsedPayload, 'exp')) result.expires = parsedPayload.exp * 1000;\n  if (has(parsedPayload, 'iat')) result.created = parsedPayload.iat * 1000;\n  if (has(parsedPayload, 'scopes')) result.scopes = parsedPayload.scopes;\n  if (has(parsedPayload, 'client')) result.client = parsedPayload.client;\n  if (has(parsedPayload, 'll')) result.lastLogin = parsedPayload.ll;\n  if (has(parsedPayload, 'iu')) result.impersonator = parsedPayload.iu;\n\n  tokenCache[token] = result;\n  return result;\n}\n\nfunction parsePaylod(rawPayload) {\n  try {\n    return JSON.parse(base64.decode(rawPayload));\n  } catch (parseError) {\n    throw new Error('Invalid token');\n  }\n}\n\nfunction has(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nmodule.exports = parseToken;\n","import turfUnion from '@turf/union';\nimport turfDifference from '@turf/difference';\nimport turfIntersect from '@turf/intersect';\nimport rewind from '@turf/rewind';\n\nimport {\n  EditAction,\n  ClickEvent,\n  PointerMoveEvent,\n  StartDraggingEvent,\n  StopDraggingEvent,\n  DraggingEvent,\n  Pick,\n  Tooltip,\n  ModeProps,\n  GuideFeatureCollection,\n  TentativeFeature,\n} from '../types';\nimport { FeatureCollection, Feature, Polygon, Geometry, Position } from '../geojson-types';\nimport { getPickedEditHandles, getNonGuidePicks } from '../utils';\nimport { EditMode } from './edit-mode';\nimport { ImmutableFeatureCollection } from './immutable-feature-collection';\n\nexport type GeoJsonEditAction = EditAction<FeatureCollection>;\n\nconst DEFAULT_GUIDES: GuideFeatureCollection = {\n  type: 'FeatureCollection',\n  features: [],\n};\nconst DEFAULT_TOOLTIPS: Tooltip[] = [];\n\n// Main interface for `EditMode`s that edit GeoJSON\nexport type GeoJsonEditModeType = EditMode<FeatureCollection, FeatureCollection>;\n\nexport interface GeoJsonEditModeConstructor {\n  new (): GeoJsonEditModeType;\n}\n\nexport class GeoJsonEditMode implements EditMode<FeatureCollection, GuideFeatureCollection> {\n  _clickSequence: Position[] = [];\n\n  getGuides(props: ModeProps<FeatureCollection>): GuideFeatureCollection {\n    return DEFAULT_GUIDES;\n  }\n\n  getTooltips(props: ModeProps<FeatureCollection>): Tooltip[] {\n    return DEFAULT_TOOLTIPS;\n  }\n\n  getSelectedFeature(props: ModeProps<FeatureCollection>): Feature | null | undefined {\n    if (props.selectedIndexes.length === 1) {\n      return props.data.features[props.selectedIndexes[0]];\n    }\n    return null;\n  }\n\n  getSelectedGeometry(props: ModeProps<FeatureCollection>): Geometry | null | undefined {\n    const feature = this.getSelectedFeature(props);\n    if (feature) {\n      return feature.geometry;\n    }\n    return null;\n  }\n\n  getSelectedFeaturesAsFeatureCollection(props: ModeProps<FeatureCollection>): FeatureCollection {\n    const { features } = props.data;\n    const selectedFeatures = props.selectedIndexes.map((selectedIndex) => features[selectedIndex]);\n    return {\n      type: 'FeatureCollection',\n      features: selectedFeatures,\n    };\n  }\n\n  getClickSequence(): Position[] {\n    return this._clickSequence;\n  }\n\n  addClickSequence({ mapCoords }: ClickEvent): void {\n    this._clickSequence.push(mapCoords);\n  }\n\n  resetClickSequence(): void {\n    this._clickSequence = [];\n  }\n\n  getTentativeGuide(props: ModeProps<FeatureCollection>): TentativeFeature | null | undefined {\n    const guides = this.getGuides(props);\n\n    // @ts-ignore\n    return guides.features.find((f) => f.properties && f.properties.guideType === 'tentative');\n  }\n\n  isSelectionPicked(picks: Pick[], props: ModeProps<FeatureCollection>): boolean {\n    if (!picks.length) return false;\n    const pickedFeatures = getNonGuidePicks(picks).map(({ index }) => index);\n    const pickedHandles = getPickedEditHandles(picks).map(\n      ({ properties }) => properties.featureIndex\n    );\n    const pickedIndexes = new Set([...pickedFeatures, ...pickedHandles]);\n    return props.selectedIndexes.some((index) => pickedIndexes.has(index));\n  }\n\n  rewindPolygon(feature: Feature): Feature {\n    const { geometry } = feature;\n\n    const isPolygonal = geometry.type === 'Polygon' || geometry.type === 'MultiPolygon';\n    if (isPolygonal) {\n      // @ts-ignore\n      return rewind(feature);\n    }\n\n    return feature;\n  }\n\n  getAddFeatureAction(\n    featureOrGeometry: Geometry | Feature,\n    features: FeatureCollection\n  ): GeoJsonEditAction {\n    // Unsure why flow can't deal with Geometry type, but there I fixed it\n    const featureOrGeometryAsAny: any = featureOrGeometry;\n\n    const feature: any =\n      featureOrGeometryAsAny.type === 'Feature'\n        ? featureOrGeometryAsAny\n        : {\n            type: 'Feature',\n            properties: {},\n            geometry: featureOrGeometryAsAny,\n          };\n\n    const rewindFeature = this.rewindPolygon(feature);\n    const updatedData = new ImmutableFeatureCollection(features)\n      .addFeature(rewindFeature)\n      .getObject();\n\n    return {\n      updatedData,\n      editType: 'addFeature',\n      editContext: {\n        featureIndexes: [updatedData.features.length - 1],\n      },\n    };\n  }\n\n  getAddManyFeaturesAction(\n    { features: featuresToAdd }: FeatureCollection,\n    features: FeatureCollection\n  ): GeoJsonEditAction {\n    let updatedData = new ImmutableFeatureCollection(features);\n    const initialIndex = updatedData.getObject().features.length;\n    const updatedIndexes = [];\n    for (const feature of featuresToAdd) {\n      const { properties, geometry } = feature;\n      const geometryAsAny: any = geometry;\n      updatedData = updatedData.addFeature({\n        type: 'Feature',\n        properties,\n        geometry: geometryAsAny,\n      });\n      updatedIndexes.push(initialIndex + updatedIndexes.length);\n    }\n\n    return {\n      updatedData: updatedData.getObject(),\n      editType: 'addFeature',\n      editContext: {\n        featureIndexes: updatedIndexes,\n      },\n    };\n  }\n\n  getAddFeatureOrBooleanPolygonAction(\n    featureOrGeometry: Polygon | Feature,\n    props: ModeProps<FeatureCollection>\n  ): GeoJsonEditAction | null | undefined {\n    const featureOrGeometryAsAny: any = featureOrGeometry;\n\n    const selectedFeature = this.getSelectedFeature(props);\n    const { modeConfig } = props;\n    if (modeConfig && modeConfig.booleanOperation) {\n      if (\n        !selectedFeature ||\n        (selectedFeature.geometry.type !== 'Polygon' &&\n          selectedFeature.geometry.type !== 'MultiPolygon')\n      ) {\n        // eslint-disable-next-line no-console,no-undef\n        console.warn(\n          'booleanOperation only supported for single Polygon or MultiPolygon selection'\n        );\n        return null;\n      }\n\n      const feature =\n        featureOrGeometryAsAny.type === 'Feature'\n          ? featureOrGeometryAsAny\n          : {\n              type: 'Feature',\n              geometry: featureOrGeometryAsAny,\n            };\n\n      let updatedGeometry;\n      if (modeConfig.booleanOperation === 'union') {\n        updatedGeometry = turfUnion(selectedFeature, feature);\n      } else if (modeConfig.booleanOperation === 'difference') {\n        // @ts-ignore\n        updatedGeometry = turfDifference(selectedFeature, feature);\n      } else if (modeConfig.booleanOperation === 'intersection') {\n        // @ts-ignore\n        updatedGeometry = turfIntersect(selectedFeature, feature);\n      } else {\n        // eslint-disable-next-line no-console,no-undef\n        console.warn(`Invalid booleanOperation ${modeConfig.booleanOperation}`);\n        return null;\n      }\n\n      if (!updatedGeometry) {\n        // eslint-disable-next-line no-console,no-undef\n        console.warn('Canceling edit. Boolean operation erased entire polygon.');\n        return null;\n      }\n\n      const featureIndex = props.selectedIndexes[0];\n\n      const updatedData = new ImmutableFeatureCollection(props.data)\n        .replaceGeometry(featureIndex, updatedGeometry.geometry)\n        .getObject();\n\n      const editAction: GeoJsonEditAction = {\n        updatedData,\n        editType: 'unionGeometry',\n        editContext: {\n          featureIndexes: [featureIndex],\n        },\n      };\n\n      return editAction;\n    }\n    return this.getAddFeatureAction(featureOrGeometry, props.data);\n  }\n\n  createTentativeFeature(props: ModeProps<FeatureCollection>): TentativeFeature {\n    return null;\n  }\n\n  handleClick(event: ClickEvent, props: ModeProps<FeatureCollection>): void {}\n  handlePointerMove(event: PointerMoveEvent, props: ModeProps<FeatureCollection>): void {\n    const tentativeFeature = this.createTentativeFeature(props);\n    if (tentativeFeature) {\n      props.onEdit({\n        updatedData: props.data,\n        editType: 'updateTentativeFeature',\n        editContext: {\n          feature: tentativeFeature,\n        },\n      });\n    }\n  }\n  handleStartDragging(event: StartDraggingEvent, props: ModeProps<FeatureCollection>): void {}\n  handleStopDragging(event: StopDraggingEvent, props: ModeProps<FeatureCollection>): void {}\n  handleDragging(event: DraggingEvent, props: ModeProps<FeatureCollection>): void {}\n\n  handleKeyUp(event: KeyboardEvent, props: ModeProps<FeatureCollection>): void {\n    if (event.key === 'Escape') {\n      this.resetClickSequence();\n      props.onEdit({\n        // Because the new drawing feature is dropped, so the data will keep as the same.\n        updatedData: props.data,\n        editType: 'cancelFeature',\n        editContext: {},\n      });\n    }\n  }\n}\n\nexport function getIntermediatePosition(position1: Position, position2: Position): Position {\n  const intermediatePosition = [\n    (position1[0] + position2[0]) / 2.0,\n    (position1[1] + position2[1]) / 2.0,\n  ];\n  // @ts-ignore\n  return intermediatePosition;\n}\n","import * as vec4 from 'gl-matrix/vec4';\n\n// Helper, avoids low-precision 32 bit matrices from gl-matrix mat4.create()\nexport function createMat4() {\n  return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}\n\n// Transforms a vec4 with a projection matrix\nexport function transformVector(matrix, vector) {\n  const result = vec4.transformMat4([], vector, matrix);\n  vec4.scale(result, result, 1 / result[3]);\n  return result;\n}\n\nexport function mod(value, divisor) {\n  const modulus = value % divisor;\n  return modulus < 0 ? divisor + modulus : modulus;\n}\n\nexport function lerp(start, end, step) {\n  return step * end + (1 - step) * start;\n}\n\nfunction ieLog2(x) {\n  return Math.log(x) * Math.LOG2E;\n}\n// Handle missing log2 in IE 11\nexport const log2 = Math.log2 || ieLog2;\n","// Replacement for the external assert method to reduce bundle size\n// Note: We don't use the second \"message\" argument in calling code,\n// so no need to support it here\nexport default function assert(condition, message) {\n  if (!condition) {\n    throw new Error(message || '@math.gl/web-mercator: assertion failed.');\n  }\n}\n","// TODO - THE UTILITIES IN THIS FILE SHOULD BE IMPORTED FROM WEB-MERCATOR-VIEWPORT MODULE\n\nimport {createMat4, transformVector, log2} from './math-utils';\n\nimport * as mat4 from 'gl-matrix/mat4';\nimport * as vec2 from 'gl-matrix/vec2';\nimport * as vec3 from 'gl-matrix/vec3';\nimport assert from './assert';\n\n// CONSTANTS\nconst PI = Math.PI;\nconst PI_4 = PI / 4;\nconst DEGREES_TO_RADIANS = PI / 180;\nconst RADIANS_TO_DEGREES = 180 / PI;\nconst TILE_SIZE = 512;\n// Average circumference (40075 km equatorial, 40007 km meridional)\nconst EARTH_CIRCUMFERENCE = 40.03e6;\n\n// Mapbox default altitude\nexport const DEFAULT_ALTITUDE = 1.5;\n\n/** Util functions **/\nexport function zoomToScale(zoom) {\n  return Math.pow(2, zoom);\n}\n\nexport function scaleToZoom(scale) {\n  return log2(scale);\n}\n\n/**\n * Project [lng,lat] on sphere onto [x,y] on 512*512 Mercator Zoom 0 tile.\n * Performs the nonlinear part of the web mercator projection.\n * Remaining projection is done with 4x4 matrices which also handles\n * perspective.\n *\n * @param lngLat - [lng, lat] coordinates\n *   Specifies a point on the sphere to project onto the map.\n * @return [x,y] coordinates.\n */\nexport function lngLatToWorld([lng, lat]) {\n  assert(Number.isFinite(lng));\n  assert(Number.isFinite(lat) && lat >= -90 && lat <= 90, 'invalid latitude');\n\n  const lambda2 = lng * DEGREES_TO_RADIANS;\n  const phi2 = lat * DEGREES_TO_RADIANS;\n  const x = (TILE_SIZE * (lambda2 + PI)) / (2 * PI);\n  const y = (TILE_SIZE * (PI + Math.log(Math.tan(PI_4 + phi2 * 0.5)))) / (2 * PI);\n  return [x, y];\n}\n\n// Unproject world point [x,y] on map onto {lat, lon} on sphere\nexport function worldToLngLat([x, y]) {\n  const lambda2 = (x / TILE_SIZE) * (2 * PI) - PI;\n  const phi2 = 2 * (Math.atan(Math.exp((y / TILE_SIZE) * (2 * PI) - PI)) - PI_4);\n  return [lambda2 * RADIANS_TO_DEGREES, phi2 * RADIANS_TO_DEGREES];\n}\n\n// Returns the zoom level that gives a 1 meter pixel at a certain latitude\n// 1 = C*cos(y)/2^z/TILE_SIZE = C*cos(y)/2^(z+9)\nexport function getMeterZoom({latitude}) {\n  assert(Number.isFinite(latitude));\n  const latCosine = Math.cos(latitude * DEGREES_TO_RADIANS);\n  return scaleToZoom(EARTH_CIRCUMFERENCE * latCosine) - 9;\n}\n\n/**\n * Calculate distance scales in meters around current lat/lon, both for\n * degrees and pixels.\n * In mercator projection mode, the distance scales vary significantly\n * with latitude.\n */\n\nexport function getDistanceScales({latitude, longitude, highPrecision = false}) {\n  assert(Number.isFinite(latitude) && Number.isFinite(longitude));\n\n  const result = {};\n  const worldSize = TILE_SIZE;\n  const latCosine = Math.cos(latitude * DEGREES_TO_RADIANS);\n\n  /**\n   * Number of pixels occupied by one degree longitude around current lat/lon:\n     unitsPerDegreeX = d(lngLatToWorld([lng, lat])[0])/d(lng)\n       = scale * TILE_SIZE * DEGREES_TO_RADIANS / (2 * PI)\n     unitsPerDegreeY = d(lngLatToWorld([lng, lat])[1])/d(lat)\n       = -scale * TILE_SIZE * DEGREES_TO_RADIANS / cos(lat * DEGREES_TO_RADIANS)  / (2 * PI)\n   */\n  const unitsPerDegreeX = worldSize / 360;\n  const unitsPerDegreeY = unitsPerDegreeX / latCosine;\n\n  /**\n   * Number of pixels occupied by one meter around current lat/lon:\n   */\n  const altUnitsPerMeter = worldSize / EARTH_CIRCUMFERENCE / latCosine;\n\n  /**\n   * LngLat: longitude -> east and latitude -> north (bottom left)\n   * UTM meter offset: x -> east and y -> north (bottom left)\n   * World space: x -> east and y -> south (top left)\n   *\n   * Y needs to be flipped when converting delta degree/meter to delta pixels\n   */\n  result.unitsPerMeter = [altUnitsPerMeter, altUnitsPerMeter, altUnitsPerMeter];\n  result.metersPerUnit = [1 / altUnitsPerMeter, 1 / altUnitsPerMeter, 1 / altUnitsPerMeter];\n\n  result.unitsPerDegree = [unitsPerDegreeX, unitsPerDegreeY, altUnitsPerMeter];\n  result.degreesPerUnit = [1 / unitsPerDegreeX, 1 / unitsPerDegreeY, 1 / altUnitsPerMeter];\n\n  /**\n   * Taylor series 2nd order for 1/latCosine\n     f'(a) * (x - a)\n       = d(1/cos(lat * DEGREES_TO_RADIANS))/d(lat) * dLat\n       = DEGREES_TO_RADIANS * tan(lat * DEGREES_TO_RADIANS) / cos(lat * DEGREES_TO_RADIANS) * dLat\n   */\n  if (highPrecision) {\n    const latCosine2 = (DEGREES_TO_RADIANS * Math.tan(latitude * DEGREES_TO_RADIANS)) / latCosine;\n    const unitsPerDegreeY2 = (unitsPerDegreeX * latCosine2) / 2;\n    const altUnitsPerDegree2 = (worldSize / EARTH_CIRCUMFERENCE) * latCosine2;\n    const altUnitsPerMeter2 = (altUnitsPerDegree2 / unitsPerDegreeY) * altUnitsPerMeter;\n\n    result.unitsPerDegree2 = [0, unitsPerDegreeY2, altUnitsPerDegree2];\n    result.unitsPerMeter2 = [altUnitsPerMeter2, 0, altUnitsPerMeter2];\n  }\n\n  // Main results, used for converting meters to latlng deltas and scaling offsets\n  return result;\n}\n\n/**\n * Offset a lng/lat position by meterOffset (northing, easting)\n */\nexport function addMetersToLngLat(lngLatZ, xyz) {\n  const [longitude, latitude, z0] = lngLatZ;\n  const [x, y, z] = xyz;\n\n  const {unitsPerMeter, unitsPerMeter2} = getDistanceScales({\n    longitude,\n    latitude,\n    highPrecision: true\n  });\n\n  const worldspace = lngLatToWorld(lngLatZ);\n  worldspace[0] += x * (unitsPerMeter[0] + unitsPerMeter2[0] * y);\n  worldspace[1] += y * (unitsPerMeter[1] + unitsPerMeter2[1] * y);\n\n  // @ts-ignore\n  const newLngLat = worldToLngLat(worldspace);\n  const newZ = (z0 || 0) + (z || 0);\n\n  return Number.isFinite(z0) || Number.isFinite(z) ? [newLngLat[0], newLngLat[1], newZ] : newLngLat;\n}\n\n// ATTRIBUTION:\n// view and projection matrix creation is intentionally kept compatible with\n// mapbox-gl's implementation to ensure that seamless interoperation\n// with mapbox and react-map-gl. See: https://github.com/mapbox/mapbox-gl-js\n\nexport function getViewMatrix({\n  // Viewport props\n  height,\n  pitch,\n  bearing,\n  altitude,\n  // Pre-calculated parameters\n  scale,\n  center = null\n}) {\n  // VIEW MATRIX: PROJECTS MERCATOR WORLD COORDINATES\n  // Note that mercator world coordinates typically need to be flipped\n  //\n  // Note: As usual, matrix operation orders should be read in reverse\n  // since vectors will be multiplied from the right during transformation\n  const vm = createMat4();\n\n  // Move camera to altitude (along the pitch & bearing direction)\n  mat4.translate(vm, vm, [0, 0, -altitude]);\n\n  // Rotate by bearing, and then by pitch (which tilts the view)\n  mat4.rotateX(vm, vm, -pitch * DEGREES_TO_RADIANS);\n  mat4.rotateZ(vm, vm, bearing * DEGREES_TO_RADIANS);\n\n  scale /= height;\n  mat4.scale(vm, vm, [scale, scale, scale]);\n\n  if (center) {\n    mat4.translate(vm, vm, vec3.negate([], center));\n  }\n\n  return vm;\n}\n\n// PROJECTION MATRIX PARAMETERS\n// Variable fov (in radians)\nexport function getProjectionParameters({\n  width,\n  height,\n  fovy = altitudeToFovy(DEFAULT_ALTITUDE),\n  altitude,\n  pitch = 0,\n  nearZMultiplier = 1,\n  farZMultiplier = 1\n}) {\n  // For back-compatibility allow field of view to be\n  // derived from altitude\n  if (altitude !== undefined) {\n    fovy = altitudeToFovy(altitude);\n  }\n  const halfFov = 0.5 * fovy * DEGREES_TO_RADIANS;\n  const focalDistance = fovyToAltitude(fovy);\n\n  // Find the distance from the center point to the center top\n  // in focal distance units using law of sines.\n  const pitchRadians = pitch * DEGREES_TO_RADIANS;\n  const topHalfSurfaceDistance =\n    (Math.sin(halfFov) * focalDistance) /\n    Math.sin(Math.min(Math.max(Math.PI / 2 - pitchRadians - halfFov, 0.01), Math.PI - 0.01));\n\n  // Calculate z value of the farthest fragment that should be rendered.\n  const farZ = Math.sin(pitchRadians) * topHalfSurfaceDistance + focalDistance;\n\n  return {\n    fov: 2 * halfFov,\n    aspect: width / height,\n    focalDistance,\n    near: nearZMultiplier,\n    far: farZ * farZMultiplier\n  };\n}\n\n// PROJECTION MATRIX: PROJECTS FROM CAMERA (VIEW) SPACE TO CLIPSPACE\n// To match mapbox's z buffer:\n// <= 0.28 - nearZMultiplier: 0.1, farZmultiplier: 1\n// >= 0.29 - nearZMultiplier: 1 / height, farZMultiplier: 1.01\nexport function getProjectionMatrix({\n  width,\n  height,\n  pitch,\n  altitude,\n  fovy,\n  nearZMultiplier,\n  farZMultiplier\n}) {\n  const {fov, aspect, near, far} = getProjectionParameters({\n    width,\n    height,\n    altitude,\n    fovy,\n    pitch,\n    nearZMultiplier,\n    farZMultiplier\n  });\n\n  const projectionMatrix = mat4.perspective(\n    [],\n    fov, // fov in radians\n    aspect, // aspect ratio\n    near, // near plane\n    far // far plane\n  );\n\n  return projectionMatrix;\n}\n\n// Utility function to calculate the field of view such that\n// the focal distance is equal to the ground distance. This\n// is how mapbox's z fov is calculated\nexport function altitudeToFovy(altitude) {\n  return 2 * Math.atan(0.5 / altitude) * RADIANS_TO_DEGREES;\n}\n\nexport function fovyToAltitude(fovy) {\n  return 0.5 / Math.tan(0.5 * fovy * DEGREES_TO_RADIANS);\n}\n\n// Project flat coordinates to pixels on screen.\nexport function worldToPixels(xyz, pixelProjectionMatrix) {\n  const [x, y, z = 0] = xyz;\n  assert(Number.isFinite(x) && Number.isFinite(y) && Number.isFinite(z));\n\n  return transformVector(pixelProjectionMatrix, [x, y, z, 1]);\n}\n\n// Unproject pixels on screen to flat coordinates.\nexport function pixelsToWorld(xyz, pixelUnprojectionMatrix, targetZ = 0) {\n  const [x, y, z] = xyz;\n  assert(Number.isFinite(x) && Number.isFinite(y), 'invalid pixel coordinate');\n\n  if (Number.isFinite(z)) {\n    // Has depth component\n    const coord = transformVector(pixelUnprojectionMatrix, [x, y, z, 1]);\n    return coord;\n  }\n\n  // since we don't know the correct projected z value for the point,\n  // unproject two points to get a line and then find the point on that line with z=0\n  const coord0 = transformVector(pixelUnprojectionMatrix, [x, y, 0, 1]);\n  const coord1 = transformVector(pixelUnprojectionMatrix, [x, y, 1, 1]);\n\n  const z0 = coord0[2];\n  const z1 = coord1[2];\n\n  const t = z0 === z1 ? 0 : ((targetZ || 0) - z0) / (z1 - z0);\n  return vec2.lerp([], coord0, coord1, t);\n}\n","// @ts-nocheck TODO padding\nimport WebMercatorViewport from './web-mercator-viewport';\nimport assert from './assert';\nimport {log2} from './math-utils';\n\n// Returns map settings {latitude, longitude, zoom}\n// that will contain the provided corners within the provided width.\n// Only supports non-perspective mode.\n\nexport default function fitBounds({\n  width,\n  height,\n  bounds,\n  minExtent = 0, // 0.01 would be about 1000 meters (degree is ~110KM)\n  maxZoom = 24, // ~x4,000,000 => About 10 meter extents\n  // options\n  padding = 0,\n  offset = [0, 0]\n}) {\n  const [[west, south], [east, north]] = bounds;\n\n  if (Number.isFinite(padding)) {\n    const p = padding;\n    padding = {\n      top: p,\n      bottom: p,\n      left: p,\n      right: p\n    };\n  } else {\n    // Make sure all the required properties are set\n    assert(\n      Number.isFinite(padding.top) &&\n        Number.isFinite(padding.bottom) &&\n        Number.isFinite(padding.left) &&\n        Number.isFinite(padding.right)\n    );\n  }\n\n  const viewport = new WebMercatorViewport({\n    width,\n    height,\n    longitude: 0,\n    latitude: 0,\n    zoom: 0\n  });\n\n  const nw = viewport.project([west, north]);\n  const se = viewport.project([east, south]);\n\n  // width/height on the Web Mercator plane\n  const size = [\n    Math.max(Math.abs(se[0] - nw[0]), minExtent),\n    Math.max(Math.abs(se[1] - nw[1]), minExtent)\n  ];\n\n  const targetSize = [\n    width - padding.left - padding.right - Math.abs(offset[0]) * 2,\n    height - padding.top - padding.bottom - Math.abs(offset[1]) * 2\n  ];\n\n  assert(targetSize[0] > 0 && targetSize[1] > 0);\n\n  // scale = screen pixels per unit on the Web Mercator plane\n  const scaleX = targetSize[0] / size[0];\n  const scaleY = targetSize[1] / size[1];\n\n  // Find how much we need to shift the center\n  const offsetX = (padding.right - padding.left) / 2 / scaleX;\n  const offsetY = (padding.bottom - padding.top) / 2 / scaleY;\n\n  const center = [(se[0] + nw[0]) / 2 + offsetX, (se[1] + nw[1]) / 2 + offsetY];\n\n  const centerLngLat = viewport.unproject(center);\n  const zoom = Math.min(maxZoom, viewport.zoom + log2(Math.abs(Math.min(scaleX, scaleY))));\n\n  assert(Number.isFinite(zoom));\n\n  return {\n    longitude: centerLngLat[0],\n    latitude: centerLngLat[1],\n    zoom\n  };\n}\n","import {worldToLngLat} from './web-mercator-utils';\nimport * as vec2 from 'gl-matrix/vec2';\nimport {transformVector} from './math-utils';\n\nconst DEGREES_TO_RADIANS = Math.PI / 180;\n\n/*\n * Returns the quad at the intersection of the frustum and the given z plane\n * @param {WebMercatorViewport} viewport\n * @param {Number} z - elevation in meters\n */\nexport default function getBounds(viewport, z = 0) {\n  const {width, height, unproject} = viewport;\n  const unprojectOps = {targetZ: z};\n  const bottomLeft = unproject([0, height], unprojectOps);\n  const bottomRight = unproject([width, height], unprojectOps);\n  let topLeft;\n  let topRight;\n\n  const halfFov = viewport.fovy\n    ? 0.5 * viewport.fovy * DEGREES_TO_RADIANS\n    : Math.atan(0.5 / viewport.altitude);\n  const angleToGround = (90 - viewport.pitch) * DEGREES_TO_RADIANS;\n  // The top plane is parallel to the ground if halfFov == angleToGround\n  if (halfFov > angleToGround - 0.01) {\n    // intersect with the far plane\n    topLeft = unprojectOnFarPlane(viewport, 0, z);\n    topRight = unprojectOnFarPlane(viewport, width, z);\n  } else {\n    // intersect with the top plane\n    topLeft = unproject([0, 0], unprojectOps);\n    topRight = unproject([width, 0], unprojectOps);\n  }\n\n  return [bottomLeft, bottomRight, topRight, topLeft];\n}\n\n/*\n * Find a point on the far clipping plane of the viewport\n * @param {WebMercatorViewport} viewport\n * @param {Number} x - projected x in screen space\n * @param {Number} targetZ - the elevation of the point in meters\n */\nfunction unprojectOnFarPlane(viewport, x, targetZ) {\n  const {pixelUnprojectionMatrix} = viewport;\n  const coord0 = transformVector(pixelUnprojectionMatrix, [x, 0, 1, 1]);\n  const coord1 = transformVector(pixelUnprojectionMatrix, [x, viewport.height, 1, 1]);\n\n  const z = targetZ * viewport.distanceScales.unitsPerMeter[2];\n  const t = (z - coord0[2]) / (coord1[2] - coord0[2]);\n  const coord = vec2.lerp([], coord0, coord1, t);\n\n  const result = worldToLngLat(coord);\n  result[2] = targetZ;\n  return result;\n}\n","// View and Projection Matrix calculations for mapbox-js style map view properties\nimport {createMat4} from './math-utils';\n\nimport {\n  zoomToScale,\n  pixelsToWorld,\n  lngLatToWorld,\n  worldToLngLat,\n  worldToPixels,\n  altitudeToFovy,\n  fovyToAltitude,\n  DEFAULT_ALTITUDE,\n  getProjectionMatrix,\n  getDistanceScales,\n  getViewMatrix\n} from './web-mercator-utils';\nimport fitBounds from './fit-bounds';\nimport getBounds from './get-bounds';\n\nimport * as mat4 from 'gl-matrix/mat4';\nimport * as vec2 from 'gl-matrix/vec2';\nimport * as vec3 from 'gl-matrix/vec3';\n\nexport default class WebMercatorViewport {\n  // eslint-disable-next-line max-statements\n  constructor(\n    {\n      // Map state\n      width,\n      height,\n      latitude = 0,\n      longitude = 0,\n      zoom = 0,\n      pitch = 0,\n      bearing = 0,\n      altitude = null,\n      fovy = null,\n      position = null,\n      nearZMultiplier = 0.02,\n      farZMultiplier = 1.01\n    } = {width: 1, height: 1}\n  ) {\n    // Silently allow apps to send in 0,0 to facilitate isomorphic render etc\n    width = width || 1;\n    height = height || 1;\n\n    // `fovy` & `altitude` are independent parameters, one for the\n    // projection and the latter for the view matrix. In the past,\n    // the `fovy` was always derived from the `altitude`\n    if (fovy === null && altitude === null) {\n      altitude = DEFAULT_ALTITUDE;\n      fovy = altitudeToFovy(altitude);\n    } else if (fovy === null) {\n      fovy = altitudeToFovy(altitude);\n    } else if (altitude === null) {\n      altitude = fovyToAltitude(fovy);\n    }\n\n    const scale = zoomToScale(zoom);\n    // Altitude - prevent division by 0\n    // TODO - just throw an Error instead?\n    altitude = Math.max(0.75, altitude);\n\n    const distanceScales = getDistanceScales({longitude, latitude});\n\n    const center = lngLatToWorld([longitude, latitude]);\n    center[2] = 0;\n\n    if (position) {\n      vec3.add(center, center, vec3.mul([], position, distanceScales.unitsPerMeter));\n    }\n\n    this.projectionMatrix = getProjectionMatrix({\n      width,\n      height,\n      pitch,\n      fovy,\n      nearZMultiplier,\n      farZMultiplier\n    });\n\n    this.viewMatrix = getViewMatrix({\n      height,\n      scale,\n      center,\n      pitch,\n      bearing,\n      altitude\n    });\n\n    // Save parameters\n    this.width = width;\n    this.height = height;\n    this.scale = scale;\n\n    this.latitude = latitude;\n    this.longitude = longitude;\n    this.zoom = zoom;\n    this.pitch = pitch;\n    this.bearing = bearing;\n    this.altitude = altitude;\n    this.fovy = fovy;\n    this.center = center;\n    this.meterOffset = position || [0, 0, 0];\n\n    this.distanceScales = distanceScales;\n\n    this._initMatrices();\n\n    // Bind methods for easy access\n    this.equals = this.equals.bind(this);\n    this.project = this.project.bind(this);\n    this.unproject = this.unproject.bind(this);\n    this.projectPosition = this.projectPosition.bind(this);\n    this.unprojectPosition = this.unprojectPosition.bind(this);\n\n    Object.freeze(this);\n  }\n\n  _initMatrices() {\n    const {width, height, projectionMatrix, viewMatrix} = this;\n\n    // Note: As usual, matrix operations should be applied in \"reverse\" order\n    // since vectors will be multiplied in from the right during transformation\n    const vpm = createMat4();\n    mat4.multiply(vpm, vpm, projectionMatrix);\n    mat4.multiply(vpm, vpm, viewMatrix);\n    this.viewProjectionMatrix = vpm;\n\n    // Calculate matrices and scales needed for projection\n    /**\n     * Builds matrices that converts preprojected lngLats to screen pixels\n     * and vice versa.\n     * Note: Currently returns bottom-left coordinates!\n     * Note: Starts with the GL projection matrix and adds steps to the\n     *       scale and translate that matrix onto the window.\n     * Note: WebGL controls clip space to screen projection with gl.viewport\n     *       and does not need this step.\n     */\n    const m = createMat4();\n\n    // matrix for conversion from location to screen coordinates\n    mat4.scale(m, m, [width / 2, -height / 2, 1]);\n    mat4.translate(m, m, [1, -1, 0]);\n    mat4.multiply(m, m, vpm);\n\n    const mInverse = mat4.invert(createMat4(), m);\n    if (!mInverse) {\n      throw new Error('Pixel project matrix not invertible');\n    }\n\n    this.pixelProjectionMatrix = m;\n    this.pixelUnprojectionMatrix = mInverse;\n  }\n\n  // Two viewports are equal if width and height are identical, and if\n  // their view and projection matrices are (approximately) equal.\n  equals(viewport) {\n    if (!(viewport instanceof WebMercatorViewport)) {\n      return false;\n    }\n\n    return (\n      viewport.width === this.width &&\n      viewport.height === this.height &&\n      mat4.equals(viewport.projectionMatrix, this.projectionMatrix) &&\n      mat4.equals(viewport.viewMatrix, this.viewMatrix)\n    );\n  }\n\n  // Projects xyz (possibly latitude and longitude) to pixel coordinates in window\n  // using viewport projection parameters\n  project(xyz, {topLeft = true} = {}) {\n    const worldPosition = this.projectPosition(xyz);\n    const coord = worldToPixels(worldPosition, this.pixelProjectionMatrix);\n\n    const [x, y] = coord;\n    const y2 = topLeft ? y : this.height - y;\n    return xyz.length === 2 ? [x, y2] : [x, y2, coord[2]];\n  }\n\n  // Unproject pixel coordinates on screen onto world coordinates,\n  // (possibly [lon, lat]) on map.\n  unproject(xyz, {topLeft = true, targetZ = undefined} = {}) {\n    const [x, y, z] = xyz;\n\n    const y2 = topLeft ? y : this.height - y;\n    const targetZWorld = targetZ && targetZ * this.distanceScales.unitsPerMeter[2];\n    const coord = pixelsToWorld([x, y2, z], this.pixelUnprojectionMatrix, targetZWorld);\n    const [X, Y, Z] = this.unprojectPosition(coord);\n\n    if (Number.isFinite(z)) {\n      return [X, Y, Z];\n    }\n    return Number.isFinite(targetZ) ? [X, Y, targetZ] : [X, Y];\n  }\n\n  // NON_LINEAR PROJECTION HOOKS\n  // Used for web meractor projection\n\n  projectPosition(xyz) {\n    const [X, Y] = lngLatToWorld(xyz);\n    const Z = (xyz[2] || 0) * this.distanceScales.unitsPerMeter[2];\n    return [X, Y, Z];\n  }\n\n  unprojectPosition(xyz) {\n    const [X, Y] = worldToLngLat(xyz);\n    const Z = (xyz[2] || 0) * this.distanceScales.metersPerUnit[2];\n    return [X, Y, Z];\n  }\n\n  // Project [lng,lat] on sphere onto [x,y] on 512*512 Mercator Zoom 0 tile.\n  projectFlat(lngLat) {\n    return lngLatToWorld(lngLat);\n  }\n\n  // Unproject world point [x,y] on map onto {lat, lon} on sphere\n  unprojectFlat(xy) {\n    return worldToLngLat(xy);\n  }\n\n  // Get the map center that place a given [lng, lat] coordinate at screen point [x, y]\n  getMapCenterByLngLatPosition({lngLat, pos}) {\n    const fromLocation = pixelsToWorld(pos, this.pixelUnprojectionMatrix);\n    const toLocation = lngLatToWorld(lngLat);\n\n    const translate = vec2.add([], toLocation, vec2.negate([], fromLocation));\n    const newCenter = vec2.add([], this.center, translate);\n\n    return worldToLngLat(newCenter);\n  }\n\n  // Legacy method name\n  getLocationAtPoint({lngLat, pos}) {\n    return this.getMapCenterByLngLatPosition({lngLat, pos});\n  }\n\n  // Returns a new viewport that fit around the given rectangle.\n  fitBounds(bounds, options = {}) {\n    const {width, height} = this;\n    const {longitude, latitude, zoom} = fitBounds(Object.assign({width, height, bounds}, options));\n    return new WebMercatorViewport({width, height, longitude, latitude, zoom});\n  }\n\n  getBounds(options) {\n    const corners = this.getBoundingRegion(options);\n\n    const west = Math.min(...corners.map((p) => p[0]));\n    const east = Math.max(...corners.map((p) => p[0]));\n    const south = Math.min(...corners.map((p) => p[1]));\n    const north = Math.max(...corners.map((p) => p[1]));\n    return [\n      [west, south],\n      [east, north]\n    ];\n  }\n\n  getBoundingRegion(options = {}) {\n    return getBounds(this, options.z || 0);\n  }\n}\n","import {worldToLngLat} from './web-mercator-utils';\nimport {mod, log2} from './math-utils';\n\n// defined by mapbox-gl\nconst TILE_SIZE = 512;\n\n// Apply mathematical constraints to viewport props\n// eslint-disable-next-line complexity\nexport default function normalizeViewportProps({\n  width,\n  height,\n  longitude,\n  latitude,\n  zoom,\n  pitch = 0,\n  bearing = 0\n}) {\n  // Normalize degrees\n  if (longitude < -180 || longitude > 180) {\n    longitude = mod(longitude + 180, 360) - 180;\n  }\n  if (bearing < -180 || bearing > 180) {\n    bearing = mod(bearing + 180, 360) - 180;\n  }\n\n  // Constrain zoom and shift center at low zoom levels\n  const minZoom = log2(height / TILE_SIZE);\n  if (zoom <= minZoom) {\n    zoom = minZoom;\n    latitude = 0;\n  } else {\n    // Eliminate white space above and below the map\n    const halfHeightPixels = height / 2 / Math.pow(2, zoom);\n    const minLatitude = worldToLngLat([0, halfHeightPixels])[1];\n    if (latitude < minLatitude) {\n      latitude = minLatitude;\n    } else {\n      const maxLatitude = worldToLngLat([0, TILE_SIZE - halfHeightPixels])[1];\n      if (latitude > maxLatitude) {\n        latitude = maxLatitude;\n      }\n    }\n  }\n\n  return {width, height, longitude, latitude, zoom, pitch, bearing};\n}\n","import {lerp} from './math-utils';\nimport {scaleToZoom, zoomToScale, lngLatToWorld, worldToLngLat} from './web-mercator-utils';\nimport * as vec2 from 'gl-matrix/vec2';\n\nconst EPSILON = 0.01;\nconst VIEWPORT_TRANSITION_PROPS = ['longitude', 'latitude', 'zoom'];\nconst DEFAULT_OPTS = {\n  curve: 1.414,\n  speed: 1.2\n  // screenSpeed and maxDuration are used only if specified\n};\n\n/**\n * mapbox-gl-js flyTo : https://www.mapbox.com/mapbox-gl-js/api/#map#flyto.\n * It implements “Smooth and efficient zooming and panning.” algorithm by\n * \"Jarke J. van Wijk and Wim A.A. Nuij\"\n */\nexport default function flyToViewport(startProps, endProps, t, opts = {}) {\n  // Equations from above paper are referred where needed.\n\n  const viewport = {};\n\n  const {startZoom, startCenterXY, uDelta, w0, u1, S, rho, rho2, r0} = getFlyToTransitionParams(\n    startProps,\n    endProps,\n    opts\n  );\n\n  // If change in center is too small, do linear interpolaiton.\n  if (u1 < EPSILON) {\n    for (const key of VIEWPORT_TRANSITION_PROPS) {\n      const startValue = startProps[key];\n      const endValue = endProps[key];\n      viewport[key] = lerp(startValue, endValue, t);\n    }\n    return viewport;\n  }\n\n  const s = t * S;\n\n  const w = Math.cosh(r0) / Math.cosh(r0 + rho * s);\n  const u = (w0 * ((Math.cosh(r0) * Math.tanh(r0 + rho * s) - Math.sinh(r0)) / rho2)) / u1;\n\n  const scaleIncrement = 1 / w; // Using w method for scaling.\n  const newZoom = startZoom + scaleToZoom(scaleIncrement);\n\n  const newCenterWorld = vec2.scale([], uDelta, u);\n  vec2.add(newCenterWorld, newCenterWorld, startCenterXY);\n\n  const newCenter = worldToLngLat(newCenterWorld);\n  viewport.longitude = newCenter[0];\n  viewport.latitude = newCenter[1];\n  viewport.zoom = newZoom;\n  return viewport;\n}\n\n// returns transition duration in milliseconds\nexport function getFlyToDuration(startProps, endProps, opts = {}) {\n  opts = Object.assign({}, DEFAULT_OPTS, opts);\n  const {screenSpeed, speed, maxDuration} = opts;\n  const {S, rho} = getFlyToTransitionParams(startProps, endProps, opts);\n  const length = 1000 * S;\n  let duration;\n  if (Number.isFinite(screenSpeed)) {\n    duration = length / (screenSpeed / rho);\n  } else {\n    duration = length / speed;\n  }\n\n  return Number.isFinite(maxDuration) && duration > maxDuration ? 0 : duration;\n}\n\n// Private Methods\n\n// Calculate all parameters that are static for given startProps and endProps\nfunction getFlyToTransitionParams(startProps, endProps, opts) {\n  opts = Object.assign({}, DEFAULT_OPTS, opts);\n  const rho = opts.curve;\n  const startZoom = startProps.zoom;\n  const startCenter = [startProps.longitude, startProps.latitude];\n  const startScale = zoomToScale(startZoom);\n  const endZoom = endProps.zoom;\n  const endCenter = [endProps.longitude, endProps.latitude];\n  const scale = zoomToScale(endZoom - startZoom);\n\n  const startCenterXY = lngLatToWorld(startCenter);\n  const endCenterXY = lngLatToWorld(endCenter);\n  const uDelta = vec2.sub([], endCenterXY, startCenterXY);\n\n  const w0 = Math.max(startProps.width, startProps.height);\n  const w1 = w0 / scale;\n  const u1 = vec2.length(uDelta) * startScale;\n  // u0 is treated as '0' in Eq (9).\n\n  // If u1 is too small, will generate invalid number\n  const _u1 = Math.max(u1, EPSILON);\n\n  // Implement Equation (9) from above algorithm.\n  const rho2 = rho * rho;\n  const b0 = (w1 * w1 - w0 * w0 + rho2 * rho2 * _u1 * _u1) / (2 * w0 * rho2 * _u1);\n  const b1 = (w1 * w1 - w0 * w0 - rho2 * rho2 * _u1 * _u1) / (2 * w1 * rho2 * _u1);\n  const r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0);\n  const r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n  const S = (r1 - r0) / rho;\n\n  return {startZoom, startCenterXY, uDelta, w0, u1, S, rho, rho2, r0, r1};\n}\n","const INF = 1e20;\n\nexport default class TinySDF {\n    constructor({\n        fontSize = 24,\n        buffer = 3,\n        radius = 8,\n        cutoff = 0.25,\n        fontFamily = 'sans-serif',\n        fontWeight = 'normal',\n        fontStyle = 'normal'\n    } = {}) {\n        this.buffer = buffer;\n        this.cutoff = cutoff;\n        this.radius = radius;\n\n        // make the canvas size big enough to both have the specified buffer around the glyph\n        // for \"halo\", and account for some glyphs possibly being larger than their font size\n        const size = this.size = fontSize + buffer * 4;\n\n        const canvas = this._createCanvas(size);\n        const ctx = this.ctx = canvas.getContext('2d', {willReadFrequently: true});\n        ctx.font = `${fontStyle} ${fontWeight} ${fontSize}px ${fontFamily}`;\n\n        ctx.textBaseline = 'alphabetic';\n        ctx.textAlign = 'left'; // Necessary so that RTL text doesn't have different alignment\n        ctx.fillStyle = 'black';\n\n        // temporary arrays for the distance transform\n        this.gridOuter = new Float64Array(size * size);\n        this.gridInner = new Float64Array(size * size);\n        this.f = new Float64Array(size);\n        this.z = new Float64Array(size + 1);\n        this.v = new Uint16Array(size);\n    }\n\n    _createCanvas(size) {\n        const canvas = document.createElement('canvas');\n        canvas.width = canvas.height = size;\n        return canvas;\n    }\n\n    draw(char) {\n        const {\n            width: glyphAdvance,\n            actualBoundingBoxAscent,\n            actualBoundingBoxDescent,\n            actualBoundingBoxLeft,\n            actualBoundingBoxRight\n        } = this.ctx.measureText(char);\n\n        // The integer/pixel part of the top alignment is encoded in metrics.glyphTop\n        // The remainder is implicitly encoded in the rasterization\n        const glyphTop = Math.ceil(actualBoundingBoxAscent);\n        const glyphLeft = 0;\n\n        // If the glyph overflows the canvas size, it will be clipped at the bottom/right\n        const glyphWidth = Math.max(0, Math.min(this.size - this.buffer, Math.ceil(actualBoundingBoxRight - actualBoundingBoxLeft)));\n        const glyphHeight = Math.min(this.size - this.buffer, glyphTop + Math.ceil(actualBoundingBoxDescent));\n\n        const width = glyphWidth + 2 * this.buffer;\n        const height = glyphHeight + 2 * this.buffer;\n\n        const len = Math.max(width * height, 0);\n        const data = new Uint8ClampedArray(len);\n        const glyph = {data, width, height, glyphWidth, glyphHeight, glyphTop, glyphLeft, glyphAdvance};\n        if (glyphWidth === 0 || glyphHeight === 0) return glyph;\n\n        const {ctx, buffer, gridInner, gridOuter} = this;\n        ctx.clearRect(buffer, buffer, glyphWidth, glyphHeight);\n        ctx.fillText(char, buffer, buffer + glyphTop);\n        const imgData = ctx.getImageData(buffer, buffer, glyphWidth, glyphHeight);\n\n        // Initialize grids outside the glyph range to alpha 0\n        gridOuter.fill(INF, 0, len);\n        gridInner.fill(0, 0, len);\n\n        for (let y = 0; y < glyphHeight; y++) {\n            for (let x = 0; x < glyphWidth; x++) {\n                const a = imgData.data[4 * (y * glyphWidth + x) + 3] / 255; // alpha value\n                if (a === 0) continue; // empty pixels\n\n                const j = (y + buffer) * width + x + buffer;\n\n                if (a === 1) { // fully drawn pixels\n                    gridOuter[j] = 0;\n                    gridInner[j] = INF;\n\n                } else { // aliased pixels\n                    const d = 0.5 - a;\n                    gridOuter[j] = d > 0 ? d * d : 0;\n                    gridInner[j] = d < 0 ? d * d : 0;\n                }\n            }\n        }\n\n        edt(gridOuter, 0, 0, width, height, width, this.f, this.v, this.z);\n        edt(gridInner, buffer, buffer, glyphWidth, glyphHeight, width, this.f, this.v, this.z);\n\n        for (let i = 0; i < len; i++) {\n            const d = Math.sqrt(gridOuter[i]) - Math.sqrt(gridInner[i]);\n            data[i] = Math.round(255 - 255 * (d / this.radius + this.cutoff));\n        }\n\n        return glyph;\n    }\n}\n\n// 2D Euclidean squared distance transform by Felzenszwalb & Huttenlocher https://cs.brown.edu/~pff/papers/dt-final.pdf\nfunction edt(data, x0, y0, width, height, gridSize, f, v, z) {\n    for (let x = x0; x < x0 + width; x++) edt1d(data, y0 * gridSize + x, gridSize, height, f, v, z);\n    for (let y = y0; y < y0 + height; y++) edt1d(data, y * gridSize + x0, 1, width, f, v, z);\n}\n\n// 1D squared distance transform\nfunction edt1d(grid, offset, stride, length, f, v, z) {\n    v[0] = 0;\n    z[0] = -INF;\n    z[1] = INF;\n    f[0] = grid[offset];\n\n    for (let q = 1, k = 0, s = 0; q < length; q++) {\n        f[q] = grid[offset + q * stride];\n        const q2 = q * q;\n        do {\n            const r = v[k];\n            s = (f[q] - f[r] + q2 - r * r) / (q - r) / 2;\n        } while (s <= z[k] && --k > -1);\n\n        k++;\n        v[k] = q;\n        z[k] = s;\n        z[k + 1] = INF;\n    }\n\n    for (let q = 0, k = 0; q < length; q++) {\n        while (z[k + 1] < q) k++;\n        const r = v[k];\n        const qr = q - r;\n        grid[offset + q * stride] = f[r] + qr * qr;\n    }\n}\n","module.exports.VectorTile = require('./lib/vectortile.js');\nmodule.exports.VectorTileFeature = require('./lib/vectortilefeature.js');\nmodule.exports.VectorTileLayer = require('./lib/vectortilelayer.js');\n","export { ArrowStyles, DEFAULT_ARROWS, MAX_ARROWS } from './style';\n\n// Layers\nexport { default as EditableGeoJsonLayer } from './layers/editable-geojson-layer';\nexport { default as EditableH3ClusterLayer } from './layers/editable-h3-cluster-layer';\nexport { default as SelectionLayer } from './layers/selection-layer';\nexport { default as ElevatedEditHandleLayer } from './layers/elevated-edit-handle-layer';\n\n// Layers moved from deck.gl\nexport { default as PathOutlineLayer } from './layers/path-outline-layer/path-outline-layer';\nexport { default as PathMarkerLayer } from './layers/path-marker-layer/path-marker-layer';\nexport { default as JunctionScatterplotLayer } from './layers/junction-scatterplot-layer';\n\n// Utils\nexport { toDeckColor } from './utils';\n\n// Types\nexport type { Color, Viewport } from './types';\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {checkVector, deprecated} from '../lib/validators';\nimport Matrix from './base/matrix';\n// eslint-disable-next-line camelcase\nimport {vec2_transformMat4AsVector, vec3_transformMat4AsVector} from '../lib/gl-matrix-extras';\n\n// @ts-ignore: error TS2307: Cannot find module 'gl-matrix/...'.\nimport * as mat4 from 'gl-matrix/mat4';\n// @ts-ignore: error TS2307: Cannot find module 'gl-matrix/...'.\nimport * as vec2 from 'gl-matrix/vec2';\n// @ts-ignore: error TS2307: Cannot find module 'gl-matrix/...'.\nimport * as vec3 from 'gl-matrix/vec3';\n// @ts-ignore: error TS2307: Cannot find module 'gl-matrix/...'.\nimport * as vec4 from 'gl-matrix/vec4';\n\nconst IDENTITY = Object.freeze([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);\nconst ZERO = Object.freeze([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n\nconst INDICES = Object.freeze({\n  COL0ROW0: 0,\n  COL0ROW1: 1,\n  COL0ROW2: 2,\n  COL0ROW3: 3,\n  COL1ROW0: 4,\n  COL1ROW1: 5,\n  COL1ROW2: 6,\n  COL1ROW3: 7,\n  COL2ROW0: 8,\n  COL2ROW1: 9,\n  COL2ROW2: 10,\n  COL2ROW3: 11,\n  COL3ROW0: 12,\n  COL3ROW1: 13,\n  COL3ROW2: 14,\n  COL3ROW3: 15\n});\n\nconst constants = {};\n\nexport default class Matrix4 extends Matrix {\n  static get IDENTITY() {\n    constants.IDENTITY = constants.IDENTITY || Object.freeze(new Matrix4(IDENTITY));\n    return constants.IDENTITY;\n  }\n\n  static get ZERO() {\n    constants.ZERO = constants.ZERO || Object.freeze(new Matrix4(ZERO));\n    return constants.ZERO;\n  }\n\n  get INDICES() {\n    return INDICES;\n  }\n\n  get ELEMENTS() {\n    return 16;\n  }\n\n  get RANK() {\n    return 4;\n  }\n\n  constructor(array) {\n    // PERF NOTE: initialize elements as double precision numbers\n    super(-0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0);\n    if (arguments.length === 1 && Array.isArray(array)) {\n      this.copy(array);\n    } else {\n      this.identity();\n    }\n  }\n\n  copy(array) {\n    this[0] = array[0];\n    this[1] = array[1];\n    this[2] = array[2];\n    this[3] = array[3];\n    this[4] = array[4];\n    this[5] = array[5];\n    this[6] = array[6];\n    this[7] = array[7];\n    this[8] = array[8];\n    this[9] = array[9];\n    this[10] = array[10];\n    this[11] = array[11];\n    this[12] = array[12];\n    this[13] = array[13];\n    this[14] = array[14];\n    this[15] = array[15];\n    return this.check();\n  }\n\n  // eslint-disable-next-line max-params\n  set(m00, m10, m20, m30, m01, m11, m21, m31, m02, m12, m22, m32, m03, m13, m23, m33) {\n    this[0] = m00;\n    this[1] = m10;\n    this[2] = m20;\n    this[3] = m30;\n    this[4] = m01;\n    this[5] = m11;\n    this[6] = m21;\n    this[7] = m31;\n    this[8] = m02;\n    this[9] = m12;\n    this[10] = m22;\n    this[11] = m32;\n    this[12] = m03;\n    this[13] = m13;\n    this[14] = m23;\n    this[15] = m33;\n    return this.check();\n  }\n\n  // accepts row major order, stores as column major\n  // eslint-disable-next-line max-params\n  setRowMajor(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n    this[0] = m00;\n    this[1] = m10;\n    this[2] = m20;\n    this[3] = m30;\n    this[4] = m01;\n    this[5] = m11;\n    this[6] = m21;\n    this[7] = m31;\n    this[8] = m02;\n    this[9] = m12;\n    this[10] = m22;\n    this[11] = m32;\n    this[12] = m03;\n    this[13] = m13;\n    this[14] = m23;\n    this[15] = m33;\n    return this.check();\n  }\n\n  toRowMajor(result) {\n    result[0] = this[0];\n    result[1] = this[4];\n    result[2] = this[8];\n    result[3] = this[12];\n    result[4] = this[1];\n    result[5] = this[5];\n    result[6] = this[9];\n    result[7] = this[13];\n    result[8] = this[2];\n    result[9] = this[6];\n    result[10] = this[10];\n    result[11] = this[14];\n    result[12] = this[3];\n    result[13] = this[7];\n    result[14] = this[11];\n    result[15] = this[15];\n    return result;\n  }\n\n  // Constructors\n\n  identity() {\n    return this.copy(IDENTITY);\n  }\n\n  // Calculates a 4x4 matrix from the given quaternion\n  // q quat  Quaternion to create matrix from\n  fromQuaternion(q) {\n    mat4.fromQuat(this, q);\n    return this.check();\n  }\n\n  // Generates a frustum matrix with the given bounds\n  // left  Number  Left bound of the frustum\n  // right Number  Right bound of the frustum\n  // bottom  Number  Bottom bound of the frustum\n  // top Number  Top bound of the frustum\n  // near  Number  Near bound of the frustum\n  // far Number  Far bound of the frustum\n  frustum({left, right, bottom, top, near, far}) {\n    if (far === Infinity) {\n      Matrix4._computeInfinitePerspectiveOffCenter(this, left, right, bottom, top, near);\n    } else {\n      mat4.frustum(this, left, right, bottom, top, near, far);\n    }\n    return this.check();\n  }\n\n  // eslint-disable-next-line max-params\n  static _computeInfinitePerspectiveOffCenter(result, left, right, bottom, top, near) {\n    const column0Row0 = (2.0 * near) / (right - left);\n    const column1Row1 = (2.0 * near) / (top - bottom);\n    const column2Row0 = (right + left) / (right - left);\n    const column2Row1 = (top + bottom) / (top - bottom);\n    const column2Row2 = -1.0;\n    const column2Row3 = -1.0;\n    const column3Row2 = -2.0 * near;\n\n    result[0] = column0Row0;\n    result[1] = 0.0;\n    result[2] = 0.0;\n    result[3] = 0.0;\n    result[4] = 0.0;\n    result[5] = column1Row1;\n    result[6] = 0.0;\n    result[7] = 0.0;\n    result[8] = column2Row0;\n    result[9] = column2Row1;\n    result[10] = column2Row2;\n    result[11] = column2Row3;\n    result[12] = 0.0;\n    result[13] = 0.0;\n    result[14] = column3Row2;\n    result[15] = 0.0;\n    return result;\n  }\n\n  // Generates a look-at matrix with the given eye position, focal point,\n  // and up axis\n  // eye vec3  Position of the viewer\n  // center  vec3  Point the viewer is looking at\n  // up  vec3  vec3 pointing up\n  lookAt(eye, center, up) {\n    // Signature: lookAt({eye, center = [0, 0, 0], up = [0, 1, 0]}))\n    if (arguments.length === 1) {\n      ({eye, center, up} = eye);\n    }\n\n    center = center || [0, 0, 0];\n    up = up || [0, 1, 0];\n\n    mat4.lookAt(this, eye, center, up);\n    return this.check();\n  }\n\n  // Generates a orthogonal projection matrix with the given bounds\n  // from \"traditional\" view space parameters\n  // left  number  Left bound of the frustum\n  // right number  Right bound of the frustum\n  // bottom  number  Bottom bound of the frustum\n  // top number  Top bound of the frustum\n  // near  number  Near bound of the frustum\n  // far number  Far bound of the frustum\n  ortho({left, right, bottom, top, near = 0.1, far = 500}) {\n    mat4.ortho(this, left, right, bottom, top, near, far);\n    return this.check();\n  }\n\n  // Generates an orthogonal projection matrix with the same parameters\n  // as a perspective matrix (plus focalDistance)\n  // fovy  number  Vertical field of view in radians\n  // aspect  number  Aspect ratio. typically viewport width/height\n  // focalDistance distance in the view frustum used for extent calculations\n  // near  number  Near bound of the frustum\n  // far number  Far bound of the frustum\n  orthographic({\n    fovy = (45 * Math.PI) / 180,\n    aspect = 1,\n    focalDistance = 1,\n    near = 0.1,\n    far = 500\n  }) {\n    if (fovy > Math.PI * 2) {\n      throw Error('radians');\n    }\n    const halfY = fovy / 2;\n    const top = focalDistance * Math.tan(halfY); // focus_plane is the distance from the camera\n    const right = top * aspect;\n\n    return new Matrix4().ortho({\n      left: -right,\n      right,\n      bottom: -top,\n      top,\n      near,\n      far\n    });\n  }\n\n  // Generates a perspective projection matrix with the given bounds\n  // fovy  number  Vertical field of view in radians\n  // aspect  number  Aspect ratio. typically viewport width/height\n  // near  number  Near bound of the frustum\n  // far number  Far bound of the frustum\n  perspective({\n    fovy = undefined,\n    fov = (45 * Math.PI) / 180, // DEPRECATED\n    aspect = 1,\n    near = 0.1,\n    far = 500\n  } = {}) {\n    fovy = fovy || fov;\n    if (fovy > Math.PI * 2) {\n      throw Error('radians');\n    }\n    mat4.perspective(this, fovy, aspect, near, far);\n    return this.check();\n  }\n\n  // Accessors\n\n  determinant() {\n    return mat4.determinant(this);\n  }\n\n  // Extracts the non-uniform scale assuming the matrix is an affine transformation.\n  // The scales are the \"lengths\" of the column vectors in the upper-left 3x3 matrix.\n  getScale(result = [-0, -0, -0]) {\n    // explicit is faster than hypot...\n    result[0] = Math.sqrt(this[0] * this[0] + this[1] * this[1] + this[2] * this[2]);\n    result[1] = Math.sqrt(this[4] * this[4] + this[5] * this[5] + this[6] * this[6]);\n    result[2] = Math.sqrt(this[8] * this[8] + this[9] * this[9] + this[10] * this[10]);\n    // result[0] = Math.hypot(this[0], this[1], this[2]);\n    // result[1] = Math.hypot(this[4], this[5], this[6]);\n    // result[2] = Math.hypot(this[8], this[9], this[10]);\n    return result;\n  }\n\n  // Gets the translation portion, assuming the matrix is a affine transformation matrix.\n  getTranslation(result = [-0, -0, -0]) {\n    result[0] = this[12];\n    result[1] = this[13];\n    result[2] = this[14];\n    return result;\n  }\n\n  // Gets upper left 3x3 pure rotation matrix (non-scaling), assume affine transformation matrix\n  getRotation(\n    result = [-0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0],\n    scaleResult = null\n  ) {\n    const scale = this.getScale(scaleResult || [-0, -0, -0]);\n\n    const inverseScale0 = 1 / scale[0];\n    const inverseScale1 = 1 / scale[1];\n    const inverseScale2 = 1 / scale[2];\n\n    result[0] = this[0] * inverseScale0;\n    result[1] = this[1] * inverseScale1;\n    result[2] = this[2] * inverseScale2;\n    result[3] = 0;\n    result[4] = this[4] * inverseScale0;\n    result[5] = this[5] * inverseScale1;\n    result[6] = this[6] * inverseScale2;\n    result[7] = 0;\n    result[8] = this[8] * inverseScale0;\n    result[9] = this[9] * inverseScale1;\n    result[10] = this[10] * inverseScale2;\n    result[11] = 0;\n    result[12] = 0;\n    result[13] = 0;\n    result[14] = 0;\n    result[15] = 1;\n    return result;\n  }\n\n  getRotationMatrix3(result = [-0, -0, -0, -0, -0, -0, -0, -0, -0], scaleResult = null) {\n    const scale = this.getScale(scaleResult || [-0, -0, -0]);\n\n    const inverseScale0 = 1 / scale[0];\n    const inverseScale1 = 1 / scale[1];\n    const inverseScale2 = 1 / scale[2];\n\n    result[0] = this[0] * inverseScale0;\n    result[1] = this[1] * inverseScale1;\n    result[2] = this[2] * inverseScale2;\n    result[3] = this[4] * inverseScale0;\n    result[4] = this[5] * inverseScale1;\n    result[5] = this[6] * inverseScale2;\n    result[6] = this[8] * inverseScale0;\n    result[7] = this[9] * inverseScale1;\n    result[8] = this[10] * inverseScale2;\n    return result;\n  }\n\n  // Modifiers\n\n  transpose() {\n    mat4.transpose(this, this);\n    return this.check();\n  }\n\n  invert() {\n    mat4.invert(this, this);\n    return this.check();\n  }\n\n  // Operations\n\n  multiplyLeft(a) {\n    mat4.multiply(this, a, this);\n    return this.check();\n  }\n\n  multiplyRight(a) {\n    mat4.multiply(this, this, a);\n    return this.check();\n  }\n\n  // Rotates a matrix by the given angle around the X axis\n  rotateX(radians) {\n    mat4.rotateX(this, this, radians);\n    // mat4.rotate(this, this, radians, [1, 0, 0]);\n    return this.check();\n  }\n\n  // Rotates a matrix by the given angle around the Y axis.\n  rotateY(radians) {\n    mat4.rotateY(this, this, radians);\n    // mat4.rotate(this, this, radians, [0, 1, 0]);\n    return this.check();\n  }\n\n  // Rotates a matrix by the given angle around the Z axis.\n  rotateZ(radians) {\n    mat4.rotateZ(this, this, radians);\n    // mat4.rotate(this, this, radians, [0, 0, 1]);\n    return this.check();\n  }\n\n  rotateXYZ([rx, ry, rz]) {\n    return this.rotateX(rx).rotateY(ry).rotateZ(rz);\n  }\n\n  rotateAxis(radians, axis) {\n    mat4.rotate(this, this, radians, axis);\n    return this.check();\n  }\n\n  scale(factor) {\n    if (Array.isArray(factor)) {\n      mat4.scale(this, this, factor);\n    } else {\n      mat4.scale(this, this, [factor, factor, factor]);\n    }\n\n    return this.check();\n  }\n\n  translate(vec) {\n    mat4.translate(this, this, vec);\n    return this.check();\n  }\n\n  // Transforms\n\n  // Transforms any 2, 3 or 4 element vector. 2 and 3 elements are treated as points\n  transform(vector, result) {\n    if (vector.length === 4) {\n      result = vec4.transformMat4(result || [-0, -0, -0, -0], vector, this);\n      checkVector(result, 4);\n      return result;\n    }\n    return this.transformAsPoint(vector, result);\n  }\n\n  // Transforms any 2 or 3 element array as point (w implicitly 1)\n  transformAsPoint(vector, result) {\n    const {length} = vector;\n    switch (length) {\n      case 2:\n        result = vec2.transformMat4(result || [-0, -0], vector, this);\n        break;\n      case 3:\n        result = vec3.transformMat4(result || [-0, -0, -0], vector, this);\n        break;\n      default:\n        throw new Error('Illegal vector');\n    }\n    checkVector(result, vector.length);\n    return result;\n  }\n\n  // Transforms any 2 or 3 element array as vector (w implicitly 0)\n  transformAsVector(vector, result) {\n    switch (vector.length) {\n      case 2:\n        result = vec2_transformMat4AsVector(result || [-0, -0], vector, this);\n        break;\n      case 3:\n        result = vec3_transformMat4AsVector(result || [-0, -0, -0], vector, this);\n        break;\n      default:\n        throw new Error('Illegal vector');\n    }\n    checkVector(result, vector.length);\n    return result;\n  }\n\n  // three.js math API compatibility\n  makeRotationX(radians) {\n    return this.identity().rotateX(radians);\n  }\n\n  makeTranslation(x, y, z) {\n    return this.identity().translate([x, y, z]);\n  }\n\n  // DEPRECATED in 3.0\n\n  transformPoint(vector, result) {\n    deprecated('Matrix4.transformPoint', '3.0');\n    return this.transformAsPoint(vector, result);\n  }\n\n  transformVector(vector, result) {\n    deprecated('Matrix4.transformVector', '3.0');\n    return this.transformAsPoint(vector, result);\n  }\n\n  transformDirection(vector, result) {\n    deprecated('Matrix4.transformDirection', '3.0');\n    return this.transformAsVector(vector, result);\n  }\n}\n","var SphericalMercator = (function(){\n\n// Closures including constants and other precalculated values.\nvar cache = {},\n    EPSLN = 1.0e-10,\n    D2R = Math.PI / 180,\n    R2D = 180 / Math.PI,\n    // 900913 properties.\n    A = 6378137.0,\n    MAXEXTENT = 20037508.342789244;\n\nfunction isFloat(n){\n    return Number(n) === n && n % 1 !== 0;\n}\n\n// SphericalMercator constructor: precaches calculations\n// for fast tile lookups.\nfunction SphericalMercator(options) {\n    options = options || {};\n    this.size = options.size || 256;\n    if (!cache[this.size]) {\n        var size = this.size;\n        var c = cache[this.size] = {};\n        c.Bc = [];\n        c.Cc = [];\n        c.zc = [];\n        c.Ac = [];\n        for (var d = 0; d < 30; d++) {\n            c.Bc.push(size / 360);\n            c.Cc.push(size / (2 * Math.PI));\n            c.zc.push(size / 2);\n            c.Ac.push(size);\n            size *= 2;\n        }\n    }\n    this.Bc = cache[this.size].Bc;\n    this.Cc = cache[this.size].Cc;\n    this.zc = cache[this.size].zc;\n    this.Ac = cache[this.size].Ac;\n};\n\n// Convert lon lat to screen pixel value\n//\n// - `ll` {Array} `[lon, lat]` array of geographic coordinates.\n// - `zoom` {Number} zoom level.\nSphericalMercator.prototype.px = function(ll, zoom) {\n  if (isFloat(zoom)) {\n    var size = this.size * Math.pow(2, zoom);\n    var d = size / 2;\n    var bc = (size / 360);\n    var cc = (size / (2 * Math.PI));\n    var ac = size;\n    var f = Math.min(Math.max(Math.sin(D2R * ll[1]), -0.9999), 0.9999);\n    var x = d + ll[0] * bc;\n    var y = d + 0.5 * Math.log((1 + f) / (1 - f)) * -cc;\n    (x > ac) && (x = ac);\n    (y > ac) && (y = ac);\n    //(x < 0) && (x = 0);\n    //(y < 0) && (y = 0);\n    return [x, y];\n  } else {\n    var d = this.zc[zoom];\n    var f = Math.min(Math.max(Math.sin(D2R * ll[1]), -0.9999), 0.9999);\n    var x = Math.round(d + ll[0] * this.Bc[zoom]);\n    var y = Math.round(d + 0.5 * Math.log((1 + f) / (1 - f)) * (-this.Cc[zoom]));\n    (x > this.Ac[zoom]) && (x = this.Ac[zoom]);\n    (y > this.Ac[zoom]) && (y = this.Ac[zoom]);\n    //(x < 0) && (x = 0);\n    //(y < 0) && (y = 0);\n    return [x, y];\n  }\n};\n\n// Convert screen pixel value to lon lat\n//\n// - `px` {Array} `[x, y]` array of geographic coordinates.\n// - `zoom` {Number} zoom level.\nSphericalMercator.prototype.ll = function(px, zoom) {\n  if (isFloat(zoom)) {\n    var size = this.size * Math.pow(2, zoom);\n    var bc = (size / 360);\n    var cc = (size / (2 * Math.PI));\n    var zc = size / 2;\n    var g = (px[1] - zc) / -cc;\n    var lon = (px[0] - zc) / bc;\n    var lat = R2D * (2 * Math.atan(Math.exp(g)) - 0.5 * Math.PI);\n    return [lon, lat];\n  } else {\n    var g = (px[1] - this.zc[zoom]) / (-this.Cc[zoom]);\n    var lon = (px[0] - this.zc[zoom]) / this.Bc[zoom];\n    var lat = R2D * (2 * Math.atan(Math.exp(g)) - 0.5 * Math.PI);\n    return [lon, lat];\n  }\n};\n\n// Convert tile xyz value to bbox of the form `[w, s, e, n]`\n//\n// - `x` {Number} x (longitude) number.\n// - `y` {Number} y (latitude) number.\n// - `zoom` {Number} zoom.\n// - `tms_style` {Boolean} whether to compute using tms-style.\n// - `srs` {String} projection for resulting bbox (WGS84|900913).\n// - `return` {Array} bbox array of values in form `[w, s, e, n]`.\nSphericalMercator.prototype.bbox = function(x, y, zoom, tms_style, srs) {\n    // Convert xyz into bbox with srs WGS84\n    if (tms_style) {\n        y = (Math.pow(2, zoom) - 1) - y;\n    }\n    // Use +y to make sure it's a number to avoid inadvertent concatenation.\n    var ll = [x * this.size, (+y + 1) * this.size]; // lower left\n    // Use +x to make sure it's a number to avoid inadvertent concatenation.\n    var ur = [(+x + 1) * this.size, y * this.size]; // upper right\n    var bbox = this.ll(ll, zoom).concat(this.ll(ur, zoom));\n\n    // If web mercator requested reproject to 900913.\n    if (srs === '900913') {\n        return this.convert(bbox, '900913');\n    } else {\n        return bbox;\n    }\n};\n\n// Convert bbox to xyx bounds\n//\n// - `bbox` {Number} bbox in the form `[w, s, e, n]`.\n// - `zoom` {Number} zoom.\n// - `tms_style` {Boolean} whether to compute using tms-style.\n// - `srs` {String} projection of input bbox (WGS84|900913).\n// - `@return` {Object} XYZ bounds containing minX, maxX, minY, maxY properties.\nSphericalMercator.prototype.xyz = function(bbox, zoom, tms_style, srs) {\n    // If web mercator provided reproject to WGS84.\n    if (srs === '900913') {\n        bbox = this.convert(bbox, 'WGS84');\n    }\n\n    var ll = [bbox[0], bbox[1]]; // lower left\n    var ur = [bbox[2], bbox[3]]; // upper right\n    var px_ll = this.px(ll, zoom);\n    var px_ur = this.px(ur, zoom);\n    // Y = 0 for XYZ is the top hence minY uses px_ur[1].\n    var x = [ Math.floor(px_ll[0] / this.size), Math.floor((px_ur[0] - 1) / this.size) ];\n    var y = [ Math.floor(px_ur[1] / this.size), Math.floor((px_ll[1] - 1) / this.size) ];\n    var bounds = {\n        minX: Math.min.apply(Math, x) < 0 ? 0 : Math.min.apply(Math, x),\n        minY: Math.min.apply(Math, y) < 0 ? 0 : Math.min.apply(Math, y),\n        maxX: Math.max.apply(Math, x),\n        maxY: Math.max.apply(Math, y)\n    };\n    if (tms_style) {\n        var tms = {\n            minY: (Math.pow(2, zoom) - 1) - bounds.maxY,\n            maxY: (Math.pow(2, zoom) - 1) - bounds.minY\n        };\n        bounds.minY = tms.minY;\n        bounds.maxY = tms.maxY;\n    }\n    return bounds;\n};\n\n// Convert projection of given bbox.\n//\n// - `bbox` {Number} bbox in the form `[w, s, e, n]`.\n// - `to` {String} projection of output bbox (WGS84|900913). Input bbox\n//   assumed to be the \"other\" projection.\n// - `@return` {Object} bbox with reprojected coordinates.\nSphericalMercator.prototype.convert = function(bbox, to) {\n    if (to === '900913') {\n        return this.forward(bbox.slice(0, 2)).concat(this.forward(bbox.slice(2,4)));\n    } else {\n        return this.inverse(bbox.slice(0, 2)).concat(this.inverse(bbox.slice(2,4)));\n    }\n};\n\n// Convert lon/lat values to 900913 x/y.\nSphericalMercator.prototype.forward = function(ll) {\n    var xy = [\n        A * ll[0] * D2R,\n        A * Math.log(Math.tan((Math.PI*0.25) + (0.5 * ll[1] * D2R)))\n    ];\n    // if xy value is beyond maxextent (e.g. poles), return maxextent.\n    (xy[0] > MAXEXTENT) && (xy[0] = MAXEXTENT);\n    (xy[0] < -MAXEXTENT) && (xy[0] = -MAXEXTENT);\n    (xy[1] > MAXEXTENT) && (xy[1] = MAXEXTENT);\n    (xy[1] < -MAXEXTENT) && (xy[1] = -MAXEXTENT);\n    return xy;\n};\n\n// Convert 900913 x/y values to lon/lat.\nSphericalMercator.prototype.inverse = function(xy) {\n    return [\n        (xy[0] * R2D / A),\n        ((Math.PI*0.5) - 2.0 * Math.atan(Math.exp(-xy[1] / A))) * R2D\n    ];\n};\n\nreturn SphericalMercator;\n\n})();\n\nif (typeof module !== 'undefined' && typeof exports !== 'undefined') {\n    module.exports = exports = SphericalMercator;\n}\n","'use strict';\n\nvar VectorTileLayer = require('./vectortilelayer');\n\nmodule.exports = VectorTile;\n\nfunction VectorTile(pbf, end) {\n    this.layers = pbf.readFields(readTile, {}, end);\n}\n\nfunction readTile(tag, layers, pbf) {\n    if (tag === 3) {\n        var layer = new VectorTileLayer(pbf, pbf.readVarint() + pbf.pos);\n        if (layer.length) layers[layer.name] = layer;\n    }\n}\n\n","'use strict';\n\nmodule.exports = Point;\n\n/**\n * A standalone point geometry with useful accessor, comparison, and\n * modification methods.\n *\n * @class Point\n * @param {Number} x the x-coordinate. this could be longitude or screen\n * pixels, or any other sort of unit.\n * @param {Number} y the y-coordinate. this could be latitude or screen\n * pixels, or any other sort of unit.\n * @example\n * var point = new Point(-77, 38);\n */\nfunction Point(x, y) {\n    this.x = x;\n    this.y = y;\n}\n\nPoint.prototype = {\n\n    /**\n     * Clone this point, returning a new point that can be modified\n     * without affecting the old one.\n     * @return {Point} the clone\n     */\n    clone: function() { return new Point(this.x, this.y); },\n\n    /**\n     * Add this point's x & y coordinates to another point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    add:     function(p) { return this.clone()._add(p); },\n\n    /**\n     * Subtract this point's x & y coordinates to from point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    sub:     function(p) { return this.clone()._sub(p); },\n\n    /**\n     * Multiply this point's x & y coordinates by point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    multByPoint:    function(p) { return this.clone()._multByPoint(p); },\n\n    /**\n     * Divide this point's x & y coordinates by point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    divByPoint:     function(p) { return this.clone()._divByPoint(p); },\n\n    /**\n     * Multiply this point's x & y coordinates by a factor,\n     * yielding a new point.\n     * @param {Point} k factor\n     * @return {Point} output point\n     */\n    mult:    function(k) { return this.clone()._mult(k); },\n\n    /**\n     * Divide this point's x & y coordinates by a factor,\n     * yielding a new point.\n     * @param {Point} k factor\n     * @return {Point} output point\n     */\n    div:     function(k) { return this.clone()._div(k); },\n\n    /**\n     * Rotate this point around the 0, 0 origin by an angle a,\n     * given in radians\n     * @param {Number} a angle to rotate around, in radians\n     * @return {Point} output point\n     */\n    rotate:  function(a) { return this.clone()._rotate(a); },\n\n    /**\n     * Rotate this point around p point by an angle a,\n     * given in radians\n     * @param {Number} a angle to rotate around, in radians\n     * @param {Point} p Point to rotate around\n     * @return {Point} output point\n     */\n    rotateAround:  function(a,p) { return this.clone()._rotateAround(a,p); },\n\n    /**\n     * Multiply this point by a 4x1 transformation matrix\n     * @param {Array<Number>} m transformation matrix\n     * @return {Point} output point\n     */\n    matMult: function(m) { return this.clone()._matMult(m); },\n\n    /**\n     * Calculate this point but as a unit vector from 0, 0, meaning\n     * that the distance from the resulting point to the 0, 0\n     * coordinate will be equal to 1 and the angle from the resulting\n     * point to the 0, 0 coordinate will be the same as before.\n     * @return {Point} unit vector point\n     */\n    unit:    function() { return this.clone()._unit(); },\n\n    /**\n     * Compute a perpendicular point, where the new y coordinate\n     * is the old x coordinate and the new x coordinate is the old y\n     * coordinate multiplied by -1\n     * @return {Point} perpendicular point\n     */\n    perp:    function() { return this.clone()._perp(); },\n\n    /**\n     * Return a version of this point with the x & y coordinates\n     * rounded to integers.\n     * @return {Point} rounded point\n     */\n    round:   function() { return this.clone()._round(); },\n\n    /**\n     * Return the magitude of this point: this is the Euclidean\n     * distance from the 0, 0 coordinate to this point's x and y\n     * coordinates.\n     * @return {Number} magnitude\n     */\n    mag: function() {\n        return Math.sqrt(this.x * this.x + this.y * this.y);\n    },\n\n    /**\n     * Judge whether this point is equal to another point, returning\n     * true or false.\n     * @param {Point} other the other point\n     * @return {boolean} whether the points are equal\n     */\n    equals: function(other) {\n        return this.x === other.x &&\n               this.y === other.y;\n    },\n\n    /**\n     * Calculate the distance from this point to another point\n     * @param {Point} p the other point\n     * @return {Number} distance\n     */\n    dist: function(p) {\n        return Math.sqrt(this.distSqr(p));\n    },\n\n    /**\n     * Calculate the distance from this point to another point,\n     * without the square root step. Useful if you're comparing\n     * relative distances.\n     * @param {Point} p the other point\n     * @return {Number} distance\n     */\n    distSqr: function(p) {\n        var dx = p.x - this.x,\n            dy = p.y - this.y;\n        return dx * dx + dy * dy;\n    },\n\n    /**\n     * Get the angle from the 0, 0 coordinate to this point, in radians\n     * coordinates.\n     * @return {Number} angle\n     */\n    angle: function() {\n        return Math.atan2(this.y, this.x);\n    },\n\n    /**\n     * Get the angle from this point to another point, in radians\n     * @param {Point} b the other point\n     * @return {Number} angle\n     */\n    angleTo: function(b) {\n        return Math.atan2(this.y - b.y, this.x - b.x);\n    },\n\n    /**\n     * Get the angle between this point and another point, in radians\n     * @param {Point} b the other point\n     * @return {Number} angle\n     */\n    angleWith: function(b) {\n        return this.angleWithSep(b.x, b.y);\n    },\n\n    /*\n     * Find the angle of the two vectors, solving the formula for\n     * the cross product a x b = |a||b|sin(θ) for θ.\n     * @param {Number} x the x-coordinate\n     * @param {Number} y the y-coordinate\n     * @return {Number} the angle in radians\n     */\n    angleWithSep: function(x, y) {\n        return Math.atan2(\n            this.x * y - this.y * x,\n            this.x * x + this.y * y);\n    },\n\n    _matMult: function(m) {\n        var x = m[0] * this.x + m[1] * this.y,\n            y = m[2] * this.x + m[3] * this.y;\n        this.x = x;\n        this.y = y;\n        return this;\n    },\n\n    _add: function(p) {\n        this.x += p.x;\n        this.y += p.y;\n        return this;\n    },\n\n    _sub: function(p) {\n        this.x -= p.x;\n        this.y -= p.y;\n        return this;\n    },\n\n    _mult: function(k) {\n        this.x *= k;\n        this.y *= k;\n        return this;\n    },\n\n    _div: function(k) {\n        this.x /= k;\n        this.y /= k;\n        return this;\n    },\n\n    _multByPoint: function(p) {\n        this.x *= p.x;\n        this.y *= p.y;\n        return this;\n    },\n\n    _divByPoint: function(p) {\n        this.x /= p.x;\n        this.y /= p.y;\n        return this;\n    },\n\n    _unit: function() {\n        this._div(this.mag());\n        return this;\n    },\n\n    _perp: function() {\n        var y = this.y;\n        this.y = this.x;\n        this.x = -y;\n        return this;\n    },\n\n    _rotate: function(angle) {\n        var cos = Math.cos(angle),\n            sin = Math.sin(angle),\n            x = cos * this.x - sin * this.y,\n            y = sin * this.x + cos * this.y;\n        this.x = x;\n        this.y = y;\n        return this;\n    },\n\n    _rotateAround: function(angle, p) {\n        var cos = Math.cos(angle),\n            sin = Math.sin(angle),\n            x = p.x + cos * (this.x - p.x) - sin * (this.y - p.y),\n            y = p.y + sin * (this.x - p.x) + cos * (this.y - p.y);\n        this.x = x;\n        this.y = y;\n        return this;\n    },\n\n    _round: function() {\n        this.x = Math.round(this.x);\n        this.y = Math.round(this.y);\n        return this;\n    }\n};\n\n/**\n * Construct a point from an array if necessary, otherwise if the input\n * is already a Point, or an unknown type, return it unchanged\n * @param {Array<Number>|Point|*} a any kind of input value\n * @return {Point} constructed point, or passed-through value.\n * @example\n * // this\n * var point = Point.convert([0, 1]);\n * // is equivalent to\n * var point = new Point(0, 1);\n */\nPoint.convert = function (a) {\n    if (a instanceof Point) {\n        return a;\n    }\n    if (Array.isArray(a)) {\n        return new Point(a[0], a[1]);\n    }\n    return a;\n};\n","// Describes the arrow style of polylines\nexport const ArrowStyles = {\n  NONE: 0,\n  FORWARD: 1,\n  BACKWARD: 2,\n  BOTH: 3,\n};\n\nexport const DEFAULT_ARROWS = 1;\nexport const MAX_ARROWS = 3;\n","import nearestPointOnLine from '@turf/nearest-point-on-line';\nimport { point, lineString as toLineString } from '@turf/helpers';\nimport circle from '@turf/circle';\nimport distance from '@turf/distance';\nimport turfCenter from '@turf/center';\nimport {\n  recursivelyTraverseNestedArrays,\n  nearestPointOnProjectedLine,\n  getPickedEditHandles,\n  getPickedEditHandle,\n  NearestPointType,\n} from '../utils';\nimport { LineString, Point, FeatureCollection, FeatureOf } from '../geojson-types';\nimport {\n  ModeProps,\n  PointerMoveEvent,\n  StartDraggingEvent,\n  StopDraggingEvent,\n  DraggingEvent,\n  Viewport,\n  EditHandleFeature,\n  GuideFeatureCollection,\n} from '../types';\nimport { GeoJsonEditMode } from './geojson-edit-mode';\nimport { ImmutableFeatureCollection } from './immutable-feature-collection';\n\nexport class ResizeCircleMode extends GeoJsonEditMode {\n  _selectedEditHandle: EditHandleFeature | null | undefined;\n  _isResizing = false;\n\n  getGuides(props: ModeProps<FeatureCollection>): GuideFeatureCollection {\n    const handles = [];\n    const selectedFeatureIndexes = props.selectedIndexes;\n\n    const { lastPointerMoveEvent } = props;\n    const picks = lastPointerMoveEvent && lastPointerMoveEvent.picks;\n    const mapCoords = lastPointerMoveEvent && lastPointerMoveEvent.mapCoords;\n\n    // intermediate edit handle\n    if (\n      picks &&\n      picks.length &&\n      mapCoords &&\n      selectedFeatureIndexes.length === 1 &&\n      !this._isResizing\n    ) {\n      const featureAsPick = picks.find((pick) => !pick.isGuide);\n\n      // is the feature in the pick selected\n      if (\n        featureAsPick &&\n        featureAsPick.object.properties.shape &&\n        featureAsPick.object.properties.shape.includes('Circle') &&\n        props.selectedIndexes.includes(featureAsPick.index)\n      ) {\n        let intermediatePoint: NearestPointType | null | undefined = null;\n        let positionIndexPrefix = [];\n        const referencePoint = point(mapCoords);\n        // process all lines of the (single) feature\n        recursivelyTraverseNestedArrays(\n          featureAsPick.object.geometry.coordinates,\n          [],\n          (lineString, prefix) => {\n            const lineStringFeature = toLineString(lineString);\n            const candidateIntermediatePoint = this.getNearestPoint(\n              // @ts-ignore\n              lineStringFeature,\n              referencePoint,\n              props.modeConfig && props.modeConfig.viewport\n            );\n            if (\n              !intermediatePoint ||\n              candidateIntermediatePoint.properties.dist < intermediatePoint.properties.dist\n            ) {\n              intermediatePoint = candidateIntermediatePoint;\n              positionIndexPrefix = prefix;\n            }\n          }\n        );\n        // tack on the lone intermediate point to the set of handles\n        if (intermediatePoint) {\n          const {\n            geometry: { coordinates: position },\n            properties: { index },\n          } = intermediatePoint;\n          handles.push({\n            type: 'Feature',\n            properties: {\n              guideType: 'editHandle',\n              editHandleType: 'intermediate',\n              featureIndex: featureAsPick.index,\n              positionIndexes: [...positionIndexPrefix, index + 1],\n            },\n            geometry: {\n              type: 'Point',\n              coordinates: position,\n            },\n          });\n        }\n      }\n    }\n\n    return {\n      type: 'FeatureCollection',\n      features: handles,\n    };\n  }\n\n  // turf.js does not support elevation for nearestPointOnLine\n  getNearestPoint(\n    line: FeatureOf<LineString>,\n    inPoint: FeatureOf<Point>,\n    viewport: Viewport | null | undefined\n  ): NearestPointType {\n    const { coordinates } = line.geometry;\n    if (coordinates.some((coord) => coord.length > 2)) {\n      if (viewport) {\n        // This line has elevation, we need to use alternative algorithm\n        return nearestPointOnProjectedLine(line, inPoint, viewport);\n      }\n      // eslint-disable-next-line no-console,no-undef\n      console.log(\n        'Editing 3D point but modeConfig.viewport not provided. Falling back to 2D logic.'\n      );\n    }\n\n    return nearestPointOnLine(line, inPoint);\n  }\n\n  handleDragging(event: DraggingEvent, props: ModeProps<FeatureCollection>): void {\n    const editHandle = getPickedEditHandle(event.pointerDownPicks);\n\n    if (editHandle) {\n      // Cancel map panning if pointer went down on an edit handle\n      event.cancelPan();\n\n      const editHandleProperties = editHandle.properties;\n\n      const feature = this.getSelectedFeature(props);\n      const center = turfCenter(feature).geometry.coordinates;\n      const numberOfSteps = Object.entries(feature.geometry.coordinates[0]).length - 1;\n      const radius = Math.max(distance(center, event.mapCoords), 0.001);\n\n      const { steps = numberOfSteps } = {};\n      const options = { steps };\n      const updatedFeature = circle(center, radius, options);\n      const geometry = updatedFeature.geometry;\n\n      const updatedData = new ImmutableFeatureCollection(props.data)\n        .replaceGeometry(editHandleProperties.featureIndex, geometry)\n        .getObject();\n\n      props.onEdit({\n        updatedData,\n        editType: 'unionGeometry',\n        editContext: {\n          featureIndexes: [editHandleProperties.featureIndex],\n        },\n      });\n    }\n  }\n\n  handlePointerMove(event: PointerMoveEvent, props: ModeProps<FeatureCollection>): void {\n    if (!this._isResizing) {\n      const selectedEditHandle = getPickedEditHandle(event.picks);\n      this._selectedEditHandle =\n        selectedEditHandle && selectedEditHandle.properties.editHandleType === 'intermediate'\n          ? selectedEditHandle\n          : null;\n    }\n\n    const cursor = this.getCursor(event);\n    props.onUpdateCursor(cursor);\n  }\n\n  handleStartDragging(event: StartDraggingEvent, props: ModeProps<FeatureCollection>) {\n    if (this._selectedEditHandle) {\n      this._isResizing = true;\n    }\n  }\n\n  handleStopDragging(event: StopDraggingEvent, props: ModeProps<FeatureCollection>) {\n    if (this._isResizing) {\n      this._selectedEditHandle = null;\n      this._isResizing = false;\n    }\n  }\n\n  getCursor(event: PointerMoveEvent): string | null | undefined {\n    const picks = (event && event.picks) || [];\n\n    const handlesPicked = getPickedEditHandles(picks);\n    if (handlesPicked.length) {\n      return 'cell';\n    }\n    return null;\n  }\n}\n","import { StartDraggingEvent, ModeProps } from '../types';\nimport { FeatureCollection } from '../geojson-types';\nimport { TranslateMode } from './translate-mode';\n\nexport class DuplicateMode extends TranslateMode {\n  handleStartDragging(event: StartDraggingEvent, props: ModeProps<FeatureCollection>) {\n    super.handleStartDragging(event, props);\n\n    if (this._geometryBeforeTranslate) {\n      props.onEdit(this.getAddManyFeaturesAction(this._geometryBeforeTranslate, props.data));\n    }\n  }\n\n  updateCursor(props: ModeProps<FeatureCollection>) {\n    if (this._isTranslatable) {\n      props.onUpdateCursor('copy');\n    } else {\n      props.onUpdateCursor(null);\n    }\n  }\n}\n","import { Position, LineString, FeatureCollection } from '../geojson-types';\nimport { ClickEvent, PointerMoveEvent, ModeProps, GuideFeatureCollection } from '../types';\nimport { GeoJsonEditMode } from './geojson-edit-mode';\nimport { ImmutableFeatureCollection } from './immutable-feature-collection';\n\nexport class ExtendLineStringMode extends GeoJsonEditMode {\n  getSingleSelectedLineString(props: ModeProps<FeatureCollection>): LineString | null | undefined {\n    const selectedGeometry = this.getSelectedGeometry(props);\n\n    if (selectedGeometry && selectedGeometry.type === 'LineString') {\n      return selectedGeometry;\n    }\n    return null;\n  }\n\n  handleClick(event: ClickEvent, props: ModeProps<FeatureCollection>) {\n    const { selectedIndexes } = props;\n    const selectedLineString = this.getSingleSelectedLineString(props);\n\n    if (!selectedLineString) {\n      console.warn(`ExtendLineStringMode only supported for single LineString selection`); // eslint-disable-line\n      return;\n    }\n\n    // Extend the LineString\n    let positionIndexes = [selectedLineString.coordinates.length];\n\n    const modeConfig = props.modeConfig;\n    if (modeConfig && modeConfig.drawAtFront) {\n      positionIndexes = [0];\n    }\n    const featureIndex = selectedIndexes[0];\n    const updatedData = new ImmutableFeatureCollection(props.data)\n      .addPosition(featureIndex, positionIndexes, event.mapCoords)\n      .getObject();\n\n    props.onEdit({\n      updatedData,\n      editType: 'addPosition',\n      editContext: {\n        featureIndexes: [featureIndex],\n        positionIndexes,\n        position: event.mapCoords,\n      },\n    });\n  }\n\n  getGuides(props: ModeProps<FeatureCollection>): GuideFeatureCollection {\n    const guides = {\n      type: 'FeatureCollection',\n      features: [],\n    };\n\n    const selectedLineString = this.getSingleSelectedLineString(props);\n    if (!selectedLineString) {\n      // nothing to do\n      // @ts-ignore\n      return guides;\n    }\n\n    const mapCoords = props.lastPointerMoveEvent && props.lastPointerMoveEvent.mapCoords;\n\n    // Draw an extension line starting from one end of the selected LineString to the cursor\n    let startPosition: Position | null | undefined = null;\n    const { modeConfig } = props;\n    if (modeConfig && modeConfig.drawAtFront) {\n      startPosition = selectedLineString.coordinates[0];\n    } else {\n      startPosition = selectedLineString.coordinates[selectedLineString.coordinates.length - 1];\n    }\n\n    guides.features.push({\n      type: 'Feature',\n      properties: {\n        guideType: 'tentative',\n      },\n      geometry: {\n        type: 'LineString',\n        coordinates: [startPosition, mapCoords],\n      },\n    });\n    // @ts-ignore\n    return guides;\n  }\n\n  handlePointerMove(event: PointerMoveEvent, props: ModeProps<FeatureCollection>) {\n    props.onUpdateCursor('cell');\n  }\n}\n","import booleanPointInPolygon from '@turf/boolean-point-in-polygon';\nimport turfDifference from '@turf/difference';\nimport turfBuffer from '@turf/buffer';\nimport lineIntersect from '@turf/line-intersect';\nimport { lineString } from '@turf/helpers';\nimport turfBearing from '@turf/bearing';\nimport turfDistance from '@turf/distance';\nimport turfDestination from '@turf/destination';\nimport turfPolygonToLine from '@turf/polygon-to-line';\nimport nearestPointOnLine from '@turf/nearest-point-on-line';\nimport { generatePointsParallelToLinePoints } from '../utils';\nimport { FeatureCollection } from '../geojson-types';\nimport {\n  ClickEvent,\n  PointerMoveEvent,\n  ModeProps,\n  GuideFeatureCollection,\n  TentativeFeature,\n} from '../types';\nimport { GeoJsonEditMode, GeoJsonEditAction } from './geojson-edit-mode';\nimport { ImmutableFeatureCollection } from './immutable-feature-collection';\n\nexport class SplitPolygonMode extends GeoJsonEditMode {\n  calculateMapCoords(clickSequence: any, mapCoords: any, props: ModeProps<FeatureCollection>) {\n    const modeConfig = props.modeConfig;\n    if (!modeConfig || !modeConfig.lock90Degree || !clickSequence.length) {\n      return mapCoords;\n    }\n    if (clickSequence.length === 1) {\n      // if first point is clicked, then find closest polygon point and build ~90deg vector\n      const firstPoint = clickSequence[0];\n      const selectedGeometry = this.getSelectedGeometry(props);\n      // @ts-ignore\n      const feature = turfPolygonToLine(selectedGeometry);\n\n      const lines = feature.type === 'FeatureCollection' ? feature.features : [feature];\n      let minDistance = Number.MAX_SAFE_INTEGER;\n      let closestPoint = null;\n      // If Multipolygon, then we should find nearest polygon line and stick split to it.\n      lines.forEach((line) => {\n        const snapPoint = nearestPointOnLine(line, firstPoint);\n        const distanceFromOrigin = turfDistance(snapPoint, firstPoint);\n        if (minDistance > distanceFromOrigin) {\n          minDistance = distanceFromOrigin;\n          closestPoint = snapPoint;\n        }\n      });\n\n      if (closestPoint) {\n        // closest point is used as 90degree entry to the polygon\n        const lastBearing = turfBearing(firstPoint, closestPoint);\n        const currentDistance = turfDistance(firstPoint, mapCoords, { units: 'meters' });\n        return turfDestination(firstPoint, currentDistance, lastBearing, {\n          units: 'meters',\n        }).geometry.coordinates;\n      }\n      return mapCoords;\n    }\n    // Allow only 90 degree turns\n    const lastPoint = clickSequence[clickSequence.length - 1];\n    const [approximatePoint] = generatePointsParallelToLinePoints(\n      clickSequence[clickSequence.length - 2],\n      lastPoint,\n      mapCoords\n    );\n    // align point with current ground\n    const nearestPt = nearestPointOnLine(lineString([lastPoint, approximatePoint]), mapCoords)\n      .geometry.coordinates;\n    return nearestPt;\n  }\n\n  getGuides(props: ModeProps<FeatureCollection>): GuideFeatureCollection {\n    const clickSequence = this.getClickSequence();\n\n    const guides: GuideFeatureCollection = {\n      type: 'FeatureCollection',\n      features: [],\n    };\n\n    if (clickSequence.length === 0 || !props.lastPointerMoveEvent) {\n      // nothing to do yet\n      return guides;\n    }\n\n    const { mapCoords } = props.lastPointerMoveEvent;\n\n    guides.features.push({\n      type: 'Feature',\n      properties: {\n        guideType: 'tentative',\n      },\n      geometry: {\n        type: 'LineString',\n        coordinates: [...clickSequence, this.calculateMapCoords(clickSequence, mapCoords, props)],\n      },\n    });\n\n    return guides;\n  }\n\n  handleClick(event: ClickEvent, props: ModeProps<FeatureCollection>) {\n    const tentativeFeature = this.getTentativeGuide(props);\n\n    const selectedGeometry = this.getSelectedGeometry(props);\n\n    if (!selectedGeometry) {\n      // eslint-disable-next-line no-console,no-undef\n      console.warn('A polygon must be selected for splitting');\n      return;\n    }\n\n    const clickSequence = this.getClickSequence();\n    if (tentativeFeature && tentativeFeature.geometry.type === 'LineString') {\n      clickSequence.push(\n        tentativeFeature.geometry.coordinates[tentativeFeature.geometry.coordinates.length - 1]\n      );\n    } else {\n      this.addClickSequence(event);\n    }\n\n    const pt = {\n      type: 'Point',\n      coordinates: clickSequence[clickSequence.length - 1],\n    };\n    // @ts-ignore\n    const isPointInPolygon = booleanPointInPolygon(pt, selectedGeometry);\n    if (clickSequence.length > 1 && tentativeFeature && !isPointInPolygon) {\n      this.resetClickSequence();\n      // @ts-ignore\n      const isLineInterectingWithPolygon = lineIntersect(tentativeFeature, selectedGeometry);\n      if (isLineInterectingWithPolygon.features.length === 0) {\n        return;\n      }\n\n      const editAction = this.splitPolygon(tentativeFeature, props);\n\n      if (editAction) {\n        props.onEdit(editAction);\n      }\n    }\n  }\n\n  handlePointerMove(event: PointerMoveEvent, props: ModeProps<FeatureCollection>) {\n    props.onUpdateCursor('cell');\n  }\n\n  splitPolygon(tentativeFeature: TentativeFeature, props: ModeProps<FeatureCollection>) {\n    const selectedGeometry = this.getSelectedGeometry(props);\n    const featureIndex = props.selectedIndexes[0];\n    const modeConfig = props.modeConfig || {};\n\n    // Default gap in between the polygon\n    let { gap = 0.1, units = 'centimeters' } = modeConfig;\n    if (gap === 0) {\n      gap = 0.1;\n      units = 'centimeters';\n    }\n\n    const buffer = turfBuffer(tentativeFeature, gap, { units });\n    // @ts-ignore\n    const updatedGeometry = turfDifference(selectedGeometry, buffer);\n    if (!updatedGeometry) {\n      // eslint-disable-next-line no-console,no-undef\n      console.warn('Canceling edit. Split Polygon erased');\n      return null;\n    }\n\n    const { type, coordinates } = updatedGeometry.geometry;\n    let updatedCoordinates = [];\n    if (type === 'Polygon') {\n      // Update the coordinates as per Multipolygon\n      // @ts-ignore\n      updatedCoordinates = coordinates.map((c) => [c]);\n    } else {\n      // Handle Case when Multipolygon has holes\n      // @ts-ignore\n      updatedCoordinates = coordinates.reduce((agg, prev) => {\n        prev.forEach((p) => {\n          agg.push([p]);\n        });\n        return agg;\n      }, []);\n    }\n\n    // Update the type to Mulitpolygon\n    const updatedData = new ImmutableFeatureCollection(props.data).replaceGeometry(featureIndex, {\n      type: 'MultiPolygon',\n      coordinates: updatedCoordinates,\n    });\n\n    const editAction: GeoJsonEditAction = {\n      updatedData: updatedData.getObject(),\n      editType: 'split',\n      editContext: {\n        featureIndexes: [featureIndex],\n      },\n    };\n\n    return editAction;\n  }\n}\n","import bearing from '@turf/bearing';\nimport {\n  generatePointsParallelToLinePoints,\n  getPickedEditHandle,\n  getPickedIntermediateEditHandle,\n} from '../utils';\nimport { FeatureCollection } from '../geojson-types';\nimport { ModeProps, StartDraggingEvent, StopDraggingEvent, DraggingEvent } from '../types';\nimport { ModifyMode } from './modify-mode';\nimport { ImmutableFeatureCollection } from './immutable-feature-collection';\n\nexport class ExtrudeMode extends ModifyMode {\n  // this mode is busted =(\n\n  isPointAdded = false;\n\n  handleDragging(event: DraggingEvent, props: ModeProps<FeatureCollection>): void {\n    const editHandle = getPickedEditHandle(event.pointerDownPicks);\n\n    if (editHandle) {\n      const { featureIndex } = editHandle.properties;\n      let { positionIndexes } = editHandle.properties;\n\n      const size = this.coordinatesSize(positionIndexes, featureIndex, props.data);\n      positionIndexes = this.isPointAdded\n        ? this.nextPositionIndexes(positionIndexes, size)\n        : positionIndexes;\n      // p1 and p1 are end points for edge\n      const p1 = this.getPointForPositionIndexes(\n        this.prevPositionIndexes(positionIndexes, size),\n        featureIndex,\n        props.data\n      );\n      const p2 = this.getPointForPositionIndexes(positionIndexes, featureIndex, props.data);\n      if (p1 && p2) {\n        // p3 and p4 are end points for moving (extruding) edge\n        const [p3, p4] = generatePointsParallelToLinePoints(p1, p2, event.mapCoords);\n\n        const updatedData = new ImmutableFeatureCollection(props.data)\n          .replacePosition(featureIndex, this.prevPositionIndexes(positionIndexes, size), p4)\n          .replacePosition(featureIndex, positionIndexes, p3)\n          .getObject();\n\n        props.onEdit({\n          updatedData,\n          editType: 'extruding',\n          editContext: {\n            featureIndexes: [featureIndex],\n            positionIndexes: this.nextPositionIndexes(positionIndexes, size),\n            position: p3,\n          },\n        });\n\n        event.cancelPan();\n      }\n    }\n  }\n\n  handleStartDragging(event: StartDraggingEvent, props: ModeProps<FeatureCollection>) {\n    const selectedFeatureIndexes = props.selectedIndexes;\n\n    const editHandle = getPickedIntermediateEditHandle(event.picks);\n    if (selectedFeatureIndexes.length && editHandle) {\n      const { positionIndexes, featureIndex } = editHandle.properties;\n\n      const size = this.coordinatesSize(positionIndexes, featureIndex, props.data);\n      // p1 and p1 are end points for edge\n      const p1 = this.getPointForPositionIndexes(\n        this.prevPositionIndexes(positionIndexes, size),\n        featureIndex,\n        props.data\n      );\n      const p2 = this.getPointForPositionIndexes(positionIndexes, featureIndex, props.data);\n\n      if (p1 && p2) {\n        let updatedData = new ImmutableFeatureCollection(props.data);\n        if (!this.isOrthogonal(positionIndexes, featureIndex, size, props.data)) {\n          updatedData = updatedData.addPosition(featureIndex, positionIndexes, p2);\n        }\n        if (\n          !this.isOrthogonal(\n            this.prevPositionIndexes(positionIndexes, size),\n            featureIndex,\n            size,\n            props.data\n          )\n        ) {\n          updatedData = updatedData.addPosition(featureIndex, positionIndexes, p1);\n          this.isPointAdded = true;\n        }\n\n        props.onEdit({\n          updatedData: updatedData.getObject(),\n          editType: 'startExtruding',\n          editContext: {\n            featureIndexes: [featureIndex],\n            positionIndexes,\n            position: p1,\n          },\n        });\n      }\n    }\n  }\n\n  handleStopDragging(event: StopDraggingEvent, props: ModeProps<FeatureCollection>) {\n    const selectedFeatureIndexes = props.selectedIndexes;\n    const editHandle = getPickedEditHandle(event.pointerDownPicks);\n    if (selectedFeatureIndexes.length && editHandle) {\n      const { featureIndex } = editHandle.properties;\n      let { positionIndexes } = editHandle.properties;\n\n      const size = this.coordinatesSize(positionIndexes, featureIndex, props.data);\n      positionIndexes = this.isPointAdded\n        ? this.nextPositionIndexes(positionIndexes, size)\n        : positionIndexes;\n      // p1 and p1 are end points for edge\n      const p1 = this.getPointForPositionIndexes(\n        this.prevPositionIndexes(positionIndexes, size),\n        featureIndex,\n        props.data\n      );\n      const p2 = this.getPointForPositionIndexes(positionIndexes, featureIndex, props.data);\n\n      if (p1 && p2) {\n        // p3 and p4 are end points for new moved (extruded) edge\n        const [p3, p4] = generatePointsParallelToLinePoints(p1, p2, event.mapCoords);\n\n        const updatedData = new ImmutableFeatureCollection(props.data)\n          .replacePosition(featureIndex, this.prevPositionIndexes(positionIndexes, size), p4)\n          .replacePosition(featureIndex, positionIndexes, p3)\n          .getObject();\n\n        props.onEdit({\n          updatedData,\n          editType: 'extruded',\n          editContext: {\n            featureIndexes: [featureIndex],\n            positionIndexes,\n            position: p3,\n          },\n        });\n      }\n    }\n    this.isPointAdded = false;\n  }\n\n  coordinatesSize(\n    positionIndexes: number[] | null | undefined,\n    featureIndex: number,\n    { features }: FeatureCollection\n  ) {\n    let size = 0;\n    if (Array.isArray(positionIndexes)) {\n      const feature = features[featureIndex];\n      const coordinates: any = feature.geometry.coordinates;\n      // for Multi polygons, length will be 3\n      if (positionIndexes.length === 3) {\n        const [a, b] = positionIndexes;\n        if (coordinates.length && coordinates[a].length) {\n          size = coordinates[a][b].length;\n        }\n      } else {\n        const [b] = positionIndexes;\n        if (coordinates.length && coordinates[b].length) {\n          size = coordinates[b].length;\n        }\n      }\n    }\n    return size;\n  }\n\n  getBearing(p1: any, p2: any) {\n    const angle = bearing(p1, p2);\n    if (angle < 0) {\n      return Math.floor(360 + angle);\n    }\n    return Math.floor(angle);\n  }\n\n  isOrthogonal(\n    positionIndexes: number[] | null | undefined,\n    featureIndex: number,\n    size: number,\n    features: FeatureCollection\n  ) {\n    if (!Array.isArray(positionIndexes)) {\n      return false;\n    }\n    if (positionIndexes[positionIndexes.length - 1] === size - 1) {\n      positionIndexes[positionIndexes.length - 1] = 0;\n    }\n    const prevPoint = this.getPointForPositionIndexes(\n      this.prevPositionIndexes(positionIndexes, size),\n      featureIndex,\n      features\n    );\n    const nextPoint = this.getPointForPositionIndexes(\n      this.nextPositionIndexes(positionIndexes, size),\n      featureIndex,\n      features\n    );\n    const currentPoint = this.getPointForPositionIndexes(positionIndexes, featureIndex, features);\n    const prevAngle = this.getBearing(currentPoint, prevPoint);\n    const nextAngle = this.getBearing(currentPoint, nextPoint);\n    return [89, 90, 91, 269, 270, 271].includes(Math.abs(prevAngle - nextAngle));\n  }\n\n  nextPositionIndexes(positionIndexes: number[] | null | undefined, size: number): number[] {\n    if (!Array.isArray(positionIndexes)) {\n      return [];\n    }\n    const next = [...positionIndexes];\n    if (next.length) {\n      next[next.length - 1] = next[next.length - 1] === size - 1 ? 0 : next[next.length - 1] + 1;\n    }\n    return next;\n  }\n\n  prevPositionIndexes(positionIndexes: number[] | null | undefined, size: number): number[] {\n    if (!Array.isArray(positionIndexes)) {\n      return [];\n    }\n    const prev = [...positionIndexes];\n    if (prev.length) {\n      prev[prev.length - 1] = prev[prev.length - 1] === 0 ? size - 2 : prev[prev.length - 1] - 1;\n    }\n    return prev;\n  }\n\n  getPointForPositionIndexes(\n    positionIndexes: number[] | null | undefined,\n    featureIndex: number,\n    { features }: FeatureCollection\n  ) {\n    let p1;\n    if (Array.isArray(positionIndexes)) {\n      const feature = features[featureIndex];\n      const coordinates: any = feature.geometry.coordinates;\n      // for Multi polygons, length will be 3\n      if (positionIndexes.length === 3) {\n        const [a, b, c] = positionIndexes;\n        if (coordinates.length && coordinates[a].length) {\n          p1 = coordinates[a][b][c];\n        }\n      } else {\n        const [b, c] = positionIndexes;\n        if (coordinates.length && coordinates[b].length) {\n          p1 = coordinates[b][c];\n        }\n      }\n    }\n    return p1;\n  }\n}\n","import { ModeProps, PointerMoveEvent, StopDraggingEvent } from '../types';\nimport { Position, FeatureCollection } from '../geojson-types';\nimport { getPickedEditHandle } from '../utils';\nimport { ModifyMode } from './modify-mode';\n\nfunction defaultCalculateElevationChange({\n  pointerDownScreenCoords,\n  screenCoords,\n}: {\n  pointerDownScreenCoords: Position;\n  screenCoords: Position;\n}) {\n  return 10 * (pointerDownScreenCoords[1] - screenCoords[1]);\n}\n\nexport class ElevationMode extends ModifyMode {\n  makeElevatedEvent(\n    event: PointerMoveEvent | StopDraggingEvent,\n    position: Position,\n    props: ModeProps<FeatureCollection>\n  ): Record<string, any> {\n    const {\n      minElevation = 0,\n      maxElevation = 20000,\n      calculateElevationChange = defaultCalculateElevationChange,\n    } = props.modeConfig || {};\n\n    if (!event.pointerDownScreenCoords) {\n      return event;\n    }\n\n    // $FlowFixMe - really, I know it has something at index 2\n    let elevation = position.length === 3 ? position[2] : 0;\n\n    // calculateElevationChange is configurable because (at this time) modes are not aware of the viewport\n    elevation += calculateElevationChange({\n      pointerDownScreenCoords: event.pointerDownScreenCoords,\n      screenCoords: event.screenCoords,\n    });\n    elevation = Math.min(elevation, maxElevation);\n    elevation = Math.max(elevation, minElevation);\n\n    return Object.assign({}, event, {\n      mapCoords: [position[0], position[1], elevation],\n    });\n  }\n\n  handlePointerMove(event: PointerMoveEvent, props: ModeProps<FeatureCollection>) {\n    const editHandle = getPickedEditHandle(event.pointerDownPicks);\n    const position = editHandle ? editHandle.geometry.coordinates : event.mapCoords;\n    // @ts-ignore\n    super.handlePointerMove(this.makeElevatedEvent(event, position, props), props);\n  }\n\n  handleStopDragging(event: StopDraggingEvent, props: ModeProps<FeatureCollection>) {\n    const editHandle = getPickedEditHandle(event.picks);\n    const position = editHandle ? editHandle.geometry.coordinates : event.mapCoords;\n    // @ts-ignore\n    super.handleStopDragging(this.makeElevatedEvent(event, position, props), props);\n  }\n\n  getCursor(event: PointerMoveEvent): string | null | undefined {\n    let cursor = super.getCursor(event);\n    if (cursor === 'cell') {\n      cursor = 'ns-resize';\n    }\n    return cursor;\n  }\n\n  static calculateElevationChangeWithViewport(\n    viewport: any,\n    {\n      pointerDownScreenCoords,\n      screenCoords,\n    }: {\n      pointerDownScreenCoords: Position;\n      screenCoords: Position;\n    }\n  ): number {\n    // Source: https://gis.stackexchange.com/a/127949/111804\n    const metersPerPixel =\n      (156543.03392 * Math.cos((viewport.latitude * Math.PI) / 180)) / Math.pow(2, viewport.zoom);\n\n    return (metersPerPixel * (pointerDownScreenCoords[1] - screenCoords[1])) / 2;\n  }\n}\n","import { featureCollection } from '@turf/helpers';\nimport { PointerMoveEvent, ModeProps, StartDraggingEvent } from '../types';\nimport { FeatureCollection } from '../geojson-types';\nimport { TranslateMode } from './translate-mode';\nimport { ScaleMode } from './scale-mode';\nimport { RotateMode } from './rotate-mode';\n\nimport { CompositeMode } from './composite-mode';\n\nexport class TransformMode extends CompositeMode {\n  constructor() {\n    super([new TranslateMode(), new ScaleMode(), new RotateMode()]);\n  }\n\n  handlePointerMove(event: PointerMoveEvent, props: ModeProps<FeatureCollection>) {\n    let updatedCursor = null;\n    super.handlePointerMove(event, {\n      ...props,\n      onUpdateCursor: (cursor) => {\n        updatedCursor = cursor || updatedCursor;\n      },\n    });\n    props.onUpdateCursor(updatedCursor);\n  }\n\n  handleStartDragging(event: StartDraggingEvent, props: ModeProps<FeatureCollection>) {\n    let scaleMode = null;\n    let translateMode = null;\n    const filteredModes = [];\n\n    // If the user selects a scaling edit handle that overlaps with part of the selected feature,\n    // it is possible for both scale and translate actions to be triggered. This logic prevents\n    // this simultaneous action trigger from happening by putting a higher priority on scaling\n    // since the user needs to be more precise to hover over a scaling edit handle.\n    this._modes.forEach((mode) => {\n      if (mode instanceof TranslateMode) {\n        translateMode = mode;\n      } else {\n        if (mode instanceof ScaleMode) {\n          scaleMode = mode;\n        }\n        filteredModes.push(mode);\n      }\n    });\n\n    if (scaleMode instanceof ScaleMode && !scaleMode.isEditHandleSelected()) {\n      filteredModes.push(translateMode);\n    }\n\n    filteredModes.filter(Boolean).forEach((mode) => mode.handleStartDragging(event, props));\n  }\n\n  getGuides(props: ModeProps<FeatureCollection>) {\n    let compositeGuides = super.getGuides(props);\n    const rotateMode = (this._modes || []).find((mode) => mode instanceof RotateMode);\n\n    if (rotateMode instanceof RotateMode) {\n      const nonEnvelopeGuides = compositeGuides.features.filter((guide) => {\n        const { editHandleType, mode } = (guide.properties as any) || {};\n        // Both scale and rotate modes have the same enveloping box as a guide - only need one\n        const guidesToFilterOut = [mode];\n        // Do not render scaling edit handles if rotating\n        if (rotateMode.getIsRotating()) {\n          guidesToFilterOut.push(editHandleType);\n        }\n        return !guidesToFilterOut.includes('scale');\n      });\n      // @ts-ignore\n      compositeGuides = featureCollection(nonEnvelopeGuides);\n    }\n    return compositeGuides;\n  }\n}\n","import { ClickEvent, PointerMoveEvent, ModeProps, TentativeFeature } from '../types';\nimport { FeatureCollection } from '../geojson-types';\nimport { GeoJsonEditMode } from './geojson-edit-mode';\n\nexport class DrawPointMode extends GeoJsonEditMode {\n  createTentativeFeature(props: ModeProps<FeatureCollection>): TentativeFeature {\n    const { lastPointerMoveEvent } = props;\n    const lastCoords = lastPointerMoveEvent ? [lastPointerMoveEvent.mapCoords] : [];\n\n    return {\n      type: 'Feature',\n      properties: {\n        guideType: 'tentative',\n      },\n      geometry: {\n        type: 'Point',\n        coordinates: lastCoords[0],\n      },\n    };\n  }\n\n  handleClick({ mapCoords }: ClickEvent, props: ModeProps<FeatureCollection>): void {\n    const geometry = {\n      type: 'Point',\n      coordinates: mapCoords,\n    };\n    // @ts-ignore\n    props.onEdit(this.getAddFeatureAction(geometry, props.data));\n  }\n\n  handlePointerMove(event: PointerMoveEvent, props: ModeProps<FeatureCollection>) {\n    props.onUpdateCursor('cell');\n    super.handlePointerMove(event, props);\n  }\n}\n","import { LineString, FeatureCollection } from '../geojson-types';\nimport { ClickEvent, PointerMoveEvent, ModeProps, GuideFeatureCollection } from '../types';\nimport { getPickedEditHandle } from '../utils';\nimport { GeoJsonEditMode } from './geojson-edit-mode';\n\nexport class DrawLineStringMode extends GeoJsonEditMode {\n  handleClick(event: ClickEvent, props: ModeProps<FeatureCollection>) {\n    const { picks } = event;\n    const clickedEditHandle = getPickedEditHandle(picks);\n\n    let positionAdded = false;\n    if (!clickedEditHandle) {\n      // Don't add another point right next to an existing one\n      this.addClickSequence(event);\n      positionAdded = true;\n    }\n    const clickSequence = this.getClickSequence();\n\n    if (\n      clickSequence.length > 1 &&\n      clickedEditHandle &&\n      Array.isArray(clickedEditHandle.properties.positionIndexes) &&\n      clickedEditHandle.properties.positionIndexes[0] === clickSequence.length - 1\n    ) {\n      // They clicked the last point (or double-clicked), so add the LineString\n\n      const lineStringToAdd: LineString = {\n        type: 'LineString',\n        coordinates: [...clickSequence],\n      };\n\n      this.resetClickSequence();\n\n      const editAction = this.getAddFeatureAction(lineStringToAdd, props.data);\n      if (editAction) {\n        props.onEdit(editAction);\n      }\n    } else if (positionAdded) {\n      // new tentative point\n      props.onEdit({\n        // data is the same\n        updatedData: props.data,\n        editType: 'addTentativePosition',\n        editContext: {\n          position: event.mapCoords,\n        },\n      });\n    }\n  }\n  handleKeyUp(event: KeyboardEvent, props: ModeProps<FeatureCollection>) {\n    const { key } = event;\n    if (key === 'Enter') {\n      const clickSequence = this.getClickSequence();\n      if (clickSequence.length > 1) {\n        const lineStringToAdd: LineString = {\n          type: 'LineString',\n          coordinates: [...clickSequence],\n        };\n        this.resetClickSequence();\n        const editAction = this.getAddFeatureAction(lineStringToAdd, props.data);\n        if (editAction) {\n          props.onEdit(editAction);\n        }\n      }\n    }\n  }\n  getGuides(props: ModeProps<FeatureCollection>): GuideFeatureCollection {\n    const { lastPointerMoveEvent } = props;\n    const clickSequence = this.getClickSequence();\n\n    const lastCoords = lastPointerMoveEvent ? [lastPointerMoveEvent.mapCoords] : [];\n\n    const guides = {\n      type: 'FeatureCollection',\n      features: [],\n    };\n\n    let tentativeFeature;\n    if (clickSequence.length > 0) {\n      tentativeFeature = {\n        type: 'Feature',\n        properties: {\n          guideType: 'tentative',\n        },\n        geometry: {\n          type: 'LineString',\n          coordinates: [...clickSequence, ...lastCoords],\n        },\n      };\n    }\n\n    if (tentativeFeature) {\n      guides.features.push(tentativeFeature);\n    }\n\n    const editHandles = clickSequence.map((clickedCoord, index) => ({\n      type: 'Feature',\n      properties: {\n        guideType: 'editHandle',\n        editHandleType: 'existing',\n        featureIndex: -1,\n        positionIndexes: [index],\n      },\n      geometry: {\n        type: 'Point',\n        coordinates: clickedCoord,\n      },\n    }));\n\n    guides.features.push(...editHandles);\n    // @ts-ignore\n    return guides;\n  }\n\n  handlePointerMove(event: PointerMoveEvent, props: ModeProps<FeatureCollection>) {\n    props.onUpdateCursor('cell');\n  }\n}\n","import bboxPolygon from '@turf/bbox-polygon';\nimport { Position, Polygon, FeatureOf } from '../geojson-types';\nimport { TwoClickPolygonMode } from './two-click-polygon-mode';\n\nexport class DrawRectangleMode extends TwoClickPolygonMode {\n  getTwoClickPolygon(coord1: Position, coord2: Position, modeConfig: any): FeatureOf<Polygon> {\n    const rectangle = bboxPolygon([coord1[0], coord1[1], coord2[0], coord2[1]]);\n    rectangle.properties = rectangle.properties || {};\n    rectangle.properties.shape = 'Rectangle';\n\n    // @ts-ignore\n    return rectangle;\n  }\n}\n","import bboxPolygon from '@turf/bbox-polygon';\nimport { Position, Polygon, FeatureOf } from '../geojson-types';\nimport { TwoClickPolygonMode } from './two-click-polygon-mode';\n\nexport class DrawRectangleFromCenterMode extends TwoClickPolygonMode {\n  getTwoClickPolygon(coord1: Position, coord2: Position, modeConfig: any): FeatureOf<Polygon> {\n    const longitude =\n      coord1[0] > coord2[0]\n        ? coord1[0] + Math.abs(coord1[0] - coord2[0])\n        : coord1[0] - Math.abs(coord1[0] - coord2[0]);\n    const latitude =\n      coord1[1] > coord2[1]\n        ? coord1[1] + Math.abs(coord1[1] - coord2[1])\n        : coord1[1] - Math.abs(coord1[1] - coord2[1]);\n\n    const rectangle = bboxPolygon([longitude, latitude, coord2[0], coord2[1]]);\n    rectangle.properties = rectangle.properties || {};\n    rectangle.properties.shape = 'Rectangle';\n\n    // @ts-ignore\n    return rectangle;\n  }\n}\n","import bboxPolygon from '@turf/bbox-polygon';\nimport turfDistance from '@turf/distance';\nimport turfAlong from '@turf/along';\nimport { point, lineString as turfLineString } from '@turf/helpers';\nimport { Position, Polygon, FeatureOf } from '../geojson-types';\nimport { TwoClickPolygonMode } from './two-click-polygon-mode';\n\nexport class DrawSquareFromCenterMode extends TwoClickPolygonMode {\n  getTwoClickPolygon(coord1: Position, coord2: Position, modeConfig: any): FeatureOf<Polygon> {\n    // get the coordinates of the other two rectangle vertices\n    const coord3 = [coord2[0], coord1[1]];\n    const coord4 = [coord1[0], coord2[1]];\n\n    // determine the shortest distance to the origin, which will be the length of each square side\n    const distance1 = turfDistance(point(coord3), point(coord1));\n    const distance2 = turfDistance(point(coord4), point(coord1));\n    const shortestDistance = distance1 <= distance2 ? distance1 : distance2;\n\n    // determine which coordinate pair of the two is closest to the origin\n    const closestPoint = distance1 <= distance2 ? coord3 : coord4;\n\n    // create a linestring which will used to locate the second square vertex\n    const line = turfLineString([closestPoint, coord2]);\n\n    // get the coordinates of the second square vertex\n    const newPoint = turfAlong(line, shortestDistance);\n    const corner = newPoint.geometry.coordinates;\n\n    // determine the longitude and latitude values of the opposite corner\n    const longitude =\n      coord1[0] > corner[0]\n        ? coord1[0] + Math.abs(coord1[0] - corner[0])\n        : coord1[0] - Math.abs(coord1[0] - corner[0]);\n    const latitude =\n      coord1[1] > corner[1]\n        ? coord1[1] + Math.abs(coord1[1] - corner[1])\n        : coord1[1] - Math.abs(coord1[1] - corner[1]);\n\n    const square = bboxPolygon([longitude, latitude, corner[0], corner[1]]);\n    square.properties = square.properties || {};\n    square.properties.shape = 'Square';\n\n    // @ts-ignore\n    return square;\n  }\n}\n","import circle from '@turf/circle';\nimport distance from '@turf/distance';\nimport { Position, Polygon, FeatureOf } from '../geojson-types';\nimport { getIntermediatePosition } from './geojson-edit-mode';\nimport { TwoClickPolygonMode } from './two-click-polygon-mode';\n\nexport class DrawCircleByDiameterMode extends TwoClickPolygonMode {\n  getTwoClickPolygon(coord1: Position, coord2: Position, modeConfig: any): FeatureOf<Polygon> {\n    // Default turf value for circle is 64\n    const { steps = 64 } = modeConfig || {};\n    const options = { steps };\n\n    if (steps < 4) {\n      console.warn(`Minimum steps to draw a circle is 4 `); // eslint-disable-line no-console,no-undef\n      options.steps = 4;\n    }\n\n    const centerCoordinates = getIntermediatePosition(coord1, coord2);\n    const radius = Math.max(distance(coord1, centerCoordinates), 0.001);\n\n    const geometry = circle(centerCoordinates, radius, options);\n\n    geometry.properties = geometry.properties || {};\n    geometry.properties.shape = 'Circle';\n\n    return geometry;\n  }\n}\n","import circle from '@turf/circle';\nimport distance from '@turf/distance';\nimport { Position, Polygon, FeatureOf } from '../geojson-types';\nimport { TwoClickPolygonMode } from './two-click-polygon-mode';\n\nexport class DrawCircleFromCenterMode extends TwoClickPolygonMode {\n  getTwoClickPolygon(coord1: Position, coord2: Position, modeConfig: any): FeatureOf<Polygon> {\n    // Default turf value for circle is 64\n    const { steps = 64 } = modeConfig || {};\n    const options = { steps };\n\n    if (steps < 4) {\n      console.warn(`Minimum steps to draw a circle is 4 `); // eslint-disable-line no-console,no-undef\n      options.steps = 4;\n    }\n\n    const radius = Math.max(distance(coord1, coord2), 0.001);\n    const geometry = circle(coord1, radius, options);\n\n    geometry.properties = geometry.properties || {};\n    geometry.properties.shape = 'Circle';\n\n    return geometry;\n  }\n}\n","import bboxPolygon from '@turf/bbox-polygon';\nimport distance from '@turf/distance';\nimport ellipse from '@turf/ellipse';\nimport { point } from '@turf/helpers';\nimport { Position, Polygon, FeatureOf } from '../geojson-types';\nimport { getIntermediatePosition } from './geojson-edit-mode';\nimport { TwoClickPolygonMode } from './two-click-polygon-mode';\n\nexport class DrawEllipseByBoundingBoxMode extends TwoClickPolygonMode {\n  getTwoClickPolygon(coord1: Position, coord2: Position, modeConfig: any): FeatureOf<Polygon> {\n    const minX = Math.min(coord1[0], coord2[0]);\n    const minY = Math.min(coord1[1], coord2[1]);\n    const maxX = Math.max(coord1[0], coord2[0]);\n    const maxY = Math.max(coord1[1], coord2[1]);\n\n    const polygonPoints = bboxPolygon([minX, minY, maxX, maxY]).geometry.coordinates[0];\n    const centerCoordinates = getIntermediatePosition(coord1, coord2);\n\n    const xSemiAxis = Math.max(distance(point(polygonPoints[0]), point(polygonPoints[1])), 0.001);\n    const ySemiAxis = Math.max(distance(point(polygonPoints[0]), point(polygonPoints[3])), 0.001);\n\n    // @ts-ignore\n    return ellipse(centerCoordinates, xSemiAxis, ySemiAxis);\n  }\n}\n","import distance from '@turf/distance';\nimport ellipse from '@turf/ellipse';\nimport bearing from '@turf/bearing';\nimport { point } from '@turf/helpers';\nimport { Position, Polygon, FeatureOf } from '../geojson-types';\nimport { getIntermediatePosition } from './geojson-edit-mode';\nimport { ThreeClickPolygonMode } from './three-click-polygon-mode';\n\nexport class DrawEllipseUsingThreePointsMode extends ThreeClickPolygonMode {\n  getThreeClickPolygon(\n    coord1: Position,\n    coord2: Position,\n    coord3: Position,\n    modeConfig: any\n  ): FeatureOf<Polygon> | null | undefined {\n    const centerCoordinates = getIntermediatePosition(coord1, coord2);\n    const xSemiAxis = Math.max(distance(centerCoordinates, point(coord3)), 0.001);\n    const ySemiAxis = Math.max(distance(coord1, coord2), 0.001) / 2;\n    const options = { angle: bearing(coord1, coord2) };\n    // @ts-ignore\n    return ellipse(centerCoordinates, xSemiAxis, ySemiAxis, options);\n  }\n}\n","import { generatePointsParallelToLinePoints } from '../utils';\nimport { Position, Polygon, FeatureOf } from '../geojson-types';\nimport { ThreeClickPolygonMode } from './three-click-polygon-mode';\n\nexport class DrawRectangleUsingThreePointsMode extends ThreeClickPolygonMode {\n  getThreeClickPolygon(\n    coord1: Position,\n    coord2: Position,\n    coord3: Position,\n    modeConfig: any\n  ): FeatureOf<Polygon> | null | undefined {\n    const [p3, p4] = generatePointsParallelToLinePoints(coord1, coord2, coord3);\n\n    return {\n      type: 'Feature',\n      properties: {\n        shape: 'Rectangle',\n      },\n      geometry: {\n        type: 'Polygon',\n        coordinates: [\n          [\n            // Draw a polygon containing all the points of the LineString,\n            // then the points orthogonal to the lineString,\n            // then back to the starting position\n            coord1,\n            coord2,\n            p3,\n            p4,\n            coord1,\n          ],\n        ],\n      },\n    };\n  }\n}\n","import destination from '@turf/destination';\nimport bearing from '@turf/bearing';\nimport lineIntersect from '@turf/line-intersect';\nimport turfDistance from '@turf/distance';\nimport { point, lineString as turfLineString } from '@turf/helpers';\nimport {\n  generatePointsParallelToLinePoints,\n  getPickedEditHandle,\n  getEditHandlesForGeometry,\n} from '../utils';\nimport {\n  ClickEvent,\n  PointerMoveEvent,\n  ModeProps,\n  GuideFeatureCollection,\n  TentativeFeature,\n} from '../types';\nimport { Polygon, LineString, Position, FeatureCollection } from '../geojson-types';\nimport { GeoJsonEditMode } from './geojson-edit-mode';\n\nexport class Draw90DegreePolygonMode extends GeoJsonEditMode {\n  createTentativeFeature(props: ModeProps<FeatureCollection>): TentativeFeature {\n    const clickSequence = this.getClickSequence();\n\n    const { mapCoords } = props.lastPointerMoveEvent;\n\n    let p3;\n    if (clickSequence.length === 1) {\n      p3 = mapCoords;\n    } else {\n      const p1 = clickSequence[clickSequence.length - 2];\n      const p2 = clickSequence[clickSequence.length - 1];\n      [p3] = generatePointsParallelToLinePoints(p1, p2, mapCoords);\n    }\n\n    let tentativeFeature;\n\n    if (clickSequence.length < 3) {\n      // Draw a LineString connecting all the clicked points with the hovered point\n      tentativeFeature = {\n        type: 'Feature',\n        properties: {\n          guideType: 'tentative',\n        },\n        geometry: {\n          type: 'LineString',\n          coordinates: [...clickSequence, p3],\n        },\n      };\n    } else {\n      // Draw a Polygon connecting all the clicked points with the hovered point\n      tentativeFeature = {\n        type: 'Feature',\n        properties: {\n          guideType: 'tentative',\n        },\n        geometry: {\n          type: 'Polygon',\n          coordinates: [[...clickSequence, p3, clickSequence[0]]],\n        },\n      };\n    }\n\n    return tentativeFeature;\n  }\n\n  getGuides(props: ModeProps<FeatureCollection>): GuideFeatureCollection {\n    const guides: GuideFeatureCollection = {\n      type: 'FeatureCollection',\n      features: [],\n    };\n\n    const clickSequence = this.getClickSequence();\n\n    if (clickSequence.length === 0 || !props.lastPointerMoveEvent) {\n      return guides;\n    }\n    const tentativeFeature = this.createTentativeFeature(props);\n\n    guides.features.push(tentativeFeature);\n\n    guides.features = guides.features.concat(\n      getEditHandlesForGeometry(tentativeFeature.geometry, -1)\n    );\n\n    // Slice off the handles that are are next to the pointer\n    guides.features = guides.features.slice(0, -1);\n\n    return guides;\n  }\n\n  handlePointerMove(event: PointerMoveEvent, props: ModeProps<FeatureCollection>) {\n    props.onUpdateCursor('cell');\n    super.handlePointerMove(event, props);\n  }\n\n  handleClick(event: ClickEvent, props: ModeProps<FeatureCollection>) {\n    const { picks } = event;\n    const tentativeFeature = this.getTentativeGuide(props);\n    this.addClickSequence(event);\n    const clickSequence = this.getClickSequence();\n\n    if (!tentativeFeature) {\n      // nothing else to do\n      return;\n    }\n\n    if (clickSequence.length === 3 && tentativeFeature.geometry.type === 'LineString') {\n      const lineString: LineString = tentativeFeature.geometry;\n\n      // Tweak the clicked position to be the snapped 90 degree point along the polygon\n      clickSequence[clickSequence.length - 1] =\n        lineString.coordinates[lineString.coordinates.length - 1];\n    } else if (clickSequence.length > 3 && tentativeFeature.geometry.type === 'Polygon') {\n      const polygon: Polygon = tentativeFeature.geometry;\n\n      // Tweak the clicked position to be the snapped 90 degree point along the polygon\n      clickSequence[clickSequence.length - 1] =\n        polygon.coordinates[0][polygon.coordinates[0].length - 2];\n\n      const clickedEditHandle = getPickedEditHandle(picks);\n\n      if (\n        clickedEditHandle &&\n        Array.isArray(clickedEditHandle.properties.positionIndexes) &&\n        (clickedEditHandle.properties.positionIndexes[1] === 0 ||\n          clickedEditHandle.properties.positionIndexes[1] === polygon.coordinates[0].length - 3)\n      ) {\n        // They clicked the first or last point (or double-clicked), so complete the polygon\n        const polygonToAdd: Polygon = {\n          type: 'Polygon',\n          coordinates: this.finalizedCoordinates([...polygon.coordinates[0]]),\n        };\n\n        this.resetClickSequence();\n\n        const editAction = this.getAddFeatureOrBooleanPolygonAction(polygonToAdd, props);\n        if (editAction) {\n          props.onEdit(editAction);\n        }\n      }\n    }\n\n    // Trigger pointer move right away in order for it to update edit handles (to support double-click)\n    const fakePointerMoveEvent: PointerMoveEvent = {\n      screenCoords: [-1, -1],\n      mapCoords: event.mapCoords,\n      picks: [],\n      pointerDownPicks: null,\n      pointerDownScreenCoords: null,\n      pointerDownMapCoords: null,\n      cancelPan: () => {},\n      sourceEvent: null,\n    };\n\n    this.handlePointerMove(fakePointerMoveEvent, props);\n  }\n\n  finalizedCoordinates(coords: Position[]) {\n    // Remove the hovered position\n    let coordinates = [[...coords.slice(0, -2), coords[0]]];\n    let pt = this.getIntermediatePoint([...coords]);\n    if (!pt) {\n      // if intermediate point with 90 degree not available\n      // try remove the last clicked point and get the intermediate point.\n      const tc = [...coords];\n      tc.splice(-3, 1);\n      pt = this.getIntermediatePoint([...tc]);\n      if (pt) {\n        coordinates = [[...coords.slice(0, -3), pt, coords[0]]];\n      }\n    } else {\n      coordinates = [[...coords.slice(0, -2), pt, coords[0]]];\n    }\n    return coordinates;\n  }\n\n  getIntermediatePoint(coordinates: Position[]) {\n    let pt;\n    if (coordinates.length > 4) {\n      const [p1, p2] = [...coordinates];\n      const angle1 = bearing(p1, p2);\n      const p3 = coordinates[coordinates.length - 3];\n      const p4 = coordinates[coordinates.length - 4];\n      const angle2 = bearing(p3, p4);\n\n      const angles = { first: [], second: [] };\n      // calculate 3 right angle points for first and last points in lineString\n      [1, 2, 3].forEach((factor) => {\n        const newAngle1 = angle1 + factor * 90;\n        // convert angles to 0 to -180 for anti-clock and 0 to 180 for clock wise\n        angles.first.push(newAngle1 > 180 ? newAngle1 - 360 : newAngle1);\n        const newAngle2 = angle2 + factor * 90;\n        angles.second.push(newAngle2 > 180 ? newAngle2 - 360 : newAngle2);\n      });\n\n      const distance = turfDistance(point(p1), point(p3));\n      // Draw imaginary right angle lines for both first and last points in lineString\n      // If there is intersection point for any 2 lines, will be the 90 degree point.\n      [0, 1, 2].forEach((indexFirst) => {\n        const line1 = turfLineString([\n          p1,\n          destination(p1, distance, angles.first[indexFirst]).geometry.coordinates,\n        ]);\n        [0, 1, 2].forEach((indexSecond) => {\n          const line2 = turfLineString([\n            p3,\n            destination(p3, distance, angles.second[indexSecond]).geometry.coordinates,\n          ]);\n          const fc = lineIntersect(line1, line2);\n          if (fc && fc.features.length) {\n            // found the intersect point\n            pt = fc.features[0].geometry.coordinates;\n          }\n        });\n      });\n    }\n    return pt;\n  }\n}\n","import throttle from 'lodash.throttle';\nimport {\n  ClickEvent,\n  StartDraggingEvent,\n  StopDraggingEvent,\n  DraggingEvent,\n  ModeProps,\n} from '../types';\nimport { Polygon, FeatureCollection } from '../geojson-types';\nimport { getPickedEditHandle } from '../utils';\nimport { DrawPolygonMode } from './draw-polygon-mode';\n\ntype DraggingHandler = (event: DraggingEvent, props: ModeProps<FeatureCollection>) => void;\n\nexport class DrawPolygonByDraggingMode extends DrawPolygonMode {\n  handleDraggingThrottled: DraggingHandler | null | undefined = null;\n\n  handleClick(event: ClickEvent, props: ModeProps<FeatureCollection>) {\n    // No-op\n  }\n\n  handleStartDragging(event: StartDraggingEvent, props: ModeProps<FeatureCollection>) {\n    event.cancelPan();\n    if (props.modeConfig && props.modeConfig.throttleMs) {\n      this.handleDraggingThrottled = throttle(this.handleDraggingAux, props.modeConfig.throttleMs);\n    } else {\n      this.handleDraggingThrottled = this.handleDraggingAux;\n    }\n  }\n\n  handleStopDragging(event: StopDraggingEvent, props: ModeProps<FeatureCollection>) {\n    this.addClickSequence(event);\n    const clickSequence = this.getClickSequence();\n    // @ts-ignore\n    if (this.handleDraggingThrottled && this.handleDraggingThrottled.cancel) {\n      // @ts-ignore\n      this.handleDraggingThrottled.cancel();\n    }\n\n    if (clickSequence.length > 2) {\n      // Complete the polygon.\n      const polygonToAdd: Polygon = {\n        type: 'Polygon',\n        coordinates: [[...clickSequence, clickSequence[0]]],\n      };\n\n      this.resetClickSequence();\n\n      const editAction = this.getAddFeatureOrBooleanPolygonAction(polygonToAdd, props);\n      if (editAction) {\n        props.onEdit(editAction);\n      }\n    }\n  }\n\n  handleDraggingAux(event: DraggingEvent, props: ModeProps<FeatureCollection>) {\n    const { picks } = event;\n    const clickedEditHandle = getPickedEditHandle(picks);\n\n    if (!clickedEditHandle) {\n      // Don't add another point right next to an existing one.\n      this.addClickSequence(event);\n    }\n  }\n\n  handleDragging(event: DraggingEvent, props: ModeProps<FeatureCollection>) {\n    if (this.handleDraggingThrottled) {\n      this.handleDraggingThrottled(event, props);\n    }\n  }\n}\n","import { GeoJsonEditMode } from './geojson-edit-mode';\n\nexport class ViewMode extends GeoJsonEditMode {}\n","import turfDistance from '@turf/distance';\nimport { FeatureCollection } from '../geojson-types';\nimport { ClickEvent, PointerMoveEvent, ModeProps, GuideFeatureCollection, Tooltip } from '../types';\nimport { getPickedEditHandle } from '../utils';\nimport { GeoJsonEditMode } from './geojson-edit-mode';\n\nexport class MeasureDistanceMode extends GeoJsonEditMode {\n  _isMeasuringSessionFinished = false;\n  _currentTooltips = [];\n  _currentDistance = 0;\n\n  _calculateDistanceForTooltip = ({ positionA, positionB, modeConfig }) => {\n    const { turfOptions, measurementCallback } = modeConfig || {};\n    const distance = turfDistance(positionA, positionB, turfOptions);\n\n    if (measurementCallback) {\n      measurementCallback(distance);\n    }\n\n    return distance;\n  };\n\n  _formatTooltip(distance, modeConfig?) {\n    const { formatTooltip, turfOptions } = modeConfig || {};\n    const units = (turfOptions && turfOptions.units) || 'kilometers';\n\n    let text;\n    if (formatTooltip) {\n      text = formatTooltip(distance);\n    } else {\n      // By default, round to 2 decimal places and append units\n      text = `${parseFloat(distance).toFixed(2)} ${units}`;\n    }\n\n    return text;\n  }\n\n  handleClick(event: ClickEvent, props: ModeProps<FeatureCollection>) {\n    const { modeConfig, data, onEdit } = props;\n\n    // restart measuring session\n    if (this._isMeasuringSessionFinished) {\n      this._isMeasuringSessionFinished = false;\n      this.resetClickSequence();\n      this._currentTooltips = [];\n      this._currentDistance = 0;\n    }\n\n    const { picks } = event;\n    const clickedEditHandle = getPickedEditHandle(picks);\n\n    let positionAdded = false;\n    if (!clickedEditHandle) {\n      // Don't add another point right next to an existing one\n      this.addClickSequence(event);\n      positionAdded = true;\n    }\n    const clickSequence = this.getClickSequence();\n\n    if (\n      clickSequence.length > 1 &&\n      clickedEditHandle &&\n      Array.isArray(clickedEditHandle.properties.positionIndexes) &&\n      clickedEditHandle.properties.positionIndexes[0] === clickSequence.length - 1\n    ) {\n      // They clicked the last point (or double-clicked), so add the LineString\n      this._isMeasuringSessionFinished = true;\n    } else if (positionAdded) {\n      if (clickSequence.length > 1) {\n        this._currentDistance += this._calculateDistanceForTooltip({\n          positionA: clickSequence[clickSequence.length - 2],\n          positionB: clickSequence[clickSequence.length - 1],\n          modeConfig,\n        });\n        this._currentTooltips.push({\n          position: event.mapCoords,\n          text: this._formatTooltip(this._currentDistance, modeConfig),\n        });\n      }\n\n      // new tentative point\n      onEdit({\n        // data is the same\n        updatedData: data,\n        editType: 'addTentativePosition',\n        editContext: {\n          position: event.mapCoords,\n        },\n      });\n    }\n  }\n\n  handleKeyUp(event: KeyboardEvent, props: ModeProps<FeatureCollection>) {\n    if (this._isMeasuringSessionFinished) return;\n\n    event.stopPropagation();\n    const { key } = event;\n\n    const clickSequenceLength = this.getClickSequence().length;\n\n    switch (key) {\n      case 'Escape':\n        this._isMeasuringSessionFinished = true;\n        if (clickSequenceLength === 1) {\n          this.resetClickSequence();\n          this._currentTooltips = [];\n        }\n        // force update drawings\n        props.onUpdateCursor('cell');\n        break;\n      case 'Enter':\n        this.handleClick(props.lastPointerMoveEvent, props);\n        this._isMeasuringSessionFinished = true;\n        break;\n      default:\n        break;\n    }\n  }\n\n  getGuides(props: ModeProps<FeatureCollection>): GuideFeatureCollection {\n    const { lastPointerMoveEvent } = props;\n    const clickSequence = this.getClickSequence();\n\n    const lastCoords =\n      lastPointerMoveEvent && !this._isMeasuringSessionFinished\n        ? [lastPointerMoveEvent.mapCoords]\n        : [];\n\n    const guides = {\n      type: 'FeatureCollection',\n      features: [],\n    };\n\n    if (clickSequence.length > 0) {\n      guides.features.push({\n        type: 'Feature',\n        properties: {\n          guideType: 'tentative',\n        },\n        geometry: {\n          type: 'LineString',\n          coordinates: [...clickSequence, ...lastCoords],\n        },\n      });\n    }\n\n    const editHandles = clickSequence.map((clickedCoord, index) => ({\n      type: 'Feature',\n      properties: {\n        guideType: 'editHandle',\n        editHandleType: 'existing',\n        featureIndex: -1,\n        positionIndexes: [index],\n      },\n      geometry: {\n        type: 'Point',\n        coordinates: clickedCoord,\n      },\n    }));\n\n    guides.features.push(...editHandles);\n    // @ts-ignore\n    return guides;\n  }\n\n  handlePointerMove(event: PointerMoveEvent, props: ModeProps<FeatureCollection>) {\n    props.onUpdateCursor('cell');\n  }\n\n  getTooltips(props: ModeProps<FeatureCollection>): Tooltip[] {\n    const { lastPointerMoveEvent, modeConfig } = props;\n    const positions = this.getClickSequence();\n\n    if (positions.length > 0 && lastPointerMoveEvent && !this._isMeasuringSessionFinished) {\n      const distance = this._calculateDistanceForTooltip({\n        positionA: positions[positions.length - 1],\n        positionB: lastPointerMoveEvent.mapCoords,\n        modeConfig: props.modeConfig,\n      });\n      return [\n        ...this._currentTooltips,\n        {\n          position: lastPointerMoveEvent.mapCoords,\n          text: this._formatTooltip(this._currentDistance + distance, modeConfig),\n        },\n      ];\n    }\n\n    return this._currentTooltips;\n  }\n}\n","import turfArea from '@turf/area';\nimport turfCentroid from '@turf/centroid';\nimport { ClickEvent, Tooltip, ModeProps } from '../types';\nimport { FeatureCollection } from '../geojson-types';\nimport { DrawPolygonMode } from './draw-polygon-mode';\n\nconst DEFAULT_TOOLTIPS = [];\n\nexport class MeasureAreaMode extends DrawPolygonMode {\n  handleClick(event: ClickEvent, props: ModeProps<FeatureCollection>) {\n    const propsWithoutEdit = {\n      ...props,\n      // @ts-ignore\n      onEdit: () => {},\n    };\n\n    super.handleClick(event, propsWithoutEdit);\n  }\n\n  getTooltips(props: ModeProps<FeatureCollection>): Tooltip[] {\n    const tentativeGuide = this.getTentativeGuide(props);\n\n    if (tentativeGuide && tentativeGuide.geometry.type === 'Polygon') {\n      const { modeConfig } = props;\n      const { formatTooltip, measurementCallback } = modeConfig || {};\n      const units = 'sq. m';\n\n      const centroid = turfCentroid(tentativeGuide);\n      const area = turfArea(tentativeGuide);\n\n      let text;\n      if (formatTooltip) {\n        text = formatTooltip(area);\n      } else {\n        // By default, round to 2 decimal places and append units\n        // @ts-ignore\n        text = `${parseFloat(area).toFixed(2)} ${units}`;\n      }\n\n      if (measurementCallback) {\n        measurementCallback(area);\n      }\n\n      return [\n        {\n          position: centroid.geometry.coordinates,\n          text,\n        },\n      ];\n    }\n    return DEFAULT_TOOLTIPS;\n  }\n}\n","import turfBearing from '@turf/bearing';\n// @ts-ignore\nimport turfCenter from '@turf/center';\n// @ts-ignore\nimport memoize from '../memoize';\n\nimport { ClickEvent, PointerMoveEvent, Tooltip, ModeProps, GuideFeatureCollection } from '../types';\nimport { FeatureCollection } from '../geojson-types';\nimport { GeoJsonEditMode } from './geojson-edit-mode';\n\nconst DEFAULT_TOOLTIPS = [];\n\nexport class MeasureAngleMode extends GeoJsonEditMode {\n  _getTooltips = memoize(({ modeConfig, vertex, point1, point2 }) => {\n    let tooltips = DEFAULT_TOOLTIPS;\n\n    if (vertex && point1 && point2) {\n      const { formatTooltip, measurementCallback } = modeConfig || {};\n      const units = 'deg';\n\n      const angle1 = turfBearing(vertex, point1);\n      const angle2 = turfBearing(vertex, point2);\n      let angle = Math.abs(angle1 - angle2);\n      if (angle > 180) {\n        angle = 360 - angle;\n      }\n\n      let text;\n      if (formatTooltip) {\n        text = formatTooltip(angle);\n      } else {\n        // By default, round to 2 decimal places and append units\n        // @ts-ignore\n        text = `${parseFloat(angle).toFixed(2)} ${units}`;\n      }\n\n      if (measurementCallback) {\n        measurementCallback(angle);\n      }\n\n      const position = turfCenter({\n        type: 'FeatureCollection',\n        features: [point1, point2].map((p) => ({\n          type: 'Feature',\n          geometry: {\n            type: 'Point',\n            coordinates: p,\n          },\n        })),\n      }).geometry.coordinates;\n\n      tooltips = [\n        {\n          position,\n          text,\n        },\n      ];\n    }\n\n    return tooltips;\n  });\n\n  handleClick(event: ClickEvent, props: ModeProps<FeatureCollection>): void {\n    if (this.getClickSequence().length >= 3) {\n      this.resetClickSequence();\n    }\n\n    this.addClickSequence(event);\n  }\n\n  // Called when the pointer moved, regardless of whether the pointer is down, up, and whether something was picked\n  handlePointerMove(event: PointerMoveEvent, props: ModeProps<FeatureCollection>): void {\n    props.onUpdateCursor('cell');\n  }\n\n  getPoints(props: ModeProps<FeatureCollection>) {\n    const clickSequence = this.getClickSequence();\n\n    const points = [...clickSequence];\n\n    if (clickSequence.length < 3 && props.lastPointerMoveEvent) {\n      points.push(props.lastPointerMoveEvent.mapCoords);\n    }\n\n    return points;\n  }\n\n  // Return features that can be used as a guide for editing the data\n  getGuides(props: ModeProps<FeatureCollection>): GuideFeatureCollection {\n    const guides: GuideFeatureCollection = { type: 'FeatureCollection', features: [] };\n    const { features } = guides;\n\n    const points = this.getPoints(props);\n\n    if (points.length > 2) {\n      features.push({\n        type: 'Feature',\n        properties: { guideType: 'tentative' },\n        geometry: {\n          type: 'LineString',\n          coordinates: [points[1], points[0], points[2]],\n        },\n      });\n    } else if (points.length > 1) {\n      features.push({\n        type: 'Feature',\n        properties: { guideType: 'tentative' },\n        geometry: {\n          type: 'LineString',\n          coordinates: [points[1], points[0]],\n        },\n      });\n    }\n\n    return guides;\n  }\n\n  getTooltips(props: ModeProps<FeatureCollection>): Tooltip[] {\n    const points = this.getPoints(props);\n\n    return this._getTooltips({\n      modeConfig: props.modeConfig,\n      vertex: points[0],\n      point1: points[1],\n      point2: points[2],\n    });\n  }\n}\n","import { Position, Feature, FeatureCollection } from '../geojson-types';\nimport {\n  PointerMoveEvent,\n  StartDraggingEvent,\n  StopDraggingEvent,\n  DraggingEvent,\n  ModeProps,\n  Pick,\n  GuideFeatureCollection,\n  EditHandleFeature,\n} from '../types';\nimport {\n  getPickedSnapSourceEditHandle,\n  getPickedEditHandles,\n  getEditHandlesForGeometry,\n} from '../utils';\nimport { GeoJsonEditMode } from './geojson-edit-mode';\n\ntype MovementTypeEvent = PointerMoveEvent | StartDraggingEvent | StopDraggingEvent | DraggingEvent;\n\nexport class SnappableMode extends GeoJsonEditMode {\n  _handler: GeoJsonEditMode;\n\n  constructor(handler: GeoJsonEditMode) {\n    super();\n    this._handler = handler;\n  }\n\n  _getSnappedMouseEvent<T extends MovementTypeEvent>(\n    event: T,\n    snapSource: EditHandleFeature,\n    snapTarget: EditHandleFeature\n  ): T {\n    return Object.assign(event, {\n      mapCoords: snapTarget.geometry.coordinates,\n      pointerDownMapCoords: snapSource && snapSource.geometry.coordinates,\n    });\n  }\n\n  _getPickedSnapTarget(picks: Pick[]): EditHandleFeature | null | undefined {\n    return getPickedEditHandles(picks).find(\n      (handle) => handle.properties.editHandleType === 'snap-target'\n    );\n  }\n\n  _getPickedSnapSource(\n    pointerDownPicks: Pick[] | null | undefined\n  ): EditHandleFeature | null | undefined {\n    return getPickedSnapSourceEditHandle(pointerDownPicks);\n  }\n\n  _getUpdatedSnapSourceHandle(\n    snapSourceHandle: EditHandleFeature,\n    data: FeatureCollection\n  ): EditHandleFeature {\n    const { featureIndex, positionIndexes } = snapSourceHandle.properties;\n    if (!Array.isArray(positionIndexes)) {\n      return snapSourceHandle;\n    }\n    const snapSourceFeature = data.features[featureIndex];\n\n    // $FlowFixMe\n    const snapSourceCoordinates: Position = positionIndexes.reduce(\n      (a: any[], b: number) => a[b],\n      snapSourceFeature.geometry.coordinates\n    );\n\n    return {\n      ...snapSourceHandle,\n      geometry: {\n        type: 'Point',\n        coordinates: snapSourceCoordinates,\n      },\n    };\n  }\n\n  // If additionalSnapTargets is present in modeConfig and is populated, this\n  // method will return those features along with the features\n  // that live in the current layer. Otherwise, this method will simply return the\n  // features from the current layer\n  _getSnapTargets(props: ModeProps<FeatureCollection>): Feature[] {\n    let { additionalSnapTargets } = props.modeConfig || {};\n    additionalSnapTargets = additionalSnapTargets || [];\n\n    const features = [...props.data.features, ...additionalSnapTargets];\n    return features;\n  }\n\n  _getSnapTargetHandles(props: ModeProps<FeatureCollection>): EditHandleFeature[] {\n    const handles = [];\n    const features = this._getSnapTargets(props);\n\n    for (let i = 0; i < features.length; i++) {\n      // Filter out the currently selected feature(s)\n      const isCurrentIndexFeatureNotSelected = !props.selectedIndexes.includes(i);\n\n      if (isCurrentIndexFeatureNotSelected) {\n        const { geometry } = features[i];\n        handles.push(...getEditHandlesForGeometry(geometry, i, 'snap-target'));\n      }\n    }\n    return handles;\n  }\n\n  // If no snap handle has been picked, only display the edit handles of the\n  // selected feature. If a snap handle has been picked, display said snap handle\n  // along with all snappable points on all non-selected features.\n  getGuides(props: ModeProps<FeatureCollection>): GuideFeatureCollection {\n    const { modeConfig, lastPointerMoveEvent } = props;\n    const { enableSnapping } = modeConfig || {};\n\n    const guides: GuideFeatureCollection = {\n      type: 'FeatureCollection',\n      features: [...this._handler.getGuides(props).features],\n    };\n\n    if (!enableSnapping) {\n      return guides;\n    }\n\n    const snapSourceHandle: EditHandleFeature | null | undefined =\n      lastPointerMoveEvent && this._getPickedSnapSource(lastPointerMoveEvent.pointerDownPicks);\n\n    // They started dragging a handle\n    // So render the picked handle (in its updated location) and all possible snap targets\n    if (snapSourceHandle) {\n      guides.features.push(\n        ...this._getSnapTargetHandles(props),\n        this._getUpdatedSnapSourceHandle(snapSourceHandle, props.data)\n      );\n\n      return guides;\n    }\n\n    // Render the possible snap source handles\n    const { features } = props.data;\n    for (const index of props.selectedIndexes) {\n      if (index < features.length) {\n        const { geometry } = features[index];\n        guides.features.push(...getEditHandlesForGeometry(geometry, index, 'snap-source'));\n      }\n    }\n\n    return guides;\n  }\n\n  _getSnapAwareEvent<T extends MovementTypeEvent>(\n    event: T,\n    props: ModeProps<FeatureCollection>\n  ): T {\n    const snapSource = this._getPickedSnapSource(props.lastPointerMoveEvent.pointerDownPicks);\n    const snapTarget = this._getPickedSnapTarget(event.picks);\n\n    return snapSource && snapTarget\n      ? this._getSnappedMouseEvent(event, snapSource, snapTarget)\n      : event;\n  }\n\n  handleStartDragging(event: StartDraggingEvent, props: ModeProps<FeatureCollection>) {\n    this._handler.handleStartDragging(event, props);\n  }\n\n  handleStopDragging(event: StopDraggingEvent, props: ModeProps<FeatureCollection>) {\n    this._handler.handleStopDragging(this._getSnapAwareEvent(event, props), props);\n  }\n\n  handleDragging(event: DraggingEvent, props: ModeProps<FeatureCollection>) {\n    this._handler.handleDragging(this._getSnapAwareEvent(event, props), props);\n  }\n\n  handlePointerMove(event: PointerMoveEvent, props: ModeProps<FeatureCollection>) {\n    this._handler.handlePointerMove(this._getSnapAwareEvent(event, props), props);\n  }\n}\n","import { PathLayer, PathLayerProps } from '@deck.gl/layers';\n\nimport { insertBefore } from '../utils';\n\ninterface EditablePathLayerProps extends PathLayerProps<any> {\n  pickingLineWidthExtraPixels?: number;\n}\n\nconst defaultProps = {\n  ...PathLayer.defaultProps,\n  pickingLineWidthExtraPixels: { type: 'number', min: 0, value: Number.MAX_SAFE_INTEGER },\n};\n\nexport default class EditablePathLayer extends PathLayer<any, EditablePathLayerProps> {\n  getShaders() {\n    const shaders = super.getShaders();\n\n    shaders.vs = insertBefore(\n      shaders.vs,\n      'vec3 width;',\n      `\n       if(picking_uActive){\n        widthPixels.xy += pickingLineWidthExtraPixels;\n       }\n      `\n    );\n\n    return {\n      ...shaders,\n      inject: {\n        ...(shaders.inject || {}),\n        'vs:#decl': (shaders.inject?.['vs:#decl'] || '').concat(\n          `uniform float pickingLineWidthExtraPixels;`\n        ),\n      },\n    };\n  }\n\n  draw(props) {\n    super.draw({\n      ...props,\n      uniforms: {\n        ...props.uniforms,\n        pickingLineWidthExtraPixels: this.props.pickingLineWidthExtraPixels,\n      },\n    });\n  }\n}\n\nEditablePathLayer.defaultProps = defaultProps;\nEditablePathLayer.layerName = 'EditablePathLayer';\n","/* eslint-env browser */\n\nimport { H3ClusterLayer } from '@deck.gl/geo-layers';\nimport { ViewMode } from '@nebula.gl/edit-modes';\nimport { polyfill, geoToH3 } from 'h3-js';\nimport { PROJECTED_PIXEL_SIZE_MULTIPLIER } from '../constants';\nimport EditableGeoJsonLayer from './editable-geojson-layer';\nimport EditableLayer, { EditableLayerProps } from './editable-layer';\n\nconst DEFAULT_EDIT_MODE = ViewMode;\nconst DEFAULT_H3_RESOLUTION = 9;\nconst EMPTY_FEATURE_COLLECTION = {\n  type: 'FeatureCollection',\n  features: [],\n};\n\nexport interface EditableH3ClusterLayerProps<D> extends EditableLayerProps<D> {\n  resolution?: number;\n  mode?: any;\n  modeConfig?: any;\n  selectedIndexes?: number[];\n  getEditedCluster?: (updatedHexagons: any[], existingCluster: any) => any;\n  getHexagons?: (d) => number[];\n  onEdit?: (updatedData?, editType?: string, featureIndexes?: number[], editContext?) => void;\n  filled?: boolean;\n  stroked?: boolean;\n  lineWidthScale?: number;\n  lineWidthMinPixels?: number;\n  lineWidthMaxPixels?: number;\n  lineWidthUnits?: string;\n}\n\nconst defaultProps: EditableH3ClusterLayerProps<any> = {\n  mode: DEFAULT_EDIT_MODE,\n\n  ...EditableGeoJsonLayer.defaultProps,\n\n  // h3 layer\n  data: [],\n  selectedIndexes: [],\n  filled: false,\n  stroked: true,\n  lineWidthScale: PROJECTED_PIXEL_SIZE_MULTIPLIER,\n  lineWidthMinPixels: 1,\n  lineWidthMaxPixels: Number.MAX_SAFE_INTEGER,\n  lineWidthUnits: 'pixels',\n  getHexagons: (d) => d.hexIds,\n  getEditedCluster: (updatedHexagons, existingCluster) => {\n    if (existingCluster) {\n      return {\n        ...existingCluster,\n        hexIds: updatedHexagons,\n      };\n    }\n    return {\n      hexIds: updatedHexagons,\n    };\n  },\n  resolution: DEFAULT_H3_RESOLUTION,\n};\n\nexport default class EditableH3ClusterLayer extends EditableLayer<\n  any,\n  EditableH3ClusterLayerProps<any>\n> {\n  static layerName = 'EditableH3ClusterLayer';\n  static defaultProps = defaultProps;\n\n  initializeState() {\n    super.initializeState();\n\n    this.setState({\n      tentativeHexagonIDs: [],\n    });\n  }\n\n  // convert array of (lng, lat) coords to cluster of hexes\n  getDerivedHexagonIDs(coords) {\n    return polyfill(coords, this.props.resolution, true);\n  }\n\n  // convert pair of (lng, lat) coords into single hex\n  getDerivedHexagonID(coords) {\n    return geoToH3(coords[1], coords[0], this.props.resolution);\n  }\n\n  renderLayers() {\n    const layers: any = [\n      new EditableGeoJsonLayer(\n        this.getSubLayerProps({\n          id: 'editable-geojson',\n\n          mode: this.props.mode,\n          data: EMPTY_FEATURE_COLLECTION,\n          selectedFeatureIndexes: [],\n\n          onEdit: (editAction) => {\n            const { editType, editContext } = editAction;\n\n            switch (editType) {\n              case 'updateTentativeFeature':\n                // tentative feature updates, updated on every pointer move\n                if (editContext.feature.geometry.type === 'Polygon') {\n                  const coords = editContext.feature.geometry.coordinates;\n                  const hexIDs = this.getDerivedHexagonIDs(coords);\n\n                  this.setState({ tentativeHexagonIDs: hexIDs });\n                } else if (editContext.feature.geometry.type === 'Point') {\n                  const coords = editContext.feature.geometry.coordinates;\n                  const hexID = this.getDerivedHexagonID(coords);\n\n                  this.setState({ tentativeHexagonIDs: [hexID] });\n                }\n                break;\n              case 'addFeature':\n                const updatedData = [...this.props.data];\n                const { modeConfig } = this.props;\n\n                if (!modeConfig || !modeConfig.booleanOperation) {\n                  // add new h3 cluster\n                  updatedData.push(\n                    this.props.getEditedCluster(this.state.tentativeHexagonIDs, null)\n                  );\n                } else if (this.props.selectedIndexes.length !== 1) {\n                  // eslint-disable-next-line no-console,no-undef\n                  console.warn('booleanOperation only supported for single cluster selection');\n                } else {\n                  // they're affecting a selected cluster\n                  let finalHexagonIDs;\n                  const committedHexagonIDs = new Set(this.getSelectedHexIDs());\n                  const tentativeHexagonIDs = new Set(this.state.tentativeHexagonIDs);\n\n                  switch (modeConfig.booleanOperation) {\n                    case 'union':\n                    default:\n                      finalHexagonIDs = [\n                        ...new Set([...committedHexagonIDs, ...tentativeHexagonIDs]),\n                      ];\n                      break;\n                    case 'intersection':\n                      finalHexagonIDs = [...committedHexagonIDs].filter((hexID: string) =>\n                        tentativeHexagonIDs.has(hexID)\n                      );\n                      break;\n                    case 'difference':\n                      finalHexagonIDs = [...committedHexagonIDs].filter(\n                        (hexID: string) => !tentativeHexagonIDs.has(hexID)\n                      );\n                      break;\n                  }\n\n                  const selectedIndex = this.props.selectedIndexes[0];\n                  const existingCluster = this.props.data[selectedIndex];\n                  updatedData[selectedIndex] = this.props.getEditedCluster(\n                    finalHexagonIDs,\n                    existingCluster\n                  );\n                }\n\n                this.setState({\n                  tentativeHexagonIDs: [],\n                });\n\n                this.props.onEdit({ updatedData });\n\n                break;\n              default:\n                break;\n            }\n          },\n        })\n      ),\n\n      new H3ClusterLayer(\n        this.getSubLayerProps({\n          id: 'hexagons',\n          data: this.props.data,\n          getHexagons: this.props.getHexagons,\n        })\n      ),\n      new H3ClusterLayer(\n        this.getSubLayerProps({\n          id: 'tentative-hexagons',\n          data: [\n            {\n              hexIds: this.state.tentativeHexagonIDs,\n            },\n          ],\n          getHexagons: (d) => d.hexIds,\n        })\n      ),\n    ];\n    return layers;\n  }\n\n  // because data is an array of hexagon data, we take the cumulative of all selected indexes,\n  // using props.getHexagons to support multiple data types\n  getSelectedHexIDs() {\n    let cumulativeHexIDs = [];\n    this.props.selectedIndexes.forEach((index) => {\n      const selectedCluster = this.props.data[index];\n      const hexIDs = this.props.getHexagons(selectedCluster);\n      cumulativeHexIDs = cumulativeHexIDs.concat(hexIDs);\n    });\n    return cumulativeHexIDs;\n  }\n\n  getCursor({ isDragging }: { isDragging: boolean }) {\n    let { cursor } = this.state || {};\n    if (!cursor) {\n      // default cursor\n      cursor = isDragging ? 'grabbing' : 'grab';\n    }\n    return cursor;\n  }\n}\n","/* eslint-env browser */\n\nimport { CompositeLayer } from '@deck.gl/core';\nimport { PolygonLayer } from '@deck.gl/layers';\nimport { CompositeLayerProps } from '@deck.gl/core/lib/composite-layer';\nimport { polygon } from '@turf/helpers';\nimport turfBuffer from '@turf/buffer';\nimport turfDifference from '@turf/difference';\nimport { DrawRectangleMode, DrawPolygonMode, ViewMode } from '@nebula.gl/edit-modes';\n\nimport EditableGeoJsonLayer from './editable-geojson-layer';\n\nexport const SELECTION_TYPE = {\n  NONE: null,\n  RECTANGLE: 'rectangle',\n  POLYGON: 'polygon',\n};\n\nconst MODE_MAP = {\n  [SELECTION_TYPE.RECTANGLE]: DrawRectangleMode,\n  [SELECTION_TYPE.POLYGON]: DrawPolygonMode,\n};\n\nconst MODE_CONFIG_MAP = {\n  [SELECTION_TYPE.RECTANGLE]: { dragToDraw: true },\n};\n\ninterface SelectionLayerProps extends CompositeLayerProps<any> {\n  layerIds: any[];\n  onSelect: (info: any) => any;\n  selectionType: string | null;\n}\n\nconst defaultProps: SelectionLayerProps = {\n  selectionType: SELECTION_TYPE.RECTANGLE,\n  layerIds: [],\n  onSelect: () => {},\n};\n\nconst EMPTY_DATA = {\n  type: 'FeatureCollection',\n  features: [],\n};\n\nconst EXPANSION_KM = 50;\nconst LAYER_ID_GEOJSON = 'selection-geojson';\nconst LAYER_ID_BLOCKER = 'selection-blocker';\n\nconst PASS_THROUGH_PROPS = [\n  'lineWidthScale',\n  'lineWidthMinPixels',\n  'lineWidthMaxPixels',\n  'lineWidthUnits',\n  'lineJointRounded',\n  'lineCapRounded',\n  'lineMiterLimit',\n  'pointRadiusScale',\n  'pointRadiusMinPixels',\n  'pointRadiusMaxPixels',\n  'lineDashJustified',\n  'getLineColor',\n  'getFillColor',\n  'getRadius',\n  'getLineWidth',\n  'getLineDashArray',\n  'getTentativeLineDashArray',\n  'getTentativeLineColor',\n  'getTentativeFillColor',\n  'getTentativeLineWidth',\n];\nexport default class SelectionLayer<\n  D,\n  P extends SelectionLayerProps = SelectionLayerProps\n> extends CompositeLayer<D, P> {\n  static layerName = 'SelectionLayer';\n  static defaultProps = defaultProps;\n\n  _selectRectangleObjects(coordinates: any) {\n    const { layerIds, onSelect } = this.props;\n    // @ts-ignore\n    const [x1, y1] = this.context.viewport.project(coordinates[0][0]);\n    // @ts-ignore\n    const [x2, y2] = this.context.viewport.project(coordinates[0][2]);\n    // @ts-ignore\n    const pickingInfos = this.context.deck.pickObjects({\n      x: Math.min(x1, x2),\n      y: Math.min(y1, y2),\n      width: Math.abs(x2 - x1),\n      height: Math.abs(y2 - y1),\n      layerIds,\n    });\n\n    onSelect({ pickingInfos });\n  }\n\n  _selectPolygonObjects(coordinates: any) {\n    const { layerIds, onSelect } = this.props;\n    // @ts-ignore\n    const mousePoints = coordinates[0].map((c) => this.context.viewport.project(c));\n\n    const allX = mousePoints.map((mousePoint) => mousePoint[0]);\n    const allY = mousePoints.map((mousePoint) => mousePoint[1]);\n    const x = Math.min(...allX);\n    const y = Math.min(...allY);\n    const maxX = Math.max(...allX);\n    const maxY = Math.max(...allY);\n\n    // Use a polygon to hide the outside, because pickObjects()\n    // does not support polygons\n    const landPointsPoly = polygon(coordinates);\n    const bigBuffer = turfBuffer(landPointsPoly, EXPANSION_KM);\n    let bigPolygon;\n    try {\n      // turfDifference throws an exception if the polygon\n      // intersects with itself (TODO: check if true in all versions)\n      bigPolygon = turfDifference(bigBuffer, landPointsPoly);\n    } catch (e) {\n      // invalid selection polygon\n      console.log('turfDifference() error', e); // eslint-disable-line\n      return;\n    }\n\n    this.setState({\n      pendingPolygonSelection: {\n        bigPolygon,\n      },\n    });\n\n    const blockerId = `${this.props.id}-${LAYER_ID_BLOCKER}`;\n\n    // HACK, find a better way\n    setTimeout(() => {\n      // @ts-ignore\n      const pickingInfos = this.context.deck.pickObjects({\n        x,\n        y,\n        width: maxX - x,\n        height: maxY - y,\n        layerIds: [blockerId, ...layerIds],\n      });\n\n      onSelect({\n        pickingInfos: pickingInfos.filter((item) => item.layer.id !== this.props.id),\n      });\n    }, 250);\n  }\n\n  renderLayers() {\n    const { pendingPolygonSelection } = this.state;\n\n    const mode = MODE_MAP[this.props.selectionType] || ViewMode;\n    const modeConfig = MODE_CONFIG_MAP[this.props.selectionType];\n\n    const inheritedProps = {};\n    PASS_THROUGH_PROPS.forEach((p) => {\n      if (this.props[p] !== undefined) inheritedProps[p] = this.props[p];\n    });\n\n    const layers = [\n      new EditableGeoJsonLayer(\n        this.getSubLayerProps({\n          id: LAYER_ID_GEOJSON,\n          pickable: true,\n          mode,\n          modeConfig,\n          selectedFeatureIndexes: [],\n          data: EMPTY_DATA,\n          onEdit: ({ updatedData, editType }) => {\n            if (editType === 'addFeature') {\n              const { coordinates } = updatedData.features[0].geometry;\n\n              if (this.props.selectionType === SELECTION_TYPE.RECTANGLE) {\n                this._selectRectangleObjects(coordinates);\n              } else if (this.props.selectionType === SELECTION_TYPE.POLYGON) {\n                this._selectPolygonObjects(coordinates);\n              }\n            }\n          },\n          ...inheritedProps,\n        })\n      ),\n    ];\n\n    if (pendingPolygonSelection) {\n      const { bigPolygon } = pendingPolygonSelection;\n      layers.push(\n        // @ts-ignore\n        new PolygonLayer(\n          // @ts-ignore\n          this.getSubLayerProps({\n            id: LAYER_ID_BLOCKER,\n            pickable: true,\n            stroked: false,\n            opacity: 1.0,\n            data: [bigPolygon],\n            getLineColor: (obj) => [0, 0, 0, 1],\n            getFillColor: (obj) => [0, 0, 0, 1],\n            getPolygon: (o) => o.geometry.coordinates,\n          })\n        )\n      );\n    }\n\n    return layers;\n  }\n\n  shouldUpdateState({ changeFlags: { stateChanged, propsOrDataChanged } }: Record<string, any>) {\n    return stateChanged || propsOrDataChanged;\n  }\n}\n","/* eslint-env browser */\n\nimport { CompositeLayer } from '@deck.gl/core';\nimport { ScatterplotLayer, LineLayer } from '@deck.gl/layers';\n\nconst defaultProps = {};\n\nexport default class ElevatedEditHandleLayer extends CompositeLayer<any> {\n  static layerName = 'ElevatedEditHandleLayer';\n  static defaultProps = defaultProps;\n  renderLayers() {\n    const handles = new ScatterplotLayer(\n      Object.assign({}, this.props, {\n        id: `${this.props.id}-ScatterplotLayer`,\n        data: this.props.data,\n      })\n    );\n\n    const lines = new LineLayer(\n      Object.assign({}, this.props, {\n        id: `${this.props.id}-LineLayer`,\n        data: this.props.data,\n        pickable: false,\n        getSourcePosition: ({ position }) => [position[0], position[1], 0],\n        getTargetPosition: ({ position }) => [position[0], position[1], position[2] || 0],\n        getColor: [150, 150, 150, 200],\n        getStrokeWidth: 3,\n      })\n    );\n\n    return [handles, lines];\n  }\n}\n","/* eslint-disable camelcase */\nconst INITIAL_STATE: Record<string, any> = {\n  outlineEnabled: false,\n  outlineRenderShadowmap: false,\n  outlineShadowmap: null,\n};\n\nfunction getUniforms({ outlineEnabled, outlineRenderShadowmap, outlineShadowmap } = INITIAL_STATE) {\n  const uniforms: Record<string, any> = {};\n  if (outlineEnabled !== undefined) {\n    // ? 1.0 : 0.0;\n    uniforms.outline_uEnabled = outlineEnabled;\n  }\n  if (outlineRenderShadowmap !== undefined) {\n    // ? 1.0 : 0.0;\n    uniforms.outline_uRenderOutlines = outlineRenderShadowmap;\n  }\n  if (outlineShadowmap !== undefined) {\n    uniforms.outline_uShadowmap = outlineShadowmap;\n  }\n  return uniforms;\n}\n\nconst vs = `\\\nattribute float instanceZLevel;\nvarying float outline_vzLevel;\nvarying vec4 outline_vPosition;\n\n// Set the z level for the outline shadowmap rendering\nvoid outline_setZLevel(float zLevel) {\n  outline_vzLevel = zLevel;\n}\n\n// Store an adjusted position for texture2DProj\nvoid outline_setUV(vec4 position) {\n  // mat4(\n  //   0.5, 0.0, 0.0, 0.0,\n  //   0.0, 0.5, 0.0, 0.0,\n  //   0.0, 0.0, 0.5, 0.0,\n  //   0.5, 0.5, 0.5, 1.0\n  // ) * position;\n  outline_vPosition = vec4(position.xyz * 0.5 + position.w * 0.5, position.w);\n}\n`;\n\nconst fs = `\\\nuniform bool outline_uEnabled;\nuniform bool outline_uRenderOutlines;\nuniform sampler2D outline_uShadowmap;\n\nvarying float outline_vzLevel;\n// varying vec2 outline_vUV;\nvarying vec4 outline_vPosition;\n\nconst float OUTLINE_Z_LEVEL_ERROR = 0.01;\n\n// Return a darker color in shadowmap\nvec4 outline_filterShadowColor(vec4 color) {\n  return vec4(outline_vzLevel / 255., outline_vzLevel / 255., outline_vzLevel / 255., 1.);\n}\n\n// Return a darker color if in shadowmap\nvec4 outline_filterDarkenColor(vec4 color) {\n  if (outline_uEnabled) {\n    float maxZLevel;\n    if (outline_vPosition.q > 0.0) {\n      maxZLevel = texture2DProj(outline_uShadowmap, outline_vPosition).r * 255.;\n    } else {\n      discard;\n    }\n    if (maxZLevel < outline_vzLevel + OUTLINE_Z_LEVEL_ERROR) {\n      vec4(color.rgb * 0.5, color.a);\n    } else {\n      discard;\n    }\n  }\n  return color;\n}\n\n// if enabled and rendering outlines - Render depth to shadowmap\n// if enabled and rendering colors - Return a darker color if in shadowmap\n// if disabled, just return color\nvec4 outline_filterColor(vec4 color) {\n  if (outline_uEnabled) {\n    return outline_uRenderOutlines ?\n      outline_filterShadowColor(color) :\n      outline_filterDarkenColor(color);\n  }\n  return color;\n}\n`;\n\nexport default {\n  name: 'outline',\n  vs,\n  fs,\n  getUniforms,\n};\n","import { CompositeLayer, COORDINATE_SYSTEM } from '@deck.gl/core';\nimport { ScatterplotLayer } from '@deck.gl/layers';\nimport { SimpleMeshLayer } from '@deck.gl/mesh-layers';\nimport PathOutlineLayer, { PathOutlineLayerProps } from '../path-outline-layer/path-outline-layer';\nimport Arrow2DGeometry from './arrow-2d-geometry';\n\nimport createPathMarkers from './create-path-markers';\nimport { getClosestPointOnPolyline } from './polyline';\n\nconst DISTANCE_FOR_MULTI_ARROWS = 0.1;\nconst ARROW_HEAD_SIZE = 0.2;\nconst ARROW_TAIL_WIDTH = 0.05;\n// const ARROW_CENTER_ADJUST = -0.8;\n\nconst DEFAULT_MARKER_LAYER = SimpleMeshLayer;\n\nexport interface PathMarkerLayerProps<D> extends PathOutlineLayerProps<D> {\n  getDirection?: (x) => any;\n  getMarkerColor?: (x) => number[];\n  getMarkerPercentages?: (x: any, info: any) => number[];\n  highlightPoint?: any;\n  highlightIndex?: number;\n  MarkerLayer?: any;\n  markerLayerProps?: any;\n  sizeScale?: number;\n  fp64?: boolean;\n  nebulaLayer?: any;\n}\n\nconst DEFAULT_MARKER_LAYER_PROPS = {\n  mesh: new Arrow2DGeometry({ headSize: ARROW_HEAD_SIZE, tailWidth: ARROW_TAIL_WIDTH }),\n};\n\nconst defaultProps: PathMarkerLayerProps<any> = Object.assign({}, PathOutlineLayer.defaultProps, {\n  MarkerLayer: DEFAULT_MARKER_LAYER,\n  markerLayerProps: DEFAULT_MARKER_LAYER_PROPS,\n\n  sizeScale: 100,\n  fp64: false,\n\n  highlightIndex: -1,\n  highlightPoint: null,\n\n  getPath: (x) => x.path,\n  getColor: (x) => x.color,\n  getMarkerColor: (x) => [0, 0, 0, 255],\n  getDirection: (x) => x.direction,\n  getMarkerPercentages: (object, { lineLength }) =>\n    lineLength > DISTANCE_FOR_MULTI_ARROWS ? [0.25, 0.5, 0.75] : [0.5],\n});\n\nexport default class PathMarkerLayer extends CompositeLayer<any, PathMarkerLayerProps<any>> {\n  static layerName = 'PathMarkerLayer';\n  static defaultProps = defaultProps;\n\n  initializeState() {\n    this.state = {\n      markers: [],\n      mesh: new Arrow2DGeometry({ headSize: ARROW_HEAD_SIZE, tailWidth: ARROW_TAIL_WIDTH }),\n      closestPoint: null,\n    };\n  }\n  // @ts-ignore\n  projectFlat(xyz, viewport, coordinateSystem, coordinateOrigin) {\n    if (coordinateSystem === COORDINATE_SYSTEM.METER_OFFSETS) {\n      const [dx, dy] = viewport.metersToLngLatDelta(xyz);\n      const [x, y] = coordinateOrigin;\n      return viewport.projectFlat([x + dx, dy + y]);\n    } else if (coordinateSystem === COORDINATE_SYSTEM.LNGLAT_OFFSETS) {\n      const [dx, dy] = xyz;\n      const [x, y] = coordinateOrigin;\n      return viewport.projectFlat([x + dx, dy + y]);\n    }\n\n    return viewport.projectFlat(xyz);\n  }\n\n  updateState({ props, oldProps, changeFlags }) {\n    if (changeFlags.dataChanged || changeFlags.updateTriggersChanged) {\n      const {\n        data,\n        getPath,\n        getDirection,\n        getMarkerColor,\n        getMarkerPercentages,\n        coordinateSystem,\n        coordinateOrigin,\n      } = this.props;\n      // @ts-ignore\n      const { viewport } = this.context;\n      const projectFlat = (o) => this.projectFlat(o, viewport, coordinateSystem, coordinateOrigin);\n      this.state.markers = createPathMarkers({\n        data,\n        getPath,\n        getDirection,\n        getColor: getMarkerColor,\n        getMarkerPercentages,\n        projectFlat,\n      });\n      this._recalculateClosestPoint();\n    }\n    if (changeFlags.propsChanged) {\n      if (props.point !== oldProps.point) {\n        this._recalculateClosestPoint();\n      }\n    }\n  }\n\n  _recalculateClosestPoint() {\n    const { highlightPoint, highlightIndex } = this.props;\n    if (highlightPoint && highlightIndex >= 0) {\n      const object = this.props.data[highlightIndex];\n      const points = this.props.getPath(object);\n      const { point } = getClosestPointOnPolyline({ points, p: highlightPoint });\n      this.state.closestPoints = [\n        {\n          position: point,\n        },\n      ];\n    } else {\n      this.state.closestPoints = [];\n    }\n  }\n\n  getPickingInfo({ info }) {\n    return Object.assign(info, {\n      // override object with picked feature\n      object: (info.object && info.object.path) || info.object,\n    });\n  }\n\n  renderLayers() {\n    return [\n      new PathOutlineLayer(\n        this.props,\n        // @ts-ignore\n        this.getSubLayerProps({\n          id: 'paths',\n          // Note: data has to be passed explicitly like this to avoid being empty\n          data: this.props.data,\n        })\n      ),\n      new this.props.MarkerLayer(\n        this.getSubLayerProps(\n          Object.assign({}, this.props.markerLayerProps, {\n            id: 'markers',\n            data: this.state.markers,\n            getOrientation: (x) => [0, -x.angle, 0],\n            getColor: (x) => x.color,\n            sizeScale: this.props.sizeScale,\n            fp64: this.props.fp64,\n            pickable: false,\n            parameters: {\n              blend: false,\n              depthTest: false,\n            },\n          })\n        )\n      ),\n      this.state.closestPoints &&\n        new ScatterplotLayer({\n          id: `${this.props.id}-highlight`,\n          data: this.state.closestPoints,\n          // @ts-ignore\n          fp64: this.props.fp64,\n        }),\n    ];\n  }\n}\n","import { Geometry } from '@luma.gl/core';\n\nexport default class Arrow2DGeometry extends Geometry {\n  constructor(opts = {}) {\n    super(\n      Object.assign({}, opts, {\n        attributes: getArrowAttributes(opts),\n      })\n    );\n  }\n}\n\nfunction getArrowAttributes({ length = 1, headSize = 0.2, tailWidth = 0.05, tailStart = 0.05 }) {\n  const texCoords = [\n    // HEAD\n    0.5,\n    1.0,\n    0,\n    0.5 - headSize / 2,\n    1.0 - headSize,\n    0,\n    0.5 + headSize / 2,\n    1.0 - headSize,\n    0,\n    0.5 - tailWidth / 2,\n    tailStart,\n    0,\n    0.5 + tailWidth / 2,\n    1.0 - headSize,\n    0,\n    0.5 + tailWidth / 2,\n    tailStart,\n    0,\n    0.5 - tailWidth / 2,\n    tailStart,\n    0,\n    0.5 - tailWidth / 2,\n    1.0 - headSize,\n    0,\n    0.5 + tailWidth / 2,\n    1.0 - headSize,\n    0,\n  ];\n\n  const normals = [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1];\n\n  // Center and scale\n  const positions = new Array(texCoords.length);\n  for (let i = 0; i < texCoords.length / 3; i++) {\n    const i3 = i * 3;\n    positions[i3 + 0] = (texCoords[i3 + 0] - 0.5) * length;\n    positions[i3 + 1] = (texCoords[i3 + 1] - 0.5) * length;\n    positions[i3 + 2] = 0;\n  }\n  return {\n    positions: new Float32Array(positions),\n    normals: new Float32Array(normals),\n    texCoords: new Float32Array(texCoords),\n  };\n}\n","import { Vector2 } from 'math.gl';\n\nfunction getLineLength(vPoints) {\n  // calculate total length\n  let lineLength = 0;\n  for (let i = 0; i < vPoints.length - 1; i++) {\n    lineLength += vPoints[i].distance(vPoints[i + 1]);\n  }\n  return lineLength;\n}\n\nconst DEFAULT_COLOR = [0, 0, 0, 255];\nconst DEFAULT_DIRECTION = { forward: true, backward: false };\n\nexport default function createPathMarkers({\n  data,\n  getPath = (x) => x.path,\n  getDirection = (x) => x.direction,\n  getColor = (x) => DEFAULT_COLOR,\n  getMarkerPercentages = (x, info) => [0.5],\n  projectFlat,\n}) {\n  const markers = [];\n\n  for (const object of data) {\n    const path = getPath(object);\n    const direction = getDirection(object) || DEFAULT_DIRECTION;\n    const color = getColor(object);\n\n    const vPoints = path.map((p) => new Vector2(p));\n    const vPointsReverse = vPoints.slice(0).reverse();\n\n    // calculate total length\n    const lineLength = getLineLength(vPoints);\n\n    // Ask for where to put markers\n    // @ts-ignore\n    const percentages = getMarkerPercentages(object, { lineLength });\n\n    // Create the markers\n    for (const percentage of percentages) {\n      if (direction.forward) {\n        const marker = createMarkerAlongPath({\n          path: vPoints,\n          percentage,\n          lineLength,\n          color,\n          object,\n          projectFlat,\n        });\n        markers.push(marker);\n      }\n\n      if (direction.backward) {\n        const marker = createMarkerAlongPath({\n          path: vPointsReverse,\n          percentage,\n          lineLength,\n          color,\n          object,\n          projectFlat,\n        });\n        markers.push(marker);\n      }\n    }\n  }\n\n  return markers;\n}\n\nfunction createMarkerAlongPath({ path, percentage, lineLength, color, object, projectFlat }) {\n  const distanceAlong = lineLength * percentage;\n  let currentDistance = 0;\n  let previousDistance = 0;\n\n  for (let i = 0; i < path.length - 1; i++) {\n    currentDistance += path[i].distance(path[i + 1]);\n    if (currentDistance > distanceAlong) {\n      break;\n    }\n    previousDistance = currentDistance;\n  }\n\n  const lastPoint = path[path.length - 1];\n  const beforeLastPoint = path[path.length - 2];\n\n  const vDirection = lastPoint.clone().subtract(beforeLastPoint).normalize();\n  const along = distanceAlong - previousDistance;\n  const vCenter = vDirection.clone().multiply(new Vector2(along, along)).add(beforeLastPoint);\n\n  const vDirection2 = new Vector2(projectFlat(lastPoint)).subtract(projectFlat(beforeLastPoint));\n\n  const angle = (vDirection2.verticalAngle() * 180) / Math.PI;\n\n  return { position: [vCenter.x, vCenter.y, 0], angle, color, object };\n}\n","import { Vector3, clamp } from 'math.gl';\n\n// Return the closest point on a line segment\nexport function getClosestPointOnLine({ p, p1, p2, clampToLine = true }) {\n  const lineVector = new Vector3(p2).subtract(p1);\n  const pointVector = new Vector3(p).subtract(p1);\n  let dotProduct = lineVector.dot(pointVector);\n  if (clampToLine) {\n    dotProduct = clamp(dotProduct, 0, 1);\n  }\n  // @ts-ignore\n  return lineVector.lerp(dotProduct);\n}\n\n// Return the closest point on a line segment\nexport function getClosestPointOnPolyline({ p, points }) {\n  p = new Vector3(p);\n  let pClosest = null;\n  let distanceSquared = Infinity;\n  let index = -1;\n  for (let i = 0; i < points.length - 1; ++i) {\n    const p1 = points[i];\n    const p2 = points[i + 1];\n    const pClosestOnLine = getClosestPointOnLine({ p, p1, p2 });\n    const distanceToLineSquared = p.distanceSquared(pClosestOnLine);\n    if (distanceToLineSquared < distanceSquared) {\n      distanceSquared = distanceToLineSquared;\n      pClosest = pClosestOnLine;\n      index = i;\n    }\n  }\n  return {\n    point: pClosest,\n    index,\n    p1: points[index],\n    p2: points[index + 1],\n    distanceSquared,\n    distance: Math.sqrt(distanceSquared),\n  };\n}\n","import { CompositeLayer, RGBAColor } from '@deck.gl/core';\nimport { ScatterplotLayer } from '@deck.gl/layers';\nimport { CompositeLayerProps } from '@deck.gl/core/lib/composite-layer';\n\ninterface JunctionScatterplotLayerProps extends CompositeLayerProps<any> {\n  getFillColor?: RGBAColor | ((d) => RGBAColor);\n  getStrokeColor?: RGBAColor | ((d) => RGBAColor);\n  getInnerRadius?: number | ((d) => number);\n}\n\nexport default class JunctionScatterplotLayer extends CompositeLayer<\n  any,\n  JunctionScatterplotLayerProps\n> {\n  static layerName = 'JunctionScatterplotLayer';\n  static defaultProps: JunctionScatterplotLayerProps = {\n    ...ScatterplotLayer.defaultProps,\n    getFillColor: (d) => [0, 0, 0, 255],\n    getStrokeColor: (d) => [255, 255, 255, 255],\n    getInnerRadius: (d) => 1,\n  };\n\n  renderLayers() {\n    const { id, getFillColor, getStrokeColor, getInnerRadius, updateTriggers } = this.props;\n\n    // data needs to be passed explicitly after deck.gl 5.3\n    return [\n      // the full circles\n      new ScatterplotLayer({\n        ...this.props,\n        id: `${id}-full`,\n        data: this.props.data,\n        getLineColor: getStrokeColor,\n        updateTriggers: {\n          ...updateTriggers,\n          getStrokeColor: updateTriggers.getStrokeColor,\n        },\n      }), // the inner part\n      new ScatterplotLayer({\n        ...this.props,\n        id: `${id}-inner`,\n        data: this.props.data,\n        getFillColor,\n        getRadius: getInnerRadius,\n        pickable: false,\n        updateTriggers: {\n          ...updateTriggers,\n          getFillColor: updateTriggers.getFillColor,\n          getRadius: updateTriggers.getInnerRadius,\n        },\n      }),\n    ];\n  }\n}\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport assert from './assert';\n\nconst RADIANS_TO_DEGREES = (1 / Math.PI) * 180;\nconst DEGREES_TO_RADIANS = (1 / 180) * Math.PI;\n\n// TODO - remove\n/* eslint-disable no-shadow */\nconst config = {};\nconfig.EPSILON = 1e-12;\nconfig.debug = false;\nconfig.precision = 4;\nconfig.printTypes = false;\nconfig.printDegrees = false;\nconfig.printRowMajor = true;\n\nexport {config};\n\nexport function configure(options = {}) {\n  // Only copy existing keys\n  for (const key in options) {\n    assert(key in config);\n    config[key] = options[key];\n  }\n  return config;\n}\n\nfunction round(value) {\n  return Math.round(value / config.EPSILON) * config.EPSILON;\n}\n\nexport function formatValue(value, {precision = config.precision || 4} = {}) {\n  value = round(value);\n  // get rid of trailing zeros\n  return `${parseFloat(value.toPrecision(precision))}`;\n}\n\n// Returns true if value is either an array or a typed array\n// Note: does not return true for ArrayBuffers and DataViews\nexport function isArray(value) {\n  return Array.isArray(value) || (ArrayBuffer.isView(value) && !(value instanceof DataView));\n}\n\n// If the array has a clone function, calls it, otherwise returns a copy\nfunction duplicateArray(array) {\n  return array.clone ? array.clone() : new Array(array.length);\n}\n\nexport function clone(array) {\n  return array.clone ? array.clone() : new Array(...array);\n}\n\n// If the argument value is an array, applies the func element wise,\n// otherwise applies func to the argument value\nfunction map(value, func, result) {\n  if (isArray(value)) {\n    result = result || duplicateArray(value);\n    for (let i = 0; i < result.length && i < value.length; ++i) {\n      result[i] = func(value[i], i, result);\n    }\n    return result;\n  }\n  return func(value);\n}\n\nexport function toRadians(degrees) {\n  return radians(degrees);\n}\n\nexport function toDegrees(radians) {\n  return degrees(radians);\n}\n\n//\n// GLSL math function equivalents\n// Works on both single values and vectors\n//\n\nexport function radians(degrees, result) {\n  return map(degrees, (degrees) => degrees * DEGREES_TO_RADIANS, result);\n}\n\nexport function degrees(radians, result) {\n  return map(radians, (radians) => radians * RADIANS_TO_DEGREES, result);\n}\n\n// GLSL equivalent: Works on single values and vectors\nexport function sin(radians) {\n  return map(radians, (angle) => Math.sin(angle));\n}\n\n// GLSL equivalent: Works on single values and vectors\nexport function cos(radians) {\n  return map(radians, (angle) => Math.cos(angle));\n}\n\n// GLSL equivalent: Works on single values and vectors\nexport function tan(radians) {\n  return map(radians, (angle) => Math.tan(angle));\n}\n\n// GLSL equivalent: Works on single values and vectors\nexport function asin(radians) {\n  return map(radians, (angle) => Math.asin(angle));\n}\n\n// GLSL equivalent: Works on single values and vectors\nexport function acos(radians) {\n  return map(radians, (angle) => Math.acos(angle));\n}\n\n// GLSL equivalent: Works on single values and vectors\nexport function atan(radians) {\n  return map(radians, (angle) => Math.atan(angle));\n}\n\nexport function clamp(value, min, max) {\n  return map(value, (value) => Math.max(min, Math.min(max, value)));\n}\n\n// Interpolate between two numbers or two arrays\nexport function lerp(a, b, t) {\n  if (isArray(a)) {\n    return a.map((ai, i) => lerp(ai, b[i], t));\n  }\n  return t * b + (1 - t) * a;\n}\n\n// eslint-disable-next-line complexity\nexport function equals(a, b, epsilon) {\n  const oldEpsilon = config.EPSILON;\n  if (epsilon) {\n    config.EPSILON = epsilon;\n  }\n  try {\n    if (a === b) {\n      return true;\n    }\n    if (isArray(a) && isArray(b)) {\n      if (a.length !== b.length) {\n        return false;\n      }\n      for (let i = 0; i < a.length; ++i) {\n        // eslint-disable-next-line max-depth\n        if (!equals(a[i], b[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a && a.equals) {\n      return a.equals(b);\n    }\n    if (b && b.equals) {\n      return b.equals(a);\n    }\n    if (Number.isFinite(a) && Number.isFinite(b)) {\n      return Math.abs(a - b) <= config.EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n    }\n    return false;\n  } finally {\n    config.EPSILON = oldEpsilon;\n  }\n}\n\n// eslint-disable-next-line complexity\nexport function exactEquals(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (a && typeof a === 'object' && b && typeof b === 'object') {\n    if (a.constructor !== b.constructor) {\n      return false;\n    }\n    if (a.exactEquals) {\n      return a.exactEquals(b);\n    }\n  }\n  if (isArray(a) && isArray(b)) {\n    if (a.length !== b.length) {\n      return false;\n    }\n    for (let i = 0; i < a.length; ++i) {\n      if (!exactEquals(a[i], b[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return false;\n}\n\nexport function withEpsilon(EPSILON, func) {\n  const oldPrecision = config.EPSILON;\n  config.EPSILON = EPSILON;\n  let value;\n  try {\n    value = func();\n  } finally {\n    config.EPSILON = oldPrecision;\n  }\n  return value;\n}\n","import destination from '@turf/destination';\nimport bearing from '@turf/bearing';\nimport pointToLineDistance from '@turf/point-to-line-distance';\nimport { flattenEach } from '@turf/meta';\nimport { point, MultiLineString } from '@turf/helpers';\nimport { getCoords } from '@turf/invariant';\nimport WebMercatorViewport from 'viewport-mercator-project';\nimport { Viewport, Pick, EditHandleFeature, EditHandleType } from './types';\nimport {\n  Geometry,\n  Position,\n  Point,\n  LineString,\n  Polygon,\n  FeatureOf,\n  FeatureWithProps,\n  AnyCoordinates,\n} from './geojson-types';\n\nexport type NearestPointType = FeatureWithProps<Point, { dist: number; index: number }>;\n\nexport function toDeckColor(\n  color?: [number, number, number, number] | number,\n  defaultColor: [number, number, number, number] = [255, 0, 0, 255]\n): [number, number, number, number] {\n  if (!Array.isArray(color)) {\n    return defaultColor;\n  }\n  return [color[0] * 255, color[1] * 255, color[2] * 255, color[3] * 255];\n}\n\n//\n// a GeoJSON helper function that calls the provided function with\n// an argument that is the most deeply-nested array having elements\n// that are arrays of primitives as an argument, e.g.\n//\n// {\n//   \"type\": \"MultiPolygon\",\n//   \"coordinates\": [\n//       [\n//           [[30, 20], [45, 40], [10, 40], [30, 20]]\n//       ],\n//       [\n//           [[15, 5], [40, 10], [10, 20], [5, 10], [15, 5]]\n//       ]\n//   ]\n// }\n//\n// the function would be called on:\n//\n// [[30, 20], [45, 40], [10, 40], [30, 20]]\n//\n// and\n//\n// [[15, 5], [40, 10], [10, 20], [5, 10], [15, 5]]\n//\nexport function recursivelyTraverseNestedArrays(\n  array: Array<any>,\n  prefix: Array<number>,\n  fn: Function\n) {\n  if (!Array.isArray(array[0])) {\n    return true;\n  }\n  for (let i = 0; i < array.length; i++) {\n    if (recursivelyTraverseNestedArrays(array[i], [...prefix, i], fn)) {\n      fn(array, prefix);\n      break;\n    }\n  }\n  return false;\n}\n\nexport function generatePointsParallelToLinePoints(\n  p1: Position,\n  p2: Position,\n  mapCoords: Position\n): Position[] {\n  const lineString: LineString = {\n    type: 'LineString',\n    coordinates: [p1, p2],\n  };\n  const pt = point(mapCoords);\n  const ddistance = pointToLineDistance(pt, lineString);\n  const lineBearing = bearing(p1, p2);\n\n  // Check if current point is to the left or right of line\n  // Line from A=(x1,y1) to B=(x2,y2) a point P=(x,y)\n  // then (x−x1)(y2−y1)−(y−y1)(x2−x1)\n  const isPointToLeftOfLine =\n    (mapCoords[0] - p1[0]) * (p2[1] - p1[1]) - (mapCoords[1] - p1[1]) * (p2[0] - p1[0]);\n\n  // Bearing to draw perpendicular to the line string\n  const orthogonalBearing = isPointToLeftOfLine < 0 ? lineBearing - 90 : lineBearing - 270;\n\n  // Get coordinates for the point p3 and p4 which are perpendicular to the lineString\n  // Add the distance as the current position moves away from the lineString\n  const p3 = destination(p2, ddistance, orthogonalBearing);\n  const p4 = destination(p1, ddistance, orthogonalBearing);\n\n  return [p3.geometry.coordinates, p4.geometry.coordinates] as Position[];\n}\n\nexport function distance2d(x1: number, y1: number, x2: number, y2: number): number {\n  const dx = x1 - x2;\n  const dy = y1 - y2;\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nexport function mix(a: number, b: number, ratio: number): number {\n  return b * ratio + a * (1 - ratio);\n}\n\nexport function nearestPointOnProjectedLine(\n  line: FeatureOf<LineString>,\n  inPoint: FeatureOf<Point>,\n  viewport: Viewport\n): NearestPointType {\n  const wmViewport = new WebMercatorViewport(viewport);\n  // Project the line to viewport, then find the nearest point\n  const coordinates: Array<Array<number>> = line.geometry.coordinates as any;\n  const projectedCoords = coordinates.map(([x, y, z = 0]) => wmViewport.project([x, y, z]));\n  // @ts-ignore\n  const [x, y] = wmViewport.project(inPoint.geometry.coordinates);\n  // console.log('projectedCoords', JSON.stringify(projectedCoords));\n\n  let minDistance = Infinity;\n  let minPointInfo = {};\n\n  projectedCoords.forEach(([x2, y2], index) => {\n    if (index === 0) {\n      return;\n    }\n\n    const [x1, y1] = projectedCoords[index - 1];\n\n    // line from projectedCoords[index - 1] to projectedCoords[index]\n    // convert to Ax + By + C = 0\n    const A = y1 - y2;\n    const B = x2 - x1;\n    const C = x1 * y2 - x2 * y1;\n\n    // https://en.wikipedia.org/wiki/Distance_from_a_point_to_a_line\n    const div = A * A + B * B;\n    const distance = Math.abs(A * x + B * y + C) / Math.sqrt(div);\n\n    // TODO: Check if inside bounds\n\n    if (distance < minDistance) {\n      minDistance = distance;\n      minPointInfo = {\n        index,\n        x0: (B * (B * x - A * y) - A * C) / div,\n        y0: (A * (-B * x + A * y) - B * C) / div,\n      };\n    }\n  });\n  // @ts-ignore\n  const { index, x0, y0 } = minPointInfo;\n  const [x1, y1, z1 = 0] = projectedCoords[index - 1];\n  const [x2, y2, z2 = 0] = projectedCoords[index];\n\n  // calculate what ratio of the line we are on to find the proper z\n  const lineLength = distance2d(x1, y1, x2, y2);\n  const startToPointLength = distance2d(x1, y1, x0, y0);\n  const ratio = startToPointLength / lineLength;\n  const z0 = mix(z1, z2, ratio);\n\n  return {\n    type: 'Feature',\n    geometry: {\n      type: 'Point',\n      coordinates: wmViewport.unproject([x0, y0, z0]),\n    },\n    properties: {\n      // TODO: calculate the distance in proper units\n      dist: minDistance,\n      index: index - 1,\n    },\n  };\n}\n\nexport function nearestPointOnLine<G extends LineString | MultiLineString>(\n  lines: FeatureOf<LineString>,\n  inPoint: FeatureOf<Point>,\n  viewport?: Viewport\n): NearestPointType {\n  let mercator;\n\n  if (viewport) {\n    mercator = new WebMercatorViewport(viewport);\n  }\n  let closestPoint: any = point([Infinity, Infinity], {\n    dist: Infinity,\n  });\n\n  if (!lines.geometry?.coordinates.length || lines.geometry?.coordinates.length < 2) {\n    return closestPoint;\n  }\n\n  // @ts-ignore\n  flattenEach(lines, (line: any) => {\n    const coords: any = getCoords(line);\n    // @ts-ignore\n    const pointCoords: any = getCoords(inPoint);\n\n    let minDist;\n    let to;\n    let from;\n    let x;\n    let y;\n    let segmentIdx;\n    let dist;\n\n    if (coords.length > 1 && pointCoords.length) {\n      let lineCoordinates;\n      let pointCoordinate;\n\n      // If viewport is given, then translate these coordinates to pixels to increase precision\n      if (mercator) {\n        lineCoordinates = coords.map((lineCoordinate) => mercator.project(lineCoordinate));\n        pointCoordinate = mercator.project(pointCoords);\n      } else {\n        lineCoordinates = coords;\n        pointCoordinate = pointCoords;\n      }\n\n      for (let n = 1; n < lineCoordinates.length; n++) {\n        if (lineCoordinates[n][0] !== lineCoordinates[n - 1][0]) {\n          const slope =\n            (lineCoordinates[n][1] - lineCoordinates[n - 1][1]) /\n            (lineCoordinates[n][0] - lineCoordinates[n - 1][0]);\n          const inverseSlope = lineCoordinates[n][1] - slope * lineCoordinates[n][0];\n\n          dist =\n            Math.abs(slope * pointCoordinate[0] + inverseSlope - pointCoordinate[1]) /\n            Math.sqrt(slope * slope + 1);\n        } else dist = Math.abs(pointCoordinate[0] - lineCoordinates[n][0]);\n\n        // length^2 of line segment\n        const rl2 =\n          Math.pow(lineCoordinates[n][1] - lineCoordinates[n - 1][1], 2) +\n          Math.pow(lineCoordinates[n][0] - lineCoordinates[n - 1][0], 2);\n\n        // distance^2 of pt to end line segment\n        const ln2 =\n          Math.pow(lineCoordinates[n][1] - pointCoordinate[1], 2) +\n          Math.pow(lineCoordinates[n][0] - pointCoordinate[0], 2);\n\n        // distance^2 of pt to begin line segment\n        const lnm12 =\n          Math.pow(lineCoordinates[n - 1][1] - pointCoordinate[1], 2) +\n          Math.pow(lineCoordinates[n - 1][0] - pointCoordinate[0], 2);\n\n        // minimum distance^2 of pt to infinite line\n        const dist2 = Math.pow(dist, 2);\n\n        // calculated length^2 of line segment\n        const calcrl2 = ln2 - dist2 + lnm12 - dist2;\n\n        // redefine minimum distance to line segment (not infinite line) if necessary\n        if (calcrl2 > rl2) {\n          dist = Math.sqrt(Math.min(ln2, lnm12));\n        }\n\n        if (minDist === null || minDist === undefined || minDist > dist) {\n          // eslint-disable-next-line max-depth\n          if (calcrl2 > rl2) {\n            // eslint-disable-next-line max-depth\n            if (lnm12 < ln2) {\n              to = 0; // nearer to previous point\n              from = 1;\n            } else {\n              from = 0; // nearer to current point\n              to = 1;\n            }\n          } else {\n            // perpendicular from point intersects line segment\n            to = Math.sqrt(lnm12 - dist2) / Math.sqrt(rl2);\n            from = Math.sqrt(ln2 - dist2) / Math.sqrt(rl2);\n          }\n          minDist = dist;\n          segmentIdx = n;\n        }\n      }\n\n      const dx = lineCoordinates[segmentIdx - 1][0] - lineCoordinates[segmentIdx][0];\n      const dy = lineCoordinates[segmentIdx - 1][1] - lineCoordinates[segmentIdx][1];\n\n      x = lineCoordinates[segmentIdx - 1][0] - dx * to;\n      y = lineCoordinates[segmentIdx - 1][1] - dy * to;\n    }\n\n    // index needs to be -1 because we have to account for the shift from initial backscan\n    let snapPoint = { x, y, idx: segmentIdx - 1, to, from };\n\n    if (mercator) {\n      const pixelToLatLong = mercator.unproject([snapPoint.x, snapPoint.y]);\n      snapPoint = {\n        x: pixelToLatLong[0],\n        y: pixelToLatLong[1],\n        idx: segmentIdx - 1,\n        to,\n        from,\n      };\n    }\n\n    closestPoint = point([snapPoint.x, snapPoint.y], {\n      dist: Math.abs(snapPoint.from - snapPoint.to),\n      index: snapPoint.idx,\n    });\n  });\n\n  return closestPoint;\n}\n\nexport function getPickedEditHandle(\n  picks: Pick[] | null | undefined\n): EditHandleFeature | null | undefined {\n  const handles = getPickedEditHandles(picks);\n  return handles.length ? handles[0] : null;\n}\n\nexport function getPickedSnapSourceEditHandle(\n  picks: Pick[] | null | undefined\n): EditHandleFeature | null | undefined {\n  const handles = getPickedEditHandles(picks);\n  return handles.find((handle) => handle.properties.editHandleType === 'snap-source');\n}\n\nexport function getNonGuidePicks(picks: Pick[]): Pick[] {\n  return picks && picks.filter((pick) => !pick.isGuide);\n}\n\nexport function getPickedExistingEditHandle(\n  picks: Pick[] | null | undefined\n): EditHandleFeature | null | undefined {\n  const handles = getPickedEditHandles(picks);\n  return handles.find(\n    ({ properties }) => properties.featureIndex >= 0 && properties.editHandleType === 'existing'\n  );\n}\n\nexport function getPickedIntermediateEditHandle(\n  picks: Pick[] | null | undefined\n): EditHandleFeature | null | undefined {\n  const handles = getPickedEditHandles(picks);\n  return handles.find(\n    ({ properties }) => properties.featureIndex >= 0 && properties.editHandleType === 'intermediate'\n  );\n}\n\nexport function getPickedEditHandles(picks: Pick[] | null | undefined): EditHandleFeature[] {\n  const handles =\n    (picks &&\n      picks\n        .filter((pick) => pick.isGuide && pick.object.properties.guideType === 'editHandle')\n        .map((pick) => pick.object)) ||\n    [];\n\n  return handles;\n}\n\nexport function getEditHandlesForGeometry(\n  geometry: Geometry,\n  featureIndex: number,\n  editHandleType: EditHandleType = 'existing'\n): EditHandleFeature[] {\n  let handles: EditHandleFeature[] = [];\n\n  switch (geometry.type) {\n    case 'Point':\n      // positions are not nested\n      handles = [\n        {\n          type: 'Feature',\n          properties: {\n            guideType: 'editHandle',\n            editHandleType,\n            positionIndexes: [],\n            featureIndex,\n          },\n          geometry: {\n            type: 'Point',\n            coordinates: geometry.coordinates,\n          },\n        },\n      ];\n      break;\n    case 'MultiPoint':\n    case 'LineString':\n      // positions are nested 1 level\n      handles = handles.concat(\n        getEditHandlesForCoordinates(geometry.coordinates, [], featureIndex, editHandleType)\n      );\n      break;\n    case 'Polygon':\n    case 'MultiLineString':\n      // positions are nested 2 levels\n      for (let a = 0; a < geometry.coordinates.length; a++) {\n        handles = handles.concat(\n          getEditHandlesForCoordinates(geometry.coordinates[a], [a], featureIndex, editHandleType)\n        );\n        if (geometry.type === 'Polygon') {\n          // Don't repeat the first/last handle for Polygons\n          handles = handles.slice(0, -1);\n        }\n      }\n\n      break;\n    case 'MultiPolygon':\n      // positions are nested 3 levels\n      for (let a = 0; a < geometry.coordinates.length; a++) {\n        for (let b = 0; b < geometry.coordinates[a].length; b++) {\n          handles = handles.concat(\n            getEditHandlesForCoordinates(\n              geometry.coordinates[a][b],\n              [a, b],\n              featureIndex,\n              editHandleType\n            )\n          );\n          // Don't repeat the first/last handle for Polygons\n          handles = handles.slice(0, -1);\n        }\n      }\n\n      break;\n    default:\n      // @ts-ignore\n      throw Error(`Unhandled geometry type: ${geometry.type}`);\n  }\n\n  return handles;\n}\n\nfunction getEditHandlesForCoordinates(\n  coordinates: any[],\n  positionIndexPrefix: number[],\n  featureIndex: number,\n  editHandleType: EditHandleType = 'existing'\n): EditHandleFeature[] {\n  const editHandles = [];\n  for (let i = 0; i < coordinates.length; i++) {\n    const position = coordinates[i];\n    editHandles.push({\n      type: 'Feature',\n      properties: {\n        guideType: 'editHandle',\n        positionIndexes: [...positionIndexPrefix, i],\n        featureIndex,\n        editHandleType,\n      },\n      geometry: {\n        type: 'Point',\n        coordinates: position,\n      },\n    });\n  }\n  return editHandles;\n}\n\n/**\n * Calculates coordinates for a feature preserving rectangular shape.\n * @param feature Feature before modification.\n * @param editHandleIndex Index of the point to modify.\n * @param mapCoords New position for the point.\n * @returns Updated coordinates.\n */\nexport function updateRectanglePosition(\n  feature: FeatureOf<Polygon>,\n  editHandleIndex: number,\n  mapCoords: Position\n): Position[][] {\n  const coordinates = feature.geometry.coordinates;\n  if (!coordinates) {\n    return null;\n  }\n\n  const points = coordinates[0].slice(0, 4);\n  points[editHandleIndex % 4] = mapCoords;\n\n  const p0 = points[(editHandleIndex + 2) % 4];\n  const p2 = points[editHandleIndex % 4];\n  points[(editHandleIndex + 1) % 4] = [p2[0], p0[1]];\n  points[(editHandleIndex + 3) % 4] = [p0[0], p2[1]];\n\n  return [[...points, points[0]]];\n}\n\n/** Creates a copy of feature's coordinates.\n * Each position in coordinates is transformed by calling the provided function.\n * @param coords Coordinates of a feature.\n * @param callback A function to transform each coordinate.\n * @retuns Transformed coordinates.\n */\nexport function mapCoords(\n  coords: AnyCoordinates,\n  callback: (coords: Position) => Position\n): AnyCoordinates {\n  if (typeof coords[0] === 'number') {\n    if (!isNaN(coords[0]) && isFinite(coords[0])) {\n      return callback(coords as Position);\n    }\n    return coords;\n  }\n\n  return (coords as Position[])\n    .map((coord) => {\n      return mapCoords(coord, callback) as Position;\n    })\n    .filter(Boolean);\n}\n","'use strict';\n\nvar xtend = require('xtend');\nvar v = require('@mapbox/fusspot');\n\nfunction file(value) {\n  // If we're in a browser so Blob is available, the file must be that.\n  // In Node, however, it could be a filepath or a pipeable (Readable) stream.\n  if (typeof window !== 'undefined') {\n    if (value instanceof global.Blob || value instanceof global.ArrayBuffer) {\n      return;\n    }\n    return 'Blob or ArrayBuffer';\n  }\n  if (typeof value === 'string' || value.pipe !== undefined) {\n    return;\n  }\n  return 'Filename or Readable stream';\n}\n\nfunction assertShape(validatorObj, apiName) {\n  return v.assert(v.strictShape(validatorObj), apiName);\n}\n\nfunction date(value) {\n  var msg = 'date';\n  if (typeof value === 'boolean') {\n    return msg;\n  }\n  try {\n    var date = new Date(value);\n    if (date.getTime && isNaN(date.getTime())) {\n      return msg;\n    }\n  } catch (e) {\n    return msg;\n  }\n}\n\nfunction coordinates(value) {\n  return v.tuple(v.number, v.number)(value);\n}\n\nmodule.exports = xtend(v, {\n  file: file,\n  date: date,\n  coordinates: coordinates,\n  assertShape: assertShape\n});\n","'use strict';\n/**\n * Validators are functions which assert certain type.\n * They can return a string which can then be used\n * to display a helpful error message.\n * They can also return a function for a custom error message.\n */\nvar isPlainObject = require('is-plain-obj');\nvar xtend = require('xtend');\n\nvar DEFAULT_ERROR_PATH = 'value';\nvar NEWLINE_INDENT = '\\n  ';\n\nvar v = {};\n\n/**\n * Runners\n *\n * Take root validators and run assertion\n */\nv.assert = function(rootValidator, options) {\n  options = options || {};\n  return function(value) {\n    var message = validate(rootValidator, value);\n    // all good\n    if (!message) {\n      return;\n    }\n\n    var errorMessage = processMessage(message, options);\n\n    if (options.apiName) {\n      errorMessage = options.apiName + ': ' + errorMessage;\n    }\n\n    throw new Error(errorMessage);\n  };\n};\n\n/**\n * Higher Order Validators\n *\n * validators which take other validators as input\n * and output a new validator\n */\nv.shape = function shape(validatorObj) {\n  var validators = objectEntries(validatorObj);\n  return function shapeValidator(value) {\n    var validationResult = validate(v.plainObject, value);\n\n    if (validationResult) {\n      return validationResult;\n    }\n\n    var key, validator;\n    var errorMessages = [];\n\n    for (var i = 0; i < validators.length; i++) {\n      key = validators[i].key;\n      validator = validators[i].value;\n      validationResult = validate(validator, value[key]);\n\n      if (validationResult) {\n        // return [key].concat(validationResult);\n        errorMessages.push([key].concat(validationResult));\n      }\n    }\n\n    if (errorMessages.length < 2) {\n      return errorMessages[0];\n    }\n\n    // enumerate all the error messages\n    return function(options) {\n      errorMessages = errorMessages.map(function(message) {\n        var key = message[0];\n        var renderedMessage = processMessage(message, options)\n          .split('\\n')\n          .join(NEWLINE_INDENT); // indents any inner nesting\n        return '- ' + key + ': ' + renderedMessage;\n      });\n\n      var objectId = options.path.join('.');\n      var ofPhrase = objectId === DEFAULT_ERROR_PATH ? '' : ' of ' + objectId;\n\n      return (\n        'The following properties' +\n        ofPhrase +\n        ' have invalid values:' +\n        NEWLINE_INDENT +\n        errorMessages.join(NEWLINE_INDENT)\n      );\n    };\n  };\n};\n\nv.strictShape = function strictShape(validatorObj) {\n  var shapeValidator = v.shape(validatorObj);\n  return function strictShapeValidator(value) {\n    var shapeResult = shapeValidator(value);\n    if (shapeResult) {\n      return shapeResult;\n    }\n\n    var invalidKeys = Object.keys(value).reduce(function(memo, valueKey) {\n      if (validatorObj[valueKey] === undefined) {\n        memo.push(valueKey);\n      }\n      return memo;\n    }, []);\n\n    if (invalidKeys.length !== 0) {\n      return function() {\n        return 'The following keys are invalid: ' + invalidKeys.join(', ');\n      };\n    }\n  };\n};\n\nv.arrayOf = function arrayOf(validator) {\n  return createArrayValidator(validator);\n};\n\nv.tuple = function tuple() {\n  var validators = Array.isArray(arguments[0])\n    ? arguments[0]\n    : Array.prototype.slice.call(arguments);\n  return createArrayValidator(validators);\n};\n\n// Currently array validation fails when the first invalid item is found.\nfunction createArrayValidator(validators) {\n  var validatingTuple = Array.isArray(validators);\n  var getValidator = function(index) {\n    if (validatingTuple) {\n      return validators[index];\n    }\n    return validators;\n  };\n\n  return function arrayValidator(value) {\n    var validationResult = validate(v.plainArray, value);\n    if (validationResult) {\n      return validationResult;\n    }\n\n    if (validatingTuple && value.length !== validators.length) {\n      return 'an array with ' + validators.length + ' items';\n    }\n\n    for (var i = 0; i < value.length; i++) {\n      validationResult = validate(getValidator(i), value[i]);\n      if (validationResult) {\n        return [i].concat(validationResult);\n      }\n    }\n  };\n}\n\nv.required = function required(validator) {\n  function requiredValidator(value) {\n    if (value == null) {\n      return function(options) {\n        return formatErrorMessage(\n          options,\n          isArrayCulprit(options.path)\n            ? 'cannot be undefined/null.'\n            : 'is required.'\n        );\n      };\n    }\n    return validator.apply(this, arguments);\n  }\n  requiredValidator.__required = true;\n\n  return requiredValidator;\n};\n\nv.oneOfType = function oneOfType() {\n  var validators = Array.isArray(arguments[0])\n    ? arguments[0]\n    : Array.prototype.slice.call(arguments);\n  return function oneOfTypeValidator(value) {\n    var messages = validators\n      .map(function(validator) {\n        return validate(validator, value);\n      })\n      .filter(Boolean);\n\n    // If we don't have as many messages as no. of validators,\n    // then at least one validator was ok with the value.\n    if (messages.length !== validators.length) {\n      return;\n    }\n\n    // check primitive type\n    if (\n      messages.every(function(message) {\n        return message.length === 1 && typeof message[0] === 'string';\n      })\n    ) {\n      return orList(\n        messages.map(function(m) {\n          return m[0];\n        })\n      );\n    }\n\n    // Complex oneOfTypes like\n    // `v.oneOftypes(v.shape({name: v.string})`, `v.shape({name: v.number}))`\n    // are complex ¯\\_(ツ)_/¯. For the current scope only returning the longest message.\n    return messages.reduce(function(max, arr) {\n      return arr.length > max.length ? arr : max;\n    });\n  };\n};\n\n/**\n * Meta Validators\n * which take options as argument (not validators)\n * and return a new primitive validator\n */\nv.equal = function equal(compareWith) {\n  return function equalValidator(value) {\n    if (value !== compareWith) {\n      return JSON.stringify(compareWith);\n    }\n  };\n};\n\nv.oneOf = function oneOf() {\n  var options = Array.isArray(arguments[0])\n    ? arguments[0]\n    : Array.prototype.slice.call(arguments);\n  var validators = options.map(function(value) {\n    return v.equal(value);\n  });\n\n  return v.oneOfType.apply(this, validators);\n};\n\nv.range = function range(compareWith) {\n  var min = compareWith[0];\n  var max = compareWith[1];\n  return function rangeValidator(value) {\n    var validationResult = validate(v.number, value);\n\n    if (validationResult || value < min || value > max) {\n      return 'number between ' + min + ' & ' + max + ' (inclusive)';\n    }\n  };\n};\n\n/**\n * Primitive validators\n *\n * simple validators which return a string or undefined\n */\nv.any = function any() {\n  return;\n};\n\nv.boolean = function boolean(value) {\n  if (typeof value !== 'boolean') {\n    return 'boolean';\n  }\n};\n\nv.number = function number(value) {\n  if (typeof value !== 'number') {\n    return 'number';\n  }\n};\n\nv.plainArray = function plainArray(value) {\n  if (!Array.isArray(value)) {\n    return 'array';\n  }\n};\n\nv.plainObject = function plainObject(value) {\n  if (!isPlainObject(value)) {\n    return 'object';\n  }\n};\n\nv.string = function string(value) {\n  if (typeof value !== 'string') {\n    return 'string';\n  }\n};\n\nv.func = function func(value) {\n  if (typeof value !== 'function') {\n    return 'function';\n  }\n};\n\nfunction validate(validator, value) {\n  // assertions are optional by default unless wrapped in v.require\n  if (value == null && !validator.hasOwnProperty('__required')) {\n    return;\n  }\n\n  var result = validator(value);\n\n  if (result) {\n    return Array.isArray(result) ? result : [result];\n  }\n}\n\nfunction processMessage(message, options) {\n  // message array follows the convention\n  // [...path, result]\n  // path is an array of object keys / array indices\n  // result is output of the validator\n  var len = message.length;\n\n  var result = message[len - 1];\n  var path = message.slice(0, len - 1);\n\n  if (path.length === 0) {\n    path = [DEFAULT_ERROR_PATH];\n  }\n  options = xtend(options, { path: path });\n\n  return typeof result === 'function'\n    ? result(options) // allows customization of result\n    : formatErrorMessage(options, prettifyResult(result));\n}\n\nfunction orList(list) {\n  if (list.length < 2) {\n    return list[0];\n  }\n  if (list.length === 2) {\n    return list.join(' or ');\n  }\n  return list.slice(0, -1).join(', ') + ', or ' + list.slice(-1);\n}\n\nfunction prettifyResult(result) {\n  return 'must be ' + addArticle(result) + '.';\n}\n\nfunction addArticle(nounPhrase) {\n  if (/^an? /.test(nounPhrase)) {\n    return nounPhrase;\n  }\n  if (/^[aeiou]/i.test(nounPhrase)) {\n    return 'an ' + nounPhrase;\n  }\n  if (/^[a-z]/i.test(nounPhrase)) {\n    return 'a ' + nounPhrase;\n  }\n  return nounPhrase;\n}\n\nfunction formatErrorMessage(options, prettyResult) {\n  var arrayCulprit = isArrayCulprit(options.path);\n  var output = options.path.join('.') + ' ' + prettyResult;\n  var prepend = arrayCulprit ? 'Item at position ' : '';\n\n  return prepend + output;\n}\n\nfunction isArrayCulprit(path) {\n  return typeof path[path.length - 1] == 'number' || typeof path[0] == 'number';\n}\n\nfunction objectEntries(obj) {\n  return Object.keys(obj || {}).map(function(key) {\n    return { key: key, value: obj[key] };\n  });\n}\n\nv.validate = validate;\nv.processMessage = processMessage;\n\nmodule.exports = v;\n","'use strict';\n\n/**\n * Create a new object by picking properties off an existing object.\n * The second param can be overloaded as a callback for\n * more fine grained picking of properties.\n * @param {Object} source\n * @param {Array<string>|function(string, Object):boolean} keys\n * @returns {Object}\n */\nfunction pick(source, keys) {\n  var filter = function(key, val) {\n    return keys.indexOf(key) !== -1 && val !== undefined;\n  };\n\n  if (typeof keys === 'function') {\n    filter = keys;\n  }\n\n  return Object.keys(source)\n    .filter(function(key) {\n      return filter(key, source[key]);\n    })\n    .reduce(function(result, key) {\n      result[key] = source[key];\n      return result;\n    }, {});\n}\n\nmodule.exports = pick;\n","'use strict';\n\nvar objectMap = require('./object-map');\n\n/**\n * Stringify all the boolean values in an object, so true becomes \"true\".\n *\n * @param {Object} obj\n * @returns {Object}\n */\nfunction stringifyBoolean(obj) {\n  return objectMap(obj, function(_, value) {\n    return typeof value === 'boolean' ? JSON.stringify(value) : value;\n  });\n}\n\nmodule.exports = stringifyBoolean;\n","'use strict';\n\nfunction objectMap(obj, cb) {\n  return Object.keys(obj).reduce(function(result, key) {\n    result[key] = cb(key, obj[key]);\n    return result;\n  }, {});\n}\n\nmodule.exports = objectMap;\n","'use strict';\n\nvar MapiClient = require('../../lib/classes/mapi-client');\n// This will create the environment-appropriate client.\nvar createClient = require('../../lib/client');\n\nfunction createServiceFactory(ServicePrototype) {\n  return function(clientOrConfig) {\n    var client;\n    if (MapiClient.prototype.isPrototypeOf(clientOrConfig)) {\n      client = clientOrConfig;\n    } else {\n      client = createClient(clientOrConfig);\n    }\n    var service = Object.create(ServicePrototype);\n    service.client = client;\n    return service;\n  };\n}\n\nmodule.exports = createServiceFactory;\n","'use strict';\n\nvar parseToken = require('@mapbox/parse-mapbox-token');\nvar xtend = require('xtend');\nvar EventEmitter = require('eventemitter3');\nvar urlUtils = require('../helpers/url-utils');\nvar constants = require('../constants');\n\nvar requestId = 1;\n\n/**\n * A Mapbox API request.\n *\n * Note that creating a `MapiRequest` does *not* send the request automatically.\n * Use the request's `send` method to send it off and get a `Promise`.\n *\n * The `emitter` property is an `EventEmitter` that emits the following events:\n *\n * - `'response'` - Listeners will be called with a `MapiResponse`.\n * - `'error'` - Listeners will be called with a `MapiError`.\n * - `'downloadProgress'` - Listeners will be called with `ProgressEvents`.\n * - `'uploadProgress'` - Listeners will be called with `ProgressEvents`.\n *   Upload events are only available when the request includes a file.\n *\n * @class MapiRequest\n * @property {EventEmitter} emitter - An event emitter. See above.\n * @property {MapiClient} client - This request's `MapiClient`.\n * @property {MapiResponse|null} response - If this request has been sent and received\n *   a response, the response is available on this property.\n * @property {MapiError|Error|null} error - If this request has been sent and\n *   received an error in response, the error is available on this property.\n * @property {boolean} aborted - If the request has been aborted\n *   (via [`abort`](#abort)), this property will be `true`.\n * @property {boolean} sent - If the request has been sent, this property will\n *   be `true`. You cannot send the same request twice, so if you need to create\n *   a new request that is the equivalent of an existing one, use\n *   [`clone`](#clone).\n * @property {string} path - The request's path, including colon-prefixed route\n *   parameters.\n * @property {string} origin - The request's origin.\n * @property {string} method - The request's HTTP method.\n * @property {Object} query - A query object, which will be transformed into\n *   a URL query string.\n * @property {Object} params - A route parameters object, whose values will\n *   be interpolated the path.\n * @property {Object} headers - The request's headers.\n * @property {Object|string|null} body - Data to send with the request.\n *   If the request has a body, it will also be sent with the header\n *   `'Content-Type: application/json'`.\n * @property {Blob|ArrayBuffer|string|ReadStream} file - A file to\n *   send with the request. The browser client accepts Blobs and ArrayBuffers;\n *   the Node client accepts strings (filepaths) and ReadStreams.\n * @property {string} encoding - The encoding of the response.\n * @property {string} sendFileAs - The method to send the `file`. Options are\n *   `data` (x-www-form-urlencoded) or `form` (multipart/form-data).\n */\n\n/**\n * @ignore\n * @param {MapiClient} client\n * @param {Object} options\n * @param {string} options.method\n * @param {string} options.path\n * @param {Object} [options.query={}]\n * @param {Object} [options.params={}]\n * @param {string} [options.origin]\n * @param {Object} [options.headers]\n * @param {Object} [options.body=null]\n * @param {Blob|ArrayBuffer|string|ReadStream} [options.file=null]\n * @param {string} [options.encoding=utf8]\n */\nfunction MapiRequest(client, options) {\n  if (!client) {\n    throw new Error('MapiRequest requires a client');\n  }\n  if (!options || !options.path || !options.method) {\n    throw new Error(\n      'MapiRequest requires an options object with path and method properties'\n    );\n  }\n\n  var defaultHeaders = {};\n  if (options.body) {\n    defaultHeaders['content-type'] = 'application/json';\n  }\n\n  var headersWithDefaults = xtend(defaultHeaders, options.headers);\n\n  // Disallows duplicate header names of mixed case,\n  // e.g. Content-Type and content-type.\n  var headers = Object.keys(headersWithDefaults).reduce(function(memo, name) {\n    memo[name.toLowerCase()] = headersWithDefaults[name];\n    return memo;\n  }, {});\n\n  this.id = requestId++;\n  this._options = options;\n\n  this.emitter = new EventEmitter();\n  this.client = client;\n  this.response = null;\n  this.error = null;\n  this.sent = false;\n  this.aborted = false;\n  this.path = options.path;\n  this.method = options.method;\n  this.origin = options.origin || client.origin;\n  this.query = options.query || {};\n  this.params = options.params || {};\n  this.body = options.body || null;\n  this.file = options.file || null;\n  this.encoding = options.encoding || 'utf8';\n  this.sendFileAs = options.sendFileAs || null;\n  this.headers = headers;\n}\n\n/**\n * Get the URL of the request.\n *\n * @param {string} [accessToken] - By default, the access token of the request's\n *   client is used.\n * @return {string}\n */\nMapiRequest.prototype.url = function url(accessToken) {\n  var url = urlUtils.prependOrigin(this.path, this.origin);\n  url = urlUtils.appendQueryObject(url, this.query);\n  var routeParams = this.params;\n  var actualAccessToken =\n    accessToken == null ? this.client.accessToken : accessToken;\n  if (actualAccessToken) {\n    url = urlUtils.appendQueryParam(url, 'access_token', actualAccessToken);\n    var accessTokenOwnerId = parseToken(actualAccessToken).user;\n    routeParams = xtend({ ownerId: accessTokenOwnerId }, routeParams);\n  }\n  url = urlUtils.interpolateRouteParams(url, routeParams);\n  return url;\n};\n\n/**\n * Send the request. Returns a Promise that resolves with a `MapiResponse`.\n * You probably want to use `response.body`.\n *\n * `send` only retrieves the first page of paginated results. You can get\n * the next page by using the `MapiResponse`'s [`nextPage`](#nextpage)\n * function, or iterate through all pages using [`eachPage`](#eachpage)\n * instead of `send`.\n *\n * @returns {Promise<MapiResponse>}\n */\nMapiRequest.prototype.send = function send() {\n  var self = this;\n\n  if (self.sent) {\n    throw new Error(\n      'This request has already been sent. Check the response and error properties. Create a new request with clone().'\n    );\n  }\n  self.sent = true;\n\n  return self.client.sendRequest(self).then(\n    function(response) {\n      self.response = response;\n      self.emitter.emit(constants.EVENT_RESPONSE, response);\n      return response;\n    },\n    function(error) {\n      self.error = error;\n      self.emitter.emit(constants.EVENT_ERROR, error);\n      throw error;\n    }\n  );\n};\n\n/**\n * Abort the request.\n *\n * Any pending `Promise` returned by [`send`](#send) will be rejected with\n * an error with `type: 'RequestAbortedError'`. If you've created a request\n * that might be aborted, you need to catch and handle such errors.\n *\n * This method will also abort any requests created while fetching subsequent\n * pages via [`eachPage`](#eachpage).\n *\n * If the request has not been sent or has already been aborted, nothing\n * will happen.\n */\nMapiRequest.prototype.abort = function abort() {\n  if (this._nextPageRequest) {\n    this._nextPageRequest.abort();\n    delete this._nextPageRequest;\n  }\n\n  if (this.response || this.error || this.aborted) return;\n\n  this.aborted = true;\n  this.client.abortRequest(this);\n};\n\n/**\n * Invoke a callback for each page of a paginated API response.\n *\n * The callback should have the following signature:\n *\n * ```js\n * (\n *   error: MapiError,\n *   response: MapiResponse,\n *   next: () => void\n * ) => void\n * ```\n *\n * **The next page will not be fetched until you've invoked the\n * `next` callback**, indicating that you're ready for it.\n *\n * @param {Function} callback\n */\nMapiRequest.prototype.eachPage = function eachPage(callback) {\n  var self = this;\n\n  function handleResponse(response) {\n    function getNextPage() {\n      delete self._nextPageRequest;\n      var nextPageRequest = response.nextPage();\n      if (nextPageRequest) {\n        self._nextPageRequest = nextPageRequest;\n        getPage(nextPageRequest);\n      }\n    }\n    callback(null, response, getNextPage);\n  }\n\n  function handleError(error) {\n    callback(error, null, function() {});\n  }\n\n  function getPage(request) {\n    request.send().then(handleResponse, handleError);\n  }\n  getPage(this);\n};\n\n/**\n * Clone this request.\n *\n * Each request can only be sent *once*. So if you'd like to send the\n * same request again, clone it and send away.\n *\n * @returns {MapiRequest} - A new `MapiRequest` configured just like this one.\n */\nMapiRequest.prototype.clone = function clone() {\n  return this._extend();\n};\n\n/**\n * @ignore\n */\nMapiRequest.prototype._extend = function _extend(options) {\n  var extendedOptions = xtend(this._options, options);\n  return new MapiRequest(this.client, extendedOptions);\n};\n\nmodule.exports = MapiRequest;\n","'use strict';\n\n// Encode each item of an array individually. The comma\n// delimiters should not themselves be encoded.\nfunction encodeArray(arrayValue) {\n  return arrayValue.map(encodeURIComponent).join(',');\n}\n\nfunction encodeValue(value) {\n  if (Array.isArray(value)) {\n    return encodeArray(value);\n  }\n  return encodeURIComponent(String(value));\n}\n\n/**\n * Append a query parameter to a URL.\n *\n * @param {string} url\n * @param {string} key\n * @param {string|number|boolean|Array<*>>} [value] - Provide an array\n *   if the value is a list and commas between values need to be\n *   preserved, unencoded.\n * @returns {string} - Modified URL.\n */\nfunction appendQueryParam(url, key, value) {\n  if (value === false || value === null) {\n    return url;\n  }\n  var punctuation = /\\?/.test(url) ? '&' : '?';\n  var query = encodeURIComponent(key);\n  if (value !== undefined && value !== '' && value !== true) {\n    query += '=' + encodeValue(value);\n  }\n  return '' + url + punctuation + query;\n}\n\n/**\n * Derive a query string from an object and append it\n * to a URL.\n *\n * @param {string} url\n * @param {Object} [queryObject] - Values should be primitives.\n * @returns {string} - Modified URL.\n */\nfunction appendQueryObject(url, queryObject) {\n  if (!queryObject) {\n    return url;\n  }\n\n  var result = url;\n  Object.keys(queryObject).forEach(function(key) {\n    var value = queryObject[key];\n    if (value === undefined) {\n      return;\n    }\n    if (Array.isArray(value)) {\n      value = value\n        .filter(function(v) {\n          return v !== null && v !== undefined;\n        })\n        .join(',');\n    }\n    result = appendQueryParam(result, key, value);\n  });\n  return result;\n}\n\n/**\n * Prepend an origin to a URL. If the URL already has an\n * origin, do nothing.\n *\n * @param {string} url\n * @param {string} origin\n * @returns {string} - Modified URL.\n */\nfunction prependOrigin(url, origin) {\n  if (!origin) {\n    return url;\n  }\n\n  if (url.slice(0, 4) === 'http') {\n    return url;\n  }\n\n  var delimiter = url[0] === '/' ? '' : '/';\n  return '' + origin.replace(/\\/$/, '') + delimiter + url;\n}\n\n/**\n * Interpolate values into a route with express-style,\n * colon-prefixed route parameters.\n *\n * @param {string} route\n * @param {Object} [params] - Values should be primitives\n *   or arrays of primitives. Provide an array if the value\n *   is a list and commas between values need to be\n *   preserved, unencoded.\n * @returns {string} - Modified URL.\n */\nfunction interpolateRouteParams(route, params) {\n  if (!params) {\n    return route;\n  }\n  return route.replace(/\\/:([a-zA-Z0-9]+)/g, function(_, paramId) {\n    var value = params[paramId];\n    if (value === undefined) {\n      throw new Error('Unspecified route parameter ' + paramId);\n    }\n    var preppedValue = encodeValue(value);\n    return '/' + preppedValue;\n  });\n}\n\nmodule.exports = {\n  appendQueryObject: appendQueryObject,\n  appendQueryParam: appendQueryParam,\n  prependOrigin: prependOrigin,\n  interpolateRouteParams: interpolateRouteParams\n};\n","'use strict';\n\nvar browser = require('./browser-layer');\nvar MapiClient = require('../classes/mapi-client');\n\nfunction BrowserClient(options) {\n  MapiClient.call(this, options);\n}\nBrowserClient.prototype = Object.create(MapiClient.prototype);\nBrowserClient.prototype.constructor = BrowserClient;\n\nBrowserClient.prototype.sendRequest = browser.browserSend;\nBrowserClient.prototype.abortRequest = browser.browserAbort;\n\n/**\n * Create a client for the browser.\n *\n * @param {Object} options\n * @param {string} options.accessToken\n * @param {string} [options.origin]\n * @returns {MapiClient}\n */\nfunction createBrowserClient(options) {\n  return new BrowserClient(options);\n}\n\nmodule.exports = createBrowserClient;\n","'use strict';\n\nvar MapiResponse = require('../classes/mapi-response');\nvar MapiError = require('../classes/mapi-error');\nvar constants = require('../constants');\nvar parseHeaders = require('../helpers/parse-headers');\n\n// Keys are request IDs, values are XHRs.\nvar requestsUnderway = {};\n\nfunction browserAbort(request) {\n  var xhr = requestsUnderway[request.id];\n  if (!xhr) return;\n  xhr.abort();\n  delete requestsUnderway[request.id];\n}\n\nfunction createResponse(request, xhr) {\n  return new MapiResponse(request, {\n    body: xhr.response,\n    headers: parseHeaders(xhr.getAllResponseHeaders()),\n    statusCode: xhr.status\n  });\n}\n\nfunction normalizeBrowserProgressEvent(event) {\n  var total = event.total;\n  var transferred = event.loaded;\n  var percent = (100 * transferred) / total;\n  return {\n    total: total,\n    transferred: transferred,\n    percent: percent\n  };\n}\n\nfunction sendRequestXhr(request, xhr) {\n  return new Promise(function(resolve, reject) {\n    xhr.onprogress = function(event) {\n      request.emitter.emit(\n        constants.EVENT_PROGRESS_DOWNLOAD,\n        normalizeBrowserProgressEvent(event)\n      );\n    };\n\n    var file = request.file;\n    if (file) {\n      xhr.upload.onprogress = function(event) {\n        request.emitter.emit(\n          constants.EVENT_PROGRESS_UPLOAD,\n          normalizeBrowserProgressEvent(event)\n        );\n      };\n    }\n\n    xhr.onerror = function(error) {\n      reject(error);\n    };\n\n    xhr.onabort = function() {\n      var mapiError = new MapiError({\n        request: request,\n        type: constants.ERROR_REQUEST_ABORTED\n      });\n      reject(mapiError);\n    };\n\n    xhr.onload = function() {\n      delete requestsUnderway[request.id];\n      if (xhr.status < 200 || xhr.status >= 400) {\n        var mapiError = new MapiError({\n          request: request,\n          body: xhr.response,\n          statusCode: xhr.status\n        });\n        reject(mapiError);\n        return;\n      }\n      resolve(xhr);\n    };\n\n    var body = request.body;\n\n    // matching service needs to send a www-form-urlencoded request\n    if (typeof body === 'string') {\n      xhr.send(body);\n    } else if (body) {\n      xhr.send(JSON.stringify(body));\n    } else if (file) {\n      xhr.send(file);\n    } else {\n      xhr.send();\n    }\n\n    requestsUnderway[request.id] = xhr;\n  }).then(function(xhr) {\n    return createResponse(request, xhr);\n  });\n}\n\n// The accessToken argument gives this function flexibility\n// for Mapbox's internal client.\nfunction createRequestXhr(request, accessToken) {\n  var url = request.url(accessToken);\n  var xhr = new window.XMLHttpRequest();\n  xhr.open(request.method, url);\n  Object.keys(request.headers).forEach(function(key) {\n    xhr.setRequestHeader(key, request.headers[key]);\n  });\n  return xhr;\n}\n\nfunction browserSend(request) {\n  return Promise.resolve().then(function() {\n    var xhr = createRequestXhr(request, request.client.accessToken);\n    return sendRequestXhr(request, xhr);\n  });\n}\n\nmodule.exports = {\n  browserAbort: browserAbort,\n  sendRequestXhr: sendRequestXhr,\n  browserSend: browserSend,\n  createRequestXhr: createRequestXhr\n};\n","'use strict';\n\nvar parseLinkHeader = require('../helpers/parse-link-header');\n\n/**\n * A Mapbox API response.\n *\n * @class MapiResponse\n * @property {Object} body - The response body, parsed as JSON.\n * @property {string} rawBody - The raw response body.\n * @property {number} statusCode - The response's status code.\n * @property {Object} headers - The parsed response headers.\n * @property {Object} links - The parsed response links.\n * @property {MapiRequest} request - The response's originating `MapiRequest`.\n */\n\n/**\n * @ignore\n * @param {MapiRequest} request\n * @param {Object} responseData\n * @param {Object} responseData.headers\n * @param {string} responseData.body\n * @param {number} responseData.statusCode\n */\nfunction MapiResponse(request, responseData) {\n  this.request = request;\n  this.headers = responseData.headers;\n  this.rawBody = responseData.body;\n  this.statusCode = responseData.statusCode;\n  try {\n    this.body = JSON.parse(responseData.body || '{}');\n  } catch (parseError) {\n    this.body = responseData.body;\n  }\n  this.links = parseLinkHeader(this.headers.link);\n}\n\n/**\n * Check if there is a next page that you can fetch.\n *\n * @returns {boolean}\n */\nMapiResponse.prototype.hasNextPage = function hasNextPage() {\n  return !!this.links.next;\n};\n\n/**\n * Create a request for the next page, if there is one.\n * If there is no next page, returns `null`.\n *\n * @returns {MapiRequest | null}\n */\nMapiResponse.prototype.nextPage = function nextPage() {\n  if (!this.hasNextPage()) return null;\n  return this.request._extend({\n    path: this.links.next.url\n  });\n};\n\nmodule.exports = MapiResponse;\n","'use strict';\n\n// Like https://github.com/thlorenz/lib/parse-link-header but without any\n// additional dependencies.\n\nfunction parseParam(param) {\n  var parts = param.match(/\\s*(.+)\\s*=\\s*\"?([^\"]+)\"?/);\n  if (!parts) return null;\n\n  return {\n    key: parts[1],\n    value: parts[2]\n  };\n}\n\nfunction parseLink(link) {\n  var parts = link.match(/<?([^>]*)>(.*)/);\n  if (!parts) return null;\n\n  var linkUrl = parts[1];\n  var linkParams = parts[2].split(';');\n  var rel = null;\n  var parsedLinkParams = linkParams.reduce(function(result, param) {\n    var parsed = parseParam(param);\n    if (!parsed) return result;\n    if (parsed.key === 'rel') {\n      if (!rel) {\n        rel = parsed.value;\n      }\n      return result;\n    }\n    result[parsed.key] = parsed.value;\n    return result;\n  }, {});\n  if (!rel) return null;\n\n  return {\n    url: linkUrl,\n    rel: rel,\n    params: parsedLinkParams\n  };\n}\n\n/**\n * Parse a Link header.\n *\n * @param {string} linkHeader\n * @returns {{\n *   [string]: {\n *     url: string,\n *     params: { [string]: string }\n *   }\n * }}\n */\nfunction parseLinkHeader(linkHeader) {\n  if (!linkHeader) return {};\n\n  return linkHeader.split(/,\\s*</).reduce(function(result, link) {\n    var parsed = parseLink(link);\n    if (!parsed) return result;\n    // rel value can be multiple whitespace-separated rels.\n    var splitRel = parsed.rel.split(/\\s+/);\n    splitRel.forEach(function(rel) {\n      if (!result[rel]) {\n        result[rel] = {\n          url: parsed.url,\n          params: parsed.params\n        };\n      }\n    });\n    return result;\n  }, {});\n}\n\nmodule.exports = parseLinkHeader;\n","'use strict';\n\nvar constants = require('../constants');\n\n/**\n * A Mapbox API error.\n *\n * If there's an error during the API transaction,\n * the Promise returned by `MapiRequest`'s [`send`](#send)\n * method should reject with a `MapiError`.\n *\n * @class MapiError\n * @hideconstructor\n * @property {MapiRequest} request - The errored request.\n * @property {string} type - The type of error. Usually this is `'HttpError'`.\n *   If the request was aborted, so the error was\n *   not sent from the server, the type will be\n *   `'RequestAbortedError'`.\n * @property {number} [statusCode] - The numeric status code of\n *   the HTTP response.\n * @property {Object | string} [body] - If the server sent a response body,\n *   this property exposes that response, parsed as JSON if possible.\n * @property {string} [message] - Whatever message could be derived from the\n *   call site and HTTP response.\n *\n * @param {MapiRequest} options.request\n * @param {number} [options.statusCode]\n * @param {string} [options.body]\n * @param {string} [options.message]\n * @param {string} [options.type]\n */\nfunction MapiError(options) {\n  var errorType = options.type || constants.ERROR_HTTP;\n\n  var body;\n  if (options.body) {\n    try {\n      body = JSON.parse(options.body);\n    } catch (e) {\n      body = options.body;\n    }\n  } else {\n    body = null;\n  }\n\n  var message = options.message || null;\n  if (!message) {\n    if (typeof body === 'string') {\n      message = body;\n    } else if (body && typeof body.message === 'string') {\n      message = body.message;\n    } else if (errorType === constants.ERROR_REQUEST_ABORTED) {\n      message = 'Request aborted';\n    }\n  }\n\n  this.message = message;\n  this.type = errorType;\n  this.statusCode = options.statusCode || null;\n  this.request = options.request;\n  this.body = body;\n}\n\nmodule.exports = MapiError;\n","'use strict';\n\nfunction parseSingleHeader(raw) {\n  var boundary = raw.indexOf(':');\n  var name = raw\n    .substring(0, boundary)\n    .trim()\n    .toLowerCase();\n  var value = raw.substring(boundary + 1).trim();\n  return {\n    name: name,\n    value: value\n  };\n}\n\n/**\n * Parse raw headers into an object with lowercase properties.\n * Does not fully parse headings into more complete data structure,\n * as larger libraries might do. Also does not deal with duplicate\n * headers because Node doesn't seem to deal with those well, so\n * we shouldn't let the browser either, for consistency.\n *\n * @param {string} raw\n * @returns {Object}\n */\nfunction parseHeaders(raw) {\n  var headers = {};\n  if (!raw) {\n    return headers;\n  }\n\n  raw\n    .trim()\n    .split(/[\\r|\\n]+/)\n    .forEach(function(rawHeader) {\n      var parsed = parseSingleHeader(rawHeader);\n      headers[parsed.name] = parsed.value;\n    });\n\n  return headers;\n}\n\nmodule.exports = parseHeaders;\n","export default function assert(condition, message) {\n  if (!condition) {\n    throw new Error(`math.gl assertion ${message}`);\n  }\n}\n","import * as vec4 from 'gl-matrix/vec4';\n\n// Helper, avoids low-precision 32 bit matrices from gl-matrix mat4.create()\nexport function createMat4() {\n  return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}\n\n// Transforms a vec4 with a projection matrix\nexport function transformVector(matrix, vector) {\n  const result = vec4.transformMat4([], vector, matrix);\n  vec4.scale(result, result, 1 / result[3]);\n  return result;\n}\n\nexport function mod(value, divisor) {\n  const modulus = value % divisor;\n  return modulus < 0 ? divisor + modulus : modulus;\n}\n\nexport function lerp(start, end, step) {\n  return step * end + (1 - step) * start;\n}\n\nfunction ieLog2(x) {\n  return Math.log(x) * Math.LOG2E;\n}\n// Handle missing log2 in IE 11\nexport const log2 = Math.log2 || ieLog2;\n","// Replacement for the external assert method to reduce bundle size\n// Note: We don't use the second \"message\" argument in calling code,\n// so no need to support it here\nexport default function assert(condition, message) {\n  if (!condition) {\n    throw new Error(message || '@math.gl/web-mercator: assertion failed.');\n  }\n}\n","// TODO - THE UTILITIES IN THIS FILE SHOULD BE IMPORTED FROM WEB-MERCATOR-VIEWPORT MODULE\n\nimport {createMat4, transformVector, log2} from './math-utils';\n\nimport * as mat4 from 'gl-matrix/mat4';\nimport * as vec2 from 'gl-matrix/vec2';\nimport * as vec3 from 'gl-matrix/vec3';\nimport assert from './assert';\n\n// CONSTANTS\nconst PI = Math.PI;\nconst PI_4 = PI / 4;\nconst DEGREES_TO_RADIANS = PI / 180;\nconst RADIANS_TO_DEGREES = 180 / PI;\nconst TILE_SIZE = 512;\n// Average circumference (40075 km equatorial, 40007 km meridional)\nconst EARTH_CIRCUMFERENCE = 40.03e6;\n\n// Mapbox default altitude\nexport const DEFAULT_ALTITUDE = 1.5;\n\n/** Util functions **/\nexport function zoomToScale(zoom) {\n  return Math.pow(2, zoom);\n}\n\nexport function scaleToZoom(scale) {\n  return log2(scale);\n}\n\n/**\n * Project [lng,lat] on sphere onto [x,y] on 512*512 Mercator Zoom 0 tile.\n * Performs the nonlinear part of the web mercator projection.\n * Remaining projection is done with 4x4 matrices which also handles\n * perspective.\n *\n * @param lngLat - [lng, lat] coordinates\n *   Specifies a point on the sphere to project onto the map.\n * @return [x,y] coordinates.\n */\nexport function lngLatToWorld([lng, lat]) {\n  assert(Number.isFinite(lng));\n  assert(Number.isFinite(lat) && lat >= -90 && lat <= 90, 'invalid latitude');\n\n  const lambda2 = lng * DEGREES_TO_RADIANS;\n  const phi2 = lat * DEGREES_TO_RADIANS;\n  const x = (TILE_SIZE * (lambda2 + PI)) / (2 * PI);\n  const y = (TILE_SIZE * (PI + Math.log(Math.tan(PI_4 + phi2 * 0.5)))) / (2 * PI);\n  return [x, y];\n}\n\n// Unproject world point [x,y] on map onto {lat, lon} on sphere\nexport function worldToLngLat([x, y]) {\n  const lambda2 = (x / TILE_SIZE) * (2 * PI) - PI;\n  const phi2 = 2 * (Math.atan(Math.exp((y / TILE_SIZE) * (2 * PI) - PI)) - PI_4);\n  return [lambda2 * RADIANS_TO_DEGREES, phi2 * RADIANS_TO_DEGREES];\n}\n\n// Returns the zoom level that gives a 1 meter pixel at a certain latitude\n// 1 = C*cos(y)/2^z/TILE_SIZE = C*cos(y)/2^(z+9)\nexport function getMeterZoom({latitude}) {\n  assert(Number.isFinite(latitude));\n  const latCosine = Math.cos(latitude * DEGREES_TO_RADIANS);\n  return scaleToZoom(EARTH_CIRCUMFERENCE * latCosine) - 9;\n}\n\n/**\n * Calculate distance scales in meters around current lat/lon, both for\n * degrees and pixels.\n * In mercator projection mode, the distance scales vary significantly\n * with latitude.\n */\n\nexport function getDistanceScales({latitude, longitude, highPrecision = false}) {\n  assert(Number.isFinite(latitude) && Number.isFinite(longitude));\n\n  const result = {};\n  const worldSize = TILE_SIZE;\n  const latCosine = Math.cos(latitude * DEGREES_TO_RADIANS);\n\n  /**\n   * Number of pixels occupied by one degree longitude around current lat/lon:\n     unitsPerDegreeX = d(lngLatToWorld([lng, lat])[0])/d(lng)\n       = scale * TILE_SIZE * DEGREES_TO_RADIANS / (2 * PI)\n     unitsPerDegreeY = d(lngLatToWorld([lng, lat])[1])/d(lat)\n       = -scale * TILE_SIZE * DEGREES_TO_RADIANS / cos(lat * DEGREES_TO_RADIANS)  / (2 * PI)\n   */\n  const unitsPerDegreeX = worldSize / 360;\n  const unitsPerDegreeY = unitsPerDegreeX / latCosine;\n\n  /**\n   * Number of pixels occupied by one meter around current lat/lon:\n   */\n  const altUnitsPerMeter = worldSize / EARTH_CIRCUMFERENCE / latCosine;\n\n  /**\n   * LngLat: longitude -> east and latitude -> north (bottom left)\n   * UTM meter offset: x -> east and y -> north (bottom left)\n   * World space: x -> east and y -> south (top left)\n   *\n   * Y needs to be flipped when converting delta degree/meter to delta pixels\n   */\n  result.unitsPerMeter = [altUnitsPerMeter, altUnitsPerMeter, altUnitsPerMeter];\n  result.metersPerUnit = [1 / altUnitsPerMeter, 1 / altUnitsPerMeter, 1 / altUnitsPerMeter];\n\n  result.unitsPerDegree = [unitsPerDegreeX, unitsPerDegreeY, altUnitsPerMeter];\n  result.degreesPerUnit = [1 / unitsPerDegreeX, 1 / unitsPerDegreeY, 1 / altUnitsPerMeter];\n\n  /**\n   * Taylor series 2nd order for 1/latCosine\n     f'(a) * (x - a)\n       = d(1/cos(lat * DEGREES_TO_RADIANS))/d(lat) * dLat\n       = DEGREES_TO_RADIANS * tan(lat * DEGREES_TO_RADIANS) / cos(lat * DEGREES_TO_RADIANS) * dLat\n   */\n  if (highPrecision) {\n    const latCosine2 = (DEGREES_TO_RADIANS * Math.tan(latitude * DEGREES_TO_RADIANS)) / latCosine;\n    const unitsPerDegreeY2 = (unitsPerDegreeX * latCosine2) / 2;\n    const altUnitsPerDegree2 = (worldSize / EARTH_CIRCUMFERENCE) * latCosine2;\n    const altUnitsPerMeter2 = (altUnitsPerDegree2 / unitsPerDegreeY) * altUnitsPerMeter;\n\n    result.unitsPerDegree2 = [0, unitsPerDegreeY2, altUnitsPerDegree2];\n    result.unitsPerMeter2 = [altUnitsPerMeter2, 0, altUnitsPerMeter2];\n  }\n\n  // Main results, used for converting meters to latlng deltas and scaling offsets\n  return result;\n}\n\n/**\n * Offset a lng/lat position by meterOffset (northing, easting)\n */\nexport function addMetersToLngLat(lngLatZ, xyz) {\n  const [longitude, latitude, z0] = lngLatZ;\n  const [x, y, z] = xyz;\n\n  const {unitsPerMeter, unitsPerMeter2} = getDistanceScales({\n    longitude,\n    latitude,\n    highPrecision: true\n  });\n\n  const worldspace = lngLatToWorld(lngLatZ);\n  worldspace[0] += x * (unitsPerMeter[0] + unitsPerMeter2[0] * y);\n  worldspace[1] += y * (unitsPerMeter[1] + unitsPerMeter2[1] * y);\n\n  // @ts-ignore\n  const newLngLat = worldToLngLat(worldspace);\n  const newZ = (z0 || 0) + (z || 0);\n\n  return Number.isFinite(z0) || Number.isFinite(z) ? [newLngLat[0], newLngLat[1], newZ] : newLngLat;\n}\n\n// ATTRIBUTION:\n// view and projection matrix creation is intentionally kept compatible with\n// mapbox-gl's implementation to ensure that seamless interoperation\n// with mapbox and react-map-gl. See: https://github.com/mapbox/mapbox-gl-js\n\nexport function getViewMatrix({\n  // Viewport props\n  height,\n  pitch,\n  bearing,\n  altitude,\n  // Pre-calculated parameters\n  scale,\n  center = null\n}) {\n  // VIEW MATRIX: PROJECTS MERCATOR WORLD COORDINATES\n  // Note that mercator world coordinates typically need to be flipped\n  //\n  // Note: As usual, matrix operation orders should be read in reverse\n  // since vectors will be multiplied from the right during transformation\n  const vm = createMat4();\n\n  // Move camera to altitude (along the pitch & bearing direction)\n  mat4.translate(vm, vm, [0, 0, -altitude]);\n\n  // Rotate by bearing, and then by pitch (which tilts the view)\n  mat4.rotateX(vm, vm, -pitch * DEGREES_TO_RADIANS);\n  mat4.rotateZ(vm, vm, bearing * DEGREES_TO_RADIANS);\n\n  scale /= height;\n  mat4.scale(vm, vm, [scale, scale, scale]);\n\n  if (center) {\n    mat4.translate(vm, vm, vec3.negate([], center));\n  }\n\n  return vm;\n}\n\n// PROJECTION MATRIX PARAMETERS\n// Variable fov (in radians)\nexport function getProjectionParameters({\n  width,\n  height,\n  fovy = altitudeToFovy(DEFAULT_ALTITUDE),\n  altitude,\n  pitch = 0,\n  nearZMultiplier = 1,\n  farZMultiplier = 1\n}) {\n  // For back-compatibility allow field of view to be\n  // derived from altitude\n  if (altitude !== undefined) {\n    fovy = altitudeToFovy(altitude);\n  }\n  const halfFov = 0.5 * fovy * DEGREES_TO_RADIANS;\n  const focalDistance = fovyToAltitude(fovy);\n\n  // Find the distance from the center point to the center top\n  // in focal distance units using law of sines.\n  const pitchRadians = pitch * DEGREES_TO_RADIANS;\n  const topHalfSurfaceDistance =\n    (Math.sin(halfFov) * focalDistance) /\n    Math.sin(Math.min(Math.max(Math.PI / 2 - pitchRadians - halfFov, 0.01), Math.PI - 0.01));\n\n  // Calculate z value of the farthest fragment that should be rendered.\n  const farZ = Math.sin(pitchRadians) * topHalfSurfaceDistance + focalDistance;\n\n  return {\n    fov: 2 * halfFov,\n    aspect: width / height,\n    focalDistance,\n    near: nearZMultiplier,\n    far: farZ * farZMultiplier\n  };\n}\n\n// PROJECTION MATRIX: PROJECTS FROM CAMERA (VIEW) SPACE TO CLIPSPACE\n// To match mapbox's z buffer:\n// <= 0.28 - nearZMultiplier: 0.1, farZmultiplier: 1\n// >= 0.29 - nearZMultiplier: 1 / height, farZMultiplier: 1.01\nexport function getProjectionMatrix({\n  width,\n  height,\n  pitch,\n  altitude,\n  fovy,\n  nearZMultiplier,\n  farZMultiplier\n}) {\n  const {fov, aspect, near, far} = getProjectionParameters({\n    width,\n    height,\n    altitude,\n    fovy,\n    pitch,\n    nearZMultiplier,\n    farZMultiplier\n  });\n\n  const projectionMatrix = mat4.perspective(\n    [],\n    fov, // fov in radians\n    aspect, // aspect ratio\n    near, // near plane\n    far // far plane\n  );\n\n  return projectionMatrix;\n}\n\n// Utility function to calculate the field of view such that\n// the focal distance is equal to the ground distance. This\n// is how mapbox's z fov is calculated\nexport function altitudeToFovy(altitude) {\n  return 2 * Math.atan(0.5 / altitude) * RADIANS_TO_DEGREES;\n}\n\nexport function fovyToAltitude(fovy) {\n  return 0.5 / Math.tan(0.5 * fovy * DEGREES_TO_RADIANS);\n}\n\n// Project flat coordinates to pixels on screen.\nexport function worldToPixels(xyz, pixelProjectionMatrix) {\n  const [x, y, z = 0] = xyz;\n  assert(Number.isFinite(x) && Number.isFinite(y) && Number.isFinite(z));\n\n  return transformVector(pixelProjectionMatrix, [x, y, z, 1]);\n}\n\n// Unproject pixels on screen to flat coordinates.\nexport function pixelsToWorld(xyz, pixelUnprojectionMatrix, targetZ = 0) {\n  const [x, y, z] = xyz;\n  assert(Number.isFinite(x) && Number.isFinite(y), 'invalid pixel coordinate');\n\n  if (Number.isFinite(z)) {\n    // Has depth component\n    const coord = transformVector(pixelUnprojectionMatrix, [x, y, z, 1]);\n    return coord;\n  }\n\n  // since we don't know the correct projected z value for the point,\n  // unproject two points to get a line and then find the point on that line with z=0\n  const coord0 = transformVector(pixelUnprojectionMatrix, [x, y, 0, 1]);\n  const coord1 = transformVector(pixelUnprojectionMatrix, [x, y, 1, 1]);\n\n  const z0 = coord0[2];\n  const z1 = coord1[2];\n\n  const t = z0 === z1 ? 0 : ((targetZ || 0) - z0) / (z1 - z0);\n  return vec2.lerp([], coord0, coord1, t);\n}\n","// @ts-nocheck TODO padding\nimport WebMercatorViewport from './web-mercator-viewport';\nimport assert from './assert';\nimport {log2} from './math-utils';\n\n// Returns map settings {latitude, longitude, zoom}\n// that will contain the provided corners within the provided width.\n// Only supports non-perspective mode.\n\nexport default function fitBounds({\n  width,\n  height,\n  bounds,\n  minExtent = 0, // 0.01 would be about 1000 meters (degree is ~110KM)\n  maxZoom = 24, // ~x4,000,000 => About 10 meter extents\n  // options\n  padding = 0,\n  offset = [0, 0]\n}) {\n  const [[west, south], [east, north]] = bounds;\n\n  if (Number.isFinite(padding)) {\n    const p = padding;\n    padding = {\n      top: p,\n      bottom: p,\n      left: p,\n      right: p\n    };\n  } else {\n    // Make sure all the required properties are set\n    assert(\n      Number.isFinite(padding.top) &&\n        Number.isFinite(padding.bottom) &&\n        Number.isFinite(padding.left) &&\n        Number.isFinite(padding.right)\n    );\n  }\n\n  const viewport = new WebMercatorViewport({\n    width,\n    height,\n    longitude: 0,\n    latitude: 0,\n    zoom: 0\n  });\n\n  const nw = viewport.project([west, north]);\n  const se = viewport.project([east, south]);\n\n  // width/height on the Web Mercator plane\n  const size = [\n    Math.max(Math.abs(se[0] - nw[0]), minExtent),\n    Math.max(Math.abs(se[1] - nw[1]), minExtent)\n  ];\n\n  const targetSize = [\n    width - padding.left - padding.right - Math.abs(offset[0]) * 2,\n    height - padding.top - padding.bottom - Math.abs(offset[1]) * 2\n  ];\n\n  assert(targetSize[0] > 0 && targetSize[1] > 0);\n\n  // scale = screen pixels per unit on the Web Mercator plane\n  const scaleX = targetSize[0] / size[0];\n  const scaleY = targetSize[1] / size[1];\n\n  // Find how much we need to shift the center\n  const offsetX = (padding.right - padding.left) / 2 / scaleX;\n  const offsetY = (padding.bottom - padding.top) / 2 / scaleY;\n\n  const center = [(se[0] + nw[0]) / 2 + offsetX, (se[1] + nw[1]) / 2 + offsetY];\n\n  const centerLngLat = viewport.unproject(center);\n  const zoom = Math.min(maxZoom, viewport.zoom + log2(Math.abs(Math.min(scaleX, scaleY))));\n\n  assert(Number.isFinite(zoom));\n\n  return {\n    longitude: centerLngLat[0],\n    latitude: centerLngLat[1],\n    zoom\n  };\n}\n","import {worldToLngLat} from './web-mercator-utils';\nimport * as vec2 from 'gl-matrix/vec2';\nimport {transformVector} from './math-utils';\n\nconst DEGREES_TO_RADIANS = Math.PI / 180;\n\n/*\n * Returns the quad at the intersection of the frustum and the given z plane\n * @param {WebMercatorViewport} viewport\n * @param {Number} z - elevation in meters\n */\nexport default function getBounds(viewport, z = 0) {\n  const {width, height, unproject} = viewport;\n  const unprojectOps = {targetZ: z};\n  const bottomLeft = unproject([0, height], unprojectOps);\n  const bottomRight = unproject([width, height], unprojectOps);\n  let topLeft;\n  let topRight;\n\n  const halfFov = viewport.fovy\n    ? 0.5 * viewport.fovy * DEGREES_TO_RADIANS\n    : Math.atan(0.5 / viewport.altitude);\n  const angleToGround = (90 - viewport.pitch) * DEGREES_TO_RADIANS;\n  // The top plane is parallel to the ground if halfFov == angleToGround\n  if (halfFov > angleToGround - 0.01) {\n    // intersect with the far plane\n    topLeft = unprojectOnFarPlane(viewport, 0, z);\n    topRight = unprojectOnFarPlane(viewport, width, z);\n  } else {\n    // intersect with the top plane\n    topLeft = unproject([0, 0], unprojectOps);\n    topRight = unproject([width, 0], unprojectOps);\n  }\n\n  return [bottomLeft, bottomRight, topRight, topLeft];\n}\n\n/*\n * Find a point on the far clipping plane of the viewport\n * @param {WebMercatorViewport} viewport\n * @param {Number} x - projected x in screen space\n * @param {Number} targetZ - the elevation of the point in meters\n */\nfunction unprojectOnFarPlane(viewport, x, targetZ) {\n  const {pixelUnprojectionMatrix} = viewport;\n  const coord0 = transformVector(pixelUnprojectionMatrix, [x, 0, 1, 1]);\n  const coord1 = transformVector(pixelUnprojectionMatrix, [x, viewport.height, 1, 1]);\n\n  const z = targetZ * viewport.distanceScales.unitsPerMeter[2];\n  const t = (z - coord0[2]) / (coord1[2] - coord0[2]);\n  const coord = vec2.lerp([], coord0, coord1, t);\n\n  const result = worldToLngLat(coord);\n  result[2] = targetZ;\n  return result;\n}\n","// View and Projection Matrix calculations for mapbox-js style map view properties\nimport {createMat4} from './math-utils';\n\nimport {\n  zoomToScale,\n  pixelsToWorld,\n  lngLatToWorld,\n  worldToLngLat,\n  worldToPixels,\n  altitudeToFovy,\n  fovyToAltitude,\n  DEFAULT_ALTITUDE,\n  getProjectionMatrix,\n  getDistanceScales,\n  getViewMatrix\n} from './web-mercator-utils';\nimport fitBounds from './fit-bounds';\nimport getBounds from './get-bounds';\n\nimport * as mat4 from 'gl-matrix/mat4';\nimport * as vec2 from 'gl-matrix/vec2';\nimport * as vec3 from 'gl-matrix/vec3';\n\nexport default class WebMercatorViewport {\n  // eslint-disable-next-line max-statements\n  constructor(\n    {\n      // Map state\n      width,\n      height,\n      latitude = 0,\n      longitude = 0,\n      zoom = 0,\n      pitch = 0,\n      bearing = 0,\n      altitude = null,\n      fovy = null,\n      position = null,\n      nearZMultiplier = 0.02,\n      farZMultiplier = 1.01\n    } = {width: 1, height: 1}\n  ) {\n    // Silently allow apps to send in 0,0 to facilitate isomorphic render etc\n    width = width || 1;\n    height = height || 1;\n\n    // `fovy` & `altitude` are independent parameters, one for the\n    // projection and the latter for the view matrix. In the past,\n    // the `fovy` was always derived from the `altitude`\n    if (fovy === null && altitude === null) {\n      altitude = DEFAULT_ALTITUDE;\n      fovy = altitudeToFovy(altitude);\n    } else if (fovy === null) {\n      fovy = altitudeToFovy(altitude);\n    } else if (altitude === null) {\n      altitude = fovyToAltitude(fovy);\n    }\n\n    const scale = zoomToScale(zoom);\n    // Altitude - prevent division by 0\n    // TODO - just throw an Error instead?\n    altitude = Math.max(0.75, altitude);\n\n    const distanceScales = getDistanceScales({longitude, latitude});\n\n    const center = lngLatToWorld([longitude, latitude]);\n    center[2] = 0;\n\n    if (position) {\n      vec3.add(center, center, vec3.mul([], position, distanceScales.unitsPerMeter));\n    }\n\n    this.projectionMatrix = getProjectionMatrix({\n      width,\n      height,\n      pitch,\n      fovy,\n      nearZMultiplier,\n      farZMultiplier\n    });\n\n    this.viewMatrix = getViewMatrix({\n      height,\n      scale,\n      center,\n      pitch,\n      bearing,\n      altitude\n    });\n\n    // Save parameters\n    this.width = width;\n    this.height = height;\n    this.scale = scale;\n\n    this.latitude = latitude;\n    this.longitude = longitude;\n    this.zoom = zoom;\n    this.pitch = pitch;\n    this.bearing = bearing;\n    this.altitude = altitude;\n    this.fovy = fovy;\n    this.center = center;\n    this.meterOffset = position || [0, 0, 0];\n\n    this.distanceScales = distanceScales;\n\n    this._initMatrices();\n\n    // Bind methods for easy access\n    this.equals = this.equals.bind(this);\n    this.project = this.project.bind(this);\n    this.unproject = this.unproject.bind(this);\n    this.projectPosition = this.projectPosition.bind(this);\n    this.unprojectPosition = this.unprojectPosition.bind(this);\n\n    Object.freeze(this);\n  }\n\n  _initMatrices() {\n    const {width, height, projectionMatrix, viewMatrix} = this;\n\n    // Note: As usual, matrix operations should be applied in \"reverse\" order\n    // since vectors will be multiplied in from the right during transformation\n    const vpm = createMat4();\n    mat4.multiply(vpm, vpm, projectionMatrix);\n    mat4.multiply(vpm, vpm, viewMatrix);\n    this.viewProjectionMatrix = vpm;\n\n    // Calculate matrices and scales needed for projection\n    /**\n     * Builds matrices that converts preprojected lngLats to screen pixels\n     * and vice versa.\n     * Note: Currently returns bottom-left coordinates!\n     * Note: Starts with the GL projection matrix and adds steps to the\n     *       scale and translate that matrix onto the window.\n     * Note: WebGL controls clip space to screen projection with gl.viewport\n     *       and does not need this step.\n     */\n    const m = createMat4();\n\n    // matrix for conversion from location to screen coordinates\n    mat4.scale(m, m, [width / 2, -height / 2, 1]);\n    mat4.translate(m, m, [1, -1, 0]);\n    mat4.multiply(m, m, vpm);\n\n    const mInverse = mat4.invert(createMat4(), m);\n    if (!mInverse) {\n      throw new Error('Pixel project matrix not invertible');\n    }\n\n    this.pixelProjectionMatrix = m;\n    this.pixelUnprojectionMatrix = mInverse;\n  }\n\n  // Two viewports are equal if width and height are identical, and if\n  // their view and projection matrices are (approximately) equal.\n  equals(viewport) {\n    if (!(viewport instanceof WebMercatorViewport)) {\n      return false;\n    }\n\n    return (\n      viewport.width === this.width &&\n      viewport.height === this.height &&\n      mat4.equals(viewport.projectionMatrix, this.projectionMatrix) &&\n      mat4.equals(viewport.viewMatrix, this.viewMatrix)\n    );\n  }\n\n  // Projects xyz (possibly latitude and longitude) to pixel coordinates in window\n  // using viewport projection parameters\n  project(xyz, {topLeft = true} = {}) {\n    const worldPosition = this.projectPosition(xyz);\n    const coord = worldToPixels(worldPosition, this.pixelProjectionMatrix);\n\n    const [x, y] = coord;\n    const y2 = topLeft ? y : this.height - y;\n    return xyz.length === 2 ? [x, y2] : [x, y2, coord[2]];\n  }\n\n  // Unproject pixel coordinates on screen onto world coordinates,\n  // (possibly [lon, lat]) on map.\n  unproject(xyz, {topLeft = true, targetZ = undefined} = {}) {\n    const [x, y, z] = xyz;\n\n    const y2 = topLeft ? y : this.height - y;\n    const targetZWorld = targetZ && targetZ * this.distanceScales.unitsPerMeter[2];\n    const coord = pixelsToWorld([x, y2, z], this.pixelUnprojectionMatrix, targetZWorld);\n    const [X, Y, Z] = this.unprojectPosition(coord);\n\n    if (Number.isFinite(z)) {\n      return [X, Y, Z];\n    }\n    return Number.isFinite(targetZ) ? [X, Y, targetZ] : [X, Y];\n  }\n\n  // NON_LINEAR PROJECTION HOOKS\n  // Used for web meractor projection\n\n  projectPosition(xyz) {\n    const [X, Y] = lngLatToWorld(xyz);\n    const Z = (xyz[2] || 0) * this.distanceScales.unitsPerMeter[2];\n    return [X, Y, Z];\n  }\n\n  unprojectPosition(xyz) {\n    const [X, Y] = worldToLngLat(xyz);\n    const Z = (xyz[2] || 0) * this.distanceScales.metersPerUnit[2];\n    return [X, Y, Z];\n  }\n\n  // Project [lng,lat] on sphere onto [x,y] on 512*512 Mercator Zoom 0 tile.\n  projectFlat(lngLat) {\n    return lngLatToWorld(lngLat);\n  }\n\n  // Unproject world point [x,y] on map onto {lat, lon} on sphere\n  unprojectFlat(xy) {\n    return worldToLngLat(xy);\n  }\n\n  // Get the map center that place a given [lng, lat] coordinate at screen point [x, y]\n  getMapCenterByLngLatPosition({lngLat, pos}) {\n    const fromLocation = pixelsToWorld(pos, this.pixelUnprojectionMatrix);\n    const toLocation = lngLatToWorld(lngLat);\n\n    const translate = vec2.add([], toLocation, vec2.negate([], fromLocation));\n    const newCenter = vec2.add([], this.center, translate);\n\n    return worldToLngLat(newCenter);\n  }\n\n  // Legacy method name\n  getLocationAtPoint({lngLat, pos}) {\n    return this.getMapCenterByLngLatPosition({lngLat, pos});\n  }\n\n  // Returns a new viewport that fit around the given rectangle.\n  fitBounds(bounds, options = {}) {\n    const {width, height} = this;\n    const {longitude, latitude, zoom} = fitBounds(Object.assign({width, height, bounds}, options));\n    return new WebMercatorViewport({width, height, longitude, latitude, zoom});\n  }\n\n  getBounds(options) {\n    const corners = this.getBoundingRegion(options);\n\n    const west = Math.min(...corners.map((p) => p[0]));\n    const east = Math.max(...corners.map((p) => p[0]));\n    const south = Math.min(...corners.map((p) => p[1]));\n    const north = Math.max(...corners.map((p) => p[1]));\n    return [\n      [west, south],\n      [east, north]\n    ];\n  }\n\n  getBoundingRegion(options = {}) {\n    return getBounds(this, options.z || 0);\n  }\n}\n","import {worldToLngLat} from './web-mercator-utils';\nimport {mod, log2} from './math-utils';\n\n// defined by mapbox-gl\nconst TILE_SIZE = 512;\n\n// Apply mathematical constraints to viewport props\n// eslint-disable-next-line complexity\nexport default function normalizeViewportProps({\n  width,\n  height,\n  longitude,\n  latitude,\n  zoom,\n  pitch = 0,\n  bearing = 0\n}) {\n  // Normalize degrees\n  if (longitude < -180 || longitude > 180) {\n    longitude = mod(longitude + 180, 360) - 180;\n  }\n  if (bearing < -180 || bearing > 180) {\n    bearing = mod(bearing + 180, 360) - 180;\n  }\n\n  // Constrain zoom and shift center at low zoom levels\n  const minZoom = log2(height / TILE_SIZE);\n  if (zoom <= minZoom) {\n    zoom = minZoom;\n    latitude = 0;\n  } else {\n    // Eliminate white space above and below the map\n    const halfHeightPixels = height / 2 / Math.pow(2, zoom);\n    const minLatitude = worldToLngLat([0, halfHeightPixels])[1];\n    if (latitude < minLatitude) {\n      latitude = minLatitude;\n    } else {\n      const maxLatitude = worldToLngLat([0, TILE_SIZE - halfHeightPixels])[1];\n      if (latitude > maxLatitude) {\n        latitude = maxLatitude;\n      }\n    }\n  }\n\n  return {width, height, longitude, latitude, zoom, pitch, bearing};\n}\n","import {lerp} from './math-utils';\nimport {scaleToZoom, zoomToScale, lngLatToWorld, worldToLngLat} from './web-mercator-utils';\nimport * as vec2 from 'gl-matrix/vec2';\n\nconst EPSILON = 0.01;\nconst VIEWPORT_TRANSITION_PROPS = ['longitude', 'latitude', 'zoom'];\nconst DEFAULT_OPTS = {\n  curve: 1.414,\n  speed: 1.2\n  // screenSpeed and maxDuration are used only if specified\n};\n\n/**\n * mapbox-gl-js flyTo : https://www.mapbox.com/mapbox-gl-js/api/#map#flyto.\n * It implements “Smooth and efficient zooming and panning.” algorithm by\n * \"Jarke J. van Wijk and Wim A.A. Nuij\"\n */\nexport default function flyToViewport(startProps, endProps, t, opts = {}) {\n  // Equations from above paper are referred where needed.\n\n  const viewport = {};\n\n  const {startZoom, startCenterXY, uDelta, w0, u1, S, rho, rho2, r0} = getFlyToTransitionParams(\n    startProps,\n    endProps,\n    opts\n  );\n\n  // If change in center is too small, do linear interpolaiton.\n  if (u1 < EPSILON) {\n    for (const key of VIEWPORT_TRANSITION_PROPS) {\n      const startValue = startProps[key];\n      const endValue = endProps[key];\n      viewport[key] = lerp(startValue, endValue, t);\n    }\n    return viewport;\n  }\n\n  const s = t * S;\n\n  const w = Math.cosh(r0) / Math.cosh(r0 + rho * s);\n  const u = (w0 * ((Math.cosh(r0) * Math.tanh(r0 + rho * s) - Math.sinh(r0)) / rho2)) / u1;\n\n  const scaleIncrement = 1 / w; // Using w method for scaling.\n  const newZoom = startZoom + scaleToZoom(scaleIncrement);\n\n  const newCenterWorld = vec2.scale([], uDelta, u);\n  vec2.add(newCenterWorld, newCenterWorld, startCenterXY);\n\n  const newCenter = worldToLngLat(newCenterWorld);\n  viewport.longitude = newCenter[0];\n  viewport.latitude = newCenter[1];\n  viewport.zoom = newZoom;\n  return viewport;\n}\n\n// returns transition duration in milliseconds\nexport function getFlyToDuration(startProps, endProps, opts = {}) {\n  opts = Object.assign({}, DEFAULT_OPTS, opts);\n  const {screenSpeed, speed, maxDuration} = opts;\n  const {S, rho} = getFlyToTransitionParams(startProps, endProps, opts);\n  const length = 1000 * S;\n  let duration;\n  if (Number.isFinite(screenSpeed)) {\n    duration = length / (screenSpeed / rho);\n  } else {\n    duration = length / speed;\n  }\n\n  return Number.isFinite(maxDuration) && duration > maxDuration ? 0 : duration;\n}\n\n// Private Methods\n\n// Calculate all parameters that are static for given startProps and endProps\nfunction getFlyToTransitionParams(startProps, endProps, opts) {\n  opts = Object.assign({}, DEFAULT_OPTS, opts);\n  const rho = opts.curve;\n  const startZoom = startProps.zoom;\n  const startCenter = [startProps.longitude, startProps.latitude];\n  const startScale = zoomToScale(startZoom);\n  const endZoom = endProps.zoom;\n  const endCenter = [endProps.longitude, endProps.latitude];\n  const scale = zoomToScale(endZoom - startZoom);\n\n  const startCenterXY = lngLatToWorld(startCenter);\n  const endCenterXY = lngLatToWorld(endCenter);\n  const uDelta = vec2.sub([], endCenterXY, startCenterXY);\n\n  const w0 = Math.max(startProps.width, startProps.height);\n  const w1 = w0 / scale;\n  const u1 = vec2.length(uDelta) * startScale;\n  // u0 is treated as '0' in Eq (9).\n\n  // If u1 is too small, will generate invalid number\n  const _u1 = Math.max(u1, EPSILON);\n\n  // Implement Equation (9) from above algorithm.\n  const rho2 = rho * rho;\n  const b0 = (w1 * w1 - w0 * w0 + rho2 * rho2 * _u1 * _u1) / (2 * w0 * rho2 * _u1);\n  const b1 = (w1 * w1 - w0 * w0 - rho2 * rho2 * _u1 * _u1) / (2 * w1 * rho2 * _u1);\n  const r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0);\n  const r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n  const S = (r1 - r0) / rho;\n\n  return {startZoom, startCenterXY, uDelta, w0, u1, S, rho, rho2, r0, r1};\n}\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport MathArray from './base/math-array';\nimport {checkNumber, checkVector} from '../lib/validators';\nimport assert from '../lib/assert';\n\n// @ts-ignore: error TS2307: Cannot find module 'gl-matrix/...'.\nimport * as quat from 'gl-matrix/quat';\n// @ts-ignore: error TS2307: Cannot find module 'gl-matrix/...'.\nimport * as vec4 from 'gl-matrix/vec4';\n\nconst IDENTITY_QUATERNION = [0, 0, 0, 1];\n\nexport default class Quaternion extends MathArray {\n  constructor(x = 0, y = 0, z = 0, w = 1) {\n    // PERF NOTE: initialize elements as double precision numbers\n    super(-0, -0, -0, -0);\n    // eslint-disable-next-line prefer-rest-params\n    if (Array.isArray(x) && arguments.length === 1) {\n      this.copy(x);\n    } else {\n      this.set(x, y, z, w);\n    }\n  }\n\n  copy(array) {\n    this[0] = array[0];\n    this[1] = array[1];\n    this[2] = array[2];\n    this[3] = array[3];\n    return this.check();\n  }\n\n  set(x, y, z, w) {\n    this[0] = x;\n    this[1] = y;\n    this[2] = z;\n    this[3] = w;\n    return this.check();\n  }\n\n  // Creates a quaternion from the given 3x3 rotation matrix.\n  // NOTE: The resultant quaternion is not normalized, so you should\n  // be sure to renormalize the quaternion yourself where necessary.\n  fromMatrix3(m) {\n    quat.fromMat3(this, m);\n    return this.check();\n  }\n\n  // Set a quat to the identity quaternion\n  identity() {\n    quat.identity(this);\n    return this.check();\n  }\n\n  fromAxisRotation(axis, rad) {\n    quat.setAxisAngle(this, axis, rad);\n    return this.check();\n  }\n\n  // Set the components of a quat to the given values\n  // set(i, j, k, l) {\n  //   quat.set(this, i, j, k, l);\n  //   return this.check();\n  // }\n\n  // Sets a quat from the given angle and rotation axis, then returns it.\n  setAxisAngle(axis, rad) {\n    return this.fromAxisRotation(axis, rad);\n  }\n\n  // Getters/setters\n  /* eslint-disable no-multi-spaces, brace-style, no-return-assign */\n  get ELEMENTS() {\n    return 4;\n  }\n\n  get x() {\n    return this[0];\n  }\n\n  set x(value) {\n    this[0] = checkNumber(value);\n  }\n\n  get y() {\n    return this[1];\n  }\n\n  set y(value) {\n    this[1] = checkNumber(value);\n  }\n\n  get z() {\n    return this[2];\n  }\n\n  set z(value) {\n    this[2] = checkNumber(value);\n  }\n\n  get w() {\n    return this[3];\n  }\n\n  set w(value) {\n    this[3] = checkNumber(value);\n  }\n\n  /* eslint-enable no-multi-spaces, brace-style, no-return-assign */\n\n  // Calculates the length of a quat\n  len() {\n    return quat.length(this);\n  }\n\n  // Calculates the squared length of a quat\n  lengthSquared() {\n    return quat.squaredLength(this);\n  }\n\n  // Calculates the dot product of two quat's\n  // @return {Number}\n  dot(a, b) {\n    if (b !== undefined) {\n      throw new Error('Quaternion.dot only takes one argument');\n    }\n    return quat.dot(this, a);\n  }\n\n  // Gets the rotation axis and angle for a given quaternion.\n  // If a quaternion is created with setAxisAngle, this method will\n  // return the same values as providied in the original parameter\n  // list OR functionally equivalent values.\n  // Example: The quaternion formed by axis [0, 0, 1] and angle -90\n  // is the same as the quaternion formed by [0, 0, 1] and 270.\n  // This method favors the latter.\n  // @return {{[x,y,z], Number}}\n  // getAxisAngle() {\n  //   const axis = [];\n  //   const angle = quat.getAxisAngle(axis, this);\n  //   return {axis, angle};\n  // }\n\n  // MODIFIERS\n\n  // Sets a quaternion to represent the shortest rotation from one vector\n  // to another. Both vectors are assumed to be unit length.\n  rotationTo(vectorA, vectorB) {\n    quat.rotationTo(this, vectorA, vectorB);\n    return this.check();\n  }\n\n  // Sets the specified quaternion with values corresponding to the given axes.\n  // Each axis is a vec3 and is expected to be unit length and perpendicular\n  // to all other specified axes.\n  // setAxes() {\n  //   Number\n  // }\n\n  // Performs a spherical linear interpolation with two control points\n  // sqlerp() {\n  //   Number;\n  // }\n\n  // Adds two quat's\n  add(a, b) {\n    if (b !== undefined) {\n      throw new Error('Quaternion.add only takes one argument');\n    }\n    quat.add(this, this, a);\n    return this.check();\n  }\n\n  // Calculates the W component of a quat from the X, Y, and Z components.\n  // Any existing W component will be ignored.\n  calculateW() {\n    quat.calculateW(this, this);\n    return this.check();\n  }\n\n  // Calculates the conjugate of a quat If the quaternion is normalized,\n  // this function is faster than quat.inverse and produces the same result.\n  conjugate() {\n    quat.conjugate(this, this);\n    return this.check();\n  }\n\n  // Calculates the inverse of a quat\n  invert() {\n    quat.invert(this, this);\n    return this.check();\n  }\n\n  // Performs a linear interpolation between two quat's\n  lerp(a, b, t) {\n    quat.lerp(this, a, b, t);\n    return this.check();\n  }\n\n  // Multiplies two quat's\n  multiplyRight(a, b) {\n    assert(!b); // Quaternion.multiply only takes one argument\n    quat.multiply(this, this, a);\n    return this.check();\n  }\n\n  multiplyLeft(a, b) {\n    assert(!b); // Quaternion.multiply only takes one argument\n    quat.multiply(this, a, this);\n    return this.check();\n  }\n\n  // Normalize a quat\n  normalize() {\n    // Handle 0 case\n    const length = this.len();\n    const l = length > 0 ? 1 / length : 0;\n    this[0] = this[0] * l;\n    this[1] = this[1] * l;\n    this[2] = this[2] * l;\n    this[3] = this[3] * l;\n    // Set to [0, 0, 0, 1] if length is 0\n    if (length === 0) {\n      this[3] = 1;\n    }\n    return this.check();\n  }\n\n  // Rotates a quaternion by the given angle about the X axis\n  rotateX(rad) {\n    quat.rotateX(this, this, rad);\n    return this.check();\n  }\n\n  // Rotates a quaternion by the given angle about the Y axis\n  rotateY(rad) {\n    quat.rotateY(this, this, rad);\n    return this.check();\n  }\n\n  // Rotates a quaternion by the given angle about the Z axis\n  rotateZ(rad) {\n    quat.rotateZ(this, this, rad);\n    return this.check();\n  }\n\n  // Scales a quat by a scalar number\n  scale(b) {\n    quat.scale(this, this, b);\n    return this.check();\n  }\n\n  // Performs a spherical linear interpolation between two quat\n  slerp(start, target, ratio) {\n    // eslint-disable-next-line prefer-rest-params\n    switch (arguments.length) {\n      case 1: // Deprecated signature ({start, target, ratio})\n        // eslint-disable-next-line prefer-rest-params\n        ({start = IDENTITY_QUATERNION, target, ratio} = arguments[0]);\n        break;\n      case 2: // THREE.js compatibility signature (target, ration)\n        // eslint-disable-next-line prefer-rest-params\n        [target, ratio] = arguments;\n        start = this; // eslint-disable-line\n        break;\n      default: // Default signature: (start, target, ratio)\n    }\n    quat.slerp(this, start, target, ratio);\n    return this.check();\n  }\n\n  transformVector4(vector, result = vector) {\n    vec4.transformQuat(result, vector, this);\n    return checkVector(result, 4);\n  }\n\n  // THREE.js Math API compatibility\n  lengthSq() {\n    return this.lengthSquared();\n  }\n\n  setFromAxisAngle(axis, rad) {\n    return this.setAxisAngle(axis, rad);\n  }\n\n  premultiply(a, b) {\n    return this.multiplyLeft(a, b);\n  }\n\n  multiply(a, b) {\n    return this.multiplyRight(a, b);\n  }\n}\n","// NOTE: Added to make Cesium-derived test cases work\n// TODO: Determine if/how to keep\nexport default {\n  EPSILON1: 1e-1,\n  EPSILON2: 1e-2,\n  EPSILON3: 1e-3,\n  EPSILON4: 1e-4,\n  EPSILON5: 1e-5,\n  EPSILON6: 1e-6,\n  EPSILON7: 1e-7,\n  EPSILON8: 1e-8,\n  EPSILON9: 1e-9,\n  EPSILON10: 1e-10,\n  EPSILON11: 1e-11,\n  EPSILON12: 1e-12,\n  EPSILON13: 1e-13,\n  EPSILON14: 1e-14,\n  EPSILON15: 1e-15,\n  EPSILON16: 1e-16,\n  EPSILON17: 1e-17,\n  EPSILON18: 1e-18,\n  EPSILON19: 1e-19,\n  EPSILON20: 1e-20,\n\n  PI_OVER_TWO: Math.PI / 2,\n  PI_OVER_FOUR: Math.PI / 4,\n  PI_OVER_SIX: Math.PI / 6,\n\n  TWO_PI: Math.PI * 2\n};\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport Matrix from './base/matrix';\nimport {checkVector, deprecated} from '../lib/validators';\n// eslint-disable-next-line camelcase\nimport {vec4_transformMat3} from '../lib/gl-matrix-extras';\n\n// @ts-ignore: error TS2307: Cannot find module 'gl-matrix/...'.\nimport * as mat3 from 'gl-matrix/mat3';\n// @ts-ignore: error TS2307: Cannot find module 'gl-matrix/...'.\nimport * as vec2 from 'gl-matrix/vec2';\n// @ts-ignore: error TS2307: Cannot find module 'gl-matrix/...'.\nimport * as vec3 from 'gl-matrix/vec3';\n\nconst IDENTITY = Object.freeze([1, 0, 0, 0, 1, 0, 0, 0, 1]);\nconst ZERO = Object.freeze([0, 0, 0, 0, 0, 0, 0, 0, 0]);\n\nconst INDICES = Object.freeze({\n  COL0ROW0: 0,\n  COL0ROW1: 1,\n  COL0ROW2: 2,\n  COL1ROW0: 3,\n  COL1ROW1: 4,\n  COL1ROW2: 5,\n  COL2ROW0: 6,\n  COL2ROW1: 7,\n  COL2ROW2: 8\n});\n\nconst constants = {};\n\nexport default class Matrix3 extends Matrix {\n  static get IDENTITY() {\n    constants.IDENTITY = constants.IDENTITY || Object.freeze(new Matrix3(IDENTITY));\n    return constants.IDENTITY;\n  }\n\n  static get ZERO() {\n    constants.ZERO = constants.ZERO || Object.freeze(new Matrix3(ZERO));\n    return constants.ZERO;\n  }\n\n  get ELEMENTS() {\n    return 9;\n  }\n\n  get RANK() {\n    return 3;\n  }\n\n  get INDICES() {\n    return INDICES;\n  }\n\n  constructor(array) {\n    // PERF NOTE: initialize elements as double precision numbers\n    super(-0, -0, -0, -0, -0, -0, -0, -0, -0);\n    if (arguments.length === 1 && Array.isArray(array)) {\n      this.copy(array);\n    } else {\n      this.identity();\n    }\n  }\n\n  copy(array) {\n    this[0] = array[0];\n    this[1] = array[1];\n    this[2] = array[2];\n    this[3] = array[3];\n    this[4] = array[4];\n    this[5] = array[5];\n    this[6] = array[6];\n    this[7] = array[7];\n    this[8] = array[8];\n    return this.check();\n  }\n\n  // accepts column major order, stores in column major order\n  // eslint-disable-next-line max-params\n  set(m00, m10, m20, m01, m11, m21, m02, m12, m22) {\n    this[0] = m00;\n    this[1] = m10;\n    this[2] = m20;\n    this[3] = m01;\n    this[4] = m11;\n    this[5] = m21;\n    this[6] = m02;\n    this[7] = m12;\n    this[8] = m22;\n    return this.check();\n  }\n\n  // accepts row major order, stores as column major\n  // eslint-disable-next-line max-params\n  setRowMajor(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n    this[0] = m00;\n    this[1] = m10;\n    this[2] = m20;\n    this[3] = m01;\n    this[4] = m11;\n    this[5] = m21;\n    this[6] = m02;\n    this[7] = m12;\n    this[8] = m22;\n    return this.check();\n  }\n\n  // Accessors\n\n  determinant() {\n    return mat3.determinant(this);\n  }\n\n  // Constructors\n\n  identity() {\n    return this.copy(IDENTITY);\n  }\n\n  // Calculates a 3x3 matrix from the given quaternion\n  // q quat  Quaternion to create matrix from\n  fromQuaternion(q) {\n    mat3.fromQuat(this, q);\n    return this.check();\n  }\n\n  // Modifiers\n\n  transpose() {\n    mat3.transpose(this, this);\n    return this.check();\n  }\n\n  invert() {\n    mat3.invert(this, this);\n    return this.check();\n  }\n\n  // Operations\n\n  multiplyLeft(a) {\n    mat3.multiply(this, a, this);\n    return this.check();\n  }\n\n  multiplyRight(a) {\n    mat3.multiply(this, this, a);\n    return this.check();\n  }\n\n  rotate(radians) {\n    mat3.rotate(this, this, radians);\n    return this.check();\n  }\n\n  scale(factor) {\n    if (Array.isArray(factor)) {\n      mat3.scale(this, this, factor);\n    } else {\n      mat3.scale(this, this, [factor, factor, factor]);\n    }\n\n    return this.check();\n  }\n\n  translate(vec) {\n    mat3.translate(this, this, vec);\n    return this.check();\n  }\n\n  // Transforms\n\n  transform(vector, result) {\n    switch (vector.length) {\n      case 2:\n        result = vec2.transformMat3(result || [-0, -0], vector, this);\n        break;\n      case 3:\n        result = vec3.transformMat3(result || [-0, -0, -0], vector, this);\n        break;\n      case 4:\n        result = vec4_transformMat3(result || [-0, -0, -0, -0], vector, this);\n        break;\n      default:\n        throw new Error('Illegal vector');\n    }\n    checkVector(result, vector.length);\n    return result;\n  }\n\n  // DEPRECATED IN 3.0\n\n  transformVector(vector, result) {\n    deprecated('Matrix3.transformVector');\n    return this.transform(vector, result);\n  }\n\n  transformVector2(vector, result) {\n    deprecated('Matrix3.transformVector');\n    return this.transform(vector, result);\n  }\n\n  transformVector3(vector, result) {\n    deprecated('Matrix3.transformVector');\n    return this.transform(vector, result);\n  }\n}\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport Vector from './base/vector';\nimport {config, isArray} from '../lib/common';\nimport {checkNumber} from '../lib/validators';\n\n// @ts-ignore: error TS2307: Cannot find module 'gl-matrix/...'.\nimport * as vec2 from 'gl-matrix/vec2';\n// eslint-disable-next-line camelcase\nimport {vec2_transformMat4AsVector} from '../lib/gl-matrix-extras';\n\nexport default class Vector2 extends Vector {\n  // Creates a new, empty vec2\n  constructor(x = 0, y = 0) {\n    // PERF NOTE: initialize elements as double precision numbers\n    super(2); // -0, -0);\n    if (isArray(x) && arguments.length === 1) {\n      this.copy(x);\n    } else {\n      if (config.debug) {\n        checkNumber(x);\n        checkNumber(y);\n      }\n      this[0] = x;\n      this[1] = y;\n    }\n  }\n\n  set(x, y) {\n    this[0] = x;\n    this[1] = y;\n    return this.check();\n  }\n\n  copy(array) {\n    this[0] = array[0];\n    this[1] = array[1];\n    return this.check();\n  }\n\n  fromObject(object) {\n    if (config.debug) {\n      checkNumber(object.x);\n      checkNumber(object.y);\n    }\n    this[0] = object.x;\n    this[1] = object.y;\n    return this.check();\n  }\n\n  toObject(object) {\n    object.x = this[0];\n    object.y = this[1];\n    return object;\n  }\n\n  // Getters/setters\n  get ELEMENTS() {\n    return 2;\n  }\n\n  // x,y inherited from Vector\n\n  horizontalAngle() {\n    return Math.atan2(this.y, this.x);\n  }\n\n  verticalAngle() {\n    return Math.atan2(this.x, this.y);\n  }\n\n  // Transforms\n\n  transform(matrix4) {\n    return this.transformAsPoint(matrix4);\n  }\n\n  // transforms as point (4th component is implicitly 1)\n  transformAsPoint(matrix4) {\n    vec2.transformMat4(this, this, matrix4);\n    return this.check();\n  }\n\n  // transforms as vector  (4th component is implicitly 0, ignores translation. slightly faster)\n  transformAsVector(matrix4) {\n    vec2_transformMat4AsVector(this, this, matrix4);\n    return this.check();\n  }\n\n  transformByMatrix3(matrix3) {\n    vec2.transformMat3(this, this, matrix3);\n    return this.check();\n  }\n\n  transformByMatrix2x3(matrix2x3) {\n    vec2.transformMat2d(this, this, matrix2x3);\n    return this.check();\n  }\n\n  transformByMatrix2(matrix2) {\n    vec2.transformMat2(this, this, matrix2);\n    return this.check();\n  }\n}\n","import {\n  Feature,\n  FeatureCollection,\n  Geometry,\n  Polygon,\n  MultiLineString,\n  MultiPolygon,\n  Position,\n  PolygonCoordinates,\n} from '../geojson-types';\n\nexport class ImmutableFeatureCollection {\n  featureCollection: FeatureCollection;\n\n  constructor(featureCollection: FeatureCollection) {\n    this.featureCollection = featureCollection;\n  }\n\n  getObject() {\n    return this.featureCollection;\n  }\n\n  /**\n   * Replaces the position deeply nested withing the given feature's geometry.\n   * Works with Point, MultiPoint, LineString, MultiLineString, Polygon, and MultiPolygon.\n   *\n   * @param featureIndex The index of the feature to update\n   * @param positionIndexes An array containing the indexes of the position to replace\n   * @param updatedPosition The updated position to place in the result (i.e. [lng, lat])\n   *\n   * @returns A new `ImmutableFeatureCollection` with the given position replaced. Does not modify this `ImmutableFeatureCollection`.\n   */\n  replacePosition(\n    featureIndex: number,\n    positionIndexes: number[] | null | undefined,\n    updatedPosition: Position\n  ): ImmutableFeatureCollection {\n    const geometry = this.featureCollection.features[featureIndex].geometry;\n\n    const isPolygonal = geometry.type === 'Polygon' || geometry.type === 'MultiPolygon';\n    const updatedGeometry: any = {\n      ...geometry,\n      coordinates: immutablyReplacePosition(\n        geometry.coordinates,\n        positionIndexes,\n        updatedPosition,\n        isPolygonal\n      ),\n    };\n\n    return this.replaceGeometry(featureIndex, updatedGeometry);\n  }\n\n  /**\n   * Removes a position deeply nested in a GeoJSON geometry coordinates array.\n   * Works with MultiPoint, LineString, MultiLineString, Polygon, and MultiPolygon.\n   *\n   * @param featureIndex The index of the feature to update\n   * @param positionIndexes An array containing the indexes of the postion to remove\n   *\n   * @returns A new `ImmutableFeatureCollection` with the given coordinate removed. Does not modify this `ImmutableFeatureCollection`.\n   */\n  removePosition(\n    featureIndex: number,\n    positionIndexes: number[] | null | undefined\n  ): ImmutableFeatureCollection {\n    const geometry = this.featureCollection.features[featureIndex].geometry;\n\n    if (geometry.type === 'Point') {\n      throw Error(`Can't remove a position from a Point or there'd be nothing left`);\n    }\n    if (\n      geometry.type === 'MultiPoint' && // only 1 point left\n      geometry.coordinates.length < 2\n    ) {\n      throw Error(`Can't remove the last point of a MultiPoint or there'd be nothing left`);\n    }\n    if (\n      geometry.type === 'LineString' && // only 2 positions\n      geometry.coordinates.length < 3\n    ) {\n      throw Error(`Can't remove position. LineString must have at least two positions`);\n    }\n    if (\n      geometry.type === 'Polygon' && // outer ring is a triangle\n      geometry.coordinates[0].length < 5 &&\n      Array.isArray(positionIndexes) && // trying to remove from outer ring\n      positionIndexes[0] === 0\n    ) {\n      throw Error(`Can't remove position. Polygon's outer ring must have at least four positions`);\n    }\n    if (\n      geometry.type === 'MultiLineString' && // only 1 LineString left\n      geometry.coordinates.length === 1 && // only 2 positions\n      geometry.coordinates[0].length < 3\n    ) {\n      throw Error(`Can't remove position. MultiLineString must have at least two positions`);\n    }\n    if (\n      geometry.type === 'MultiPolygon' && // only 1 polygon left\n      geometry.coordinates.length === 1 && // outer ring is a triangle\n      geometry.coordinates[0][0].length < 5 &&\n      Array.isArray(positionIndexes) && // trying to remove from first polygon\n      positionIndexes[0] === 0 && // trying to remove from outer ring\n      positionIndexes[1] === 0\n    ) {\n      throw Error(\n        `Can't remove position. MultiPolygon's outer ring must have at least four positions`\n      );\n    }\n\n    const isPolygonal = geometry.type === 'Polygon' || geometry.type === 'MultiPolygon';\n    const updatedGeometry: any = {\n      ...geometry,\n      coordinates: immutablyRemovePosition(geometry.coordinates, positionIndexes, isPolygonal),\n    };\n\n    // Handle cases where incomplete geometries need pruned (e.g. holes that were triangles)\n    pruneGeometryIfNecessary(updatedGeometry);\n\n    return this.replaceGeometry(featureIndex, updatedGeometry);\n  }\n\n  /**\n   * Adds a position deeply nested in a GeoJSON geometry coordinates array.\n   * Works with MultiPoint, LineString, MultiLineString, Polygon, and MultiPolygon.\n   *\n   * @param featureIndex The index of the feature to update\n   * @param positionIndexes An array containing the indexes of the position that will proceed the new position\n   * @param positionToAdd The new position to place in the result (i.e. [lng, lat])\n   *\n   * @returns A new `ImmutableFeatureCollection` with the given coordinate removed. Does not modify this `ImmutableFeatureCollection`.\n   */\n  addPosition(\n    featureIndex: number,\n    positionIndexes: number[] | null | undefined,\n    positionToAdd: Position\n  ): ImmutableFeatureCollection {\n    const geometry = this.featureCollection.features[featureIndex].geometry;\n\n    if (geometry.type === 'Point') {\n      throw new Error('Unable to add a position to a Point feature');\n    }\n\n    const isPolygonal = geometry.type === 'Polygon' || geometry.type === 'MultiPolygon';\n    const updatedGeometry: any = {\n      ...geometry,\n      coordinates: immutablyAddPosition(\n        geometry.coordinates,\n        positionIndexes,\n        positionToAdd,\n        isPolygonal\n      ),\n    };\n\n    return this.replaceGeometry(featureIndex, updatedGeometry);\n  }\n\n  replaceGeometry(featureIndex: number, geometry: Geometry): ImmutableFeatureCollection {\n    const updatedFeature: any = {\n      ...this.featureCollection.features[featureIndex],\n      geometry,\n    };\n\n    const updatedFeatureCollection = {\n      ...this.featureCollection,\n      features: [\n        ...this.featureCollection.features.slice(0, featureIndex),\n        updatedFeature,\n        ...this.featureCollection.features.slice(featureIndex + 1),\n      ],\n    };\n\n    return new ImmutableFeatureCollection(updatedFeatureCollection);\n  }\n\n  addFeature(feature: Feature): ImmutableFeatureCollection {\n    return this.addFeatures([feature]);\n  }\n\n  addFeatures(features: Feature[]): ImmutableFeatureCollection {\n    const updatedFeatureCollection = {\n      ...this.featureCollection,\n      features: [...this.featureCollection.features, ...features],\n    };\n\n    return new ImmutableFeatureCollection(updatedFeatureCollection);\n  }\n\n  deleteFeature(featureIndex: number) {\n    return this.deleteFeatures([featureIndex]);\n  }\n\n  deleteFeatures(featureIndexes: number[]) {\n    const features = [...this.featureCollection.features];\n    featureIndexes.sort();\n    for (let i = featureIndexes.length - 1; i >= 0; i--) {\n      const featureIndex = featureIndexes[i];\n      if (featureIndex >= 0 && featureIndex < features.length) {\n        features.splice(featureIndex, 1);\n      }\n    }\n\n    const updatedFeatureCollection = {\n      ...this.featureCollection,\n      features,\n    };\n\n    return new ImmutableFeatureCollection(updatedFeatureCollection);\n  }\n}\n\nfunction getUpdatedPosition(updatedPosition: Position, previousPosition: Position): Position {\n  // This function checks if the updatedPosition is missing elevation\n  // and copies it from previousPosition\n  if (updatedPosition.length === 2 && previousPosition.length === 3) {\n    const elevation = (previousPosition as any)[2];\n    return [updatedPosition[0], updatedPosition[1], elevation];\n  }\n\n  return updatedPosition;\n}\n\nfunction immutablyReplacePosition(\n  coordinates: any,\n  positionIndexes: number[] | null | undefined,\n  updatedPosition: Position,\n  isPolygonal: boolean\n): any {\n  if (!positionIndexes) {\n    return coordinates;\n  }\n  if (positionIndexes.length === 0) {\n    return getUpdatedPosition(updatedPosition, coordinates);\n  }\n  if (positionIndexes.length === 1) {\n    const updated = [\n      ...coordinates.slice(0, positionIndexes[0]),\n      getUpdatedPosition(updatedPosition, coordinates[positionIndexes[0]]),\n      ...coordinates.slice(positionIndexes[0] + 1),\n    ];\n\n    if (\n      isPolygonal &&\n      (positionIndexes[0] === 0 || positionIndexes[0] === coordinates.length - 1)\n    ) {\n      // for polygons, the first point is repeated at the end of the array\n      // so, update it on both ends of the array\n      updated[0] = getUpdatedPosition(updatedPosition, coordinates[0]);\n      updated[coordinates.length - 1] = getUpdatedPosition(updatedPosition, coordinates[0]);\n    }\n    return updated;\n  }\n\n  // recursively update inner array\n  return [\n    ...coordinates.slice(0, positionIndexes[0]),\n    immutablyReplacePosition(\n      coordinates[positionIndexes[0]],\n      positionIndexes.slice(1, positionIndexes.length),\n      updatedPosition,\n      isPolygonal\n    ),\n    ...coordinates.slice(positionIndexes[0] + 1),\n  ];\n}\n\nfunction immutablyRemovePosition(\n  coordinates: any,\n  positionIndexes: number[] | null | undefined,\n  isPolygonal: boolean\n): any {\n  if (!positionIndexes) {\n    return coordinates;\n  }\n  if (positionIndexes.length === 0) {\n    throw Error('Must specify the index of the position to remove');\n  }\n  if (positionIndexes.length === 1) {\n    const updated = [\n      ...coordinates.slice(0, positionIndexes[0]),\n      ...coordinates.slice(positionIndexes[0] + 1),\n    ];\n\n    if (\n      isPolygonal &&\n      (positionIndexes[0] === 0 || positionIndexes[0] === coordinates.length - 1)\n    ) {\n      // for polygons, the first point is repeated at the end of the array\n      // so, if the first/last coordinate is to be removed, coordinates[1] will be the new first/last coordinate\n      if (positionIndexes[0] === 0) {\n        // change the last to be the same as the first\n        updated[updated.length - 1] = updated[0];\n      } else if (positionIndexes[0] === coordinates.length - 1) {\n        // change the first to be the same as the last\n        updated[0] = updated[updated.length - 1];\n      }\n    }\n    return updated;\n  }\n\n  // recursively update inner array\n  return [\n    ...coordinates.slice(0, positionIndexes[0]),\n    immutablyRemovePosition(\n      coordinates[positionIndexes[0]],\n      positionIndexes.slice(1, positionIndexes.length),\n      isPolygonal\n    ),\n    ...coordinates.slice(positionIndexes[0] + 1),\n  ];\n}\n\nfunction immutablyAddPosition(\n  coordinates: any,\n  positionIndexes: number[] | null | undefined,\n  positionToAdd: Position,\n  isPolygonal: boolean\n): any {\n  if (!positionIndexes) {\n    return coordinates;\n  }\n  if (positionIndexes.length === 0) {\n    throw Error('Must specify the index of the position to remove');\n  }\n  if (positionIndexes.length === 1) {\n    const updated = [\n      ...coordinates.slice(0, positionIndexes[0]),\n      positionToAdd,\n      ...coordinates.slice(positionIndexes[0]),\n    ];\n    return updated;\n  }\n\n  // recursively update inner array\n  return [\n    ...coordinates.slice(0, positionIndexes[0]),\n    immutablyAddPosition(\n      coordinates[positionIndexes[0]],\n      positionIndexes.slice(1, positionIndexes.length),\n      positionToAdd,\n      isPolygonal\n    ),\n    ...coordinates.slice(positionIndexes[0] + 1),\n  ];\n}\n\nfunction pruneGeometryIfNecessary(geometry: Geometry) {\n  switch (geometry.type) {\n    case 'Polygon':\n      prunePolygonIfNecessary(geometry);\n      break;\n    case 'MultiLineString':\n      pruneMultiLineStringIfNecessary(geometry);\n      break;\n    case 'MultiPolygon':\n      pruneMultiPolygonIfNecessary(geometry);\n      break;\n    default:\n      // Not downgradable\n      break;\n  }\n}\n\nfunction prunePolygonIfNecessary(geometry: Polygon) {\n  const polygon = geometry.coordinates;\n\n  // If any hole is no longer a polygon, remove the hole entirely\n  for (let holeIndex = 1; holeIndex < polygon.length; holeIndex++) {\n    if (removeHoleIfNecessary(polygon, holeIndex)) {\n      // It was removed, so keep the index the same\n      holeIndex--;\n    }\n  }\n}\n\nfunction pruneMultiLineStringIfNecessary(geometry: MultiLineString) {\n  for (let lineStringIndex = 0; lineStringIndex < geometry.coordinates.length; lineStringIndex++) {\n    const lineString = geometry.coordinates[lineStringIndex];\n    if (lineString.length === 1) {\n      // Only a single position left on this LineString, so remove it (can't have Point in MultiLineString)\n      geometry.coordinates.splice(lineStringIndex, 1);\n      // Keep the index the same\n      lineStringIndex--;\n    }\n  }\n}\n\nfunction pruneMultiPolygonIfNecessary(geometry: MultiPolygon) {\n  for (let polygonIndex = 0; polygonIndex < geometry.coordinates.length; polygonIndex++) {\n    const polygon = geometry.coordinates[polygonIndex];\n    const outerRing = polygon[0];\n\n    // If the outer ring is no longer a polygon, remove the whole polygon\n    if (outerRing.length <= 3) {\n      geometry.coordinates.splice(polygonIndex, 1);\n      // It was removed, so keep the index the same\n      polygonIndex--;\n    }\n\n    for (let holeIndex = 1; holeIndex < polygon.length; holeIndex++) {\n      if (removeHoleIfNecessary(polygon, holeIndex)) {\n        // It was removed, so keep the index the same\n        holeIndex--;\n      }\n    }\n  }\n}\n\nfunction removeHoleIfNecessary(polygon: PolygonCoordinates, holeIndex: number) {\n  const hole = polygon[holeIndex];\n  if (hole.length <= 3) {\n    polygon.splice(holeIndex, 1);\n    return true;\n  }\n  return false;\n}\n","export type { EditMode } from './lib/edit-mode';\nexport type { GeoJsonEditModeType } from './lib/geojson-edit-mode';\nexport type { GeoJsonEditModeConstructor } from './lib/geojson-edit-mode';\n\nexport { GeoJsonEditMode } from './lib/geojson-edit-mode';\n\n// Alter modes\nexport { ModifyMode } from './lib/modify-mode';\nexport { ResizeCircleMode } from './lib/resize-circle-mode';\nexport { TranslateMode } from './lib/translate-mode';\nexport { ScaleMode } from './lib/scale-mode';\nexport { RotateMode } from './lib/rotate-mode';\nexport { DuplicateMode } from './lib/duplicate-mode';\nexport { ExtendLineStringMode } from './lib/extend-line-string-mode';\nexport { SplitPolygonMode } from './lib/split-polygon-mode';\nexport { ExtrudeMode } from './lib/extrude-mode';\nexport { ElevationMode } from './lib/elevation-mode';\nexport { TransformMode } from './lib/transform-mode';\n\n// Draw modes\nexport { DrawPointMode } from './lib/draw-point-mode';\nexport { DrawLineStringMode } from './lib/draw-line-string-mode';\nexport { DrawPolygonMode } from './lib/draw-polygon-mode';\nexport { DrawRectangleMode } from './lib/draw-rectangle-mode';\nexport { DrawRectangleFromCenterMode } from './lib/draw-rectangle-from-center-mode';\nexport { DrawSquareFromCenterMode } from './lib/draw-square-from-center-mode';\nexport { DrawCircleByDiameterMode } from './lib/draw-circle-by-diameter-mode';\nexport { DrawCircleFromCenterMode } from './lib/draw-circle-from-center-mode';\nexport { DrawEllipseByBoundingBoxMode } from './lib/draw-ellipse-by-bounding-box-mode';\nexport { DrawEllipseUsingThreePointsMode } from './lib/draw-ellipse-using-three-points-mode';\nexport { DrawRectangleUsingThreePointsMode } from './lib/draw-rectangle-using-three-points-mode';\nexport { Draw90DegreePolygonMode } from './lib/draw-90degree-polygon-mode';\nexport { DrawPolygonByDraggingMode } from './lib/draw-polygon-by-dragging-mode';\nexport { ImmutableFeatureCollection } from './lib/immutable-feature-collection';\n\n// Other modes\nexport { ViewMode } from './lib/view-mode';\nexport { MeasureDistanceMode } from './lib/measure-distance-mode';\nexport { MeasureAreaMode } from './lib/measure-area-mode';\nexport { MeasureAngleMode } from './lib/measure-angle-mode';\nexport { CompositeMode } from './lib/composite-mode';\nexport { SnappableMode } from './lib/snappable-mode';\n\n// Experimental\nexport { default as _memoize } from './memoize';\n\nexport type {\n  ScreenCoordinates,\n  EditAction,\n  Pick,\n  ClickEvent,\n  PointerMoveEvent,\n  StartDraggingEvent,\n  StopDraggingEvent,\n  DraggingEvent,\n  ModeProps,\n  GuideFeatureCollection,\n  Viewport,\n  Tooltip,\n} from './types';\n\nexport type {\n  Position,\n  PointCoordinates,\n  LineStringCoordinates,\n  PolygonCoordinates,\n  MultiPointCoordinates,\n  MultiLineStringCoordinates,\n  MultiPolygonCoordinates,\n  AnyCoordinates,\n  Point,\n  LineString,\n  Polygon,\n  MultiPoint,\n  MultiLineString,\n  MultiPolygon,\n  Geometry,\n  Polygonal,\n  BoundingBoxArray,\n  FeatureOf,\n  FeatureWithProps,\n  Feature,\n  FeatureCollection,\n  AnyGeoJson,\n} from './geojson-types';\n\n// Utils\nimport * as utils from './utils';\nexport { utils };\n","/* eslint-disable camelcase */\n// vec2 additions\n\nexport function vec2_transformMat4AsVector(out, a, m) {\n  const x = a[0];\n  const y = a[1];\n  const w = m[3] * x + m[7] * y || 1.0;\n  out[0] = (m[0] * x + m[4] * y) / w;\n  out[1] = (m[1] * x + m[5] * y) / w;\n  return out;\n}\n\n// vec3 additions\n\n// Transform as vector, only uses 3x3 minor matrix\nexport function vec3_transformMat4AsVector(out, a, m) {\n  const x = a[0];\n  const y = a[1];\n  const z = a[2];\n  const w = m[3] * x + m[7] * y + m[11] * z || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z) / w;\n  return out;\n}\n\nexport function vec3_transformMat2(out, a, m) {\n  const x = a[0];\n  const y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  out[2] = a[2];\n  return out;\n}\n\n// vec4 additions\n\nexport function vec4_transformMat2(out, a, m) {\n  const x = a[0];\n  const y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\nexport function vec4_transformMat3(out, a, m) {\n  const x = a[0];\n  const y = a[1];\n  const z = a[2];\n  out[0] = m[0] * x + m[3] * y + m[6] * z;\n  out[1] = m[1] * x + m[4] * y + m[7] * z;\n  out[2] = m[2] * x + m[5] * y + m[8] * z;\n  out[3] = a[3];\n  return out;\n}\n","// This file is derived from the Cesium math library under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nexport const INTERSECTION = {\n  OUTSIDE: -1, // Represents that an object is not contained within the frustum.\n  INTERSECTING: 0, // Represents that an object intersects one of the frustum's planes.\n  INSIDE: 1 // Represents that an object is fully within the frustum.\n} as const;\n","export default function assert(condition: unknown, message?: string): void {\n  if (!condition) {\n    throw new Error(`math.gl assertion ${message}`);\n  }\n}\n","// Copyright (c) 2017 Uber Technologies, Inc.\n// MIT License\nimport {NumericArray} from '@math.gl/types';\nimport assert from './assert';\n\nimport type MathArray from '../classes/base/math-array';\n\nexport type ConfigurationOptions = {\n  EPSILON: number;\n  debug?: boolean;\n  precision: number;\n  printTypes?: boolean;\n  printDegrees?: boolean;\n  printRowMajor?: boolean;\n  _cartographicRadians?: boolean;\n};\n\nconst RADIANS_TO_DEGREES = (1 / Math.PI) * 180;\nconst DEGREES_TO_RADIANS = (1 / 180) * Math.PI;\n\n// TODO - remove\nexport const config: ConfigurationOptions = {\n  EPSILON: 1e-12,\n  debug: false,\n  precision: 4,\n  printTypes: false,\n  printDegrees: false,\n  printRowMajor: true\n};\n\nexport function configure(options?: Partial<ConfigurationOptions>): ConfigurationOptions {\n  // Only copy existing keys\n  for (const key in options) {\n    assert(key in config);\n    config[key] = options[key];\n  }\n  return config;\n}\n\n/**\n * Formats a value into a string\n * @param value\n * @param param1\n * @returns\n */\nexport function formatValue(\n  value: number,\n  {precision = config.precision}: {precision?: number} = {}\n): string {\n  value = round(value);\n  // get rid of trailing zeros\n  return `${parseFloat(value.toPrecision(precision))}`;\n}\n\n/**\n * Check if value is an \"array\"\n * Returns `true` if value is either an array or a typed array\n *\n * Note: returns `false` for `ArrayBuffer` and `DataView` instances\n */\nexport function isArray(value: unknown): boolean {\n  return Array.isArray(value) || (ArrayBuffer.isView(value) && !(value instanceof DataView));\n}\n\nexport function clone(array: NumericArray | MathArray): NumericArray {\n  return 'clone' in array ? array.clone() : array.slice();\n}\n\nexport function toRadians(degrees: number): number;\nexport function toRadians(degrees: NumericArray): NumericArray;\n\nexport function toRadians(degrees: number | NumericArray): number | NumericArray {\n  return radians(degrees as NumericArray);\n}\n\nexport function toDegrees(degrees: number): number;\nexport function toDegrees(degrees: NumericArray): NumericArray;\n\nexport function toDegrees(radians: number | NumericArray): number | NumericArray {\n  return degrees(radians as NumericArray);\n}\n\n// GLSL math function equivalents - Works on both single values and vectors\n\n/**\n * \"GLSL equivalent\" radians: Works on single values and vectors\n */\nexport function radians(degrees: number): number;\nexport function radians(degrees: NumericArray, result?: NumericArray): NumericArray;\n\nexport function radians(\n  degrees: number | NumericArray,\n  result?: NumericArray\n): number | NumericArray {\n  return map(degrees, (degrees) => degrees * DEGREES_TO_RADIANS, result);\n}\n\n/**\n * \"GLSL equivalent\" degrees: Works on single values and vectors\n */\nexport function degrees(radians: number): number;\nexport function degrees(radians: NumericArray, result?: NumericArray): NumericArray;\n\nexport function degrees(\n  radians: number | NumericArray,\n  result?: NumericArray\n): number | NumericArray {\n  return map(radians, (radians) => radians * RADIANS_TO_DEGREES, result);\n}\n\n/**\n * \"GLSL equivalent\" of `Math.sin`: Works on single values and vectors\n * @deprecated\n */\nexport function sin(radians: number | NumericArray, result?: NumericArray): number | NumericArray {\n  return map(radians, (angle) => Math.sin(angle), result);\n}\n\n/**\n * \"GLSL equivalent\" of `Math.cos`: Works on single values and vectors\n * @deprecated\n */\nexport function cos(radians: number | NumericArray, result?: NumericArray): number | NumericArray {\n  return map(radians, (angle) => Math.cos(angle), result);\n}\n\n/**\n * \"GLSL equivalent\" of `Math.tan`: Works on single values and vectors\n * @deprecated\n */\nexport function tan(radians: number | NumericArray, result?: NumericArray): number | NumericArray {\n  return map(radians, (angle) => Math.tan(angle), result);\n}\n\n/**\n * \"GLSL equivalent\" of `Math.asin`: Works on single values and vectors\n * @deprecated\n */\nexport function asin(radians: number | NumericArray, result?: NumericArray): number | NumericArray {\n  return map(radians, (angle) => Math.asin(angle), result);\n}\n\n/**\n * \"GLSL equivalent\" of `Math.acos`: Works on single values and vectors\n * @deprecated\n */\nexport function acos(radians: number | NumericArray, result?: NumericArray): number | NumericArray {\n  return map(radians, (angle) => Math.acos(angle), result);\n}\n\n/**\n * \"GLSL equivalent\" of `Math.atan`: Works on single values and vectors\n * @deprecated\n */\nexport function atan(radians: number | NumericArray, result?: NumericArray): number | NumericArray {\n  return map(radians, (angle) => Math.atan(angle), result);\n}\n\n/**\n * GLSL style value clamping: Works on single values and vectors\n */\nexport function clamp(value: number, min: number, max: number): number;\nexport function clamp(value: NumericArray, min: number, max: number): NumericArray;\n\nexport function clamp(\n  value: number | NumericArray,\n  min: number,\n  max: number\n): number | NumericArray {\n  return map(value, (value) => Math.max(min, Math.min(max, value)));\n}\n\n/**\n * Interpolate between two numbers or two arrays\n */\nexport function lerp(a: number, b: number, t: number): number;\nexport function lerp(a: NumericArray, b: NumericArray, t: number): NumericArray;\n\nexport function lerp(\n  a: number | NumericArray,\n  b: number | NumericArray,\n  t: number\n): number | NumericArray {\n  if (isArray(a)) {\n    return (a as NumericArray).map((ai: number, i: number) => lerp(ai, (b as NumericArray)[i], t));\n  }\n  return t * (b as number) + (1 - t) * (a as number);\n}\n\n/* eslint-disable */\n\n/**\n * Compares any two math objects, using `equals` method if available.\n * @param a\n * @param b\n * @param epsilon\n * @returns\n */\nexport function equals(a: any, b: any, epsilon?: number): boolean {\n  const oldEpsilon = config.EPSILON;\n  if (epsilon) {\n    config.EPSILON = epsilon;\n  }\n  try {\n    if (a === b) {\n      return true;\n    }\n    if (isArray(a) && isArray(b)) {\n      if (a.length !== b.length) {\n        return false;\n      }\n      for (let i = 0; i < a.length; ++i) {\n        // eslint-disable-next-line max-depth\n        if (!equals(a[i], b[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a && a.equals) {\n      return a.equals(b);\n    }\n    if (b && b.equals) {\n      return b.equals(a);\n    }\n    if (typeof a === 'number' && typeof b === 'number') {\n      return Math.abs(a - b) <= config.EPSILON * Math.max(1, Math.abs(a), Math.abs(b));\n    }\n    return false;\n  } finally {\n    config.EPSILON = oldEpsilon;\n  }\n}\n\nexport function exactEquals(a: any, b: any): boolean {\n  if (a === b) {\n    return true;\n  }\n  if (a && typeof a === 'object' && b && typeof b === 'object') {\n    if (a.constructor !== b.constructor) {\n      return false;\n    }\n    if (a.exactEquals) {\n      return a.exactEquals(b);\n    }\n  }\n  if (isArray(a) && isArray(b)) {\n    if (a.length !== b.length) {\n      return false;\n    }\n    for (let i = 0; i < a.length; ++i) {\n      if (!exactEquals(a[i], b[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return false;\n}\n\n/* eslint-enable */\n\nexport function withEpsilon<T>(epsilon: number, func: () => T): T {\n  const oldPrecision = config.EPSILON;\n  config.EPSILON = epsilon;\n  let value: T;\n  try {\n    value = func();\n  } finally {\n    config.EPSILON = oldPrecision;\n  }\n  return value;\n}\n\n// HELPERS\n\nfunction round(value: number): number {\n  return Math.round(value / config.EPSILON) * config.EPSILON;\n}\n\n// If the array has a clone function, calls it, otherwise returns a copy\nfunction duplicateArray(array: NumericArray): NumericArray {\n  // @ts-expect-error We check for math.gl class methods\n  return array.clone ? array.clone() : (new Array(array.length) as number[]);\n}\n\n// If the argument value is an array, applies the func element wise,\n// otherwise applies func to the argument value\nfunction map(\n  value: number | NumericArray,\n  func: (x: number, index?: number, result?: NumericArray) => number,\n  result?: NumericArray\n): number | NumericArray {\n  if (isArray(value)) {\n    const array = value as NumericArray;\n    result = result || duplicateArray(array);\n    for (let i = 0; i < result.length && i < array.length; ++i) {\n      result[i] = func(value[i], i, result);\n    }\n    return result;\n  }\n  return func(value as number);\n}\n","// math.gl, MIT License\nimport {NumericArray} from '@math.gl/types';\nimport {ConfigurationOptions, config, formatValue, equals, isArray} from '../../lib/common';\n\n/** Base class for vectors and matrices */\nexport default abstract class MathArray extends Array<number> {\n  /** Number of elements (values) in this array */\n  abstract get ELEMENTS(): number;\n\n  abstract copy(vector: Readonly<NumericArray>): this;\n\n  abstract fromObject(object: object): this;\n\n  // Common methods\n\n  /**\n   * Clone the current object\n   * @returns a new copy of this object\n   */\n  clone(): this {\n    // @ts-expect-error TS2351: Cannot use 'new' with an expression whose type lacks a call or construct signature.\n    return new this.constructor().copy(this); // eslint-disable-line\n  }\n\n  fromArray(array: Readonly<NumericArray>, offset: number = 0): this {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = array[i + offset];\n    }\n    return this.check();\n  }\n\n  toArray<TypedArray>(targetArray: TypedArray, offset?: number): TypedArray;\n  toArray(targetArray?: number[], offset?: number): NumericArray;\n\n  toArray(targetArray: NumericArray = [], offset: number = 0): NumericArray {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      targetArray[offset + i] = this[i];\n    }\n    return targetArray;\n  }\n\n  from(arrayOrObject: Readonly<NumericArray> | object): this {\n    return Array.isArray(arrayOrObject) ? this.copy(arrayOrObject) : this.fromObject(arrayOrObject);\n  }\n\n  to<T extends NumericArray | object>(arrayOrObject: T): T {\n    // @ts-ignore\n    if (arrayOrObject === this) {\n      return this;\n    }\n    // @ts-expect-error TS2339: Property 'toObject' does not exist on type 'MathArray'.\n    return isArray(arrayOrObject) ? this.toArray(arrayOrObject) : this.toObject(arrayOrObject);\n  }\n\n  toTarget(target: this): this {\n    return target ? this.to(target) : this;\n  }\n\n  /** @deprecated */\n  toFloat32Array(): Float32Array {\n    return new Float32Array(this);\n  }\n\n  toString(): string {\n    return this.formatString(config);\n  }\n\n  /** Formats string according to options */\n  formatString(opts: ConfigurationOptions): string {\n    let string = '';\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      string += (i > 0 ? ', ' : '') + formatValue(this[i], opts);\n    }\n    return `${opts.printTypes ? this.constructor.name : ''}[${string}]`;\n  }\n\n  equals(array: Readonly<NumericArray>): boolean {\n    if (!array || this.length !== array.length) {\n      return false;\n    }\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      if (!equals(this[i], array[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  exactEquals(array: Readonly<NumericArray>): boolean {\n    if (!array || this.length !== array.length) {\n      return false;\n    }\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      if (this[i] !== array[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  // Modifiers\n\n  /** Negates all values in this object */\n  negate(): this {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = -this[i];\n    }\n    return this.check();\n  }\n\n  /** Linearly interpolates between two values */\n  lerp(a: Readonly<NumericArray>, t: number): this;\n  lerp(a: Readonly<NumericArray>, b: Readonly<NumericArray>, t: number): this;\n\n  lerp(a: Readonly<NumericArray>, b: Readonly<NumericArray> | number, t?: number): this {\n    if (t === undefined) {\n      return this.lerp(this, a, b as number);\n    }\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      const ai = a[i];\n      this[i] = ai + t * (b[i] - ai);\n    }\n    return this.check();\n  }\n\n  /** Minimal */\n  min(vector: Readonly<NumericArray>): this {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = Math.min(vector[i], this[i]);\n    }\n    return this.check();\n  }\n\n  /** Maximal */\n  max(vector: Readonly<NumericArray>): this {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = Math.max(vector[i], this[i]);\n    }\n    return this.check();\n  }\n\n  clamp(minVector: Readonly<NumericArray>, maxVector: Readonly<NumericArray>): this {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = Math.min(Math.max(this[i], minVector[i]), maxVector[i]);\n    }\n    return this.check();\n  }\n\n  add(...vectors: Readonly<NumericArray>[]): this {\n    for (const vector of vectors) {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] += vector[i];\n      }\n    }\n    return this.check();\n  }\n\n  subtract(...vectors: Readonly<NumericArray>[]): this {\n    for (const vector of vectors) {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] -= vector[i];\n      }\n    }\n    return this.check();\n  }\n\n  scale(scale: number | Readonly<NumericArray>): this {\n    if (typeof scale === 'number') {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] *= scale;\n      }\n    } else {\n      for (let i = 0; i < this.ELEMENTS && i < scale.length; ++i) {\n        this[i] *= scale[i];\n      }\n    }\n    return this.check();\n  }\n\n  /**\n   * Multiplies all elements by `scale`\n   * Note: `Matrix4.multiplyByScalar` only scales its 3x3 \"minor\"\n   */\n  multiplyByScalar(scalar: number): this {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] *= scalar;\n    }\n    return this.check();\n  }\n\n  // Debug checks\n\n  /** Throws an error if array length is incorrect or contains illegal values */\n  check(): this {\n    if (config.debug && !this.validate()) {\n      throw new Error(`math.gl: ${this.constructor.name} some fields set to invalid numbers'`);\n    }\n    return this;\n  }\n\n  /** Returns false if the array length is incorrect or contains illegal values */\n  validate(): boolean {\n    let valid = this.length === this.ELEMENTS;\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      valid = valid && Number.isFinite(this[i]);\n    }\n    return valid;\n  }\n\n  // three.js compatibility\n\n  /** @deprecated */\n  sub(a: Readonly<NumericArray>): this {\n    return this.subtract(a);\n  }\n\n  /** @deprecated */\n  setScalar(a: number): this {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = a;\n    }\n    return this.check();\n  }\n\n  /** @deprecated */\n  addScalar(a: number): this {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] += a;\n    }\n    return this.check();\n  }\n\n  /** @deprecated */\n  subScalar(a: number): this {\n    return this.addScalar(-a);\n  }\n\n  /** @deprecated */\n  multiplyScalar(scalar: number): this {\n    // Multiplies all elements\n    // `Matrix4.scale` only scales its 3x3 \"minor\"\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] *= scalar;\n    }\n    return this.check();\n  }\n\n  /** @deprecated */\n  divideScalar(a: number): this {\n    return this.multiplyByScalar(1 / a);\n  }\n\n  /** @deprecated */\n  clampScalar(min: number, max: number): this {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = Math.min(Math.max(this[i], min), max);\n    }\n    return this.check();\n  }\n\n  /** @deprecated */\n  get elements(): NumericArray {\n    return this;\n  }\n}\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport {NumberArray} from '@math.gl/types';\nimport {config} from './common';\n\nexport function validateVector(v: NumberArray, length: number): boolean {\n  if (v.length !== length) {\n    return false;\n  }\n  // Could be arguments \"array\" (v.every not availasble)\n  for (let i = 0; i < v.length; ++i) {\n    if (!Number.isFinite(v[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function checkNumber(value: any): number {\n  if (!Number.isFinite(value)) {\n    throw new Error(`Invalid number ${value}`);\n  }\n  return value as number;\n}\n\nexport function checkVector<T extends NumberArray>(\n  v: T,\n  length: number,\n  callerName: string = ''\n): T {\n  if (config.debug && !validateVector(v, length)) {\n    throw new Error(`math.gl: ${callerName} some fields set to invalid numbers'`);\n  }\n  return v;\n}\n\nconst map = {};\n\nexport function deprecated(method: string, version: string): void {\n  if (!map[method]) {\n    map[method] = true;\n    // eslint-disable-next-line\n    console.warn(\n      `${method} has been removed in version ${version}, see upgrade guide for more information`\n    );\n  }\n}\n","// Copyright (c) 2017 Uber Technologies, Inc.\n// MIT License\nimport {NumericArray} from '@math.gl/types';\nimport MathArray from './math-array';\nimport {checkNumber} from '../../lib/validators';\nimport assert from '../../lib/assert';\n\n/** Base class for vectors with at least 2 elements */\nexport default abstract class Vector extends MathArray {\n  // ACCESSORS\n\n  get x(): number {\n    return this[0];\n  }\n\n  set x(value: number) {\n    this[0] = checkNumber(value);\n  }\n\n  get y(): number {\n    return this[1];\n  }\n\n  set y(value: number) {\n    this[1] = checkNumber(value);\n  }\n\n  /**\n   * Returns the length of the vector from the origin to the point described by this vector\n   *\n   * @note `length` is a reserved word for Arrays, so `v.length()` will return number of elements\n   * Instead we provide `len` and `magnitude`\n   */\n  len(): number {\n    return Math.sqrt(this.lengthSquared());\n  }\n\n  /**\n   * Returns the length of the vector from the origin to the point described by this vector\n   */\n  magnitude(): number {\n    return this.len();\n  }\n\n  /**\n   * Returns the squared length of the vector from the origin to the point described by this vector\n   */\n  lengthSquared(): number {\n    let length = 0;\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      length += this[i] * this[i];\n    }\n    return length;\n  }\n\n  /**\n   * Returns the squared length of the vector from the origin to the point described by this vector\n   */\n  magnitudeSquared(): number {\n    return this.lengthSquared();\n  }\n\n  distance(mathArray: Readonly<NumericArray>): number {\n    return Math.sqrt(this.distanceSquared(mathArray));\n  }\n\n  distanceSquared(mathArray: Readonly<NumericArray>): number {\n    let length = 0;\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      const dist = this[i] - mathArray[i];\n      length += dist * dist;\n    }\n    return checkNumber(length);\n  }\n\n  dot(mathArray: Readonly<NumericArray>): number {\n    let product = 0;\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      product += this[i] * mathArray[i];\n    }\n    return checkNumber(product);\n  }\n\n  // MODIFIERS\n\n  normalize(): this {\n    const length = this.magnitude();\n    if (length !== 0) {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] /= length;\n      }\n    }\n    return this.check();\n  }\n\n  multiply(...vectors: Readonly<NumericArray>[]): this {\n    for (const vector of vectors) {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] *= vector[i];\n      }\n    }\n    return this.check();\n  }\n\n  divide(...vectors: Readonly<NumericArray>[]): this {\n    for (const vector of vectors) {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] /= vector[i];\n      }\n    }\n    return this.check();\n  }\n\n  // THREE.js compatibility\n\n  lengthSq(): number {\n    return this.lengthSquared();\n  }\n  distanceTo(vector: Readonly<NumericArray>): number {\n    return this.distance(vector);\n  }\n  distanceToSquared(vector: Readonly<NumericArray>): number {\n    return this.distanceSquared(vector);\n  }\n\n  getComponent(i: number): number {\n    assert(i >= 0 && i < this.ELEMENTS, 'index is out of range');\n    return checkNumber(this[i]);\n  }\n\n  setComponent(i: number, value: number): this {\n    assert(i >= 0 && i < this.ELEMENTS, 'index is out of range');\n    this[i] = value;\n    return this.check();\n  }\n\n  addVectors(a: Readonly<NumericArray>, b: Readonly<NumericArray>): this {\n    return this.copy(a).add(b);\n  }\n\n  subVectors(a: Readonly<NumericArray>, b: Readonly<NumericArray>): this {\n    return this.copy(a).subtract(b);\n  }\n\n  multiplyVectors(a: Readonly<NumericArray>, b: Readonly<NumericArray>): this {\n    return this.copy(a).multiply(b);\n  }\n\n  addScaledVector(a: Readonly<NumericArray>, b: number): this {\n    // @ts-expect-error error TS2351: Cannot use 'new' with an expression whose type lacks a call or construct signature.\n    return this.add(new this.constructor(a).multiplyScalar(b));\n  }\n}\n","/**\n * Common utilities\n * @module glMatrix\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import * as glMatrix from \"./common.js\";\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {ReadonlyVec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Calculates the length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the source vector\n * @returns {vec3} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to ceil\n * @returns {vec3} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to floor\n * @returns {vec3} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to round\n * @returns {vec3} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Calculates the squared length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to negate\n * @returns {vec3} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to invert\n * @returns {vec3} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to normalize\n * @returns {vec3} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\n * Transforms the vec3 with a quat\n * Can also be used for dual quaternions. (Multiply it with the real part)\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec3} out\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Get the angle between two 3D vectors\n * @param {ReadonlyVec3} a The first operand\n * @param {ReadonlyVec3} b The second operand\n * @returns {Number} The angle in radians\n */\n\nexport function angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec3 to zero\n *\n * @param {vec3} out the receiving vector\n * @returns {vec3} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec3.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();","/* eslint-disable camelcase */\nimport {NumericArray} from '@math.gl/types';\n// vec2 additions\n\nexport function vec2_transformMat4AsVector<T extends NumericArray>(\n  out: T,\n  a: Readonly<NumericArray>,\n  m: Readonly<NumericArray>\n): T {\n  const x = a[0];\n  const y = a[1];\n  const w = m[3] * x + m[7] * y || 1.0;\n  out[0] = (m[0] * x + m[4] * y) / w;\n  out[1] = (m[1] * x + m[5] * y) / w;\n  return out;\n}\n\n// vec3 additions\n\n// Transform as vector, only uses 3x3 minor matrix\nexport function vec3_transformMat4AsVector<T extends NumericArray>(\n  out: T,\n  a: Readonly<NumericArray>,\n  m: Readonly<NumericArray>\n): T {\n  const x = a[0];\n  const y = a[1];\n  const z = a[2];\n  const w = m[3] * x + m[7] * y + m[11] * z || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z) / w;\n  return out;\n}\n\nexport function vec3_transformMat2<T extends NumericArray>(\n  out: T,\n  a: Readonly<NumericArray>,\n  m: Readonly<NumericArray>\n): T {\n  const x = a[0];\n  const y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  out[2] = a[2];\n  return out;\n}\n\n// vec4 additions\n\nexport function vec4_transformMat2<T extends NumericArray>(\n  out: T,\n  a: Readonly<NumericArray>,\n  m: Readonly<NumericArray>\n): T {\n  const x = a[0];\n  const y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\nexport function vec4_transformMat3<T extends NumericArray>(\n  out: T,\n  a: Readonly<NumericArray>,\n  m: Readonly<NumericArray>\n): T {\n  const x = a[0];\n  const y = a[1];\n  const z = a[2];\n  out[0] = m[0] * x + m[3] * y + m[6] * z;\n  out[1] = m[1] * x + m[4] * y + m[7] * z;\n  out[2] = m[2] * x + m[5] * y + m[8] * z;\n  out[3] = a[3];\n  return out;\n}\n","// Copyright (c) 2017 Uber Technologies, Inc.\n// MIT License\nimport {NumericArray} from '@math.gl/types';\nimport Vector from './base/vector';\nimport {config, isArray} from '../lib/common';\nimport {checkNumber} from '../lib/validators';\nimport * as vec3 from 'gl-matrix/vec3';\n/* eslint-disable camelcase */\nimport {vec3_transformMat2, vec3_transformMat4AsVector} from '../lib/gl-matrix-extras';\n\nconst ORIGIN = [0, 0, 0];\n\nlet ZERO: Vector3;\n\n/**\n * Three-element vector class.\n * Subclass of Array<number>\n */\nexport default class Vector3 extends Vector {\n  static get ZERO(): Vector3 {\n    if (!ZERO) {\n      ZERO = new Vector3(0, 0, 0);\n      Object.freeze(ZERO);\n    }\n    return ZERO;\n  }\n\n  /**\n   * @class\n   * @param x\n   * @param y\n   * @param z\n   */\n  constructor(x: number | Readonly<NumericArray> = 0, y: number = 0, z: number = 0) {\n    // PERF NOTE: initialize elements as double precision numbers\n    super(-0, -0, -0);\n    if (arguments.length === 1 && isArray(x)) {\n      this.copy(x as NumericArray);\n    } else {\n      // this.set(x, y, z);\n      if (config.debug) {\n        checkNumber(x);\n        checkNumber(y);\n        checkNumber(z);\n      }\n      // @ts-expect-error TS2412: Property '0' of type 'number | [number, number, number]' is not assignable to numeric index type 'number'\n      this[0] = x;\n      this[1] = y;\n      this[2] = z;\n    }\n  }\n\n  set(x: number, y: number, z: number): this {\n    this[0] = x;\n    this[1] = y;\n    this[2] = z;\n    return this.check();\n  }\n\n  copy(array: Readonly<NumericArray>): this {\n    this[0] = array[0];\n    this[1] = array[1];\n    this[2] = array[2];\n    return this.check();\n  }\n\n  fromObject(object: {x: number; y: number; z: number}): this {\n    if (config.debug) {\n      checkNumber(object.x);\n      checkNumber(object.y);\n      checkNumber(object.z);\n    }\n    this[0] = object.x;\n    this[1] = object.y;\n    this[2] = object.z;\n    return this.check();\n  }\n\n  toObject(object: {x?: number; y?: number; z?: number}): {x: number; y: number; z: number} {\n    object.x = this[0];\n    object.y = this[1];\n    object.z = this[2];\n    return object as {x: number; y: number; z: number};\n  }\n\n  // Getters/setters\n\n  get ELEMENTS(): number {\n    return 3;\n  }\n  get z(): number {\n    return this[2];\n  }\n  set z(value: number) {\n    this[2] = checkNumber(value);\n  }\n\n  // ACCESSORS\n\n  angle(vector: Readonly<NumericArray>): number {\n    return vec3.angle(this, vector);\n  }\n\n  // MODIFIERS\n\n  cross(vector: Readonly<NumericArray>): this {\n    vec3.cross(this, this, vector);\n    return this.check();\n  }\n\n  rotateX({radians, origin = ORIGIN}: {radians: number; origin?: Readonly<NumericArray>}): this {\n    vec3.rotateX(this, this, origin, radians);\n    return this.check();\n  }\n\n  rotateY({radians, origin = ORIGIN}: {radians: number; origin?: Readonly<NumericArray>}): this {\n    vec3.rotateY(this, this, origin, radians);\n    return this.check();\n  }\n\n  rotateZ({radians, origin = ORIGIN}: {radians: number; origin?: Readonly<NumericArray>}): this {\n    vec3.rotateZ(this, this, origin, radians);\n    return this.check();\n  }\n\n  // Transforms\n\n  // transforms as point (4th component is implicitly 1)\n  transform(matrix4: Readonly<NumericArray>): this {\n    return this.transformAsPoint(matrix4);\n  }\n\n  // transforms as point (4th component is implicitly 1)\n  transformAsPoint(matrix4: Readonly<NumericArray>): this {\n    vec3.transformMat4(this, this, matrix4);\n    return this.check();\n  }\n\n  // transforms as vector  (4th component is implicitly 0, ignores translation. slightly faster)\n  transformAsVector(matrix4: Readonly<NumericArray>): this {\n    vec3_transformMat4AsVector(this, this, matrix4);\n    return this.check();\n  }\n\n  transformByMatrix3(matrix3: Readonly<NumericArray>): this {\n    vec3.transformMat3(this, this, matrix3);\n    return this.check();\n  }\n\n  transformByMatrix2(matrix2: Readonly<NumericArray>): this {\n    vec3_transformMat2(this, this, matrix2);\n    return this.check();\n  }\n\n  transformByQuaternion(quaternion: Readonly<NumericArray>): this {\n    vec3.transformQuat(this, this, quaternion);\n    return this.check();\n  }\n}\n","import {BoundingVolume} from './bounding-volume';\nimport {Vector3} from '@math.gl/core';\nimport Plane from '../plane';\nimport {INTERSECTION} from '../../constants';\n\nconst scratchVector = new Vector3();\nconst scratchNormal = new Vector3();\n\n/**\n * An axis aligned bounding box - aligned with coordinate axes\n * @see BoundingVolume\n * @see BoundingRectangle\n * @see OrientedBoundingBox\n */\nexport default class AxisAlignedBoundingBox implements BoundingVolume {\n  /** The center point of the bounding box. */\n  readonly center: Vector3;\n  /** The positive half diagonal of the bounding box. */\n  readonly halfDiagonal: Vector3;\n  /** The minimum point defining the bounding box. [0, 0, 0] for empty box */\n  readonly minimum: Vector3;\n  /** The maximum point defining the bounding box. [0, 0, 0] for empty box */\n  readonly maximum: Vector3;\n\n  /**\n   * Creates an instance of an AxisAlignedBoundingBox from the minimum and maximum points along the x, y, and z axes.\n   * @param minimum=[0, 0, 0] The minimum point along the x, y, and z axes.\n   * @param maximum=[0, 0, 0] The maximum point along the x, y, and z axes.\n   * @param center The center of the box; automatically computed if not supplied.\n   */\n  constructor(\n    minimum: readonly number[] = [0, 0, 0],\n    maximum: readonly number[] = [0, 0, 0],\n    center?: readonly number[]\n  ) {\n    // If center was not defined, compute it.\n    center = center || scratchVector.copy(minimum).add(maximum).scale(0.5);\n    this.center = new Vector3(center);\n    this.halfDiagonal = new Vector3(maximum).subtract(this.center);\n\n    /**\n     * The minimum point defining the bounding box.\n     * @type {Vector3}\n     * @default {@link 0, 0, 0}\n     */\n    this.minimum = new Vector3(minimum);\n\n    /**\n     * The maximum point defining the bounding box.\n     * @type {Vector3}\n     * @default {@link 0, 0, 0}\n     */\n    this.maximum = new Vector3(maximum);\n  }\n\n  /**\n   * Duplicates a AxisAlignedBoundingBox instance.\n   *\n   * @returns {AxisAlignedBoundingBox} A new AxisAlignedBoundingBox instance.\n   */\n  clone(): AxisAlignedBoundingBox {\n    return new AxisAlignedBoundingBox(this.minimum, this.maximum, this.center);\n  }\n\n  /**\n   * Compares the provided AxisAlignedBoundingBox componentwise and returns\n   * <code>true</code> if they are equal, <code>false</code> otherwise.\n   *\n   * @param {AxisAlignedBoundingBox} [right] The second AxisAlignedBoundingBox to compare with.\n   * @returns {Boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n   */\n  equals(right: AxisAlignedBoundingBox): boolean {\n    return (\n      this === right ||\n      (Boolean(right) && this.minimum.equals(right.minimum) && this.maximum.equals(right.maximum))\n    );\n  }\n\n  /**\n   * Applies a 4x4 affine transformation matrix to a bounding sphere.\n   * @param transform The transformation matrix to apply to the bounding sphere.\n   * @returns itself, i.e. the modified BoundingVolume.\n   */\n  transform(transform: readonly number[]): this {\n    this.center.transformAsPoint(transform);\n    // TODO - this.halfDiagonal.transformAsVector(transform);\n    this.halfDiagonal.transform(transform);\n    this.minimum.transform(transform);\n    this.maximum.transform(transform);\n    return this;\n  }\n\n  /**\n   * Determines which side of a plane a box is located.\n   */\n  intersectPlane(plane: Plane): number {\n    const {halfDiagonal} = this;\n    const normal = scratchNormal.from(plane.normal);\n    const e =\n      halfDiagonal.x * Math.abs(normal.x) +\n      halfDiagonal.y * Math.abs(normal.y) +\n      halfDiagonal.z * Math.abs(normal.z);\n    const s = this.center.dot(normal) + plane.distance; // signed distance from center\n\n    if (s - e > 0) {\n      return INTERSECTION.INSIDE;\n    }\n\n    if (s + e < 0) {\n      // Not in front because normals point inward\n      return INTERSECTION.OUTSIDE;\n    }\n\n    return INTERSECTION.INTERSECTING;\n  }\n\n  /** Computes the estimated distance from the closest point on a bounding box to a point. */\n  distanceTo(point: readonly number[]): number {\n    return Math.sqrt(this.distanceSquaredTo(point));\n  }\n\n  /** Computes the estimated distance squared from the closest point on a bounding box to a point. */\n  distanceSquaredTo(point: readonly number[]): number {\n    const offset = scratchVector.from(point).subtract(this.center);\n    const {halfDiagonal} = this;\n\n    let distanceSquared = 0.0;\n    let d;\n\n    d = Math.abs(offset.x) - halfDiagonal.x;\n    if (d > 0) {\n      distanceSquared += d * d;\n    }\n\n    d = Math.abs(offset.y) - halfDiagonal.y;\n    if (d > 0) {\n      distanceSquared += d * d;\n    }\n\n    d = Math.abs(offset.z) - halfDiagonal.z;\n    if (d > 0) {\n      distanceSquared += d * d;\n    }\n\n    return distanceSquared;\n  }\n}\n","import * as glMatrix from \"./common.js\";\n/**\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\n * Calculates the determinant of a mat4\n *\n * @param {ReadonlyMat4} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {mat4} out\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 from a dual quat.\n *\n * @param {mat4} out Matrix\n * @param {ReadonlyQuat2} a Dual Quaternion\n * @returns {mat4} mat4 receiving operation result\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveNO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\n * Alias for {@link mat4.perspectiveNO}\n * @function\n */\n\nexport var perspective = perspectiveNO;\n/**\n * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveZO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = far * nf;\n    out[14] = far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -near;\n  }\n\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoNO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Alias for {@link mat4.orthoNO}\n * @function\n */\n\nexport var ortho = orthoNO;\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoZO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = near * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat4\n *\n * @param {ReadonlyMat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\n\nexport var sub = subtract;","// This file is derived from the Cesium math library under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {NumericArray, Vector3} from '@math.gl/core';\nimport * as mat4 from 'gl-matrix/mat4';\nimport {INTERSECTION} from '../../constants';\nimport {BoundingVolume} from './bounding-volume';\nimport Plane from '../plane';\n\nconst scratchVector = new Vector3();\nconst scratchVector2 = new Vector3();\n\n/** A BoundingSphere */\nexport default class BoundingSphere implements BoundingVolume {\n  center: Vector3;\n  radius: number;\n\n  /** Creates a bounding sphere */\n  constructor(center: readonly number[] = [0, 0, 0], radius: number = 0.0) {\n    this.radius = -0;\n    this.center = new Vector3();\n    this.fromCenterRadius(center, radius);\n  }\n\n  /** Sets the bounding sphere from `center` and `radius`. */\n  fromCenterRadius(center: readonly number[], radius: number): this {\n    this.center.from(center);\n    this.radius = radius;\n    return this;\n  }\n\n  /**\n   * Computes a bounding sphere from the corner points of an axis-aligned bounding box.  The sphere\n   * tightly and fully encompasses the box.\n   */\n  fromCornerPoints(corner: readonly number[], oppositeCorner: readonly number[]): this {\n    oppositeCorner = scratchVector.from(oppositeCorner);\n    this.center = new Vector3().from(corner).add(oppositeCorner).scale(0.5);\n    this.radius = this.center.distance(oppositeCorner);\n    return this;\n  }\n\n  /** Compares the provided BoundingSphere component wise */\n  equals(right: BoundingSphere): boolean {\n    return (\n      this === right ||\n      (Boolean(right) && this.center.equals(right.center) && this.radius === right.radius)\n    );\n  }\n\n  /** Duplicates a BoundingSphere instance. */\n  clone(): BoundingSphere {\n    return new BoundingSphere(this.center, this.radius);\n  }\n\n  /** Computes a bounding sphere that contains both the left and right bounding spheres. */\n  union(boundingSphere: BoundingSphere): BoundingSphere {\n    const leftCenter = this.center;\n    const leftRadius = this.radius;\n    const rightCenter = boundingSphere.center;\n    const rightRadius = boundingSphere.radius;\n\n    const toRightCenter = scratchVector.copy(rightCenter).subtract(leftCenter);\n    const centerSeparation = toRightCenter.magnitude();\n\n    if (leftRadius >= centerSeparation + rightRadius) {\n      // Left sphere wins.\n      return this.clone();\n    }\n\n    if (rightRadius >= centerSeparation + leftRadius) {\n      // Right sphere wins.\n      return boundingSphere.clone();\n    }\n\n    // There are two tangent points, one on far side of each sphere.\n    const halfDistanceBetweenTangentPoints = (leftRadius + centerSeparation + rightRadius) * 0.5;\n\n    // Compute the center point halfway between the two tangent points.\n    scratchVector2\n      .copy(toRightCenter)\n      .scale((-leftRadius + halfDistanceBetweenTangentPoints) / centerSeparation)\n      .add(leftCenter);\n\n    this.center.copy(scratchVector2);\n    this.radius = halfDistanceBetweenTangentPoints;\n\n    return this;\n  }\n\n  /** Computes a bounding sphere by enlarging the provided sphere to contain the provided point. */\n  expand(point: readonly number[]): this {\n    const scratchPoint = scratchVector.from(point);\n    const radius = scratchPoint.subtract(this.center).magnitude();\n    if (radius > this.radius) {\n      this.radius = radius;\n    }\n    return this;\n  }\n\n  // BoundingVolume interface\n\n  /**\n   * Applies a 4x4 affine transformation matrix to a bounding sphere.\n   * @param sphere The bounding sphere to apply the transformation to.\n   * @param transform The transformation matrix to apply to the bounding sphere.\n   * @returns self.\n   */\n  transform(transform: readonly number[]): this {\n    this.center.transform(transform);\n    const scale = mat4.getScaling(scratchVector, transform);\n    this.radius = Math.max(scale[0], Math.max(scale[1], scale[2])) * this.radius;\n    return this;\n  }\n\n  /** Computes the estimated distance squared from the closest point on a bounding sphere to a point. */\n  distanceSquaredTo(point: Readonly<NumericArray>): number {\n    const d = this.distanceTo(point);\n    return d * d;\n  }\n\n  /** Computes the estimated distance from the closest point on a bounding sphere to a point. */\n  distanceTo(point: Readonly<NumericArray>): number {\n    const scratchPoint = scratchVector.from(point);\n    const delta = scratchPoint.subtract(this.center);\n    return Math.max(0, delta.len() - this.radius);\n  }\n\n  /** Determines which side of a plane a sphere is located. */\n  intersectPlane(plane: Plane): number {\n    const center = this.center;\n    const radius = this.radius;\n    const normal = plane.normal;\n    const distanceToPlane = normal.dot(center) + plane.distance;\n\n    // The center point is negative side of the plane normal\n    if (distanceToPlane < -radius) {\n      return INTERSECTION.OUTSIDE;\n    }\n    // The center point is positive side of the plane, but radius extends beyond it; partial overlap\n    if (distanceToPlane < radius) {\n      return INTERSECTION.INTERSECTING;\n    }\n    // The center point and radius is positive side of the plane\n    return INTERSECTION.INSIDE;\n  }\n}\n","// Copyright (c) 2017 Uber Technologies, Inc.\n// MIT License\nimport {NumericArray} from '@math.gl/types';\nimport MathArray from './math-array';\nimport {checkNumber} from '../../lib/validators';\nimport {config} from '../../lib/common';\n\n/** Base class for matrices */\nexport default abstract class Matrix extends MathArray {\n  abstract get RANK(): number;\n\n  // fromObject(object) {\n  //   const array = object.elements;\n  //   return this.fromRowMajor(array);\n  // }\n  // toObject(object) {\n  //   const array = object.elements;\n  //   this.toRowMajor(array);\n  //   return object;\n  // }\n\n  // TODO better override formatString?\n  toString(): string {\n    let string = '[';\n    if (config.printRowMajor) {\n      string += 'row-major:';\n      for (let row = 0; row < this.RANK; ++row) {\n        for (let col = 0; col < this.RANK; ++col) {\n          string += ` ${this[col * this.RANK + row]}`;\n        }\n      }\n    } else {\n      string += 'column-major:';\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        string += ` ${this[i]}`;\n      }\n    }\n    string += ']';\n    return string;\n  }\n\n  getElementIndex(row: number, col: number): number {\n    return col * this.RANK + row;\n  }\n\n  // By default assumes row major indices\n  getElement(row: number, col: number): number {\n    return this[col * this.RANK + row];\n  }\n\n  // By default assumes row major indices\n  setElement(row: number, col: number, value: number): this {\n    this[col * this.RANK + row] = checkNumber(value);\n    return this;\n  }\n  getColumn<NumArrayT>(columnIndex: number, result: NumArrayT): NumArrayT;\n  getColumn(columnIndex: number): number[];\n\n  getColumn(columnIndex: number, result: number[] = new Array(this.RANK).fill(-0)): number[] {\n    const firstIndex = columnIndex * this.RANK;\n    for (let i = 0; i < this.RANK; ++i) {\n      result[i] = this[firstIndex + i];\n    }\n    return result;\n  }\n\n  setColumn(columnIndex: number, columnVector: Readonly<NumericArray>): this {\n    const firstIndex = columnIndex * this.RANK;\n    for (let i = 0; i < this.RANK; ++i) {\n      this[firstIndex + i] = columnVector[i];\n    }\n    return this;\n  }\n}\n","import * as glMatrix from \"./common.js\";\n/**\n * 3x3 Matrix\n * @module mat3\n */\n\n/**\n * Creates a new identity mat3\n *\n * @returns {mat3} a new 3x3 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(9);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {ReadonlyMat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\n\nexport function fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n/**\n * Creates a new mat3 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat3} a matrix to clone\n * @returns {mat3} a new 3x3 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Create a new mat3 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} A new mat3\n */\n\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} out\n */\n\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n/**\n * Calculates the determinant of a mat3\n *\n * @param {ReadonlyMat3} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to translate\n * @param {ReadonlyVec2} v vector to translate by\n * @returns {mat3} out\n */\n\nexport function translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\n\nexport function rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to rotate\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.translate(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Translation vector\n * @returns {mat3} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.rotate(dest, dest, rad);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.scale(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Scaling vector\n * @returns {mat3} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Copies the values from a mat2d into a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to copy\n * @returns {mat3} out\n **/\n\nexport function fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n/**\n * Calculates a 3x3 matrix from the given quaternion\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat3} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n/**\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from\n *\n * @returns {mat3} out\n */\n\nexport function normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\n\nexport function projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat3\n *\n * @param {ReadonlyMat3} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat3\n *\n * @param {ReadonlyMat3} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\n}\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n/**\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat3} out the receiving vector\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat3} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n/**\n * Alias for {@link mat3.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat3.subtract}\n * @function\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\n * 2 Dimensional Vector\n * @module vec2\n */\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(2);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {ReadonlyVec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\n\nexport function fromValues(x, y) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the source vector\n * @returns {vec2} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\n\nexport function set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n/**\n * Math.ceil the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to ceil\n * @returns {vec2} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n/**\n * Math.floor the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to floor\n * @returns {vec2} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n/**\n * Math.round the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to round\n * @returns {vec2} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.hypot(x, y);\n}\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n}\n/**\n * Calculates the length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.hypot(x, y);\n}\n/**\n * Calculates the squared length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n}\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to negate\n * @returns {vec2} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to invert\n * @returns {vec2} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to normalize\n * @returns {vec2} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec3} out\n */\n\nexport function cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec2} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec2} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2d} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat3} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n/**\n * Rotate a 2D vector\n * @param {vec2} out The receiving vec2\n * @param {ReadonlyVec2} a The vec2 point to rotate\n * @param {ReadonlyVec2} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec2} out\n */\n\nexport function rotate(out, a, b, rad) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n      p1 = a[1] - b[1],\n      sinC = Math.sin(rad),\n      cosC = Math.cos(rad); //perform rotation and translate to correct position\n\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n/**\n * Get the angle between two 2D vectors\n * @param {ReadonlyVec2} a The first operand\n * @param {ReadonlyVec2} b The second operand\n * @returns {Number} The angle in radians\n */\n\nexport function angle(a, b) {\n  var x1 = a[0],\n      y1 = a[1],\n      x2 = b[0],\n      y2 = b[1],\n      // mag is the product of the magnitudes of a and b\n  mag = Math.sqrt(x1 * x1 + y1 * y1) * Math.sqrt(x2 * x2 + y2 * y2),\n      // mag &&.. short circuits if mag == 0\n  cosine = mag && (x1 * x2 + y1 * y2) / mag; // Math.min(Math.max(cosine, -1), 1) clamps the cosine between -1 and 1\n\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec2 to zero\n *\n * @param {vec2} out the receiving vector\n * @returns {vec2} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec2} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec2(\" + a[0] + \", \" + a[1] + \")\";\n}\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n/**\n * Alias for {@link vec2.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec2.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec2.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec2.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec2.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec2.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec2.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();","// Copyright (c) 2017 Uber Technologies, Inc.\n// MIT License\nimport Matrix from './base/matrix';\nimport {checkVector} from '../lib/validators';\n/* eslint-disable camelcase */\nimport {vec4_transformMat3} from '../lib/gl-matrix-extras';\nimport * as mat3 from 'gl-matrix/mat3';\nimport * as vec2 from 'gl-matrix/vec2';\nimport * as vec3 from 'gl-matrix/vec3';\nimport {NumericArray} from '@math.gl/types';\n\nenum INDICES {\n  COL0ROW0 = 0,\n  COL0ROW1 = 1,\n  COL0ROW2 = 2,\n  COL1ROW0 = 3,\n  COL1ROW1 = 4,\n  COL1ROW2 = 5,\n  COL2ROW0 = 6,\n  COL2ROW1 = 7,\n  COL2ROW2 = 8\n}\n\nconst IDENTITY_MATRIX = Object.freeze([1, 0, 0, 0, 1, 0, 0, 0, 1]);\n\nexport default class Matrix3 extends Matrix {\n  static get IDENTITY(): Readonly<Matrix3> {\n    return getIdentityMatrix();\n  }\n\n  static get ZERO(): Readonly<Matrix3> {\n    return getZeroMatrix();\n  }\n\n  get ELEMENTS(): number {\n    return 9;\n  }\n\n  get RANK(): number {\n    return 3;\n  }\n\n  get INDICES(): typeof INDICES {\n    return INDICES;\n  }\n\n  constructor(array?: Readonly<NumericArray>);\n  /** @deprecated */\n  constructor(...args: number[]);\n\n  constructor(array?: number | Readonly<NumericArray>, ...args: number[]) {\n    // PERF NOTE: initialize elements as double precision numbers\n    super(-0, -0, -0, -0, -0, -0, -0, -0, -0);\n    if (arguments.length === 1 && Array.isArray(array)) {\n      this.copy(array);\n    } else if (args.length > 0) {\n      this.copy([array as number, ...args]);\n    } else {\n      this.identity();\n    }\n  }\n\n  copy(array: Readonly<NumericArray>): this {\n    // Element wise copy for performance\n    this[0] = array[0];\n    this[1] = array[1];\n    this[2] = array[2];\n    this[3] = array[3];\n    this[4] = array[4];\n    this[5] = array[5];\n    this[6] = array[6];\n    this[7] = array[7];\n    this[8] = array[8];\n    return this.check();\n  }\n\n  // Constructors\n\n  identity(): this {\n    return this.copy(IDENTITY_MATRIX);\n  }\n\n  /**\n   *\n   * @param object\n   * @returns self\n   */\n  fromObject(object: {[key: string]: any}): this {\n    return this.check();\n  }\n\n  // Calculates a 3x3 matrix from the given quaternion\n  // q quat  Quaternion to create matrix from\n  fromQuaternion(q: Readonly<NumericArray>): this {\n    mat3.fromQuat(this, q);\n    return this.check();\n  }\n\n  /**\n   * accepts column major order, stores in column major order\n   */\n  // eslint-disable-next-line max-params\n  set(\n    m00: number,\n    m10: number,\n    m20: number,\n    m01: number,\n    m11: number,\n    m21: number,\n    m02: number,\n    m12: number,\n    m22: number\n  ): this {\n    this[0] = m00;\n    this[1] = m10;\n    this[2] = m20;\n    this[3] = m01;\n    this[4] = m11;\n    this[5] = m21;\n    this[6] = m02;\n    this[7] = m12;\n    this[8] = m22;\n    return this.check();\n  }\n\n  /**\n   * accepts row major order, stores as column major\n   */\n  // eslint-disable-next-line max-params\n  setRowMajor(\n    m00: number,\n    m01: number,\n    m02: number,\n    m10: number,\n    m11: number,\n    m12: number,\n    m20: number,\n    m21: number,\n    m22: number\n  ): this {\n    this[0] = m00;\n    this[1] = m10;\n    this[2] = m20;\n    this[3] = m01;\n    this[4] = m11;\n    this[5] = m21;\n    this[6] = m02;\n    this[7] = m12;\n    this[8] = m22;\n    return this.check();\n  }\n\n  // Accessors\n\n  determinant(): number {\n    return mat3.determinant(this);\n  }\n\n  // Modifiers\n  transpose(): this {\n    mat3.transpose(this, this);\n    return this.check();\n  }\n\n  /** Invert a matrix. Note that this can fail if the matrix is not invertible */\n  invert(): this {\n    mat3.invert(this, this);\n    return this.check();\n  }\n\n  // Operations\n  multiplyLeft(a: NumericArray): this {\n    mat3.multiply(this, a, this);\n    return this.check();\n  }\n\n  multiplyRight(a: NumericArray): this {\n    mat3.multiply(this, this, a);\n    return this.check();\n  }\n\n  rotate(radians: number): NumericArray {\n    mat3.rotate(this, this, radians);\n    return this.check();\n  }\n\n  scale(factor: NumericArray | number): this {\n    if (Array.isArray(factor)) {\n      mat3.scale(this, this, factor);\n    } else {\n      mat3.scale(this, this, [factor as number, factor as number]);\n    }\n    return this.check();\n  }\n\n  translate(vec: NumericArray): this {\n    mat3.translate(this, this, vec);\n    return this.check();\n  }\n\n  // Transforms\n  transform(vector: Readonly<NumericArray>, result?: NumericArray): NumericArray {\n    let out: NumericArray;\n    switch (vector.length) {\n      case 2:\n        out = vec2.transformMat3(result || [-0, -0], vector, this);\n        break;\n      case 3:\n        out = vec3.transformMat3(result || [-0, -0, -0], vector, this);\n        break;\n      case 4:\n        out = vec4_transformMat3(result || [-0, -0, -0, -0], vector, this);\n        break;\n      default:\n        throw new Error('Illegal vector');\n    }\n    checkVector(out, vector.length);\n    return out;\n  }\n\n  /** @deprecated */\n  transformVector(vector: Readonly<NumericArray>, result?: NumericArray): NumericArray {\n    return this.transform(vector, result);\n  }\n\n  /** @deprecated */\n  transformVector2(vector: Readonly<NumericArray>, result?: NumericArray): NumericArray {\n    return this.transform(vector, result);\n  }\n\n  /** @deprecated */\n  transformVector3(vector: Readonly<NumericArray>, result?: NumericArray): NumericArray {\n    return this.transform(vector, result);\n  }\n}\n\nlet ZERO_MATRIX3;\nlet IDENTITY_MATRIX3;\n\nfunction getZeroMatrix(): Readonly<Matrix3> {\n  if (!ZERO_MATRIX3) {\n    ZERO_MATRIX3 = new Matrix3([0, 0, 0, 0, 0, 0, 0, 0, 0]);\n    Object.freeze(ZERO_MATRIX3);\n  }\n  return ZERO_MATRIX3;\n}\n\nfunction getIdentityMatrix(): Matrix3 {\n  if (!IDENTITY_MATRIX3) {\n    IDENTITY_MATRIX3 = new Matrix3();\n    Object.freeze(IDENTITY_MATRIX3);\n  }\n  return IDENTITY_MATRIX3;\n}\n","// Copyright (c) 2017 Uber Technologies, Inc.\n// MIT License\n\nimport Vector from './base/vector';\nimport {config, isArray} from '../lib/common';\nimport {checkNumber} from '../lib/validators';\nimport * as vec4 from 'gl-matrix/vec3';\n/* eslint-disable camelcase */\nimport {vec4_transformMat2, vec4_transformMat3} from '../lib/gl-matrix-extras';\nimport {NumericArray} from '@math.gl/types';\n\nimport type Matrix4 from './matrix4';\n\nlet ZERO: Vector4;\n\n/**\n * Four-element vector class.\n * Subclass of Array<number>\n */\nexport default class Vector4 extends Vector {\n  static get ZERO(): Vector4 {\n    if (!ZERO) {\n      ZERO = new Vector4(0, 0, 0, 0);\n      Object.freeze(ZERO);\n    }\n    return ZERO;\n  }\n\n  constructor(x: number | Readonly<NumericArray> = 0, y: number = 0, z: number = 0, w: number = 0) {\n    // PERF NOTE: initialize elements as double precision numbers\n    super(-0, -0, -0, -0);\n    if (isArray(x) && arguments.length === 1) {\n      this.copy(x as Readonly<NumericArray>);\n    } else {\n      // this.set(x, y, z, w);\n      if (config.debug) {\n        checkNumber(x);\n        checkNumber(y);\n        checkNumber(z);\n        checkNumber(w);\n      }\n      this[0] = x as number;\n      this[1] = y;\n      this[2] = z;\n      this[3] = w;\n    }\n  }\n\n  set(x: number, y: number, z: number, w: number): this {\n    this[0] = x;\n    this[1] = y;\n    this[2] = z;\n    this[3] = w;\n    return this.check();\n  }\n\n  copy(array: Readonly<NumericArray>): this {\n    this[0] = array[0];\n    this[1] = array[1];\n    this[2] = array[2];\n    this[3] = array[3];\n    return this.check();\n  }\n\n  fromObject(object: {x: number; y: number; z: number; w: number}): this {\n    if (config.debug) {\n      checkNumber(object.x);\n      checkNumber(object.y);\n      checkNumber(object.z);\n      checkNumber(object.w);\n    }\n    this[0] = object.x;\n    this[1] = object.y;\n    this[2] = object.z;\n    this[3] = object.w;\n    return this;\n  }\n\n  toObject(object: {x?: number; y?: number; z?: number; w?: number}): {\n    x: number;\n    y: number;\n    z: number;\n    w: number;\n  } {\n    object.x = this[0];\n    object.y = this[1];\n    object.z = this[2];\n    object.w = this[3];\n    return object as {\n      x: number;\n      y: number;\n      z: number;\n      w: number;\n    };\n  }\n\n  // Getters/setters\n  /* eslint-disable no-multi-spaces, brace-style, no-return-assign */\n  get ELEMENTS(): number {\n    return 4;\n  }\n\n  get z(): number {\n    return this[2];\n  }\n  set z(value: number) {\n    this[2] = checkNumber(value);\n  }\n  get w(): number {\n    return this[3];\n  }\n  set w(value: number) {\n    this[3] = checkNumber(value);\n  }\n\n  transform(matrix4: Readonly<NumericArray>): this {\n    vec4.transformMat4(this, this, matrix4);\n    return this.check();\n  }\n\n  transformByMatrix3(matrix3: Readonly<NumericArray>): this {\n    vec4_transformMat3(this, this, matrix3);\n    return this.check();\n  }\n\n  transformByMatrix2(matrix2: Readonly<NumericArray>): this {\n    vec4_transformMat2(this, this, matrix2);\n    return this.check();\n  }\n\n  transformByQuaternion(quaternion: Readonly<NumericArray>): this {\n    vec4.transformQuat(this, this, quaternion);\n    return this.check();\n  }\n\n  // three.js compatibility\n  applyMatrix4(m: Matrix4): this {\n    m.transform(this, this);\n    return this;\n  }\n}\n","import * as glMatrix from \"./common.js\";\n/**\n * 4 Dimensional Vector\n * @module vec4\n */\n\n/**\n * Creates a new, empty vec4\n *\n * @returns {vec4} a new 4D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {ReadonlyVec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\n\nexport function fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the source vector\n * @returns {vec4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\n\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\n * Multiplies two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\n * Divides two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\n * Math.ceil the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to ceil\n * @returns {vec4} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\n * Math.floor the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to floor\n * @returns {vec4} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\n * Returns the minimum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\n * Returns the maximum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\n * Math.round the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to round\n * @returns {vec4} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\n * Adds two vec4's after scaling the second operand by a scalar value\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec4} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\n * Calculates the squared euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\n * Calculates the length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\n * Calculates the squared length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\n * Negates the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to negate\n * @returns {vec4} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to invert\n * @returns {vec4} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to normalize\n * @returns {vec4} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\n * Returns the cross-product of three vectors in a 4-dimensional space\n *\n * @param {ReadonlyVec4} result the receiving vector\n * @param {ReadonlyVec4} U the first vector\n * @param {ReadonlyVec4} V the second vector\n * @param {ReadonlyVec4} W the third vector\n * @returns {vec4} result\n */\n\nexport function cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec4} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec4} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec4} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec4} out\n */\n\nexport function transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set the components of a vec4 to zero\n *\n * @param {vec4} out the receiving vector\n * @returns {vec4} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec4} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\n * Alias for {@link vec4.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec4.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec4.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec4.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec4.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec4.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec4s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\nimport * as mat3 from \"./mat3.js\";\nimport * as vec3 from \"./vec3.js\";\nimport * as vec4 from \"./vec4.js\";\n/**\n * Quaternion\n * @module quat\n */\n\n/**\n * Creates a new identity quat\n *\n * @returns {quat} a new quaternion\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[3] = 1;\n  return out;\n}\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\n\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyVec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\n\nexport function setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n/**\n * Gets the rotation axis and angle for a given\n *  quaternion. If a quaternion is created with\n *  setAxisAngle, this method will return the same\n *  values as providied in the original parameter list\n *  OR functionally equivalent values.\n * Example: The quaternion formed by axis [0, 0, 1] and\n *  angle -90 is the same as the quaternion formed by\n *  [0, 0, 1] and 270. This method favors the latter.\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\n * @param  {ReadonlyQuat} q     Quaternion to be decomposed\n * @return {Number}     Angle, in radians, of the rotation\n */\n\nexport function getAxisAngle(out_axis, q) {\n  var rad = Math.acos(q[3]) * 2.0;\n  var s = Math.sin(rad / 2.0);\n\n  if (s > glMatrix.EPSILON) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n\n  return rad;\n}\n/**\n * Gets the angular distance between two unit quaternions\n *\n * @param  {ReadonlyQuat} a     Origin unit quaternion\n * @param  {ReadonlyQuat} b     Destination unit quaternion\n * @return {Number}     Angle, in radians, between the two quaternions\n */\n\nexport function getAngle(a, b) {\n  var dotproduct = dot(a, b);\n  return Math.acos(2 * dotproduct * dotproduct - 1);\n}\n/**\n * Multiplies two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {quat} out\n */\n\nexport function multiply(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nexport function rotateX(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nexport function rotateY(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var by = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nexport function rotateZ(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bz = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n/**\n * Calculates the W component of a quat from the X, Y, and Z components.\n * Assumes that quaternion is 1 unit in length.\n * Any existing W component will be ignored.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate W component of\n * @returns {quat} out\n */\n\nexport function calculateW(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n/**\n * Calculate the exponential of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @returns {quat} out\n */\n\nexport function exp(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var et = Math.exp(w);\n  var s = r > 0 ? et * Math.sin(r) / r : 0;\n  out[0] = x * s;\n  out[1] = y * s;\n  out[2] = z * s;\n  out[3] = et * Math.cos(r);\n  return out;\n}\n/**\n * Calculate the natural logarithm of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @returns {quat} out\n */\n\nexport function ln(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var t = r > 0 ? Math.atan2(r, w) / r : 0;\n  out[0] = x * t;\n  out[1] = y * t;\n  out[2] = z * t;\n  out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);\n  return out;\n}\n/**\n * Calculate the scalar power of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @param {Number} b amount to scale the quaternion by\n * @returns {quat} out\n */\n\nexport function pow(out, a, b) {\n  ln(out, a);\n  scale(out, out, b);\n  exp(out, out);\n  return out;\n}\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\n\nexport function slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  var omega, cosom, sinom, scale0, scale1; // calc cosine\n\n  cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\n\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  } // calculate coefficients\n\n\n  if (1.0 - cosom > glMatrix.EPSILON) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  } // calculate final values\n\n\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n  return out;\n}\n/**\n * Generates a random unit quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\n\nexport function random(out) {\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\n  // TODO: Calling random 3 times is probably not the fastest solution\n  var u1 = glMatrix.RANDOM();\n  var u2 = glMatrix.RANDOM();\n  var u3 = glMatrix.RANDOM();\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\n  var sqrtU1 = Math.sqrt(u1);\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n  return out;\n}\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate inverse of\n * @returns {quat} out\n */\n\nexport function invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  var invDot = dot ? 1.0 / dot : 0; // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n}\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate conjugate of\n * @returns {quat} out\n */\n\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyMat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\n\nexport function fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8];\n  var fRoot;\n\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    var i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    var j = (i + 1) % 3;\n    var k = (i + 2) % 3;\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n\n  return out;\n}\n/**\n * Creates a quaternion from the given euler angle x, y, z.\n *\n * @param {quat} out the receiving quaternion\n * @param {x} Angle to rotate around X axis in degrees.\n * @param {y} Angle to rotate around Y axis in degrees.\n * @param {z} Angle to rotate around Z axis in degrees.\n * @returns {quat} out\n * @function\n */\n\nexport function fromEuler(out, x, y, z) {\n  var halfToRad = 0.5 * Math.PI / 180.0;\n  x *= halfToRad;\n  y *= halfToRad;\n  z *= halfToRad;\n  var sx = Math.sin(x);\n  var cx = Math.cos(x);\n  var sy = Math.sin(y);\n  var cy = Math.cos(y);\n  var sz = Math.sin(z);\n  var cz = Math.cos(z);\n  out[0] = sx * cy * cz - cx * sy * sz;\n  out[1] = cx * sy * cz + sx * cy * sz;\n  out[2] = cx * cy * sz - sx * sy * cz;\n  out[3] = cx * cy * cz + sx * sy * sz;\n  return out;\n}\n/**\n * Returns a string representation of a quatenion\n *\n * @param {ReadonlyQuat} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"quat(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {ReadonlyQuat} a quaternion to clone\n * @returns {quat} a new quaternion\n * @function\n */\n\nexport var clone = vec4.clone;\n/**\n * Creates a new quat initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} a new quaternion\n * @function\n */\n\nexport var fromValues = vec4.fromValues;\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the source quaternion\n * @returns {quat} out\n * @function\n */\n\nexport var copy = vec4.copy;\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\n\nexport var set = vec4.set;\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {quat} out\n * @function\n */\n\nexport var add = vec4.add;\n/**\n * Alias for {@link quat.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {ReadonlyQuat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\n\nexport var scale = vec4.scale;\n/**\n * Calculates the dot product of two quat's\n *\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\n\nexport var dot = vec4.dot;\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n * @function\n */\n\nexport var lerp = vec4.lerp;\n/**\n * Calculates the length of a quat\n *\n * @param {ReadonlyQuat} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport var length = vec4.length;\n/**\n * Alias for {@link quat.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Calculates the squared length of a quat\n *\n * @param {ReadonlyQuat} a vector to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\n\nexport var squaredLength = vec4.squaredLength;\n/**\n * Alias for {@link quat.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\n\nexport var normalize = vec4.normalize;\n/**\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyQuat} a The first quaternion.\n * @param {ReadonlyQuat} b The second quaternion.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport var exactEquals = vec4.exactEquals;\n/**\n * Returns whether or not the quaternions have approximately the same elements in the same position.\n *\n * @param {ReadonlyQuat} a The first vector.\n * @param {ReadonlyQuat} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport var equals = vec4.equals;\n/**\n * Sets a quaternion to represent the shortest rotation from one\n * vector to another.\n *\n * Both vectors are assumed to be unit length.\n *\n * @param {quat} out the receiving quaternion.\n * @param {ReadonlyVec3} a the initial vector\n * @param {ReadonlyVec3} b the destination vector\n * @returns {quat} out\n */\n\nexport var rotationTo = function () {\n  var tmpvec3 = vec3.create();\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\n  return function (out, a, b) {\n    var dot = vec3.dot(a, b);\n\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n}();\n/**\n * Performs a spherical linear interpolation with two control points\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {ReadonlyQuat} c the third operand\n * @param {ReadonlyQuat} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\n\nexport var sqlerp = function () {\n  var temp1 = create();\n  var temp2 = create();\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n    return out;\n  };\n}();\n/**\n * Sets the specified quaternion with values corresponding to the given\n * axes. Each axis is a vec3 and is expected to be unit length and\n * perpendicular to all other specified axes.\n *\n * @param {ReadonlyVec3} view  the vector representing the viewing direction\n * @param {ReadonlyVec3} right the vector representing the local \"right\" direction\n * @param {ReadonlyVec3} up    the vector representing the local \"up\" direction\n * @returns {quat} out\n */\n\nexport var setAxes = function () {\n  var matr = mat3.create();\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n    return normalize(out, fromMat3(out, matr));\n  };\n}();","// Copyright (c) 2017 Uber Technologies, Inc.\n// MIT License\nimport MathArray from './base/math-array';\nimport {checkNumber, checkVector} from '../lib/validators';\nimport Vector4 from './vector4';\nimport * as quat from 'gl-matrix/quat';\nimport * as vec4 from 'gl-matrix/vec4';\nimport {NumericArray} from '@math.gl/types';\n\nconst IDENTITY_QUATERNION = [0, 0, 0, 1] as const;\n\nexport default class Quaternion extends MathArray {\n  constructor(x: number | Readonly<NumericArray> = 0, y = 0, z = 0, w = 1) {\n    // PERF NOTE: initialize elements as double precision numbers\n    super(-0, -0, -0, -0);\n    // eslint-disable-next-line prefer-rest-params\n    if (Array.isArray(x) && arguments.length === 1) {\n      this.copy(x);\n    } else {\n      this.set(x as number, y, z, w);\n    }\n  }\n\n  copy(array: Readonly<NumericArray>): this {\n    this[0] = array[0];\n    this[1] = array[1];\n    this[2] = array[2];\n    this[3] = array[3];\n    return this.check();\n  }\n\n  set(x: number, y: number, z: number, w: number): this {\n    this[0] = x;\n    this[1] = y;\n    this[2] = z;\n    this[3] = w;\n    return this.check();\n  }\n\n  fromObject(object: {x: number; y: number; z: number; w: number}): this {\n    this[0] = object.x;\n    this[1] = object.y;\n    this[2] = object.z;\n    this[3] = object.w;\n    return this.check();\n  }\n\n  /**\n   * Creates a quaternion from the given 3x3 rotation matrix.\n   * NOTE: The resultant quaternion is not normalized, so you should\n   * be sure to renormalize the quaternion yourself where necessary.\n   * @param m\n   * @returns\n   */\n  fromMatrix3(m: Readonly<NumericArray>): this {\n    quat.fromMat3(this, m);\n    return this.check();\n  }\n\n  fromAxisRotation(axis: Readonly<NumericArray>, rad: number): this {\n    quat.setAxisAngle(this, axis, rad);\n    return this.check();\n  }\n\n  /** Set a quat to the identity quaternion */\n  identity(): this {\n    quat.identity(this);\n    return this.check();\n  }\n\n  // Set the components of a quat to the given values\n  // set(i, j, k, l) {\n  //   quat.set(this, i, j, k, l);\n  //   return this.check();\n  // }\n\n  // Sets a quat from the given angle and rotation axis, then returns it.\n  setAxisAngle(axis: Readonly<NumericArray>, rad: number): this {\n    return this.fromAxisRotation(axis, rad);\n  }\n\n  // Getters/setters\n  get ELEMENTS(): number {\n    return 4;\n  }\n\n  get x(): number {\n    return this[0];\n  }\n  set x(value: number) {\n    this[0] = checkNumber(value);\n  }\n\n  get y(): number {\n    return this[1];\n  }\n  set y(value: number) {\n    this[1] = checkNumber(value);\n  }\n\n  get z(): number {\n    return this[2];\n  }\n  set z(value: number) {\n    this[2] = checkNumber(value);\n  }\n\n  get w(): number {\n    return this[3];\n  }\n  set w(value: number) {\n    this[3] = checkNumber(value);\n  }\n\n  // Calculates the length of a quat\n  len(): number {\n    return quat.length(this);\n  }\n\n  // Calculates the squared length of a quat\n  lengthSquared(): number {\n    return quat.squaredLength(this);\n  }\n\n  // Calculates the dot product of two quat's\n  // @return {Number}\n  dot(a: Readonly<NumericArray>): number {\n    return quat.dot(this, a);\n  }\n\n  // Gets the rotation axis and angle for a given quaternion.\n  // If a quaternion is created with setAxisAngle, this method will\n  // return the same values as providied in the original parameter\n  // list OR functionally equivalent values.\n  // Example: The quaternion formed by axis [0, 0, 1] and angle -90\n  // is the same as the quaternion formed by [0, 0, 1] and 270.\n  // This method favors the latter.\n  // @return {{[x,y,z], Number}}\n  // getAxisAngle() {\n  //   const axis = [];\n  //   const angle = quat.getAxisAngle(axis, this);\n  //   return {axis, angle};\n  // }\n  // MODIFIERS\n  // Sets a quaternion to represent the shortest rotation from one vector\n  // to another. Both vectors are assumed to be unit length.\n  rotationTo(vectorA: NumericArray, vectorB: NumericArray): this {\n    quat.rotationTo(this, vectorA, vectorB);\n    return this.check();\n  }\n\n  // Sets the specified quaternion with values corresponding to the given axes.\n  // Each axis is a vec3 and is expected to be unit length and perpendicular\n  // to all other specified axes.\n  // setAxes() {\n  //   Number\n  // }\n  // Performs a spherical linear interpolation with two control points\n  // sqlerp() {\n  //   Number;\n  // }\n  // Adds two quat's\n  add(a: Readonly<NumericArray>): this {\n    quat.add(this, this, a);\n    return this.check();\n  }\n\n  // Calculates the W component of a quat from the X, Y, and Z components.\n  // Any existing W component will be ignored.\n  calculateW(): this {\n    quat.calculateW(this, this);\n    return this.check();\n  }\n\n  // Calculates the conjugate of a quat If the quaternion is normalized,\n  // this function is faster than quat.inverse and produces the same result.\n  conjugate(): this {\n    quat.conjugate(this, this);\n    return this.check();\n  }\n\n  // Calculates the inverse of a quat\n  invert(): this {\n    quat.invert(this, this);\n    return this.check();\n  }\n\n  // Performs a linear interpolation between two quat's\n  lerp(a: Readonly<NumericArray>, b: Readonly<NumericArray> | number, t?: number): this {\n    if (t === undefined) {\n      return this.lerp(this, a, b as number);\n    }\n    quat.lerp(this, a, b as NumericArray, t);\n    return this.check();\n  }\n\n  // Multiplies two quat's\n  multiplyRight(a: Readonly<NumericArray>): this {\n    quat.multiply(this, this, a);\n    return this.check();\n  }\n\n  multiplyLeft(a: Readonly<NumericArray>): this {\n    quat.multiply(this, a, this);\n    return this.check();\n  }\n\n  // Normalize a quat\n  normalize(): this {\n    // Handle 0 case\n    const length = this.len();\n    const l = length > 0 ? 1 / length : 0;\n    this[0] = this[0] * l;\n    this[1] = this[1] * l;\n    this[2] = this[2] * l;\n    this[3] = this[3] * l;\n    // Set to [0, 0, 0, 1] if length is 0\n    if (length === 0) {\n      this[3] = 1;\n    }\n    return this.check();\n  }\n\n  // Rotates a quaternion by the given angle about the X axis\n  rotateX(rad: number): this {\n    quat.rotateX(this, this, rad);\n    return this.check();\n  }\n\n  // Rotates a quaternion by the given angle about the Y axis\n  rotateY(rad: number): this {\n    quat.rotateY(this, this, rad);\n    return this.check();\n  }\n\n  // Rotates a quaternion by the given angle about the Z axis\n  rotateZ(rad: number): this {\n    quat.rotateZ(this, this, rad);\n    return this.check();\n  }\n\n  // Scales a quat by a scalar number\n  scale(b: number): this {\n    quat.scale(this, this, b);\n    return this.check();\n  }\n\n  slerp(target: Readonly<NumericArray>, ratio: number): this;\n  slerp(start: Readonly<NumericArray>, target: Readonly<NumericArray>, ratio: number): this;\n  slerp(params: {\n    start: Readonly<NumericArray>;\n    target: Readonly<NumericArray>;\n    ratio: number;\n  }): this;\n\n  // Performs a spherical linear interpolation between two quat\n  slerp(\n    arg0:\n      | Readonly<NumericArray>\n      | {\n          start: Readonly<NumericArray>;\n          target: Readonly<NumericArray>;\n          ratio: number;\n        },\n    arg1?: Readonly<NumericArray> | number,\n    arg2?: number\n  ): this {\n    let start: Readonly<NumericArray>;\n    let target: Readonly<NumericArray>;\n    let ratio: number;\n    // eslint-disable-next-line prefer-rest-params\n    switch (arguments.length) {\n      case 1: // Deprecated signature ({start, target, ratio})\n        // eslint-disable-next-line prefer-rest-params\n        ({\n          start = IDENTITY_QUATERNION,\n          target,\n          ratio\n        } = arg0 as {\n          start: Readonly<NumericArray>;\n          target: Readonly<NumericArray>;\n          ratio: number;\n        });\n        break;\n      case 2: // THREE.js compatibility signature (target, ration)\n        start = this; // eslint-disable-line\n        target = arg0 as Readonly<NumericArray>;\n        ratio = arg1 as number;\n        break;\n      default:\n        // Default signature: (start, target, ratio)\n        start = arg0 as Readonly<NumericArray>;\n        target = arg1 as Readonly<NumericArray>;\n        ratio = arg2;\n    }\n    quat.slerp(this, start, target, ratio);\n    return this.check();\n  }\n\n  transformVector4(\n    vector: Readonly<NumericArray>,\n    result: NumericArray = new Vector4()\n  ): NumericArray {\n    vec4.transformQuat(result, vector, this);\n    return checkVector(result, 4);\n  }\n\n  // THREE.js Math API compatibility\n  lengthSq(): number {\n    return this.lengthSquared();\n  }\n\n  setFromAxisAngle(axis: Readonly<NumericArray>, rad: number): this {\n    return this.setAxisAngle(axis, rad);\n  }\n\n  premultiply(a: Readonly<NumericArray>): this {\n    return this.multiplyLeft(a);\n  }\n\n  multiply(a: Readonly<NumericArray>): this {\n    return this.multiplyRight(a);\n  }\n}\n","// This file is derived from the Cesium math library under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {Vector3, Matrix3, Matrix4, Quaternion, NumericArray} from '@math.gl/core';\nimport type {BoundingVolume} from './bounding-volume';\nimport BoundingSphere from './bounding-sphere';\nimport type Plane from '../plane';\nimport {INTERSECTION} from '../../constants';\n\nconst scratchVector3 = new Vector3();\nconst scratchOffset = new Vector3();\nconst scratchVectorU = new Vector3();\nconst scratchVectorV = new Vector3();\nconst scratchVectorW = new Vector3();\nconst scratchCorner = new Vector3();\nconst scratchToCenter = new Vector3();\n\nconst MATRIX3 = {\n  COLUMN0ROW0: 0,\n  COLUMN0ROW1: 1,\n  COLUMN0ROW2: 2,\n  COLUMN1ROW0: 3,\n  COLUMN1ROW1: 4,\n  COLUMN1ROW2: 5,\n  COLUMN2ROW0: 6,\n  COLUMN2ROW1: 7,\n  COLUMN2ROW2: 8\n};\n\n/**\n * An OrientedBoundingBox of some object is a closed and convex cuboid.\n * It can provide a tighter bounding volume than `BoundingSphere` or\n * `AxisAlignedBoundingBox` in many cases.\n */\nexport default class OrientedBoundingBox implements BoundingVolume {\n  center: Vector3;\n  halfAxes: Matrix3;\n\n  /**\n   * An OrientedBoundingBox of some object is a closed and convex cuboid.\n   * It can provide a tighter bounding volume than\n   * `BoundingSphere` or `AxisAlignedBoundingBox` in many cases.\n   */\n  constructor(center?: readonly number[], halfAxes?: readonly number[]);\n  constructor(center: Readonly<NumericArray> = [0, 0, 0], halfAxes = [0, 0, 0, 0, 0, 0, 0, 0, 0]) {\n    this.center = new Vector3().from(center);\n    this.halfAxes = new Matrix3(halfAxes);\n  }\n\n  /** Returns an array with three halfSizes for the bounding box */\n  get halfSize(): number[] {\n    const xAxis = this.halfAxes.getColumn(0);\n    const yAxis = this.halfAxes.getColumn(1);\n    const zAxis = this.halfAxes.getColumn(2);\n    return [new Vector3(xAxis).len(), new Vector3(yAxis).len(), new Vector3(zAxis).len()];\n  }\n\n  /** Returns a quaternion describing the orientation of the bounding box */\n  get quaternion(): Quaternion {\n    const xAxis = this.halfAxes.getColumn(0);\n    const yAxis = this.halfAxes.getColumn(1);\n    const zAxis = this.halfAxes.getColumn(2);\n    const normXAxis = new Vector3(xAxis).normalize();\n    const normYAxis = new Vector3(yAxis).normalize();\n    const normZAxis = new Vector3(zAxis).normalize();\n    return new Quaternion().fromMatrix3(new Matrix3([...normXAxis, ...normYAxis, ...normZAxis]));\n  }\n\n  /**\n   * Create OrientedBoundingBox from quaternion based OBB,\n   */\n  fromCenterHalfSizeQuaternion(\n    center: number[],\n    halfSize: number[],\n    quaternion: number[]\n  ): OrientedBoundingBox {\n    const quaternionObject = new Quaternion(quaternion);\n    const directionsMatrix = new Matrix3().fromQuaternion(quaternionObject);\n    directionsMatrix[0] = directionsMatrix[0] * halfSize[0];\n    directionsMatrix[1] = directionsMatrix[1] * halfSize[0];\n    directionsMatrix[2] = directionsMatrix[2] * halfSize[0];\n    directionsMatrix[3] = directionsMatrix[3] * halfSize[1];\n    directionsMatrix[4] = directionsMatrix[4] * halfSize[1];\n    directionsMatrix[5] = directionsMatrix[5] * halfSize[1];\n    directionsMatrix[6] = directionsMatrix[6] * halfSize[2];\n    directionsMatrix[7] = directionsMatrix[7] * halfSize[2];\n    directionsMatrix[8] = directionsMatrix[8] * halfSize[2];\n    this.center = new Vector3().from(center);\n    this.halfAxes = directionsMatrix;\n    return this;\n  }\n\n  /** Duplicates a OrientedBoundingBox instance. */\n  clone(): OrientedBoundingBox {\n    return new OrientedBoundingBox(this.center, this.halfAxes);\n  }\n\n  /** Compares the provided OrientedBoundingBox component wise and returns */\n  equals(right: OrientedBoundingBox): boolean {\n    return (\n      this === right ||\n      (Boolean(right) && this.center.equals(right.center) && this.halfAxes.equals(right.halfAxes))\n    );\n  }\n\n  /** Computes a tight-fitting bounding sphere enclosing the provided oriented bounding box. */\n  getBoundingSphere(result = new BoundingSphere()): BoundingSphere {\n    const halfAxes = this.halfAxes;\n    const u = halfAxes.getColumn(0, scratchVectorU);\n    const v = halfAxes.getColumn(1, scratchVectorV);\n    const w = halfAxes.getColumn(2, scratchVectorW);\n\n    // Calculate \"corner\" vector\n    const cornerVector = scratchVector3.copy(u).add(v).add(w);\n\n    result.center.copy(this.center);\n    result.radius = cornerVector.magnitude();\n\n    return result;\n  }\n\n  /** Determines which side of a plane the oriented bounding box is located. */\n  intersectPlane(plane: Plane): number {\n    const center = this.center;\n    const normal = plane.normal;\n    const halfAxes = this.halfAxes;\n\n    const normalX = normal.x;\n    const normalY = normal.y;\n    const normalZ = normal.z;\n\n    // Plane is used as if it is its normal; the first three components are assumed to be normalized\n    const radEffective =\n      Math.abs(\n        normalX * halfAxes[MATRIX3.COLUMN0ROW0] +\n          normalY * halfAxes[MATRIX3.COLUMN0ROW1] +\n          normalZ * halfAxes[MATRIX3.COLUMN0ROW2]\n      ) +\n      Math.abs(\n        normalX * halfAxes[MATRIX3.COLUMN1ROW0] +\n          normalY * halfAxes[MATRIX3.COLUMN1ROW1] +\n          normalZ * halfAxes[MATRIX3.COLUMN1ROW2]\n      ) +\n      Math.abs(\n        normalX * halfAxes[MATRIX3.COLUMN2ROW0] +\n          normalY * halfAxes[MATRIX3.COLUMN2ROW1] +\n          normalZ * halfAxes[MATRIX3.COLUMN2ROW2]\n      );\n    const distanceToPlane = normal.dot(center) + plane.distance;\n\n    if (distanceToPlane <= -radEffective) {\n      // The entire box is on the negative side of the plane normal\n      return INTERSECTION.OUTSIDE;\n    } else if (distanceToPlane >= radEffective) {\n      // The entire box is on the positive side of the plane normal\n      return INTERSECTION.INSIDE;\n    }\n    return INTERSECTION.INTERSECTING;\n  }\n\n  /** Computes the estimated distance from the closest point on a bounding box to a point. */\n  distanceTo(point: readonly number[]): number {\n    return Math.sqrt(this.distanceSquaredTo(point));\n  }\n\n  /**\n   * Computes the estimated distance squared from the closest point\n   * on a bounding box to a point.\n   * See Geometric Tools for Computer Graphics 10.4.2\n   */\n  distanceSquaredTo(point: readonly number[]): number {\n    // Computes the estimated distance squared from the\n    // closest point on a bounding box to a point.\n    // See Geometric Tools for Computer Graphics 10.4.2\n    const offset = scratchOffset.from(point).subtract(this.center);\n\n    const halfAxes = this.halfAxes;\n    const u = halfAxes.getColumn(0, scratchVectorU);\n    const v = halfAxes.getColumn(1, scratchVectorV);\n    const w = halfAxes.getColumn(2, scratchVectorW);\n\n    const uHalf = u.magnitude();\n    const vHalf = v.magnitude();\n    const wHalf = w.magnitude();\n\n    u.normalize();\n    v.normalize();\n    w.normalize();\n\n    let distanceSquared = 0.0;\n    let d;\n\n    d = Math.abs(offset.dot(u)) - uHalf;\n    if (d > 0) {\n      distanceSquared += d * d;\n    }\n\n    d = Math.abs(offset.dot(v)) - vHalf;\n    if (d > 0) {\n      distanceSquared += d * d;\n    }\n\n    d = Math.abs(offset.dot(w)) - wHalf;\n    if (d > 0) {\n      distanceSquared += d * d;\n    }\n\n    return distanceSquared;\n  }\n\n  /**\n   * The distances calculated by the vector from the center of the bounding box\n   * to position projected onto direction.\n   *\n   * - If you imagine the infinite number of planes with normal direction,\n   *   this computes the smallest distance to the closest and farthest planes\n   *   from `position` that intersect the bounding box.\n   *\n   * @param position The position to calculate the distance from.\n   * @param direction The direction from position.\n   * @param result An Interval (array of length 2) to store the nearest and farthest distances.\n   * @returns Interval (array of length 2) with nearest and farthest distances\n   *   on the bounding box from position in direction.\n   */\n  // eslint-disable-next-line max-statements\n  computePlaneDistances(\n    position: readonly number[],\n    direction: Vector3,\n    result: number[] = [-0, -0]\n  ): number[] {\n    let minDist = Number.POSITIVE_INFINITY;\n    let maxDist = Number.NEGATIVE_INFINITY;\n\n    const center = this.center;\n    const halfAxes = this.halfAxes;\n\n    const u = halfAxes.getColumn(0, scratchVectorU);\n    const v = halfAxes.getColumn(1, scratchVectorV);\n    const w = halfAxes.getColumn(2, scratchVectorW);\n\n    // project first corner\n    const corner = scratchCorner.copy(u).add(v).add(w).add(center);\n\n    const toCenter = scratchToCenter.copy(corner).subtract(position);\n    let mag = direction.dot(toCenter);\n\n    minDist = Math.min(mag, minDist);\n    maxDist = Math.max(mag, maxDist);\n\n    // project second corner\n    corner.copy(center).add(u).add(v).subtract(w);\n\n    toCenter.copy(corner).subtract(position);\n    mag = direction.dot(toCenter);\n\n    minDist = Math.min(mag, minDist);\n    maxDist = Math.max(mag, maxDist);\n\n    // project third corner\n    corner.copy(center).add(u).subtract(v).add(w);\n\n    toCenter.copy(corner).subtract(position);\n    mag = direction.dot(toCenter);\n\n    minDist = Math.min(mag, minDist);\n    maxDist = Math.max(mag, maxDist);\n\n    // project fourth corner\n    corner.copy(center).add(u).subtract(v).subtract(w);\n\n    toCenter.copy(corner).subtract(position);\n    mag = direction.dot(toCenter);\n\n    minDist = Math.min(mag, minDist);\n    maxDist = Math.max(mag, maxDist);\n\n    // project fifth corner\n    center.copy(corner).subtract(u).add(v).add(w);\n\n    toCenter.copy(corner).subtract(position);\n    mag = direction.dot(toCenter);\n\n    minDist = Math.min(mag, minDist);\n    maxDist = Math.max(mag, maxDist);\n\n    // project sixth corner\n    center.copy(corner).subtract(u).add(v).subtract(w);\n\n    toCenter.copy(corner).subtract(position);\n    mag = direction.dot(toCenter);\n\n    minDist = Math.min(mag, minDist);\n    maxDist = Math.max(mag, maxDist);\n\n    // project seventh corner\n    center.copy(corner).subtract(u).subtract(v).add(w);\n\n    toCenter.copy(corner).subtract(position);\n    mag = direction.dot(toCenter);\n\n    minDist = Math.min(mag, minDist);\n    maxDist = Math.max(mag, maxDist);\n\n    // project eighth corner\n    center.copy(corner).subtract(u).subtract(v).subtract(w);\n\n    toCenter.copy(corner).subtract(position);\n    mag = direction.dot(toCenter);\n\n    minDist = Math.min(mag, minDist);\n    maxDist = Math.max(mag, maxDist);\n\n    result[0] = minDist;\n    result[1] = maxDist;\n    return result;\n  }\n\n  /**\n   * Applies a 4x4 affine transformation matrix to a bounding sphere.\n   * @param transform The transformation matrix to apply to the bounding sphere.\n   * @returns itself, i.e. the modified BoundingVolume.\n   */\n  transform(transformation: readonly number[]): this {\n    this.center.transformAsPoint(transformation);\n\n    const xAxis = this.halfAxes.getColumn(0, scratchVectorU);\n    xAxis.transformAsPoint(transformation);\n\n    const yAxis = this.halfAxes.getColumn(1, scratchVectorV);\n    yAxis.transformAsPoint(transformation);\n\n    const zAxis = this.halfAxes.getColumn(2, scratchVectorW);\n    zAxis.transformAsPoint(transformation);\n\n    this.halfAxes = new Matrix3([...xAxis, ...yAxis, ...zAxis]);\n    return this;\n  }\n\n  getTransform(): Matrix4 {\n    // const modelMatrix = Matrix4.fromRotationTranslation(this.boundingVolume.halfAxes, this.boundingVolume.center);\n    // return modelMatrix;\n    throw new Error('not implemented');\n  }\n}\n","// This file is derived from the Cesium math library under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\n/* eslint-disable */\nimport {Vector3, equals, assert, NumericArray} from '@math.gl/core';\n\nconst scratchPosition = new Vector3();\nconst scratchNormal = new Vector3();\n\n// A plane in Hessian Normal Form\nexport default class Plane {\n  readonly normal: Vector3;\n  distance: number;\n\n  constructor(normal: Readonly<NumericArray> = [0, 0, 1], distance: number = 0) {\n    this.normal = new Vector3();\n    this.distance = -0;\n    this.fromNormalDistance(normal, distance);\n  }\n\n  /** Creates a plane from a normal and a distance from the origin. */\n  fromNormalDistance(normal: Readonly<NumericArray>, distance: number): this {\n    assert(Number.isFinite(distance));\n    this.normal.from(normal).normalize();\n    this.distance = distance;\n    return this;\n  }\n\n  /** Creates a plane from a normal and a point on the plane. */\n  fromPointNormal(point: Readonly<NumericArray>, normal: Readonly<NumericArray>): this {\n    point = scratchPosition.from(point);\n    this.normal.from(normal).normalize();\n    const distance = -this.normal.dot(point);\n    this.distance = distance;\n    return this;\n  }\n\n  /** Creates a plane from the general equation */\n  fromCoefficients(a: number, b: number, c: number, d: number): this {\n    this.normal.set(a, b, c);\n    assert(equals(this.normal.len(), 1));\n    this.distance = d;\n    return this;\n  }\n\n  /** Duplicates a Plane instance. */\n  clone(): Plane {\n    return new Plane(this.normal, this.distance);\n  }\n\n  /** Compares the provided Planes by normal and distance */\n  equals(right: Plane): boolean {\n    return equals(this.distance, right.distance) && equals(this.normal, right.normal);\n  }\n\n  /** Computes the signed shortest distance of a point to a plane.\n   * The sign of the distance determines which side of the plane the point is on.\n   */\n  getPointDistance(point: Readonly<NumericArray>): number {\n    return this.normal.dot(point) + this.distance;\n  }\n\n  /** Transforms the plane by the given transformation matrix. */\n  transform(matrix4: Readonly<NumericArray>): this {\n    const normal = scratchNormal.copy(this.normal).transformAsVector(matrix4).normalize();\n    const point = this.normal.scale(-this.distance).transform(matrix4);\n    return this.fromPointNormal(point, normal);\n  }\n\n  /** Projects a point onto the plane. */\n  projectPointOntoPlane(point: Readonly<NumericArray>, result: Vector3): Vector3;\n  projectPointOntoPlane(\n    point: Readonly<NumericArray>,\n    result?: readonly number[]\n  ): readonly number[];\n\n  projectPointOntoPlane(point, result = [0, 0, 0]) {\n    point = scratchPosition.from(point);\n    // projectedPoint = point - (normal.point + scale) * normal\n    const pointDistance = this.getPointDistance(point);\n    const scaledNormal = scratchNormal.copy(this.normal).scale(pointDistance);\n\n    return point.subtract(scaledNormal).to(result);\n  }\n}\n","// This file is derived from the Cesium math library under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\n/* eslint-disable */\nimport {Vector3, assert} from '@math.gl/core';\nimport {INTERSECTION} from '../constants';\nimport Plane from './plane';\nimport type {BoundingVolume} from './bounding-volumes/bounding-volume';\nimport type BoundingSphere from './bounding-volumes/bounding-sphere';\n\n// X, Y, Z Unit vectors\nconst faces = [new Vector3([1, 0, 0]), new Vector3([0, 1, 0]), new Vector3([0, 0, 1])];\n\nconst scratchPlaneCenter = new Vector3();\nconst scratchPlaneNormal = new Vector3();\nconst scratchPlane = new Plane(new Vector3(1.0, 0.0, 0.0), 0.0);\n\n/** A culling volume defined by planes. */\nexport default class CullingVolume {\n  /**\n   * For plane masks (as used in {@link CullingVolume#computeVisibilityWithPlaneMask}), this special value\n   * represents the case where the object bounding volume is entirely outside the culling volume.\n   */\n  static MASK_OUTSIDE = 0xffffffff;\n\n  /**\n   * For plane masks (as used in {@link CullingVolume.prototype.computeVisibilityWithPlaneMask}), this value\n   * represents the case where the object bounding volume is entirely inside the culling volume.\n   */\n  static MASK_INSIDE = 0x00000000;\n\n  /**\n   * For plane masks (as used in {@link CullingVolume.prototype.computeVisibilityWithPlaneMask}), this value\n   * represents the case where the object bounding volume (may) intersect all planes of the culling volume.\n   */\n  static MASK_INDETERMINATE = 0x7fffffff;\n\n  /** Array of clipping planes. */\n  readonly planes: Plane[];\n\n  /**\n   * Create a new `CullingVolume` bounded by an array of clipping planed\n   * @param planes Array of clipping planes.\n   * */\n  constructor(planes: Plane[] = []) {\n    this.planes = planes;\n  }\n\n  /**\n   * Constructs a culling volume from a bounding sphere. Creates six planes that create a box containing the sphere.\n   * The planes are aligned to the x, y, and z axes in world coordinates.\n   */\n  fromBoundingSphere(boundingSphere: BoundingSphere): CullingVolume {\n    this.planes.length = 2 * faces.length;\n\n    const center = boundingSphere.center;\n    const radius = boundingSphere.radius;\n\n    let planeIndex = 0;\n\n    for (const faceNormal of faces) {\n      let plane0 = this.planes[planeIndex];\n      let plane1 = this.planes[planeIndex + 1];\n\n      if (!plane0) {\n        plane0 = this.planes[planeIndex] = new Plane();\n      }\n      if (!plane1) {\n        plane1 = this.planes[planeIndex + 1] = new Plane();\n      }\n\n      const plane0Center = scratchPlaneCenter.copy(faceNormal).scale(-radius).add(center);\n      const plane0Distance = -faceNormal.dot(plane0Center);\n\n      plane0.fromPointNormal(plane0Center, faceNormal);\n\n      const plane1Center = scratchPlaneCenter.copy(faceNormal).scale(radius).add(center);\n\n      const negatedFaceNormal = scratchPlaneNormal.copy(faceNormal).negate();\n\n      const plane1Distance = -negatedFaceNormal.dot(plane1Center);\n\n      plane1.fromPointNormal(plane1Center, negatedFaceNormal);\n\n      planeIndex += 2;\n    }\n\n    return this;\n  }\n\n  /** Determines whether a bounding volume intersects the culling volume. */\n  computeVisibility(boundingVolume: BoundingVolume): number {\n    // const planes = this.planes;\n    let intersect: number = INTERSECTION.INSIDE;\n    for (const plane of this.planes) {\n      const result = boundingVolume.intersectPlane(plane);\n      switch (result) {\n        case INTERSECTION.OUTSIDE:\n          // We are done\n          return INTERSECTION.OUTSIDE;\n\n        case INTERSECTION.INTERSECTING:\n          // If no other intersection is outside, return INTERSECTING\n          intersect = INTERSECTION.INTERSECTING;\n          break;\n\n        default:\n      }\n    }\n\n    return intersect;\n  }\n\n  /**\n   * Determines whether a bounding volume intersects the culling volume.\n   *\n   * @param parentPlaneMask A bit mask from the boundingVolume's parent's check against the same culling\n   *   volume, such that if (planeMask & (1 << planeIndex) === 0), for k < 31, then\n   *   the parent (and therefore this) volume is completely inside plane[planeIndex]\n   *   and that plane check can be skipped.\n   */\n  computeVisibilityWithPlaneMask(boundingVolume: BoundingVolume, parentPlaneMask: number): number {\n    assert(Number.isFinite(parentPlaneMask), 'parentPlaneMask is required.');\n\n    if (\n      parentPlaneMask === CullingVolume.MASK_OUTSIDE ||\n      parentPlaneMask === CullingVolume.MASK_INSIDE\n    ) {\n      // parent is completely outside or completely inside, so this child is as well.\n      return parentPlaneMask;\n    }\n\n    // Start with MASK_INSIDE (all zeros) so that after the loop, the return value can be compared with MASK_INSIDE.\n    // (Because if there are fewer than 31 planes, the upper bits wont be changed.)\n    let mask = CullingVolume.MASK_INSIDE;\n\n    const planes = this.planes;\n    for (let k = 0; k < this.planes.length; ++k) {\n      // For k greater than 31 (since 31 is the maximum number of INSIDE/INTERSECTING bits we can store), skip the optimization.\n      const flag = k < 31 ? 1 << k : 0;\n      if (k < 31 && (parentPlaneMask & flag) === 0) {\n        // boundingVolume is known to be INSIDE this plane.\n        continue;\n      }\n\n      const plane = planes[k];\n      const result = boundingVolume.intersectPlane(plane);\n      if (result === INTERSECTION.OUTSIDE) {\n        return CullingVolume.MASK_OUTSIDE;\n      } else if (result === INTERSECTION.INTERSECTING) {\n        mask |= flag;\n      }\n    }\n\n    return mask;\n  }\n}\n","// Copyright (c) 2017 Uber Technologies, Inc.\n// MIT License\nimport Matrix from './base/matrix';\nimport {NumericArray} from '@math.gl/types';\nimport {checkVector} from '../lib/validators';\n\n/* eslint-disable camelcase */\nimport {vec2_transformMat4AsVector, vec3_transformMat4AsVector} from '../lib/gl-matrix-extras';\nimport * as mat4 from 'gl-matrix/mat4';\nimport * as vec2 from 'gl-matrix/vec2';\nimport * as vec3 from 'gl-matrix/vec3';\nimport * as vec4 from 'gl-matrix/vec4';\n\nenum INDICES {\n  COL0ROW0 = 0,\n  COL0ROW1 = 1,\n  COL0ROW2 = 2,\n  COL0ROW3 = 3,\n  COL1ROW0 = 4,\n  COL1ROW1 = 5,\n  COL1ROW2 = 6,\n  COL1ROW3 = 7,\n  COL2ROW0 = 8,\n  COL2ROW1 = 9,\n  COL2ROW2 = 10,\n  COL2ROW3 = 11,\n  COL3ROW0 = 12,\n  COL3ROW1 = 13,\n  COL3ROW2 = 14,\n  COL3ROW3 = 15\n}\n\nconst DEFAULT_FOVY = (45 * Math.PI) / 180;\nconst DEFAULT_ASPECT = 1;\nconst DEFAULT_NEAR = 0.1;\nconst DEFAULT_FAR = 500;\n\nconst IDENTITY_MATRIX = Object.freeze([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);\n\n/** 4x4 matrix */\nexport default class Matrix4 extends Matrix {\n  static get IDENTITY(): Readonly<Matrix4> {\n    return getIdentityMatrix();\n  }\n\n  static get ZERO(): Readonly<Matrix4> {\n    return getZeroMatrix();\n  }\n\n  get ELEMENTS(): number {\n    return 16;\n  }\n\n  get RANK(): number {\n    return 4;\n  }\n\n  get INDICES(): typeof INDICES {\n    return INDICES;\n  }\n\n  constructor(array?: Readonly<NumericArray>) {\n    // PERF NOTE: initialize elements as double precision numbers\n    super(-0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0);\n    if (arguments.length === 1 && Array.isArray(array)) {\n      this.copy(array);\n    } else {\n      this.identity();\n    }\n  }\n\n  copy(array: Readonly<NumericArray>): this {\n    this[0] = array[0];\n    this[1] = array[1];\n    this[2] = array[2];\n    this[3] = array[3];\n    this[4] = array[4];\n    this[5] = array[5];\n    this[6] = array[6];\n    this[7] = array[7];\n    this[8] = array[8];\n    this[9] = array[9];\n    this[10] = array[10];\n    this[11] = array[11];\n    this[12] = array[12];\n    this[13] = array[13];\n    this[14] = array[14];\n    this[15] = array[15];\n    return this.check();\n  }\n\n  // eslint-disable-next-line max-params\n  set(\n    m00: number,\n    m10: number,\n    m20: number,\n    m30: number,\n    m01: number,\n    m11: number,\n    m21: number,\n    m31: number,\n    m02: number,\n    m12: number,\n    m22: number,\n    m32: number,\n    m03: number,\n    m13: number,\n    m23: number,\n    m33: number\n  ): this {\n    this[0] = m00;\n    this[1] = m10;\n    this[2] = m20;\n    this[3] = m30;\n    this[4] = m01;\n    this[5] = m11;\n    this[6] = m21;\n    this[7] = m31;\n    this[8] = m02;\n    this[9] = m12;\n    this[10] = m22;\n    this[11] = m32;\n    this[12] = m03;\n    this[13] = m13;\n    this[14] = m23;\n    this[15] = m33;\n    return this.check();\n  }\n\n  // accepts row major order, stores as column major\n  // eslint-disable-next-line max-params\n  setRowMajor(\n    m00: number,\n    m01: number,\n    m02: number,\n    m03: number,\n    m10: number,\n    m11: number,\n    m12: number,\n    m13: number,\n    m20: number,\n    m21: number,\n    m22: number,\n    m23: number,\n    m30: number,\n    m31: number,\n    m32: number,\n    m33: number\n  ): this {\n    this[0] = m00;\n    this[1] = m10;\n    this[2] = m20;\n    this[3] = m30;\n    this[4] = m01;\n    this[5] = m11;\n    this[6] = m21;\n    this[7] = m31;\n    this[8] = m02;\n    this[9] = m12;\n    this[10] = m22;\n    this[11] = m32;\n    this[12] = m03;\n    this[13] = m13;\n    this[14] = m23;\n    this[15] = m33;\n    return this.check();\n  }\n\n  toRowMajor(result: NumericArray): NumericArray {\n    result[0] = this[0];\n    result[1] = this[4];\n    result[2] = this[8];\n    result[3] = this[12];\n    result[4] = this[1];\n    result[5] = this[5];\n    result[6] = this[9];\n    result[7] = this[13];\n    result[8] = this[2];\n    result[9] = this[6];\n    result[10] = this[10];\n    result[11] = this[14];\n    result[12] = this[3];\n    result[13] = this[7];\n    result[14] = this[11];\n    result[15] = this[15];\n    return result;\n  }\n\n  // Constructors\n\n  /** Set to identity matrix */\n  identity(): this {\n    return this.copy(IDENTITY_MATRIX);\n  }\n\n  /**\n   *\n   * @param object\n   * @returns self\n   */\n  fromObject(object: {[key: string]: any}): this {\n    return this.check();\n  }\n\n  /**\n   * Calculates a 4x4 matrix from the given quaternion\n   * @param quaternion Quaternion to create matrix from\n   * @returns self\n   */\n  fromQuaternion(quaternion: Readonly<NumericArray>): this {\n    mat4.fromQuat(this, quaternion);\n    return this.check();\n  }\n\n  /**\n   * Generates a frustum matrix with the given bounds\n   * @param view.left - Left bound of the frustum\n   * @param view.right - Right bound of the frustum\n   * @param view.bottom - Bottom bound of the frustum\n   * @param view.top - Top bound of the frustum\n   * @param view.near - Near bound of the frustum\n   * @param view.far - Far bound of the frustum. Can be set to Infinity.\n   * @returns self\n   */\n  frustum(view: {\n    left: number;\n    right: number;\n    bottom: number;\n    top: number;\n    near: number;\n    far?: number;\n  }): this {\n    const {left, right, bottom, top, near = DEFAULT_NEAR, far = DEFAULT_FAR} = view;\n    if (far === Infinity) {\n      computeInfinitePerspectiveOffCenter(this, left, right, bottom, top, near);\n    } else {\n      mat4.frustum(this, left, right, bottom, top, near, far);\n    }\n    return this.check();\n  }\n\n  /**\n   * Generates a look-at matrix with the given eye position, focal point,\n   * and up axis\n   * @param view.eye - (vector) Position of the viewer\n   * @param view.center - (vector) Point the viewer is looking at\n   * @param view.up - (vector) Up axis\n   * @returns self\n   */\n  lookAt(view: {\n    eye: Readonly<NumericArray>;\n    center?: Readonly<NumericArray>;\n    up?: Readonly<NumericArray>;\n  }): this {\n    const {eye, center = [0, 0, 0], up = [0, 1, 0]} = view;\n    mat4.lookAt(this, eye, center, up);\n    return this.check();\n  }\n\n  /**\n   * Generates a orthogonal projection matrix with the given bounds\n   * from \"traditional\" view space parameters\n   * @param view.left - Left bound of the frustum\n   * @param view.right number  Right bound of the frustum\n   * @param view.bottom - Bottom bound of the frustum\n   * @param view.top number  Top bound of the frustum\n   * @param view.near - Near bound of the frustum\n   * @param view.far number  Far bound of the frustum\n   * @returns self\n   */\n  ortho(view: {\n    left: number;\n    right: number;\n    bottom: number;\n    top: number;\n    near?: number;\n    far?: number;\n  }): this {\n    const {left, right, bottom, top, near = DEFAULT_NEAR, far = DEFAULT_FAR} = view;\n    mat4.ortho(this, left, right, bottom, top, near, far);\n    return this.check();\n  }\n\n  /**\n   * Generates an orthogonal projection matrix with the same parameters\n   * as a perspective matrix (plus focalDistance)\n   * @param view.fovy Vertical field of view in radians\n   * @param view.aspect Aspect ratio. Typically viewport width / viewport height\n   * @param view.focalDistance Distance in the view frustum used for extent calculations\n   * @param view.near Near bound of the frustum\n   * @param view.far Far bound of the frustum\n   * @returns self\n   */\n  orthographic(view: {\n    fovy?: number;\n    aspect?: number;\n    focalDistance?: number;\n    near?: number;\n    far?: number;\n  }): this {\n    const {\n      fovy = DEFAULT_FOVY,\n      aspect = DEFAULT_ASPECT,\n      focalDistance = 1,\n      near = DEFAULT_NEAR,\n      far = DEFAULT_FAR\n    } = view;\n\n    checkRadians(fovy);\n\n    const halfY = fovy / 2;\n    const top = focalDistance * Math.tan(halfY); // focus_plane is the distance from the camera\n    const right = top * aspect;\n\n    return this.ortho({\n      left: -right,\n      right,\n      bottom: -top,\n      top,\n      near,\n      far\n    });\n  }\n\n  /**\n   * Generates a perspective projection matrix with the given bounds\n   * @param view.fovy Vertical field of view in radians\n   * @param view.aspect Aspect ratio. typically viewport width/height\n   * @param view.near Near bound of the frustum\n   * @param view.far Far bound of the frustum\n   * @returns self\n   */\n  perspective(view: {fovy: number; aspect?: number; near?: number; far?: number}): this {\n    const {fovy = (45 * Math.PI) / 180, aspect = 1, near = 0.1, far = 500} = view;\n    checkRadians(fovy);\n    mat4.perspective(this, fovy, aspect, near, far);\n    return this.check();\n  }\n\n  // Accessors\n\n  determinant(): number {\n    return mat4.determinant(this);\n  }\n\n  /**\n   * Extracts the non-uniform scale assuming the matrix is an affine transformation.\n   * The scales are the \"lengths\" of the column vectors in the upper-left 3x3 matrix.\n   * @param result\n   * @returns self\n   */\n  getScale(result: NumericArray = [-0, -0, -0]): NumericArray {\n    // explicit is faster than hypot...\n    result[0] = Math.sqrt(this[0] * this[0] + this[1] * this[1] + this[2] * this[2]);\n    result[1] = Math.sqrt(this[4] * this[4] + this[5] * this[5] + this[6] * this[6]);\n    result[2] = Math.sqrt(this[8] * this[8] + this[9] * this[9] + this[10] * this[10]);\n    // result[0] = Math.hypot(this[0], this[1], this[2]);\n    // result[1] = Math.hypot(this[4], this[5], this[6]);\n    // result[2] = Math.hypot(this[8], this[9], this[10]);\n    return result;\n  }\n\n  /**\n   * Gets the translation portion, assuming the matrix is a affine transformation matrix.\n   * @param result\n   * @returns self\n   */\n  getTranslation(result: NumericArray = [-0, -0, -0]): NumericArray {\n    result[0] = this[12];\n    result[1] = this[13];\n    result[2] = this[14];\n    return result;\n  }\n\n  /**\n   * Gets upper left 3x3 pure rotation matrix (non-scaling), assume affine transformation matrix\n   * @param result\n   * @param scaleResult\n   * @returns self\n   */\n  getRotation(result?: NumericArray, scaleResult?: NumericArray): NumericArray {\n    result = result || [-0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0];\n    scaleResult = scaleResult || [-0, -0, -0];\n    const scale = this.getScale(scaleResult);\n    const inverseScale0 = 1 / scale[0];\n    const inverseScale1 = 1 / scale[1];\n    const inverseScale2 = 1 / scale[2];\n    result[0] = this[0] * inverseScale0;\n    result[1] = this[1] * inverseScale1;\n    result[2] = this[2] * inverseScale2;\n    result[3] = 0;\n    result[4] = this[4] * inverseScale0;\n    result[5] = this[5] * inverseScale1;\n    result[6] = this[6] * inverseScale2;\n    result[7] = 0;\n    result[8] = this[8] * inverseScale0;\n    result[9] = this[9] * inverseScale1;\n    result[10] = this[10] * inverseScale2;\n    result[11] = 0;\n    result[12] = 0;\n    result[13] = 0;\n    result[14] = 0;\n    result[15] = 1;\n    return result;\n  }\n\n  /**\n   *\n   * @param result\n   * @param scaleResult\n   * @returns self\n   */\n  getRotationMatrix3(result?: NumericArray, scaleResult?: NumericArray): NumericArray {\n    result = result || [-0, -0, -0, -0, -0, -0, -0, -0, -0];\n    scaleResult = scaleResult || [-0, -0, -0];\n    const scale = this.getScale(scaleResult);\n    const inverseScale0 = 1 / scale[0];\n    const inverseScale1 = 1 / scale[1];\n    const inverseScale2 = 1 / scale[2];\n    result[0] = this[0] * inverseScale0;\n    result[1] = this[1] * inverseScale1;\n    result[2] = this[2] * inverseScale2;\n    result[3] = this[4] * inverseScale0;\n    result[4] = this[5] * inverseScale1;\n    result[5] = this[6] * inverseScale2;\n    result[6] = this[8] * inverseScale0;\n    result[7] = this[9] * inverseScale1;\n    result[8] = this[10] * inverseScale2;\n    return result;\n  }\n\n  // Modifiers\n\n  transpose(): this {\n    mat4.transpose(this, this);\n    return this.check();\n  }\n\n  invert(): this {\n    mat4.invert(this, this);\n    return this.check();\n  }\n\n  // Operations\n\n  multiplyLeft(a: Readonly<NumericArray>): this {\n    mat4.multiply(this, a, this);\n    return this.check();\n  }\n\n  multiplyRight(a: Readonly<NumericArray>): this {\n    mat4.multiply(this, this, a);\n    return this.check();\n  }\n\n  // Rotates a matrix by the given angle around the X axis\n  rotateX(radians: number): this {\n    mat4.rotateX(this, this, radians);\n    // mat4.rotate(this, this, radians, [1, 0, 0]);\n    return this.check();\n  }\n\n  // Rotates a matrix by the given angle around the Y axis.\n  rotateY(radians: number): this {\n    mat4.rotateY(this, this, radians);\n    // mat4.rotate(this, this, radians, [0, 1, 0]);\n    return this.check();\n  }\n\n  /**\n   * Rotates a matrix by the given angle around the Z axis.\n   * @param radians\n   * @returns self\n   */\n  rotateZ(radians: number): this {\n    mat4.rotateZ(this, this, radians);\n    // mat4.rotate(this, this, radians, [0, 0, 1]);\n    return this.check();\n  }\n\n  /**\n   *\n   * @param param0\n   * @returns self\n   */\n  rotateXYZ(angleXYZ: Readonly<NumericArray>): this {\n    return this.rotateX(angleXYZ[0]).rotateY(angleXYZ[1]).rotateZ(angleXYZ[2]);\n  }\n\n  /**\n   *\n   * @param radians\n   * @param axis\n   * @returns self\n   */\n  rotateAxis(radians: number, axis: Readonly<NumericArray>): this {\n    mat4.rotate(this, this, radians, axis);\n    return this.check();\n  }\n\n  /**\n   *\n   * @param factor\n   * @returns self\n   */\n  scale(factor: number | Readonly<NumericArray>): this {\n    mat4.scale(this, this, Array.isArray(factor) ? factor : [factor, factor, factor]);\n    return this.check();\n  }\n\n  /**\n   *\n   * @param vec\n   * @returns self\n   */\n  translate(vector: Readonly<NumericArray>): this {\n    mat4.translate(this, this, vector);\n    return this.check();\n  }\n\n  // Transforms\n\n  /**\n   * Transforms any 2, 3 or 4 element vector. 2 and 3 elements are treated as points\n   * @param vector\n   * @param result\n   * @returns self\n   */\n  transform(vector: Readonly<NumericArray>, result?: NumericArray): NumericArray {\n    if (vector.length === 4) {\n      result = vec4.transformMat4(result || [-0, -0, -0, -0], vector, this);\n      checkVector(result, 4);\n      return result;\n    }\n    return this.transformAsPoint(vector, result);\n  }\n\n  /**\n   * Transforms any 2 or 3 element array as point (w implicitly 1)\n   * @param vector\n   * @param result\n   * @returns self\n   */\n  transformAsPoint(vector: Readonly<NumericArray>, result?: NumericArray): NumericArray {\n    const {length} = vector;\n    let out: NumericArray;\n    switch (length) {\n      case 2:\n        out = vec2.transformMat4(result || [-0, -0], vector, this);\n        break;\n      case 3:\n        out = vec3.transformMat4(result || [-0, -0, -0], vector, this);\n        break;\n      default:\n        throw new Error('Illegal vector');\n    }\n    checkVector(out, vector.length);\n    return out;\n  }\n\n  /**\n   * Transforms any 2 or 3 element array as vector (w implicitly 0)\n   * @param vector\n   * @param result\n   * @returns self\n   */\n  transformAsVector(vector: Readonly<NumericArray>, result?: NumericArray): NumericArray {\n    let out: NumericArray;\n    switch (vector.length) {\n      case 2:\n        out = vec2_transformMat4AsVector(result || [-0, -0], vector, this);\n        break;\n      case 3:\n        out = vec3_transformMat4AsVector(result || [-0, -0, -0], vector, this);\n        break;\n      default:\n        throw new Error('Illegal vector');\n    }\n    checkVector(out, vector.length);\n    return out;\n  }\n\n  /** @deprecated */\n  transformPoint(vector: Readonly<NumericArray>, result?: NumericArray): NumericArray {\n    return this.transformAsPoint(vector, result);\n  }\n\n  /** @deprecated */\n  transformVector(vector: Readonly<NumericArray>, result?: NumericArray): NumericArray {\n    return this.transformAsPoint(vector, result);\n  }\n\n  /** @deprecated */\n  transformDirection(vector: Readonly<NumericArray>, result?: NumericArray): NumericArray {\n    return this.transformAsVector(vector, result);\n  }\n\n  // three.js math API compatibility\n\n  makeRotationX(radians: number): this {\n    return this.identity().rotateX(radians);\n  }\n\n  makeTranslation(x: number, y: number, z: number): this {\n    return this.identity().translate([x, y, z]);\n  }\n}\n\n// TODO initializing static members directly is an option, but make sure no tree-shaking issues\nlet ZERO: Matrix4;\nlet IDENTITY: Matrix4;\n\nfunction getZeroMatrix(): Readonly<Matrix4> {\n  if (!ZERO) {\n    ZERO = new Matrix4([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n    Object.freeze(ZERO);\n  }\n  return ZERO;\n}\n\nfunction getIdentityMatrix(): Matrix4 {\n  if (!IDENTITY) {\n    IDENTITY = new Matrix4();\n    Object.freeze(IDENTITY);\n  }\n  return IDENTITY;\n}\n\n// HELPER FUNCTIONS\n\nfunction checkRadians(possiblyDegrees: number) {\n  if (possiblyDegrees > Math.PI * 2) {\n    throw Error('expected radians');\n  }\n}\n\n// eslint-disable-next-line max-params\nfunction computeInfinitePerspectiveOffCenter(\n  result: NumericArray,\n  left: number,\n  right: number,\n  bottom: number,\n  top: number,\n  near: number\n): NumericArray {\n  const column0Row0 = (2 * near) / (right - left);\n  const column1Row1 = (2 * near) / (top - bottom);\n  const column2Row0 = (right + left) / (right - left);\n  const column2Row1 = (top + bottom) / (top - bottom);\n  const column2Row2 = -1;\n  const column2Row3 = -1;\n  const column3Row2 = -2 * near;\n  result[0] = column0Row0;\n  result[1] = 0;\n  result[2] = 0;\n  result[3] = 0;\n  result[4] = 0;\n  result[5] = column1Row1;\n  result[6] = 0;\n  result[7] = 0;\n  result[8] = column2Row0;\n  result[9] = column2Row1;\n  result[10] = column2Row2;\n  result[11] = column2Row3;\n  result[12] = 0;\n  result[13] = 0;\n  result[14] = column3Row2;\n  result[15] = 0;\n  return result;\n}\n","// This file is derived from the Cesium math library under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\n// Note: This class is still an experimental export, mainly used by other test cases\n// - It has not been fully adapted to math.gl conventions\n// - Documentation has not been ported\n\nimport {Vector3, Vector2, Matrix4, assert, NumericArray} from '@math.gl/core';\nimport CullingVolume from './culling-volume';\nimport Plane from './plane';\n\nconst scratchPlaneUpVector = new Vector3();\nconst scratchPlaneRightVector = new Vector3();\nconst scratchPlaneNearCenter = new Vector3();\nconst scratchPlaneFarCenter = new Vector3();\nconst scratchPlaneNormal = new Vector3();\n\ntype PerspectiveOffCenterFrustumOptions = {\n  left?: number;\n  right?: number;\n  top?: number;\n  bottom?: number;\n  near?: number;\n  far?: number;\n};\n\nexport default class PerspectiveOffCenterFrustum {\n  /**\n   * Defines the left clipping plane.\n   * @type {Number}\n   * @default undefined\n   */\n  left?: number;\n  private _left?: number;\n  /**\n   * Defines the right clipping plane.\n   * @type {Number}\n   * @default undefined\n   */\n  right?: number;\n  private _right?: number;\n  /**\n   * Defines the top clipping plane.\n   * @type {Number}\n   * @default undefined\n   */\n  top?: number;\n  private _top?: number;\n  /**\n   * Defines the bottom clipping plane.\n   * @type {Number}\n   * @default undefined\n   */\n  bottom?: number;\n  private _bottom?: number;\n  /**\n   * The distance of the near plane.\n   * @type {Number}\n   * @default 1.0\n   */\n  near: number;\n  private _near: number;\n  /**\n   * The distance of the far plane.\n   * @type {Number}\n   * @default 500000000.0\n   */\n  far: number;\n  private _far: number;\n\n  private _cullingVolume = new CullingVolume([\n    new Plane(),\n    new Plane(),\n    new Plane(),\n    new Plane(),\n    new Plane(),\n    new Plane()\n  ]);\n  private _perspectiveMatrix = new Matrix4();\n  private _infinitePerspective = new Matrix4();\n\n  /**\n   * The viewing frustum is defined by 6 planes.\n   * Each plane is represented by a {@link Vector4} object, where the x, y, and z components\n   * define the unit vector normal to the plane, and the w component is the distance of the\n   * plane from the origin/camera position.\n   *\n   * @alias PerspectiveOffCenterFrustum\n   *\n   * @example\n   * const frustum = new PerspectiveOffCenterFrustum({\n   *     left : -1.0,\n   *     right : 1.0,\n   *     top : 1.0,\n   *     bottom : -1.0,\n   *     near : 1.0,\n   *     far : 100.0\n   * });\n   *\n   * @see PerspectiveFrustum\n   */\n  constructor(options: PerspectiveOffCenterFrustumOptions = {}) {\n    const {near = 1.0, far = 500000000.0} = options;\n\n    this.left = options.left;\n    this._left = undefined;\n\n    this.right = options.right;\n    this._right = undefined;\n\n    this.top = options.top;\n    this._top = undefined;\n\n    this.bottom = options.bottom;\n    this._bottom = undefined;\n\n    this.near = near;\n    this._near = near;\n\n    this.far = far;\n    this._far = far;\n  }\n\n  /**\n   * Returns a duplicate of a PerspectiveOffCenterFrustum instance.\n   * @returns {PerspectiveOffCenterFrustum} A new PerspectiveFrustum instance.\n   * */\n  clone(): PerspectiveOffCenterFrustum {\n    return new PerspectiveOffCenterFrustum({\n      right: this.right,\n      left: this.left,\n      top: this.top,\n      bottom: this.bottom,\n      near: this.near,\n      far: this.far\n    });\n  }\n\n  /**\n   * Compares the provided PerspectiveOffCenterFrustum componentwise and returns\n   * <code>true</code> if they are equal, <code>false</code> otherwise.\n   *\n   * @returns {Boolean} <code>true</code> if they are equal, <code>false</code> otherwise.\n   */\n  equals(other: PerspectiveOffCenterFrustum): boolean {\n    return (\n      other &&\n      other instanceof PerspectiveOffCenterFrustum &&\n      this.right === other.right &&\n      this.left === other.left &&\n      this.top === other.top &&\n      this.bottom === other.bottom &&\n      this.near === other.near &&\n      this.far === other.far\n    );\n  }\n\n  /**\n   * Gets the perspective projection matrix computed from the view frustum.\n   * @memberof PerspectiveOffCenterFrustum.prototype\n   * @type {Matrix4}\n   *\n   * @see PerspectiveOffCenterFrustum#infiniteProjectionMatrix\n   */\n  get projectionMatrix(): Matrix4 {\n    this._update();\n    return this._perspectiveMatrix;\n  }\n\n  /**\n   * Gets the perspective projection matrix computed from the view frustum with an infinite far plane.\n   * @memberof PerspectiveOffCenterFrustum.prototype\n   * @type {Matrix4}\n   *\n   * @see PerspectiveOffCenterFrustum#projectionMatrix\n   */\n  get infiniteProjectionMatrix(): Matrix4 {\n    this._update();\n    return this._infinitePerspective;\n  }\n\n  /**\n   * Creates a culling volume for this frustum.\n   * @returns {CullingVolume} A culling volume at the given position and orientation.\n   *\n   * @example\n   * // Check if a bounding volume intersects the frustum.\n   * const cullingVolume = frustum.computeCullingVolume(cameraPosition, cameraDirection, cameraUp);\n   * const intersect = cullingVolume.computeVisibility(boundingVolume);\n   */\n  // eslint-disable-next-line complexity, max-statements\n  computeCullingVolume(\n    /** A Vector3 defines the eye position. */\n    position: Readonly<NumericArray>,\n    /** A Vector3 defines the view direction. */\n    direction: Readonly<NumericArray>,\n    /** A Vector3 defines the up direction. */\n    up: Readonly<NumericArray>\n  ): CullingVolume {\n    assert(position, 'position is required.');\n    assert(direction, 'direction is required.');\n    assert(up, 'up is required.');\n\n    const planes = this._cullingVolume.planes;\n\n    up = scratchPlaneUpVector.copy(up).normalize();\n    const right = scratchPlaneRightVector.copy(direction).cross(up).normalize();\n\n    const nearCenter = scratchPlaneNearCenter\n      .copy(direction)\n      .multiplyByScalar(this.near)\n      .add(position);\n\n    const farCenter = scratchPlaneFarCenter\n      .copy(direction)\n      .multiplyByScalar(this.far)\n      .add(position);\n\n    let normal = scratchPlaneNormal;\n\n    // Left plane computation\n    normal.copy(right).multiplyByScalar(this.left).add(nearCenter).subtract(position).cross(up);\n\n    planes[0].fromPointNormal(position, normal);\n\n    // Right plane computation\n    normal\n      .copy(right)\n      .multiplyByScalar(this.right)\n      .add(nearCenter)\n      .subtract(position)\n      .cross(up)\n      .negate();\n\n    planes[1].fromPointNormal(position, normal);\n\n    // Bottom plane computation\n    normal\n      .copy(up)\n      .multiplyByScalar(this.bottom)\n      .add(nearCenter)\n      .subtract(position)\n      .cross(right)\n      .negate();\n\n    planes[2].fromPointNormal(position, normal);\n\n    // Top plane computation\n    normal.copy(up).multiplyByScalar(this.top).add(nearCenter).subtract(position).cross(right);\n\n    planes[3].fromPointNormal(position, normal);\n\n    normal = new Vector3().copy(direction);\n\n    // Near plane computation\n    planes[4].fromPointNormal(nearCenter, normal);\n\n    // Far plane computation\n    normal.negate();\n\n    planes[5].fromPointNormal(farCenter, normal);\n\n    return this._cullingVolume;\n  }\n\n  /**\n   * Returns the pixel's width and height in meters.\n   *\n   * @returns {Vector2} The modified result parameter or a new instance of {@link Vector2} with the pixel's width and height in the x and y properties, respectively.\n   *\n   * @exception {DeveloperError} drawingBufferWidth must be greater than zero.\n   * @exception {DeveloperError} drawingBufferHeight must be greater than zero.\n   *\n   * @example\n   * // Example 1\n   * // Get the width and height of a pixel.\n   * const pixelSize = camera.frustum.getPixelDimensions(scene.drawingBufferWidth, scene.drawingBufferHeight, 1.0, new Vector2());\n   *\n   * @example\n   * // Example 2\n   * // Get the width and height of a pixel if the near plane was set to 'distance'.\n   * // For example, get the size of a pixel of an image on a billboard.\n   * const position = camera.position;\n   * const direction = camera.direction;\n   * const toCenter = Vector3.subtract(primitive.boundingVolume.center, position, new Vector3());      // vector from camera to a primitive\n   * const toCenterProj = Vector3.multiplyByScalar(direction, Vector3.dot(direction, toCenter), new Vector3()); // project vector onto camera direction vector\n   * const distance = Vector3.magnitude(toCenterProj);\n   * const pixelSize = camera.frustum.getPixelDimensions(scene.drawingBufferWidth, scene.drawingBufferHeight, distance, new Vector2());\n   */\n  getPixelDimensions(\n    /** The width of the drawing buffer. */\n    drawingBufferWidth: number,\n    /** The height of the drawing buffer. */\n    drawingBufferHeight: number,\n    /** The distance to the near plane in meters. */\n    distance: number,\n    /** The object onto which to store the result. */\n    result: Vector2\n  ): Vector2 {\n    this._update();\n\n    assert(Number.isFinite(drawingBufferWidth) && Number.isFinite(drawingBufferHeight));\n    // 'Both drawingBufferWidth and drawingBufferHeight are required.'\n    assert(drawingBufferWidth > 0);\n    // 'drawingBufferWidth must be greater than zero.'\n    assert(drawingBufferHeight > 0);\n    // 'drawingBufferHeight must be greater than zero.'\n    assert(distance > 0);\n    // 'distance is required.');\n    assert(result);\n    // 'A result object is required.');\n\n    const inverseNear = 1.0 / this.near;\n    let tanTheta = this.top * inverseNear;\n    const pixelHeight = (2.0 * distance * tanTheta) / drawingBufferHeight;\n    tanTheta = this.right * inverseNear;\n    const pixelWidth = (2.0 * distance * tanTheta) / drawingBufferWidth;\n\n    result.x = pixelWidth;\n    result.y = pixelHeight;\n    return result;\n  }\n\n  // eslint-disable-next-line complexity, max-statements\n  private _update() {\n    assert(\n      Number.isFinite(this.right) &&\n        Number.isFinite(this.left) &&\n        Number.isFinite(this.top) &&\n        Number.isFinite(this.bottom) &&\n        Number.isFinite(this.near) &&\n        Number.isFinite(this.far)\n    );\n    // throw new DeveloperError('right, left, top, bottom, near, or far parameters are not set.');\n\n    const {top, bottom, right, left, near, far} = this;\n\n    if (\n      top !== this._top ||\n      bottom !== this._bottom ||\n      left !== this._left ||\n      right !== this._right ||\n      near !== this._near ||\n      far !== this._far\n    ) {\n      assert(\n        this.near > 0 && this.near < this.far,\n        'near must be greater than zero and less than far.'\n      );\n\n      this._left = left;\n      this._right = right;\n      this._top = top;\n      this._bottom = bottom;\n      this._near = near;\n      this._far = far;\n      this._perspectiveMatrix = new Matrix4().frustum({\n        left,\n        right,\n        bottom,\n        top,\n        near,\n        far\n      });\n      this._infinitePerspective = new Matrix4().frustum({\n        left,\n        right,\n        bottom,\n        top,\n        near,\n        far: Infinity\n      });\n    }\n  }\n}\n","// This file is derived from the Cesium math library under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {Vector3} from '@math.gl/core';\nimport BoundingSphere from '../bounding-volumes/bounding-sphere';\n\n/* eslint-disable */\nconst fromPointsXMin = new Vector3();\nconst fromPointsYMin = new Vector3();\nconst fromPointsZMin = new Vector3();\nconst fromPointsXMax = new Vector3();\nconst fromPointsYMax = new Vector3();\nconst fromPointsZMax = new Vector3();\nconst fromPointsCurrentPos = new Vector3();\nconst fromPointsScratch = new Vector3();\nconst fromPointsRitterCenter = new Vector3();\nconst fromPointsMinBoxPt = new Vector3();\nconst fromPointsMaxBoxPt = new Vector3();\nconst fromPointsNaiveCenterScratch = new Vector3();\nconst volumeConstant = (4.0 / 3.0) * Math.PI;\n\n/**\n * Computes a tight-fitting bounding sphere enclosing a list of 3D Cartesian points.\n *\n * The bounding sphere is computed by running two algorithms, a naive algorithm and\n * Ritter's algorithm. The smaller of the two spheres is used to ensure a tight fit.\n * Bounding sphere computation article http://blogs.agi.com/insight3d/index.php/2008/02/04/a-bounding\n *\n * @param positions An array of points that the bounding sphere will enclose.\n * @param result Optional object onto which to store the result.\n * @returns The modified result parameter or a new `BoundingSphere` instance if not provided.\n */\nexport default function makeBoundingSphereFromPoints(\n  positions: number[][],\n  result: BoundingSphere = new BoundingSphere()\n): BoundingSphere {\n  if (!positions || positions.length === 0) {\n    return result.fromCenterRadius([0, 0, 0], 0);\n  }\n\n  const currentPos = fromPointsCurrentPos.copy(positions[0]);\n\n  const xMin = fromPointsXMin.copy(currentPos);\n  const yMin = fromPointsYMin.copy(currentPos);\n  const zMin = fromPointsZMin.copy(currentPos);\n\n  const xMax = fromPointsXMax.copy(currentPos);\n  const yMax = fromPointsYMax.copy(currentPos);\n  const zMax = fromPointsZMax.copy(currentPos);\n\n  for (const position of positions) {\n    currentPos.copy(position);\n\n    const x = currentPos.x;\n    const y = currentPos.y;\n    const z = currentPos.z;\n\n    // Store points containing the the smallest and largest components\n    if (x < xMin.x) {\n      xMin.copy(currentPos);\n    }\n\n    if (x > xMax.x) {\n      xMax.copy(currentPos);\n    }\n\n    if (y < yMin.y) {\n      yMin.copy(currentPos);\n    }\n\n    if (y > yMax.y) {\n      yMax.copy(currentPos);\n    }\n\n    if (z < zMin.z) {\n      zMin.copy(currentPos);\n    }\n\n    if (z > zMax.z) {\n      zMax.copy(currentPos);\n    }\n  }\n\n  // Compute x-, y-, and z-spans (Squared distances b/n each component's min. and max.).\n  const xSpan = fromPointsScratch.copy(xMax).subtract(xMin).magnitudeSquared();\n  const ySpan = fromPointsScratch.copy(yMax).subtract(yMin).magnitudeSquared();\n  const zSpan = fromPointsScratch.copy(zMax).subtract(zMin).magnitudeSquared();\n\n  // Set the diameter endpoints to the largest span.\n  let diameter1 = xMin;\n  let diameter2 = xMax;\n  let maxSpan = xSpan;\n  if (ySpan > maxSpan) {\n    maxSpan = ySpan;\n    diameter1 = yMin;\n    diameter2 = yMax;\n  }\n  if (zSpan > maxSpan) {\n    maxSpan = zSpan;\n    diameter1 = zMin;\n    diameter2 = zMax;\n  }\n\n  // Calculate the center of the initial sphere found by Ritter's algorithm\n  const ritterCenter = fromPointsRitterCenter;\n  ritterCenter.x = (diameter1.x + diameter2.x) * 0.5;\n  ritterCenter.y = (diameter1.y + diameter2.y) * 0.5;\n  ritterCenter.z = (diameter1.z + diameter2.z) * 0.5;\n\n  // Calculate the radius of the initial sphere found by Ritter's algorithm\n  let radiusSquared = fromPointsScratch.copy(diameter2).subtract(ritterCenter).magnitudeSquared();\n  let ritterRadius = Math.sqrt(radiusSquared);\n\n  // Find the center of the sphere found using the Naive method.\n  const minBoxPt = fromPointsMinBoxPt;\n  minBoxPt.x = xMin.x;\n  minBoxPt.y = yMin.y;\n  minBoxPt.z = zMin.z;\n\n  const maxBoxPt = fromPointsMaxBoxPt;\n  maxBoxPt.x = xMax.x;\n  maxBoxPt.y = yMax.y;\n  maxBoxPt.z = zMax.z;\n\n  const naiveCenter = fromPointsNaiveCenterScratch\n    .copy(minBoxPt)\n    .add(maxBoxPt)\n    .multiplyByScalar(0.5);\n\n  // Begin 2nd pass to find naive radius and modify the ritter sphere.\n  let naiveRadius = 0;\n  for (const position of positions) {\n    currentPos.copy(position);\n\n    // Find the furthest point from the naive center to calculate the naive radius.\n    const r = fromPointsScratch.copy(currentPos).subtract(naiveCenter).magnitude();\n    if (r > naiveRadius) {\n      naiveRadius = r;\n    }\n\n    // Make adjustments to the Ritter Sphere to include all points.\n    const oldCenterToPointSquared = fromPointsScratch\n      .copy(currentPos)\n      .subtract(ritterCenter)\n      .magnitudeSquared();\n\n    if (oldCenterToPointSquared > radiusSquared) {\n      const oldCenterToPoint = Math.sqrt(oldCenterToPointSquared);\n      // Calculate new radius to include the point that lies outside\n      ritterRadius = (ritterRadius + oldCenterToPoint) * 0.5;\n      radiusSquared = ritterRadius * ritterRadius;\n      // Calculate center of new Ritter sphere\n      const oldToNew = oldCenterToPoint - ritterRadius;\n      ritterCenter.x = (ritterRadius * ritterCenter.x + oldToNew * currentPos.x) / oldCenterToPoint;\n      ritterCenter.y = (ritterRadius * ritterCenter.y + oldToNew * currentPos.y) / oldCenterToPoint;\n      ritterCenter.z = (ritterRadius * ritterCenter.z + oldToNew * currentPos.z) / oldCenterToPoint;\n    }\n  }\n\n  if (ritterRadius < naiveRadius) {\n    ritterCenter.to(result.center);\n    result.radius = ritterRadius;\n  } else {\n    naiveCenter.to(result.center);\n    result.radius = naiveRadius;\n  }\n\n  return result;\n}\n","// NOTE: Added to make Cesium-derived test cases work\n// TODO: Determine if/how to keep\nexport default {\n  EPSILON1: 1e-1,\n  EPSILON2: 1e-2,\n  EPSILON3: 1e-3,\n  EPSILON4: 1e-4,\n  EPSILON5: 1e-5,\n  EPSILON6: 1e-6,\n  EPSILON7: 1e-7,\n  EPSILON8: 1e-8,\n  EPSILON9: 1e-9,\n  EPSILON10: 1e-10,\n  EPSILON11: 1e-11,\n  EPSILON12: 1e-12,\n  EPSILON13: 1e-13,\n  EPSILON14: 1e-14,\n  EPSILON15: 1e-15,\n  EPSILON16: 1e-16,\n  EPSILON17: 1e-17,\n  EPSILON18: 1e-18,\n  EPSILON19: 1e-19,\n  EPSILON20: 1e-20,\n\n  PI_OVER_TWO: Math.PI / 2,\n  PI_OVER_FOUR: Math.PI / 4,\n  PI_OVER_SIX: Math.PI / 6,\n\n  TWO_PI: Math.PI * 2\n};\n","// This file is derived from the Cesium math library under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {Matrix3, _MathUtils} from '@math.gl/core';\n\nconst scratchMatrix = new Matrix3();\nconst scratchUnitary = new Matrix3();\nconst scratchDiagonal = new Matrix3();\n\nconst jMatrix = new Matrix3();\nconst jMatrixTranspose = new Matrix3();\n\nexport type EigenDecomposition = {\n  unitary: Matrix3;\n  diagonal: Matrix3;\n};\n\n/**\n * Computes the eigenvectors and eigenvalues of a symmetric matrix.\n *\n * - Returns a diagonal matrix and unitary matrix such that:\n * `matrix = unitary matrix * diagonal matrix * transpose(unitary matrix)`\n * - The values along the diagonal of the diagonal matrix are the eigenvalues. The columns\n * of the unitary matrix are the corresponding eigenvectors.\n * - This routine was created based upon Matrix Computations, 3rd ed., by Golub and Van Loan,\n * section 8.4.3 The Classical Jacobi Algorithm\n *\n * @param matrix The 3x3 matrix to decompose into diagonal and unitary matrix. Expected to be symmetric.\n * @param result Optional object with unitary and diagonal properties which are matrices onto which to store the result.\n * @returns An object with unitary and diagonal properties which are the unitary and diagonal matrices, respectively.\n *\n * @example\n * const a = //... symmetric matrix\n * const result = {\n *   unitary : new Matrix3(),\n *   diagonal : new Matrix3()\n * };\n * computeEigenDecomposition(a, result);\n *\n * const unitaryTranspose = Matrix3.transpose(result.unitary, new Matrix3());\n * const b = Matrix3.multiply(result.unitary, result.diagonal, new Matrix3());\n * Matrix3.multiply(b, unitaryTranspose, b); // b is now equal to a\n *\n * const lambda = result.diagonal.getColumn(0, new Vector3()).x;  // first eigenvalue\n * const v = result.unitary.getColumn(0, new Vector3());          // first eigenvector\n * const c = v.multiplyByScalar(lambda);                          // equal to v.transformByMatrix3(a)\n */\nexport default function computeEigenDecomposition(\n  matrix: number[],\n  // @ts-expect-error accept empty object type\n  result: EigenDecomposition = {}\n): EigenDecomposition {\n  const EIGEN_TOLERANCE = _MathUtils.EPSILON20;\n  const EIGEN_MAX_SWEEPS = 10;\n\n  let count = 0;\n  let sweep = 0;\n\n  const unitaryMatrix = scratchUnitary;\n  const diagonalMatrix = scratchDiagonal;\n\n  unitaryMatrix.identity();\n  diagonalMatrix.copy(matrix);\n\n  const epsilon = EIGEN_TOLERANCE * computeFrobeniusNorm(diagonalMatrix);\n\n  while (sweep < EIGEN_MAX_SWEEPS && offDiagonalFrobeniusNorm(diagonalMatrix) > epsilon) {\n    shurDecomposition(diagonalMatrix, jMatrix);\n\n    jMatrixTranspose.copy(jMatrix).transpose();\n\n    diagonalMatrix.multiplyRight(jMatrix);\n    diagonalMatrix.multiplyLeft(jMatrixTranspose);\n    unitaryMatrix.multiplyRight(jMatrix);\n\n    if (++count > 2) {\n      ++sweep;\n      count = 0;\n    }\n  }\n\n  result.unitary = unitaryMatrix.toTarget(result.unitary);\n  result.diagonal = diagonalMatrix.toTarget(result.diagonal);\n\n  return result;\n}\n\nfunction computeFrobeniusNorm(matrix: Matrix3): number {\n  let norm = 0.0;\n  for (let i = 0; i < 9; ++i) {\n    const temp = matrix[i];\n    norm += temp * temp;\n  }\n  return Math.sqrt(norm);\n}\n\nconst rowVal = [1, 0, 0];\nconst colVal = [2, 2, 1];\n\n// Computes the \"off-diagonal\" Frobenius norm.\n// Assumes matrix is symmetric.\nfunction offDiagonalFrobeniusNorm(matrix: Matrix3): number {\n  let norm = 0.0;\n  for (let i = 0; i < 3; ++i) {\n    const temp = matrix[scratchMatrix.getElementIndex(colVal[i], rowVal[i])];\n    norm += 2.0 * temp * temp;\n  }\n  return Math.sqrt(norm);\n}\n\n// The routine takes a matrix, which is assumed to be symmetric, and\n// finds the largest off-diagonal term, and then creates\n// a matrix (result) which can be used to help reduce it\n//\n// This routine was created based upon Matrix Computations, 3rd ed., by Golub and Van Loan,\n// section 8.4.2 The 2by2 Symmetric Schur Decomposition.\n//\n// eslint-disable-next-line max-statements\nfunction shurDecomposition(matrix: Matrix3, result: Matrix3): Matrix3 {\n  const tolerance = _MathUtils.EPSILON15;\n\n  let maxDiagonal = 0.0;\n  let rotAxis = 1;\n\n  // find pivot (rotAxis) based on max diagonal of matrix\n  for (let i = 0; i < 3; ++i) {\n    const temp = Math.abs(matrix[scratchMatrix.getElementIndex(colVal[i], rowVal[i])]);\n    if (temp > maxDiagonal) {\n      rotAxis = i;\n      maxDiagonal = temp;\n    }\n  }\n\n  const p = rowVal[rotAxis];\n  const q = colVal[rotAxis];\n\n  let c = 1.0;\n  let s = 0.0;\n\n  if (Math.abs(matrix[scratchMatrix.getElementIndex(q, p)]) > tolerance) {\n    const qq = matrix[scratchMatrix.getElementIndex(q, q)];\n    const pp = matrix[scratchMatrix.getElementIndex(p, p)];\n    const qp = matrix[scratchMatrix.getElementIndex(q, p)];\n\n    const tau = (qq - pp) / 2.0 / qp;\n    let t;\n\n    if (tau < 0.0) {\n      t = -1.0 / (-tau + Math.sqrt(1.0 + tau * tau));\n    } else {\n      t = 1.0 / (tau + Math.sqrt(1.0 + tau * tau));\n    }\n\n    c = 1.0 / Math.sqrt(1.0 + t * t);\n    s = t * c;\n  }\n\n  // Copy into result\n  Matrix3.IDENTITY.to(result);\n  result[scratchMatrix.getElementIndex(p, p)] = result[scratchMatrix.getElementIndex(q, q)] = c;\n  result[scratchMatrix.getElementIndex(q, p)] = s;\n  result[scratchMatrix.getElementIndex(p, q)] = -s;\n\n  return result;\n}\n","// This file is derived from the Cesium math library under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {Vector3, Matrix3} from '@math.gl/core';\nimport computeEigenDecomposition from './compute-eigen-decomposition';\nimport OrientedBoundingBox from '../bounding-volumes/oriented-bounding-box';\nimport AxisAlignedBoundingBox from '../bounding-volumes/axis-aligned-bounding-box';\n\nconst scratchVector2 = new Vector3();\n\nconst scratchVector3 = new Vector3();\n\nconst scratchVector4 = new Vector3();\n\nconst scratchVector5 = new Vector3();\n\nconst scratchVector6 = new Vector3();\n\nconst scratchCovarianceResult = new Matrix3();\n\nconst scratchEigenResult = {\n  diagonal: new Matrix3(),\n  unitary: new Matrix3()\n};\n\n/**\n * Computes an instance of an OrientedBoundingBox of the given positions.\n *\n * This is an implementation of Stefan Gottschalk's Collision Queries using Oriented Bounding Boxes solution (PHD thesis).\n * Reference: http://gamma.cs.unc.edu/users/gottschalk/main.pdf\n */\n/* eslint-disable max-statements */\nexport function makeOrientedBoundingBoxFromPoints(\n  positions: number[][],\n  result: OrientedBoundingBox = new OrientedBoundingBox()\n): OrientedBoundingBox {\n  if (!positions || positions.length === 0) {\n    result.halfAxes = new Matrix3([0, 0, 0, 0, 0, 0, 0, 0, 0]);\n    result.center = new Vector3();\n    return result;\n  }\n\n  const length = positions.length;\n  const meanPoint = new Vector3(0, 0, 0);\n  for (const position of positions) {\n    meanPoint.add(position);\n  }\n  const invLength = 1.0 / length;\n  meanPoint.multiplyByScalar(invLength);\n\n  let exx = 0.0;\n  let exy = 0.0;\n  let exz = 0.0;\n  let eyy = 0.0;\n  let eyz = 0.0;\n  let ezz = 0.0;\n\n  for (const position of positions) {\n    const p = scratchVector2.copy(position).subtract(meanPoint);\n    exx += p.x * p.x;\n    exy += p.x * p.y;\n    exz += p.x * p.z;\n    eyy += p.y * p.y;\n    eyz += p.y * p.z;\n    ezz += p.z * p.z;\n  }\n\n  exx *= invLength;\n  exy *= invLength;\n  exz *= invLength;\n  eyy *= invLength;\n  eyz *= invLength;\n  ezz *= invLength;\n\n  const covarianceMatrix = scratchCovarianceResult;\n  covarianceMatrix[0] = exx;\n  covarianceMatrix[1] = exy;\n  covarianceMatrix[2] = exz;\n  covarianceMatrix[3] = exy;\n  covarianceMatrix[4] = eyy;\n  covarianceMatrix[5] = eyz;\n  covarianceMatrix[6] = exz;\n  covarianceMatrix[7] = eyz;\n  covarianceMatrix[8] = ezz;\n\n  const {unitary} = computeEigenDecomposition(covarianceMatrix, scratchEigenResult);\n  const rotation = result.halfAxes.copy(unitary);\n\n  let v1 = rotation.getColumn(0, scratchVector4);\n  let v2 = rotation.getColumn(1, scratchVector5);\n  let v3 = rotation.getColumn(2, scratchVector6);\n\n  let u1 = -Number.MAX_VALUE;\n  let u2 = -Number.MAX_VALUE;\n  let u3 = -Number.MAX_VALUE;\n  let l1 = Number.MAX_VALUE;\n  let l2 = Number.MAX_VALUE;\n  let l3 = Number.MAX_VALUE;\n\n  for (const position of positions) {\n    scratchVector2.copy(position);\n\n    u1 = Math.max(scratchVector2.dot(v1), u1);\n    u2 = Math.max(scratchVector2.dot(v2), u2);\n    u3 = Math.max(scratchVector2.dot(v3), u3);\n\n    l1 = Math.min(scratchVector2.dot(v1), l1);\n    l2 = Math.min(scratchVector2.dot(v2), l2);\n    l3 = Math.min(scratchVector2.dot(v3), l3);\n  }\n\n  v1 = v1.multiplyByScalar(0.5 * (l1 + u1));\n  v2 = v2.multiplyByScalar(0.5 * (l2 + u2));\n  v3 = v3.multiplyByScalar(0.5 * (l3 + u3));\n\n  result.center.copy(v1).add(v2).add(v3);\n\n  const scale = scratchVector3.set(u1 - l1, u2 - l2, u3 - l3).multiplyByScalar(0.5);\n  const scaleMatrix = new Matrix3([scale[0], 0, 0, 0, scale[1], 0, 0, 0, scale[2]]);\n  result.halfAxes.multiplyRight(scaleMatrix);\n\n  return result;\n}\n\n/**\n * Computes an instance of an AxisAlignedBoundingBox. The box is determined by\n * finding the points spaced the farthest apart on the x, y, and z axes.\n */\nexport function makeAxisAlignedBoundingBoxFromPoints(\n  positions: readonly number[][],\n  result: AxisAlignedBoundingBox = new AxisAlignedBoundingBox()\n): AxisAlignedBoundingBox {\n  if (!positions || positions.length === 0) {\n    result.minimum.set(0, 0, 0);\n    result.maximum.set(0, 0, 0);\n    result.center.set(0, 0, 0);\n    result.halfDiagonal.set(0, 0, 0);\n    return result;\n  }\n\n  let minimumX = positions[0][0];\n  let minimumY = positions[0][1];\n  let minimumZ = positions[0][2];\n\n  let maximumX = positions[0][0];\n  let maximumY = positions[0][1];\n  let maximumZ = positions[0][2];\n\n  for (const p of positions) {\n    const x = p[0];\n    const y = p[1];\n    const z = p[2];\n\n    minimumX = Math.min(x, minimumX);\n    maximumX = Math.max(x, maximumX);\n    minimumY = Math.min(y, minimumY);\n    maximumY = Math.max(y, maximumY);\n    minimumZ = Math.min(z, minimumZ);\n    maximumZ = Math.max(z, maximumZ);\n  }\n\n  result.minimum.set(minimumX, minimumY, minimumZ);\n  result.maximum.set(maximumX, maximumY, maximumZ);\n  result.center.copy(result.minimum).add(result.maximum).scale(0.5);\n  result.halfDiagonal.copy(result.maximum).subtract(result.center);\n\n  return result;\n}\n","import {\n  ClickEvent,\n  StartDraggingEvent,\n  StopDraggingEvent,\n  PointerMoveEvent,\n  ModeProps,\n  GuideFeatureCollection,\n  TentativeFeature,\n} from '../types';\nimport { Polygon, FeatureCollection, FeatureOf, Position } from '../geojson-types';\nimport { GeoJsonEditMode } from './geojson-edit-mode';\n\nexport class TwoClickPolygonMode extends GeoJsonEditMode {\n  handleClick(event: ClickEvent, props: ModeProps<FeatureCollection>) {\n    if (props.modeConfig && props.modeConfig.dragToDraw) {\n      // handled in drag handlers\n      return;\n    }\n\n    this.addClickSequence(event);\n\n    this.checkAndFinishPolygon(props);\n  }\n\n  handleStartDragging(event: StartDraggingEvent, props: ModeProps<FeatureCollection>): void {\n    if (!props.modeConfig || !props.modeConfig.dragToDraw) {\n      // handled in click handlers\n      return;\n    }\n\n    this.addClickSequence(event);\n    event.cancelPan();\n  }\n\n  handleStopDragging(event: StopDraggingEvent, props: ModeProps<FeatureCollection>): void {\n    if (!props.modeConfig || !props.modeConfig.dragToDraw) {\n      // handled in click handlers\n      return;\n    }\n    this.addClickSequence(event);\n\n    this.checkAndFinishPolygon(props);\n  }\n\n  checkAndFinishPolygon(props: ModeProps<FeatureCollection>) {\n    const clickSequence = this.getClickSequence();\n    const tentativeFeature = this.getTentativeGuide(props);\n\n    if (\n      clickSequence.length > 1 &&\n      tentativeFeature &&\n      tentativeFeature.geometry.type === 'Polygon'\n    ) {\n      const feature: FeatureOf<Polygon> = {\n        type: 'Feature',\n        properties: {\n          shape: tentativeFeature.properties.shape,\n        },\n        geometry: {\n          type: 'Polygon',\n          coordinates: tentativeFeature.geometry.coordinates,\n        },\n      };\n      const editAction = this.getAddFeatureOrBooleanPolygonAction(feature, props);\n\n      this.resetClickSequence();\n\n      if (editAction) {\n        props.onEdit(editAction);\n      }\n    }\n  }\n\n  getGuides(props: ModeProps<FeatureCollection>): GuideFeatureCollection {\n    const { lastPointerMoveEvent, modeConfig } = props;\n    const clickSequence = this.getClickSequence();\n\n    const guides: GuideFeatureCollection = {\n      type: 'FeatureCollection',\n      features: [],\n    };\n\n    if (clickSequence.length === 0) {\n      // nothing to do yet\n      return guides;\n    }\n\n    const corner1 = clickSequence[0];\n    const corner2 = lastPointerMoveEvent.mapCoords;\n\n    const polygon = this.getTwoClickPolygon(corner1, corner2, modeConfig);\n    if (polygon) {\n      guides.features.push({\n        type: 'Feature',\n        properties: {\n          shape: polygon.properties && polygon.properties.shape,\n          guideType: 'tentative',\n        },\n        geometry: polygon.geometry,\n      });\n    }\n\n    return guides;\n  }\n\n  getTwoClickPolygon(\n    coord1: Position,\n    coord2: Position,\n    modeConfig: any\n  ): FeatureOf<Polygon> | null | undefined {\n    return null;\n  }\n\n  handlePointerMove(event: PointerMoveEvent, props: ModeProps<FeatureCollection>) {\n    props.onUpdateCursor('cell');\n    super.handlePointerMove(event, props);\n  }\n\n  createTentativeFeature(props: ModeProps<FeatureCollection>): TentativeFeature {\n    const { lastPointerMoveEvent } = props;\n    const clickSequence = this.getClickSequence();\n\n    const lastCoords = lastPointerMoveEvent ? [lastPointerMoveEvent.mapCoords] : [];\n\n    let tentativeFeature;\n    if (clickSequence.length === 1) {\n      tentativeFeature = this.getTwoClickPolygon(clickSequence[0], lastCoords[0], props.modeConfig);\n    }\n\n    return tentativeFeature;\n  }\n}\n","var SphericalMercator = require('@mapbox/sphericalmercator');\n\n// The SphericalMercator library only accepts a variable\n// tileSize on instantiation, which it uses to pre-cache\n// calculations by zoom level.\n// We cache each instantiation, keyed by tile size, to avoid\n// repeating this cost when working with a single tile size\n// (assumed to be the most-common use case).\nvar smCache = {};\n\nmodule.exports.viewport = viewport;\nmodule.exports.bounds = bounds;\n\nfunction fetchMerc(tileSize) {\n    tileSize = tileSize || 256;\n\n    if (!smCache[tileSize]) {\n        smCache[tileSize] = new SphericalMercator({ size: tileSize });\n    }\n\n    return smCache[tileSize];\n}\n\nfunction getAdjusted(base, ratios, allowFloat) {\n    var adjusted = Math.min(\n        base - (Math.log(ratios[0]) / Math.log(2)),\n        base - (Math.log(ratios[1]) / Math.log(2)));\n\n    return allowFloat ? adjusted : Math.floor(adjusted);\n}\n\nfunction viewport(bounds, dimensions, minzoom, maxzoom, tileSize, allowFloat) {\n    minzoom = (minzoom === undefined) ? 0 : minzoom;\n    maxzoom = (maxzoom === undefined) ? 20 : maxzoom;\n    var merc = fetchMerc(tileSize);\n    var base = maxzoom;\n    var bl = merc.px([bounds[0], bounds[1]], base);\n    var tr = merc.px([bounds[2], bounds[3]], base);\n    var width = tr[0] - bl[0];\n    var height = bl[1] - tr[1];\n    var centerPixelX = bl[0] + (width / 2);\n    var centerPixelY = tr[1] + (height / 2);\n    var ratios = [width / dimensions[0], height / dimensions[1]];\n    var adjusted = getAdjusted(base, ratios, allowFloat);\n\n    var center = merc.ll([centerPixelX, centerPixelY], base);\n    var zoom = Math.max(minzoom, Math.min(maxzoom, adjusted));\n\n    return { center, zoom };\n}\n\nfunction bounds(viewport, zoom, dimensions, tileSize) {\n    if (viewport.lon !== undefined) {\n        viewport = [\n            viewport.lon,\n            viewport.lat\n        ];\n    }\n\n    var merc = fetchMerc(tileSize);\n    var px = merc.px(viewport, zoom);\n    var tl = merc.ll([\n        px[0] - (dimensions[0] / 2),\n        px[1] - (dimensions[1] / 2)\n    ], zoom);\n    var br = merc.ll([\n        px[0] + (dimensions[0] / 2),\n        px[1] + (dimensions[1] / 2)\n    ], zoom);\n    return [tl[0], br[1], br[0], tl[1]];\n}\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {config, formatValue, equals, isArray} from '../../lib/common';\nimport assert from '../../lib/assert';\n\nexport default class MathArray extends Array {\n  // Defined by derived class\n  get ELEMENTS() {\n    assert(false);\n    return 0;\n  }\n\n  clone() {\n    // @ts-ignore error TS2351: Cannot use 'new' with an expression whose type lacks a call or construct signature.\n    return new this.constructor().copy(this);\n  }\n\n  from(arrayOrObject) {\n    // @ts-ignore error TS2339: Property 'copy' does not exist on type 'MathArray'.\n    return Array.isArray(arrayOrObject) ? this.copy(arrayOrObject) : this.fromObject(arrayOrObject);\n  }\n\n  fromArray(array, offset = 0) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = array[i + offset];\n    }\n    return this.check();\n  }\n\n  to(arrayOrObject) {\n    if (arrayOrObject === this) {\n      return this;\n    }\n    // @ts-ignore error TS2339: Property 'toObject' does not exist on type 'MathArray'.\n    return isArray(arrayOrObject) ? this.toArray(arrayOrObject) : this.toObject(arrayOrObject);\n  }\n\n  toTarget(target) {\n    return target ? this.to(target) : this;\n  }\n\n  toArray(array = [], offset = 0) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      array[offset + i] = this[i];\n    }\n    return array;\n  }\n\n  toFloat32Array() {\n    return new Float32Array(this);\n  }\n\n  toString() {\n    return this.formatString(config);\n  }\n\n  formatString(opts) {\n    let string = '';\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      string += (i > 0 ? ', ' : '') + formatValue(this[i], opts);\n    }\n    return `${opts.printTypes ? this.constructor.name : ''}[${string}]`;\n  }\n\n  equals(array) {\n    if (!array || this.length !== array.length) {\n      return false;\n    }\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      if (!equals(this[i], array[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  exactEquals(array) {\n    if (!array || this.length !== array.length) {\n      return false;\n    }\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      if (this[i] !== array[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  // Modifiers\n\n  negate() {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = -this[i];\n    }\n    return this.check();\n  }\n\n  lerp(a, b, t) {\n    if (t === undefined) {\n      t = b;\n      b = a;\n      a = this; // eslint-disable-line\n    }\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      const ai = a[i];\n      this[i] = ai + t * (b[i] - ai);\n    }\n    return this.check();\n  }\n\n  min(vector) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = Math.min(vector[i], this[i]);\n    }\n    return this.check();\n  }\n\n  max(vector) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = Math.max(vector[i], this[i]);\n    }\n    return this.check();\n  }\n\n  clamp(minVector, maxVector) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = Math.min(Math.max(this[i], minVector[i]), maxVector[i]);\n    }\n    return this.check();\n  }\n\n  add(...vectors) {\n    for (const vector of vectors) {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] += vector[i];\n      }\n    }\n    return this.check();\n  }\n\n  subtract(...vectors) {\n    for (const vector of vectors) {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] -= vector[i];\n      }\n    }\n    return this.check();\n  }\n\n  scale(scale) {\n    if (Array.isArray(scale)) {\n      // @ts-ignore error TS2339: Property 'multiply' does not exist on type 'MathArray'.\n      return this.multiply(scale);\n    }\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] *= scale;\n    }\n    return this.check();\n  }\n\n  // three.js compatibility\n\n  sub(a) {\n    return this.subtract(a);\n  }\n\n  setScalar(a) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = a;\n    }\n    return this.check();\n  }\n\n  addScalar(a) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] += a;\n    }\n    return this.check();\n  }\n\n  subScalar(a) {\n    return this.addScalar(-a);\n  }\n\n  multiplyScalar(scalar) {\n    // Multiplies all elements\n    // `Matrix4.scale` only scales its 3x3 \"minor\"\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] *= scalar;\n    }\n    return this.check();\n  }\n\n  divideScalar(a) {\n    return this.scale(1 / a);\n  }\n\n  clampScalar(min, max) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = Math.min(Math.max(this[i], min), max);\n    }\n    return this.check();\n  }\n\n  // Cesium compatibility\n\n  multiplyByScalar(scalar) {\n    return this.scale(scalar);\n  }\n\n  // THREE.js compatibility\n  get elements() {\n    return this;\n  }\n\n  // Debug checks\n\n  check() {\n    if (config.debug && !this.validate()) {\n      throw new Error(`math.gl: ${this.constructor.name} some fields set to invalid numbers'`);\n    }\n    return this;\n  }\n\n  validate() {\n    let valid = this.length === this.ELEMENTS;\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      valid = valid && Number.isFinite(this[i]);\n    }\n    return valid;\n  }\n}\n","module.exports = normalize;\n\nvar types = {\n    Point: 'geometry',\n    MultiPoint: 'geometry',\n    LineString: 'geometry',\n    MultiLineString: 'geometry',\n    Polygon: 'geometry',\n    MultiPolygon: 'geometry',\n    GeometryCollection: 'geometry',\n    Feature: 'feature',\n    FeatureCollection: 'featurecollection'\n};\n\n/**\n * Normalize a GeoJSON feature into a FeatureCollection.\n *\n * @param {object} gj geojson data\n * @returns {object} normalized geojson data\n */\nfunction normalize(gj) {\n    if (!gj || !gj.type) return null;\n    var type = types[gj.type];\n    if (!type) return null;\n\n    if (type === 'geometry') {\n        return {\n            type: 'FeatureCollection',\n            features: [{\n                type: 'Feature',\n                properties: {},\n                geometry: gj\n            }]\n        };\n    } else if (type === 'feature') {\n        return {\n            type: 'FeatureCollection',\n            features: [gj]\n        };\n    } else if (type === 'featurecollection') {\n        return gj;\n    }\n}\n","/* eslint-disable max-statements, max-depth, complexity, no-unused-expressions */\n\nimport {equals} from '@math.gl/core';\n\n/** @type {typeof import('./polygon-utils').WINDING} */\nexport const WINDING = {\n  CLOCKWISE: 1,\n  COUNTER_CLOCKWISE: -1\n};\n\n/** @type {typeof import('./polygon-utils').modifyPolygonWindingDirection} */\nexport function modifyPolygonWindingDirection(points, direction, options = {}) {\n  const windingDirection = getPolygonWindingDirection(points, options);\n  if (windingDirection !== direction) {\n    reversePolygon(points, options);\n    return true;\n  }\n  return false;\n}\n\n/** @type {typeof import('./polygon-utils').getPolygonWindingDirection} */\nexport function getPolygonWindingDirection(points, options = {}) {\n  return Math.sign(getPolygonSignedArea(points, options));\n}\n\n/** @type {typeof import('./polygon-utils').getPolygonSignedArea} */\nexport function getPolygonSignedArea(points, options = {}) {\n  // https://en.wikipedia.org/wiki/Shoelace_formula\n  const {start = 0, end = points.length} = options;\n  const dim = options.size || 2;\n  let area = 0;\n  for (let i = start, j = end - dim; i < end; i += dim) {\n    area += (points[i] - points[j]) * (points[i + 1] + points[j + 1]);\n    j = i;\n  }\n  return area / 2;\n}\n\n/** @type {typeof import('./polygon-utils').forEachSegmentInPolygon} */\nexport function forEachSegmentInPolygon(points, visitor, options = {}) {\n  const {start = 0, end = points.length, size = 2, isClosed} = options;\n\n  const numPoints = (end - start) / size;\n  for (let i = 0; i < numPoints - 1; ++i) {\n    visitor(\n      points[start + i * size],\n      points[start + i * size + 1],\n      points[start + (i + 1) * size],\n      points[start + (i + 1) * size + 1],\n      i,\n      i + 1\n    );\n  }\n\n  const endPointIndex = start + (numPoints - 1) * size;\n  const isClosedEx =\n    isClosed ||\n    (equals(points[start], points[endPointIndex]) &&\n      equals(points[start + 1], points[endPointIndex + 1]));\n\n  if (!isClosedEx) {\n    visitor(\n      points[endPointIndex],\n      points[endPointIndex + 1],\n      points[start],\n      points[start + 1],\n      numPoints - 1,\n      0\n    );\n  }\n}\n\nfunction reversePolygon(points, options) {\n  const {start = 0, end = points.length, size = 2} = options;\n\n  const numPoints = (end - start) / size;\n  const numSwaps = Math.floor(numPoints / 2);\n  for (let i = 0; i < numSwaps; ++i) {\n    const b1 = start + i * size;\n    const b2 = start + (numPoints - 1 - i) * size;\n    for (let j = 0; j < size; ++j) {\n      const tmp = points[b1 + j];\n      points[b1 + j] = points[b2 + j];\n      points[b2 + j] = tmp;\n    }\n  }\n}\n\n/** @type {typeof import('./polygon-utils').modifyPolygonWindingDirectionPoints} */\nexport function modifyPolygonWindingDirectionPoints(points, direction, options = {}) {\n  const currentDirection = getPolygonWindingDirectionPoints(points, options);\n  if (currentDirection !== direction) {\n    points.reverse();\n    return true;\n  }\n  return false;\n}\n\n/** @type {typeof import('./polygon-utils').getPolygonWindingDirectionPoints} */\nexport function getPolygonWindingDirectionPoints(points, options = {}) {\n  return Math.sign(getPolygonSignedAreaPoints(points, options));\n}\n\n/** @type {typeof import('./polygon-utils').getPolygonSignedAreaPoints} */\nexport function getPolygonSignedAreaPoints(points, options = {}) {\n  // https://en.wikipedia.org/wiki/Shoelace_formula\n  const {start = 0, end = points.length} = options;\n  let area = 0;\n  for (let i = start, j = end - 1; i < end; ++i) {\n    area += (points[i][0] - points[j][0]) * (points[i][1] + points[j][1]);\n    j = i;\n  }\n  return area / 2;\n}\n\n/** @type {typeof import('./polygon-utils').forEachSegmentInPolygonPoints} */\nexport function forEachSegmentInPolygonPoints(points, visitor, options = {}) {\n  const {start = 0, end = points.length, isClosed} = options;\n  for (let i = start; i < end - 1; ++i) {\n    visitor(points[i], points[i + 1], i, i + 1);\n  }\n\n  const isClosedEx = isClosed || equals(points[end - 1], points[0]);\n  if (!isClosedEx) {\n    visitor(points[end - 1], points[0], end - 1, 0);\n  }\n}\n","/*\n  Adapted from https://github.com/mapbox/earcut to allow passing in\n  of outline and hole areas using the `areas` parameter. As the\n  areas are calcuted as part of classifying the polygon rings\n  we can pass them in again to avoid recomputation\n\n  ISC License\n\n  Copyright (c) 2016, Mapbox\n\n  Permission to use, copy, modify, and/or distribute this software for any purpose\n  with or without fee is hereby granted, provided that the above copyright notice\n  and this permission notice appear in all copies.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND\n  FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS\n  OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER\n  TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF\n  THIS SOFTWARE.\n\n */\n\n/* eslint-disable complexity, max-params, max-statements, max-depth, no-continue, no-shadow */\n\nimport {getPolygonSignedArea} from './polygon-utils';\n\nexport function earcut(data, holeIndices, dim, areas) {\n  dim = dim || 2;\n\n  const hasHoles = holeIndices && holeIndices.length;\n  const outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n  let outerNode = linkedList(data, 0, outerLen, dim, true, areas && areas[0]);\n  const triangles = [];\n\n  if (!outerNode || outerNode.next === outerNode.prev) return triangles;\n\n  let invSize;\n  let maxX;\n  let maxY;\n  let minX;\n  let minY;\n  let x;\n  let y;\n\n  if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim, areas);\n\n  // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n  if (data.length > 80 * dim) {\n    minX = maxX = data[0];\n    minY = maxY = data[1];\n\n    for (let i = dim; i < outerLen; i += dim) {\n      x = data[i];\n      y = data[i + 1];\n      if (x < minX) minX = x;\n      if (y < minY) minY = y;\n      if (x > maxX) maxX = x;\n      if (y > maxY) maxY = y;\n    }\n\n    // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n    invSize = Math.max(maxX - minX, maxY - minY);\n    invSize = invSize !== 0 ? 1 / invSize : 0;\n  }\n\n  earcutLinked(outerNode, triangles, dim, minX, minY, invSize);\n\n  return triangles;\n}\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise, area) {\n  let i;\n  let last;\n  if (area === undefined) {\n    area = getPolygonSignedArea(data, {start, end, size: dim});\n  }\n\n  // Note that the signed area calculation in math.gl\n  // has the opposite sign to that which was originally\n  // present in earcut, thus the `< 0` is reversed\n  if (clockwise === area < 0) {\n    for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n  } else {\n    for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n  }\n\n  if (last && equals(last, last.next)) {\n    removeNode(last);\n    last = last.next;\n  }\n\n  return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n  if (!start) return start;\n  if (!end) end = start;\n\n  let p = start;\n  let again;\n  do {\n    again = false;\n\n    if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n      removeNode(p);\n      p = end = p.prev;\n      if (p === p.next) break;\n      again = true;\n    } else {\n      p = p.next;\n    }\n  } while (again || p !== end);\n\n  return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n  if (!ear) return;\n\n  // interlink polygon nodes in z-order\n  if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n\n  let stop = ear;\n  let prev;\n  let next;\n\n  // iterate through ears, slicing them one by one\n  while (ear.prev !== ear.next) {\n    prev = ear.prev;\n    next = ear.next;\n\n    if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n      // cut off the triangle\n      triangles.push(prev.i / dim);\n      triangles.push(ear.i / dim);\n      triangles.push(next.i / dim);\n\n      removeNode(ear);\n\n      // skipping the next vertex leads to less sliver triangles\n      ear = next.next;\n      stop = next.next;\n\n      continue;\n    }\n\n    ear = next;\n\n    // if we looped through the whole remaining polygon and can't find any more ears\n    if (ear === stop) {\n      // try filtering points and slicing again\n      if (!pass) {\n        earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n\n        // if this didn't work, try curing all small self-intersections locally\n      } else if (pass === 1) {\n        ear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n        earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n\n        // as a last resort, try splitting the remaining polygon into two\n      } else if (pass === 2) {\n        splitEarcut(ear, triangles, dim, minX, minY, invSize);\n      }\n\n      break;\n    }\n  }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n  const a = ear.prev;\n  const b = ear;\n  const c = ear.next;\n\n  if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n  // now make sure we don't have other points inside the potential ear\n  let p = ear.next.next;\n\n  while (p !== ear.prev) {\n    if (pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0)\n      return false;\n    p = p.next;\n  }\n\n  return true;\n}\n\nfunction isEarHashed(ear, minX, minY, invSize) {\n  const a = ear.prev;\n  const b = ear;\n  const c = ear.next;\n\n  if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n  // triangle bbox; min & max are calculated like this for speed\n  const minTX = a.x < b.x ? (a.x < c.x ? a.x : c.x) : b.x < c.x ? b.x : c.x;\n  const minTY = a.y < b.y ? (a.y < c.y ? a.y : c.y) : b.y < c.y ? b.y : c.y;\n  const maxTX = a.x > b.x ? (a.x > c.x ? a.x : c.x) : b.x > c.x ? b.x : c.x;\n  const maxTY = a.y > b.y ? (a.y > c.y ? a.y : c.y) : b.y > c.y ? b.y : c.y;\n\n  // z-order range for the current triangle bbox;\n  const minZ = zOrder(minTX, minTY, minX, minY, invSize);\n  const maxZ = zOrder(maxTX, maxTY, minX, minY, invSize);\n\n  let p = ear.prevZ;\n  let n = ear.nextZ;\n\n  // look for points inside the triangle in both directions\n  while (p && p.z >= minZ && n && n.z <= maxZ) {\n    if (\n      p !== ear.prev &&\n      p !== ear.next &&\n      pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n      area(p.prev, p, p.next) >= 0\n    )\n      return false;\n    p = p.prevZ;\n\n    if (\n      n !== ear.prev &&\n      n !== ear.next &&\n      pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) &&\n      area(n.prev, n, n.next) >= 0\n    )\n      return false;\n    n = n.nextZ;\n  }\n\n  // look for remaining points in decreasing z-order\n  while (p && p.z >= minZ) {\n    if (\n      p !== ear.prev &&\n      p !== ear.next &&\n      pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n      area(p.prev, p, p.next) >= 0\n    )\n      return false;\n    p = p.prevZ;\n  }\n\n  // look for remaining points in increasing z-order\n  while (n && n.z <= maxZ) {\n    if (\n      n !== ear.prev &&\n      n !== ear.next &&\n      pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) &&\n      area(n.prev, n, n.next) >= 0\n    )\n      return false;\n    n = n.nextZ;\n  }\n\n  return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n  let p = start;\n  do {\n    const a = p.prev;\n    const b = p.next.next;\n\n    if (\n      !equals(a, b) &&\n      intersects(a, p, p.next, b) &&\n      locallyInside(a, b) &&\n      locallyInside(b, a)\n    ) {\n      triangles.push(a.i / dim);\n      triangles.push(p.i / dim);\n      triangles.push(b.i / dim);\n\n      // remove two nodes involved\n      removeNode(p);\n      removeNode(p.next);\n\n      p = start = b;\n    }\n    p = p.next;\n  } while (p !== start);\n\n  return filterPoints(p);\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n  // look for a valid diagonal that divides the polygon into two\n  let a = start;\n  do {\n    let b = a.next.next;\n    while (b !== a.prev) {\n      if (a.i !== b.i && isValidDiagonal(a, b)) {\n        // split the polygon in two by the diagonal\n        let c = splitPolygon(a, b);\n\n        // filter colinear points around the cuts\n        a = filterPoints(a, a.next);\n        c = filterPoints(c, c.next);\n\n        // run earcut on each half\n        earcutLinked(a, triangles, dim, minX, minY, invSize);\n        earcutLinked(c, triangles, dim, minX, minY, invSize);\n        return;\n      }\n      b = b.next;\n    }\n    a = a.next;\n  } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim, areas) {\n  const queue = [];\n  let i;\n  let len;\n  let start;\n  let end;\n  let list;\n\n  for (i = 0, len = holeIndices.length; i < len; i++) {\n    start = holeIndices[i] * dim;\n    end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n    list = linkedList(data, start, end, dim, false, areas && areas[i + 1]);\n    if (list === list.next) list.steiner = true;\n    queue.push(getLeftmost(list));\n  }\n\n  queue.sort(compareX);\n\n  // process holes from left to right\n  for (i = 0; i < queue.length; i++) {\n    eliminateHole(queue[i], outerNode);\n    outerNode = filterPoints(outerNode, outerNode.next);\n  }\n\n  return outerNode;\n}\n\nfunction compareX(a, b) {\n  return a.x - b.x;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n  outerNode = findHoleBridge(hole, outerNode);\n  if (outerNode) {\n    const b = splitPolygon(outerNode, hole);\n\n    // filter collinear points around the cuts\n    filterPoints(outerNode, outerNode.next);\n    filterPoints(b, b.next);\n  }\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n  let p = outerNode;\n  const hx = hole.x;\n  const hy = hole.y;\n  let qx = -Infinity;\n  let m;\n\n  // find a segment intersected by a ray from the hole's leftmost point to the left;\n  // segment's endpoint with lesser x will be potential connection point\n  do {\n    if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n      const x = p.x + ((hy - p.y) * (p.next.x - p.x)) / (p.next.y - p.y);\n      if (x <= hx && x > qx) {\n        qx = x;\n        if (x === hx) {\n          if (hy === p.y) return p;\n          if (hy === p.next.y) return p.next;\n        }\n        m = p.x < p.next.x ? p : p.next;\n      }\n    }\n    p = p.next;\n  } while (p !== outerNode);\n\n  if (!m) return null;\n\n  if (hx === qx) return m; // hole touches outer segment; pick leftmost endpoint\n\n  // look for points inside the triangle of hole point, segment intersection and endpoint;\n  // if there are no points found, we have a valid connection;\n  // otherwise choose the point of the minimum angle with the ray as connection point\n\n  const stop = m;\n  const mx = m.x;\n  const my = m.y;\n  let tanMin = Infinity;\n  let tan;\n\n  p = m;\n\n  do {\n    if (\n      hx >= p.x &&\n      p.x >= mx &&\n      hx !== p.x &&\n      pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)\n    ) {\n      tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n      if (\n        locallyInside(p, hole) &&\n        (tan < tanMin ||\n          (tan === tanMin && (p.x > m.x || (p.x === m.x && sectorContainsSector(m, p)))))\n      ) {\n        m = p;\n        tanMin = tan;\n      }\n    }\n\n    p = p.next;\n  } while (p !== stop);\n\n  return m;\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector(m, p) {\n  return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, invSize) {\n  let p = start;\n  do {\n    if (p.z === null) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n    p.prevZ = p.prev;\n    p.nextZ = p.next;\n    p = p.next;\n  } while (p !== start);\n\n  p.prevZ.nextZ = null;\n  p.prevZ = null;\n\n  sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n  let e;\n  let i;\n  let inSize = 1;\n  let numMerges;\n  let p;\n  let pSize;\n  let q;\n  let qSize;\n  let tail;\n\n  do {\n    p = list;\n    list = null;\n    tail = null;\n    numMerges = 0;\n\n    while (p) {\n      numMerges++;\n      q = p;\n      pSize = 0;\n      for (i = 0; i < inSize; i++) {\n        pSize++;\n        q = q.nextZ;\n        if (!q) break;\n      }\n      qSize = inSize;\n\n      while (pSize > 0 || (qSize > 0 && q)) {\n        if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n          e = p;\n          p = p.nextZ;\n          pSize--;\n        } else {\n          e = q;\n          q = q.nextZ;\n          qSize--;\n        }\n\n        if (tail) tail.nextZ = e;\n        else list = e;\n\n        e.prevZ = tail;\n        tail = e;\n      }\n\n      p = q;\n    }\n\n    tail.nextZ = null;\n    inSize *= 2;\n  } while (numMerges > 1);\n\n  return list;\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x, y, minX, minY, invSize) {\n  // coords are transformed into non-negative 15-bit integer range\n  x = 32767 * (x - minX) * invSize;\n  y = 32767 * (y - minY) * invSize;\n\n  x = (x | (x << 8)) & 0x00ff00ff;\n  x = (x | (x << 4)) & 0x0f0f0f0f;\n  x = (x | (x << 2)) & 0x33333333;\n  x = (x | (x << 1)) & 0x55555555;\n\n  y = (y | (y << 8)) & 0x00ff00ff;\n  y = (y | (y << 4)) & 0x0f0f0f0f;\n  y = (y | (y << 2)) & 0x33333333;\n  y = (y | (y << 1)) & 0x55555555;\n\n  return x | (y << 1);\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n  let p = start;\n  let leftmost = start;\n  do {\n    if (p.x < leftmost.x || (p.x === leftmost.x && p.y < leftmost.y)) leftmost = p;\n    p = p.next;\n  } while (p !== start);\n\n  return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n  return (\n    (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 &&\n    (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 &&\n    (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0\n  );\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n  return (\n    a.next.i !== b.i &&\n    a.prev.i !== b.i &&\n    !intersectsPolygon(a, b) && // dones't intersect other edges\n    ((locallyInside(a, b) &&\n      locallyInside(b, a) &&\n      middleInside(a, b) && // locally visible\n      (area(a.prev, a, b.prev) || area(a, b.prev, b))) || // does not create opposite-facing sectors\n      (equals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0))\n  ); // special zero-length case\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n  return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n  return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n  const o1 = sign(area(p1, q1, p2));\n  const o2 = sign(area(p1, q1, q2));\n  const o3 = sign(area(p2, q2, p1));\n  const o4 = sign(area(p2, q2, q1));\n\n  if (o1 !== o2 && o3 !== o4) return true; // general case\n\n  if (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n  if (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n  if (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n  if (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n  return false;\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment(p, q, r) {\n  return (\n    q.x <= Math.max(p.x, r.x) &&\n    q.x >= Math.min(p.x, r.x) &&\n    q.y <= Math.max(p.y, r.y) &&\n    q.y >= Math.min(p.y, r.y)\n  );\n}\n\nfunction sign(num) {\n  return num > 0 ? 1 : num < 0 ? -1 : 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n  let p = a;\n  do {\n    if (\n      p.i !== a.i &&\n      p.next.i !== a.i &&\n      p.i !== b.i &&\n      p.next.i !== b.i &&\n      intersects(p, p.next, a, b)\n    )\n      return true;\n    p = p.next;\n  } while (p !== a);\n\n  return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n  return area(a.prev, a, a.next) < 0\n    ? area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0\n    : area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n  let p = a;\n  let inside = false;\n  const px = (a.x + b.x) / 2;\n  const py = (a.y + b.y) / 2;\n  do {\n    if (\n      p.y > py !== p.next.y > py &&\n      p.next.y !== p.y &&\n      px < ((p.next.x - p.x) * (py - p.y)) / (p.next.y - p.y) + p.x\n    )\n      inside = !inside;\n    p = p.next;\n  } while (p !== a);\n\n  return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n  const a2 = new Node(a.i, a.x, a.y);\n  const b2 = new Node(b.i, b.x, b.y);\n  const an = a.next;\n  const bp = b.prev;\n\n  a.next = b;\n  b.prev = a;\n\n  a2.next = an;\n  an.prev = a2;\n\n  b2.next = a2;\n  a2.prev = b2;\n\n  bp.next = b2;\n  b2.prev = bp;\n\n  return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n  const p = new Node(i, x, y);\n\n  if (!last) {\n    p.prev = p;\n    p.next = p;\n  } else {\n    p.next = last.next;\n    p.prev = last;\n    last.next.prev = p;\n    last.next = p;\n  }\n  return p;\n}\n\nfunction removeNode(p) {\n  p.next.prev = p.prev;\n  p.prev.next = p.next;\n\n  if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n  if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n  // vertex index in coordinates array\n  this.i = i;\n\n  // vertex coordinates\n  this.x = x;\n  this.y = y;\n\n  // previous and next vertex nodes in a polygon ring\n  this.prev = null;\n  this.next = null;\n\n  // z-order curve value\n  this.z = null;\n\n  // previous and next nodes in z-order\n  this.prevZ = null;\n  this.nextZ = null;\n\n  // indicates whether this is a steiner point\n  this.steiner = false;\n}\n","/**\n * Common utilities\n * @module glMatrix\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import * as glMatrix from \"./common.js\";\n/**\n * 4 Dimensional Vector\n * @module vec4\n */\n\n/**\n * Creates a new, empty vec4\n *\n * @returns {vec4} a new 4D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {ReadonlyVec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\n\nexport function fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the source vector\n * @returns {vec4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\n\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\n * Multiplies two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\n * Divides two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\n * Math.ceil the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to ceil\n * @returns {vec4} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\n * Math.floor the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to floor\n * @returns {vec4} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\n * Returns the minimum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\n * Returns the maximum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\n * Math.round the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to round\n * @returns {vec4} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\n * Adds two vec4's after scaling the second operand by a scalar value\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec4} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\n * Calculates the squared euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\n * Calculates the length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\n * Calculates the squared length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\n * Negates the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to negate\n * @returns {vec4} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to invert\n * @returns {vec4} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to normalize\n * @returns {vec4} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\n * Returns the cross-product of three vectors in a 4-dimensional space\n *\n * @param {ReadonlyVec4} result the receiving vector\n * @param {ReadonlyVec4} U the first vector\n * @param {ReadonlyVec4} V the second vector\n * @param {ReadonlyVec4} W the third vector\n * @returns {vec4} result\n */\n\nexport function cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec4} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec4} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec4} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec4} out\n */\n\nexport function transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set the components of a vec4 to zero\n *\n * @param {vec4} out the receiving vector\n * @returns {vec4} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec4} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\n * Alias for {@link vec4.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec4.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec4.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec4.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec4.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec4.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec4s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();","import {transformMat4, scale} from 'gl-matrix/vec4';\n\n// Helper, avoids low-precision 32 bit matrices from gl-matrix mat4.create()\nexport function createMat4(): number[] {\n  return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}\n\n// Transforms a vec4 with a projection matrix\nexport function transformVector(matrix: number[], vector: number[]): number[] {\n  const result = transformMat4([] as number[], vector, matrix);\n  scale(result, result, 1 / result[3]);\n  return result;\n}\n\nexport function mod(value: number, divisor: number): number {\n  const modulus = value % divisor;\n  return modulus < 0 ? divisor + modulus : modulus;\n}\n\nexport function lerp(start: number, end: number, step: number): number {\n  return step * end + (1 - step) * start;\n}\n\nexport function clamp(x: number, min: number, max: number): number {\n  return x < min ? min : x > max ? max : x;\n}\n\nfunction ieLog2(x: number): number {\n  return Math.log(x) * Math.LOG2E;\n}\n// Handle missing log2 in IE 11\nexport const log2 = Math.log2 || ieLog2;\n","import * as glMatrix from \"./common.js\";\n/**\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\n * Calculates the determinant of a mat4\n *\n * @param {ReadonlyMat4} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {mat4} out\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 from a dual quat.\n *\n * @param {mat4} out Matrix\n * @param {ReadonlyQuat2} a Dual Quaternion\n * @returns {mat4} mat4 receiving operation result\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveNO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\n * Alias for {@link mat4.perspectiveNO}\n * @function\n */\n\nexport var perspective = perspectiveNO;\n/**\n * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveZO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = far * nf;\n    out[14] = far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -near;\n  }\n\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoNO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Alias for {@link mat4.orthoNO}\n * @function\n */\n\nexport var ortho = orthoNO;\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoZO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = near * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat4\n *\n * @param {ReadonlyMat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\n * 2 Dimensional Vector\n * @module vec2\n */\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(2);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {ReadonlyVec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\n\nexport function fromValues(x, y) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the source vector\n * @returns {vec2} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\n\nexport function set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n/**\n * Math.ceil the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to ceil\n * @returns {vec2} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n/**\n * Math.floor the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to floor\n * @returns {vec2} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n/**\n * Math.round the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to round\n * @returns {vec2} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.hypot(x, y);\n}\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n}\n/**\n * Calculates the length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.hypot(x, y);\n}\n/**\n * Calculates the squared length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n}\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to negate\n * @returns {vec2} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to invert\n * @returns {vec2} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to normalize\n * @returns {vec2} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec3} out\n */\n\nexport function cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec2} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec2} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2d} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat3} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n/**\n * Rotate a 2D vector\n * @param {vec2} out The receiving vec2\n * @param {ReadonlyVec2} a The vec2 point to rotate\n * @param {ReadonlyVec2} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec2} out\n */\n\nexport function rotate(out, a, b, rad) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n      p1 = a[1] - b[1],\n      sinC = Math.sin(rad),\n      cosC = Math.cos(rad); //perform rotation and translate to correct position\n\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n/**\n * Get the angle between two 2D vectors\n * @param {ReadonlyVec2} a The first operand\n * @param {ReadonlyVec2} b The second operand\n * @returns {Number} The angle in radians\n */\n\nexport function angle(a, b) {\n  var x1 = a[0],\n      y1 = a[1],\n      x2 = b[0],\n      y2 = b[1],\n      // mag is the product of the magnitudes of a and b\n  mag = Math.sqrt(x1 * x1 + y1 * y1) * Math.sqrt(x2 * x2 + y2 * y2),\n      // mag &&.. short circuits if mag == 0\n  cosine = mag && (x1 * x2 + y1 * y2) / mag; // Math.min(Math.max(cosine, -1), 1) clamps the cosine between -1 and 1\n\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec2 to zero\n *\n * @param {vec2} out the receiving vector\n * @returns {vec2} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec2} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec2(\" + a[0] + \", \" + a[1] + \")\";\n}\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n/**\n * Alias for {@link vec2.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec2.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec2.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec2.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec2.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec2.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec2.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {ReadonlyVec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Calculates the length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the source vector\n * @returns {vec3} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to ceil\n * @returns {vec3} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to floor\n * @returns {vec3} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to round\n * @returns {vec3} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Calculates the squared length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to negate\n * @returns {vec3} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to invert\n * @returns {vec3} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to normalize\n * @returns {vec3} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\n * Transforms the vec3 with a quat\n * Can also be used for dual quaternions. (Multiply it with the real part)\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec3} out\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Get the angle between two 3D vectors\n * @param {ReadonlyVec3} a The first operand\n * @param {ReadonlyVec3} b The second operand\n * @returns {Number} The angle in radians\n */\n\nexport function angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec3 to zero\n *\n * @param {vec3} out the receiving vector\n * @returns {vec3} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec3.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();","// Replacement for the external assert method to reduce bundle size\n// Note: We don't use the second \"message\" argument in calling code,\n// so no need to support it here\nexport default function assert(condition: unknown, message?: string): void {\n  if (!condition) {\n    throw new Error(message || '@math.gl/web-mercator: assertion failed.');\n  }\n}\n","// TODO - THE UTILITIES IN THIS FILE SHOULD BE IMPORTED FROM WEB-MERCATOR-VIEWPORT MODULE\n\nimport {createMat4, transformVector, clamp, log2} from './math-utils';\n\nimport * as mat4 from 'gl-matrix/mat4';\nimport * as vec2 from 'gl-matrix/vec2';\nimport * as vec3 from 'gl-matrix/vec3';\nimport assert from './assert';\n\n// CONSTANTS\nconst PI = Math.PI;\nconst PI_4 = PI / 4;\nconst DEGREES_TO_RADIANS = PI / 180;\nconst RADIANS_TO_DEGREES = 180 / PI;\nconst TILE_SIZE = 512;\n// Average circumference (40075 km equatorial, 40007 km meridional)\nconst EARTH_CIRCUMFERENCE = 40.03e6;\n// Latitude that makes a square world, 2 * atan(E ** PI) - PI / 2\nexport const MAX_LATITUDE = 85.051129;\n\n// Mapbox default altitude\nexport const DEFAULT_ALTITUDE = 1.5;\n\nexport type DistanceScales = {\n  unitsPerMeter: number[];\n  metersPerUnit: number[];\n  unitsPerMeter2?: number[];\n  unitsPerDegree: number[];\n  degreesPerUnit: number[];\n  unitsPerDegree2?: number[];\n};\n\n/**\n * PROJECTION MATRIX PARAMETERS\n *\n * TODO how to document mebers\n * @param fov in radians. fov is variable, depends on pitch and altitude\n * @param aspect width/height\n * @param focalDistance distance at which visual scale factor is 1\n * @param near near clipping plane\n * @param far far clipping plane\n */\ntype ProjectionParameters = {\n  fov: number;\n  aspect: number;\n  focalDistance: number;\n  near: number;\n  far: number;\n};\n\n/** Logarithimic zoom to linear scale **/\nexport function zoomToScale(zoom: number): number {\n  return Math.pow(2, zoom);\n}\n\n/** Linear scale to logarithimic zoom **/\nexport function scaleToZoom(scale: number): number {\n  return log2(scale);\n}\n\n/**\n * Project [lng,lat] on sphere onto [x,y] on 512*512 Mercator Zoom 0 tile.\n * Performs the nonlinear part of the web mercator projection.\n * Remaining projection is done with 4x4 matrices which also handles\n * perspective.\n *\n * @param lngLat - [lng, lat] coordinates\n *   Specifies a point on the sphere to project onto the map.\n * @return [x,y] coordinates.\n */\nexport function lngLatToWorld(lngLat: number[]): [number, number] {\n  const [lng, lat] = lngLat;\n  assert(Number.isFinite(lng));\n  assert(Number.isFinite(lat) && lat >= -90 && lat <= 90, 'invalid latitude');\n\n  const lambda2 = lng * DEGREES_TO_RADIANS;\n  const phi2 = lat * DEGREES_TO_RADIANS;\n  const x = (TILE_SIZE * (lambda2 + PI)) / (2 * PI);\n  const y = (TILE_SIZE * (PI + Math.log(Math.tan(PI_4 + phi2 * 0.5)))) / (2 * PI);\n  return [x, y];\n}\n\n/**\n * Unproject world point [x,y] on map onto {lat, lon} on sphere\n *\n * @param xy - array with [x,y] members\n *  representing point on projected map plane\n * @return - array with [x,y] of point on sphere.\n *   Has toArray method if you need a GeoJSON Array.\n *   Per cartographic tradition, lat and lon are specified as degrees.\n */\nexport function worldToLngLat(xy: number[]): [number, number] {\n  const [x, y] = xy;\n  const lambda2 = (x / TILE_SIZE) * (2 * PI) - PI;\n  const phi2 = 2 * (Math.atan(Math.exp((y / TILE_SIZE) * (2 * PI) - PI)) - PI_4);\n  return [lambda2 * RADIANS_TO_DEGREES, phi2 * RADIANS_TO_DEGREES];\n}\n\n/**\n * Returns the zoom level that gives a 1 meter pixel at a certain latitude\n * 1 = C*cos(y)/2^z/TILE_SIZE = C*cos(y)/2^(z+9)\n */\nexport function getMeterZoom(options: {latitude: number}): number {\n  const {latitude} = options;\n  assert(Number.isFinite(latitude));\n  const latCosine = Math.cos(latitude * DEGREES_TO_RADIANS);\n  return scaleToZoom(EARTH_CIRCUMFERENCE * latCosine) - 9;\n}\n\n/**\n * Calculate the conversion from meter to common units at a given latitude\n * This is a cheaper version of `getDistanceScales`\n * @param latitude center latitude in degrees\n * @returns common units per meter\n */\nexport function unitsPerMeter(latitude: number): number {\n  const latCosine = Math.cos(latitude * DEGREES_TO_RADIANS);\n  return TILE_SIZE / EARTH_CIRCUMFERENCE / latCosine;\n}\n\n/**\n * Calculate distance scales in meters around current lat/lon, both for\n * degrees and pixels.\n * In mercator projection mode, the distance scales vary significantly\n * with latitude.\n */\nexport function getDistanceScales(options: {\n  latitude: number;\n  longitude: number;\n  highPrecision?: boolean;\n}): DistanceScales {\n  const {latitude, longitude, highPrecision = false} = options;\n  assert(Number.isFinite(latitude) && Number.isFinite(longitude));\n\n  const worldSize = TILE_SIZE;\n  const latCosine = Math.cos(latitude * DEGREES_TO_RADIANS);\n\n  /**\n   * Number of pixels occupied by one degree longitude around current lat/lon:\n     unitsPerDegreeX = d(lngLatToWorld([lng, lat])[0])/d(lng)\n       = scale * TILE_SIZE * DEGREES_TO_RADIANS / (2 * PI)\n     unitsPerDegreeY = d(lngLatToWorld([lng, lat])[1])/d(lat)\n       = -scale * TILE_SIZE * DEGREES_TO_RADIANS / cos(lat * DEGREES_TO_RADIANS)  / (2 * PI)\n   */\n  const unitsPerDegreeX = worldSize / 360;\n  const unitsPerDegreeY = unitsPerDegreeX / latCosine;\n\n  /**\n   * Number of pixels occupied by one meter around current lat/lon:\n   */\n  const altUnitsPerMeter = worldSize / EARTH_CIRCUMFERENCE / latCosine;\n\n  /**\n   * LngLat: longitude -> east and latitude -> north (bottom left)\n   * UTM meter offset: x -> east and y -> north (bottom left)\n   * World space: x -> east and y -> south (top left)\n   *\n   * Y needs to be flipped when converting delta degree/meter to delta pixels\n   */\n  const result: DistanceScales = {\n    unitsPerMeter: [altUnitsPerMeter, altUnitsPerMeter, altUnitsPerMeter],\n    metersPerUnit: [1 / altUnitsPerMeter, 1 / altUnitsPerMeter, 1 / altUnitsPerMeter],\n\n    unitsPerDegree: [unitsPerDegreeX, unitsPerDegreeY, altUnitsPerMeter],\n    degreesPerUnit: [1 / unitsPerDegreeX, 1 / unitsPerDegreeY, 1 / altUnitsPerMeter]\n  };\n\n  /**\n   * Taylor series 2nd order for 1/latCosine\n     f'(a) * (x - a)\n       = d(1/cos(lat * DEGREES_TO_RADIANS))/d(lat) * dLat\n       = DEGREES_TO_RADIANS * tan(lat * DEGREES_TO_RADIANS) / cos(lat * DEGREES_TO_RADIANS) * dLat\n   */\n  if (highPrecision) {\n    const latCosine2 = (DEGREES_TO_RADIANS * Math.tan(latitude * DEGREES_TO_RADIANS)) / latCosine;\n    const unitsPerDegreeY2 = (unitsPerDegreeX * latCosine2) / 2;\n    const altUnitsPerDegree2 = (worldSize / EARTH_CIRCUMFERENCE) * latCosine2;\n    const altUnitsPerMeter2 = (altUnitsPerDegree2 / unitsPerDegreeY) * altUnitsPerMeter;\n\n    result.unitsPerDegree2 = [0, unitsPerDegreeY2, altUnitsPerDegree2];\n    result.unitsPerMeter2 = [altUnitsPerMeter2, 0, altUnitsPerMeter2];\n  }\n\n  // Main results, used for converting meters to latlng deltas and scaling offsets\n  return result;\n}\n\n/**\n * Offset a lng/lat position by meterOffset (northing, easting)\n */\nexport function addMetersToLngLat(lngLatZ: number[], xyz: number[]): number[] {\n  const [longitude, latitude, z0] = lngLatZ;\n  const [x, y, z] = xyz;\n\n  const {unitsPerMeter, unitsPerMeter2} = getDistanceScales({\n    longitude,\n    latitude,\n    highPrecision: true\n  });\n\n  const worldspace = lngLatToWorld(lngLatZ);\n  worldspace[0] += x * (unitsPerMeter[0] + unitsPerMeter2[0] * y);\n  worldspace[1] += y * (unitsPerMeter[1] + unitsPerMeter2[1] * y);\n\n  const newLngLat = worldToLngLat(worldspace);\n  const newZ = (z0 || 0) + (z || 0);\n\n  return Number.isFinite(z0) || Number.isFinite(z) ? [newLngLat[0], newLngLat[1], newZ] : newLngLat;\n}\n\n/**\n *\n * view and projection matrix creation is intentionally kept compatible with\n * mapbox-gl's implementation to ensure that seamless interoperation\n * with mapbox and react-map-gl. See: https://github.com/mapbox/mapbox-gl-js\n */\nexport function getViewMatrix(options: {\n  // Viewport props\n  height: number;\n  pitch: number;\n  bearing: number;\n  altitude: number;\n  // Pre-calculated parameters\n  scale: number;\n  center?: number[];\n}): number[] {\n  const {\n    // Viewport props\n    height,\n    pitch,\n    bearing,\n    altitude,\n    // Pre-calculated parameters\n    scale,\n    center\n  } = options;\n  // VIEW MATRIX: PROJECTS MERCATOR WORLD COORDINATES\n  // Note that mercator world coordinates typically need to be flipped\n  //\n  // Note: As usual, matrix operation orders should be read in reverse\n  // since vectors will be multiplied from the right during transformation\n  const vm = createMat4();\n\n  // Move camera to altitude (along the pitch & bearing direction)\n  mat4.translate(vm, vm, [0, 0, -altitude]);\n\n  // Rotate by bearing, and then by pitch (which tilts the view)\n  mat4.rotateX(vm, vm, -pitch * DEGREES_TO_RADIANS);\n  mat4.rotateZ(vm, vm, bearing * DEGREES_TO_RADIANS);\n\n  const relativeScale = scale / height;\n  mat4.scale(vm, vm, [relativeScale, relativeScale, relativeScale]);\n\n  if (center) {\n    mat4.translate(vm, vm, vec3.negate([], center));\n  }\n\n  return vm;\n}\n\n/**\n * Calculates mapbox compatible projection matrix from parameters\n *\n * @param options.width Width of \"viewport\" or window\n * @param options.height Height of \"viewport\" or window\n * @param options.scale Scale at the current zoom\n * @param options.center Offset of the target, vec3 in world space\n * @param options.offset Offset of the focal point, vec2 in screen space\n * @param options.pitch Camera angle in degrees (0 is straight down)\n * @param options.fovy field of view in degrees\n * @param options.altitude if provided, field of view is calculated using `altitudeToFovy()`\n * @param options.nearZMultiplier control z buffer\n * @param options.farZMultiplier control z buffer\n * @returns project parameters object\n */\nexport function getProjectionParameters(options: {\n  width: number;\n  height: number;\n  scale?: number;\n  center?: number[];\n  offset?: [number, number];\n  fovy?: number;\n  altitude?: number;\n  pitch?: number;\n  nearZMultiplier?: number;\n  farZMultiplier?: number;\n}): ProjectionParameters {\n  const {\n    width,\n    height,\n    altitude,\n    pitch = 0,\n    offset,\n    center,\n    scale,\n    nearZMultiplier = 1,\n    farZMultiplier = 1\n  } = options;\n  let {fovy = altitudeToFovy(DEFAULT_ALTITUDE)} = options;\n\n  // For back-compatibility allow field of view to be\n  // derived from altitude\n  if (altitude !== undefined) {\n    fovy = altitudeToFovy(altitude);\n  }\n\n  const fovRadians = fovy * DEGREES_TO_RADIANS;\n  const pitchRadians = pitch * DEGREES_TO_RADIANS;\n\n  // Distance from camera to the target\n  const focalDistance = fovyToAltitude(fovy);\n\n  let cameraToSeaLevelDistance = focalDistance;\n\n  if (center) {\n    cameraToSeaLevelDistance += (center[2] * scale) / Math.cos(pitchRadians) / height;\n  }\n\n  const fovAboveCenter = fovRadians * (0.5 + (offset ? offset[1] : 0) / height);\n\n  // Find the distance from the center point to the center top\n  // in focal distance units using law of sines.\n  const topHalfSurfaceDistance =\n    (Math.sin(fovAboveCenter) * cameraToSeaLevelDistance) /\n    Math.sin(clamp(Math.PI / 2 - pitchRadians - fovAboveCenter, 0.01, Math.PI - 0.01));\n\n  // Calculate z distance of the farthest fragment that should be rendered.\n  const furthestDistance =\n    Math.sin(pitchRadians) * topHalfSurfaceDistance + cameraToSeaLevelDistance;\n  // Matches mapbox limit\n  const horizonDistance = cameraToSeaLevelDistance * 10;\n\n  // Calculate z value of the farthest fragment that should be rendered.\n  const farZ = Math.min(furthestDistance * farZMultiplier, horizonDistance);\n\n  return {\n    fov: fovRadians,\n    aspect: width / height,\n    focalDistance,\n    near: nearZMultiplier,\n    far: farZ\n  };\n}\n\n/**\n * CALCULATE PROJECTION MATRIX: PROJECTS FROM CAMERA (VIEW) SPACE TO CLIPSPACE\n *\n * To match mapbox's z buffer:\n *  - \\<= 0.28: nearZMultiplier: 0.1, farZmultiplier: 1\n *  - \\>= 0.29: nearZMultiplier: 1 / height, farZMultiplier: 1.01\n *\n * @param options Viewport options\n * @param options.width Width of \"viewport\" or window\n * @param options.height Height of \"viewport\" or window\n * @param options.scale Scale at the current zoom\n * @param options.center Offset of the target, vec3 in world space\n * @param options.offset Offset of the focal point, vec2 in screen space\n * @param options.pitch Camera angle in degrees (0 is straight down)\n * @param options.fovy field of view in degrees\n * @param options.altitude if provided, field of view is calculated using `altitudeToFovy()`\n * @param options.nearZMultiplier control z buffer\n * @param options.farZMultiplier control z buffer\n * @returns 4x4 projection matrix\n */\nexport function getProjectionMatrix(options: {\n  width: number;\n  height: number;\n  pitch: number;\n  scale?: number;\n  center?: number[];\n  offset?: [number, number];\n  fovy?: number;\n  altitude?: number;\n  nearZMultiplier: number;\n  farZMultiplier: number;\n}): number[] {\n  const {fov, aspect, near, far} = getProjectionParameters(options);\n\n  const projectionMatrix = mat4.perspective(\n    [] as number[],\n    fov, // fov in radians\n    aspect, // aspect ratio\n    near, // near plane\n    far // far plane\n  );\n\n  return projectionMatrix;\n}\n\n/**\n *\n * Convert an altitude to field of view such that the\n * focal distance is equal to the altitude\n *\n * @param altitude - altitude of camera in screen units\n * @return fovy field of view in degrees\n */\nexport function altitudeToFovy(altitude: number): number {\n  return 2 * Math.atan(0.5 / altitude) * RADIANS_TO_DEGREES;\n}\n\n/**\n *\n * Convert an field of view such that the\n * focal distance is equal to the altitude\n *\n * @param fovy - field of view in degrees\n * @return altitude altitude of camera in screen units\n */\nexport function fovyToAltitude(fovy: number): number {\n  return 0.5 / Math.tan(0.5 * fovy * DEGREES_TO_RADIANS);\n}\n\n/**\n * Project flat coordinates to pixels on screen.\n *\n * @param xyz - flat coordinate on 512*512 Mercator Zoom 0 tile\n * @param pixelProjectionMatrix - projection matrix 4x4\n * @return [x, y, depth] pixel coordinate on screen.\n */\nexport function worldToPixels(xyz: number[], pixelProjectionMatrix: number[]): number[];\n\n// Project flat coordinates to pixels on screen.\nexport function worldToPixels(xyz: number[], pixelProjectionMatrix: number[]): number[] {\n  const [x, y, z = 0] = xyz;\n  assert(Number.isFinite(x) && Number.isFinite(y) && Number.isFinite(z));\n\n  return transformVector(pixelProjectionMatrix, [x, y, z, 1]);\n}\n\n/**\n * Unproject pixels on screen to flat coordinates.\n *\n * @param xyz - pixel coordinate on screen.\n * @param pixelUnprojectionMatrix - unprojection matrix 4x4\n * @param targetZ - if pixel coordinate does not have a 3rd component (depth),\n *    targetZ is used as the elevation plane to unproject onto\n * @return [x, y, Z] flat coordinates on 512*512 Mercator Zoom 0 tile.\n */\nexport function pixelsToWorld(\n  xyz: number[],\n  pixelUnprojectionMatrix: number[],\n  targetZ: number = 0\n): number[] {\n  const [x, y, z] = xyz;\n  assert(Number.isFinite(x) && Number.isFinite(y), 'invalid pixel coordinate');\n\n  if (Number.isFinite(z)) {\n    // Has depth component\n    const coord = transformVector(pixelUnprojectionMatrix, [x, y, z, 1]);\n    return coord;\n  }\n\n  // since we don't know the correct projected z value for the point,\n  // unproject two points to get a line and then find the point on that line with z=0\n  const coord0 = transformVector(pixelUnprojectionMatrix, [x, y, 0, 1]);\n  const coord1 = transformVector(pixelUnprojectionMatrix, [x, y, 1, 1]);\n\n  const z0 = coord0[2];\n  const z1 = coord1[2];\n\n  const t = z0 === z1 ? 0 : ((targetZ || 0) - z0) / (z1 - z0);\n  return vec2.lerp([] as number[], coord0, coord1, t);\n}\n","import assert from './assert';\nimport {log2, clamp} from './math-utils';\nimport {MAX_LATITUDE, lngLatToWorld, worldToLngLat} from './web-mercator-utils';\n\n/**\n * Options for fitBounds\n * @param width - viewport width\n * @param height - viewport height\n * @param bounds - [[lon, lat], [lon, lat]]\n * @param minExtent - The width/height of the bounded area will never be smaller than this\n * @param padding - The amount of padding in pixels\n *  to add to the given bounds. Can also be an object with top, bottom, left and right\n *  properties defining the padding.\n * @param options.offset= - The center of the given bounds relative to the map's center,\n */\nexport type FitBoundsOptions = {\n  width: number;\n  height: number;\n  bounds: [[number, number], [number, number]];\n  minExtent?: number; // 0.01 would be about 1000 meters (degree is ~110KM)\n  maxZoom?: number; // ~x4,000,000 => About 10 meter extents\n  // options\n  padding?: number | Padding;\n  offset?: number[];\n};\n\n/**\n * An object describing the padding to add to the bounds.\n * @property top - Padding from top in pixels to add to the given bounds\n * @property bottom - Padding from bottom in pixels to add to the given bounds\n * @property left - Padding from left in pixels to add to the given bounds\n * @property right - Padding from right in pixels to add to the given bounds\n */\nexport type Padding = {\n  top: number;\n  bottom: number;\n  left: number;\n  right: number;\n};\n\ntype ViewportProps = {\n  longitude: number;\n  latitude: number;\n  zoom: number;\n};\n\n/**\n * Returns map settings {latitude, longitude, zoom}\n * that will contain the provided corners within the provided width.\n *\n * > _Note: Only supports non-perspective mode._\n *\n * @param options fit bounds parameters\n * @returns - latitude, longitude and zoom\n */\nexport default function fitBounds(options: FitBoundsOptions): ViewportProps {\n  const {\n    width,\n    height,\n    bounds,\n    minExtent = 0, // 0.01 would be about 1000 meters (degree is ~110KM)\n    maxZoom = 24, // ~x4,000,000 => About 10 meter extents\n    offset = [0, 0]\n  } = options;\n\n  const [[west, south], [east, north]] = bounds;\n  const padding = getPaddingObject(options.padding);\n\n  const nw = lngLatToWorld([west, clamp(north, -MAX_LATITUDE, MAX_LATITUDE)]);\n  const se = lngLatToWorld([east, clamp(south, -MAX_LATITUDE, MAX_LATITUDE)]);\n\n  // width/height on the Web Mercator plane\n  const size = [\n    Math.max(Math.abs(se[0] - nw[0]), minExtent),\n    Math.max(Math.abs(se[1] - nw[1]), minExtent)\n  ];\n\n  const targetSize = [\n    width - padding.left - padding.right - Math.abs(offset[0]) * 2,\n    height - padding.top - padding.bottom - Math.abs(offset[1]) * 2\n  ];\n\n  assert(targetSize[0] > 0 && targetSize[1] > 0);\n\n  // scale = screen pixels per unit on the Web Mercator plane\n  const scaleX = targetSize[0] / size[0];\n  const scaleY = targetSize[1] / size[1];\n\n  // Find how much we need to shift the center\n  const offsetX = (padding.right - padding.left) / 2 / scaleX;\n  const offsetY = (padding.top - padding.bottom) / 2 / scaleY;\n\n  const center = [(se[0] + nw[0]) / 2 + offsetX, (se[1] + nw[1]) / 2 + offsetY];\n\n  const centerLngLat = worldToLngLat(center);\n  const zoom = Math.min(maxZoom, log2(Math.abs(Math.min(scaleX, scaleY))));\n\n  assert(Number.isFinite(zoom));\n\n  return {\n    longitude: centerLngLat[0],\n    latitude: centerLngLat[1],\n    zoom\n  };\n}\n\n// Helpers\nfunction getPaddingObject(padding: number | Padding = 0): Padding {\n  if (typeof padding === 'number') {\n    return {\n      top: padding,\n      bottom: padding,\n      left: padding,\n      right: padding\n    };\n  }\n\n  // Make sure all the required properties are set\n  assert(\n    Number.isFinite(padding.top) &&\n      Number.isFinite(padding.bottom) &&\n      Number.isFinite(padding.left) &&\n      Number.isFinite(padding.right)\n  );\n\n  return padding;\n}\n","import {worldToLngLat} from './web-mercator-utils';\nimport * as vec2 from 'gl-matrix/vec2';\nimport {transformVector} from './math-utils';\nimport type WebMercatorViewport from './web-mercator-viewport';\n\nconst DEGREES_TO_RADIANS = Math.PI / 180;\n\n/*\n * Returns the quad at the intersection of the frustum and the given z plane\n * @param {WebMercatorViewport} viewport\n * @param {Number} z - elevation in meters\n */\nexport default function getBounds(viewport: WebMercatorViewport, z: number = 0): number[][] {\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  const {width, height, unproject} = viewport;\n  const unprojectOps = {targetZ: z};\n  const bottomLeft = unproject([0, height], unprojectOps);\n  const bottomRight = unproject([width, height], unprojectOps);\n  let topLeft: number[];\n  let topRight: number[];\n\n  const halfFov = viewport.fovy\n    ? 0.5 * viewport.fovy * DEGREES_TO_RADIANS\n    : Math.atan(0.5 / viewport.altitude);\n  const angleToGround = (90 - viewport.pitch) * DEGREES_TO_RADIANS;\n  // The top plane is parallel to the ground if halfFov == angleToGround\n  if (halfFov > angleToGround - 0.01) {\n    // intersect with the far plane\n    topLeft = unprojectOnFarPlane(viewport, 0, z);\n    topRight = unprojectOnFarPlane(viewport, width, z);\n  } else {\n    // intersect with the top plane\n    topLeft = unproject([0, 0], unprojectOps);\n    topRight = unproject([width, 0], unprojectOps);\n  }\n\n  return [bottomLeft, bottomRight, topRight, topLeft];\n}\n\n/*\n * Find a point on the far clipping plane of the viewport\n * @param {WebMercatorViewport} viewport\n * @param {Number} x - projected x in screen space\n * @param {Number} targetZ - the elevation of the point in meters\n */\nfunction unprojectOnFarPlane(viewport: WebMercatorViewport, x: number, targetZ: number): number[] {\n  const {pixelUnprojectionMatrix} = viewport;\n  const coord0 = transformVector(pixelUnprojectionMatrix, [x, 0, 1, 1]);\n  const coord1 = transformVector(pixelUnprojectionMatrix, [x, viewport.height, 1, 1]);\n\n  const z = targetZ * viewport.distanceScales.unitsPerMeter[2];\n  const t = (z - coord0[2]) / (coord1[2] - coord0[2]);\n  const coord = vec2.lerp([], coord0, coord1, t);\n\n  const result = worldToLngLat(coord);\n  result.push(targetZ);\n  return result;\n}\n","import {worldToLngLat} from './web-mercator-utils';\nimport {mod, log2} from './math-utils';\n\n// defined by mapbox-gl\nconst TILE_SIZE = 512;\n\n/** Description of viewport */\nexport type ViewportProps = {\n  width: number;\n  height: number;\n  longitude: number;\n  latitude: number;\n  zoom: number;\n  pitch?: number;\n  bearing?: number;\n};\n\n/**\n * Apply mathematical constraints to viewport props\n * @param props\n */\n// eslint-disable-next-line complexity\nexport default function normalizeViewportProps(props: ViewportProps): ViewportProps {\n  const {width, height, pitch = 0} = props;\n  let {longitude, latitude, zoom, bearing = 0} = props;\n\n  // Normalize degrees\n  if (longitude < -180 || longitude > 180) {\n    longitude = mod(longitude + 180, 360) - 180;\n  }\n  if (bearing < -180 || bearing > 180) {\n    bearing = mod(bearing + 180, 360) - 180;\n  }\n\n  // Constrain zoom and shift center at low zoom levels\n  const minZoom = log2(height / TILE_SIZE);\n  if (zoom <= minZoom) {\n    zoom = minZoom;\n    latitude = 0;\n  } else {\n    // Eliminate white space above and below the map\n    const halfHeightPixels = height / 2 / Math.pow(2, zoom);\n    const minLatitude = worldToLngLat([0, halfHeightPixels])[1];\n    if (latitude < minLatitude) {\n      latitude = minLatitude;\n    } else {\n      const maxLatitude = worldToLngLat([0, TILE_SIZE - halfHeightPixels])[1];\n      if (latitude > maxLatitude) {\n        latitude = maxLatitude;\n      }\n    }\n  }\n\n  return {width, height, longitude, latitude, zoom, pitch, bearing};\n}\n","import {lerp} from './math-utils';\nimport {scaleToZoom, zoomToScale, lngLatToWorld, worldToLngLat} from './web-mercator-utils';\nimport * as vec2 from 'gl-matrix/vec2';\n\nimport type {ViewportProps} from './normalize-viewport-props';\n\nconst EPSILON = 0.01;\nconst VIEWPORT_TRANSITION_PROPS = ['longitude', 'latitude', 'zoom'] as const;\nconst DEFAULT_OPTS = {\n  curve: 1.414,\n  speed: 1.2\n  // screenSpeed and maxDuration are used only if specified\n};\n\nexport type FlytoTransitionOptions = {\n  curve?: number;\n  speed?: number;\n  screenSpeed?: number;\n  maxDuration?: number;\n};\n\n/**\n * mapbox-gl-js flyTo : https://www.mapbox.com/mapbox-gl-js/api/#map#flyto.\n * It implements “Smooth and efficient zooming and panning.” algorithm by\n * \"Jarke J. van Wijk and Wim A.A. Nuij\"\n */\nexport default function flyToViewport(\n  startProps: ViewportProps,\n  endProps: ViewportProps,\n  t: number,\n  options?: FlytoTransitionOptions\n): {\n  longitude: number;\n  latitude: number;\n  zoom: number;\n} {\n  // Equations from above paper are referred where needed.\n\n  const {startZoom, startCenterXY, uDelta, w0, u1, S, rho, rho2, r0} = getFlyToTransitionParams(\n    startProps,\n    endProps,\n    options\n  );\n\n  // If change in center is too small, do linear interpolaiton.\n  if (u1 < EPSILON) {\n    const viewport = {};\n    for (const key of VIEWPORT_TRANSITION_PROPS) {\n      const startValue = startProps[key];\n      const endValue = endProps[key];\n      viewport[key] = lerp(startValue, endValue, t);\n    }\n    // @ts-expect-error properties are populated dynamically\n    return viewport;\n  }\n\n  const s = t * S;\n\n  const w = Math.cosh(r0) / Math.cosh(r0 + rho * s);\n  const u = (w0 * ((Math.cosh(r0) * Math.tanh(r0 + rho * s) - Math.sinh(r0)) / rho2)) / u1;\n\n  const scaleIncrement = 1 / w; // Using w method for scaling.\n  const newZoom = startZoom + scaleToZoom(scaleIncrement);\n\n  const newCenterWorld = vec2.scale([], uDelta, u);\n  vec2.add(newCenterWorld, newCenterWorld, startCenterXY);\n\n  const newCenter = worldToLngLat(newCenterWorld);\n  return {\n    longitude: newCenter[0],\n    latitude: newCenter[1],\n    zoom: newZoom\n  };\n}\n\n// returns transition duration in milliseconds\nexport function getFlyToDuration(\n  startProps: ViewportProps,\n  endProps: ViewportProps,\n  options?: FlytoTransitionOptions\n): number {\n  const opts = {...DEFAULT_OPTS, ...options};\n  const {screenSpeed, speed, maxDuration} = opts;\n  const {S, rho} = getFlyToTransitionParams(startProps, endProps, opts);\n  const length = 1000 * S;\n  let duration: number;\n  if (Number.isFinite(screenSpeed)) {\n    duration = length / (screenSpeed / rho);\n  } else {\n    duration = length / speed;\n  }\n\n  return Number.isFinite(maxDuration) && duration > maxDuration ? 0 : duration;\n}\n\n// Private Methods\n\n// Calculate all parameters that are static for given startProps and endProps\nfunction getFlyToTransitionParams(\n  startProps: ViewportProps,\n  endProps: ViewportProps,\n  opts: FlytoTransitionOptions\n): {\n  startZoom: number;\n  startCenterXY: number[];\n  uDelta: number[];\n  w0: number;\n  u1: number;\n  S: number;\n  rho: number;\n  rho2: number;\n  r0: number;\n  r1: number;\n} {\n  opts = Object.assign({}, DEFAULT_OPTS, opts);\n  const rho = opts.curve;\n  const startZoom = startProps.zoom;\n  const startCenter = [startProps.longitude, startProps.latitude];\n  const startScale = zoomToScale(startZoom);\n  const endZoom = endProps.zoom;\n  const endCenter = [endProps.longitude, endProps.latitude];\n  const scale = zoomToScale(endZoom - startZoom);\n\n  const startCenterXY = lngLatToWorld(startCenter);\n  const endCenterXY = lngLatToWorld(endCenter);\n  const uDelta = vec2.sub([] as number[], endCenterXY, startCenterXY);\n\n  const w0 = Math.max(startProps.width, startProps.height);\n  const w1 = w0 / scale;\n  const u1 = vec2.length(uDelta) * startScale;\n  // u0 is treated as '0' in Eq (9).\n\n  // If u1 is too small, will generate invalid number\n  const _u1 = Math.max(u1, EPSILON);\n\n  // Implement Equation (9) from above algorithm.\n  const rho2 = rho * rho;\n  const b0 = (w1 * w1 - w0 * w0 + rho2 * rho2 * _u1 * _u1) / (2 * w0 * rho2 * _u1);\n  const b1 = (w1 * w1 - w0 * w0 - rho2 * rho2 * _u1 * _u1) / (2 * w1 * rho2 * _u1);\n  const r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0);\n  const r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n  const S = (r1 - r0) / rho;\n\n  return {startZoom, startCenterXY, uDelta, w0, u1, S, rho, rho2, r0, r1};\n}\n","'use strict';\n\nmodule.exports = {\n  API_ORIGIN: 'https://api.mapbox.com',\n  EVENT_PROGRESS_DOWNLOAD: 'downloadProgress',\n  EVENT_PROGRESS_UPLOAD: 'uploadProgress',\n  EVENT_ERROR: 'error',\n  EVENT_RESPONSE: 'response',\n  ERROR_HTTP: 'HttpError',\n  ERROR_REQUEST_ABORTED: 'RequestAbortedError'\n};\n","import MathArray from './math-array';\nimport {checkNumber} from '../../lib/validators';\nimport assert from '../../lib/assert';\n\nexport default class Vector extends MathArray {\n  get ELEMENTS() {\n    assert(false);\n    return 0;\n  }\n\n  // VIRTUAL METHODS\n  copy(vector) {\n    assert(false);\n    return this;\n  }\n\n  // ACCESSORS\n\n  get x() {\n    return this[0];\n  }\n  set x(value) {\n    this[0] = checkNumber(value);\n  }\n\n  get y() {\n    return this[1];\n  }\n  set y(value) {\n    this[1] = checkNumber(value);\n  }\n\n  // NOTE: `length` is a reserved word for Arrays, so we can't use `v.length()`\n  // Offer `len` and `magnitude`\n  len() {\n    return Math.sqrt(this.lengthSquared());\n  }\n\n  magnitude() {\n    return this.len();\n  }\n\n  lengthSquared() {\n    let length = 0;\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      length += this[i] * this[i];\n    }\n    return length;\n  }\n\n  magnitudeSquared() {\n    return this.lengthSquared();\n  }\n\n  distance(mathArray) {\n    return Math.sqrt(this.distanceSquared(mathArray));\n  }\n\n  distanceSquared(mathArray) {\n    let length = 0;\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      const dist = this[i] - mathArray[i];\n      length += dist * dist;\n    }\n    return checkNumber(length);\n  }\n\n  dot(mathArray) {\n    let product = 0;\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      product += this[i] * mathArray[i];\n    }\n    return checkNumber(product);\n  }\n\n  // MODIFIERS\n\n  normalize() {\n    const length = this.magnitude();\n    if (length !== 0) {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] /= length;\n      }\n    }\n    return this.check();\n  }\n\n  // negate() {\n  //   for (let i = 0; i < this.ELEMENTS; ++i) {\n  //     this[i] = -this[i];\n  //   }\n  //   return this.check();\n  // }\n\n  // inverse() {\n  //   for (let i = 0; i < this.ELEMENTS; ++i) {\n  //     this[i] = 1 / this[i];\n  //   }\n  //   return this.check();\n  // }\n\n  multiply(...vectors) {\n    for (const vector of vectors) {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] *= vector[i];\n      }\n    }\n    return this.check();\n  }\n\n  divide(...vectors) {\n    for (const vector of vectors) {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] /= vector[i];\n      }\n    }\n    return this.check();\n  }\n\n  // THREE.js compatibility\n  lengthSq() {\n    return this.lengthSquared();\n  }\n\n  distanceTo(vector) {\n    return this.distance(vector);\n  }\n\n  distanceToSquared(vector) {\n    return this.distanceSquared(vector);\n  }\n\n  getComponent(i) {\n    assert(i >= 0 && i < this.ELEMENTS, 'index is out of range');\n    return checkNumber(this[i]);\n  }\n\n  setComponent(i, value) {\n    assert(i >= 0 && i < this.ELEMENTS, 'index is out of range');\n    this[i] = value;\n    return this.check();\n  }\n\n  addVectors(a, b) {\n    return this.copy(a).add(b);\n  }\n\n  subVectors(a, b) {\n    return this.copy(a).subtract(b);\n  }\n\n  multiplyVectors(a, b) {\n    return this.copy(a).multiply(b);\n  }\n\n  addScaledVector(a, b) {\n    // @ts-ignore error TS2351: Cannot use 'new' with an expression whose type lacks a call or construct signature.\n    return this.add(new this.constructor(a).multiplyScalar(b));\n  }\n}\n","import MathArray from './math-array';\nimport {checkNumber} from '../../lib/validators';\nimport {config} from '../../lib/common';\nimport assert from '../../lib/assert';\n\nexport default class Matrix extends MathArray {\n  // Defined by derived class\n  get ELEMENTS() {\n    assert(false);\n    return 0;\n  }\n\n  get RANK() {\n    assert(false);\n    return 0;\n  }\n\n  // fromObject(object) {\n  //   const array = object.elements;\n  //   return this.fromRowMajor(array);\n  // }\n\n  // toObject(object) {\n  //   const array = object.elements;\n  //   this.toRowMajor(array);\n  //   return object;\n  // }\n\n  toString() {\n    let string = '[';\n    if (config.printRowMajor) {\n      string += 'row-major:';\n      for (let row = 0; row < this.RANK; ++row) {\n        for (let col = 0; col < this.RANK; ++col) {\n          string += ` ${this[col * this.RANK + row]}`;\n        }\n      }\n    } else {\n      string += 'column-major:';\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        string += ` ${this[i]}`;\n      }\n    }\n    string += ']';\n    return string;\n  }\n\n  getElementIndex(row, col) {\n    return col * this.RANK + row;\n  }\n\n  // By default assumes row major indices\n  getElement(row, col) {\n    return this[col * this.RANK + row];\n  }\n\n  // By default assumes row major indices\n  setElement(row, col, value) {\n    this[col * this.RANK + row] = checkNumber(value);\n    return this;\n  }\n\n  getColumn(columnIndex, result = new Array(this.RANK).fill(-0)) {\n    const firstIndex = columnIndex * this.RANK;\n    for (let i = 0; i < this.RANK; ++i) {\n      result[i] = this[firstIndex + i];\n    }\n    return result;\n  }\n\n  setColumn(columnIndex, columnVector) {\n    const firstIndex = columnIndex * this.RANK;\n    for (let i = 0; i < this.RANK; ++i) {\n      this[firstIndex + i] = columnVector[i];\n    }\n    return this;\n  }\n}\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {config} from './common';\n\nexport function validateVector(v, length) {\n  if (v.length !== length) {\n    return false;\n  }\n  // Could be arguments \"array\" (v.every not availasble)\n  for (let i = 0; i < v.length; ++i) {\n    if (!Number.isFinite(v[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function checkNumber(value) {\n  if (!Number.isFinite(value)) {\n    throw new Error(`Invalid number ${value}`);\n  }\n  return value;\n}\n\nexport function checkVector(v, length, callerName = '') {\n  if (config.debug && !validateVector(v, length)) {\n    throw new Error(`math.gl: ${callerName} some fields set to invalid numbers'`);\n  }\n  return v;\n}\n\nconst map = {};\n\nexport function deprecated(method, version) {\n  if (!map[method]) {\n    map[method] = true;\n    // eslint-disable-next-line\n    console.warn(\n      `${method} has been removed in version ${version}, see upgrade guide for more information`\n    );\n  }\n}\n","/* eslint-env browser */\n\nimport { RGBAColor } from '@deck.gl/core';\nimport { GeoJsonLayer, ScatterplotLayer, IconLayer, TextLayer } from '@deck.gl/layers';\n\nimport {\n  ViewMode,\n  ModifyMode,\n  TranslateMode,\n  ScaleMode,\n  RotateMode,\n  DuplicateMode,\n  SplitPolygonMode,\n  ExtrudeMode,\n  ElevationMode,\n  DrawPointMode,\n  DrawLineStringMode,\n  DrawPolygonMode,\n  DrawRectangleMode,\n  DrawRectangleFromCenterMode,\n  DrawSquareFromCenterMode,\n  DrawCircleFromCenterMode,\n  DrawCircleByDiameterMode,\n  DrawEllipseByBoundingBoxMode,\n  DrawRectangleUsingThreePointsMode,\n  DrawEllipseUsingThreePointsMode,\n  Draw90DegreePolygonMode,\n  DrawPolygonByDraggingMode,\n  SnappableMode,\n  TransformMode,\n  EditAction,\n  ClickEvent,\n  StartDraggingEvent,\n  StopDraggingEvent,\n  DraggingEvent,\n  PointerMoveEvent,\n  GeoJsonEditModeType,\n  FeatureCollection,\n} from '@nebula.gl/edit-modes';\n\nimport { PROJECTED_PIXEL_SIZE_MULTIPLIER } from '../constants';\n\nimport EditableLayer, { EditableLayerProps } from './editable-layer';\nimport EditablePathLayer from './editable-path-layer';\n\nconst DEFAULT_LINE_COLOR: RGBAColor = [0x0, 0x0, 0x0, 0x99];\nconst DEFAULT_FILL_COLOR: RGBAColor = [0x0, 0x0, 0x0, 0x90];\nconst DEFAULT_SELECTED_LINE_COLOR: RGBAColor = [0x0, 0x0, 0x0, 0xff];\nconst DEFAULT_SELECTED_FILL_COLOR: RGBAColor = [0x0, 0x0, 0x90, 0x90];\nconst DEFAULT_TENTATIVE_LINE_COLOR: RGBAColor = [0x90, 0x90, 0x90, 0xff];\nconst DEFAULT_TENTATIVE_FILL_COLOR: RGBAColor = [0x90, 0x90, 0x90, 0x90];\nconst DEFAULT_EDITING_EXISTING_POINT_COLOR: RGBAColor = [0xc0, 0x0, 0x0, 0xff];\nconst DEFAULT_EDITING_INTERMEDIATE_POINT_COLOR: RGBAColor = [0x0, 0x0, 0x0, 0x80];\nconst DEFAULT_EDITING_SNAP_POINT_COLOR: RGBAColor = [0x7c, 0x00, 0xc0, 0xff];\nconst DEFAULT_EDITING_POINT_OUTLINE_COLOR: RGBAColor = [0xff, 0xff, 0xff, 0xff];\nconst DEFAULT_EDITING_EXISTING_POINT_RADIUS = 5;\nconst DEFAULT_EDITING_INTERMEDIATE_POINT_RADIUS = 3;\nconst DEFAULT_EDITING_SNAP_POINT_RADIUS = 7;\nconst DEFAULT_TOOLTIP_FONT_SIZE = 32 * PROJECTED_PIXEL_SIZE_MULTIPLIER;\n\nconst DEFAULT_EDIT_MODE = DrawPolygonMode;\n\nfunction guideAccessor(accessor) {\n  if (!accessor || typeof accessor !== 'function') {\n    return accessor;\n  }\n  return (guideMaybeWrapped) => accessor(unwrapGuide(guideMaybeWrapped));\n}\n\n// The object handed to us from deck.gl is different depending on the version of deck.gl used, unwrap as necessary\nfunction unwrapGuide(guideMaybeWrapped) {\n  if (guideMaybeWrapped.__source) {\n    return guideMaybeWrapped.__source.object;\n  } else if (guideMaybeWrapped.sourceFeature) {\n    return guideMaybeWrapped.sourceFeature.feature;\n  }\n  // It is not wrapped, return as is\n  return guideMaybeWrapped;\n}\n\nfunction getEditHandleColor(handle) {\n  switch (handle.properties.editHandleType) {\n    case 'existing':\n      return DEFAULT_EDITING_EXISTING_POINT_COLOR;\n    case 'snap-source':\n      return DEFAULT_EDITING_SNAP_POINT_COLOR;\n    case 'intermediate':\n    default:\n      return DEFAULT_EDITING_INTERMEDIATE_POINT_COLOR;\n  }\n}\n\nfunction getEditHandleOutlineColor(handle) {\n  return DEFAULT_EDITING_POINT_OUTLINE_COLOR;\n}\n\nfunction getEditHandleRadius(handle) {\n  switch (handle.properties.editHandleType) {\n    case 'existing':\n      return DEFAULT_EDITING_EXISTING_POINT_RADIUS;\n    case 'snap':\n      return DEFAULT_EDITING_SNAP_POINT_RADIUS;\n    case 'intermediate':\n    default:\n      return DEFAULT_EDITING_INTERMEDIATE_POINT_RADIUS;\n  }\n}\n\nexport interface EditableGeojsonLayerProps<D> extends EditableLayerProps<D> {\n  mode?: any;\n  modeConfig?: any;\n  selectedFeatureIndexes?: number[];\n  onEdit?: (updatedData?, editType?: string, featureIndexes?: number[], editContext?) => void;\n\n  pickable?: boolean;\n  pickingRadius?: number;\n  pickingDepth?: number;\n  fp64?: boolean;\n  filled?: boolean;\n  stroked?: boolean;\n  lineWidthScale?: number;\n  lineWidthMinPixels?: number;\n  lineWidthMaxPixels?: number;\n  pickingLineWidthExtraPixels?: number;\n  lineWidthUnits?: string;\n  lineJointRounded?: boolean;\n  lineCapRounded?: boolean;\n  lineMiterLimit?: number;\n  pointRadiusScale?: number;\n  pointRadiusMinPixels?: number;\n  pointRadiusMaxPixels?: number;\n\n  getLineColor?: RGBAColor | ((feature, isSelected, mode) => RGBAColor);\n  getFillColor?: RGBAColor | ((feature, isSelected, mode) => RGBAColor);\n  getRadius?: number | ((f) => number);\n  getLineWidth?: number | ((f) => number);\n\n  getTentativeLineColor?: RGBAColor | ((feature, isSelected, mode) => RGBAColor);\n  getTentativeFillColor?: RGBAColor | ((feature, isSelected, mode) => RGBAColor);\n  getTentativeLineWidth?: number | ((f) => number);\n\n  editHandleType?: string;\n\n  editHandlePointRadiusScale?: number;\n  editHandlePointOutline?: boolean;\n  editHandlePointStrokeWidth?: number;\n  editHandlePointRadiusUnits?: string;\n  editHandlePointRadiusMinPixels?: number;\n  editHandlePointRadiusMaxPixels?: number;\n  getEditHandlePointColor?: RGBAColor | ((handle) => RGBAColor);\n  getEditHandlePointOutlineColor?: RGBAColor | ((handle) => RGBAColor);\n  getEditHandlePointRadius?: number | ((handle) => number);\n\n  // icon handles\n  editHandleIconAtlas?: any;\n  editHandleIconMapping?: any;\n  editHandleIconSizeScale?: number;\n  editHandleIconSizeUnits?: string;\n  getEditHandleIcon?: (handle) => string;\n  getEditHandleIconSize?: number;\n  getEditHandleIconColor?: RGBAColor | ((handle) => RGBAColor);\n  getEditHandleIconAngle?: number | ((handle) => number);\n\n  // misc\n  billboard?: boolean;\n}\n\nconst defaultProps: EditableGeojsonLayerProps<any> = {\n  mode: DEFAULT_EDIT_MODE,\n\n  // Edit and interaction events\n  onEdit: () => {},\n\n  pickable: true,\n  pickingRadius: 10,\n  pickingDepth: 5,\n  fp64: false,\n  filled: true,\n  stroked: true,\n  lineWidthScale: PROJECTED_PIXEL_SIZE_MULTIPLIER,\n  lineWidthMinPixels: 1,\n  lineWidthMaxPixels: Number.MAX_SAFE_INTEGER,\n  pickingLineWidthExtraPixels: 0,\n  lineWidthUnits: 'pixels',\n  lineJointRounded: false,\n  lineCapRounded: false,\n  lineMiterLimit: 4,\n  pointRadiusScale: 1,\n  pointRadiusMinPixels: 2,\n  pointRadiusMaxPixels: Number.MAX_SAFE_INTEGER,\n  getLineColor: (feature, isSelected, mode) =>\n    isSelected ? DEFAULT_SELECTED_LINE_COLOR : DEFAULT_LINE_COLOR,\n  getFillColor: (feature, isSelected, mode) =>\n    isSelected ? DEFAULT_SELECTED_FILL_COLOR : DEFAULT_FILL_COLOR,\n  getRadius: (f) =>\n    (f && f.properties && f.properties.radius) || (f && f.properties && f.properties.size) || 1,\n  getLineWidth: (f) => (f && f.properties && f.properties.lineWidth) || 3,\n\n  // Tentative feature rendering\n  getTentativeLineColor: (f) => DEFAULT_TENTATIVE_LINE_COLOR,\n  getTentativeFillColor: (f) => DEFAULT_TENTATIVE_FILL_COLOR,\n  getTentativeLineWidth: (f) => (f && f.properties && f.properties.lineWidth) || 3,\n\n  editHandleType: 'point',\n\n  // point handles\n  editHandlePointRadiusScale: 1,\n  editHandlePointOutline: true,\n  editHandlePointStrokeWidth: 2,\n  editHandlePointRadiusUnits: 'pixels',\n  editHandlePointRadiusMinPixels: 4,\n  editHandlePointRadiusMaxPixels: 8,\n  getEditHandlePointColor: getEditHandleColor,\n  getEditHandlePointOutlineColor: getEditHandleOutlineColor,\n  getEditHandlePointRadius: getEditHandleRadius,\n\n  // icon handles\n  editHandleIconAtlas: null,\n  editHandleIconMapping: null,\n  editHandleIconSizeScale: 1,\n  editHandleIconSizeUnits: 'pixels',\n  getEditHandleIcon: (handle) => handle.properties.editHandleType,\n  getEditHandleIconSize: 10,\n  getEditHandleIconColor: getEditHandleColor,\n  getEditHandleIconAngle: 0,\n\n  // misc\n  billboard: true,\n};\n\n// Mapping of mode name to mode class (for legacy purposes)\nconst modeNameMapping = {\n  view: ViewMode,\n\n  // Alter modes\n  modify: ModifyMode,\n  translate: new SnappableMode(new TranslateMode()),\n\n  transform: new SnappableMode(new TransformMode()),\n  scale: ScaleMode,\n  rotate: RotateMode,\n  duplicate: DuplicateMode,\n  split: SplitPolygonMode,\n  extrude: ExtrudeMode,\n  elevation: ElevationMode,\n\n  // Draw modes\n  drawPoint: DrawPointMode,\n  drawLineString: DrawLineStringMode,\n  drawPolygon: DrawPolygonMode,\n  drawRectangle: DrawRectangleMode,\n  drawRectangleFromCenter: DrawRectangleFromCenterMode,\n  drawSquareFromCenter: DrawSquareFromCenterMode,\n  drawCircleFromCenter: DrawCircleFromCenterMode,\n  drawCircleByBoundingBox: DrawCircleByDiameterMode,\n  drawEllipseByBoundingBox: DrawEllipseByBoundingBoxMode,\n  drawRectangleUsing3Points: DrawRectangleUsingThreePointsMode,\n  drawEllipseUsing3Points: DrawEllipseUsingThreePointsMode,\n  draw90DegreePolygon: Draw90DegreePolygonMode,\n  drawPolygonByDragging: DrawPolygonByDraggingMode,\n};\n\n// type State = {\n//   mode: GeoJsonEditMode,\n//   tentativeFeature: ?Feature,\n//   editHandles: any[],\n//   selectedFeatures: Feature[]\n// };\n\nexport default class EditableGeoJsonLayer extends EditableLayer<\n  any,\n  EditableGeojsonLayerProps<any>\n> {\n  static layerName = 'EditableGeoJsonLayer';\n  static defaultProps = defaultProps;\n\n  // setState: ($Shape<State>) => void;\n  renderLayers() {\n    const subLayerProps = this.getSubLayerProps({\n      id: 'geojson',\n\n      // Proxy most GeoJsonLayer props as-is\n      data: this.props.data,\n      fp64: this.props.fp64,\n      filled: this.props.filled,\n      stroked: this.props.stroked,\n      lineWidthScale: this.props.lineWidthScale,\n      lineWidthMinPixels: this.props.lineWidthMinPixels,\n      lineWidthMaxPixels: this.props.lineWidthMaxPixels,\n      lineWidthUnits: this.props.lineWidthUnits,\n      lineJointRounded: this.props.lineJointRounded,\n      lineCapRounded: this.props.lineCapRounded,\n      lineMiterLimit: this.props.lineMiterLimit,\n      pointRadiusScale: this.props.pointRadiusScale,\n      pointRadiusMinPixels: this.props.pointRadiusMinPixels,\n      pointRadiusMaxPixels: this.props.pointRadiusMaxPixels,\n      getLineColor: this.selectionAwareAccessor(this.props.getLineColor),\n      getFillColor: this.selectionAwareAccessor(this.props.getFillColor),\n      getPointRadius: this.selectionAwareAccessor(this.props.getRadius),\n      getLineWidth: this.selectionAwareAccessor(this.props.getLineWidth),\n\n      _subLayerProps: {\n        linestrings: {\n          billboard: this.props.billboard,\n          updateTriggers: {\n            // required to update dashed array attribute\n            all: [this.props.selectedFeatureIndexes, this.props.mode],\n          },\n        },\n        'polygons-stroke': {\n          billboard: this.props.billboard,\n          pickingLineWidthExtraPixels: this.props.pickingLineWidthExtraPixels,\n          type: EditablePathLayer,\n          updateTriggers: {\n            // required to update dashed array attribute\n            all: [this.props.selectedFeatureIndexes, this.props.mode],\n          },\n        },\n      },\n\n      updateTriggers: {\n        getLineColor: [this.props.selectedFeatureIndexes, this.props.mode],\n        getFillColor: [this.props.selectedFeatureIndexes, this.props.mode],\n        getPointRadius: [this.props.selectedFeatureIndexes, this.props.mode],\n        getLineWidth: [this.props.selectedFeatureIndexes, this.props.mode],\n      },\n    });\n\n    let layers: any = [new GeoJsonLayer(subLayerProps)];\n\n    layers = layers.concat(this.createGuidesLayers(), this.createTooltipsLayers());\n\n    return layers;\n  }\n\n  initializeState() {\n    super.initializeState();\n\n    this.setState({\n      selectedFeatures: [],\n      editHandles: [],\n    });\n  }\n\n  // TODO: is this the best way to properly update state from an outside event handler?\n  shouldUpdateState(opts: any) {\n    // console.log(\n    //   'shouldUpdateState',\n    //   opts.changeFlags.propsOrDataChanged,\n    //   opts.changeFlags.stateChanged\n    // );\n    return super.shouldUpdateState(opts) || opts.changeFlags.stateChanged;\n  }\n\n  updateState({\n    props,\n    oldProps,\n    changeFlags,\n    context,\n  }: {\n    props: EditableGeojsonLayerProps<any>;\n    oldProps: EditableGeojsonLayerProps<any>;\n    changeFlags: any;\n    context: any;\n    s;\n  }) {\n    super.updateState({ oldProps, props, changeFlags, context });\n\n    if (changeFlags.propsOrDataChanged) {\n      const modePropChanged = Object.keys(oldProps).length === 0 || props.mode !== oldProps.mode;\n      if (modePropChanged) {\n        let mode;\n        if (typeof props.mode === 'function') {\n          // They passed a constructor/class, so new it up\n          const ModeConstructor = props.mode;\n          mode = new ModeConstructor();\n        } else if (typeof props.mode === 'string') {\n          // Lookup the mode based on its name (for backwards compatibility)\n          mode = modeNameMapping[props.mode];\n          // eslint-disable-next-line no-console\n          console.warn(\n            \"Deprecated use of passing `mode` as a string. Pass the mode's class constructor instead.\"\n          );\n        } else {\n          // Should be an instance of EditMode in this case\n          mode = props.mode;\n        }\n\n        if (!mode) {\n          console.warn(`No mode configured for ${String(props.mode)}`); // eslint-disable-line no-console,no-undef\n          // Use default mode\n          mode = new DEFAULT_EDIT_MODE();\n        }\n\n        if (mode !== this.state.mode) {\n          this.setState({ mode, cursor: null });\n        }\n      }\n    }\n\n    let selectedFeatures = [];\n    if (Array.isArray(props.selectedFeatureIndexes)) {\n      // TODO: needs improved testing, i.e. checking for duplicates, NaNs, out of range numbers, ...\n      selectedFeatures = props.selectedFeatureIndexes.map((elem) => props.data.features[elem]);\n    }\n\n    this.setState({ selectedFeatures });\n  }\n\n  getModeProps(props: EditableGeojsonLayerProps<any>) {\n    return {\n      modeConfig: props.modeConfig,\n      data: props.data,\n      selectedIndexes: props.selectedFeatureIndexes,\n      lastPointerMoveEvent: this.state.lastPointerMoveEvent,\n      cursor: this.state.cursor,\n      onEdit: (editAction: EditAction<FeatureCollection>) => {\n        // Force a re-render\n        // This supports double-click where we need to ensure that there's a re-render between the two clicks\n        // even though the data wasn't changed, just the internal tentative feature.\n        this.setNeedsUpdate();\n        props.onEdit(editAction);\n      },\n      onUpdateCursor: (cursor: string | null | undefined) => {\n        this.setState({ cursor });\n      },\n    };\n  }\n\n  selectionAwareAccessor(accessor: any) {\n    if (typeof accessor !== 'function') {\n      return accessor;\n    }\n    return (feature: Record<string, any>) =>\n      accessor(feature, this.isFeatureSelected(feature), this.props.mode);\n  }\n\n  isFeatureSelected(feature: Record<string, any>) {\n    if (!this.props.data || !this.props.selectedFeatureIndexes) {\n      return false;\n    }\n    if (!this.props.selectedFeatureIndexes.length) {\n      return false;\n    }\n    const featureIndex = this.props.data.features.indexOf(feature);\n    return this.props.selectedFeatureIndexes.includes(featureIndex);\n  }\n\n  getPickingInfo({ info, sourceLayer }: Record<string, any>) {\n    if (sourceLayer.id.endsWith('guides')) {\n      // If user is picking an editing handle, add additional data to the info\n      info.isGuide = true;\n    }\n\n    return info;\n  }\n\n  _updateAutoHighlight(info) {\n    // Extra handling for guides\n    if (info?.sourceLayer) {\n      if (info.isGuide) {\n        for (const layer of info.sourceLayer.getSubLayers()) {\n          layer.updateAutoHighlight(info);\n        }\n      } else {\n        info.sourceLayer.updateAutoHighlight(info);\n      }\n    }\n  }\n\n  createGuidesLayers() {\n    const mode = this.getActiveMode();\n    const guides: FeatureCollection = mode.getGuides(this.getModeProps(this.props));\n\n    if (!guides || !guides.features.length) {\n      return [];\n    }\n\n    const subLayerProps = {\n      linestrings: {\n        billboard: this.props.billboard,\n        autoHighlight: false,\n      },\n      'polygons-fill': {\n        autoHighlight: false,\n      },\n      'polygons-stroke': {\n        billboard: this.props.billboard,\n      },\n    };\n\n    if (this.props.editHandleType === 'icon') {\n      subLayerProps['points-icon'] = {\n        type: IconLayer,\n        iconAtlas: this.props.editHandleIconAtlas,\n        iconMapping: this.props.editHandleIconMapping,\n        sizeUnits: this.props.editHandleIconSizeUnits,\n        sizeScale: this.props.editHandleIconSizeScale,\n        getIcon: guideAccessor(this.props.getEditHandleIcon),\n        getSize: guideAccessor(this.props.getEditHandleIconSize),\n        getColor: guideAccessor(this.props.getEditHandleIconColor),\n        getAngle: guideAccessor(this.props.getEditHandleIconAngle),\n      };\n    } else {\n      subLayerProps['points-circle'] = {\n        type: ScatterplotLayer,\n        radiusScale: this.props.editHandlePointRadiusScale,\n        stroked: this.props.editHandlePointOutline,\n        getLineWidth: this.props.editHandlePointStrokeWidth,\n        radiusUnits: this.props.editHandlePointRadiusUnits,\n        radiusMinPixels: this.props.editHandlePointRadiusMinPixels,\n        radiusMaxPixels: this.props.editHandlePointRadiusMaxPixels,\n        getRadius: guideAccessor(this.props.getEditHandlePointRadius),\n        getFillColor: guideAccessor(this.props.getEditHandlePointColor),\n        getLineColor: guideAccessor(this.props.getEditHandlePointOutlineColor),\n      };\n    }\n\n    const layer = new GeoJsonLayer(\n      this.getSubLayerProps({\n        id: `guides`,\n        data: guides,\n        fp64: this.props.fp64,\n        _subLayerProps: subLayerProps,\n        lineWidthScale: this.props.lineWidthScale,\n        lineWidthMinPixels: this.props.lineWidthMinPixels,\n        lineWidthMaxPixels: this.props.lineWidthMaxPixels,\n        lineWidthUnits: this.props.lineWidthUnits,\n        lineJointRounded: this.props.lineJointRounded,\n        lineCapRounded: this.props.lineCapRounded,\n        lineMiterLimit: this.props.lineMiterLimit,\n        getLineColor: guideAccessor(this.props.getTentativeLineColor),\n        getLineWidth: guideAccessor(this.props.getTentativeLineWidth),\n        getFillColor: guideAccessor(this.props.getTentativeFillColor),\n        pointType: this.props.editHandleType === 'icon' ? 'icon' : 'circle',\n        iconAtlas: this.props.editHandleIconAtlas,\n      })\n    );\n\n    return [layer];\n  }\n\n  createTooltipsLayers() {\n    const mode = this.getActiveMode();\n    const tooltips = mode.getTooltips(this.getModeProps(this.props));\n\n    const layer = new TextLayer({\n      getSize: DEFAULT_TOOLTIP_FONT_SIZE,\n      ...this.getSubLayerProps({\n        id: `tooltips`,\n        data: tooltips,\n      }),\n    });\n\n    return [layer];\n  }\n\n  onLayerClick(event: ClickEvent) {\n    this.getActiveMode().handleClick(event, this.getModeProps(this.props));\n  }\n\n  onLayerKeyUp(event: KeyboardEvent) {\n    this.getActiveMode().handleKeyUp(event, this.getModeProps(this.props));\n  }\n\n  onStartDragging(event: StartDraggingEvent) {\n    this.getActiveMode().handleStartDragging(event, this.getModeProps(this.props));\n  }\n\n  onDragging(event: DraggingEvent) {\n    this.getActiveMode().handleDragging(event, this.getModeProps(this.props));\n  }\n\n  onStopDragging(event: StopDraggingEvent) {\n    this.getActiveMode().handleStopDragging(event, this.getModeProps(this.props));\n  }\n\n  onPointerMove(event: PointerMoveEvent) {\n    this.setState({ lastPointerMoveEvent: event });\n    this.getActiveMode().handlePointerMove(event, this.getModeProps(this.props));\n  }\n\n  getCursor({ isDragging }: { isDragging: boolean }) {\n    if (this.state === null) {\n      // Layer in 'Awaiting state'\n      return null;\n    }\n\n    let { cursor } = this.state;\n    if (!cursor) {\n      // default cursor\n      cursor = isDragging ? 'grabbing' : 'grab';\n    }\n    return cursor;\n  }\n\n  getActiveMode(): GeoJsonEditModeType {\n    return this.state.mode;\n  }\n}\n","import { point, lineString as toLineString } from '@turf/helpers';\nimport {\n  recursivelyTraverseNestedArrays,\n  nearestPointOnProjectedLine,\n  nearestPointOnLine,\n  getEditHandlesForGeometry,\n  getPickedEditHandles,\n  getPickedEditHandle,\n  getPickedExistingEditHandle,\n  getPickedIntermediateEditHandle,\n  updateRectanglePosition,\n  NearestPointType,\n} from '../utils';\nimport { LineString, Point, Polygon, FeatureCollection, FeatureOf } from '../geojson-types';\nimport {\n  ModeProps,\n  ClickEvent,\n  PointerMoveEvent,\n  StartDraggingEvent,\n  StopDraggingEvent,\n  DraggingEvent,\n  Viewport,\n  GuideFeatureCollection,\n  EditHandleFeature,\n} from '../types';\nimport { GeoJsonEditMode } from './geojson-edit-mode';\nimport { ImmutableFeatureCollection } from './immutable-feature-collection';\n\nexport class ModifyMode extends GeoJsonEditMode {\n  getGuides(props: ModeProps<FeatureCollection>): GuideFeatureCollection {\n    const handles = [];\n\n    const { data, lastPointerMoveEvent } = props;\n    const { features } = data;\n    const picks = lastPointerMoveEvent && lastPointerMoveEvent.picks;\n    const mapCoords = lastPointerMoveEvent && lastPointerMoveEvent.mapCoords;\n\n    for (const index of props.selectedIndexes) {\n      if (index < features.length) {\n        const { geometry } = features[index];\n        handles.push(...getEditHandlesForGeometry(geometry, index));\n      } else {\n        console.warn(`selectedFeatureIndexes out of range ${index}`); // eslint-disable-line no-console,no-undef\n      }\n    }\n\n    // intermediate edit handle\n    if (picks && picks.length && mapCoords) {\n      const existingEditHandle = getPickedExistingEditHandle(picks);\n      // don't show intermediate point when too close to an existing edit handle\n      const featureAsPick = !existingEditHandle && picks.find((pick) => !pick.isGuide);\n\n      // is the feature in the pick selected\n      if (\n        featureAsPick &&\n        !featureAsPick.object.geometry.type.includes('Point') &&\n        !(\n          props.modeConfig?.lockRectangles && featureAsPick.object.properties.shape === 'Rectangle'\n        ) &&\n        props.selectedIndexes.includes(featureAsPick.index)\n      ) {\n        let intermediatePoint: NearestPointType | null | undefined = null;\n        let positionIndexPrefix = [];\n        const referencePoint = point(mapCoords);\n        // process all lines of the (single) feature\n        recursivelyTraverseNestedArrays(\n          featureAsPick.object.geometry.coordinates,\n          [],\n          (lineString, prefix) => {\n            const lineStringFeature = toLineString(lineString);\n            const candidateIntermediatePoint = this.getNearestPoint(\n              // @ts-ignore\n              lineStringFeature,\n              referencePoint,\n              props.modeConfig && props.modeConfig.viewport\n            );\n            if (\n              !intermediatePoint ||\n              candidateIntermediatePoint.properties.dist < intermediatePoint.properties.dist\n            ) {\n              intermediatePoint = candidateIntermediatePoint;\n              positionIndexPrefix = prefix;\n            }\n          }\n        );\n        // tack on the lone intermediate point to the set of handles\n        if (intermediatePoint) {\n          const {\n            geometry: { coordinates: position },\n            properties: { index },\n          } = intermediatePoint;\n          handles.push({\n            type: 'Feature',\n            properties: {\n              guideType: 'editHandle',\n              editHandleType: 'intermediate',\n              featureIndex: featureAsPick.index,\n              positionIndexes: [...positionIndexPrefix, index + 1],\n            },\n            geometry: {\n              type: 'Point',\n              coordinates: position,\n            },\n          });\n        }\n      }\n    }\n\n    return {\n      type: 'FeatureCollection',\n      features: handles,\n    };\n  }\n\n  // turf.js does not support elevation for nearestPointOnLine\n  getNearestPoint(\n    line: FeatureOf<LineString>,\n    inPoint: FeatureOf<Point>,\n    viewport: Viewport | null | undefined\n  ): NearestPointType {\n    const { coordinates } = line.geometry;\n    if (coordinates.some((coord) => coord.length > 2)) {\n      if (viewport) {\n        // This line has elevation, we need to use alternative algorithm\n        return nearestPointOnProjectedLine(line, inPoint, viewport);\n      }\n      // eslint-disable-next-line no-console,no-undef\n      console.log(\n        'Editing 3D point but modeConfig.viewport not provided. Falling back to 2D logic.'\n      );\n    }\n    return nearestPointOnLine(line, inPoint, viewport);\n  }\n\n  handleClick(event: ClickEvent, props: ModeProps<FeatureCollection>) {\n    const pickedExistingHandle = getPickedExistingEditHandle(event.picks);\n    const pickedIntermediateHandle = getPickedIntermediateEditHandle(event.picks);\n\n    if (pickedExistingHandle) {\n      const { featureIndex, positionIndexes } = pickedExistingHandle.properties;\n\n      let updatedData;\n      try {\n        updatedData = new ImmutableFeatureCollection(props.data)\n          .removePosition(featureIndex, positionIndexes)\n          .getObject();\n      } catch (ignored) {\n        // This happens if user attempts to remove the last point\n      }\n\n      if (updatedData) {\n        props.onEdit({\n          updatedData,\n          editType: 'removePosition',\n          editContext: {\n            featureIndexes: [featureIndex],\n            positionIndexes,\n            position: pickedExistingHandle.geometry.coordinates,\n          },\n        });\n      }\n    } else if (pickedIntermediateHandle) {\n      const { featureIndex, positionIndexes } = pickedIntermediateHandle.properties;\n\n      const feature = props.data.features[featureIndex];\n      const canAddPosition = !(\n        props.modeConfig?.lockRectangles && feature?.properties.shape === 'Rectangle'\n      );\n\n      if (canAddPosition) {\n        const updatedData = new ImmutableFeatureCollection(props.data)\n          .addPosition(featureIndex, positionIndexes, pickedIntermediateHandle.geometry.coordinates)\n          .getObject();\n\n        if (updatedData) {\n          props.onEdit({\n            updatedData,\n            editType: 'addPosition',\n            editContext: {\n              featureIndexes: [featureIndex],\n              positionIndexes,\n              position: pickedIntermediateHandle.geometry.coordinates,\n            },\n          });\n        }\n      }\n    }\n  }\n\n  handleDragging(event: DraggingEvent, props: ModeProps<FeatureCollection>): void {\n    const editHandle = getPickedEditHandle(event.pointerDownPicks);\n\n    if (editHandle) {\n      // Cancel map panning if pointer went down on an edit handle\n      event.cancelPan();\n\n      this._dragEditHandle('movePosition', props, editHandle, event);\n    }\n  }\n\n  _dragEditHandle(\n    editType: string,\n    props: ModeProps<FeatureCollection>,\n    editHandle: EditHandleFeature,\n    event: StopDraggingEvent | DraggingEvent\n  ) {\n    const editHandleProperties = editHandle.properties;\n    const editedFeature = props.data.features[editHandleProperties.featureIndex];\n\n    let updatedData;\n    if (props.modeConfig?.lockRectangles && editedFeature.properties.shape === 'Rectangle') {\n      const coordinates = updateRectanglePosition(\n        editedFeature as FeatureOf<Polygon>,\n        editHandleProperties.positionIndexes[1],\n        event.mapCoords\n      );\n\n      updatedData = new ImmutableFeatureCollection(props.data)\n        .replaceGeometry(editHandleProperties.featureIndex, { coordinates, type: 'Polygon' })\n        .getObject();\n    } else {\n      updatedData = new ImmutableFeatureCollection(props.data)\n        .replacePosition(\n          editHandleProperties.featureIndex,\n          editHandleProperties.positionIndexes,\n          event.mapCoords\n        )\n        .getObject();\n    }\n\n    props.onEdit({\n      updatedData,\n      editType,\n      editContext: {\n        featureIndexes: [editHandleProperties.featureIndex],\n        positionIndexes: editHandleProperties.positionIndexes,\n        position: event.mapCoords,\n      },\n    });\n  }\n\n  handlePointerMove(event: PointerMoveEvent, props: ModeProps<FeatureCollection>): void {\n    const cursor = this.getCursor(event);\n    props.onUpdateCursor(cursor);\n  }\n\n  handleStartDragging(event: StartDraggingEvent, props: ModeProps<FeatureCollection>) {\n    const selectedFeatureIndexes = props.selectedIndexes;\n\n    const editHandle = getPickedIntermediateEditHandle(event.picks);\n    if (selectedFeatureIndexes.length && editHandle) {\n      const editHandleProperties = editHandle.properties;\n\n      const updatedData = new ImmutableFeatureCollection(props.data)\n        .addPosition(\n          editHandleProperties.featureIndex,\n          editHandleProperties.positionIndexes,\n          event.mapCoords\n        )\n        .getObject();\n\n      props.onEdit({\n        updatedData,\n        editType: 'addPosition',\n        editContext: {\n          featureIndexes: [editHandleProperties.featureIndex],\n          positionIndexes: editHandleProperties.positionIndexes,\n          position: event.mapCoords,\n        },\n      });\n    }\n  }\n\n  handleStopDragging(event: StopDraggingEvent, props: ModeProps<FeatureCollection>) {\n    const selectedFeatureIndexes = props.selectedIndexes;\n    const editHandle = getPickedEditHandle(event.picks);\n    if (selectedFeatureIndexes.length && editHandle) {\n      this._dragEditHandle('finishMovePosition', props, editHandle, event);\n    }\n  }\n\n  getCursor(event: PointerMoveEvent): string | null | undefined {\n    const picks = (event && event.picks) || [];\n\n    const handlesPicked = getPickedEditHandles(picks);\n    if (handlesPicked.length) {\n      return 'cell';\n    }\n    return null;\n  }\n}\n","import turfBearing from '@turf/bearing';\nimport turfDistance from '@turf/distance';\nimport turfTransformTranslate from '@turf/transform-translate';\nimport { point } from '@turf/helpers';\nimport WebMercatorViewport from 'viewport-mercator-project';\nimport { FeatureCollection, Position } from '../geojson-types';\nimport {\n  PointerMoveEvent,\n  StartDraggingEvent,\n  StopDraggingEvent,\n  DraggingEvent,\n  ModeProps,\n} from '../types';\nimport { mapCoords } from '../utils';\nimport { GeoJsonEditMode, GeoJsonEditAction } from './geojson-edit-mode';\nimport { ImmutableFeatureCollection } from './immutable-feature-collection';\n\nexport class TranslateMode extends GeoJsonEditMode {\n  _geometryBeforeTranslate: FeatureCollection | null | undefined;\n  _isTranslatable: boolean;\n\n  handleDragging(event: DraggingEvent, props: ModeProps<FeatureCollection>) {\n    if (!this._isTranslatable) {\n      // Nothing to do\n      return;\n    }\n\n    if (this._geometryBeforeTranslate) {\n      // Translate the geometry\n      const editAction = this.getTranslateAction(\n        event.pointerDownMapCoords,\n        event.mapCoords,\n        'translating',\n        props\n      );\n\n      if (editAction) {\n        props.onEdit(editAction);\n      }\n    }\n\n    // cancel map panning\n    event.cancelPan();\n  }\n\n  handlePointerMove(event: PointerMoveEvent, props: ModeProps<FeatureCollection>) {\n    this._isTranslatable = this.isSelectionPicked(event.pointerDownPicks || event.picks, props);\n\n    this.updateCursor(props);\n  }\n\n  handleStartDragging(event: StartDraggingEvent, props: ModeProps<FeatureCollection>) {\n    if (!this._isTranslatable) {\n      return;\n    }\n\n    this._geometryBeforeTranslate = this.getSelectedFeaturesAsFeatureCollection(props);\n  }\n\n  handleStopDragging(event: StopDraggingEvent, props: ModeProps<FeatureCollection>) {\n    if (this._geometryBeforeTranslate) {\n      // Translate the geometry\n      const editAction = this.getTranslateAction(\n        event.pointerDownMapCoords,\n        event.mapCoords,\n        'translated',\n        props\n      );\n\n      if (editAction) {\n        props.onEdit(editAction);\n      }\n\n      this._geometryBeforeTranslate = null;\n    }\n  }\n\n  updateCursor(props: ModeProps<FeatureCollection>) {\n    if (this._isTranslatable) {\n      props.onUpdateCursor('move');\n    } else {\n      props.onUpdateCursor(null);\n    }\n  }\n\n  getTranslateAction(\n    startDragPoint: Position,\n    currentPoint: Position,\n    editType: string,\n    props: ModeProps<FeatureCollection>\n  ): GeoJsonEditAction | null | undefined {\n    if (!this._geometryBeforeTranslate) {\n      return null;\n    }\n\n    let updatedData = new ImmutableFeatureCollection(props.data);\n    const selectedIndexes = props.selectedIndexes;\n\n    const { viewport: viewportDesc, screenSpace } = props.modeConfig || {};\n\n    if (viewportDesc && screenSpace) {\n      const viewport = viewportDesc.project ? viewportDesc : new WebMercatorViewport(viewportDesc);\n\n      const from = viewport.project(startDragPoint);\n      const to = viewport.project(currentPoint);\n      const dx = to[0] - from[0];\n      const dy = to[1] - from[1];\n\n      for (let i = 0; i < selectedIndexes.length; i++) {\n        const selectedIndex = selectedIndexes[i];\n        const feature = this._geometryBeforeTranslate.features[i];\n\n        let coordinates = feature.geometry.coordinates;\n        if (coordinates) {\n          coordinates = mapCoords(coordinates, (coord) => {\n            const pixels = viewport.project(coord);\n            if (pixels) {\n              pixels[0] += dx;\n              pixels[1] += dy;\n              return viewport.unproject(pixels);\n            }\n            return null;\n          });\n\n          // @ts-ignore\n          updatedData = updatedData.replaceGeometry(selectedIndex, {\n            type: feature.geometry.type,\n            coordinates,\n          });\n        }\n      }\n    } else {\n      const p1 = point(startDragPoint);\n      const p2 = point(currentPoint);\n\n      const distanceMoved = turfDistance(p1, p2);\n      const direction = turfBearing(p1, p2);\n\n      const movedFeatures = turfTransformTranslate(\n        // @ts-ignore\n        this._geometryBeforeTranslate,\n        distanceMoved,\n        direction\n      );\n\n      for (let i = 0; i < selectedIndexes.length; i++) {\n        const selectedIndex = selectedIndexes[i];\n        const movedFeature = movedFeatures.features[i];\n        updatedData = updatedData.replaceGeometry(selectedIndex, movedFeature.geometry);\n      }\n    }\n\n    return {\n      updatedData: updatedData.getObject(),\n      editType,\n      editContext: {\n        featureIndexes: selectedIndexes,\n      },\n    };\n  }\n}\n","import {\n  ClickEvent,\n  PointerMoveEvent,\n  ModeProps,\n  GuideFeatureCollection,\n  TentativeFeature,\n} from '../types';\nimport { Polygon, FeatureCollection } from '../geojson-types';\nimport { getPickedEditHandle } from '../utils';\nimport { GeoJsonEditMode } from './geojson-edit-mode';\n\nexport class DrawPolygonMode extends GeoJsonEditMode {\n  createTentativeFeature(props: ModeProps<FeatureCollection>): TentativeFeature {\n    const { lastPointerMoveEvent } = props;\n    const clickSequence = this.getClickSequence();\n\n    const lastCoords = lastPointerMoveEvent ? [lastPointerMoveEvent.mapCoords] : [];\n\n    let tentativeFeature;\n    if (clickSequence.length === 1 || clickSequence.length === 2) {\n      tentativeFeature = {\n        type: 'Feature',\n        properties: {\n          guideType: 'tentative',\n        },\n        geometry: {\n          type: 'LineString',\n          coordinates: [...clickSequence, ...lastCoords],\n        },\n      };\n    } else if (clickSequence.length > 2) {\n      tentativeFeature = {\n        type: 'Feature',\n        properties: {\n          guideType: 'tentative',\n        },\n        geometry: {\n          type: 'Polygon',\n          coordinates: [[...clickSequence, ...lastCoords, clickSequence[0]]],\n        },\n      };\n    }\n\n    return tentativeFeature;\n  }\n\n  getGuides(props: ModeProps<FeatureCollection>): GuideFeatureCollection {\n    const clickSequence = this.getClickSequence();\n\n    const guides = {\n      type: 'FeatureCollection',\n      features: [],\n    };\n\n    const tentativeFeature = this.createTentativeFeature(props);\n    if (tentativeFeature) {\n      guides.features.push(tentativeFeature);\n    }\n\n    const editHandles = clickSequence.map((clickedCoord, index) => ({\n      type: 'Feature',\n      properties: {\n        guideType: 'editHandle',\n        editHandleType: 'existing',\n        featureIndex: -1,\n        positionIndexes: [index],\n      },\n      geometry: {\n        type: 'Point',\n        coordinates: clickedCoord,\n      },\n    }));\n\n    guides.features.push(...editHandles);\n    // @ts-ignore\n    return guides;\n  }\n\n  handleClick(event: ClickEvent, props: ModeProps<FeatureCollection>) {\n    const { picks } = event;\n    const clickedEditHandle = getPickedEditHandle(picks);\n\n    let positionAdded = false;\n    if (!clickedEditHandle) {\n      // Don't add another point right next to an existing one\n      this.addClickSequence(event);\n      positionAdded = true;\n    }\n    const clickSequence = this.getClickSequence();\n\n    if (\n      clickSequence.length > 2 &&\n      clickedEditHandle &&\n      Array.isArray(clickedEditHandle.properties.positionIndexes) &&\n      (clickedEditHandle.properties.positionIndexes[0] === 0 ||\n        clickedEditHandle.properties.positionIndexes[0] === clickSequence.length - 1)\n    ) {\n      // They clicked the first or last point (or double-clicked), so complete the polygon\n\n      // Remove the hovered position\n      const polygonToAdd: Polygon = {\n        type: 'Polygon',\n        coordinates: [[...clickSequence, clickSequence[0]]],\n      };\n\n      this.resetClickSequence();\n\n      const editAction = this.getAddFeatureOrBooleanPolygonAction(polygonToAdd, props);\n      if (editAction) {\n        props.onEdit(editAction);\n      }\n    } else if (positionAdded) {\n      // new tentative point\n      props.onEdit({\n        // data is the same\n        updatedData: props.data,\n        editType: 'addTentativePosition',\n        editContext: {\n          position: event.mapCoords,\n        },\n      });\n    }\n  }\n  handleKeyUp(event: KeyboardEvent, props: ModeProps<FeatureCollection>) {\n    if (event.key === 'Enter') {\n      const clickSequence = this.getClickSequence();\n      if (clickSequence.length > 2) {\n        const polygonToAdd: Polygon = {\n          type: 'Polygon',\n          coordinates: [[...clickSequence, clickSequence[0]]],\n        };\n        this.resetClickSequence();\n\n        const editAction = this.getAddFeatureOrBooleanPolygonAction(polygonToAdd, props);\n        if (editAction) {\n          props.onEdit(editAction);\n        }\n      }\n    }\n  }\n  handlePointerMove(event: PointerMoveEvent, props: ModeProps<FeatureCollection>) {\n    props.onUpdateCursor('cell');\n    super.handlePointerMove(event, props);\n  }\n}\n","/**\n * A multiplier for screen-space width/scale for Arc, Line, Icon and Text layers.\n * Required in order to maintain the same appearance after upgrading to deck.gl v8.5.\n * https://github.com/visgl/deck.gl/blob/master/docs/upgrade-guide.md\n */\nexport const PROJECTED_PIXEL_SIZE_MULTIPLIER = 2 / 3;\n\n/**\n * Unit literal to shader unit number conversion.\n */\nexport const UNIT = {\n  common: 0,\n  meters: 1,\n  pixels: 2,\n};\n","'use strict';\n\nvar xtend = require('xtend');\nvar v = require('./service-helpers/validator');\nvar pick = require('./service-helpers/pick');\nvar stringifyBooleans = require('./service-helpers/stringify-booleans');\nvar createServiceFactory = require('./service-helpers/create-service-factory');\n\n/**\n * Geocoding API service.\n *\n * Learn more about this service and its responses in\n * [the HTTP service documentation](https://docs.mapbox.com/api/search/#geocoding).\n */\nvar Geocoding = {};\n\nvar featureTypes = [\n  'country',\n  'region',\n  'postcode',\n  'district',\n  'place',\n  'locality',\n  'neighborhood',\n  'address',\n  'poi',\n  'poi.landmark'\n];\n\n/**\n * Search for a place.\n *\n * See the [public documentation](https://docs.mapbox.com/api/search/#forward-geocoding).\n *\n * @param {Object} config\n * @param {string} config.query - A place name.\n * @param {'mapbox.places'|'mapbox.places-permanent'} [config.mode=\"mapbox.places\"] - Either `mapbox.places` for ephemeral geocoding, or `mapbox.places-permanent` for storing results and batch geocoding.\n * @param {Array<string>} [config.countries] - Limits results to the specified countries.\n *   Each item in the array should be an [ISO 3166 alpha 2 country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).\n * @param {Coordinates|'ip'} [config.proximity] - Bias local results based on a provided coordinate location or a user's IP address.\n * @param {Array<'country'|'region'|'postcode'|'district'|'place'|'locality'|'neighborhood'|'address'|'poi'|'poi.landmark'>} [config.types] - Filter results by feature types.\n * @param {boolean} [config.autocomplete=true] - Return autocomplete results or not.\n * @param {BoundingBox} [config.bbox] - Limit results to a bounding box.\n * @param {number} [config.limit=5] - Limit the number of results returned.\n * @param {Array<string>} [config.language] - Specify the language to use for response text and, for forward geocoding, query result weighting.\n *  Options are [IETF language tags](https://en.wikipedia.org/wiki/IETF_language_tag) comprised of a mandatory\n *  [ISO 639-1 language code](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) and optionally one or more IETF subtags for country or script.\n * @param {boolean} [config.routing=false] - Specify whether to request additional metadata about the recommended navigation destination. Only applicable for address features.\n * @param {boolean} [config.fuzzyMatch=true] - Specify whether the Geocoding API should attempt approximate, as well as exact, matching.\n * @param {String} [config.worldview=\"us\"] - Filter results to geographic features whose characteristics are defined differently by audiences belonging to various regional, cultural, or political groups.\n * @return {MapiRequest}\n *\n * @example\n * geocodingClient.forwardGeocode({\n *   query: 'Paris, France',\n *   limit: 2\n * })\n *   .send()\n *   .then(response => {\n *     const match = response.body;\n *   });\n *\n * @example\n * // geocoding with proximity\n * geocodingClient.forwardGeocode({\n *   query: 'Paris, France',\n *   proximity: [-95.4431142, 33.6875431]\n * })\n *   .send()\n *   .then(response => {\n *     const match = response.body;\n *   });\n *\n * // geocoding with countries\n * geocodingClient.forwardGeocode({\n *   query: 'Paris, France',\n *   countries: ['fr']\n * })\n *   .send()\n *   .then(response => {\n *     const match = response.body;\n *   });\n *\n * // geocoding with bounding box\n * geocodingClient.forwardGeocode({\n *   query: 'Paris, France',\n *   bbox: [2.14, 48.72, 2.55, 48.96]\n * })\n *   .send()\n *   .then(response => {\n *     const match = response.body;\n *   });\n */\nGeocoding.forwardGeocode = function(config) {\n  v.assertShape({\n    query: v.required(v.string),\n    mode: v.oneOf('mapbox.places', 'mapbox.places-permanent'),\n    countries: v.arrayOf(v.string),\n    proximity: v.oneOf(v.coordinates, 'ip'),\n    types: v.arrayOf(v.oneOf(featureTypes)),\n    autocomplete: v.boolean,\n    bbox: v.arrayOf(v.number),\n    limit: v.number,\n    language: v.arrayOf(v.string),\n    routing: v.boolean,\n    fuzzyMatch: v.boolean,\n    worldview: v.string\n  })(config);\n\n  config.mode = config.mode || 'mapbox.places';\n\n  var query = stringifyBooleans(\n    xtend(\n      { country: config.countries },\n      pick(config, [\n        'proximity',\n        'types',\n        'autocomplete',\n        'bbox',\n        'limit',\n        'language',\n        'routing',\n        'fuzzyMatch',\n        'worldview'\n      ])\n    )\n  );\n\n  return this.client.createRequest({\n    method: 'GET',\n    path: '/geocoding/v5/:mode/:query.json',\n    params: pick(config, ['mode', 'query']),\n    query: query\n  });\n};\n\n/**\n * Search for places near coordinates.\n *\n * See the [public documentation](https://docs.mapbox.com/api/search/#reverse-geocoding).\n *\n * @param {Object} config\n * @param {Coordinates} config.query - Coordinates at which features will be searched.\n * @param {'mapbox.places'|'mapbox.places-permanent'} [config.mode=\"mapbox.places\"] - Either `mapbox.places` for ephemeral geocoding, or `mapbox.places-permanent` for storing results and batch geocoding.\n * @param {Array<string>} [config.countries] - Limits results to the specified countries.\n *   Each item in the array should be an [ISO 3166 alpha 2 country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).\n * @param {Array<'country'|'region'|'postcode'|'district'|'place'|'locality'|'neighborhood'|'address'|'poi'|'poi.landmark'>} [config.types] - Filter results by feature types.\n * @param {BoundingBox} [config.bbox] - Limit results to a bounding box.\n * @param {number} [config.limit=1] - Limit the number of results returned. If using this option, you must provide a single item for `types`.\n * @param {Array<string>} [config.language] - Specify the language to use for response text and, for forward geocoding, query result weighting.\n *  Options are [IETF language tags](https://en.wikipedia.org/wiki/IETF_language_tag) comprised of a mandatory\n *  [ISO 639-1 language code](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) and optionally one or more IETF subtags for country or script.\n * @param {'distance'|'score'} [config.reverseMode='distance'] - Set the factors that are used to sort nearby results.\n * @param {boolean} [config.routing=false] - Specify whether to request additional metadata about the recommended navigation destination. Only applicable for address features.\n * @param {String} [config.worldview=\"us\"] - Filter results to geographic features whose characteristics are defined differently by audiences belonging to various regional, cultural, or political groups.\n * @return {MapiRequest}\n *\n * @example\n * geocodingClient.reverseGeocode({\n *   query: [-95.4431142, 33.6875431]\n * })\n *   .send()\n *   .then(response => {\n *     // GeoJSON document with geocoding matches\n *     const match = response.body;\n *   });\n */\nGeocoding.reverseGeocode = function(config) {\n  v.assertShape({\n    query: v.required(v.coordinates),\n    mode: v.oneOf('mapbox.places', 'mapbox.places-permanent'),\n    countries: v.arrayOf(v.string),\n    types: v.arrayOf(v.oneOf(featureTypes)),\n    bbox: v.arrayOf(v.number),\n    limit: v.number,\n    language: v.arrayOf(v.string),\n    reverseMode: v.oneOf('distance', 'score'),\n    routing: v.boolean,\n    worldview: v.string\n  })(config);\n\n  config.mode = config.mode || 'mapbox.places';\n\n  var query = stringifyBooleans(\n    xtend(\n      { country: config.countries },\n      pick(config, [\n        'country',\n        'types',\n        'bbox',\n        'limit',\n        'language',\n        'reverseMode',\n        'routing',\n        'worldview'\n      ])\n    )\n  );\n\n  return this.client.createRequest({\n    method: 'GET',\n    path: '/geocoding/v5/:mode/:query.json',\n    params: pick(config, ['mode', 'query']),\n    query: query\n  });\n};\n\nmodule.exports = createServiceFactory(Geocoding);\n","const DEGREES_TO_RADIANS = Math.PI / 180;\n\nconst DAY_IN_MS = 1000 * 60 * 60 * 24;\nconst JD1970 = 2440588; // Julian Day year 1970\nconst JD2000 = 2451545; // Julian Day year 2000\n\n// This angle ε [epsilon] is called the obliquity of the ecliptic and its value at the beginning of 2000 was 23.4397°\nconst e = DEGREES_TO_RADIANS * 23.4397; // obliquity of the Earth\n\n// Refer https://www.aa.quae.nl/en/reken/zonpositie.html\n// \"The Mean Anomaly\" section for explanation\nconst M0 = 357.5291; // Earth mean anomaly on start day\nconst M1 = 0.98560028; // Earth angle traverses on average per day seen from the sun\n\nconst THETA0 = 280.147; // The sidereal time (in degrees) at longitude 0° at the instant defined by JD2000\nconst THETA1 = 360.9856235; // The rate of change of the sidereal time, in degrees per day.\n\n/**\n * A position in the sky defined by two angles\n * The altitude is 0° at the horizon, +90° in the zenith (straight over your head), and −90° in the nadir (straight down).\n * The azimuth is the direction along the horizon, which we measure from south to west.\n * South has azimuth 0°, west +90°, north +180°, and east +270° (or −90°, that's the same thing).\n */\nexport type CelestialPosition = {\n  azimuth: number;\n  altitude: number;\n};\n\n/**\n * Calculate sun position\n * based on https://www.aa.quae.nl/en/reken/zonpositie.html\n * inspired by https://github.com/mourner/suncalc/blob/master/suncalc.js\n */\nexport function getSunPosition(\n  timestamp: number | Date,\n  latitude: number,\n  longitude: number\n): CelestialPosition {\n  const longitudeWestInRadians = DEGREES_TO_RADIANS * -longitude;\n  const phi = DEGREES_TO_RADIANS * latitude;\n  const d = toDays(timestamp);\n\n  const c = getSunCoords(d);\n  // hour angle\n  const H = getSiderealTime(d, longitudeWestInRadians) - c.rightAscension;\n\n  return {\n    azimuth: getAzimuth(H, phi, c.declination),\n    altitude: getAltitude(H, phi, c.declination)\n  };\n}\n\nexport function getSunDirection(\n  timestamp: number | Date,\n  latitude: number,\n  longitude: number\n): number[] {\n  const {azimuth, altitude} = getSunPosition(timestamp, latitude, longitude);\n\n  // solar position to light direction\n  return [\n    Math.sin(azimuth) * Math.cos(altitude),\n    Math.cos(azimuth) * Math.cos(altitude),\n    -Math.sin(altitude)\n  ];\n}\n\nfunction toJulianDay(timestamp: number | Date): number {\n  const ts = typeof timestamp === 'number' ? timestamp : timestamp.getTime();\n  return ts / DAY_IN_MS - 0.5 + JD1970;\n}\n\nfunction toDays(timestamp: number | Date): number {\n  return toJulianDay(timestamp) - JD2000;\n}\n\nfunction getRightAscension(eclipticLongitude: number, b: number): number {\n  const lambda = eclipticLongitude;\n  return Math.atan2(Math.sin(lambda) * Math.cos(e) - Math.tan(b) * Math.sin(e), Math.cos(lambda));\n}\n\nfunction getDeclination(eclipticLongitude: number, b: number): number {\n  const lambda = eclipticLongitude;\n  return Math.asin(Math.sin(b) * Math.cos(e) + Math.cos(b) * Math.sin(e) * Math.sin(lambda));\n}\n\nfunction getAzimuth(hourAngle: number, latitudeInRadians: number, declination: number): number {\n  const H = hourAngle;\n  const phi = latitudeInRadians;\n  const delta = declination;\n  return Math.atan2(Math.sin(H), Math.cos(H) * Math.sin(phi) - Math.tan(delta) * Math.cos(phi));\n}\n\nfunction getAltitude(hourAngle: number, latitudeInRadians: number, declination: number): number {\n  const H = hourAngle;\n  const phi = latitudeInRadians;\n  const delta = declination;\n  return Math.asin(Math.sin(phi) * Math.sin(delta) + Math.cos(phi) * Math.cos(delta) * Math.cos(H));\n}\n\n// https://www.aa.quae.nl/en/reken/zonpositie.html\n// \"The Observer section\"\nfunction getSiderealTime(dates: number, longitudeWestInRadians: number): number {\n  return DEGREES_TO_RADIANS * (THETA0 + THETA1 * dates) - longitudeWestInRadians;\n}\n\nfunction getSolarMeanAnomaly(days: number): number {\n  return DEGREES_TO_RADIANS * (M0 + M1 * days);\n}\n\nfunction getEclipticLongitude(meanAnomaly: number): number {\n  const M = meanAnomaly;\n  // equation of center\n  const C =\n    DEGREES_TO_RADIANS * (1.9148 * Math.sin(M) + 0.02 * Math.sin(2 * M) + 0.0003 * Math.sin(3 * M));\n  // perihelion of the Earth\n  const P = DEGREES_TO_RADIANS * 102.9372;\n\n  return M + C + P + Math.PI;\n}\n\nfunction getSunCoords(dates: number): {\n  declination: number;\n  rightAscension: number;\n} {\n  const M = getSolarMeanAnomaly(dates);\n  const L = getEclipticLongitude(M);\n\n  return {\n    declination: getDeclination(L, 0),\n    rightAscension: getRightAscension(L, 0)\n  };\n}\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport Vector from './base/vector';\nimport {config, isArray} from '../lib/common';\nimport {checkNumber} from '../lib/validators';\n\n// @ts-ignore: error TS2307: Cannot find module 'gl-matrix/...'.\nimport * as vec3 from 'gl-matrix/vec3';\n// eslint-disable-next-line camelcase\nimport {vec3_transformMat2, vec3_transformMat4AsVector} from '../lib/gl-matrix-extras';\n\nconst ORIGIN = [0, 0, 0];\nconst constants = {};\n\nexport default class Vector3 extends Vector {\n  static get ZERO() {\n    return (constants.ZERO = constants.ZERO || Object.freeze(new Vector3(0, 0, 0, 0)));\n  }\n\n  /**\n   * @class\n   * @param {Number | [Number, Number, Number]} x\n   * @param {Number} y - rotation around X (latitude)\n   * @param {Number} z - rotation around X (latitude)\n   */\n  constructor(x = 0, y = 0, z = 0) {\n    // PERF NOTE: initialize elements as double precision numbers\n    super(-0, -0, -0);\n    if (arguments.length === 1 && isArray(x)) {\n      this.copy(x);\n    } else {\n      // this.set(x, y, z);\n      if (config.debug) {\n        checkNumber(x);\n        checkNumber(y);\n        checkNumber(z);\n      }\n      // @ts-ignore TS2412: Property '0' of type 'number | [number, number, number]' is not assignable to numeric index type 'number'\n      this[0] = x;\n      this[1] = y;\n      this[2] = z;\n    }\n  }\n\n  set(x, y, z) {\n    this[0] = x;\n    this[1] = y;\n    this[2] = z;\n    return this.check();\n  }\n\n  copy(array) {\n    this[0] = array[0];\n    this[1] = array[1];\n    this[2] = array[2];\n    return this.check();\n  }\n\n  fromObject(object) {\n    if (config.debug) {\n      checkNumber(object.x);\n      checkNumber(object.y);\n      checkNumber(object.z);\n    }\n    this[0] = object.x;\n    this[1] = object.y;\n    this[2] = object.z;\n    return this.check();\n  }\n\n  toObject(object) {\n    object.x = this[0];\n    object.y = this[1];\n    object.z = this[2];\n    return object;\n  }\n\n  // Getters/setters\n  /* eslint-disable no-multi-spaces, brace-style, no-return-assign */\n  get ELEMENTS() {\n    return 3;\n  }\n\n  // x,y inherited from Vector\n\n  get z() {\n    return this[2];\n  }\n  set z(value) {\n    this[2] = checkNumber(value);\n  }\n  /* eslint-enable no-multi-spaces, brace-style, no-return-assign */\n\n  angle(vector) {\n    return vec3.angle(this, vector);\n  }\n\n  // MODIFIERS\n\n  cross(vector) {\n    vec3.cross(this, this, vector);\n    return this.check();\n  }\n\n  rotateX({radians, origin = ORIGIN}) {\n    vec3.rotateX(this, this, origin, radians);\n    return this.check();\n  }\n\n  rotateY({radians, origin = ORIGIN}) {\n    vec3.rotateY(this, this, origin, radians);\n    return this.check();\n  }\n\n  rotateZ({radians, origin = ORIGIN}) {\n    vec3.rotateZ(this, this, origin, radians);\n    return this.check();\n  }\n\n  // Transforms\n\n  // transforms as point (4th component is implicitly 1)\n  transform(matrix4) {\n    return this.transformAsPoint(matrix4);\n  }\n\n  // transforms as point (4th component is implicitly 1)\n  transformAsPoint(matrix4) {\n    vec3.transformMat4(this, this, matrix4);\n    return this.check();\n  }\n\n  // transforms as vector  (4th component is implicitly 0, ignores translation. slightly faster)\n  transformAsVector(matrix4) {\n    vec3_transformMat4AsVector(this, this, matrix4);\n    return this.check();\n  }\n\n  transformByMatrix3(matrix3) {\n    vec3.transformMat3(this, this, matrix3);\n    return this.check();\n  }\n\n  transformByMatrix2(matrix2) {\n    vec3_transformMat2(this, this, matrix2);\n    return this.check();\n  }\n\n  transformByQuaternion(quaternion) {\n    vec3.transformQuat(this, this, quaternion);\n    return this.check();\n  }\n}\n"],"sourceRoot":""}