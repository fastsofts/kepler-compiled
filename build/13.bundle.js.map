{"version":3,"sources":["webpack:////home/srikanth/kepler.gl/node_modules/@babel/runtime/helpers/defineProperty.js","webpack:////home/srikanth/kepler.gl/node_modules/@babel/runtime/helpers/assertThisInitialized.js","webpack:////home/srikanth/kepler.gl/node_modules/@babel/runtime/helpers/arrayWithHoles.js","webpack:////home/srikanth/kepler.gl/node_modules/@babel/runtime/helpers/nonIterableRest.js","webpack:////home/srikanth/kepler.gl/node_modules/@babel/runtime/helpers/inherits.js","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/accessibility/src/components/HiddenText/HiddenText.tsx","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/accessibility/src/components/LiveRegion/LiveRegion.tsx","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/components/DndMonitor/context.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/components/DndMonitor/useDndMonitor.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/components/Accessibility/defaults.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/components/Accessibility/Accessibility.tsx","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/accessibility/src/hooks/useAnnouncement.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/store/actions.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/utilities/other/noop.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/sensors/useSensor.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/sensors/useSensors.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/utilities/coordinates/constants.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/utilities/coordinates/distanceBetweenPoints.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/utilities/coordinates/getRelativeTransformOrigin.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/utilities/algorithms/helpers.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/utilities/algorithms/closestCenter.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/utilities/algorithms/closestCorners.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/utilities/algorithms/rectIntersection.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/utilities/algorithms/pointerWithin.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/utilities/rect/getRectDelta.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/utilities/rect/rectAdjustment.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/utilities/transform/parseTransform.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/utilities/rect/getRect.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/utilities/transform/inverseTransform.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/utilities/scroll/getScrollableAncestors.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/utilities/scroll/isScrollable.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/utilities/scroll/isFixed.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/utilities/scroll/getScrollableElement.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/utilities/scroll/getScrollCoordinates.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/types/direction.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/utilities/scroll/documentScrollingElement.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/utilities/scroll/getScrollPosition.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/utilities/scroll/getScrollDirectionAndSpeed.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/utilities/scroll/getScrollElementRect.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/utilities/scroll/getScrollOffsets.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/utilities/scroll/scrollIntoViewIfNeeded.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/utilities/rect/Rect.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/sensors/utilities/Listeners.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/sensors/utilities/hasExceededDistance.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/sensors/events.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/sensors/keyboard/types.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/sensors/keyboard/defaults.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/sensors/keyboard/KeyboardSensor.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/sensors/pointer/AbstractPointerSensor.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/sensors/utilities/getEventListenerTarget.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/sensors/pointer/PointerSensor.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/sensors/mouse/MouseSensor.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/sensors/touch/TouchSensor.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/hooks/utilities/useAutoScroller.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/hooks/utilities/useDroppableMeasuring.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/hooks/utilities/useInitialValue.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/hooks/utilities/useResizeObserver.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/hooks/utilities/useRect.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/hooks/utilities/useMutationObserver.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/hooks/utilities/useScrollableAncestors.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/hooks/utilities/useScrollOffsetsDelta.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/hooks/utilities/useWindowRect.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/utilities/rect/getWindowClientRect.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/hooks/utilities/useRects.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/utilities/nodes/getMeasurableNode.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/components/DndContext/defaults.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/store/constructors.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/store/context.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/store/reducer.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/components/Accessibility/components/RestoreFocus.tsx","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/modifiers/applyModifiers.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/components/DndContext/DndContext.tsx","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/components/DndMonitor/useDndMonitorProvider.tsx","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/components/DndContext/hooks/useMeasuringConfiguration.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/hooks/utilities/useCachedNode.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/hooks/utilities/useInitialRect.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/components/DndContext/hooks/useLayoutShiftScrollCompensation.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/hooks/utilities/useDragOverlayMeasuring.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/hooks/utilities/useRectDelta.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/hooks/utilities/useScrollOffsets.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/utilities/rect/adjustScale.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/hooks/utilities/useCombineActivators.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/hooks/utilities/useSensorSetup.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/hooks/useDraggable.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/hooks/utilities/useSyntheticListeners.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/hooks/useDndContext.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/hooks/useDroppable.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/components/DragOverlay/components/AnimationManager/AnimationManager.tsx","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/components/DragOverlay/components/NullifiedContextProvider/NullifiedContextProvider.tsx","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/components/DragOverlay/components/PositionedOverlay/PositionedOverlay.tsx","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/components/DragOverlay/hooks/useDropAnimation.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/components/DragOverlay/hooks/useKey.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/core/src/components/DragOverlay/DragOverlay.tsx","webpack:////home/srikanth/kepler.gl/node_modules/@babel/runtime/helpers/AwaitValue.js","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/effects/lighting/sun-light.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/lib/layer-extension.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/shaderlib/project32/project32.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/shaderlib/picking/picking.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/utils/assert.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/utils/tesselator.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/layers/src/column-layer/grid-cell-layer.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/geo-layers/src/trips-layer/trips-layer.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/transitions/fly-to-interpolator.ts","webpack:////home/srikanth/kepler.gl/node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/utils/math-utils.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/debug/index.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/react/src/index.ts","webpack:////home/srikanth/kepler.gl/node_modules/@babel/runtime/regenerator/index.js","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/lib/view-manager.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/lib/effect-manager.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/lib/picking/query-object.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/lib/picking/pick-info.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/lib/deck-picker.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/lib/tooltip.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/lib/deck.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/mesh-layers/src/scenegraph-layer/gltf-utils.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/mesh-layers/src/scenegraph-layer/scenegraph-layer.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/mesh-layers/src/scenegraph-layer/scenegraph-layer-vertex.glsl.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/mesh-layers/src/scenegraph-layer/scenegraph-layer-fragment.glsl.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/layers/src/bitmap-layer/create-mesh.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/layers/src/bitmap-layer/bitmap-layer-fragment.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/layers/src/bitmap-layer/bitmap-layer.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/layers/src/bitmap-layer/bitmap-layer-vertex.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/layers/src/arc-layer/arc-layer.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/layers/src/arc-layer/arc-layer-vertex.glsl.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/layers/src/arc-layer/arc-layer-fragment.glsl.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/layers/src/line-layer/line-layer.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/layers/src/line-layer/line-layer-vertex.glsl.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/layers/src/line-layer/line-layer-fragment.glsl.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/geo-layers/src/s2-layer/s2-geometry.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/geo-layers/src/s2-layer/s2-utils.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/geo-layers/src/s2-layer/s2-layer.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/layers/src/point-cloud-layer/point-cloud-layer.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/layers/src/point-cloud-layer/point-cloud-layer-vertex.glsl.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/layers/src/point-cloud-layer/point-cloud-layer-fragment.glsl.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/mesh-layers/src/simple-mesh-layer/simple-mesh-layer.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/mesh-layers/src/simple-mesh-layer/simple-mesh-layer-vertex.glsl.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/mesh-layers/src/simple-mesh-layer/simple-mesh-layer-fragment.glsl.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/passes/screen-pass.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/effects/post-process-effect.ts","webpack:////home/srikanth/kepler.gl/node_modules/@babel/runtime/helpers/extends.js","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/layers/node_modules/earcut/src/earcut.js","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/geo-layers/src/tileset-2d/tile-2d-header.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/aggregation-layers/src/utils/bin-sorter.ts","webpack:////home/srikanth/kepler.gl/node_modules/@emotion/unitless/dist/unitless.browser.esm.js","webpack:////home/srikanth/kepler.gl/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack:////home/srikanth/kepler.gl/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack:////home/srikanth/kepler.gl/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack:////home/srikanth/kepler.gl/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack:////home/srikanth/kepler.gl/node_modules/@emotion/memoize/dist/memoize.browser.esm.js","webpack:////home/srikanth/kepler.gl/node_modules/@emotion/is-prop-valid/dist/is-prop-valid.browser.esm.js","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/geo-layers/src/tileset-2d/memoize.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/geo-layers/src/tileset-2d/tileset-2d.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/node_modules/@math.gl/core/src/lib/validators.ts","webpack:////home/srikanth/kepler.gl/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack:////home/srikanth/kepler.gl/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack:////home/srikanth/kepler.gl/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack:////home/srikanth/kepler.gl/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/sortable/src/utilities/arrayMove.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/sortable/src/utilities/arraySwap.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/sortable/src/utilities/getSortedRects.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/sortable/src/utilities/isValidIndex.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/sortable/src/strategies/horizontalListSorting.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/sortable/src/strategies/rectSorting.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/sortable/src/strategies/rectSwapping.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/sortable/src/strategies/verticalListSorting.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/sortable/src/components/SortableContext.tsx","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/sortable/src/utilities/itemsEqual.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/sortable/src/utilities/normalizeDisabled.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/sortable/src/hooks/defaults.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/sortable/src/hooks/useSortable.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/sortable/src/hooks/utilities/useDerivedTransform.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/sortable/src/types/type-guard.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/sortable/src/sensors/keyboard/sortableKeyboardCoordinates.ts","webpack:////home/srikanth/kepler.gl/node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack:////home/srikanth/kepler.gl/node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack:////home/srikanth/kepler.gl/node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","webpack:////home/srikanth/kepler.gl/node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack:////home/srikanth/kepler.gl/node_modules/@babel/runtime/helpers/AsyncGenerator.js","webpack:////home/srikanth/kepler.gl/node_modules/@babel/runtime/helpers/superPropBase.js","webpack:////home/srikanth/kepler.gl/node_modules/@babel/runtime/helpers/asyncToGenerator.js","webpack:////home/srikanth/kepler.gl/node_modules/@babel/runtime/helpers/interopRequireDefault.js","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/utils/deep-equal.ts","webpack:////home/srikanth/kepler.gl/node_modules/@babel/runtime/helpers/typeof.js","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/viewports/viewport.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/utils/array-utils.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/lib/attribute/attribute-transition-utils.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/utils/iterable-utils.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/transitions/linear-interpolator.ts","webpack:////home/srikanth/kepler.gl/node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/layers/node_modules/@math.gl/polygon/src/polygon-utils.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/layers/node_modules/@math.gl/polygon/src/utils.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/layers/node_modules/@math.gl/polygon/src/lineclip.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/layers/node_modules/@math.gl/polygon/src/cut-by-grid.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/layers/node_modules/@math.gl/polygon/src/cut-by-mercator-bounds.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/geo-layers/node_modules/@math.gl/core/src/classes/base/math-array.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/geo-layers/node_modules/@math.gl/core/src/lib/validators.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/geo-layers/node_modules/@math.gl/core/src/classes/base/matrix.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/geo-layers/node_modules/gl-matrix/esm/common.js","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/geo-layers/node_modules/gl-matrix/esm/mat4.js","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/geo-layers/node_modules/gl-matrix/esm/vec2.js","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/geo-layers/node_modules/gl-matrix/esm/vec3.js","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/geo-layers/node_modules/gl-matrix/esm/vec4.js","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/geo-layers/node_modules/@math.gl/core/src/classes/matrix4.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/geo-layers/node_modules/@math.gl/core/src/lib/gl-matrix-extras.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/extensions/src/data-filter/shader-module.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/extensions/src/data-filter/aggregator.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/extensions/src/data-filter/data-filter-extension.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/aggregation-layers/src/utils/grid-aggregation-utils.js","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/aggregation-layers/src/cpu-grid-layer/cpu-grid-layer.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/aggregation-layers/src/cpu-grid-layer/grid-aggregator.js","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/extensions/src/brushing/shader-module.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/extensions/src/brushing/brushing-extension.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/aggregation-layers/src/hexagon-layer/hexagon-layer.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/aggregation-layers/src/hexagon-layer/hexagon-aggregator.js","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/extensions/src/path-style/shaders.glsl.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/extensions/src/path-style/path-style-extension.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/layers/node_modules/@math.gl/core/src/lib/common.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/node_modules/@math.gl/core/node_modules/gl-matrix/esm/vec3.js","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/utils/flatten.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/controllers/controller.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/utils/positions.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/views/view.ts","webpack:////home/srikanth/kepler.gl/node_modules/@babel/runtime/helpers/slicedToArray.js","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/geo-layers/node_modules/@math.gl/core/src/lib/common.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/layers/src/solid-polygon-layer/polygon.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/utils/memoize.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/utils/typed-array-manager.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/geo-layers/src/geo-cell-layer/GeoCellLayer.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/transitions/transition.ts","webpack:////home/srikanth/kepler.gl/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","webpack:////home/srikanth/kepler.gl/node_modules/@babel/runtime/helpers/esm/createClass.js","webpack:////home/srikanth/kepler.gl/node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/node_modules/@math.gl/core/src/classes/base/vector.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/node_modules/@math.gl/core/src/classes/vector3.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/passes/layers-pass.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/utilities/src/hooks/useCombinedRefs.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/utilities/src/execution-context/canUseDOM.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/utilities/src/type-guards/isWindow.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/utilities/src/type-guards/isNode.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/utilities/src/execution-context/getWindow.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/utilities/src/type-guards/isDocument.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/utilities/src/type-guards/isHTMLElement.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/utilities/src/type-guards/isSVGElement.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/utilities/src/execution-context/getOwnerDocument.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/utilities/src/hooks/useIsomorphicLayoutEffect.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/utilities/src/hooks/useEvent.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/utilities/src/hooks/useInterval.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/utilities/src/hooks/useLatestValue.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/utilities/src/hooks/useLazyMemo.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/utilities/src/hooks/useNodeRef.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/utilities/src/hooks/usePrevious.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/utilities/src/hooks/useUniqueId.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/utilities/src/adjustment.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/utilities/src/event/hasViewportRelativeCoordinates.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/utilities/src/event/isKeyboardEvent.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/utilities/src/event/isTouchEvent.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/utilities/src/coordinates/getEventCoordinates.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/utilities/src/css.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/utilities/src/focus/findFirstFocusableNode.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/node_modules/@math.gl/core/src/classes/base/matrix.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/node_modules/@math.gl/core/node_modules/gl-matrix/esm/mat4.js","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/node_modules/@math.gl/core/node_modules/gl-matrix/esm/vec2.js","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/node_modules/@math.gl/core/node_modules/gl-matrix/esm/vec4.js","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/node_modules/@math.gl/core/src/classes/matrix4.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/effects/lighting/directional-light.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/geo-layers/src/tile-layer/tile-layer.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/layers/src/path-layer/path-tesselator.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/layers/src/path-layer/path.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/layers/src/path-layer/path-layer.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/layers/src/path-layer/path-layer-vertex.glsl.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/layers/src/path-layer/path-layer-fragment.glsl.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/shaderlib/misc/geometry.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/shaderlib/project/project.glsl.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/shaderlib/project/project.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/viewports/web-mercator-viewport.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/passes/pick-layers-pass.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/controllers/map-controller.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/transitions/transition-interpolator.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/layers/src/solid-polygon-layer/polygon-tesselator.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/layers/src/solid-polygon-layer/solid-polygon-layer-vertex-main.glsl.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/layers/src/solid-polygon-layer/solid-polygon-layer-vertex-top.glsl.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/layers/src/solid-polygon-layer/solid-polygon-layer-vertex-side.glsl.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/layers/src/solid-polygon-layer/solid-polygon-layer.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/layers/src/solid-polygon-layer/solid-polygon-layer-fragment.glsl.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/effects/lighting/point-light.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/effects/lighting/camera-light.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/viewports/orbit-viewport.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/viewports/orthographic-viewport.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/node_modules/@math.gl/core/src/classes/spherical-coordinates.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/viewports/first-person-viewport.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/controllers/first-person-controller.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/views/first-person-view.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/controllers/orbit-controller.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/views/orbit-view.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/controllers/orthographic-controller.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/views/orthographic-view.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/controllers/globe-controller.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/views/globe-view.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/layers/src/icon-layer/icon-manager.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/layers/src/icon-layer/icon-layer.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/layers/src/icon-layer/icon-layer-vertex.glsl.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/layers/src/icon-layer/icon-layer-fragment.glsl.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/shaderlib/shadow/shadow.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/shaderlib/project/viewport-uniforms.ts","webpack:////home/srikanth/kepler.gl/node_modules/@babel/runtime/helpers/objectWithoutProperties.js","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/controllers/view-state.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/lib/constants.ts","webpack:////home/srikanth/kepler.gl/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","webpack:////home/srikanth/kepler.gl/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/node_modules/@math.gl/core/src/lib/gl-matrix-extras.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/lib/composite-layer.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/aggregation-layers/src/utils/scale-utils.js","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/layers/src/polygon-layer/polygon-layer.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/mesh-layers/src/utils/matrix.ts","webpack:////home/srikanth/kepler.gl/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack:////home/srikanth/kepler.gl/node_modules/@babel/runtime/helpers/esm/inherits.js","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/node_modules/@math.gl/core/node_modules/gl-matrix/esm/common.js","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/geo-layers/src/tileset-2d/tile-2d-traversal.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/geo-layers/src/tileset-2d/utils.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/mesh-layers/src/index.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/geo-layers/src/wms-layer/utils.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/geo-layers/src/wms-layer/wms-layer.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/geo-layers/src/great-circle-layer/great-circle-layer.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/geo-layers/src/quadkey-layer/quadkey-utils.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/geo-layers/src/quadkey-layer/quadkey-layer.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/geo-layers/src/h3-layers/h3-cluster-layer.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/geo-layers/src/mesh-layer/mesh-layer.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/geo-layers/src/mesh-layer/mesh-layer-vertex.glsl.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/geo-layers/src/mesh-layer/mesh-layer-fragment.glsl.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/geo-layers/src/tile-3d-layer/tile-3d-layer.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/geo-layers/src/terrain-layer/terrain-layer.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/extensions/src/clip/clip-extension.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/geo-layers/node_modules/@loaders.gl/gis/src/lib/binary-to-geojson.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/geo-layers/src/mvt-layer/coordinate-transform.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/geo-layers/src/mvt-layer/find-index-binary.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/geo-layers/src/mvt-layer/mvt-layer.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/geo-layers/src/geohash-layer/geohash-utils.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/geo-layers/src/geohash-layer/geohash-layer.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/react/src/utils/use-isomorphic-layout-effect.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/react/src/utils/inherits-from.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/react/src/utils/evaluate-children.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/react/src/utils/extract-jsx-layers.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/react/src/utils/extract-styles.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/react/src/deckgl.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/react/src/utils/position-children-under-views.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/modifiers/src/createSnapModifier.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/modifiers/src/restrictToHorizontalAxis.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/modifiers/src/utilities/restrictToBoundingRect.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/modifiers/src/restrictToParentElement.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/modifiers/src/restrictToFirstScrollableAncestor.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/modifiers/src/restrictToVerticalAxis.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/modifiers/src/restrictToWindowEdges.ts","webpack:////home/srikanth/kepler.gl/node_modules/@dnd-kit/modifiers/src/snapCenterToCursor.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/lifecycle/props.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/views/map-view.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/layers/src/column-layer/column-geometry.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/layers/src/column-layer/column-layer.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/layers/src/column-layer/column-layer-vertex.glsl.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/layers/src/column-layer/column-layer-fragment.glsl.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/passes/shadow-pass.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/effects/lighting/lighting-effect.ts","webpack:////home/srikanth/kepler.gl/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/node_modules/@math.gl/core/src/lib/assert.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/shaderlib/project/project-functions.ts","webpack:////home/srikanth/kepler.gl/node_modules/@babel/runtime/helpers/taggedTemplateLiteral.js","webpack:////home/srikanth/kepler.gl/node_modules/@floating-ui/utils/dist/floating-ui.utils.esm.js","webpack:////home/srikanth/kepler.gl/node_modules/@floating-ui/core/dist/floating-ui.core.esm.js","webpack:////home/srikanth/kepler.gl/node_modules/@floating-ui/utils/dom/dist/floating-ui.utils.dom.esm.js","webpack:////home/srikanth/kepler.gl/node_modules/@floating-ui/dom/dist/floating-ui.dom.esm.js","webpack:////home/srikanth/kepler.gl/node_modules/@floating-ui/react-dom/dist/floating-ui.react-dom.esm.js","webpack:////home/srikanth/kepler.gl/node_modules/@floating-ui/utils/react/dist/floating-ui.utils.react.esm.js","webpack:////home/srikanth/kepler.gl/node_modules/@floating-ui/react/dist/floating-ui.react.esm.js","webpack:////home/srikanth/kepler.gl/node_modules/@babel/runtime/helpers/awaitAsyncGenerator.js","webpack:////home/srikanth/kepler.gl/node_modules/@babel/runtime/helpers/get.js","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/lifecycle/constants.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/effects/lighting/ambient-light.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/utils/count.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/utils/shader.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/viewports/globe-viewport.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/geo-layers/src/h3-layers/h3-hexagon-layer.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/controllers/transition-manager.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/utils/log.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/node_modules/@math.gl/core/src/lib/common.ts","webpack:////home/srikanth/kepler.gl/node_modules/@babel/runtime/helpers/getPrototypeOf.js","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/transitions/cpu-interpolation-transition.js","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/transitions/cpu-spring-transition.js","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/lib/uniform-transition-manager.js","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/utils/texture.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/lifecycle/prop-types.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/lifecycle/create-props.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/lifecycle/component.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/lifecycle/component-state.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/lib/layer-state.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/lib/layer.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/lib/attribute/shader-attribute.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/lib/attribute/data-column.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/utils/range.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/lib/attribute/attribute.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/lib/attribute/gl-utils.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/lib/attribute/attribute-transition-manager.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/transitions/gpu-interpolation-transition.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/transitions/gpu-spring-transition.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/lib/attribute/attribute-manager.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/layers/src/text-layer/utils.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/layers/src/text-layer/lru-cache.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/layers/src/text-layer/font-atlas-manager.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/layers/src/text-layer/text-layer.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/lib/resource/resource.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/lib/resource/resource-manager.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/lib/layer-manager.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/layers/src/text-layer/text-background-layer/text-background-layer.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/layers/src/text-layer/text-background-layer/text-background-layer-vertex.glsl.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/layers/src/text-layer/text-background-layer/text-background-layer-fragment.glsl.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/layers/src/scatterplot-layer/scatterplot-layer.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/layers/src/scatterplot-layer/scatterplot-layer-vertex.glsl.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/layers/src/scatterplot-layer/scatterplot-layer-fragment.glsl.ts","webpack:////home/srikanth/kepler.gl/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/utils/json-loader.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/lib/init.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/passes/draw-layers-pass.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/lib/deck-renderer.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/layers/src/text-layer/multi-icon-layer/multi-icon-layer.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/layers/src/text-layer/multi-icon-layer/multi-icon-layer-fragment.glsl.ts","webpack:////home/srikanth/kepler.gl/node_modules/@babel/runtime/helpers/toArray.js","webpack:////home/srikanth/kepler.gl/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/node_modules/@math.gl/core/src/classes/base/math-array.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/passes/pass.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/layers/src/utils.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/aggregation-layers/src/utils/color-utils.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/aggregation-layers/src/utils/cpu-aggregator.js","webpack:////home/srikanth/kepler.gl/node_modules/@babel/runtime/helpers/classCallCheck.js","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/aggregation-layers/src/utils/prop-utils.js","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/aggregation-layers/src/aggregation-layer.ts","webpack:////home/srikanth/kepler.gl/node_modules/@babel/runtime/helpers/esm/extends.js","webpack:////home/srikanth/kepler.gl/node_modules/@babel/runtime/helpers/esm/objectSpread.js","webpack:////home/srikanth/kepler.gl/node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","webpack:////home/srikanth/kepler.gl/node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack:////home/srikanth/kepler.gl/node_modules/@babel/runtime/helpers/createClass.js","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/core/src/shaderlib/index.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/layers/src/geojson-layer/sub-layer-map.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/layers/src/geojson-layer/geojson.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/layers/src/geojson-layer/geojson-layer-props.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/layers/src/geojson-layer/geojson-binary.ts","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/layers/src/geojson-layer/geojson-layer.ts","webpack:////home/srikanth/kepler.gl/node_modules/@babel/runtime/helpers/wrapAsyncGenerator.js","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/aggregation-layers/src/utils/aggregation-operation-utils.js","webpack:////home/srikanth/kepler.gl/node_modules/@deck.gl/layers/src/index.ts","webpack:////home/srikanth/kepler.gl/node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack:////home/srikanth/kepler.gl/node_modules/@babel/runtime/helpers/iterableToArray.js"],"names":["module","exports","obj","key","value","Object","defineProperty","enumerable","configurable","writable","__esModule","self","ReferenceError","arr","Array","isArray","TypeError","setPrototypeOf","subClass","superClass","prototype","create","constructor","hiddenStyles","display","HiddenText","id","React","style","visuallyHidden","position","width","height","margin","border","padding","overflow","clip","clipPath","whiteSpace","LiveRegion","announcement","role","DndMonitorContext","createContext","useDndMonitor","listener","registerListener","useContext","useEffect","Error","defaultScreenReaderInstructions","draggable","defaultAnnouncements","onDragStart","active","onDragOver","over","onDragEnd","onDragCancel","Accessibility","announcements","container","hiddenTextDescribedById","screenReaderInstructions","announce","setAnnouncement","useState","useCallback","useAnnouncement","liveRegionId","useUniqueId","mounted","setMounted","useMemo","onDragMove","markup","createPortal","Action","noop","useSensor","sensor","options","useSensors","sensors","filter","defaultCoordinates","freeze","x","y","distanceBetween","p1","p2","Math","sqrt","pow","getRelativeTransformOrigin","event","rect","eventCoordinates","getEventCoordinates","left","top","sortCollisionsAsc","data","a","b","sortCollisionsDesc","cornersOfRectangle","getFirstCollision","collisions","property","length","firstCollision","centerOfRectangle","closestCenter","collisionRect","droppableRects","droppableContainers","centerRect","droppableContainer","get","distBetween","push","sort","closestCorners","corners","rectCorners","distances","reduce","accumulator","corner","index","effectiveDistance","Number","toFixed","getIntersectionRatio","entry","target","max","right","min","bottom","targetArea","entryArea","intersectionArea","rectIntersection","intersectionRatio","isPointWithinRect","point","pointerWithin","pointerCoordinates","getRectDelta","rect1","rect2","createRectAdjustmentFn","modifier","adjustments","acc","adjustment","getAdjustedRect","parseTransform","transform","startsWith","transformArray","slice","split","scaleX","scaleY","defaultOptions","ignoreTransform","getClientRect","element","getBoundingClientRect","transformOrigin","getWindow","getComputedStyle","parsedTransform","translateX","translateY","parseFloat","indexOf","w","h","inverseTransform","getTransformAgnosticClientRect","getScrollableAncestors","limit","scrollParents","findScrollableAncestors","node","isDocument","scrollingElement","includes","isHTMLElement","isSVGElement","computedStyle","overflowRegex","some","test","isScrollable","isFixed","parentNode","getFirstScrollableAncestor","firstScrollableAncestor","getScrollableElement","canUseDOM","isWindow","isNode","getOwnerDocument","window","getScrollXCoordinate","scrollX","scrollLeft","getScrollYCoordinate","scrollY","scrollTop","getScrollCoordinates","Direction","isDocumentScrollingElement","document","getScrollPosition","scrollingContainer","minScroll","dimensions","innerHeight","innerWidth","clientHeight","clientWidth","maxScroll","scrollWidth","scrollHeight","isTop","isLeft","isBottom","isRight","defaultThreshold","getScrollDirectionAndSpeed","scrollContainer","scrollContainerRect","acceleration","thresholdPercentage","direction","speed","threshold","Backward","abs","Forward","getScrollElementRect","getScrollOffsets","scrollableAncestors","add","scrollIntoViewIfNeeded","measure","scrollIntoView","block","inline","properties","Rect","scrollOffsets","this","axis","keys","getScrollOffset","currentOffsets","scrollOffsetsDeltla","Listeners","listeners","removeAll","forEach","removeEventListener","eventName","handler","addEventListener","hasExceededDistance","delta","measurement","dx","dy","EventName","KeyboardCode","preventDefault","stopPropagation","defaultKeyboardCodes","start","Space","Enter","cancel","Esc","end","defaultKeyboardCoordinateGetter","currentCoordinates","code","Right","Left","Down","Up","KeyboardSensor","props","autoScrollEnabled","referenceCoordinates","windowListeners","handleKeyDown","bind","handleCancel","attach","handleStart","Resize","VisibilityChange","setTimeout","Keydown","activeNode","onStart","current","isKeyboardEvent","context","keyboardCodes","coordinateGetter","scrollBehavior","handleEnd","newCoordinates","coordinatesDelta","getCoordinatesDelta","scrollDelta","scrollElementRect","clampedCoordinates","canScrollX","canScrollY","newScrollCoordinates","canScrollToNewCoordinates","scrollTo","behavior","scrollBy","handleMove","getAdjustedCoordinates","coordinates","onMove","onEnd","detach","onCancel","isDistanceConstraint","constraint","Boolean","isDelayConstraint","activators","onActivation","nativeEvent","activator","activatorNode","AbstractPointerSensor","events","listenerTarget","EventTarget","getEventListenerTarget","activated","initialCoordinates","timeoutId","documentListeners","handleKeydown","removeTextSelection","activationConstraint","move","name","passive","DragStart","ContextMenu","delay","clearTimeout","Click","capture","SelectionChange","tolerance","distance","cancelable","getSelection","removeAllRanges","PointerSensor","super","isPrimary","button","MouseButton","MouseSensor","RightClick","TouchSensor","AutoScrollActivator","TraversalOrder","useAutoScroller","Pointer","canScroll","draggingRect","enabled","interval","order","TreeOrder","scrollableAncestorRects","scrollIntent","disabled","previousDelta","usePrevious","useLazyMemo","previousIntent","defaultScrollIntent","sign","useScrollIntent","setAutoScrollInterval","clearAutoScrollInterval","useInterval","scrollSpeed","useRef","scrollDirection","DraggableRect","scrollContainerRef","autoScroll","sortedScrollableAncestors","reverse","JSON","stringify","touches","MeasuringStrategy","MeasuringFrequency","defaultValue","Map","useInitialValue","computeFn","previousValue","useResizeObserver","callback","handleResize","useEvent","resizeObserver","ResizeObserver","disconnect","defaultMeasure","useRect","fallbackRect","measureRect","useReducer","currentRect","isConnected","newRect","mutationObserver","useMutationObserver","handleMutations","MutationObserver","records","record","type","HTMLElement","contains","useIsomorphicLayoutEffect","observe","body","childList","subtree","useScrollOffsetsDelta","dependencies","initialScrollOffsets","hasScrollOffsets","subtract","useWindowRect","getWindowClientRect","getMeasurableNode","children","firstChild","defaultSensors","defaultData","defaultMeasuringConfiguration","droppable","strategy","WhileDragging","frequency","Optimized","dragOverlay","DroppableContainersMap","undefined","toArray","from","values","getEnabled","getNodeFor","defaultPublicContext","activatorEvent","activeNodeRect","containerNodeRect","draggableNodes","nodeRef","setRef","measuringConfiguration","measureDroppableContainers","windowRect","measuringScheduled","defaultInternalContext","ariaDescribedById","dispatch","InternalContext","PublicContext","getInitialState","nodes","translate","containers","reducer","state","action","DragMove","DragEnd","DragCancel","RegisterDroppable","set","SetDroppableDisabled","UnregisterDroppable","delete","RestoreFocus","previousActivatorEvent","previousActiveId","activeElement","draggableNode","requestAnimationFrame","focusableNode","findFirstFocusableNode","focus","applyModifiers","modifiers","args","ActiveDraggableContext","Status","DndContext","memo","accessibility","collisionDetection","measuring","store","dispatchMonitorEvent","registerMonitorListener","Set","useDndMonitorProvider","status","setStatus","Uninitialized","isInitialized","Initialized","activeId","activeRects","initial","translated","activeRef","activeSensor","setActiveSensor","setActivatorEvent","latestProps","useLatestValue","draggableDescribedById","enabledDroppableContainers","config","dragging","queue","setQueue","containersRef","Always","BeforeDragging","isDisabled","disabledRef","ids","concat","map","useDroppableMeasuring","cachedNode","useCachedNode","activationCoordinates","autoScrollOptions","activeSensorDisablesAutoscroll","autoScrollGloballyDisabled","getAutoScrollerOptions","initialActiveNodeRect","useInitialRect","useLayoutShiftScrollCompensation","initialRect","initialized","rectDelta","layoutShiftCompensation","parentElement","sensorContext","draggingNode","draggingNodeRect","scrollAdjustedTranslate","overNode","useDragOverlayMeasuring","setRect","entries","handleNodeChange","useNodeRef","usesDragOverlay","nodeRectDelta","previousNode","ancestors","useScrollableAncestors","elements","firstElement","rects","measureRects","useRects","modifiedTranslate","overlayNodeRect","scrollCoordinates","setScrollCoordinates","prevElements","handleScroll","previousElements","cleanup","scrollableElement","useScrollOffsets","scrollAdjustment","activeNodeScrollDelta","overId","setOver","adjustScale","instantiateSensor","Sensor","sensorInstance","unstable_batchedUpdates","Initializing","createHandler","async","cancelDrop","Promise","resolve","getSyntheticHandler","useCombineActivators","activeDraggableNode","dndKit","defaultPrevented","activationContext","capturedBy","teardownFns","setup","teardown","useSensorSetup","overContainer","publicContext","internalContext","Provider","restoreFocus","NullContext","defaultRole","useDraggable","attributes","roleDescription","tabIndex","isDragging","setNodeRef","setActivatorNodeRef","useSyntheticListeners","dataRef","useDndContext","defaultResizeObserverConfig","timeout","useDroppable","resizeObserverConfig","previous","resizeObserverConnected","callbackId","resizeObserverDisabled","updateMeasurementsFor","resizeObserverTimeout","newElement","previousElement","unobserve","isOver","AnimationManager","animation","clonedChildren","setClonedChildren","setElement","previousChildren","then","cloneElement","ref","defaultTransform","NullifiedContextProvider","baseStyles","touchAction","defaultTransition","PositionedOverlay","forwardRef","as","className","transition","scaleAdjustedTransform","styles","CSS","Transform","toString","createElement","defaultDropAnimationSideEffects","originalStyles","getPropertyValue","setProperty","classList","remove","defaultDropAnimationConfiguration","duration","easing","keyframes","final","sideEffects","opacity","useDropAnimation","activeDraggable","measurableNode","rest","scale","finalTransform","animationKeyframes","firstKeyframe","lastKeyframe","animate","fill","onfinish","createDefaultDropAnimation","DragOverlay","dropAnimation","dropAnimationConfig","wrapperElement","zIndex","modifiedTransform","wrapped","SunLight","DirectionalLight","opts","timestamp","getProjectedLight","layer","viewport","resolution","z","getSunDirection","latitude","longitude","LayerExtension","hasOwnProperty","call","extensionName","equals","extension","deepEqual","getShaders","getSubLayerProps","defaultProps","newProps","updateTriggers","propDef","propValue","getSubLayerAccessor","initializeState","updateState","params","onNeedsRedraw","getNeedsPickingBuffer","draw","finalizeState","project","vs","inject","injection","picking","assert","condition","message","Tesselator","typedArrayManager","defaultTypedArrayManager","_attributeDefs","updateGeometry","assign","buffers","getGeometry","geometryBuffer","positionFormat","dataChanged","normalize","positionSize","size","startIndices","getGeometryFromBuffer","positions","dataRange","_rebuildGeometry","updatePartialGeometry","startRow","endRow","ArrayBuffer","isView","getAccessorFromBuffer","offset","stride","_allocate","instanceCount","copy","release","def","allocate","_forEachGeometry","visitor","iterable","objectInfo","createIterable","object","indexStarts","vertexStarts","Infinity","normalizedData","geometry","dataIndex","normalizedGeometry","normalizeGeometry","getGeometrySize","Buffer","byteStride","accessor","byteLength","buffer","bufferValue","elementStride","BYTES_PER_ELEMENT","vertexStart","indexStart","vertexEnd","geometrySize","geometryIndex","updateGeometryAttributes","vertexCount","GridCellLayer","ColumnLayer","diskResolution","CubeGeometry","uniforms","elevationScale","extruded","coverage","cellSize","angle","radiusUnits","model","setUniforms","radius","UNIT","edgeDistance","isWireframe","TripsLayer","PathLayer","shaders","getAttributeManager","addInstanced","timestamps","shaderAttributes","instanceTimestamps","vertexOffset","instanceNextTimestamps","fadeTrail","trailLength","currentTime","getTimestamps","d","LINEARLY_INTERPOLATED_PROPS","bearing","pitch","DEFAULT_OPTS","curve","FlyToInterpolator","TransitionInterpolator","compare","extract","required","interpolateProps","startProps","endProps","t","flyToViewport","lerp","getDuration","transitionDuration","getFlyToDuration","_typeof","assertThisInitialized","createMat4","mod","divisor","modulus","getCameraPosition","viewMatrixInverse","getFrustumPlanes","viewProjectionMatrix","getFrustumPlane","near","far","scratchVector","Vector3","c","L","len","normal","fp64LowPart","fround","scratchArray","toDoublePrecisionArray","typedArray","startIndex","endIndex","count","Float32Array","sourceIndex","targetIndex","j","subarray","mergeBounds","boundsList","mergedBounds","isMerged","bounds","loggers","register","handlers","debug","eventType","arg1","arg2","arg3","deckLog","level","ViewManager","views","viewState","controllers","timeline","_viewports","_viewportMap","_isUpdating","_needsRedraw","_needsUpdate","_eventManager","eventManager","_eventCallbacks","onViewStateChange","onInteractionStateChange","seal","setProps","finalize","controller","needsRedraw","clearRedrawFlags","redraw","setNeedsUpdate","reason","updateViewStates","viewId","updateTransition","getViewports","containsPixel","getViews","viewMap","view","getView","find","getViewState","viewOrViewId","getViewStateId","filterViewState","getViewport","unproject","xyz","viewports","pixel","i","p","_setViews","_setViewState","_setSize","_update","_rebuildViewports","flatten","_diffViews","log","warn","_onViewStateChange","_createController","Controller","onStateChange","makeViewport","_updateController","controllerProps","resolvedProps","oldControllers","invalidateControllers","oldController","hasController","unshift","_buildViewportMap","newViews","oldViews","_","DEFAULT_LIGHTING_EFFECT","LightingEffect","EffectManager","effects","_setEffects","addDefaultEffect","effect","defaultEffects","_defaultEffects","e","findIndex","compareEffects","e2","splice","getEffects","_resolvedEffects","oldEffectsMap","nextEffects","oldEffect","removedEffectId","NO_PICKED_OBJECT","pickedColor","pickedObjectIndex","getClosestObject","pickedColors","decodePickingColor","deviceX","deviceY","deviceRadius","deviceRect","minSquareDistanceToCenter","closestPixelIndex","row","dy2","col","d2","pickedObject","floor","pickedX","pickedY","error","getEmptyPickingInfo","pickInfo","pixelRatio","coordinate","pickedViewport","getViewportFromCoordinates","pickedViewports","color","picked","devicePixel","processPickInfo","lastPickedInfo","mode","layers","pickedLayer","affectedLayers","lastPickedPixelIndex","lastPickedLayerId","layerId","pickedLayerId","lastPickedLayer","info","baseInfo","infos","getLayerPickingInfo","rootLayer","updateAutoHighlight","sourceLayer","getPickingInfo","parent","DeckPicker","gl","pickLayersPass","PickLayersPass","layerFilter","_pickable","pickingFBO","depthFBO","pickObject","_pickClosestObject","pickObjects","_pickVisibleObjects","getLastPickedObject","lastPickedViewportId","l","v","_resizeBuffer","Framebuffer","isSupported","colorBufferFloat","Texture2D","format","isWebGL2","resize","canvas","_getPickable","pickableLayers","shouldDrawLayer","isComposite","depth","unproject3D","onViewportActive","cssToDeviceRatio","result","emptyInfo","devicePixelRange","cssToDevicePixels","round","_getPickingRect","deviceWidth","deviceHeight","cullRect","_drawAndSample","pass","pickedColors2","disablePickingIndex","restorePickingColors","maxObjects","leftTop","deviceLeft","deviceTop","rightBottom","deviceRight","deviceBottom","pickInfos","uniqueColors","colorKey","join","has","getUniqueObjects","uniqueInfos","isMaxObjects","isFinite","pickZ","preRenderStats","useInPicking","preRender","render","Uint8Array","readPixelsToArray","sourceX","sourceY","sourceWidth","sourceHeight","defaultStyle","pointerEvents","backgroundColor","Tooltip","canvasParent","el","appendChild","setTooltip","displayInfo","innerText","isVisible","text","html","innerHTML","initialViewState","pickingRadius","glOptions","parameters","useDevicePixels","eventRecognizerOptions","_framebuffer","_animate","_typedArrayManagerProps","_customRender","onWebGLInitialized","onResize","onBeforeRender","onAfterRender","onLoad","onError","cause","onHover","onClick","onDrag","_onMetrics","getCursor","getTooltip","drawPickingColors","Deck","_pickRequest","leftButton","rightButton","pos","offsetCenter","layerManager","mousePosition","eventOptions","EVENTS","getLayers","deckPicker","_lastPointerDownInfo","layerHandler","rootHandler","handled","pickedInfo","_pick","cursorState","isHovering","getBrowser","_createCanvas","animationLoop","_createAnimationLoop","stats","Stats","metrics","fps","setPropsTime","updateAttributesTime","framesRedrawn","pickTime","pickCount","gpuTime","gpuTimePerFrame","cpuTime","cpuTimePerFrame","bufferMemory","textureMemory","renderbufferMemory","gpuMemory","_metricsCounter","setOptions","stop","viewManager","effectManager","deckRenderer","destroy","tooltip","removeChild","timeStart","removed","_setCanvasSize","_getViews","_getViewState","activateViewport","timeEnd","viewManagerNeedsRedraw","layerManagerNeedsRedraw","effectManagerNeedsRedraw","deckRendererNeedsRedraw","redrawReason","incrementCount","_drawLayers","getCanvas","pickMultipleObjects","_addResources","resources","forceUpdate","resourceManager","resourceId","_removeResources","resourceIds","_addDefaultEffect","method","statKey","getElementById","cssWidth","cssHeight","_updateCanvasSize","newWidth","newHeight","AnimationLoop","autoResizeDrawingBuffer","autoResizeViewport","onCreateContext","createGLContext","onContextLost","_onContextLost","onInitialize","_setGLContext","onRender","_onRenderFrame","MapView","_pickAndCallback","_updateCursor","cursor","instrumentGLContext","enable","copyState","setParameters","blend","blendFunc","polygonOffsetFill","depthTest","depthFunc","Timeline","play","attachTimeline","EventManager","recognizerOptions","pointerdown","_onPointerDown","pointermove","_onPointerMove","pointerleave","on","_onEvent","_onInteractionStateChange","LayerManager","deck","DeckRenderer","renderOptions","renderLayers","animationProps","_getFrameStats","_getMetrics","reset","table","updateLayers","interactionState","animationLoopStats","addTime","lastTiming","getHz","time","getAverageTime","memoryStats","lumaStats","VERSION","waitForGLTFAssets","gltfObjects","remaining","scenes","scene","traverse","getUniforms","uniform","loaded","waitWhileCondition","DEFAULT_COLOR","scenegraph","getScene","gltf","getAnimator","animator","_animations","sizeScale","sizeMinPixels","sizeMaxPixels","MAX_SAFE_INTEGER","getPosition","getColor","_lighting","_imageBasedLightingEnvironment","getOrientation","getScale","getTranslation","getTransformMatrix","loaders","GLTFLoader","ScenegraphLayer","Layer","modules","project32","pbr","fs","instancePositions","fp64","use64bitPositions","instanceColors","colorFormat","normalized","instanceModelMatrix","MATRIX_ATTRIBUTES","oldProps","_updateScenegraph","_applyAnimationsProp","_deleteScenegraph","scenegraphData","ScenegraphNode","createGLTFObjects","_getModelOptions","setNeedsRedraw","deprecated","_applyAllAttributes","setState","attributesAvailable","allAttributes","getAttributes","_setModelAttributes","animationsProp","animations","getAnimations","number","findResult","env","waitForFullLoad","imageBasedLightingEnvironment","modelOptions","isInstanced","transpileToGLSL100","useTangents","updateAttributes","changedAttributes","moduleParameters","getTime","coordinateSystem","numInstances","getNumInstances","worldMatrix","setInstanceCount","updateModuleSettings","composeModelMatrix","shouldComposeModelMatrix","sceneModelMatrix","u_Camera","project_uCameraPosition","DEFAULT_INDICES","Uint16Array","DEFAULT_TEX_COORDS","createMesh","Float64Array","indices","texCoords","createQuad","maxXSpan","maxYSpan","uCount","ceil","vCount","Uint32Array","vertex","u","ut","vt","interpolateQuad","quad","image","_imageCoordinateSystem","COORDINATE_SYSTEM","DEFAULT","desaturate","transparentColor","tintColor","textureParameters","ignore","BitmapLayer","attributeManager","isIndexed","update","attribute","mesh","noAlloc","changeFlags","extensionsChanged","_getModel","invalidateAll","oldMesh","_createMesh","setVertexCount","invalidate","_getCoordinateUniforms","bitmap","uv","fracUV","unpackUVsFromRGB","disablePicking","_updateAutoHighlight","encodePickingColor","normalizedBounds","isRectangularBounds","Model","Geometry","drawMode","coordinateConversion","pickingActive","bitmapTexture","LNGLAT","CARTESIAN","imageCoordinateSystem","defaultImageCoordinateSystem","bottomLeft","lngLatToWorld","topRight","getSourcePosition","sourcePosition","getTargetPosition","targetPosition","getSourceColor","getTargetColor","getWidth","getHeight","getTilt","greatCircle","numSegments","widthUnits","widthScale","widthMinPixels","widthMaxPixels","ArcLayer","getBounds","instanceSourcePositions","instanceTargetPositions","instanceSourceColors","instanceTargetColors","instanceWidths","instanceHeights","instanceTilts","propsChanged","wrapLongitude","useShortestPath","LineLayer","RADIAN_TO_DEGREE","PI","IJToST","ij","offsets","maxSize","singleSTtoUV","st","STToUV","FaceUVToXYZ","face","XYZToLngLat","lat","atan2","rotateAndFlipQuadrant","n","rx","ry","getS2QuadKey","token","paddedToken","padEnd","Long","fromString","getIdFromToken","idS","bin","FACE_BITS","lsbIndex","lastIndexOf","faceB","substring","posB","levelN","faceS","posS","toHilbertQuadkey","getS2Polygon","ptIndex","prevLng","nextOffset","stepI","stepJ","lngLat","deltaLng","getGeoBounds","hilbertQuadkey","parts","parseInt","maxLevel","bit","val","FromHilbertQuadKey","S2Layer","GeoCellLayer","indexToBounds","getS2Token","_normalize","getPolygon","DEFAULT_NORMAL","sizeUnits","pointSize","getNormal","material","radiusPixels","deprecatedFor","PointCloudLayer","gouraudLighting","instanceNormals","header","POSITION","NORMAL","COLOR_0","normalizeData","cos","sin","validateGeometryAttributes","useMeshColors","colors","constant","texture","_useMeshColors","_instanced","wireframe","SimpleMeshLayer","defines","hasFeature","FEATURES","GLSL_DERIVATIVES","DERIVATIVES_AVAILABLE","phongLighting","positionBounds","boundingBox","getMeshBoundingBox","emptyTexture","getModel","hasNormals","normals","setTexture","setDrawMode","flatShading","sampler","hasTexture","ScreenPass","Pass","ClipSpace","drawingBufferWidth","drawingBufferHeight","withParameters","framebuffer","outputBuffer","clearColor","_renderPass","inputBuffer","clear","moduleSettings","texSize","depthWrite","PostProcessEffect","normalizeShaderModule","postRender","passes","getFragmentShaderForRenderPass","idn","createPasses","swapBuffer","switchBuffer","func","FILTER_FS_TEMPLATE","SAMPLER_FS_TEMPLATE","_extends","arguments","source","apply","earcut","holeIndices","dim","minX","minY","maxX","maxY","invSize","hasHoles","outerLen","outerNode","linkedList","triangles","next","prev","list","steiner","getLeftmost","compareX","eliminateHole","eliminateHoles","earcutLinked","clockwise","last","signedArea","insertNode","removeNode","filterPoints","again","area","ear","zOrder","prevZ","nextZ","q","tail","numMerges","pSize","qSize","inSize","sortLinked","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","ax","bx","cx","ay","by","cy","x0","y0","x1","y1","pointInTriangle","minZ","maxZ","intersects","locallyInside","isValidDiagonal","splitPolygon","hole","bridge","m","hx","hy","qx","tan","mx","my","tanMin","sectorContainsSector","findHoleBridge","bridgeReverse","leftmost","px","py","intersectsPolygon","inside","middleInside","r","q1","q2","o1","o2","o3","o4","onSegment","num","a2","Node","b2","an","bp","sum","default","deviation","polygonArea","trianglesArea","vertices","holes","holeIndex","Tile2DHeader","isSelected","content","_loader","_abortController","_loaderId","_isLoaded","_isCancelled","_needsReload","_bbox","west","south","east","north","isLoading","console","getData","requestScheduler","bbox","userData","zoom","loaderId","AbortController","signal","requestToken","scheduleRequest","tile","done","tileData","err","loadData","_loadData","setNeedsReload","abort","isLoaded","defaultGetValue","points","defaultGetPoints","defaultGetIndex","ascending","NaN","getValue","getPoints","getIndex","filterData","BinSorter","bins","aggregatedBins","getAggregatedBins","_updateMinMaxValues","binMap","getBinMap","hasFilter","binCount","binIndex","filteredPoints","counts","_percentileToIndex","percentileRange","sortedBins","lower","upper","clamp","maxCount","maxValue","minValue","totalCount","getValueRange","lowerIdx","upperIdx","idxRange","getValueDomainByScale","indexEdge","_getScaleDomain","scaleType","getQuantileDomain","getOrdinalDomain","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","msGridRow","msGridRowSpan","msGridColumn","msGridColumnSpan","fontWeight","lineHeight","orphans","tabSize","widows","WebkitLineClamp","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","_toConsumableArray","arrayLikeToArray","iter","Symbol","iterator","unsupportedIterableToArray","reactPropsRegex","fn","cache","arg","prop","charCodeAt","isEqual","STRATEGY_DEFAULT","STRATEGIES","allTiles","getPlaceholderInAncestors","getPlaceholderInChildren","sortedTiles","t1","t2","child","DEFAULT_TILESET2D_PROPS","extent","tileSize","maxZoom","minZoom","maxCacheSize","maxCacheByteSize","refinementStrategy","zRange","maxRequests","zoomOffset","onTileLoad","onTileUnload","onTileError","Tileset2D","compute","cachedResult","cachedArgs","memoize","getCullBounds","_cacheByteSize","_resizeCache","_requestScheduler","RequestScheduler","throttleRequests","_cache","_tiles","_dirty","_viewport","_selectedTiles","_frameNumber","_modelMatrix","Matrix4","_modelMatrixInverse","every","needsReload","_maxZoom","_minZoom","reloadAll","modelMatrix","modelMatrixAsMatrix4","isModelMatrixNew","_zRange","_getTile","clone","invert","tileIndices","getTileIndices","modelMatrixInverse","_rebuildTree","changed","updateTileStates","_pruneRequests","isTileVisible","boundsArr","_getCullBounds","overlaps","getTileId","getTileZoom","getTileMetadata","tileToBoundingBox","getParentIndex","visibilities","abortCandidates","ongoingRequestCount","shift","_getNearestAncestor","selectedTiles","getTileData","startTile","checkNumber","checkVector","callerName","validateVector","_slicedToArray","_arr","_n","_d","_e","_s","_i","arrayMove","array","to","newArray","arraySwap","getSortedRects","items","isValidIndex","defaultScale","horizontalListSortingStrategy","fallbackActiveRect","activeIndex","overIndex","itemGap","previousRect","nextRect","getItemGap","newIndexRect","rectSortingStrategy","newRects","oldRect","rectSwappingStrategy","verticalListSortingStrategy","overIndexRect","clientRects","Context","containerId","disableTransforms","useDragOverlay","sortedRects","SortableContext","userDefinedItems","disabledProp","item","previousItemsRef","itemsHaveChanged","itemsEqual","normalizeDisabled","contextValue","defaultNewIndexGetter","defaultAnimateLayoutChanges","isSorting","wasDragging","newIndex","previousItems","previousContainerId","disabledTransition","Transition","defaultAttributes","useSortable","animateLayoutChanges","userDefinedAttributes","localDisabled","customData","getNewIndex","localStrategy","globalDisabled","globalStrategy","normalizeLocalDisabled","sortable","itemsAfterCurrentSortable","setDroppableNodeRef","setDraggableNodeRef","useCombinedRefs","displaceItem","shouldDisplaceDragSource","dragSourceDisplacement","shouldAnimateLayoutChanges","derivedTransform","useDerivedTransform","setDerivedtransform","previousIndex","getTransition","hasSortableData","directions","sortableKeyboardCoordinates","filteredContainers","closestId","activeDroppable","newDroppable","newNode","hasDifferentScrollAncestors","hasSameContainer","isSameContainer","isAfterActive","isAfter","rectCoordinates","_setPrototypeOf","o","__proto__","AwaitValue","AsyncGenerator","gen","front","back","resume","wrappedAwait","settle","reject","_invoke","request","asyncIterator","getPrototypeOf","asyncGeneratorStep","_next","_throw","aKeys","bKeys","DEGREES_TO_RADIANS","IDENTITY","ZERO_VECTOR","DEFAULT_DISTANCE_SCALES","unitsPerMeter","metersPerUnit","Viewport","displayName","distanceScales","focalDistance","isGeospatial","_initProps","_initMatrices","projectPosition","unprojectPosition","projectFlat","unprojectFlat","PROJECTION_MODE","WEB_MERCATOR","WEB_MERCATOR_AUTO_OFFSET","projectionMatrix","viewMatrix","topLeft","worldPosition","coord","worldToPixels","pixelProjectionMatrix","y2","targetZ","targetZWorld","pixelsToWorld","pixelUnprojectionMatrix","X","Y","Z","worldToLngLat","unprojectOption","bottomRight","getDistanceScales","coordinateOrigin","highPrecision","_frustumPlanes","panByPosition","coords","getMeterZoom","log2","meterOffset","transformAsVector","center","orthographic","fovyRadians","fovy","viewMatrixUncentered","multiplyRight","negate","aspect","matrix","perspective","offsetX","offsetY","createProjectionMatrix","vpm","mat4","cameraPosition","viewportMatrix","padArrayChunk","sourceLength","targetLength","datum","DEFAULT_TRANSITION_SETTINGS","interpolation","spring","stiffness","damping","normalizeTransitionSettings","userSettings","layerSettings","getSourceBufferAttribute","getBuffer","settings","getAttributeTypeFromSize","cycleBuffers","getAttributeBufferLength","doublePrecision","multiplier","padBuffer","fromLength","fromStartIndices","precisionMultiplier","byteOffset","toStartIndices","hasStartIndices","toLength","isConstant","toData","srcByteOffset","getter","chunk","normalizeConstant","getMissingData","sourceStartIndices","targetStartIndices","getChunkData","nextSourceIndex","nextTargetIndex","padArray","reallocate","subData","EMPTY_ARRAY","placeholderArray","isAsyncIterable","nested","bytesPerElement","elementOffset","DEFAULT_PROPS","DEFAULT_REQUIRED_PROPS","LinearInterpolator","transitionProps","normalizedOpts","initializeProps","around","startViewport","endViewport","aroundPosition","propsInTransition","_propsToExtract","arrayWithoutHoles","iterableToArray","nonIterableSpread","WINDING","CLOCKWISE","COUNTER_CLOCKWISE","modifyPolygonWindingDirection","getPolygonSignedArea","getPolygonWindingDirection","numPoints","numSwaps","b1","tmp","reversePolygon","isDuplicate","getPointAtIndex","out","startI","intersect","edge","snap","bitCode","cutPolylineByGrid","broken","gridResolution","gridOffset","part","codeB","cell","getGridCell","scratchPoint","codeAlt","moveToNeighborCell","concatInPlace","arr1","arr2","cutPolygonByGrid","edgeTypes","types","getBoundingBox","bisectPolygon","polygonLow","polygonHigh","polygon","resultLow","resultHigh","typesLow","typesHigh","side","prevSide","prevType","lowPointCount","highPointCount","cutPolylineByMercatorBounds","newPositions","wrapLongitudesForShortestPath","shiftLongitudesIntoRange","cutPolygonByMercatorBounds","newHoleIndices","srcStartIndex","ringIndex","srcEndIndex","targetStartIndex","splitIndex","findSplitIndex","insertPoleVertices","maxLatitude","pop","maxLat","pointIndex","firstLng","lastLng","lng","refLng","pointCount","MathArray","fromArray","ELEMENTS","check","targetArray","arrayOrObject","fromObject","toObject","toTarget","toFloat32Array","formatString","string","formatValue","printTypes","exactEquals","ai","vector","minVector","maxVector","vectors","multiplyByScalar","scalar","validate","valid","sub","setScalar","addScalar","subScalar","multiplyScalar","divideScalar","clampScalar","Matrix","printRowMajor","RANK","getElementIndex","getElement","getColumn","columnIndex","firstIndex","setColumn","columnVector","EPSILON","ARRAY_TYPE","random","multiply","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","a30","a31","a32","a33","b0","b3","hypot","nf","f","ortho","lr","bt","vec","INDICES","DEFAULT_FOVY","DEFAULT_ASPECT","DEFAULT_NEAR","DEFAULT_FAR","IDENTITY_MATRIX","getIdentityMatrix","ZERO","getZeroMatrix","identity","m00","m10","m20","m30","m01","m11","m21","m31","m02","m12","m22","m32","m03","m13","m23","m33","setRowMajor","toRowMajor","fromQuaternion","quaternion","x2","z2","xx","yx","yy","zx","zy","zz","wx","wy","wz","frustum","column0Row0","column1Row1","column2Row0","column2Row1","column3Row2","computeInfinitePerspectiveOffCenter","rl","tb","lookAt","eye","up","z0","z1","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","checkRadians","halfY","determinant","getRotation","scaleResult","inverseScale0","inverseScale1","inverseScale2","getRotationMatrix3","transpose","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","multiplyLeft","rotateX","radians","rad","s","rotateY","rotateZ","rotateXYZ","angleXYZ","rotateAxis","b12","b20","b21","b22","factor","vec4","transformAsPoint","vec2","vec3","vec2_transformMat4AsVector","vec3_transformMat4AsVector","transformPoint","transformVector","transformDirection","makeRotationX","makeTranslation","possiblyDegrees","filterRange","filterEnabled","filterTransformSize","filterTransformColor","filterSoftRange","filter_min","filter_softMin","filter_softMax","filter_max","filter_enabled","filter_useSoftMargin","filter_transformSize","filter_transformColor","shaderModule","shaderModule64","min64High","filter_min64High","max64High","filter_max64High","blendEquation","DATA_TYPE_FROM_SIZE","1","2","3","4","DataFilterExtension","filterSize","countItems","DATAFILTER_TYPE","DATAFILTER_DOUBLE","filterValues","instanceFilterValues","useFloatTarget","getExtension","aggregator","filterIndices","__source","filterPrevIndices","filterFBO","attachments","mipmaps","filterModel","shaderOptions","NON_INSTANCED_MODEL","FLOAT_TARGET","filterNeedsUpdate","needsUpdate","onFilteredItemsChange","setAttributes","getShaderAttributes","getFilterValue","optional","getGridOffset","convertToMeters","xOffset","yOffset","yMin","yMax","calculateGridLatLonOffset","nop","colorDomain","colorRange","defaultColorRange","getColorValue","getColorWeight","colorAggregation","lowerPercentile","upperPercentile","colorScaleType","onSetColorDomain","elevationDomain","elevationRange","getElevationValue","getElevationWeight","elevationAggregation","elevationLowerPercentile","elevationUpperPercentile","elevationScaleType","onSetElevationDomain","gridAggregator","aggregationParams","hashInfo","projectPoints","getAccessor","positionAttribute","numInstance","xMin","xMax","getPositionBoundingBox","posOffset","gridHash","numCol","numRow","pt","yIndex","xIndex","lonIdx","latIdx","pointsToGridHashing","idxs","getGridLayerDataFromGridHash","_filterData","CPUGridLayer","AggregationLayer","cpuAggregator","CPUAggregator","getAggregator","getCellSize","aggregatorState","_onGetSublayerColor","_onGetSublayerElevation","_getSublayerUpdateTriggers","getUpdateTriggers","transitions","SubLayerClass","getSubLayerClass","getFillColor","getElevation","layerData","TARGET","custom","source_target","brushingEnabled","brushingRadius","brushingTarget","brushing_enabled","brushing_radius","brushing_target","brushing_mousePos","BrushingExtension","brushingTargets","instanceBrushingTargets","onMouseMove","getCurrentLayer","off","getBrushingTarget","hexagonAggregator","centerLngLat","getPointsCenter","radiusCommon","getRadiusInCommon","screenPoints","posIndex","screenCoord","hexagons","hexbin","newHexbin","hex","HexagonLayer","propsOrDataChanged","hexagonVertices","convertLatLngToMeterOffset","vertex0","vertex3","centroid","centroidFlat","vtFlat","dashShaders","offsetShaders","PathStyleExtension","dash","highPrecisionDash","isEnabled","mergeShaders","instanceDashArrays","instanceDashOffsets","getDashOffsets","instanceOffsets","dashAlignMode","dashJustified","dashGapPickable","path","isNested","prevP","dist","getDashArray","getOffset","precision","printDegrees","DataView","epsilon","oldEpsilon","cross","az","bz","transformMat4","transformMat3","transformQuat","qy","qz","qw","uvx","uvy","uvz","uuvx","uuvy","uuvz","w2","mag","cosine","dot","acos","flattenArray","fillArray","total","copied","copyWithin","NO_TRANSITION_PROPS","INERTIA_EASING","EVENT_TYPES","pinchEventWorkaround","transitionManager","TransitionManager","getControllerState","ControllerState","_onTransition","_setInteractionState","handleEvent","customEvents","toggleEvents","_customEvents","_events","_controllerState","eventStartBlocked","_eventStartBlocked","_onPanStart","_onPan","_onPanEnd","_onPinchStart","_onPinch","_onPinchEnd","_onTriplePanStart","_onTriplePan","_onTriplePanEnd","_onDoubleTap","_onWheel","_onKeyDown","getCenter","isPointInBounds","isFunctionKeyPressed","srcEvent","metaKey","altKey","ctrlKey","shiftKey","_interactionState","blockEvents","timer","dragMode","transitionInterpolator","_getTransitionProps","processViewStateChange","inertia","scrollZoom","dragPan","dragRotate","doubleClickZoom","touchZoom","touchRotate","keyboard","isInteractive","eventNames","updateViewport","newControllerState","extraProps","getViewportProps","controllerState","getState","oldViewState","newStates","alternateMode","invertPan","_panMove","_onPanMove","_onPanRotate","_onPanMoveEnd","_onPanRotateEnd","pan","isPanning","velocity","endPos","velocityX","velocityY","panEnd","transitionEasing","rotate","isRotating","rotateEnd","smooth","exp","isZooming","rotateStart","deltaX","zoomStart","_startPinchRotation","rotation","_lastPinchEvent","deltaAngleX","velocityZ","deltaTime","endScale","zoomEnd","isZoomOut","funcKey","zoomSpeed","moveSpeed","rotateSpeedX","rotateSpeedY","zoomOut","zoomIn","rotateLeft","moveLeft","rotateRight","moveRight","rotateUp","moveUp","rotateDown","moveDown","PERCENT_OR_PIXELS_REGEX","parsePosition","relative","match","exec","View","viewportInstance","_x","_y","_width","_height","_padding","ViewportType","viewportDimensions","getDimensions","newViewState","ControllerType","arrayWithHoles","iterableToArrayLimit","nonIterableRest","toPrecision","OUTER_POLYGON_WINDING","HOLE_POLYGON_WINDING","windingOptions","isClosed","getPositions","getHoleIndices","copyNestedRing","simplePolygon","windingDirection","p0","isNestedRingClosed","copyFlatRing","srcLength","isFlatRingClosed","srcPositions","srcHoleIndices","isSimple","polygonIndex","getPlaneArea","numVerts","permutePositions","getSurfaceIndices","preproject","full3d","positionIndex","is3d","xy","xyArea","xzArea","yzArea","overAlloc","poolSize","initialize","Type","newSize","_release","sizeToAllocate","pool","_pool","PolygonLayer","CompositeLayer","filled","stroked","lineWidthUnits","lineWidthScale","lineWidthMinPixels","lineWidthMaxPixels","lineJointRounded","lineMiterLimit","lineDashJustified","getLineColor","getLineWidth","CellLayer","boundsUpdateTriggers","boundsProps","_inProgress","_handle","_timeline","removeChannel","onInterrupt","addChannel","_onUpdate","onUpdate","isFinished","_classCallCheck","instance","Constructor","_defineProperties","descriptor","_createClass","protoProps","staticProps","_defineProperty","Vector","lengthSquared","magnitude","magnitudeSquared","mathArray","distanceSquared","product","divide","lengthSq","distanceTo","distanceToSquared","getComponent","setComponent","addVectors","subVectors","multiplyVectors","addScaledVector","ORIGIN","origin","matrix4","transformByMatrix3","matrix3","transformByMatrix2","matrix2","vec3_transformMat2","transformByQuaternion","LayersPass","clearStack","clearCanvas","targetFramebuffer","clearGLCanvas","_lastRenderIndex","renderStats","drawLayerParams","_getDrawLayerParams","subViewports","subViewport","_drawLayersInViewport","isPicking","evaluateShouldDrawOnly","indexResolver","layerIndexResolver","layerIndices","resolvers","resolveLayerIndex","isDrawn","indexOverride","_offset","parentId","resolver","drawContext","renderPass","layerFilterCache","layerIndex","_shouldDrawLayer","layerParam","layerRenderIndex","_getModuleParameters","layerParameters","getLayerParameters","globalModuleParameters","glViewport","useTarget","devicePixelRatio","getGLViewport","clearOpts","scissorTest","scissor","renderStatus","visibleCount","compositeCount","pickableCount","pickable","_drawLayer","raiseError","getModuleParameters","visible","filterSubLayer","rootLayerId","overrides","internalState","autoWrapLongitude","refs","elementString","ownerDocument","defaultView","Document","SVGElement","useLayoutEffect","handlerRef","intervalRef","setInterval","clearInterval","valueRef","newValue","onChange","onChangeHandler","prefix","createAdjustmentFn","valueAdjustment","hasViewportRelativeCoordinates","KeyboardEvent","isTouchEvent","TouchEvent","clientX","clientY","changedTouches","Translate","Scale","SELECTOR","matches","querySelector","DEFAULT_LIGHT_COLOR","DEFAULT_LIGHT_INTENSITY","DEFAULT_LIGHT_DIRECTION","idCount","intensity","_shadow","shadow","TilesetClass","dataComparator","urlType","equal","renderSubLayers","GeoJsonLayer","onViewportLoad","TileLayer","tileset","shouldUpdateState","somethingChanged","updateTriggersChanged","all","_getTilesetOptions","tiles","_updateTileset","_onTileLoad","_onTileError","_onTileUnload","frameNumber","loadingStateChanged","tilesetChanged","_onViewportLoad","fetch","url","getURLFromTemplate","propName","getSubLayerPropsByTile","sourceTile","subLayerProps","PathTesselator","segmentTypes","Uint8ClampedArray","attributeName","flatPath","normalizePath","isCut","subPath","getPathLength","_updateSegmentTypes","_updatePositions","isPathClosed","getPointOnPath","loop","lastPointIndex","jointRounded","capRounded","miterLimit","billboard","_pathType","getPath","rounded","ATTRIBUTE_TRANSITION","enter","calculatePositions","instanceLeftPositions","instanceStartPositions","instanceEndPositions","instanceRightPositions","instanceTypes","calculateSegmentTypes","instanceStrokeWidths","instancePickingColors","pathTesselator","objectIndex","_disablePickingIndex","jointType","capType","COORDINATE_SYSTEM_GLSL_CONSTANTS","PROJECTION_MODE_GLSL_CONSTANTS","UNIT_GLSL_CONSTANTS","toUpperCase","INITIAL_MODULE_OPTIONS","fp32","projectShader","getUniformsFromViewport","WebMercatorViewport","nearZMultiplier","farZMultiplier","nearZ","farZ","repeat","worldOffset","legacyMeterSizes","altitude","projectionParameters","altitudeToFovy","fovyToAltitude","getProjectionParameters","getViewMatrix","_subViewports","_pseudoMeters","minOffset","maxOffset","offsetViewport","addMetersToLngLat","lngLatZ","fromLocation","toLocation","newCenter","fitBounds","PICKING_PARAMETERS","_drawPickingBuffer","colorEncoderState","_resetColorEncoder","depthMask","depthRange","colorMask","_colorEncoderState","decodeColor","operation","pickingAttribute","lightSources","pickParameters","blendColor","encoded","byLayer","byAlpha","encodeColor","MapState","ViewState","maxPitch","minPitch","startPanLngLat","startZoomLngLat","startRotatePos","startBearing","startPitch","startZoom","panStart","_getUpdatedState","_unproject","startPos","deltaAngleY","newRotation","_getNewRotation","zoomedViewport","_zoomFromCenter","_panFromCenter","shortestPathFrom","fromProps","applyConstraints","normalizeViewportProps","deltaY","centerY","startY","deltaScaleX","deltaScaleY","MapController","_propsToCompare","_requiredProps","arePropsEqual","currentProps","nextProps","startViewStateProps","endViewStateProps","_checkRequiredProps","PolygonTesselator","IndexType","vertexValid","externalIndices","normalizedPolygon","Polygon","subPolygon","_updateIndices","_updateVertexValid","polygonPositions","main","_windingOrder","_full3d","SolidPolygonLayer","vsTop","vsSide","RING_WINDING_ORDER_CW","polygonTesselator","hasFeatures","ELEMENT_INDEX_UINT32","calculateIndices","nextPositions","calculateVertexValid","elevations","instanceElevations","fillColors","instanceFillColors","lineColors","instanceLineColors","pickingColors","topModel","sideModel","renderUniforms","updateParams","models","_getModels","vertexPositions","isSideVertex","excludeAttributes","DEFAULT_ATTENUATION","DEFAULT_LIGHT_POSITION","PointLight","attenuation","getAttenuation","projectedLight","fromCoordinateSystem","fromCoordinateOrigin","CameraLight","orbitAxis","rotationX","rotationOrbit","projectionScale","OrbitViewport","projectedCenter","nextCenter","getProjectionMatrix","OrthographicViewport","flipY","zoomX","zoomY","zoom_","SphericalCoordinates","phi","theta","radiusScale","other","degrees","fromLngLatZ","fromVector3","toVector3","makeSafe","FirstPersonViewport","dir","FirstPersonState","startZoomPosition","getDirection","_move","fromPosition","use2D","FirstPersonController","FirstPersonView","OrbitState","minRotationX","maxRotationX","startPanPosition","startRotationX","startRotationOrbit","startPosition","newZoom","_calculateNewZoom","OrbitController","OrbitView","OrthographicState","zoomAxis","deltaZoom","newZoomX","newZoomY","OrthographicController","OrthographicView","GlobeState","GlobeController","GlobeView","GlobeViewport","DEFAULT_TEXTURE_PARAMETERS","resizeImage","ctx","imageData","maxWidth","maxHeight","resizeRatio","clearRect","drawImage","getIconId","icon","buildRowMapping","mapping","IconManager","_texture","getTexture","_externalTexture","getIconMapping","_autoPacking","_mapping","loadOptions","autoPacking","iconAtlas","iconMapping","_loadOptions","_textureParameters","_pendingCount","packIcons","getIcon","icons","cachedIcons","getDiffIcons","rowHeight","canvasHeight","canvasWidth","buildMapping","_buffer","_canvasWidth","_rowHeight","_xOffset","_yOffset","_canvasHeight","oldWidth","oldHeight","newTexture","copyToTexture","targetY","resizeTexture","_canvas","_loadIcons","getContext","willReadFrequently","load","iconDef","setSubImageData","generateMipmap","catch","finally","alphaCutoff","getSize","getAngle","getPixelOffset","onIconError","IconLayer","iconManager","_onError","instanceSizes","getInstanceOffset","instanceIconFrames","getInstanceIconFrame","instanceColorModes","getInstanceColorMode","instanceAngles","instancePixelOffset","prePacked","isAsyncPropLoading","iconsTexture","iconsTextureDim","evt","anchorX","anchorY","mask","getMemoizedViewportCenterPosition","getMemoizedViewProjectionMatrices","shadowMatrices","projectionMatrices","screenToCommonSpace","shadowMatrix","DEFAULT_SHADOW_COLOR","VECTOR_TO_POINT_MATRIX","drawToShadowMap","shadowMaps","shadowEnabled","shadow_uDrawShadowMap","shadow_uUseShadowMap","shadow_uColor","shadowColor","shadow_uLightId","shadowLightId","shadow_uLightCount","project_uCenter","projectCenters","viewProjectionMatrices","viewProjectionMatrixCentered","project_uCoordinateSystem","project_uProjectionMode","dummyShadowMap","createShadowUniforms","DEFAULT_PIXELS_PER_UNIT2","DEFAULT_COORDINATE_ORIGIN","getMemoizedViewportUniforms","projectionCenter","originCommon","cameraPosCommon","shaderCoordinateOrigin","geospatialOrigin","offsetMode","getOffsetOrigin","calculateMatrixAndOffset","viewportSize","projectionMode","project_uCoordinateOrigin","project_uCommonOrigin","project_uPseudoMeters","project_uViewportSize","project_uDevicePixelRatio","project_uFocalDistance","project_uCommonUnitsPerMeter","project_uCommonUnitsPerWorldUnit","project_uCommonUnitsPerWorldUnit2","project_uScale","project_uWrapLongitude","project_uViewProjectionMatrix","project_uModelMatrix","distanceScalesAtOrigin","METER_OFFSETS","unitsPerMeter2","LNGLAT_OFFSETS","unitsPerDegree","unitsPerDegree2","GLOBE","objectWithoutPropertiesLoose","excluded","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_viewportProps","_state","common","meters","pixels","click","panstart","panmove","panend","OPERATION","DRAW","MASK","TERRAIN","_possibleConstructorReturn","_getPrototypeOf","getSubLayers","subLayers","updateObject","shouldRenderSubLayer","subLayerId","DefaultLayerClass","_subLayerProps","overridingProps","getSubLayerRow","sourceObject","sourceObjectIndex","sublayerProps","getPolygonOffset","highlightedObjectIndex","autoHighlight","highlightColor","extensions","overridingSublayerProps","overridingSublayerTriggers","sublayerId","propTypes","PROP_TYPES_SYMBOL","subLayerPropTypes","_propTypes","propType","passThroughProps","_getAttributeManager","_postUpdate","shouldUpdate","subLayersList","domain","range","scaleFunction","getQuantizeScale","domainRange","step","idx","clampIdx","quantizeScale","getLinearScale","linearScale","getQuantileScale","sortedDomain","thresholds","lo","hi","mid","bisectRight","thresholdsScale","fraction","domainLength","domainFraction","lowIndex","low","getOrdinalScale","domainMap","uniqueDomain","ordinalScale","notNullOrUndefined","getTruthyValues","valueAccessor","results","unique","getScaleFunctionByScaleType","defaultLineColor","paths","getLineDashArray","geometryChanged","pathsDiff","replaceInRange","replace","_getPaths","_dataDiff","FillLayer","StrokeLayer","polygonLayer","RADIAN_PER_DEGREE","valueArray","calculateTransformMatrix","targetMatrix","orientation","yaw","roll","sr","sp","sw","cr","cp","cw","scx","scy","scz","getExtendedMat3FromMat4","instanceModelMatrix__LOCATION_0","instanceModelMatrix__LOCATION_1","instanceModelMatrix__LOCATION_2","instanceTranslation","arrayMatrix","constantMatrix","constantScale","constantOrientation","constantTranslation","hasMatrix","instanceModelMatrixData","_inherits","RANDOM","REF_POINTS_5","REF_POINTS_9","REF_POINTS_11","OSMNode","_children","cullingVolume","elevationBounds","boundingVolume","getBoundingVolume","insideBounds","computeVisibility","childVisible","selected","getSelected","refPoints","refPointPositions","osmTile2lngLat","makeOrientedBoundingBoxFromPoints","originX","originY","AxisAlignedBoundingBox","DEFAULT_EXTENT","value1","value2","transformBox","transformedCoords","template","regex","RegExp","String","isInteger","getCullBoundsInViewport","bounds0","bounds1","atan","tile2XY","getIdentityTileIndices","getIndexingCoords","transformedExtent","_GlobeViewport","planes","Plane","CullingVolume","elevationMin","elevationMax","minLng","minLat","maxLng","root","traversalParams","getOSMTileIndices","isURLTemplate","isGeoBoundingBox","HALF_EARTH_CIRCUMFERENCE","WGS84ToPseudoMercator","mercator","serviceType","srs","onMetadataLoad","onMetadataLoadError","onImageLoadStart","onImageLoad","onImageLoadError","requestId","WMSLayer","loadCounter","_nextRequestId","lastRequestId","imageSource","_createImageSource","_loadMetadata","debounce","loadImage","viewportChanged","lastRequestParameters","getFeatureInfoText","query_layers","info_format","ImageSource","createImageSource","metadata","getMetadata","getRequestId","requestParams","getImage","ms","_timeoutId","GreatCircleLayer","getQuadkeyPolygon","quadkey","quadkeyToWorldBounds","QuadkeyLayer","getQuadkey","H3ClusterLayer","H3HexagonLayer","_checkH3Lib","getHexagons","polygons","multiPolygon","h3SetToMultiPolygon","MeshLayer","featureIds","featureIdsPickingColors","calculateFeatureIdsPickingColors","pbrMaterial","updatePbrMaterialUniforms","pickFeatureIds","materialParser","parseMaterial","HAS_UV_REGIONS","uvRegions","unlit","pbrMetallicRoughness","baseColorTexture","GLTFMaterialParser","TEXCOORD_0","pbrDebug","lights","pickingColor","SINGLE_DATA","getPointColor","loader","Tiles3DLoader","onTilesetLoad","tileset3d","tileHeader","_getMeshColor","Tile3DLayer","layerMap","activeViewports","lastUpdatedViewports","_loadTileset","lastViewport","setChangeFlags","viewportId","viewportIds","layerCache","tilesetUrl","actualTilesetUrl","preload","preloadOptions","headers","tilesetJson","Tileset3D","viewportsNumber","selectTiles","_getSubLayer","oldLayer","TILE_TYPE","POINTCLOUD","_makePointCloudLayer","SCENEGRAPH","_make3DModelLayer","MESH","_makeSimpleMeshLayer","constantRGBA","cartographicOrigin","instances","getMeshGeometry","contentAttributes","DUMMY_DATA","elevationData","meshMaxError","elevationDecoder","rScaler","gScaler","bScaler","workerUrl","TerrainWorkerLoader","urlTemplateToUpdateTrigger","TerrainLayer","elevationDataChanged","isTiled","shouldReload","terrain","loadTerrain","getLoadOptions","skirtHeight","getTiledTerrainData","dataUrl","textureUrl","surface","ranges","bound","clipBounds","clipByInstance","shaderFunction","shaderModuleVs","injectionVs","shaderModuleFs","injectionFs","ClipExtension","clip_bounds","corner0","corner1","binaryToGeojson","globalFeatureId","dataArray","normalizeInput","lastIndex","lastValue","currValue","globalFeatureIds","parseFeature","getSingleFeature","parseFeatures","features","parseFeatureCollection","binaryToGeometry","ringToGeoJson","pointToGeoJson","pathIndices","multi","ringCoordinates","lineStringToGeoJson","polygonToGeoJson","polygonIndices","primitivePolygonIndices","startRingIndex","endRingIndex","startPolygonIndex","endPolygonIndex","polygonCoordinates","unexpectedInput","lines","parseType","numericProps","parseProperties","fields","parseFields","k","availableTransformations","Point","MultiPoint","multiPoint","LineString","MultiLineString","multiLineString","lineString","MultiPolygon","pointX","pointY","nw","se","g","line","polygonRing","GEOM_TYPES","findIndexByType","geomData","uniqueIdProperty","featureId","layerName","startFeatureIndex","endFeatureIndex","layerRange","__layers","layerNames","getLayerRange","featureIndex","vertexIndex","elem","__ids","getGlobalFeatureId","predicate","onDataLoad","highlightedFeatureId","MVTWorkerLoader","binary","MVTLayer","tileJSON","_updateTileData","_setWGS84PropertyForTiles","tilejson","minzoom","maxzoom","loadProps","mimeType","mvt","tileIndex","gis","worldScale","xScale","yScale","hoveredFeatureId","hoveredFeatureLayerName","hoveredFeature","newHoveredFeatureId","newHoveredFeatureLayerName","getFeatureUniqueId","getFeatureLayerName","isWGS84","transformTileCoordsToWGS84","getHighlightedObjectIndex","isHighlighted","isFeatureIdDefined","featureIdToHighlight","feature","isMatchingId","isMatchingLayer","gt","findIndexBinary","_pickObjects","layerIds","getRenderedFeatures","maxFeatures","featureCache","renderedFeatures","_contentWGS84","projectedBbox","BASE32_CODES_DICT","charAt","getGeohashPolygon","geohash","isLon","maxLon","minLon","hashValue","toLowerCase","bits","getGeohashBounds","GeohashLayer","getGeohash","inheritsFrom","ParentType","MAP_STYLE","evaluateChildren","childProps","isComponent","mapStyle","componentClass","deckGLViewProps","needsDeckGLViewProps","wrapInView","CANVAS_ONLY_STYLES","mixBlendMode","redrawDeck","thisRef","DeckGL","version","setVersion","control","containerRef","canvasRef","jsxProps","reactChildren","jsxLayers","jsxViews","reactElement","ElementType","LayerType","reactProps","createLayer","extractJSXLayers","inRender","handleViewStateChange","viewStateUpdateRequested","handleInteractionStateChange","interactionStateUpdateRequested","deckProps","forwardProps","DeckClass","lastRenderedViewports","createDeckInstance","useImperativeHandle","getRefHandles","currentViewports","ContextProvider","containerStyle","canvasStyle","extractStyles","childrenUnderViews","defaultViewId","viewChildren","viewElement","offsetParent","positionChildrenUnderViews","createSnapModifier","gridSize","restrictToHorizontalAxis","restrictToBoundingRect","boundingRect","restrictToParentElement","restrictToFirstScrollableAncestor","firstScrollableAncestorRect","restrictToVerticalAxis","restrictToWindowEdges","snapCenterToCursor","activatorCoordinates","validateProps","diffProps","propsChangedReason","compareProps","ignoreProps","dataChangedReason","diffDataProps","updateTriggersChangedReason","diffUpdateTrigger","triggerName","diffUpdateTriggers","diffExtensions","transitionsChanged","diffTransitions","comparePropValues","newProp","oldProp","oldExtensions","newTriggers","oldTriggers","ColumnGeometry","uid","nradial","flatMap","isExtruded","vertsAroundEdge","numVertices","stepAngle","tesselateColumn","useDerivatives","FLAT_SHADING","regenerateModels","_updateGeometry","hasThinkness","meanVertexDistance","fillVertexCount","wireframeVertexCount","isStroke","ShadowPass","shadowMap","depthBuffer","Renderbuffer","fbo","DEFAULT_AMBIENT_LIGHT_PROPS","DEFAULT_DIRECTIONAL_LIGHT_PROPS","ambientLight","directionalLights","pointLights","lightSource","_applyDefaultLights","light","_calculateMatrices","shadowPasses","_createShadowPasses","programManager","ProgramManager","getDefaultProgramManager","addDefaultModule","directionalLight","pointLight","shadowPass","removeDefaultModule","lightMatrices","AmbientLight","_arrayLikeToArray","lngLatZToWorldPosition","getWorldPosition","normalizeParameters","autoOffset","positionCommonSpace","strings","raw","defineProperties","alignments","createCoords","oppositeSideMap","oppositeAlignmentMap","evaluate","param","getSide","placement","getAlignment","getOppositeAxis","getAxisLength","getSideAxis","getAlignmentAxis","getAlignmentSides","rtl","alignment","alignmentAxis","mainAlignmentSide","reference","floating","getOppositePlacement","getOppositeAlignmentPlacement","getPaddingObject","expandPaddingObject","rectToClientRect","computeCoordsFromPlacement","_ref","sideAxis","alignLength","isVertical","commonX","commonY","commonAlign","detectOverflow","_await$platform$isEle","platform","boundary","rootBoundary","elementContext","altBoundary","paddingObject","clippingClientRect","getClippingRect","isElement","contextElement","getDocumentElement","getOffsetParent","offsetScale","elementClientRect","convertOffsetParentRelativeRectToViewportRelativeRect","middlewareData","arrowDimensions","isYAxis","minProp","maxProp","clientProp","endDiff","startDiff","arrowOffsetParent","clientSize","centerToReference","largestPossiblePadding","minPadding","maxPadding","min$1","shouldAddOffset","arrow","alignmentOffset","centerOffset","autoPlacement","_middlewareData$autoP","_middlewareData$autoP2","_placementsThatFitOnE","crossAxis","allowedPlacements","autoAlignment","detectOverflowOptions","placements$1","getPlacementList","currentIndex","currentPlacement","alignmentSides","isRTL","currentOverflows","allOverflows","overflows","nextPlacement","placementsSortedByMostSpace","resetPlacement","flip","_middlewareData$arrow","_middlewareData$flip","initialPlacement","mainAxis","checkMainAxis","checkCrossAxis","fallbackPlacements","specifiedFallbackPlacements","fallbackStrategy","fallbackAxisSideDirection","flipAlignment","isBasePlacement","oppositePlacement","getExpandedPlacements","isStart","getSideList","getOppositeAxisPlacements","placements","overflowsData","sides","_middlewareData$flip2","_overflowsData$filter","nextIndex","_overflowsData$map$so","getSideOffsets","isAnySideFullyClipped","hide","referenceHiddenOffsets","referenceHidden","escapedOffsets","escaped","getBoundingRect","nativeClientRects","getClientRects","groups","prevRect","getRectsByLine","fallback","resetRects","getElementRects","firstRect","lastRect","isLeftSide","maxRight","minLeft","diffCoords","mainAxisMulti","crossAxisMulti","rawValue","convertValueToCoords","limiter","mainAxisCoord","crossAxisCoord","maxSide","limitedCoords","limitShift","rawOffset","computedOffset","limitMin","limitMax","_middlewareData$offse","_middlewareData$offse2","isOriginSide","heightSide","widthSide","overflowAvailableHeight","overflowAvailableWidth","noShift","availableHeight","availableWidth","maximumClippingWidth","maximumClippingHeight","nextDimensions","getNodeName","nodeName","_node$ownerDocument","documentElement","Element","isShadowRoot","ShadowRoot","isOverflowElement","overflowX","overflowY","isTableElement","isContainingBlock","webkit","isWebKit","css","containerType","backdropFilter","willChange","contain","supports","isLastTraversableNode","getNodeScroll","pageXOffset","pageYOffset","getParentNode","assignedSlot","host","getOverflowAncestors","traverseIframes","_node$ownerDocument2","scrollableAncestor","getNearestOverflowAncestor","isBody","win","visualViewport","frameElement","getCssDimensions","hasOffset","offsetWidth","offsetHeight","shouldFallback","$","unwrapElement","domElement","noOffsets","getVisualOffsets","offsetLeft","offsetTop","includeScale","isFixedStrategy","clientRect","visualOffsets","floatingOffsetParent","shouldAddVisualOffsets","offsetWin","currentIFrame","iframeScale","iframeRect","clientLeft","paddingLeft","clientTop","paddingTop","getWindowScrollBarX","getClientRectFromClippingAncestor","clippingAncestor","visualViewportBased","getViewportRect","scroll","getDocumentRect","getInnerBoundingClientRect","hasFixedPositionAncestor","stopNode","getRectRelativeToOffsetParent","isOffsetParentAnElement","offsetRect","getTrueOffsetParent","polyfill","currentNode","getContainingBlock","clippingAncestors","currentContainingBlockComputedStyle","elementIsFixed","currentNodeIsContaining","ancestor","getClippingElementAncestors","_c","firstClippingAncestor","clippingRect","accRect","getOffsetParentFn","getDimensionsFn","autoUpdate","ancestorScroll","ancestorResize","elementResize","layoutShift","IntersectionObserver","animationFrame","referenceEl","cleanupIo","io","refresh","skip","rootMargin","isFirstUpdate","handleObserve","ratio","observeMove","frameId","reobserveFrame","firstEntry","cancelAnimationFrame","prevRefRect","frameLoop","nextRefRect","mergedOptions","platformWithCache","middleware","validMiddleware","statefulPlacement","resetCount","nextX","nextY","computePosition","$$typeof","getDPR","roundByDPR","dpr","useLatestRef","doc","_activeElement","_activeElement$shadow","shadowRoot","rootNode","getRootNode","getPlatform","uaData","navigator","userAgentData","getUserAgent","brands","brand","userAgent","isVirtualClick","mozInputSource","isTrusted","androidRe","pointerType","buttons","detail","isVirtualPointerEvent","pressure","isSafari","vendor","isMouseLikePointerType","strict","getDocument","isEventTargetWithin","composedPath","getTarget","isTypeableElement","stopEvent","serverHandoffComplete","genId","useId","setId","tipRadius","staticOffset","stroke","restStyle","clipPathId","halfStrokeWidth","svgX","svgY","isCustomShape","isVerticalSide","yOffsetProp","xOffsetProp","arrowX","arrowY","dValue","viewBox","createPubSub","_map$get","_map$get2","FloatingNodeContext","FloatingTreeContext","useFloatingParentNodeId","_React$useContext","useFloatingTree","useFloatingNodeId","customParentId","tree","reactParentId","addNode","FloatingNode","FloatingTree","_ref2","nodesRef","createAttribute","safePolygonIdentifier","getDelay","useHover","open","onOpenChange","domReference","handleClose","mouseOnly","restMs","handleCloseRef","delayRef","pointerTypeRef","timeoutRef","restTimeoutRef","blockMouseMoveRef","performedPointerEventsMutationRef","unbindMouseMoveRef","isHoverOpen","_dataRef$current$open","openEvent","onDismiss","onLeave","closeWithDelay","runElseBranch","closeDelay","cleanupMouseMoveHandler","clearPointerEvents","removeAttribute","onScrollMouseLeave","onMouseEnter","once","onMouseLeave","isClickLikeOpenEvent","openDelay","relatedTarget","_handleCloseRef$curre","__options","blockPointerEvents","setAttribute","_tree$nodesRef$curren","_tree$nodesRef$curren2","parentFloating","setPointerRef","onPointerDown","onPointerEnter","emit","returnFocus","FloatingDelayGroupContext","initialDelay","timeoutMs","currentId","setCurrentId","isInstantPhase","useDelayGroupContext","FloatingDelayGroup","initialCurrentIdRef","useDelayGroup","_ref3","close","unset","rafId","enqueueFocus","preventScroll","cancelPrevious","sync","getChildren","allChildren","_node$context","currentChildren","_currentChildren","_node$context2","counterMap","WeakMap","uncontrolledElementsSet","WeakSet","markerMap","lockCount","unwrapHost","applyAttributeToOthers","uncorrectedAvoidElements","ariaHidden","inert","markerName","controlAttribute","avoidElements","correctedTarget","elementsToKeep","elementsToStop","hiddenElements","markerCounter","keep","deep","attr","getAttribute","alreadyHidden","counterValue","markerValue","markOthers","querySelectorAll","getTabbableOptions","getShadowRoot","displayCheck","getTabbableIn","allTabbable","getNextTabbable","getPreviousTabbable","isOutsideEvent","containerElement","currentTarget","disableFocusInside","dataset","tabindex","enableFocusInside","HIDDEN_STYLES","setActiveElementOnTab","setRole","restProps","PortalContext","useFloatingPortalNode","_temp","portalNode","setPortalNode","uniqueId","portalContext","usePortalContext","existingIdRoot","subRoot","idWrapper","FloatingPortal","preserveTabOrder","focusManagerState","setFocusManagerState","beforeOutsideRef","afterOutsideRef","beforeInsideRef","afterInsideRef","shouldRenderGuards","modal","onFocus","_beforeInsideRef$curr","prevTabbable","_afterInsideRef$curre","nextTabbable","closeOnFocusOut","FloatingFocusManager","guards","_guards","initialFocus","visuallyHiddenDismiss","nodeId","orderRef","initialFocusRef","returnFocusRef","ignoreInitialFocus","startDismissButtonRef","endDismissButtonRef","preventReturnFocusRef","previouslyFocusedElementRef","isPointerDownRef","isInsidePortal","isTypeableCombobox","getTabbableContent","getTabbableElements","flat","renderDismissButton","location","onKeyDown","els","handleFocusOutside","handlePointerDown","queueMicrotask","movedToUnrelatedNode","hasAttribute","_nodes$find","allAncestors","currentParentId","getAncestors","_node$context3","_node$context4","_portalContext$portal","portalNodes","insideElements","previouslyFocusedElement","focusableElements","initialFocusValue","elToFocus","focusAlreadyInsideFloatingEl","preventReturnFocusScroll","contextData","payload","activeEl","_node$context5","handleMutation","observer","_portalContext$before","_portalContext$afterO","sortByDocumentPosition","compareDocumentPosition","DOCUMENT_POSITION_FOLLOWING","DOCUMENT_POSITION_CONTAINED_BY","DOCUMENT_POSITION_PRECEDING","DOCUMENT_POSITION_CONTAINS","FloatingListContext","unregister","elementsRef","FloatingList","labelsRef","setMap","prevMap","newMap","map1","map2","areMapsEqual","useListItem","label","index$1","setIndex","componentRef","_node$textContent","isLabelDefined","textContent","identifier","lockScroll","_window$visualViewpor","_window$visualViewpor2","paddingProp","scrollbarWidth","isButtonTarget","tagName","isSpaceIgnored","useClick","eventOption","toggle","ignoreMouse","keyboardHandlers","didKeyDownRef","useSafeInsertionEffect","useEffectEvent","_len","_key","isMouseBasedEvent","useClientPoint","initialRef","cleanupListenerRef","setPointerType","reactive","setReactive","setReference","setPositionReference","domRef","isAutoUpdateEvent","_domRef$current","_data$dataRef$current","domRect","isXAxis","canTrackCursorOnAutoUpdate","createVirtualElement","handleReferenceEnterOrMove","openCheck","addListener","handleMouseMove","setPointerTypeRef","bubbleHandlerKeys","mousedown","captureHandlerKeys","useDismiss","escapeKey","outsidePress","unstable_outsidePress","outsidePressEvent","referencePress","referencePressEvent","bubbles","outsidePressFn","insideReactTreeRef","escapeKeyBubbles","outsidePressBubbles","_bubbles$escapeKey","_bubbles$outsidePress","normalizeBubblesProp","closeOnEscapeKeyDown","shouldDismiss","_child$context","__escapeKeyBubbles","isReactEvent","closeOnPressOutside","insideReactTree","inertSelector","markers","targetRootAncestor","nextParent","marker","xCond","targetIsInsideChildren","_child$context2","__outsidePressBubbles","onScroll","_doc$defaultView","_options$elements2","unstable_onOpenChange","_domReference","setDomReference","externalReference","externalFloating","whileElementsMounted","setData","isPositioned","latestMiddleware","setLatestMiddleware","_reference","_setReference","_floating","_setFloating","referenceRef","setFloating","floatingRef","floatingEl","whileElementsMountedRef","platformRef","fullData","isMountedRef","floatingStyles","initialStyles","useFloating","domReferenceRef","floatingId","positionReference","useFocus","keyboardOnly","blockFocusRef","onBlur","movedToFocusGuard","mergeProps","userProps","propsList","elementKey","useInteractions","deps","getReferenceProps","getFloatingProps","getItemProps","isPreventScrollSupported","isDifferentRow","cols","prevRow","isIndexOutOfBounds","listRef","findNonDisabledIndex","startingIndex","decrement","disabledIndices","amount","_list$index","_list$index2","doSwitch","vertical","horizontal","isMainOrientationKey","isMainOrientationToEndKey","getMinIndex","getMaxIndex","useListNavigation","onNavigate","unstable_onNavigate","selectedIndex","allowEscape","virtual","focusItemOnOpen","focusItemOnHover","openOnArrowKeyDown","scrollItemIntoView","focusItemOnOpenRef","indexRef","keyRef","isPointerModalityRef","previousOnNavigateRef","previousMountedRef","forceSyncFocus","forceScrollIntoViewRef","disabledIndicesRef","latestOpenRef","scrollItemIntoViewRef","setActiveId","focusItem","forceScrollIntoView","maxTouchPoints","scrollIntoViewOptions","runs","waitForListPopulated","_nodes$find$context","treeContainsActiveEl","hasActiveIndex","syncCurrentTarget","_ref4","isCrossOrientationCloseKey","minIndex","maxIndex","prevIndex","maxCol","lastRow","checkVirtualMouse","ariaActiveDescendantProp","isArrowKey","isNavigationKey","trim","isMainKey","isCrossKey","isCrossOrientationOpenKey","onMouseDown","useMergeRefs","useRole","referenceId","floatingProps","camelCaseToKebabCase","str","ofs","execWithArgsOrReturn","valueOrFn","useTransitionStatus","closeDuration","initiated","setInitiated","isMounted","durationMs","setIsMounted","useDelayUnmount","frame","useTransitionStyles","unstable_initial","unstable_open","unstable_close","unstable_common","fnArgs","isNumberDuration","openDuration","setStyles","openRef","closeRef","commonRef","closeStyles","commonStyles","openStyles","transitionProperty","useTypeahead","onMatch","unstable_onMatch","onTypingChange","unstable_onTypingChange","findMatch","resetMs","ignoreKeys","timeoutIdRef","stringRef","prevIndexRef","matchIndexRef","findMatchRef","ignoreKeysRef","setTypingChange","typing","getMatchingIndex","orderedList","toLocaleLowerCase","listContent","_text$","_text$2","getArgsWithCustomFloatingHeight","inner","overflowRef","onFallbackChange","innerOffset","minItemsVisible","referenceOverflowThreshold","scrollRef","nextArgs","refOverflow","diffY","useInnerOffset","unstable_onChange","controlledScrollingRef","prevScrollTopRef","initialOverflowRef","onWheel","dY","isAtTop","isAtBottom","remainingScroll","scrollDiff","isPointInPolygon","isInside","xi","yi","xj","yj","safePolygon","requireIntent","hasLanded","lastX","lastY","lastCursorTime","performance","now","onClose","clientPoint","isLeave","isOverFloatingEl","isOverReferenceEl","refRect","cursorLeaveFromRight","cursorLeaveFromBottom","isOverReferenceRect","isFloatingWider","isFloatingTaller","rectPoly","cursorSpeed","elapsedTime","getCursorSpeed","cursorSpeedThreshold","cursorPointOne","cursorPointTwo","superPropBase","_get","receiver","Reflect","base","desc","getOwnPropertyDescriptor","LIFECYCLE","NO_STATE","MATCHED","INITIALIZED","AWAITING_GC","AWAITING_FINALIZATION","FINALIZED","COMPONENT_SYMBOL","for","DEPRECATED_PROPS_SYMBOL","ASYNC_DEFAULTS_SYMBOL","ASYNC_ORIGINAL_SYMBOL","ASYNC_RESOLVED_SYMBOL","isPlainObject","mergedInjection","RADIANS_TO_DEGREES","degreesPerUnit","halfFov","relativeScale","GLOBE_RADIUS","coord0","coord1","lt","lSqr","l0Sqr","l1Sqr","dSqr","lambda","cosPhi","D","asin","normalizeLongitudes","getHexagonCentroid","getHexagon","hexagonId","h3ToGeo","h3ToPolygon","hexId","h3ToGeoBoundary","actualCount","scalePolygon","centerHexagon","hexagon","edgeLengthKM","_shouldUseHighPrecision","dataProps","_calculateH3DataProps","_updateVertices","hasPentagon","hasMultipleRes","hexResolution","h3GetResolution","h3IsPentagon","edgeLength","centerHex","geoToH3","h3Distance","centerLat","centerLng","centerX","_renderPolygonLayer","_renderColumnLayer","_getForwardProps","trigger","mergeTriggers","flattenPolygon","TRANSITION_EVENTS","BREAK","SNAP_TO_END","IGNORE","DEFAULT_EASING","DEFAULT_INTERRUPTION","interpolator","getViewportInTransition","transitionTriggered","_shouldIgnoreViewportChange","_isTransitionEnabled","inProgress","interruption","_triggerTransition","_isUpdateDueToCurrentTransition","startViewstate","initialProps","transitionSettings","transitionInterruption","onTransitionStart","_onTransitionUpdate","_onTransitionEnd","onTransitionInterrupt","onTransitionEnd","inTransition","Log","duplicateArray","CPUInterpolationTransition","_value","fromValue","toValue","updateSpringElement","cur","dest","distanceSquare","CPUSpringTransition","_currValue","_prevValue","nextValue","updateSpring","TRANSITION_TYPES","UniformTransitionManager","TransitionType","internalTextures","TYPE_DEFINITIONS","boolean","valueType","getTypeOf","function","component","dataTransform","owner","specialTextureParameters","compressed","createTexture","parsePropType","normalizePropDefinition","getPropsPrototype","cacheKey","ExtensionClass","getOwnProperty","parentDefaultProps","componentPropDefs","propDefs","deprecatedProps","parsePropTypes","extensionDefaultProps","componentName","getComponentName","createPropsPrototype","defaultValues","descriptors","getDescriptorForAsyncProp","addAsyncPropsToPropPrototype","nameStr","newPropName","addDeprecatedPropsToPropPrototype","createPropsPrototypeAndTypes","hasAsyncProp","getAsyncProp","counter","Component","propObjects","propsPrototype","propsInstance","createProps","asyncProps","EMPTY_PROPS","LayerState","onAsyncPropUpdated","oldAsyncProps","asyncProp","resolvedValue","resetOldProps","getOldProps","pendingLoadCount","resolvedLoadCount","reloadAsyncProp","_watchPromise","setAsyncProps","resolvedValues","originalValues","_createAsyncPropData","_updateAsyncProp","_fetch","_onResolve","_didAsyncInputValueChange","_resolveAsyncIterable","_setPropValue","_freezeAsyncOldProps","_postProcessValue","_setAsyncPropValue","loadCount","promise","usesPickingColorCache","areViewportsEqual","oldViewport","pickingColorCache","__diff","inResourceManager","persistent","subscribe","consumerId","partialState","stateChanged","isPickable","getModels","setModuleParameters","pickingEvent","nullPickingColor","i1","i2","i3","getStartIndices","hasPickingBuffer","needsPickingBuffer","pickingColorsAttribute","unsubscribe","uniformTransitions","getNeedsRedraw","_getNeedsRedraw","hasUniformTransition","_getUpdateParams","invalidateAttribute","_updateAttributes","getChangedAttributes","clearChangedFlags","_updateAttributeTransition","_updateUniformTransition","calculateInstancePickingColors","cacheSize","newCacheSize","externalColorAttribute","objectColor","getVertexOffset","updateSubBuffer","startOffset","_initialize","_clearChangeFlags","_onAsyncPropUpdated","_transferState","_diffProps","stateNeedsUpdate","currentViewport","oldModels","modelChanged","_finalize","polygonOffset","getChangeFlags","flags","flagChanged","prevDataChangedReason","pickingModuleParameters","pickingSelectedColor","pickingHighlightColor","AttributeManager","attributeManagerNeedsRedraw","ShaderAttribute","dataColumn","constantValue","getStride","resolveShaderAttribute","baseAccessor","shaderAttributeOptions","EMPTY","FULL","Attribute","logicalType","bufferType","defaultType","glType","Int8Array","Int16Array","Int32Array","glArrayFromType","externalBuffer","bufferAccessor","allocatedValue","isBuffer64Bit","doubleShaderAttributeDefs","resolvedOptions","high","resolveDoublePrecisionShaderAttributes","shaderAttributeDef","_normalizeValue","_areValuesEqual","_checkExternalBuffer","requiredBufferSize","setAccessor","endOffset","oldValue","ArrayType","illegalArrayType","lastExternalBuffer","binaryValue","binaryAccessor","updateRanges","_autoUpdater","_validateAttributeUpdaters","layout","supportsTransition","getTransitionSetting","rangeList","newRangeList","insertPosition","range0","clearNeedsUpdate","updateBuffer","updated","_checkAttributeArray","setConstantValue","setExternalBuffer","setBinaryValue","needsNormalize","shaderAttributeDefs","shaderAttributeName","accessorFunc","objectValue","attributeInTransition","currentStartIndices","currentLength","attributeType","ATTRIBUTE_TYPE","varyings","getTransform","bufferOpts","usage","padBufferOpts","elementCount","sourceBuffers","aFrom","aTo","feedbackBuffers","vCurrent","run","dataFormat","getFramebuffer","aPrev","aCur","vNext","discard","clearRenderTarget","AttributeTransitionManager","_removeTransition","_updateAttribute","animatedAttributes","isNew","attributeTransitionManager","_add","instanced","attributeNameArray","invalidatedAttributes","_invalidateTrigger","accessorName","transitionUpdated","attributeNames","mergeBoundsMemoized","_createAttribute","_mapUpdateTriggersToAttributes","triggers","SINGLE_LINE","getTextWidth","layoutWidth","breakAll","rowStartCharIndex","rowOffsetLeft","textWidth","autoWrapping","wordBreak","groupStartCharIndex","groupEndCharIndex","groupWidth","breakWord","transformRow","leftOffsets","rowSize","character","layoutHeight","codePointAt","LRUCache","_deleteOrder","_appendOrder","_order","DEFAULT_FONT_SETTINGS","fontFamily","characterSet","charSet","fromCharCode","getDefaultCharacterSet","fontSize","sdf","cutoff","smoothing","populateAlphaChannel","alphaChannel","setTextStyle","font","fillStyle","textBaseline","textAlign","FontAtlasManager","_atlas","_getKey","newCharSet","cachedFontAtlas","char","getNewChars","fontAtlas","_generateFontAtlas","getFontWidth","fontHeight","maxCanvasWidth","measureText","getImageData","putImageData","tinySDF","TinySDF","glyphTop","layoutOffsetY","createImageData","fillText","TEXT_ANCHOR","middle","ALIGNMENT_BASELINE","background","getBackgroundColor","getBorderColor","getBorderWidth","backgroundPadding","outlineWidth","outlineColor","fontSettings","getText","getTextAnchor","getAlignmentBaseline","TextLayer","transformParagraph","fontAtlasManager","rowWidth","numCharacters","rowOffset","styleVersion","_updateText","_updateFontAtlas","fontProps","textBuffer","autoCharacterSet","texts","characterCount","codes","codesAtIndex","fromCodePoint","charCode","getTextFromBuffer","paragraph","characters","autoWrappingEnabled","rowOffsetTop","lineStartIndex","lineEndIndex","rows","rowIndex","rowStart","rowEnd","CharactersLayerClass","MultiIconLayer","BackgroundLayerClass","TextBackgroundLayer","getIconOffsets","setFontAtlasCacheLimit","Resource","consumer","_subscribers","inUse","_error","_content","_data","_loadCount","subscriber","ResourceManager","protocol","_context","_resources","_consumers","_pruneRequest","res","resource","prune","_track","_prune","consumers","oldResource","createProgramManager","_finalizeLayer","layerNeedsRedraw","_nextLayers","_lastRenderedLayers","_debug","setLayers","newLayers","flatLayers","_updateLayers","_handleError","stage","oldLayers","oldLayerMap","generatedLayers","_updateSublayersRecursively","_finalizeOldLayers","newLayer","sublayers","_transferLayerState","_updateLayer","_initializeLayer","lifecycle","instanceRects","instancePixelOffsets","instanceLineWidths","radiusMinPixels","radiusMaxPixels","antialiasing","getRadius","outline","ScatterplotLayer","instanceRadius","_assertThisInitialized","mimeTypes","testText","firstChar","lastChar","parseTextSync","parse","existingVersion","globalThis","_registerLoggers","registerLoaders","jsonLoader","ImageLoader","imagebitmap","premultiplyAlpha","checkVersion","DrawLayersPass","drawLayersPass","renderCount","renderBuffers","lastPostProcessEffect","layerPass","renderOpts","getDefaultFramebuffer","_preRender","_postRender","_resizeRenderBuffers","outlineBuffer","sdfBuffer","gamma","_unsupportedIterableToArray","minLen","replaceStart","replaceEnd","endChunk","dimensionSteps","defaultDimensions","pickingInfo","getBins","updateTrigger","weight","aggregation","getDomain","getScaleFunc","onSet","nullValue","defaultGetCellSize","dimensionUpdaters","_getCellSize","_getAggregator","_addDimension","updateGetValueFuncs","reprojectNeeded","needsReProjectPoints","aggregationDirty","getAggregatedData","getDimensionChanges","setDimensionState","normalizeResult","getSortedBins","needUpdateDimensionStep","wrapGetValueFunc","getValueFunc","addDimension","dimension","getDimensionUpdaters","scaleFunc","updater","getDimensionSortedBins","getDimensionValueDomain","getDimensionScale","attributeAccessor","getSubLayerDimensionAttribute","dimensionStep","updaters","needUpdate","_updateTriggers","fromProp","dimensionUpdater","valueDomain","dimensionRange","dimensionDomain","getScaleFunction","cv","getSubLayerAccessors","accessors","binInfo","dimensionKey","filterProps","filterKeys","filteredProps","initializeAggregationLayer","updateShaders","getModuleSettings","isAggregationDirty","updateOpts","compareAll","isAttributeChanged","isEmpty","isObjectEmpty","_objectSpread","ownKeys","sym","sourceKeys","DEFAULT_MODULES","SHADER_HOOKS","shaderHook","addShaderHook","POINT_LAYER","circle","pointRadiusMaxPixels","pointRadiusMinPixels","pointRadiusScale","pointRadiusUnits","pointAntialiasing","pointBillboard","getPointRadius","iconSizeMaxPixels","iconSizeMinPixels","iconSizeScale","iconSizeUnits","iconAlphaCutoff","iconBillboard","getIconAngle","getIconColor","getIconPixelOffset","getIconSize","textSizeMaxPixels","textSizeMinPixels","textSizeScale","textSizeUnits","textBackground","textBackgroundPadding","textFontFamily","textFontWeight","textLineHeight","textMaxWidth","textOutlineColor","textOutlineWidth","textWordBreak","textCharacterSet","textBillboard","textFontSettings","getTextAngle","getTextColor","getTextPixelOffset","getTextSize","getTextAlignmentBaseline","getTextBackgroundColor","getTextBorderColor","getTextBorderWidth","LINE_LAYER","lineCapRounded","lineBillboard","POLYGON_LAYER","getDefaultProps","sourceKey","targetKey","separateGeojsonFeatures","wrapFeature","separated","pointFeatures","lineFeatures","polygonFeatures","polygonOutlineFeatures","geometries","separateGeometry","sourceFeature","sourceFeatureIndex","nestLevel","COORDINATE_NEST_LEVEL","validateGeometry","getCoordinates","createLayerPropsFromBinary","geojsonBinary","layerProps","polygonsOutline","customPickingColors","calculatePickingColors","FEATURE_TYPES","pointType","_updateStateBinary","_updateStateJSON","geojson","getGeojsonFeatures","newFeatures","featuresDiff","oldFeatures","partialFeatures","createLayerPropsFromFeatures","featureType","ft","pointLayerIdPrefix","sourceIsPoints","PolygonFillLayer","forwardedProps","useLineColor","_renderLineLayers","PolygonStrokeLayer","LineStringsLayer","_renderPointLayers","pointLayers","PointLayerMapping","PointsLayer","pointsLayerProps","polygonFillLayer","propertiesIndex","numericPropsIndex","getPropertiesForIndex","binaryToFeatureForAccesor","AGGREGATION_OPERATION","SUM","MEAN","MIN","MAX","sumReducer","accu","maxReducer","minReducer","op","wrapAccessor","pts","filtered","getMin","getSum","getMean","getMax"],"mappings":"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","file":"13.bundle.js","sourcesContent":["function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","import React from 'react';\n\ninterface Props {\n  id: string;\n  value: string;\n}\n\nconst hiddenStyles: React.CSSProperties = {\n  display: 'none',\n};\n\nexport function HiddenText({id, value}: Props) {\n  return (\n    <div id={id} style={hiddenStyles}>\n      {value}\n    </div>\n  );\n}\n","import React from 'react';\n\nexport interface Props {\n  id: string;\n  announcement: string;\n}\n\n// Hide element visually but keep it readable by screen readers\nconst visuallyHidden: React.CSSProperties = {\n  position: 'fixed',\n  width: 1,\n  height: 1,\n  margin: -1,\n  border: 0,\n  padding: 0,\n  overflow: 'hidden',\n  clip: 'rect(0 0 0 0)',\n  clipPath: 'inset(100%)',\n  whiteSpace: 'nowrap',\n};\n\nexport function LiveRegion({id, announcement}: Props) {\n  return (\n    <div\n      id={id}\n      style={visuallyHidden}\n      role=\"status\"\n      aria-live=\"assertive\"\n      aria-atomic\n    >\n      {announcement}\n    </div>\n  );\n}\n","import {createContext} from 'react';\n\nimport type {RegisterListener} from './types';\n\nexport const DndMonitorContext = createContext<RegisterListener | null>(null);\n","import {useContext, useEffect} from 'react';\n\nimport {DndMonitorContext} from './context';\nimport type {DndMonitorListener} from './types';\n\nexport function useDndMonitor(listener: DndMonitorListener) {\n  const registerListener = useContext(DndMonitorContext);\n\n  useEffect(() => {\n    if (!registerListener) {\n      throw new Error(\n        'useDndMonitor must be used within a children of <DndContext>'\n      );\n    }\n\n    const unsubscribe = registerListener(listener);\n\n    return unsubscribe;\n  }, [listener, registerListener]);\n}\n","import type {Announcements, ScreenReaderInstructions} from './types';\n\nexport const defaultScreenReaderInstructions: ScreenReaderInstructions = {\n  draggable: `\n    To pick up a draggable item, press the space bar.\n    While dragging, use the arrow keys to move the item.\n    Press space again to drop the item in its new position, or press escape to cancel.\n  `,\n};\n\nexport const defaultAnnouncements: Announcements = {\n  onDragStart({active}) {\n    return `Picked up draggable item ${active.id}.`;\n  },\n  onDragOver({active, over}) {\n    if (over) {\n      return `Draggable item ${active.id} was moved over droppable area ${over.id}.`;\n    }\n\n    return `Draggable item ${active.id} is no longer over a droppable area.`;\n  },\n  onDragEnd({active, over}) {\n    if (over) {\n      return `Draggable item ${active.id} was dropped over droppable area ${over.id}`;\n    }\n\n    return `Draggable item ${active.id} was dropped.`;\n  },\n  onDragCancel({active}) {\n    return `Dragging was cancelled. Draggable item ${active.id} was dropped.`;\n  },\n};\n","import React, {useEffect, useMemo, useState} from 'react';\nimport {createPortal} from 'react-dom';\nimport {useUniqueId} from '@dnd-kit/utilities';\nimport {HiddenText, LiveRegion, useAnnouncement} from '@dnd-kit/accessibility';\n\nimport {DndMonitorListener, useDndMonitor} from '../DndMonitor';\n\nimport type {Announcements, ScreenReaderInstructions} from './types';\nimport {\n  defaultAnnouncements,\n  defaultScreenReaderInstructions,\n} from './defaults';\n\ninterface Props {\n  announcements?: Announcements;\n  container?: Element;\n  screenReaderInstructions?: ScreenReaderInstructions;\n  hiddenTextDescribedById: string;\n}\n\nexport function Accessibility({\n  announcements = defaultAnnouncements,\n  container,\n  hiddenTextDescribedById,\n  screenReaderInstructions = defaultScreenReaderInstructions,\n}: Props) {\n  const {announce, announcement} = useAnnouncement();\n  const liveRegionId = useUniqueId(`DndLiveRegion`);\n  const [mounted, setMounted] = useState(false);\n\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n\n  useDndMonitor(\n    useMemo<DndMonitorListener>(\n      () => ({\n        onDragStart({active}) {\n          announce(announcements.onDragStart({active}));\n        },\n        onDragMove({active, over}) {\n          if (announcements.onDragMove) {\n            announce(announcements.onDragMove({active, over}));\n          }\n        },\n        onDragOver({active, over}) {\n          announce(announcements.onDragOver({active, over}));\n        },\n        onDragEnd({active, over}) {\n          announce(announcements.onDragEnd({active, over}));\n        },\n        onDragCancel({active, over}) {\n          announce(announcements.onDragCancel({active, over}));\n        },\n      }),\n      [announce, announcements]\n    )\n  );\n\n  if (!mounted) {\n    return null;\n  }\n\n  const markup = (\n    <>\n      <HiddenText\n        id={hiddenTextDescribedById}\n        value={screenReaderInstructions.draggable}\n      />\n      <LiveRegion id={liveRegionId} announcement={announcement} />\n    </>\n  );\n\n  return container ? createPortal(markup, container) : markup;\n}\n","import {useCallback, useState} from 'react';\n\nexport function useAnnouncement() {\n  const [announcement, setAnnouncement] = useState('');\n  const announce = useCallback((value: string | undefined) => {\n    if (value != null) {\n      setAnnouncement(value);\n    }\n  }, []);\n\n  return {announce, announcement} as const;\n}\n","import type {Coordinates, UniqueIdentifier} from '../types';\nimport type {DroppableContainer} from './types';\n\nexport enum Action {\n  DragStart = 'dragStart',\n  DragMove = 'dragMove',\n  DragEnd = 'dragEnd',\n  DragCancel = 'dragCancel',\n  DragOver = 'dragOver',\n  RegisterDroppable = 'registerDroppable',\n  SetDroppableDisabled = 'setDroppableDisabled',\n  UnregisterDroppable = 'unregisterDroppable',\n}\n\nexport type Actions =\n  | {\n      type: Action.DragStart;\n      active: UniqueIdentifier;\n      initialCoordinates: Coordinates;\n    }\n  | {type: Action.DragMove; coordinates: Coordinates}\n  | {type: Action.DragEnd}\n  | {type: Action.DragCancel}\n  | {\n      type: Action.RegisterDroppable;\n      element: DroppableContainer;\n    }\n  | {\n      type: Action.SetDroppableDisabled;\n      id: UniqueIdentifier;\n      key: UniqueIdentifier;\n      disabled: boolean;\n    }\n  | {\n      type: Action.UnregisterDroppable;\n      id: UniqueIdentifier;\n      key: UniqueIdentifier;\n    };\n","export function noop(..._args: any) {}\n","import {useMemo} from 'react';\n\nimport type {Sensor, SensorDescriptor, SensorOptions} from './types';\n\nexport function useSensor<T extends SensorOptions>(\n  sensor: Sensor<T>,\n  options?: T\n): SensorDescriptor<T> {\n  return useMemo(\n    () => ({\n      sensor,\n      options: options ?? ({} as T),\n    }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [sensor, options]\n  );\n}\n","import {useMemo} from 'react';\n\nimport type {SensorDescriptor, SensorOptions} from './types';\n\nexport function useSensors(\n  ...sensors: (SensorDescriptor<any> | undefined | null)[]\n): SensorDescriptor<SensorOptions>[] {\n  return useMemo(\n    () =>\n      [...sensors].filter(\n        (sensor): sensor is SensorDescriptor<any> => sensor != null\n      ),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [...sensors]\n  );\n}\n","import type {Coordinates} from '../../types';\n\nexport const defaultCoordinates: Coordinates = Object.freeze({\n  x: 0,\n  y: 0,\n});\n","import type {Coordinates} from '../../types';\n\n/**\n * Returns the distance between two points\n */\nexport function distanceBetween(p1: Coordinates, p2: Coordinates) {\n  return Math.sqrt(Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2));\n}\n","import {getEventCoordinates} from '@dnd-kit/utilities';\nimport type {ClientRect} from '../../types';\n\nexport function getRelativeTransformOrigin(\n  event: MouseEvent | TouchEvent | KeyboardEvent,\n  rect: ClientRect\n) {\n  const eventCoordinates = getEventCoordinates(event);\n\n  if (!eventCoordinates) {\n    return '0 0';\n  }\n\n  const transformOrigin = {\n    x: ((eventCoordinates.x - rect.left) / rect.width) * 100,\n    y: ((eventCoordinates.y - rect.top) / rect.height) * 100,\n  };\n\n  return `${transformOrigin.x}% ${transformOrigin.y}%`;\n}\n","/* eslint-disable no-redeclare */\nimport type {ClientRect} from '../../types';\n\nimport type {Collision, CollisionDescriptor} from './types';\n\n/**\n * Sort collisions from smallest to greatest value\n */\nexport function sortCollisionsAsc(\n  {data: {value: a}}: CollisionDescriptor,\n  {data: {value: b}}: CollisionDescriptor\n) {\n  return a - b;\n}\n\n/**\n * Sort collisions from greatest to smallest value\n */\nexport function sortCollisionsDesc(\n  {data: {value: a}}: CollisionDescriptor,\n  {data: {value: b}}: CollisionDescriptor\n) {\n  return b - a;\n}\n\n/**\n * Returns the coordinates of the corners of a given rectangle:\n * [TopLeft {x, y}, TopRight {x, y}, BottomLeft {x, y}, BottomRight {x, y}]\n */\nexport function cornersOfRectangle({left, top, height, width}: ClientRect) {\n  return [\n    {\n      x: left,\n      y: top,\n    },\n    {\n      x: left + width,\n      y: top,\n    },\n    {\n      x: left,\n      y: top + height,\n    },\n    {\n      x: left + width,\n      y: top + height,\n    },\n  ];\n}\n\n/**\n * Returns the first collision, or null if there isn't one.\n * If a property is specified, returns the specified property of the first collision.\n */\nexport function getFirstCollision(\n  collisions: Collision[] | null | undefined\n): Collision | null;\nexport function getFirstCollision<T extends keyof Collision>(\n  collisions: Collision[] | null | undefined,\n  property: T\n): Collision[T] | null;\nexport function getFirstCollision(\n  collisions: Collision[] | null | undefined,\n  property?: keyof Collision\n) {\n  if (!collisions || collisions.length === 0) {\n    return null;\n  }\n\n  const [firstCollision] = collisions;\n\n  return property ? firstCollision[property] : firstCollision;\n}\n","import {distanceBetween} from '../coordinates';\nimport type {Coordinates, ClientRect} from '../../types';\n\nimport type {CollisionDescriptor, CollisionDetection} from './types';\nimport {sortCollisionsAsc} from './helpers';\n\n/**\n * Returns the coordinates of the center of a given ClientRect\n */\nfunction centerOfRectangle(\n  rect: ClientRect,\n  left = rect.left,\n  top = rect.top\n): Coordinates {\n  return {\n    x: left + rect.width * 0.5,\n    y: top + rect.height * 0.5,\n  };\n}\n\n/**\n * Returns the closest rectangles from an array of rectangles to the center of a given\n * rectangle.\n */\nexport const closestCenter: CollisionDetection = ({\n  collisionRect,\n  droppableRects,\n  droppableContainers,\n}) => {\n  const centerRect = centerOfRectangle(\n    collisionRect,\n    collisionRect.left,\n    collisionRect.top\n  );\n  const collisions: CollisionDescriptor[] = [];\n\n  for (const droppableContainer of droppableContainers) {\n    const {id} = droppableContainer;\n    const rect = droppableRects.get(id);\n\n    if (rect) {\n      const distBetween = distanceBetween(centerOfRectangle(rect), centerRect);\n\n      collisions.push({id, data: {droppableContainer, value: distBetween}});\n    }\n  }\n\n  return collisions.sort(sortCollisionsAsc);\n};\n","import {distanceBetween} from '../coordinates';\n\nimport type {CollisionDescriptor, CollisionDetection} from './types';\nimport {cornersOfRectangle, sortCollisionsAsc} from './helpers';\n\n/**\n * Returns the closest rectangles from an array of rectangles to the corners of\n * another rectangle.\n */\nexport const closestCorners: CollisionDetection = ({\n  collisionRect,\n  droppableRects,\n  droppableContainers,\n}) => {\n  const corners = cornersOfRectangle(collisionRect);\n  const collisions: CollisionDescriptor[] = [];\n\n  for (const droppableContainer of droppableContainers) {\n    const {id} = droppableContainer;\n    const rect = droppableRects.get(id);\n\n    if (rect) {\n      const rectCorners = cornersOfRectangle(rect);\n      const distances = corners.reduce((accumulator, corner, index) => {\n        return accumulator + distanceBetween(rectCorners[index], corner);\n      }, 0);\n      const effectiveDistance = Number((distances / 4).toFixed(4));\n\n      collisions.push({\n        id,\n        data: {droppableContainer, value: effectiveDistance},\n      });\n    }\n  }\n\n  return collisions.sort(sortCollisionsAsc);\n};\n","import type {ClientRect} from '../../types';\n\nimport type {CollisionDescriptor, CollisionDetection} from './types';\nimport {sortCollisionsDesc} from './helpers';\n\n/**\n * Returns the intersecting rectangle area between two rectangles\n */\nexport function getIntersectionRatio(\n  entry: ClientRect,\n  target: ClientRect\n): number {\n  const top = Math.max(target.top, entry.top);\n  const left = Math.max(target.left, entry.left);\n  const right = Math.min(target.left + target.width, entry.left + entry.width);\n  const bottom = Math.min(target.top + target.height, entry.top + entry.height);\n  const width = right - left;\n  const height = bottom - top;\n\n  if (left < right && top < bottom) {\n    const targetArea = target.width * target.height;\n    const entryArea = entry.width * entry.height;\n    const intersectionArea = width * height;\n    const intersectionRatio =\n      intersectionArea / (targetArea + entryArea - intersectionArea);\n\n    return Number(intersectionRatio.toFixed(4));\n  }\n\n  // Rectangles do not overlap, or overlap has an area of zero (edge/corner overlap)\n  return 0;\n}\n\n/**\n * Returns the rectangles that has the greatest intersection area with a given\n * rectangle in an array of rectangles.\n */\nexport const rectIntersection: CollisionDetection = ({\n  collisionRect,\n  droppableRects,\n  droppableContainers,\n}) => {\n  const collisions: CollisionDescriptor[] = [];\n\n  for (const droppableContainer of droppableContainers) {\n    const {id} = droppableContainer;\n    const rect = droppableRects.get(id);\n\n    if (rect) {\n      const intersectionRatio = getIntersectionRatio(rect, collisionRect);\n\n      if (intersectionRatio > 0) {\n        collisions.push({\n          id,\n          data: {droppableContainer, value: intersectionRatio},\n        });\n      }\n    }\n  }\n\n  return collisions.sort(sortCollisionsDesc);\n};\n","import type {Coordinates, ClientRect} from '../../types';\nimport {distanceBetween} from '../coordinates';\n\nimport type {CollisionDescriptor, CollisionDetection} from './types';\nimport {cornersOfRectangle, sortCollisionsAsc} from './helpers';\n\n/**\n * Check if a given point is contained within a bounding rectangle\n */\nfunction isPointWithinRect(point: Coordinates, rect: ClientRect): boolean {\n  const {top, left, bottom, right} = rect;\n\n  return (\n    top <= point.y && point.y <= bottom && left <= point.x && point.x <= right\n  );\n}\n\n/**\n * Returns the rectangles that the pointer is hovering over\n */\nexport const pointerWithin: CollisionDetection = ({\n  droppableContainers,\n  droppableRects,\n  pointerCoordinates,\n}) => {\n  if (!pointerCoordinates) {\n    return [];\n  }\n\n  const collisions: CollisionDescriptor[] = [];\n\n  for (const droppableContainer of droppableContainers) {\n    const {id} = droppableContainer;\n    const rect = droppableRects.get(id);\n\n    if (rect && isPointWithinRect(pointerCoordinates, rect)) {\n      /* There may be more than a single rectangle intersecting\n       * with the pointer coordinates. In order to sort the\n       * colliding rectangles, we measure the distance between\n       * the pointer and the corners of the intersecting rectangle\n       */\n      const corners = cornersOfRectangle(rect);\n      const distances = corners.reduce((accumulator, corner) => {\n        return accumulator + distanceBetween(pointerCoordinates, corner);\n      }, 0);\n      const effectiveDistance = Number((distances / 4).toFixed(4));\n\n      collisions.push({\n        id,\n        data: {droppableContainer, value: effectiveDistance},\n      });\n    }\n  }\n\n  return collisions.sort(sortCollisionsAsc);\n};\n","import type {Coordinates, ClientRect} from '../../types';\nimport {defaultCoordinates} from '../coordinates';\n\nexport function getRectDelta(\n  rect1: ClientRect | null,\n  rect2: ClientRect | null\n): Coordinates {\n  return rect1 && rect2\n    ? {\n        x: rect1.left - rect2.left,\n        y: rect1.top - rect2.top,\n      }\n    : defaultCoordinates;\n}\n","import type {Coordinates, ClientRect} from '../../types';\n\nexport function createRectAdjustmentFn(modifier: number) {\n  return function adjustClientRect(\n    rect: ClientRect,\n    ...adjustments: Coordinates[]\n  ): ClientRect {\n    return adjustments.reduce<ClientRect>(\n      (acc, adjustment) => ({\n        ...acc,\n        top: acc.top + modifier * adjustment.y,\n        bottom: acc.bottom + modifier * adjustment.y,\n        left: acc.left + modifier * adjustment.x,\n        right: acc.right + modifier * adjustment.x,\n      }),\n      {...rect}\n    );\n  };\n}\n\nexport const getAdjustedRect = createRectAdjustmentFn(1);\n","import type {Transform} from '@dnd-kit/utilities';\n\nexport function parseTransform(transform: string): Transform | null {\n  if (transform.startsWith('matrix3d(')) {\n    const transformArray = transform.slice(9, -1).split(/, /);\n\n    return {\n      x: +transformArray[12],\n      y: +transformArray[13],\n      scaleX: +transformArray[0],\n      scaleY: +transformArray[5],\n    };\n  } else if (transform.startsWith('matrix(')) {\n    const transformArray = transform.slice(7, -1).split(/, /);\n\n    return {\n      x: +transformArray[4],\n      y: +transformArray[5],\n      scaleX: +transformArray[0],\n      scaleY: +transformArray[3],\n    };\n  }\n\n  return null;\n}\n","import {getWindow} from '@dnd-kit/utilities';\n\nimport type {ClientRect} from '../../types';\nimport {inverseTransform} from '../transform';\n\ninterface Options {\n  ignoreTransform?: boolean;\n}\n\nconst defaultOptions: Options = {ignoreTransform: false};\n\n/**\n * Returns the bounding client rect of an element relative to the viewport.\n */\nexport function getClientRect(\n  element: Element,\n  options: Options = defaultOptions\n) {\n  let rect: ClientRect = element.getBoundingClientRect();\n\n  if (options.ignoreTransform) {\n    const {transform, transformOrigin} =\n      getWindow(element).getComputedStyle(element);\n\n    if (transform) {\n      rect = inverseTransform(rect, transform, transformOrigin);\n    }\n  }\n\n  const {top, left, width, height, bottom, right} = rect;\n\n  return {\n    top,\n    left,\n    width,\n    height,\n    bottom,\n    right,\n  };\n}\n\n/**\n * Returns the bounding client rect of an element relative to the viewport.\n *\n * @remarks\n * The ClientRect returned by this method does not take into account transforms\n * applied to the element it measures.\n *\n */\nexport function getTransformAgnosticClientRect(element: Element): ClientRect {\n  return getClientRect(element, {ignoreTransform: true});\n}\n","import type {ClientRect} from '../../types';\n\nimport {parseTransform} from './parseTransform';\n\nexport function inverseTransform(\n  rect: ClientRect,\n  transform: string,\n  transformOrigin: string\n): ClientRect {\n  const parsedTransform = parseTransform(transform);\n\n  if (!parsedTransform) {\n    return rect;\n  }\n\n  const {scaleX, scaleY, x: translateX, y: translateY} = parsedTransform;\n\n  const x = rect.left - translateX - (1 - scaleX) * parseFloat(transformOrigin);\n  const y =\n    rect.top -\n    translateY -\n    (1 - scaleY) *\n      parseFloat(transformOrigin.slice(transformOrigin.indexOf(' ') + 1));\n  const w = scaleX ? rect.width / scaleX : rect.width;\n  const h = scaleY ? rect.height / scaleY : rect.height;\n\n  return {\n    width: w,\n    height: h,\n    top: y,\n    right: x + w,\n    bottom: y + h,\n    left: x,\n  };\n}\n","import {\n  getWindow,\n  isDocument,\n  isHTMLElement,\n  isSVGElement,\n} from '@dnd-kit/utilities';\n\nimport {isFixed} from './isFixed';\nimport {isScrollable} from './isScrollable';\n\nexport function getScrollableAncestors(\n  element: Node | null,\n  limit?: number\n): Element[] {\n  const scrollParents: Element[] = [];\n\n  function findScrollableAncestors(node: Node | null): Element[] {\n    if (limit != null && scrollParents.length >= limit) {\n      return scrollParents;\n    }\n\n    if (!node) {\n      return scrollParents;\n    }\n\n    if (\n      isDocument(node) &&\n      node.scrollingElement != null &&\n      !scrollParents.includes(node.scrollingElement)\n    ) {\n      scrollParents.push(node.scrollingElement);\n\n      return scrollParents;\n    }\n\n    if (!isHTMLElement(node) || isSVGElement(node)) {\n      return scrollParents;\n    }\n\n    if (scrollParents.includes(node)) {\n      return scrollParents;\n    }\n\n    const computedStyle = getWindow(element).getComputedStyle(node);\n\n    if (node !== element) {\n      if (isScrollable(node, computedStyle)) {\n        scrollParents.push(node);\n      }\n    }\n\n    if (isFixed(node, computedStyle)) {\n      return scrollParents;\n    }\n\n    return findScrollableAncestors(node.parentNode);\n  }\n\n  if (!element) {\n    return scrollParents;\n  }\n\n  return findScrollableAncestors(element);\n}\n\nexport function getFirstScrollableAncestor(node: Node | null): Element | null {\n  const [firstScrollableAncestor] = getScrollableAncestors(node, 1);\n\n  return firstScrollableAncestor ?? null;\n}\n","import {getWindow} from '@dnd-kit/utilities';\n\nexport function isScrollable(\n  element: HTMLElement,\n  computedStyle: CSSStyleDeclaration = getWindow(element).getComputedStyle(\n    element\n  )\n): boolean {\n  const overflowRegex = /(auto|scroll|overlay)/;\n  const properties = ['overflow', 'overflowX', 'overflowY'];\n\n  return properties.some((property) => {\n    const value = computedStyle[property as keyof CSSStyleDeclaration];\n\n    return typeof value === 'string' ? overflowRegex.test(value) : false;\n  });\n}\n","import {getWindow} from '@dnd-kit/utilities';\n\nexport function isFixed(\n  node: HTMLElement,\n  computedStyle: CSSStyleDeclaration = getWindow(node).getComputedStyle(node)\n): boolean {\n  return computedStyle.position === 'fixed';\n}\n","import {\n  canUseDOM,\n  isHTMLElement,\n  isDocument,\n  getOwnerDocument,\n  isNode,\n  isWindow,\n} from '@dnd-kit/utilities';\n\nexport function getScrollableElement(element: EventTarget | null) {\n  if (!canUseDOM || !element) {\n    return null;\n  }\n\n  if (isWindow(element)) {\n    return element;\n  }\n\n  if (!isNode(element)) {\n    return null;\n  }\n\n  if (\n    isDocument(element) ||\n    element === getOwnerDocument(element).scrollingElement\n  ) {\n    return window;\n  }\n\n  if (isHTMLElement(element)) {\n    return element;\n  }\n\n  return null;\n}\n","import {isWindow} from '@dnd-kit/utilities';\n\nimport type {Coordinates} from '../../types';\n\nexport function getScrollXCoordinate(element: Element | typeof window): number {\n  if (isWindow(element)) {\n    return element.scrollX;\n  }\n\n  return element.scrollLeft;\n}\n\nexport function getScrollYCoordinate(element: Element | typeof window): number {\n  if (isWindow(element)) {\n    return element.scrollY;\n  }\n\n  return element.scrollTop;\n}\n\nexport function getScrollCoordinates(\n  element: Element | typeof window\n): Coordinates {\n  return {\n    x: getScrollXCoordinate(element),\n    y: getScrollYCoordinate(element),\n  };\n}\n","export enum Direction {\n  Forward = 1,\n  Backward = -1,\n}\n","import {canUseDOM} from '@dnd-kit/utilities';\n\nexport function isDocumentScrollingElement(element: Element | null) {\n  if (!canUseDOM || !element) {\n    return false;\n  }\n\n  return element === document.scrollingElement;\n}\n","import {isDocumentScrollingElement} from './documentScrollingElement';\n\nexport function getScrollPosition(scrollingContainer: Element) {\n  const minScroll = {\n    x: 0,\n    y: 0,\n  };\n  const dimensions = isDocumentScrollingElement(scrollingContainer)\n    ? {\n        height: window.innerHeight,\n        width: window.innerWidth,\n      }\n    : {\n        height: scrollingContainer.clientHeight,\n        width: scrollingContainer.clientWidth,\n      };\n  const maxScroll = {\n    x: scrollingContainer.scrollWidth - dimensions.width,\n    y: scrollingContainer.scrollHeight - dimensions.height,\n  };\n\n  const isTop = scrollingContainer.scrollTop <= minScroll.y;\n  const isLeft = scrollingContainer.scrollLeft <= minScroll.x;\n  const isBottom = scrollingContainer.scrollTop >= maxScroll.y;\n  const isRight = scrollingContainer.scrollLeft >= maxScroll.x;\n\n  return {\n    isTop,\n    isLeft,\n    isBottom,\n    isRight,\n    maxScroll,\n    minScroll,\n  };\n}\n","import {Direction, ClientRect} from '../../types';\nimport {getScrollPosition} from './getScrollPosition';\n\ninterface PositionalCoordinates\n  extends Pick<ClientRect, 'top' | 'left' | 'right' | 'bottom'> {}\n\nconst defaultThreshold = {\n  x: 0.2,\n  y: 0.2,\n};\n\nexport function getScrollDirectionAndSpeed(\n  scrollContainer: Element,\n  scrollContainerRect: ClientRect,\n  {top, left, right, bottom}: PositionalCoordinates,\n  acceleration = 10,\n  thresholdPercentage = defaultThreshold\n) {\n  const {isTop, isBottom, isLeft, isRight} = getScrollPosition(scrollContainer);\n\n  const direction = {\n    x: 0,\n    y: 0,\n  };\n  const speed = {\n    x: 0,\n    y: 0,\n  };\n  const threshold = {\n    height: scrollContainerRect.height * thresholdPercentage.y,\n    width: scrollContainerRect.width * thresholdPercentage.x,\n  };\n\n  if (!isTop && top <= scrollContainerRect.top + threshold.height) {\n    // Scroll Up\n    direction.y = Direction.Backward;\n    speed.y =\n      acceleration *\n      Math.abs(\n        (scrollContainerRect.top + threshold.height - top) / threshold.height\n      );\n  } else if (\n    !isBottom &&\n    bottom >= scrollContainerRect.bottom - threshold.height\n  ) {\n    // Scroll Down\n    direction.y = Direction.Forward;\n    speed.y =\n      acceleration *\n      Math.abs(\n        (scrollContainerRect.bottom - threshold.height - bottom) /\n          threshold.height\n      );\n  }\n\n  if (!isRight && right >= scrollContainerRect.right - threshold.width) {\n    // Scroll Right\n    direction.x = Direction.Forward;\n    speed.x =\n      acceleration *\n      Math.abs(\n        (scrollContainerRect.right - threshold.width - right) / threshold.width\n      );\n  } else if (!isLeft && left <= scrollContainerRect.left + threshold.width) {\n    // Scroll Left\n    direction.x = Direction.Backward;\n    speed.x =\n      acceleration *\n      Math.abs(\n        (scrollContainerRect.left + threshold.width - left) / threshold.width\n      );\n  }\n\n  return {\n    direction,\n    speed,\n  };\n}\n","export function getScrollElementRect(element: Element) {\n  if (element === document.scrollingElement) {\n    const {innerWidth, innerHeight} = window;\n\n    return {\n      top: 0,\n      left: 0,\n      right: innerWidth,\n      bottom: innerHeight,\n      width: innerWidth,\n      height: innerHeight,\n    };\n  }\n\n  const {top, left, right, bottom} = element.getBoundingClientRect();\n\n  return {\n    top,\n    left,\n    right,\n    bottom,\n    width: element.clientWidth,\n    height: element.clientHeight,\n  };\n}\n","import {add} from '@dnd-kit/utilities';\n\nimport type {Coordinates} from '../../types';\nimport {\n  getScrollCoordinates,\n  getScrollXCoordinate,\n  getScrollYCoordinate,\n} from './getScrollCoordinates';\nimport {defaultCoordinates} from '../coordinates';\n\nexport function getScrollOffsets(scrollableAncestors: Element[]): Coordinates {\n  return scrollableAncestors.reduce<Coordinates>((acc, node) => {\n    return add(acc, getScrollCoordinates(node));\n  }, defaultCoordinates);\n}\n\nexport function getScrollXOffset(scrollableAncestors: Element[]): number {\n  return scrollableAncestors.reduce<number>((acc, node) => {\n    return acc + getScrollXCoordinate(node);\n  }, 0);\n}\n\nexport function getScrollYOffset(scrollableAncestors: Element[]): number {\n  return scrollableAncestors.reduce<number>((acc, node) => {\n    return acc + getScrollYCoordinate(node);\n  }, 0);\n}\n","import type {ClientRect} from '../../types';\nimport {getClientRect} from '../rect/getRect';\nimport {getFirstScrollableAncestor} from './getScrollableAncestors';\n\nexport function scrollIntoViewIfNeeded(\n  element: HTMLElement | null | undefined,\n  measure: (node: HTMLElement) => ClientRect = getClientRect\n) {\n  if (!element) {\n    return;\n  }\n\n  const {top, left, bottom, right} = measure(element);\n  const firstScrollableAncestor = getFirstScrollableAncestor(element);\n\n  if (!firstScrollableAncestor) {\n    return;\n  }\n\n  if (\n    bottom <= 0 ||\n    right <= 0 ||\n    top >= window.innerHeight ||\n    left >= window.innerWidth\n  ) {\n    element.scrollIntoView({\n      block: 'center',\n      inline: 'center',\n    });\n  }\n}\n","import type {ClientRect} from '../../types/rect';\nimport {\n  getScrollableAncestors,\n  getScrollOffsets,\n  getScrollXOffset,\n  getScrollYOffset,\n} from '../scroll';\n\nconst properties = [\n  ['x', ['left', 'right'], getScrollXOffset],\n  ['y', ['top', 'bottom'], getScrollYOffset],\n] as const;\n\nexport class Rect {\n  constructor(rect: ClientRect, element: Element) {\n    const scrollableAncestors = getScrollableAncestors(element);\n    const scrollOffsets = getScrollOffsets(scrollableAncestors);\n\n    this.rect = {...rect};\n    this.width = rect.width;\n    this.height = rect.height;\n\n    for (const [axis, keys, getScrollOffset] of properties) {\n      for (const key of keys) {\n        Object.defineProperty(this, key, {\n          get: () => {\n            const currentOffsets = getScrollOffset(scrollableAncestors);\n            const scrollOffsetsDeltla = scrollOffsets[axis] - currentOffsets;\n\n            return this.rect[key] + scrollOffsetsDeltla;\n          },\n          enumerable: true,\n        });\n      }\n    }\n\n    Object.defineProperty(this, 'rect', {enumerable: false});\n  }\n\n  private rect: ClientRect;\n\n  public width: number;\n\n  public height: number;\n\n  // The below properties are set by the `Object.defineProperty` calls in the constructor\n  // @ts-ignore\n  public top: number;\n  // @ts-ignore\n  public bottom: number;\n  // @ts-ignore\n  public right: number;\n  // @ts-ignore\n  public left: number;\n}\n","export class Listeners {\n  private listeners: [\n    string,\n    EventListenerOrEventListenerObject,\n    AddEventListenerOptions | boolean | undefined\n  ][] = [];\n\n  constructor(private target: EventTarget | null) {}\n\n  public add<T extends Event>(\n    eventName: string,\n    handler: (event: T) => void,\n    options?: AddEventListenerOptions | boolean\n  ) {\n    this.target?.addEventListener(eventName, handler as EventListener, options);\n    this.listeners.push([eventName, handler as EventListener, options]);\n  }\n\n  public removeAll = () => {\n    this.listeners.forEach((listener) =>\n      this.target?.removeEventListener(...listener)\n    );\n  };\n}\n","import type {Coordinates, DistanceMeasurement} from '../../types';\n\nexport function hasExceededDistance(\n  delta: Coordinates,\n  measurement: DistanceMeasurement\n): boolean {\n  const dx = Math.abs(delta.x);\n  const dy = Math.abs(delta.y);\n\n  if (typeof measurement === 'number') {\n    return Math.sqrt(dx ** 2 + dy ** 2) > measurement;\n  }\n\n  if ('x' in measurement && 'y' in measurement) {\n    return dx > measurement.x && dy > measurement.y;\n  }\n\n  if ('x' in measurement) {\n    return dx > measurement.x;\n  }\n\n  if ('y' in measurement) {\n    return dy > measurement.y;\n  }\n\n  return false;\n}\n","export enum EventName {\n  Click = 'click',\n  DragStart = 'dragstart',\n  Keydown = 'keydown',\n  ContextMenu = 'contextmenu',\n  Resize = 'resize',\n  SelectionChange = 'selectionchange',\n  VisibilityChange = 'visibilitychange',\n}\n\nexport function preventDefault(event: Event) {\n  event.preventDefault();\n}\n\nexport function stopPropagation(event: Event) {\n  event.stopPropagation();\n}\n","import type {Coordinates, UniqueIdentifier} from '../../types';\nimport type {SensorContext} from '../types';\n\nexport enum KeyboardCode {\n  Space = 'Space',\n  Down = 'ArrowDown',\n  Right = 'ArrowRight',\n  Left = 'ArrowLeft',\n  Up = 'ArrowUp',\n  Esc = 'Escape',\n  Enter = 'Enter',\n}\n\nexport type KeyboardCodes = {\n  start: KeyboardEvent['code'][];\n  cancel: KeyboardEvent['code'][];\n  end: KeyboardEvent['code'][];\n};\n\nexport type KeyboardCoordinateGetter = (\n  event: KeyboardEvent,\n  args: {\n    active: UniqueIdentifier;\n    currentCoordinates: Coordinates;\n    context: SensorContext;\n  }\n) => Coordinates | void;\n","import {KeyboardCoordinateGetter, KeyboardCode, KeyboardCodes} from './types';\n\nexport const defaultKeyboardCodes: KeyboardCodes = {\n  start: [KeyboardCode.Space, KeyboardCode.Enter],\n  cancel: [KeyboardCode.Esc],\n  end: [KeyboardCode.Space, KeyboardCode.Enter],\n};\n\nexport const defaultKeyboardCoordinateGetter: KeyboardCoordinateGetter = (\n  event,\n  {currentCoordinates}\n) => {\n  switch (event.code) {\n    case KeyboardCode.Right:\n      return {\n        ...currentCoordinates,\n        x: currentCoordinates.x + 25,\n      };\n    case KeyboardCode.Left:\n      return {\n        ...currentCoordinates,\n        x: currentCoordinates.x - 25,\n      };\n    case KeyboardCode.Down:\n      return {\n        ...currentCoordinates,\n        y: currentCoordinates.y + 25,\n      };\n    case KeyboardCode.Up:\n      return {\n        ...currentCoordinates,\n        y: currentCoordinates.y - 25,\n      };\n  }\n\n  return undefined;\n};\n","import {\n  add as getAdjustedCoordinates,\n  subtract as getCoordinatesDelta,\n  getOwnerDocument,\n  getWindow,\n  isKeyboardEvent,\n} from '@dnd-kit/utilities';\n\nimport type {Coordinates} from '../../types';\nimport {\n  defaultCoordinates,\n  getScrollPosition,\n  getScrollElementRect,\n} from '../../utilities';\nimport {scrollIntoViewIfNeeded} from '../../utilities/scroll';\nimport {EventName} from '../events';\nimport {Listeners} from '../utilities';\nimport type {\n  Activators,\n  SensorInstance,\n  SensorProps,\n  SensorOptions,\n} from '../types';\n\nimport {KeyboardCoordinateGetter, KeyboardCode, KeyboardCodes} from './types';\nimport {\n  defaultKeyboardCodes,\n  defaultKeyboardCoordinateGetter,\n} from './defaults';\n\nexport interface KeyboardSensorOptions extends SensorOptions {\n  keyboardCodes?: KeyboardCodes;\n  coordinateGetter?: KeyboardCoordinateGetter;\n  scrollBehavior?: ScrollBehavior;\n  onActivation?({event}: {event: KeyboardEvent}): void;\n}\n\nexport type KeyboardSensorProps = SensorProps<KeyboardSensorOptions>;\n\nexport class KeyboardSensor implements SensorInstance {\n  public autoScrollEnabled = false;\n  private referenceCoordinates: Coordinates | undefined;\n  private listeners: Listeners;\n  private windowListeners: Listeners;\n\n  constructor(private props: KeyboardSensorProps) {\n    const {\n      event: {target},\n    } = props;\n\n    this.props = props;\n    this.listeners = new Listeners(getOwnerDocument(target));\n    this.windowListeners = new Listeners(getWindow(target));\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n\n    this.attach();\n  }\n\n  private attach() {\n    this.handleStart();\n\n    this.windowListeners.add(EventName.Resize, this.handleCancel);\n    this.windowListeners.add(EventName.VisibilityChange, this.handleCancel);\n\n    setTimeout(() => this.listeners.add(EventName.Keydown, this.handleKeyDown));\n  }\n\n  private handleStart() {\n    const {activeNode, onStart} = this.props;\n    const node = activeNode.node.current;\n\n    if (node) {\n      scrollIntoViewIfNeeded(node);\n    }\n\n    onStart(defaultCoordinates);\n  }\n\n  private handleKeyDown(event: Event) {\n    if (isKeyboardEvent(event)) {\n      const {active, context, options} = this.props;\n      const {\n        keyboardCodes = defaultKeyboardCodes,\n        coordinateGetter = defaultKeyboardCoordinateGetter,\n        scrollBehavior = 'smooth',\n      } = options;\n      const {code} = event;\n\n      if (keyboardCodes.end.includes(code)) {\n        this.handleEnd(event);\n        return;\n      }\n\n      if (keyboardCodes.cancel.includes(code)) {\n        this.handleCancel(event);\n        return;\n      }\n\n      const {collisionRect} = context.current;\n      const currentCoordinates = collisionRect\n        ? {x: collisionRect.left, y: collisionRect.top}\n        : defaultCoordinates;\n\n      if (!this.referenceCoordinates) {\n        this.referenceCoordinates = currentCoordinates;\n      }\n\n      const newCoordinates = coordinateGetter(event, {\n        active,\n        context: context.current,\n        currentCoordinates,\n      });\n\n      if (newCoordinates) {\n        const coordinatesDelta = getCoordinatesDelta(\n          newCoordinates,\n          currentCoordinates\n        );\n        const scrollDelta = {\n          x: 0,\n          y: 0,\n        };\n        const {scrollableAncestors} = context.current;\n\n        for (const scrollContainer of scrollableAncestors) {\n          const direction = event.code;\n          const {isTop, isRight, isLeft, isBottom, maxScroll, minScroll} =\n            getScrollPosition(scrollContainer);\n          const scrollElementRect = getScrollElementRect(scrollContainer);\n\n          const clampedCoordinates = {\n            x: Math.min(\n              direction === KeyboardCode.Right\n                ? scrollElementRect.right - scrollElementRect.width / 2\n                : scrollElementRect.right,\n              Math.max(\n                direction === KeyboardCode.Right\n                  ? scrollElementRect.left\n                  : scrollElementRect.left + scrollElementRect.width / 2,\n                newCoordinates.x\n              )\n            ),\n            y: Math.min(\n              direction === KeyboardCode.Down\n                ? scrollElementRect.bottom - scrollElementRect.height / 2\n                : scrollElementRect.bottom,\n              Math.max(\n                direction === KeyboardCode.Down\n                  ? scrollElementRect.top\n                  : scrollElementRect.top + scrollElementRect.height / 2,\n                newCoordinates.y\n              )\n            ),\n          };\n\n          const canScrollX =\n            (direction === KeyboardCode.Right && !isRight) ||\n            (direction === KeyboardCode.Left && !isLeft);\n          const canScrollY =\n            (direction === KeyboardCode.Down && !isBottom) ||\n            (direction === KeyboardCode.Up && !isTop);\n\n          if (canScrollX && clampedCoordinates.x !== newCoordinates.x) {\n            const newScrollCoordinates =\n              scrollContainer.scrollLeft + coordinatesDelta.x;\n            const canScrollToNewCoordinates =\n              (direction === KeyboardCode.Right &&\n                newScrollCoordinates <= maxScroll.x) ||\n              (direction === KeyboardCode.Left &&\n                newScrollCoordinates >= minScroll.x);\n\n            if (canScrollToNewCoordinates && !coordinatesDelta.y) {\n              // We don't need to update coordinates, the scroll adjustment alone will trigger\n              // logic to auto-detect the new container we are over\n              scrollContainer.scrollTo({\n                left: newScrollCoordinates,\n                behavior: scrollBehavior,\n              });\n              return;\n            }\n\n            if (canScrollToNewCoordinates) {\n              scrollDelta.x = scrollContainer.scrollLeft - newScrollCoordinates;\n            } else {\n              scrollDelta.x =\n                direction === KeyboardCode.Right\n                  ? scrollContainer.scrollLeft - maxScroll.x\n                  : scrollContainer.scrollLeft - minScroll.x;\n            }\n\n            if (scrollDelta.x) {\n              scrollContainer.scrollBy({\n                left: -scrollDelta.x,\n                behavior: scrollBehavior,\n              });\n            }\n            break;\n          } else if (canScrollY && clampedCoordinates.y !== newCoordinates.y) {\n            const newScrollCoordinates =\n              scrollContainer.scrollTop + coordinatesDelta.y;\n            const canScrollToNewCoordinates =\n              (direction === KeyboardCode.Down &&\n                newScrollCoordinates <= maxScroll.y) ||\n              (direction === KeyboardCode.Up &&\n                newScrollCoordinates >= minScroll.y);\n\n            if (canScrollToNewCoordinates && !coordinatesDelta.x) {\n              // We don't need to update coordinates, the scroll adjustment alone will trigger\n              // logic to auto-detect the new container we are over\n              scrollContainer.scrollTo({\n                top: newScrollCoordinates,\n                behavior: scrollBehavior,\n              });\n              return;\n            }\n\n            if (canScrollToNewCoordinates) {\n              scrollDelta.y = scrollContainer.scrollTop - newScrollCoordinates;\n            } else {\n              scrollDelta.y =\n                direction === KeyboardCode.Down\n                  ? scrollContainer.scrollTop - maxScroll.y\n                  : scrollContainer.scrollTop - minScroll.y;\n            }\n\n            if (scrollDelta.y) {\n              scrollContainer.scrollBy({\n                top: -scrollDelta.y,\n                behavior: scrollBehavior,\n              });\n            }\n\n            break;\n          }\n        }\n\n        this.handleMove(\n          event,\n          getAdjustedCoordinates(\n            getCoordinatesDelta(newCoordinates, this.referenceCoordinates),\n            scrollDelta\n          )\n        );\n      }\n    }\n  }\n\n  private handleMove(event: Event, coordinates: Coordinates) {\n    const {onMove} = this.props;\n\n    event.preventDefault();\n    onMove(coordinates);\n  }\n\n  private handleEnd(event: Event) {\n    const {onEnd} = this.props;\n\n    event.preventDefault();\n    this.detach();\n    onEnd();\n  }\n\n  private handleCancel(event: Event) {\n    const {onCancel} = this.props;\n\n    event.preventDefault();\n    this.detach();\n    onCancel();\n  }\n\n  private detach() {\n    this.listeners.removeAll();\n    this.windowListeners.removeAll();\n  }\n\n  static activators: Activators<KeyboardSensorOptions> = [\n    {\n      eventName: 'onKeyDown' as const,\n      handler: (\n        event: React.KeyboardEvent,\n        {keyboardCodes = defaultKeyboardCodes, onActivation},\n        {active}\n      ) => {\n        const {code} = event.nativeEvent;\n\n        if (keyboardCodes.start.includes(code)) {\n          const activator = active.activatorNode.current;\n\n          if (activator && event.target !== activator) {\n            return false;\n          }\n\n          event.preventDefault();\n\n          onActivation?.({event: event.nativeEvent});\n\n          return true;\n        }\n\n        return false;\n      },\n    },\n  ];\n}\n","import {\n  subtract as getCoordinatesDelta,\n  getEventCoordinates,\n  getOwnerDocument,\n  getWindow,\n} from '@dnd-kit/utilities';\n\nimport {defaultCoordinates} from '../../utilities';\nimport {\n  getEventListenerTarget,\n  hasExceededDistance,\n  Listeners,\n} from '../utilities';\nimport {EventName, preventDefault, stopPropagation} from '../events';\nimport {KeyboardCode} from '../keyboard';\nimport type {SensorInstance, SensorProps, SensorOptions} from '../types';\nimport type {Coordinates, DistanceMeasurement} from '../../types';\n\ninterface DistanceConstraint {\n  distance: DistanceMeasurement;\n  tolerance?: DistanceMeasurement;\n}\n\ninterface DelayConstraint {\n  delay: number;\n  tolerance: DistanceMeasurement;\n}\n\ninterface EventDescriptor {\n  name: keyof DocumentEventMap;\n  passive?: boolean;\n}\n\nexport interface PointerEventHandlers {\n  move: EventDescriptor;\n  end: EventDescriptor;\n}\n\nexport type PointerActivationConstraint = DistanceConstraint | DelayConstraint;\n\nfunction isDistanceConstraint(\n  constraint: PointerActivationConstraint\n): constraint is DistanceConstraint {\n  return Boolean(constraint && 'distance' in constraint);\n}\n\nfunction isDelayConstraint(\n  constraint: PointerActivationConstraint\n): constraint is DelayConstraint {\n  return Boolean(constraint && 'delay' in constraint);\n}\n\nexport interface AbstractPointerSensorOptions extends SensorOptions {\n  activationConstraint?: PointerActivationConstraint;\n  onActivation?({event}: {event: Event}): void;\n}\n\nexport type AbstractPointerSensorProps = SensorProps<AbstractPointerSensorOptions>;\n\nexport class AbstractPointerSensor implements SensorInstance {\n  public autoScrollEnabled = true;\n  private document: Document;\n  private activated: boolean = false;\n  private initialCoordinates: Coordinates;\n  private timeoutId: NodeJS.Timeout | null = null;\n  private listeners: Listeners;\n  private documentListeners: Listeners;\n  private windowListeners: Listeners;\n\n  constructor(\n    private props: AbstractPointerSensorProps,\n    private events: PointerEventHandlers,\n    listenerTarget = getEventListenerTarget(props.event.target)\n  ) {\n    const {event} = props;\n    const {target} = event;\n\n    this.props = props;\n    this.events = events;\n    this.document = getOwnerDocument(target);\n    this.documentListeners = new Listeners(this.document);\n    this.listeners = new Listeners(listenerTarget);\n    this.windowListeners = new Listeners(getWindow(target));\n    this.initialCoordinates = getEventCoordinates(event) ?? defaultCoordinates;\n    this.handleStart = this.handleStart.bind(this);\n    this.handleMove = this.handleMove.bind(this);\n    this.handleEnd = this.handleEnd.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleKeydown = this.handleKeydown.bind(this);\n    this.removeTextSelection = this.removeTextSelection.bind(this);\n\n    this.attach();\n  }\n\n  private attach() {\n    const {\n      events,\n      props: {\n        options: {activationConstraint},\n      },\n    } = this;\n\n    this.listeners.add(events.move.name, this.handleMove, {passive: false});\n    this.listeners.add(events.end.name, this.handleEnd);\n    this.windowListeners.add(EventName.Resize, this.handleCancel);\n    this.windowListeners.add(EventName.DragStart, preventDefault);\n    this.windowListeners.add(EventName.VisibilityChange, this.handleCancel);\n    this.windowListeners.add(EventName.ContextMenu, preventDefault);\n    this.documentListeners.add(EventName.Keydown, this.handleKeydown);\n\n    if (activationConstraint) {\n      if (isDistanceConstraint(activationConstraint)) {\n        return;\n      }\n\n      if (isDelayConstraint(activationConstraint)) {\n        this.timeoutId = setTimeout(\n          this.handleStart,\n          activationConstraint.delay\n        );\n        return;\n      }\n    }\n\n    this.handleStart();\n  }\n\n  private detach() {\n    this.listeners.removeAll();\n    this.windowListeners.removeAll();\n\n    // Wait until the next event loop before removing document listeners\n    // This is necessary because we listen for `click` and `selection` events on the document\n    setTimeout(this.documentListeners.removeAll, 50);\n\n    if (this.timeoutId !== null) {\n      clearTimeout(this.timeoutId);\n      this.timeoutId = null;\n    }\n  }\n\n  private handleStart() {\n    const {initialCoordinates} = this;\n    const {onStart} = this.props;\n\n    if (initialCoordinates) {\n      this.activated = true;\n\n      // Stop propagation of click events once activation constraints are met\n      this.documentListeners.add(EventName.Click, stopPropagation, {\n        capture: true,\n      });\n\n      // Remove any text selection from the document\n      this.removeTextSelection();\n\n      // Prevent further text selection while dragging\n      this.documentListeners.add(\n        EventName.SelectionChange,\n        this.removeTextSelection\n      );\n\n      onStart(initialCoordinates);\n    }\n  }\n\n  private handleMove(event: Event) {\n    const {activated, initialCoordinates, props} = this;\n    const {\n      onMove,\n      options: {activationConstraint},\n    } = props;\n\n    if (!initialCoordinates) {\n      return;\n    }\n\n    const coordinates = getEventCoordinates(event) ?? defaultCoordinates;\n    const delta = getCoordinatesDelta(initialCoordinates, coordinates);\n\n    if (!activated && activationConstraint) {\n      // Constraint validation\n      if (isDelayConstraint(activationConstraint)) {\n        if (hasExceededDistance(delta, activationConstraint.tolerance)) {\n          return this.handleCancel();\n        }\n\n        return;\n      }\n\n      if (isDistanceConstraint(activationConstraint)) {\n        if (\n          activationConstraint.tolerance != null &&\n          hasExceededDistance(delta, activationConstraint.tolerance)\n        ) {\n          return this.handleCancel();\n        }\n        if (hasExceededDistance(delta, activationConstraint.distance)) {\n          return this.handleStart();\n        }\n\n        return;\n      }\n    }\n\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n\n    onMove(coordinates);\n  }\n\n  private handleEnd() {\n    const {onEnd} = this.props;\n\n    this.detach();\n    onEnd();\n  }\n\n  private handleCancel() {\n    const {onCancel} = this.props;\n\n    this.detach();\n    onCancel();\n  }\n\n  private handleKeydown(event: KeyboardEvent) {\n    if (event.code === KeyboardCode.Esc) {\n      this.handleCancel();\n    }\n  }\n\n  private removeTextSelection() {\n    this.document.getSelection()?.removeAllRanges();\n  }\n}\n","import {getOwnerDocument, getWindow} from '@dnd-kit/utilities';\n\nexport function getEventListenerTarget(\n  target: EventTarget | null\n): EventTarget | Document {\n  // If the `event.target` element is removed from the document events will still be targeted\n  // at it, and hence won't always bubble up to the window or document anymore.\n  // If there is any risk of an element being removed while it is being dragged,\n  // the best practice is to attach the event listeners directly to the target.\n  // https://developer.mozilla.org/en-US/docs/Web/API/EventTarget\n\n  const {EventTarget} = getWindow(target);\n\n  return target instanceof EventTarget ? target : getOwnerDocument(target);\n}\n","import type {PointerEvent} from 'react';\nimport {getOwnerDocument} from '@dnd-kit/utilities';\n\nimport type {SensorProps} from '../types';\nimport {\n  AbstractPointerSensor,\n  AbstractPointerSensorOptions,\n  PointerEventHandlers,\n} from './AbstractPointerSensor';\n\nconst events: PointerEventHandlers = {\n  move: {name: 'pointermove'},\n  end: {name: 'pointerup'},\n};\n\nexport interface PointerSensorOptions extends AbstractPointerSensorOptions {}\n\nexport type PointerSensorProps = SensorProps<PointerSensorOptions>;\n\nexport class PointerSensor extends AbstractPointerSensor {\n  constructor(props: PointerSensorProps) {\n    const {event} = props;\n    // Pointer events stop firing if the target is unmounted while dragging\n    // Therefore we attach listeners to the owner document instead\n    const listenerTarget = getOwnerDocument(event.target);\n\n    super(props, events, listenerTarget);\n  }\n\n  static activators = [\n    {\n      eventName: 'onPointerDown' as const,\n      handler: (\n        {nativeEvent: event}: PointerEvent,\n        {onActivation}: PointerSensorOptions\n      ) => {\n        if (!event.isPrimary || event.button !== 0) {\n          return false;\n        }\n\n        onActivation?.({event});\n\n        return true;\n      },\n    },\n  ];\n}\n","import type {MouseEvent} from 'react';\nimport {getOwnerDocument} from '@dnd-kit/utilities';\n\nimport type {SensorProps} from '../types';\nimport {\n  AbstractPointerSensor,\n  PointerEventHandlers,\n  AbstractPointerSensorOptions,\n} from '../pointer';\n\nconst events: PointerEventHandlers = {\n  move: {name: 'mousemove'},\n  end: {name: 'mouseup'},\n};\n\nenum MouseButton {\n  RightClick = 2,\n}\n\nexport interface MouseSensorOptions extends AbstractPointerSensorOptions {}\n\nexport type MouseSensorProps = SensorProps<MouseSensorOptions>;\n\nexport class MouseSensor extends AbstractPointerSensor {\n  constructor(props: MouseSensorProps) {\n    super(props, events, getOwnerDocument(props.event.target));\n  }\n\n  static activators = [\n    {\n      eventName: 'onMouseDown' as const,\n      handler: (\n        {nativeEvent: event}: MouseEvent,\n        {onActivation}: MouseSensorOptions\n      ) => {\n        if (event.button === MouseButton.RightClick) {\n          return false;\n        }\n\n        onActivation?.({event});\n\n        return true;\n      },\n    },\n  ];\n}\n","import type {TouchEvent} from 'react';\n\nimport {\n  AbstractPointerSensor,\n  PointerSensorProps,\n  PointerEventHandlers,\n  PointerSensorOptions,\n} from '../pointer';\nimport type {SensorProps} from '../types';\n\nconst events: PointerEventHandlers = {\n  move: {name: 'touchmove'},\n  end: {name: 'touchend'},\n};\n\nexport interface TouchSensorOptions extends PointerSensorOptions {}\n\nexport type TouchSensorProps = SensorProps<TouchSensorOptions>;\n\nexport class TouchSensor extends AbstractPointerSensor {\n  constructor(props: PointerSensorProps) {\n    super(props, events);\n  }\n\n  static activators = [\n    {\n      eventName: 'onTouchStart' as const,\n      handler: (\n        {nativeEvent: event}: TouchEvent,\n        {onActivation}: TouchSensorOptions\n      ) => {\n        const {touches} = event;\n\n        if (touches.length > 1) {\n          return false;\n        }\n\n        onActivation?.({event});\n\n        return true;\n      },\n    },\n  ];\n\n  static setup() {\n    // Adding a non-capture and non-passive `touchmove` listener in order\n    // to force `event.preventDefault()` calls to work in dynamically added\n    // touchmove event handlers. This is required for iOS Safari.\n    window.addEventListener(events.move.name, noop, {\n      capture: false,\n      passive: false,\n    });\n\n    return function teardown() {\n      window.removeEventListener(events.move.name, noop);\n    };\n\n    // We create a new handler because the teardown function of another sensor\n    // could remove our event listener if we use a referentially equal listener.\n    function noop() {}\n  }\n}\n","import {useCallback, useEffect, useMemo, useRef} from 'react';\nimport {useInterval, useLazyMemo, usePrevious} from '@dnd-kit/utilities';\n\nimport {getScrollDirectionAndSpeed} from '../../utilities';\nimport {Direction} from '../../types';\nimport type {Coordinates, ClientRect} from '../../types';\n\nexport type ScrollAncestorSortingFn = (ancestors: Element[]) => Element[];\n\nexport enum AutoScrollActivator {\n  Pointer,\n  DraggableRect,\n}\n\nexport interface Options {\n  acceleration?: number;\n  activator?: AutoScrollActivator;\n  canScroll?: CanScroll;\n  enabled?: boolean;\n  interval?: number;\n  layoutShiftCompensation?:\n    | boolean\n    | {\n        x: boolean;\n        y: boolean;\n      };\n  order?: TraversalOrder;\n  threshold?: {\n    x: number;\n    y: number;\n  };\n}\n\ninterface Arguments extends Options {\n  draggingRect: ClientRect | null;\n  enabled: boolean;\n  pointerCoordinates: Coordinates | null;\n  scrollableAncestors: Element[];\n  scrollableAncestorRects: ClientRect[];\n  delta: Coordinates;\n}\n\nexport type CanScroll = (element: Element) => boolean;\n\nexport enum TraversalOrder {\n  TreeOrder,\n  ReversedTreeOrder,\n}\n\ninterface ScrollDirection {\n  x: 0 | Direction;\n  y: 0 | Direction;\n}\n\nexport function useAutoScroller({\n  acceleration,\n  activator = AutoScrollActivator.Pointer,\n  canScroll,\n  draggingRect,\n  enabled,\n  interval = 5,\n  order = TraversalOrder.TreeOrder,\n  pointerCoordinates,\n  scrollableAncestors,\n  scrollableAncestorRects,\n  delta,\n  threshold,\n}: Arguments) {\n  const scrollIntent = useScrollIntent({delta, disabled: !enabled});\n  const [setAutoScrollInterval, clearAutoScrollInterval] = useInterval();\n  const scrollSpeed = useRef<Coordinates>({x: 0, y: 0});\n  const scrollDirection = useRef<ScrollDirection>({x: 0, y: 0});\n  const rect = useMemo(() => {\n    switch (activator) {\n      case AutoScrollActivator.Pointer:\n        return pointerCoordinates\n          ? {\n              top: pointerCoordinates.y,\n              bottom: pointerCoordinates.y,\n              left: pointerCoordinates.x,\n              right: pointerCoordinates.x,\n            }\n          : null;\n      case AutoScrollActivator.DraggableRect:\n        return draggingRect;\n    }\n  }, [activator, draggingRect, pointerCoordinates]);\n  const scrollContainerRef = useRef<Element | null>(null);\n  const autoScroll = useCallback(() => {\n    const scrollContainer = scrollContainerRef.current;\n\n    if (!scrollContainer) {\n      return;\n    }\n\n    const scrollLeft = scrollSpeed.current.x * scrollDirection.current.x;\n    const scrollTop = scrollSpeed.current.y * scrollDirection.current.y;\n\n    scrollContainer.scrollBy(scrollLeft, scrollTop);\n  }, []);\n  const sortedScrollableAncestors = useMemo(\n    () =>\n      order === TraversalOrder.TreeOrder\n        ? [...scrollableAncestors].reverse()\n        : scrollableAncestors,\n    [order, scrollableAncestors]\n  );\n\n  useEffect(\n    () => {\n      if (!enabled || !scrollableAncestors.length || !rect) {\n        clearAutoScrollInterval();\n        return;\n      }\n\n      for (const scrollContainer of sortedScrollableAncestors) {\n        if (canScroll?.(scrollContainer) === false) {\n          continue;\n        }\n\n        const index = scrollableAncestors.indexOf(scrollContainer);\n        const scrollContainerRect = scrollableAncestorRects[index];\n\n        if (!scrollContainerRect) {\n          continue;\n        }\n\n        const {direction, speed} = getScrollDirectionAndSpeed(\n          scrollContainer,\n          scrollContainerRect,\n          rect,\n          acceleration,\n          threshold\n        );\n\n        for (const axis of ['x', 'y'] as const) {\n          if (!scrollIntent[axis][direction[axis] as Direction]) {\n            speed[axis] = 0;\n            direction[axis] = 0;\n          }\n        }\n\n        if (speed.x > 0 || speed.y > 0) {\n          clearAutoScrollInterval();\n\n          scrollContainerRef.current = scrollContainer;\n          setAutoScrollInterval(autoScroll, interval);\n\n          scrollSpeed.current = speed;\n          scrollDirection.current = direction;\n\n          return;\n        }\n      }\n\n      scrollSpeed.current = {x: 0, y: 0};\n      scrollDirection.current = {x: 0, y: 0};\n      clearAutoScrollInterval();\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      acceleration,\n      autoScroll,\n      canScroll,\n      clearAutoScrollInterval,\n      enabled,\n      interval,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      JSON.stringify(rect),\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      JSON.stringify(scrollIntent),\n      setAutoScrollInterval,\n      scrollableAncestors,\n      sortedScrollableAncestors,\n      scrollableAncestorRects,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      JSON.stringify(threshold),\n    ]\n  );\n}\n\ninterface ScrollIntent {\n  x: Record<Direction, boolean>;\n  y: Record<Direction, boolean>;\n}\n\nconst defaultScrollIntent: ScrollIntent = {\n  x: {[Direction.Backward]: false, [Direction.Forward]: false},\n  y: {[Direction.Backward]: false, [Direction.Forward]: false},\n};\n\nfunction useScrollIntent({\n  delta,\n  disabled,\n}: {\n  delta: Coordinates;\n  disabled: boolean;\n}): ScrollIntent {\n  const previousDelta = usePrevious(delta);\n\n  return useLazyMemo<ScrollIntent>(\n    (previousIntent) => {\n      if (disabled || !previousDelta || !previousIntent) {\n        // Reset scroll intent tracking when auto-scrolling is disabled\n        return defaultScrollIntent;\n      }\n\n      const direction = {\n        x: Math.sign(delta.x - previousDelta.x),\n        y: Math.sign(delta.y - previousDelta.y),\n      };\n\n      // Keep track of the user intent to scroll in each direction for both axis\n      return {\n        x: {\n          [Direction.Backward]:\n            previousIntent.x[Direction.Backward] || direction.x === -1,\n          [Direction.Forward]:\n            previousIntent.x[Direction.Forward] || direction.x === 1,\n        },\n        y: {\n          [Direction.Backward]:\n            previousIntent.y[Direction.Backward] || direction.y === -1,\n          [Direction.Forward]:\n            previousIntent.y[Direction.Forward] || direction.y === 1,\n        },\n      };\n    },\n    [disabled, delta, previousDelta]\n  );\n}\n","import {useCallback, useEffect, useRef, useState} from 'react';\nimport {useLatestValue, useLazyMemo} from '@dnd-kit/utilities';\n\nimport {Rect} from '../../utilities/rect';\nimport type {DroppableContainer, RectMap} from '../../store/types';\nimport type {ClientRect, UniqueIdentifier} from '../../types';\n\ninterface Arguments {\n  dragging: boolean;\n  dependencies: any[];\n  config: DroppableMeasuring;\n}\n\nexport enum MeasuringStrategy {\n  Always,\n  BeforeDragging,\n  WhileDragging,\n}\n\nexport enum MeasuringFrequency {\n  Optimized = 'optimized',\n}\n\ntype MeasuringFunction = (element: HTMLElement) => ClientRect;\n\nexport interface DroppableMeasuring {\n  measure: MeasuringFunction;\n  strategy: MeasuringStrategy;\n  frequency: MeasuringFrequency | number;\n}\n\nconst defaultValue: RectMap = new Map();\n\nexport function useDroppableMeasuring(\n  containers: DroppableContainer[],\n  {dragging, dependencies, config}: Arguments\n) {\n  const [queue, setQueue] = useState<UniqueIdentifier[] | null>(null);\n  const {frequency, measure, strategy} = config;\n  const containersRef = useRef(containers);\n  const disabled = isDisabled();\n  const disabledRef = useLatestValue(disabled);\n  const measureDroppableContainers = useCallback(\n    (ids: UniqueIdentifier[] = []) => {\n      if (disabledRef.current) {\n        return;\n      }\n\n      setQueue((value) => {\n        if (value === null) {\n          return ids;\n        }\n\n        return value.concat(ids.filter((id) => !value.includes(id)));\n      });\n    },\n    [disabledRef]\n  );\n  const timeoutId = useRef<NodeJS.Timeout | null>(null);\n  const droppableRects = useLazyMemo<RectMap>(\n    (previousValue) => {\n      if (disabled && !dragging) {\n        return defaultValue;\n      }\n\n      if (\n        !previousValue ||\n        previousValue === defaultValue ||\n        containersRef.current !== containers ||\n        queue != null\n      ) {\n        const map: RectMap = new Map();\n\n        for (let container of containers) {\n          if (!container) {\n            continue;\n          }\n\n          if (\n            queue &&\n            queue.length > 0 &&\n            !queue.includes(container.id) &&\n            container.rect.current\n          ) {\n            // This container does not need to be re-measured\n            map.set(container.id, container.rect.current);\n            continue;\n          }\n\n          const node = container.node.current;\n          const rect = node ? new Rect(measure(node), node) : null;\n\n          container.rect.current = rect;\n\n          if (rect) {\n            map.set(container.id, rect);\n          }\n        }\n\n        return map;\n      }\n\n      return previousValue;\n    },\n    [containers, queue, dragging, disabled, measure]\n  );\n\n  useEffect(() => {\n    containersRef.current = containers;\n  }, [containers]);\n\n  useEffect(\n    () => {\n      if (disabled) {\n        return;\n      }\n\n      measureDroppableContainers();\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [dragging, disabled]\n  );\n\n  useEffect(\n    () => {\n      if (queue && queue.length > 0) {\n        setQueue(null);\n      }\n    },\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n    [JSON.stringify(queue)]\n  );\n\n  useEffect(\n    () => {\n      if (\n        disabled ||\n        typeof frequency !== 'number' ||\n        timeoutId.current !== null\n      ) {\n        return;\n      }\n\n      timeoutId.current = setTimeout(() => {\n        measureDroppableContainers();\n        timeoutId.current = null;\n      }, frequency);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [frequency, disabled, measureDroppableContainers, ...dependencies]\n  );\n\n  return {\n    droppableRects,\n    measureDroppableContainers,\n    measuringScheduled: queue != null,\n  };\n\n  function isDisabled() {\n    switch (strategy) {\n      case MeasuringStrategy.Always:\n        return false;\n      case MeasuringStrategy.BeforeDragging:\n        return dragging;\n      default:\n        return !dragging;\n    }\n  }\n}\n","import {useLazyMemo} from '@dnd-kit/utilities';\n\ntype AnyFunction = (...args: any) => any;\n\nexport function useInitialValue<\n  T,\n  U extends AnyFunction | undefined = undefined\n>(\n  value: T | null,\n  computeFn?: U\n): U extends AnyFunction ? ReturnType<U> | null : T | null {\n  return useLazyMemo(\n    (previousValue) => {\n      if (!value) {\n        return null;\n      }\n\n      if (previousValue) {\n        return previousValue;\n      }\n\n      return typeof computeFn === 'function' ? computeFn(value) : value;\n    },\n    [computeFn, value]\n  );\n}\n","import {useEffect, useMemo} from 'react';\nimport {useEvent} from '@dnd-kit/utilities';\n\ninterface Arguments {\n  callback: ResizeObserverCallback;\n  disabled?: boolean;\n}\n\n/**\n * Returns a new ResizeObserver instance bound to the `onResize` callback.\n * If `ResizeObserver` is undefined in the execution environment, returns `undefined`.\n */\nexport function useResizeObserver({callback, disabled}: Arguments) {\n  const handleResize = useEvent(callback);\n  const resizeObserver = useMemo(\n    () => {\n      if (\n        disabled ||\n        typeof window === 'undefined' ||\n        typeof window.ResizeObserver === 'undefined'\n      ) {\n        return undefined;\n      }\n\n      const {ResizeObserver} = window;\n\n      return new ResizeObserver(handleResize);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [disabled]\n  );\n\n  useEffect(() => {\n    return () => resizeObserver?.disconnect();\n  }, [resizeObserver]);\n\n  return resizeObserver;\n}\n","import {useReducer} from 'react';\nimport {useIsomorphicLayoutEffect} from '@dnd-kit/utilities';\n\nimport type {ClientRect} from '../../types';\nimport {getClientRect, Rect} from '../../utilities';\n\nimport {useMutationObserver} from './useMutationObserver';\nimport {useResizeObserver} from './useResizeObserver';\n\nfunction defaultMeasure(element: HTMLElement) {\n  return new Rect(getClientRect(element), element);\n}\n\nexport function useRect(\n  element: HTMLElement | null,\n  measure: (element: HTMLElement) => ClientRect = defaultMeasure,\n  fallbackRect?: ClientRect | null\n) {\n  const [rect, measureRect] = useReducer(reducer, null);\n\n  const mutationObserver = useMutationObserver({\n    callback(records) {\n      if (!element) {\n        return;\n      }\n\n      for (const record of records) {\n        const {type, target} = record;\n\n        if (\n          type === 'childList' &&\n          target instanceof HTMLElement &&\n          target.contains(element)\n        ) {\n          measureRect();\n          break;\n        }\n      }\n    },\n  });\n  const resizeObserver = useResizeObserver({callback: measureRect});\n\n  useIsomorphicLayoutEffect(() => {\n    measureRect();\n\n    if (element) {\n      resizeObserver?.observe(element);\n      mutationObserver?.observe(document.body, {\n        childList: true,\n        subtree: true,\n      });\n    } else {\n      resizeObserver?.disconnect();\n      mutationObserver?.disconnect();\n    }\n  }, [element]);\n\n  return rect;\n\n  function reducer(currentRect: ClientRect | null) {\n    if (!element) {\n      return null;\n    }\n\n    if (element.isConnected === false) {\n      // Fall back to last rect we measured if the element is\n      // no longer connected to the DOM.\n      return currentRect ?? fallbackRect ?? null;\n    }\n\n    const newRect = measure(element);\n\n    if (JSON.stringify(currentRect) === JSON.stringify(newRect)) {\n      return currentRect;\n    }\n\n    return newRect;\n  }\n}\n","import {useEffect, useMemo} from 'react';\nimport {useEvent} from '@dnd-kit/utilities';\n\ninterface Arguments {\n  callback: MutationCallback;\n  disabled?: boolean;\n}\n\n/**\n * Returns a new MutationObserver instance.\n * If `MutationObserver` is undefined in the execution environment, returns `undefined`.\n */\nexport function useMutationObserver({callback, disabled}: Arguments) {\n  const handleMutations = useEvent(callback);\n  const mutationObserver = useMemo(() => {\n    if (\n      disabled ||\n      typeof window === 'undefined' ||\n      typeof window.MutationObserver === 'undefined'\n    ) {\n      return undefined;\n    }\n\n    const {MutationObserver} = window;\n\n    return new MutationObserver(handleMutations);\n  }, [handleMutations, disabled]);\n\n  useEffect(() => {\n    return () => mutationObserver?.disconnect();\n  }, [mutationObserver]);\n\n  return mutationObserver;\n}\n","import {useEffect, useRef} from 'react';\nimport {useLazyMemo} from '@dnd-kit/utilities';\n\nimport {getScrollableAncestors} from '../../utilities';\n\nconst defaultValue: Element[] = [];\n\nexport function useScrollableAncestors(node: HTMLElement | null) {\n  const previousNode = useRef(node);\n\n  const ancestors = useLazyMemo<Element[]>(\n    (previousValue) => {\n      if (!node) {\n        return defaultValue;\n      }\n\n      if (\n        previousValue &&\n        previousValue !== defaultValue &&\n        node &&\n        previousNode.current &&\n        node.parentNode === previousNode.current.parentNode\n      ) {\n        return previousValue;\n      }\n\n      return getScrollableAncestors(node);\n    },\n    [node]\n  );\n\n  useEffect(() => {\n    previousNode.current = node;\n  }, [node]);\n\n  return ancestors;\n}\n","import {useEffect, useRef} from 'react';\nimport {Coordinates, subtract} from '@dnd-kit/utilities';\n\nimport {defaultCoordinates} from '../../utilities';\n\nexport function useScrollOffsetsDelta(\n  scrollOffsets: Coordinates,\n  dependencies: any[] = []\n) {\n  const initialScrollOffsets = useRef<Coordinates | null>(null);\n\n  useEffect(\n    () => {\n      initialScrollOffsets.current = null;\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    dependencies\n  );\n\n  useEffect(() => {\n    const hasScrollOffsets = scrollOffsets !== defaultCoordinates;\n\n    if (hasScrollOffsets && !initialScrollOffsets.current) {\n      initialScrollOffsets.current = scrollOffsets;\n    }\n\n    if (!hasScrollOffsets && initialScrollOffsets.current) {\n      initialScrollOffsets.current = null;\n    }\n  }, [scrollOffsets]);\n\n  return initialScrollOffsets.current\n    ? subtract(scrollOffsets, initialScrollOffsets.current)\n    : defaultCoordinates;\n}\n","import {useMemo} from 'react';\n\nimport {getWindowClientRect} from '../../utilities/rect';\n\nexport function useWindowRect(element: typeof window | null) {\n  return useMemo(() => (element ? getWindowClientRect(element) : null), [\n    element,\n  ]);\n}\n","import type {ClientRect} from '../../types';\n\nexport function getWindowClientRect(element: typeof window): ClientRect {\n  const width = element.innerWidth;\n  const height = element.innerHeight;\n\n  return {\n    top: 0,\n    left: 0,\n    right: width,\n    bottom: height,\n    width,\n    height,\n  };\n}\n","import {useReducer} from 'react';\nimport {getWindow, useIsomorphicLayoutEffect} from '@dnd-kit/utilities';\n\nimport type {ClientRect} from '../../types';\nimport {Rect, getClientRect} from '../../utilities/rect';\nimport {isDocumentScrollingElement} from '../../utilities';\n\nimport {useResizeObserver} from './useResizeObserver';\nimport {useWindowRect} from './useWindowRect';\n\nconst defaultValue: Rect[] = [];\n\nexport function useRects(\n  elements: Element[],\n  measure: (element: Element) => ClientRect = getClientRect\n): ClientRect[] {\n  const [firstElement] = elements;\n  const windowRect = useWindowRect(\n    firstElement ? getWindow(firstElement) : null\n  );\n  const [rects, measureRects] = useReducer(reducer, defaultValue);\n  const resizeObserver = useResizeObserver({callback: measureRects});\n\n  if (elements.length > 0 && rects === defaultValue) {\n    measureRects();\n  }\n\n  useIsomorphicLayoutEffect(() => {\n    if (elements.length) {\n      elements.forEach((element) => resizeObserver?.observe(element));\n    } else {\n      resizeObserver?.disconnect();\n      measureRects();\n    }\n  }, [elements]);\n\n  return rects;\n\n  function reducer() {\n    if (!elements.length) {\n      return defaultValue;\n    }\n\n    return elements.map((element) =>\n      isDocumentScrollingElement(element)\n        ? (windowRect as ClientRect)\n        : new Rect(measure(element), element)\n    );\n  }\n}\n","import {isHTMLElement} from '@dnd-kit/utilities';\n\nexport function getMeasurableNode(\n  node: HTMLElement | undefined | null\n): HTMLElement | null {\n  if (!node) {\n    return null;\n  }\n\n  if (node.children.length > 1) {\n    return node;\n  }\n  const firstChild = node.children[0];\n\n  return isHTMLElement(firstChild) ? firstChild : node;\n}\n","import type {DeepRequired} from '@dnd-kit/utilities';\n\nimport type {DataRef} from '../../store/types';\nimport {KeyboardSensor, PointerSensor} from '../../sensors';\nimport {MeasuringStrategy, MeasuringFrequency} from '../../hooks/utilities';\nimport {\n  getClientRect,\n  getTransformAgnosticClientRect,\n} from '../../utilities/rect';\n\nimport type {MeasuringConfiguration} from './types';\n\nexport const defaultSensors = [\n  {sensor: PointerSensor, options: {}},\n  {sensor: KeyboardSensor, options: {}},\n];\n\nexport const defaultData: DataRef = {current: {}};\n\nexport const defaultMeasuringConfiguration: DeepRequired<MeasuringConfiguration> = {\n  draggable: {\n    measure: getTransformAgnosticClientRect,\n  },\n  droppable: {\n    measure: getTransformAgnosticClientRect,\n    strategy: MeasuringStrategy.WhileDragging,\n    frequency: MeasuringFrequency.Optimized,\n  },\n  dragOverlay: {\n    measure: getClientRect,\n  },\n};\n","import type {UniqueIdentifier} from '../types';\nimport type {DroppableContainer} from './types';\n\ntype Identifier = UniqueIdentifier | null | undefined;\n\nexport class DroppableContainersMap extends Map<\n  UniqueIdentifier,\n  DroppableContainer\n> {\n  get(id: Identifier) {\n    return id != null ? super.get(id) ?? undefined : undefined;\n  }\n\n  toArray(): DroppableContainer[] {\n    return Array.from(this.values());\n  }\n\n  getEnabled(): DroppableContainer[] {\n    return this.toArray().filter(({disabled}) => !disabled);\n  }\n\n  getNodeFor(id: Identifier) {\n    return this.get(id)?.node.current ?? undefined;\n  }\n}\n","import {createContext} from 'react';\n\nimport {noop} from '../utilities/other';\nimport {defaultMeasuringConfiguration} from '../components/DndContext/defaults';\nimport {DroppableContainersMap} from './constructors';\nimport type {InternalContextDescriptor, PublicContextDescriptor} from './types';\n\nexport const defaultPublicContext: PublicContextDescriptor = {\n  activatorEvent: null,\n  active: null,\n  activeNode: null,\n  activeNodeRect: null,\n  collisions: null,\n  containerNodeRect: null,\n  draggableNodes: new Map(),\n  droppableRects: new Map(),\n  droppableContainers: new DroppableContainersMap(),\n  over: null,\n  dragOverlay: {\n    nodeRef: {\n      current: null,\n    },\n    rect: null,\n    setRef: noop,\n  },\n  scrollableAncestors: [],\n  scrollableAncestorRects: [],\n  measuringConfiguration: defaultMeasuringConfiguration,\n  measureDroppableContainers: noop,\n  windowRect: null,\n  measuringScheduled: false,\n};\n\nexport const defaultInternalContext: InternalContextDescriptor = {\n  activatorEvent: null,\n  activators: [],\n  active: null,\n  activeNodeRect: null,\n  ariaDescribedById: {\n    draggable: '',\n  },\n  dispatch: noop,\n  draggableNodes: new Map(),\n  over: null,\n  measureDroppableContainers: noop,\n};\n\nexport const InternalContext = createContext<InternalContextDescriptor>(\n  defaultInternalContext\n);\n\nexport const PublicContext = createContext<PublicContextDescriptor>(\n  defaultPublicContext\n);\n","import {Action, Actions} from './actions';\nimport {DroppableContainersMap} from './constructors';\nimport type {State} from './types';\n\nexport function getInitialState(): State {\n  return {\n    draggable: {\n      active: null,\n      initialCoordinates: {x: 0, y: 0},\n      nodes: new Map(),\n      translate: {x: 0, y: 0},\n    },\n    droppable: {\n      containers: new DroppableContainersMap(),\n    },\n  };\n}\n\nexport function reducer(state: State, action: Actions): State {\n  switch (action.type) {\n    case Action.DragStart:\n      return {\n        ...state,\n        draggable: {\n          ...state.draggable,\n          initialCoordinates: action.initialCoordinates,\n          active: action.active,\n        },\n      };\n    case Action.DragMove:\n      if (!state.draggable.active) {\n        return state;\n      }\n\n      return {\n        ...state,\n        draggable: {\n          ...state.draggable,\n          translate: {\n            x: action.coordinates.x - state.draggable.initialCoordinates.x,\n            y: action.coordinates.y - state.draggable.initialCoordinates.y,\n          },\n        },\n      };\n    case Action.DragEnd:\n    case Action.DragCancel:\n      return {\n        ...state,\n        draggable: {\n          ...state.draggable,\n          active: null,\n          initialCoordinates: {x: 0, y: 0},\n          translate: {x: 0, y: 0},\n        },\n      };\n\n    case Action.RegisterDroppable: {\n      const {element} = action;\n      const {id} = element;\n      const containers = new DroppableContainersMap(state.droppable.containers);\n      containers.set(id, element);\n\n      return {\n        ...state,\n        droppable: {\n          ...state.droppable,\n          containers,\n        },\n      };\n    }\n\n    case Action.SetDroppableDisabled: {\n      const {id, key, disabled} = action;\n      const element = state.droppable.containers.get(id);\n\n      if (!element || key !== element.key) {\n        return state;\n      }\n\n      const containers = new DroppableContainersMap(state.droppable.containers);\n      containers.set(id, {\n        ...element,\n        disabled,\n      });\n\n      return {\n        ...state,\n        droppable: {\n          ...state.droppable,\n          containers,\n        },\n      };\n    }\n\n    case Action.UnregisterDroppable: {\n      const {id, key} = action;\n      const element = state.droppable.containers.get(id);\n\n      if (!element || key !== element.key) {\n        return state;\n      }\n\n      const containers = new DroppableContainersMap(state.droppable.containers);\n      containers.delete(id);\n\n      return {\n        ...state,\n        droppable: {\n          ...state.droppable,\n          containers,\n        },\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n","import {useContext, useEffect} from 'react';\nimport {\n  findFirstFocusableNode,\n  isKeyboardEvent,\n  usePrevious,\n} from '@dnd-kit/utilities';\n\nimport {InternalContext} from '../../../store';\n\ninterface Props {\n  disabled: boolean;\n}\n\nexport function RestoreFocus({disabled}: Props) {\n  const {active, activatorEvent, draggableNodes} = useContext(InternalContext);\n  const previousActivatorEvent = usePrevious(activatorEvent);\n  const previousActiveId = usePrevious(active?.id);\n\n  // Restore keyboard focus on the activator node\n  useEffect(() => {\n    if (disabled) {\n      return;\n    }\n\n    if (!activatorEvent && previousActivatorEvent && previousActiveId != null) {\n      if (!isKeyboardEvent(previousActivatorEvent)) {\n        return;\n      }\n\n      if (document.activeElement === previousActivatorEvent.target) {\n        // No need to restore focus\n        return;\n      }\n\n      const draggableNode = draggableNodes.get(previousActiveId);\n\n      if (!draggableNode) {\n        return;\n      }\n\n      const {activatorNode, node} = draggableNode;\n\n      if (!activatorNode.current && !node.current) {\n        return;\n      }\n\n      requestAnimationFrame(() => {\n        for (const element of [activatorNode.current, node.current]) {\n          if (!element) {\n            continue;\n          }\n\n          const focusableNode = findFirstFocusableNode(element);\n\n          if (focusableNode) {\n            focusableNode.focus();\n            break;\n          }\n        }\n      });\n    }\n  }, [\n    activatorEvent,\n    disabled,\n    draggableNodes,\n    previousActiveId,\n    previousActivatorEvent,\n  ]);\n\n  return null;\n}\n","import type {FirstArgument, Transform} from '@dnd-kit/utilities';\n\nimport type {Modifiers, Modifier} from './types';\n\nexport function applyModifiers(\n  modifiers: Modifiers | undefined,\n  {transform, ...args}: FirstArgument<Modifier>\n): Transform {\n  return modifiers?.length\n    ? modifiers.reduce<Transform>((accumulator, modifier) => {\n        return modifier({\n          transform: accumulator,\n          ...args,\n        });\n      }, transform)\n    : transform;\n}\n","import React, {\n  memo,\n  createContext,\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n} from 'react';\nimport {unstable_batchedUpdates} from 'react-dom';\nimport {\n  add,\n  getEventCoordinates,\n  getWindow,\n  useLatestValue,\n  useIsomorphicLayoutEffect,\n  useUniqueId,\n} from '@dnd-kit/utilities';\nimport type {Transform} from '@dnd-kit/utilities';\n\nimport {\n  Action,\n  PublicContext,\n  InternalContext,\n  PublicContextDescriptor,\n  InternalContextDescriptor,\n  getInitialState,\n  reducer,\n} from '../../store';\nimport {DndMonitorContext, useDndMonitorProvider} from '../DndMonitor';\nimport {\n  useAutoScroller,\n  useCachedNode,\n  useCombineActivators,\n  useDragOverlayMeasuring,\n  useDroppableMeasuring,\n  useInitialRect,\n  useRect,\n  useRectDelta,\n  useRects,\n  useScrollableAncestors,\n  useScrollOffsets,\n  useScrollOffsetsDelta,\n  useSensorSetup,\n  useWindowRect,\n} from '../../hooks/utilities';\nimport type {AutoScrollOptions, SyntheticListener} from '../../hooks/utilities';\nimport type {\n  Sensor,\n  SensorContext,\n  SensorDescriptor,\n  SensorActivatorFunction,\n  SensorInstance,\n} from '../../sensors';\nimport {\n  adjustScale,\n  CollisionDetection,\n  defaultCoordinates,\n  getAdjustedRect,\n  getFirstCollision,\n  rectIntersection,\n} from '../../utilities';\nimport {applyModifiers, Modifiers} from '../../modifiers';\nimport type {Active, Over} from '../../store/types';\nimport type {\n  DragStartEvent,\n  DragCancelEvent,\n  DragEndEvent,\n  DragMoveEvent,\n  DragOverEvent,\n  UniqueIdentifier,\n} from '../../types';\nimport {\n  Accessibility,\n  Announcements,\n  RestoreFocus,\n  ScreenReaderInstructions,\n} from '../Accessibility';\n\nimport {defaultData, defaultSensors} from './defaults';\nimport {\n  useLayoutShiftScrollCompensation,\n  useMeasuringConfiguration,\n} from './hooks';\nimport type {MeasuringConfiguration} from './types';\n\nexport interface Props {\n  id?: string;\n  accessibility?: {\n    announcements?: Announcements;\n    container?: Element;\n    restoreFocus?: boolean;\n    screenReaderInstructions?: ScreenReaderInstructions;\n  };\n  autoScroll?: boolean | AutoScrollOptions;\n  cancelDrop?: CancelDrop;\n  children?: React.ReactNode;\n  collisionDetection?: CollisionDetection;\n  measuring?: MeasuringConfiguration;\n  modifiers?: Modifiers;\n  sensors?: SensorDescriptor<any>[];\n  onDragStart?(event: DragStartEvent): void;\n  onDragMove?(event: DragMoveEvent): void;\n  onDragOver?(event: DragOverEvent): void;\n  onDragEnd?(event: DragEndEvent): void;\n  onDragCancel?(event: DragCancelEvent): void;\n}\n\nexport interface CancelDropArguments extends DragEndEvent {}\n\nexport type CancelDrop = (\n  args: CancelDropArguments\n) => boolean | Promise<boolean>;\n\ninterface DndEvent extends Event {\n  dndKit?: {\n    capturedBy: Sensor<any>;\n  };\n}\n\nexport const ActiveDraggableContext = createContext<Transform>({\n  ...defaultCoordinates,\n  scaleX: 1,\n  scaleY: 1,\n});\n\nenum Status {\n  Uninitialized,\n  Initializing,\n  Initialized,\n}\n\nexport const DndContext = memo(function DndContext({\n  id,\n  accessibility,\n  autoScroll = true,\n  children,\n  sensors = defaultSensors,\n  collisionDetection = rectIntersection,\n  measuring,\n  modifiers,\n  ...props\n}: Props) {\n  const store = useReducer(reducer, undefined, getInitialState);\n  const [state, dispatch] = store;\n  const [dispatchMonitorEvent, registerMonitorListener] =\n    useDndMonitorProvider();\n  const [status, setStatus] = useState<Status>(Status.Uninitialized);\n  const isInitialized = status === Status.Initialized;\n  const {\n    draggable: {active: activeId, nodes: draggableNodes, translate},\n    droppable: {containers: droppableContainers},\n  } = state;\n  const node = activeId ? draggableNodes.get(activeId) : null;\n  const activeRects = useRef<Active['rect']['current']>({\n    initial: null,\n    translated: null,\n  });\n  const active = useMemo<Active | null>(\n    () =>\n      activeId != null\n        ? {\n            id: activeId,\n            // It's possible for the active node to unmount while dragging\n            data: node?.data ?? defaultData,\n            rect: activeRects,\n          }\n        : null,\n    [activeId, node]\n  );\n  const activeRef = useRef<UniqueIdentifier | null>(null);\n  const [activeSensor, setActiveSensor] = useState<SensorInstance | null>(null);\n  const [activatorEvent, setActivatorEvent] = useState<Event | null>(null);\n  const latestProps = useLatestValue(props, Object.values(props));\n  const draggableDescribedById = useUniqueId(`DndDescribedBy`, id);\n  const enabledDroppableContainers = useMemo(\n    () => droppableContainers.getEnabled(),\n    [droppableContainers]\n  );\n  const measuringConfiguration = useMeasuringConfiguration(measuring);\n  const {droppableRects, measureDroppableContainers, measuringScheduled} =\n    useDroppableMeasuring(enabledDroppableContainers, {\n      dragging: isInitialized,\n      dependencies: [translate.x, translate.y],\n      config: measuringConfiguration.droppable,\n    });\n  const activeNode = useCachedNode(draggableNodes, activeId);\n  const activationCoordinates = useMemo(\n    () => (activatorEvent ? getEventCoordinates(activatorEvent) : null),\n    [activatorEvent]\n  );\n  const autoScrollOptions = getAutoScrollerOptions();\n  const initialActiveNodeRect = useInitialRect(\n    activeNode,\n    measuringConfiguration.draggable.measure\n  );\n\n  useLayoutShiftScrollCompensation({\n    activeNode: activeId ? draggableNodes.get(activeId) : null,\n    config: autoScrollOptions.layoutShiftCompensation,\n    initialRect: initialActiveNodeRect,\n    measure: measuringConfiguration.draggable.measure,\n  });\n\n  const activeNodeRect = useRect(\n    activeNode,\n    measuringConfiguration.draggable.measure,\n    initialActiveNodeRect\n  );\n  const containerNodeRect = useRect(\n    activeNode ? activeNode.parentElement : null\n  );\n  const sensorContext = useRef<SensorContext>({\n    activatorEvent: null,\n    active: null,\n    activeNode,\n    collisionRect: null,\n    collisions: null,\n    droppableRects,\n    draggableNodes,\n    draggingNode: null,\n    draggingNodeRect: null,\n    droppableContainers,\n    over: null,\n    scrollableAncestors: [],\n    scrollAdjustedTranslate: null,\n  });\n  const overNode = droppableContainers.getNodeFor(\n    sensorContext.current.over?.id\n  );\n  const dragOverlay = useDragOverlayMeasuring({\n    measure: measuringConfiguration.dragOverlay.measure,\n  });\n\n  // Use the rect of the drag overlay if it is mounted\n  const draggingNode = dragOverlay.nodeRef.current ?? activeNode;\n  const draggingNodeRect = isInitialized\n    ? dragOverlay.rect ?? activeNodeRect\n    : null;\n  const usesDragOverlay = Boolean(\n    dragOverlay.nodeRef.current && dragOverlay.rect\n  );\n  // The delta between the previous and new position of the draggable node\n  // is only relevant when there is no drag overlay\n  const nodeRectDelta = useRectDelta(usesDragOverlay ? null : activeNodeRect);\n\n  // Get the window rect of the dragging node\n  const windowRect = useWindowRect(\n    draggingNode ? getWindow(draggingNode) : null\n  );\n\n  // Get scrollable ancestors of the dragging node\n  const scrollableAncestors = useScrollableAncestors(\n    isInitialized ? overNode ?? activeNode : null\n  );\n  const scrollableAncestorRects = useRects(scrollableAncestors);\n\n  // Apply modifiers\n  const modifiedTranslate = applyModifiers(modifiers, {\n    transform: {\n      x: translate.x - nodeRectDelta.x,\n      y: translate.y - nodeRectDelta.y,\n      scaleX: 1,\n      scaleY: 1,\n    },\n    activatorEvent,\n    active,\n    activeNodeRect,\n    containerNodeRect,\n    draggingNodeRect,\n    over: sensorContext.current.over,\n    overlayNodeRect: dragOverlay.rect,\n    scrollableAncestors,\n    scrollableAncestorRects,\n    windowRect,\n  });\n\n  const pointerCoordinates = activationCoordinates\n    ? add(activationCoordinates, translate)\n    : null;\n\n  const scrollOffsets = useScrollOffsets(scrollableAncestors);\n  // Represents the scroll delta since dragging was initiated\n  const scrollAdjustment = useScrollOffsetsDelta(scrollOffsets);\n  // Represents the scroll delta since the last time the active node rect was measured\n  const activeNodeScrollDelta = useScrollOffsetsDelta(scrollOffsets, [\n    activeNodeRect,\n  ]);\n\n  const scrollAdjustedTranslate = add(modifiedTranslate, scrollAdjustment);\n\n  const collisionRect = draggingNodeRect\n    ? getAdjustedRect(draggingNodeRect, modifiedTranslate)\n    : null;\n\n  const collisions =\n    active && collisionRect\n      ? collisionDetection({\n          active,\n          collisionRect,\n          droppableRects,\n          droppableContainers: enabledDroppableContainers,\n          pointerCoordinates,\n        })\n      : null;\n  const overId = getFirstCollision(collisions, 'id');\n  const [over, setOver] = useState<Over | null>(null);\n\n  // When there is no drag overlay used, we need to account for the\n  // window scroll delta\n  const appliedTranslate = usesDragOverlay\n    ? modifiedTranslate\n    : add(modifiedTranslate, activeNodeScrollDelta);\n\n  const transform = adjustScale(\n    appliedTranslate,\n    over?.rect ?? null,\n    activeNodeRect\n  );\n\n  const instantiateSensor = useCallback(\n    (\n      event: React.SyntheticEvent,\n      {sensor: Sensor, options}: SensorDescriptor<any>\n    ) => {\n      if (activeRef.current == null) {\n        return;\n      }\n\n      const activeNode = draggableNodes.get(activeRef.current);\n\n      if (!activeNode) {\n        return;\n      }\n\n      const activatorEvent = event.nativeEvent;\n\n      const sensorInstance = new Sensor({\n        active: activeRef.current,\n        activeNode,\n        event: activatorEvent,\n        options,\n        // Sensors need to be instantiated with refs for arguments that change over time\n        // otherwise they are frozen in time with the stale arguments\n        context: sensorContext,\n        onStart(initialCoordinates) {\n          const id = activeRef.current;\n\n          if (id == null) {\n            return;\n          }\n\n          const draggableNode = draggableNodes.get(id);\n\n          if (!draggableNode) {\n            return;\n          }\n\n          const {onDragStart} = latestProps.current;\n          const event: DragStartEvent = {\n            active: {id, data: draggableNode.data, rect: activeRects},\n          };\n\n          unstable_batchedUpdates(() => {\n            onDragStart?.(event);\n            setStatus(Status.Initializing);\n            dispatch({\n              type: Action.DragStart,\n              initialCoordinates,\n              active: id,\n            });\n            dispatchMonitorEvent({type: 'onDragStart', event});\n          });\n        },\n        onMove(coordinates) {\n          dispatch({\n            type: Action.DragMove,\n            coordinates,\n          });\n        },\n        onEnd: createHandler(Action.DragEnd),\n        onCancel: createHandler(Action.DragCancel),\n      });\n\n      unstable_batchedUpdates(() => {\n        setActiveSensor(sensorInstance);\n        setActivatorEvent(event.nativeEvent);\n      });\n\n      function createHandler(type: Action.DragEnd | Action.DragCancel) {\n        return async function handler() {\n          const {active, collisions, over, scrollAdjustedTranslate} =\n            sensorContext.current;\n          let event: DragEndEvent | null = null;\n\n          if (active && scrollAdjustedTranslate) {\n            const {cancelDrop} = latestProps.current;\n\n            event = {\n              activatorEvent,\n              active: active,\n              collisions,\n              delta: scrollAdjustedTranslate,\n              over,\n            };\n\n            if (type === Action.DragEnd && typeof cancelDrop === 'function') {\n              const shouldCancel = await Promise.resolve(cancelDrop(event));\n\n              if (shouldCancel) {\n                type = Action.DragCancel;\n              }\n            }\n          }\n\n          activeRef.current = null;\n\n          unstable_batchedUpdates(() => {\n            dispatch({type});\n            setStatus(Status.Uninitialized);\n            setOver(null);\n            setActiveSensor(null);\n            setActivatorEvent(null);\n\n            const eventName =\n              type === Action.DragEnd ? 'onDragEnd' : 'onDragCancel';\n\n            if (event) {\n              const handler = latestProps.current[eventName];\n\n              handler?.(event);\n              dispatchMonitorEvent({type: eventName, event});\n            }\n          });\n        };\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [draggableNodes]\n  );\n\n  const bindActivatorToSensorInstantiator = useCallback(\n    (\n      handler: SensorActivatorFunction<any>,\n      sensor: SensorDescriptor<any>\n    ): SyntheticListener['handler'] => {\n      return (event, active) => {\n        const nativeEvent = event.nativeEvent as DndEvent;\n        const activeDraggableNode = draggableNodes.get(active);\n\n        if (\n          // Another sensor is already instantiating\n          activeRef.current !== null ||\n          // No active draggable\n          !activeDraggableNode ||\n          // Event has already been captured\n          nativeEvent.dndKit ||\n          nativeEvent.defaultPrevented\n        ) {\n          return;\n        }\n\n        const activationContext = {\n          active: activeDraggableNode,\n        };\n        const shouldActivate = handler(\n          event,\n          sensor.options,\n          activationContext\n        );\n\n        if (shouldActivate === true) {\n          nativeEvent.dndKit = {\n            capturedBy: sensor.sensor,\n          };\n\n          activeRef.current = active;\n          instantiateSensor(event, sensor);\n        }\n      };\n    },\n    [draggableNodes, instantiateSensor]\n  );\n\n  const activators = useCombineActivators(\n    sensors,\n    bindActivatorToSensorInstantiator\n  );\n\n  useSensorSetup(sensors);\n\n  useIsomorphicLayoutEffect(() => {\n    if (activeNodeRect && status === Status.Initializing) {\n      setStatus(Status.Initialized);\n    }\n  }, [activeNodeRect, status]);\n\n  useEffect(\n    () => {\n      const {onDragMove} = latestProps.current;\n      const {active, activatorEvent, collisions, over} = sensorContext.current;\n\n      if (!active || !activatorEvent) {\n        return;\n      }\n\n      const event: DragMoveEvent = {\n        active,\n        activatorEvent,\n        collisions,\n        delta: {\n          x: scrollAdjustedTranslate.x,\n          y: scrollAdjustedTranslate.y,\n        },\n        over,\n      };\n\n      unstable_batchedUpdates(() => {\n        onDragMove?.(event);\n        dispatchMonitorEvent({type: 'onDragMove', event});\n      });\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [scrollAdjustedTranslate.x, scrollAdjustedTranslate.y]\n  );\n\n  useEffect(\n    () => {\n      const {\n        active,\n        activatorEvent,\n        collisions,\n        droppableContainers,\n        scrollAdjustedTranslate,\n      } = sensorContext.current;\n\n      if (\n        !active ||\n        activeRef.current == null ||\n        !activatorEvent ||\n        !scrollAdjustedTranslate\n      ) {\n        return;\n      }\n\n      const {onDragOver} = latestProps.current;\n      const overContainer = droppableContainers.get(overId);\n      const over =\n        overContainer && overContainer.rect.current\n          ? {\n              id: overContainer.id,\n              rect: overContainer.rect.current,\n              data: overContainer.data,\n              disabled: overContainer.disabled,\n            }\n          : null;\n      const event: DragOverEvent = {\n        active,\n        activatorEvent,\n        collisions,\n        delta: {\n          x: scrollAdjustedTranslate.x,\n          y: scrollAdjustedTranslate.y,\n        },\n        over,\n      };\n\n      unstable_batchedUpdates(() => {\n        setOver(over);\n        onDragOver?.(event);\n        dispatchMonitorEvent({type: 'onDragOver', event});\n      });\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [overId]\n  );\n\n  useIsomorphicLayoutEffect(() => {\n    sensorContext.current = {\n      activatorEvent,\n      active,\n      activeNode,\n      collisionRect,\n      collisions,\n      droppableRects,\n      draggableNodes,\n      draggingNode,\n      draggingNodeRect,\n      droppableContainers,\n      over,\n      scrollableAncestors,\n      scrollAdjustedTranslate,\n    };\n\n    activeRects.current = {\n      initial: draggingNodeRect,\n      translated: collisionRect,\n    };\n  }, [\n    active,\n    activeNode,\n    collisions,\n    collisionRect,\n    draggableNodes,\n    draggingNode,\n    draggingNodeRect,\n    droppableRects,\n    droppableContainers,\n    over,\n    scrollableAncestors,\n    scrollAdjustedTranslate,\n  ]);\n\n  useAutoScroller({\n    ...autoScrollOptions,\n    delta: translate,\n    draggingRect: collisionRect,\n    pointerCoordinates,\n    scrollableAncestors,\n    scrollableAncestorRects,\n  });\n\n  const publicContext = useMemo(() => {\n    const context: PublicContextDescriptor = {\n      active,\n      activeNode,\n      activeNodeRect,\n      activatorEvent,\n      collisions,\n      containerNodeRect,\n      dragOverlay,\n      draggableNodes,\n      droppableContainers,\n      droppableRects,\n      over,\n      measureDroppableContainers,\n      scrollableAncestors,\n      scrollableAncestorRects,\n      measuringConfiguration,\n      measuringScheduled,\n      windowRect,\n    };\n\n    return context;\n  }, [\n    active,\n    activeNode,\n    activeNodeRect,\n    activatorEvent,\n    collisions,\n    containerNodeRect,\n    dragOverlay,\n    draggableNodes,\n    droppableContainers,\n    droppableRects,\n    over,\n    measureDroppableContainers,\n    scrollableAncestors,\n    scrollableAncestorRects,\n    measuringConfiguration,\n    measuringScheduled,\n    windowRect,\n  ]);\n\n  const internalContext = useMemo(() => {\n    const context: InternalContextDescriptor = {\n      activatorEvent,\n      activators,\n      active,\n      activeNodeRect,\n      ariaDescribedById: {\n        draggable: draggableDescribedById,\n      },\n      dispatch,\n      draggableNodes,\n      over,\n      measureDroppableContainers,\n    };\n\n    return context;\n  }, [\n    activatorEvent,\n    activators,\n    active,\n    activeNodeRect,\n    dispatch,\n    draggableDescribedById,\n    draggableNodes,\n    over,\n    measureDroppableContainers,\n  ]);\n\n  return (\n    <DndMonitorContext.Provider value={registerMonitorListener}>\n      <InternalContext.Provider value={internalContext}>\n        <PublicContext.Provider value={publicContext}>\n          <ActiveDraggableContext.Provider value={transform}>\n            {children}\n          </ActiveDraggableContext.Provider>\n        </PublicContext.Provider>\n        <RestoreFocus disabled={accessibility?.restoreFocus === false} />\n      </InternalContext.Provider>\n      <Accessibility\n        {...accessibility}\n        hiddenTextDescribedById={draggableDescribedById}\n      />\n    </DndMonitorContext.Provider>\n  );\n\n  function getAutoScrollerOptions() {\n    const activeSensorDisablesAutoscroll =\n      activeSensor?.autoScrollEnabled === false;\n    const autoScrollGloballyDisabled =\n      typeof autoScroll === 'object'\n        ? autoScroll.enabled === false\n        : autoScroll === false;\n    const enabled =\n      isInitialized &&\n      !activeSensorDisablesAutoscroll &&\n      !autoScrollGloballyDisabled;\n\n    if (typeof autoScroll === 'object') {\n      return {\n        ...autoScroll,\n        enabled,\n      };\n    }\n\n    return {enabled};\n  }\n});\n","import {useCallback, useState} from 'react';\n\nimport type {DndMonitorListener, DndMonitorEvent} from './types';\n\nexport function useDndMonitorProvider() {\n  const [listeners] = useState(() => new Set<DndMonitorListener>());\n\n  const registerListener = useCallback(\n    (listener) => {\n      listeners.add(listener);\n      return () => listeners.delete(listener);\n    },\n    [listeners]\n  );\n\n  const dispatch = useCallback(\n    ({type, event}: DndMonitorEvent) => {\n      listeners.forEach((listener) => listener[type]?.(event as any));\n    },\n    [listeners]\n  );\n\n  return [dispatch, registerListener] as const;\n}\n","import {useMemo} from 'react';\nimport type {DeepRequired} from '@dnd-kit/utilities';\n\nimport {defaultMeasuringConfiguration} from '../defaults';\nimport type {MeasuringConfiguration} from '../types';\n\nexport function useMeasuringConfiguration(\n  config: MeasuringConfiguration | undefined\n): DeepRequired<MeasuringConfiguration> {\n  return useMemo(\n    () => ({\n      draggable: {\n        ...defaultMeasuringConfiguration.draggable,\n        ...config?.draggable,\n      },\n      droppable: {\n        ...defaultMeasuringConfiguration.droppable,\n        ...config?.droppable,\n      },\n      dragOverlay: {\n        ...defaultMeasuringConfiguration.dragOverlay,\n        ...config?.dragOverlay,\n      },\n    }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [config?.draggable, config?.droppable, config?.dragOverlay]\n  );\n}\n","import {useLazyMemo} from '@dnd-kit/utilities';\n\nimport type {DraggableNode, DraggableNodes} from '../../store';\nimport type {UniqueIdentifier} from '../../types';\n\nexport function useCachedNode(\n  draggableNodes: DraggableNodes,\n  id: UniqueIdentifier | null\n): DraggableNode['node']['current'] {\n  const draggableNode = id !== null ? draggableNodes.get(id) : undefined;\n  const node = draggableNode ? draggableNode.node.current : null;\n\n  return useLazyMemo(\n    (cachedNode) => {\n      if (id === null) {\n        return null;\n      }\n\n      // In some cases, the draggable node can unmount while dragging\n      // This is the case for virtualized lists. In those situations,\n      // we fall back to the last known value for that node.\n      return node ?? cachedNode ?? null;\n    },\n    [node, id]\n  );\n}\n","import type {ClientRect} from '../../types';\nimport {useInitialValue} from './useInitialValue';\n\nexport function useInitialRect(\n  node: HTMLElement | null,\n  measure: (node: HTMLElement) => ClientRect\n) {\n  return useInitialValue(node, measure);\n}\n","import {useRef} from 'react';\nimport {useIsomorphicLayoutEffect} from '@dnd-kit/utilities';\n\nimport {getRectDelta} from '../../../utilities/rect';\nimport {getFirstScrollableAncestor} from '../../../utilities/scroll';\nimport type {ClientRect} from '../../../types';\nimport type {DraggableNode} from '../../../store';\nimport type {MeasuringFunction} from '../types';\n\ninterface Options {\n  activeNode: DraggableNode | null | undefined;\n  config: boolean | {x: boolean; y: boolean} | undefined;\n  initialRect: ClientRect | null;\n  measure: MeasuringFunction;\n}\n\nexport function useLayoutShiftScrollCompensation({\n  activeNode,\n  measure,\n  initialRect,\n  config = true,\n}: Options) {\n  const initialized = useRef(false);\n  const {x, y} = typeof config === 'boolean' ? {x: config, y: config} : config;\n\n  useIsomorphicLayoutEffect(() => {\n    const disabled = !x && !y;\n\n    if (disabled || !activeNode) {\n      initialized.current = false;\n      return;\n    }\n\n    if (initialized.current || !initialRect) {\n      // Return early if layout shift scroll compensation was already attempted\n      // or if there is no initialRect to compare to.\n      return;\n    }\n\n    // Get the most up to date node ref for the active draggable\n    const node = activeNode?.node.current;\n\n    if (!node || node.isConnected === false) {\n      // Return early if there is no attached node ref or if the node is\n      // disconnected from the document.\n      return;\n    }\n\n    const rect = measure(node);\n    const rectDelta = getRectDelta(rect, initialRect);\n\n    if (!x) {\n      rectDelta.x = 0;\n    }\n\n    if (!y) {\n      rectDelta.y = 0;\n    }\n\n    // Only perform layout shift scroll compensation once\n    initialized.current = true;\n\n    if (Math.abs(rectDelta.x) > 0 || Math.abs(rectDelta.y) > 0) {\n      const firstScrollableAncestor = getFirstScrollableAncestor(node);\n\n      if (firstScrollableAncestor) {\n        firstScrollableAncestor.scrollBy({\n          top: rectDelta.y,\n          left: rectDelta.x,\n        });\n      }\n    }\n  }, [activeNode, x, y, initialRect, measure]);\n}\n","import {useMemo, useCallback, useState} from 'react';\nimport {isHTMLElement, useNodeRef} from '@dnd-kit/utilities';\n\nimport {useResizeObserver} from './useResizeObserver';\nimport {getMeasurableNode} from '../../utilities/nodes';\nimport type {PublicContextDescriptor} from '../../store';\nimport type {ClientRect} from '../../types';\n\ninterface Arguments {\n  measure(element: HTMLElement): ClientRect;\n}\n\nexport function useDragOverlayMeasuring({\n  measure,\n}: Arguments): PublicContextDescriptor['dragOverlay'] {\n  const [rect, setRect] = useState<ClientRect | null>(null);\n  const handleResize = useCallback(\n    (entries: ResizeObserverEntry[]) => {\n      for (const {target} of entries) {\n        if (isHTMLElement(target)) {\n          setRect((rect) => {\n            const newRect = measure(target);\n\n            return rect\n              ? {...rect, width: newRect.width, height: newRect.height}\n              : newRect;\n          });\n          break;\n        }\n      }\n    },\n    [measure]\n  );\n  const resizeObserver = useResizeObserver({callback: handleResize});\n  const handleNodeChange = useCallback(\n    (element) => {\n      const node = getMeasurableNode(element);\n\n      resizeObserver?.disconnect();\n\n      if (node) {\n        resizeObserver?.observe(node);\n      }\n\n      setRect(node ? measure(node) : null);\n    },\n    [measure, resizeObserver]\n  );\n  const [nodeRef, setRef] = useNodeRef(handleNodeChange);\n\n  return useMemo(\n    () => ({\n      nodeRef,\n      rect,\n      setRef,\n    }),\n    [rect, nodeRef, setRef]\n  );\n}\n","import type {ClientRect} from '../../types';\nimport {getRectDelta} from '../../utilities';\n\nimport {useInitialValue} from './useInitialValue';\n\nexport function useRectDelta(rect: ClientRect | null) {\n  const initialRect = useInitialValue(rect);\n\n  return getRectDelta(rect, initialRect);\n}\n","import {useState, useCallback, useMemo, useRef, useEffect} from 'react';\nimport {add} from '@dnd-kit/utilities';\n\nimport {\n  defaultCoordinates,\n  getScrollableElement,\n  getScrollCoordinates,\n  getScrollOffsets,\n} from '../../utilities';\nimport type {Coordinates} from '../../types';\n\ntype ScrollCoordinates = Map<HTMLElement | Window, Coordinates>;\n\nexport function useScrollOffsets(elements: Element[]): Coordinates {\n  const [\n    scrollCoordinates,\n    setScrollCoordinates,\n  ] = useState<ScrollCoordinates | null>(null);\n  const prevElements = useRef(elements);\n\n  // To-do: Throttle the handleScroll callback\n  const handleScroll = useCallback((event: Event) => {\n    const scrollingElement = getScrollableElement(event.target);\n\n    if (!scrollingElement) {\n      return;\n    }\n\n    setScrollCoordinates((scrollCoordinates) => {\n      if (!scrollCoordinates) {\n        return null;\n      }\n\n      scrollCoordinates.set(\n        scrollingElement,\n        getScrollCoordinates(scrollingElement)\n      );\n\n      return new Map(scrollCoordinates);\n    });\n  }, []);\n\n  useEffect(() => {\n    const previousElements = prevElements.current;\n\n    if (elements !== previousElements) {\n      cleanup(previousElements);\n\n      const entries = elements\n        .map((element) => {\n          const scrollableElement = getScrollableElement(element);\n\n          if (scrollableElement) {\n            scrollableElement.addEventListener('scroll', handleScroll, {\n              passive: true,\n            });\n\n            return [\n              scrollableElement,\n              getScrollCoordinates(scrollableElement),\n            ] as const;\n          }\n\n          return null;\n        })\n        .filter(\n          (\n            entry\n          ): entry is [\n            HTMLElement | (Window & typeof globalThis),\n            Coordinates\n          ] => entry != null\n        );\n\n      setScrollCoordinates(entries.length ? new Map(entries) : null);\n\n      prevElements.current = elements;\n    }\n\n    return () => {\n      cleanup(elements);\n      cleanup(previousElements);\n    };\n\n    function cleanup(elements: Element[]) {\n      elements.forEach((element) => {\n        const scrollableElement = getScrollableElement(element);\n\n        scrollableElement?.removeEventListener('scroll', handleScroll);\n      });\n    }\n  }, [handleScroll, elements]);\n\n  return useMemo(() => {\n    if (elements.length) {\n      return scrollCoordinates\n        ? Array.from(scrollCoordinates.values()).reduce(\n            (acc, coordinates) => add(acc, coordinates),\n            defaultCoordinates\n          )\n        : getScrollOffsets(elements);\n    }\n\n    return defaultCoordinates;\n  }, [elements, scrollCoordinates]);\n}\n","import type {Transform} from '@dnd-kit/utilities';\nimport type {ClientRect} from '../../types';\n\nexport function adjustScale(\n  transform: Transform,\n  rect1: ClientRect | null,\n  rect2: ClientRect | null\n): Transform {\n  return {\n    ...transform,\n    scaleX: rect1 && rect2 ? rect1.width / rect2.width : 1,\n    scaleY: rect1 && rect2 ? rect1.height / rect2.height : 1,\n  };\n}\n","import {useMemo} from 'react';\n\nimport type {SensorActivatorFunction, SensorDescriptor} from '../../sensors';\nimport type {\n  SyntheticListener,\n  SyntheticListeners,\n} from './useSyntheticListeners';\n\nexport function useCombineActivators(\n  sensors: SensorDescriptor<any>[],\n  getSyntheticHandler: (\n    handler: SensorActivatorFunction<any>,\n    sensor: SensorDescriptor<any>\n  ) => SyntheticListener['handler']\n): SyntheticListeners {\n  return useMemo(\n    () =>\n      sensors.reduce<SyntheticListeners>((accumulator, sensor) => {\n        const {sensor: Sensor} = sensor;\n\n        const sensorActivators = Sensor.activators.map((activator) => ({\n          eventName: activator.eventName,\n          handler: getSyntheticHandler(activator.handler, sensor),\n        }));\n\n        return [...accumulator, ...sensorActivators];\n      }, []),\n    [sensors, getSyntheticHandler]\n  );\n}\n","import {useEffect} from 'react';\nimport {canUseDOM} from '@dnd-kit/utilities';\n\nimport type {SensorDescriptor} from '../../sensors';\n\nexport function useSensorSetup(sensors: SensorDescriptor<any>[]) {\n  useEffect(\n    () => {\n      if (!canUseDOM) {\n        return;\n      }\n\n      const teardownFns = sensors.map(({sensor}) => sensor.setup?.());\n\n      return () => {\n        for (const teardown of teardownFns) {\n          teardown?.();\n        }\n      };\n    },\n    // TO-DO: Sensors length could theoretically change which would not be a valid dependency\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    sensors.map(({sensor}) => sensor)\n  );\n}\n","import {createContext, useContext, useMemo} from 'react';\nimport {\n  Transform,\n  useNodeRef,\n  useIsomorphicLayoutEffect,\n  useLatestValue,\n  useUniqueId,\n} from '@dnd-kit/utilities';\n\nimport {InternalContext, Data} from '../store';\nimport type {UniqueIdentifier} from '../types';\nimport {ActiveDraggableContext} from '../components/DndContext';\nimport {useSyntheticListeners, SyntheticListenerMap} from './utilities';\n\nexport interface UseDraggableArguments {\n  id: UniqueIdentifier;\n  data?: Data;\n  disabled?: boolean;\n  attributes?: {\n    role?: string;\n    roleDescription?: string;\n    tabIndex?: number;\n  };\n}\n\nexport interface DraggableAttributes {\n  role: string;\n  tabIndex: number;\n  'aria-disabled': boolean;\n  'aria-pressed': boolean | undefined;\n  'aria-roledescription': string;\n  'aria-describedby': string;\n}\n\nexport type DraggableSyntheticListeners = SyntheticListenerMap | undefined;\n\nconst NullContext = createContext<any>(null);\n\nconst defaultRole = 'button';\n\nconst ID_PREFIX = 'Droppable';\n\nexport function useDraggable({\n  id,\n  data,\n  disabled = false,\n  attributes,\n}: UseDraggableArguments) {\n  const key = useUniqueId(ID_PREFIX);\n  const {\n    activators,\n    activatorEvent,\n    active,\n    activeNodeRect,\n    ariaDescribedById,\n    draggableNodes,\n    over,\n  } = useContext(InternalContext);\n  const {\n    role = defaultRole,\n    roleDescription = 'draggable',\n    tabIndex = 0,\n  } = attributes ?? {};\n  const isDragging = active?.id === id;\n  const transform: Transform | null = useContext(\n    isDragging ? ActiveDraggableContext : NullContext\n  );\n  const [node, setNodeRef] = useNodeRef();\n  const [activatorNode, setActivatorNodeRef] = useNodeRef();\n  const listeners = useSyntheticListeners(activators, id);\n  const dataRef = useLatestValue(data);\n\n  useIsomorphicLayoutEffect(\n    () => {\n      draggableNodes.set(id, {id, key, node, activatorNode, data: dataRef});\n\n      return () => {\n        const node = draggableNodes.get(id);\n\n        if (node && node.key === key) {\n          draggableNodes.delete(id);\n        }\n      };\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [draggableNodes, id]\n  );\n\n  const memoizedAttributes: DraggableAttributes = useMemo(\n    () => ({\n      role,\n      tabIndex,\n      'aria-disabled': disabled,\n      'aria-pressed': isDragging && role === defaultRole ? true : undefined,\n      'aria-roledescription': roleDescription,\n      'aria-describedby': ariaDescribedById.draggable,\n    }),\n    [\n      disabled,\n      role,\n      tabIndex,\n      isDragging,\n      roleDescription,\n      ariaDescribedById.draggable,\n    ]\n  );\n\n  return {\n    active,\n    activatorEvent,\n    activeNodeRect,\n    attributes: memoizedAttributes,\n    isDragging,\n    listeners: disabled ? undefined : listeners,\n    node,\n    over,\n    setNodeRef,\n    setActivatorNodeRef,\n    transform,\n  };\n}\n","import {useMemo} from 'react';\n\nimport type {SyntheticEventName, UniqueIdentifier} from '../../types';\n\nexport type SyntheticListener = {\n  eventName: SyntheticEventName;\n  handler: (event: React.SyntheticEvent, id: UniqueIdentifier) => void;\n};\n\nexport type SyntheticListeners = SyntheticListener[];\n\nexport type SyntheticListenerMap = Record<string, Function>;\n\nexport function useSyntheticListeners(\n  listeners: SyntheticListeners,\n  id: UniqueIdentifier\n): SyntheticListenerMap {\n  return useMemo(() => {\n    return listeners.reduce<SyntheticListenerMap>(\n      (acc, {eventName, handler}) => {\n        acc[eventName] = (event: React.SyntheticEvent) => {\n          handler(event, id);\n        };\n\n        return acc;\n      },\n      {} as SyntheticListenerMap\n    );\n  }, [listeners, id]);\n}\n","import {ContextType, useContext} from 'react';\nimport {PublicContext} from '../store';\n\nexport function useDndContext() {\n  return useContext(PublicContext);\n}\n\nexport type UseDndContextReturnValue = ContextType<typeof PublicContext>;\n","import {useCallback, useContext, useEffect, useRef} from 'react';\nimport {\n  useIsomorphicLayoutEffect,\n  useLatestValue,\n  useNodeRef,\n  useUniqueId,\n} from '@dnd-kit/utilities';\n\nimport {InternalContext, Action, Data} from '../store';\nimport type {ClientRect, UniqueIdentifier} from '../types';\n\nimport {useResizeObserver} from './utilities';\n\ninterface ResizeObserverConfig {\n  /** Whether the ResizeObserver should be disabled entirely */\n  disabled?: boolean;\n  /** Resize events may affect the layout and position of other droppable containers.\n   * Specify an array of `UniqueIdentifier` of droppable containers that should also be re-measured\n   * when this droppable container resizes. Specifying an empty array re-measures all droppable containers.\n   */\n  updateMeasurementsFor?: UniqueIdentifier[];\n  /** Represents the debounce timeout between when resize events are observed and when elements are re-measured */\n  timeout?: number;\n}\n\nexport interface UseDroppableArguments {\n  id: UniqueIdentifier;\n  disabled?: boolean;\n  data?: Data;\n  resizeObserverConfig?: ResizeObserverConfig;\n}\n\nconst ID_PREFIX = 'Droppable';\n\nconst defaultResizeObserverConfig = {\n  timeout: 25,\n};\n\nexport function useDroppable({\n  data,\n  disabled = false,\n  id,\n  resizeObserverConfig,\n}: UseDroppableArguments) {\n  const key = useUniqueId(ID_PREFIX);\n  const {active, dispatch, over, measureDroppableContainers} = useContext(\n    InternalContext\n  );\n  const previous = useRef({disabled});\n  const resizeObserverConnected = useRef(false);\n  const rect = useRef<ClientRect | null>(null);\n  const callbackId = useRef<NodeJS.Timeout | null>(null);\n  const {\n    disabled: resizeObserverDisabled,\n    updateMeasurementsFor,\n    timeout: resizeObserverTimeout,\n  } = {\n    ...defaultResizeObserverConfig,\n    ...resizeObserverConfig,\n  };\n  const ids = useLatestValue(updateMeasurementsFor ?? id);\n  const handleResize = useCallback(\n    () => {\n      if (!resizeObserverConnected.current) {\n        // ResizeObserver invokes the `handleResize` callback as soon as `observe` is called,\n        // assuming the element is rendered and displayed.\n        resizeObserverConnected.current = true;\n        return;\n      }\n\n      if (callbackId.current != null) {\n        clearTimeout(callbackId.current);\n      }\n\n      callbackId.current = setTimeout(() => {\n        measureDroppableContainers(\n          Array.isArray(ids.current) ? ids.current : [ids.current]\n        );\n        callbackId.current = null;\n      }, resizeObserverTimeout);\n    },\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n    [resizeObserverTimeout]\n  );\n  const resizeObserver = useResizeObserver({\n    callback: handleResize,\n    disabled: resizeObserverDisabled || !active,\n  });\n  const handleNodeChange = useCallback(\n    (newElement: HTMLElement | null, previousElement: HTMLElement | null) => {\n      if (!resizeObserver) {\n        return;\n      }\n\n      if (previousElement) {\n        resizeObserver.unobserve(previousElement);\n        resizeObserverConnected.current = false;\n      }\n\n      if (newElement) {\n        resizeObserver.observe(newElement);\n      }\n    },\n    [resizeObserver]\n  );\n  const [nodeRef, setNodeRef] = useNodeRef(handleNodeChange);\n  const dataRef = useLatestValue(data);\n\n  useEffect(() => {\n    if (!resizeObserver || !nodeRef.current) {\n      return;\n    }\n\n    resizeObserver.disconnect();\n    resizeObserverConnected.current = false;\n    resizeObserver.observe(nodeRef.current);\n  }, [nodeRef, resizeObserver]);\n\n  useIsomorphicLayoutEffect(\n    () => {\n      dispatch({\n        type: Action.RegisterDroppable,\n        element: {\n          id,\n          key,\n          disabled,\n          node: nodeRef,\n          rect,\n          data: dataRef,\n        },\n      });\n\n      return () =>\n        dispatch({\n          type: Action.UnregisterDroppable,\n          key,\n          id,\n        });\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [id]\n  );\n\n  useEffect(() => {\n    if (disabled !== previous.current.disabled) {\n      dispatch({\n        type: Action.SetDroppableDisabled,\n        id,\n        key,\n        disabled,\n      });\n\n      previous.current.disabled = disabled;\n    }\n  }, [id, key, disabled, dispatch]);\n\n  return {\n    active,\n    rect,\n    isOver: over?.id === id,\n    node: nodeRef,\n    over,\n    setNodeRef,\n  };\n}\n","import React, {cloneElement, useState} from 'react';\nimport {useIsomorphicLayoutEffect, usePrevious} from '@dnd-kit/utilities';\n\nimport type {UniqueIdentifier} from '../../../../types';\n\nexport type Animation = (\n  key: UniqueIdentifier,\n  node: HTMLElement\n) => Promise<void> | void;\n\nexport interface Props {\n  animation: Animation;\n  children: React.ReactElement | null;\n}\n\nexport function AnimationManager({animation, children}: Props) {\n  const [\n    clonedChildren,\n    setClonedChildren,\n  ] = useState<React.ReactElement | null>(null);\n  const [element, setElement] = useState<HTMLElement | null>(null);\n  const previousChildren = usePrevious(children);\n\n  if (!children && !clonedChildren && previousChildren) {\n    setClonedChildren(previousChildren);\n  }\n\n  useIsomorphicLayoutEffect(() => {\n    if (!element) {\n      return;\n    }\n\n    const key = clonedChildren?.key;\n    const id = clonedChildren?.props.id;\n\n    if (key == null || id == null) {\n      setClonedChildren(null);\n      return;\n    }\n\n    Promise.resolve(animation(id, element)).then(() => {\n      setClonedChildren(null);\n    });\n  }, [animation, clonedChildren, element]);\n\n  return (\n    <>\n      {children}\n      {clonedChildren ? cloneElement(clonedChildren, {ref: setElement}) : null}\n    </>\n  );\n}\n","import React from 'react';\nimport type {Transform} from '@dnd-kit/utilities';\n\nimport {InternalContext, defaultInternalContext} from '../../../../store';\nimport {ActiveDraggableContext} from '../../../DndContext';\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nconst defaultTransform: Transform = {\n  x: 0,\n  y: 0,\n  scaleX: 1,\n  scaleY: 1,\n};\n\nexport function NullifiedContextProvider({children}: Props) {\n  return (\n    <InternalContext.Provider value={defaultInternalContext}>\n      <ActiveDraggableContext.Provider value={defaultTransform}>\n        {children}\n      </ActiveDraggableContext.Provider>\n    </InternalContext.Provider>\n  );\n}\n","import React, {forwardRef} from 'react';\nimport {CSS, isKeyboardEvent} from '@dnd-kit/utilities';\n\nimport type {Transform} from '@dnd-kit/utilities';\n\nimport {getRelativeTransformOrigin} from '../../../../utilities';\nimport type {ClientRect, UniqueIdentifier} from '../../../../types';\n\ntype TransitionGetter = (\n  activatorEvent: Event | null\n) => React.CSSProperties['transition'] | undefined;\n\nexport interface Props {\n  as: keyof JSX.IntrinsicElements;\n  activatorEvent: Event | null;\n  adjustScale?: boolean;\n  children?: React.ReactNode;\n  className?: string;\n  id: UniqueIdentifier;\n  rect: ClientRect | null;\n  style?: React.CSSProperties;\n  transition?: string | TransitionGetter;\n  transform: Transform;\n}\n\nconst baseStyles: React.CSSProperties = {\n  position: 'fixed',\n  touchAction: 'none',\n};\n\nconst defaultTransition: TransitionGetter = (activatorEvent) => {\n  const isKeyboardActivator = isKeyboardEvent(activatorEvent);\n\n  return isKeyboardActivator ? 'transform 250ms ease' : undefined;\n};\n\nexport const PositionedOverlay = forwardRef<HTMLElement, Props>(\n  (\n    {\n      as,\n      activatorEvent,\n      adjustScale,\n      children,\n      className,\n      rect,\n      style,\n      transform,\n      transition = defaultTransition,\n    },\n    ref\n  ) => {\n    if (!rect) {\n      return null;\n    }\n\n    const scaleAdjustedTransform = adjustScale\n      ? transform\n      : {\n          ...transform,\n          scaleX: 1,\n          scaleY: 1,\n        };\n    const styles: React.CSSProperties | undefined = {\n      ...baseStyles,\n      width: rect.width,\n      height: rect.height,\n      top: rect.top,\n      left: rect.left,\n      transform: CSS.Transform.toString(scaleAdjustedTransform),\n      transformOrigin:\n        adjustScale && activatorEvent\n          ? getRelativeTransformOrigin(\n              activatorEvent as MouseEvent | KeyboardEvent | TouchEvent,\n              rect\n            )\n          : undefined,\n      transition:\n        typeof transition === 'function'\n          ? transition(activatorEvent)\n          : transition,\n      ...style,\n    };\n\n    return React.createElement(\n      as,\n      {\n        className,\n        style: styles,\n        ref,\n      },\n      children\n    );\n  }\n);\n","import {CSS, useEvent, getWindow} from '@dnd-kit/utilities';\nimport type {DeepRequired, Transform} from '@dnd-kit/utilities';\n\nimport type {\n  Active,\n  DraggableNode,\n  DraggableNodes,\n  DroppableContainers,\n} from '../../../store';\nimport type {ClientRect, UniqueIdentifier} from '../../../types';\nimport {getMeasurableNode} from '../../../utilities/nodes';\nimport {scrollIntoViewIfNeeded} from '../../../utilities/scroll';\nimport {parseTransform} from '../../../utilities/transform';\nimport type {MeasuringConfiguration} from '../../DndContext';\nimport type {Animation} from '../components';\n\ninterface SharedParameters {\n  active: {\n    id: UniqueIdentifier;\n    data: Active['data'];\n    node: HTMLElement;\n    rect: ClientRect;\n  };\n  dragOverlay: {\n    node: HTMLElement;\n    rect: ClientRect;\n  };\n  draggableNodes: DraggableNodes;\n  droppableContainers: DroppableContainers;\n  measuringConfiguration: DeepRequired<MeasuringConfiguration>;\n}\n\nexport interface KeyframeResolverParameters extends SharedParameters {\n  transform: {\n    initial: Transform;\n    final: Transform;\n  };\n}\n\nexport type KeyframeResolver = (\n  parameters: KeyframeResolverParameters\n) => Keyframe[];\n\nexport interface DropAnimationOptions {\n  keyframes?: KeyframeResolver;\n  duration?: number;\n  easing?: string;\n  sideEffects?: DropAnimationSideEffects | null;\n}\n\nexport type DropAnimation = DropAnimationFunction | DropAnimationOptions;\n\ninterface Arguments {\n  draggableNodes: DraggableNodes;\n  droppableContainers: DroppableContainers;\n  measuringConfiguration: DeepRequired<MeasuringConfiguration>;\n  config?: DropAnimation | null;\n}\n\nexport interface DropAnimationFunctionArguments extends SharedParameters {\n  transform: Transform;\n}\n\nexport type DropAnimationFunction = (\n  args: DropAnimationFunctionArguments\n) => Promise<void> | void;\n\ntype CleanupFunction = () => void;\n\nexport interface DropAnimationSideEffectsParameters extends SharedParameters {}\n\nexport type DropAnimationSideEffects = (\n  parameters: DropAnimationSideEffectsParameters\n) => CleanupFunction | void;\n\ntype ExtractStringProperties<T> = {\n  [K in keyof T]?: T[K] extends string ? string : never;\n};\n\ntype Styles = ExtractStringProperties<CSSStyleDeclaration>;\n\ninterface DefaultDropAnimationSideEffectsOptions {\n  className?: {\n    active?: string;\n    dragOverlay?: string;\n  };\n  styles?: {\n    active?: Styles;\n    dragOverlay?: Styles;\n  };\n}\n\nexport const defaultDropAnimationSideEffects = (\n  options: DefaultDropAnimationSideEffectsOptions\n): DropAnimationSideEffects => ({active, dragOverlay}) => {\n  const originalStyles: Record<string, string> = {};\n  const {styles, className} = options;\n\n  if (styles?.active) {\n    for (const [key, value] of Object.entries(styles.active)) {\n      if (value === undefined) {\n        continue;\n      }\n\n      originalStyles[key] = active.node.style.getPropertyValue(key);\n      active.node.style.setProperty(key, value);\n    }\n  }\n\n  if (styles?.dragOverlay) {\n    for (const [key, value] of Object.entries(styles.dragOverlay)) {\n      if (value === undefined) {\n        continue;\n      }\n\n      dragOverlay.node.style.setProperty(key, value);\n    }\n  }\n\n  if (className?.active) {\n    active.node.classList.add(className.active);\n  }\n\n  if (className?.dragOverlay) {\n    dragOverlay.node.classList.add(className.dragOverlay);\n  }\n\n  return function cleanup() {\n    for (const [key, value] of Object.entries(originalStyles)) {\n      active.node.style.setProperty(key, value);\n    }\n\n    if (className?.active) {\n      active.node.classList.remove(className.active);\n    }\n  };\n};\n\nconst defaultKeyframeResolver: KeyframeResolver = ({\n  transform: {initial, final},\n}) => [\n  {\n    transform: CSS.Transform.toString(initial),\n  },\n  {\n    transform: CSS.Transform.toString(final),\n  },\n];\n\nexport const defaultDropAnimationConfiguration: Required<DropAnimationOptions> = {\n  duration: 250,\n  easing: 'ease',\n  keyframes: defaultKeyframeResolver,\n  sideEffects: defaultDropAnimationSideEffects({\n    styles: {\n      active: {\n        opacity: '0',\n      },\n    },\n  }),\n};\n\nexport function useDropAnimation({\n  config,\n  draggableNodes,\n  droppableContainers,\n  measuringConfiguration,\n}: Arguments) {\n  return useEvent<Animation>((id, node) => {\n    if (config === null) {\n      return;\n    }\n\n    const activeDraggable: DraggableNode | undefined = draggableNodes.get(id);\n\n    if (!activeDraggable) {\n      return;\n    }\n\n    const activeNode = activeDraggable.node.current;\n\n    if (!activeNode) {\n      return;\n    }\n\n    const measurableNode = getMeasurableNode(node);\n\n    if (!measurableNode) {\n      return;\n    }\n    const {transform} = getWindow(node).getComputedStyle(node);\n    const parsedTransform = parseTransform(transform);\n\n    if (!parsedTransform) {\n      return;\n    }\n\n    const animation: DropAnimationFunction =\n      typeof config === 'function'\n        ? config\n        : createDefaultDropAnimation(config);\n\n    scrollIntoViewIfNeeded(\n      activeNode,\n      measuringConfiguration.draggable.measure\n    );\n\n    return animation({\n      active: {\n        id,\n        data: activeDraggable.data,\n        node: activeNode,\n        rect: measuringConfiguration.draggable.measure(activeNode),\n      },\n      draggableNodes,\n      dragOverlay: {\n        node,\n        rect: measuringConfiguration.dragOverlay.measure(measurableNode),\n      },\n      droppableContainers,\n      measuringConfiguration,\n      transform: parsedTransform,\n    });\n  });\n}\n\nfunction createDefaultDropAnimation(\n  options: DropAnimationOptions | undefined\n): DropAnimationFunction {\n  const {duration, easing, sideEffects, keyframes} = {\n    ...defaultDropAnimationConfiguration,\n    ...options,\n  };\n\n  return ({active, dragOverlay, transform, ...rest}) => {\n    if (!duration) {\n      // Do not animate if animation duration is zero.\n      return;\n    }\n\n    const delta = {\n      x: dragOverlay.rect.left - active.rect.left,\n      y: dragOverlay.rect.top - active.rect.top,\n    };\n\n    const scale = {\n      scaleX:\n        transform.scaleX !== 1\n          ? (active.rect.width * transform.scaleX) / dragOverlay.rect.width\n          : 1,\n      scaleY:\n        transform.scaleY !== 1\n          ? (active.rect.height * transform.scaleY) / dragOverlay.rect.height\n          : 1,\n    };\n    const finalTransform = {\n      x: transform.x - delta.x,\n      y: transform.y - delta.y,\n      ...scale,\n    };\n\n    const animationKeyframes = keyframes({\n      ...rest,\n      active,\n      dragOverlay,\n      transform: {initial: transform, final: finalTransform},\n    });\n\n    const [firstKeyframe] = animationKeyframes;\n    const lastKeyframe = animationKeyframes[animationKeyframes.length - 1];\n\n    if (JSON.stringify(firstKeyframe) === JSON.stringify(lastKeyframe)) {\n      // The start and end keyframes are the same, infer that there is no animation needed.\n      return;\n    }\n\n    const cleanup = sideEffects?.({active, dragOverlay, ...rest});\n    const animation = dragOverlay.node.animate(animationKeyframes, {\n      duration,\n      easing,\n      fill: 'forwards',\n    });\n\n    return new Promise((resolve) => {\n      animation.onfinish = () => {\n        cleanup?.();\n        resolve();\n      };\n    });\n  };\n}\n","import {useMemo} from 'react';\n\nimport type {UniqueIdentifier} from '../../../types';\n\nlet key = 0;\n\nexport function useKey(id: UniqueIdentifier | undefined) {\n  return useMemo(() => {\n    if (id == null) {\n      return;\n    }\n\n    key++;\n    return key;\n  }, [id]);\n}\n","import React, {useContext} from 'react';\n\nimport {applyModifiers, Modifiers} from '../../modifiers';\nimport {ActiveDraggableContext} from '../DndContext';\nimport {useDndContext} from '../../hooks';\nimport {useInitialValue} from '../../hooks/utilities';\n\nimport {\n  AnimationManager,\n  NullifiedContextProvider,\n  PositionedOverlay,\n} from './components';\nimport type {PositionedOverlayProps} from './components';\n\nimport {useDropAnimation, useKey} from './hooks';\nimport type {DropAnimation} from './hooks';\n\nexport interface Props\n  extends Pick<\n    PositionedOverlayProps,\n    'adjustScale' | 'children' | 'className' | 'style' | 'transition'\n  > {\n  dropAnimation?: DropAnimation | null | undefined;\n  modifiers?: Modifiers;\n  wrapperElement?: keyof JSX.IntrinsicElements;\n  zIndex?: number;\n}\n\nexport const DragOverlay = React.memo(\n  ({\n    adjustScale = false,\n    children,\n    dropAnimation: dropAnimationConfig,\n    style,\n    transition,\n    modifiers,\n    wrapperElement = 'div',\n    className,\n    zIndex = 999,\n  }: Props) => {\n    const {\n      activatorEvent,\n      active,\n      activeNodeRect,\n      containerNodeRect,\n      draggableNodes,\n      droppableContainers,\n      dragOverlay,\n      over,\n      measuringConfiguration,\n      scrollableAncestors,\n      scrollableAncestorRects,\n      windowRect,\n    } = useDndContext();\n    const transform = useContext(ActiveDraggableContext);\n    const key = useKey(active?.id);\n    const modifiedTransform = applyModifiers(modifiers, {\n      activatorEvent,\n      active,\n      activeNodeRect,\n      containerNodeRect,\n      draggingNodeRect: dragOverlay.rect,\n      over,\n      overlayNodeRect: dragOverlay.rect,\n      scrollableAncestors,\n      scrollableAncestorRects,\n      transform,\n      windowRect,\n    });\n    const initialRect = useInitialValue(activeNodeRect);\n    const dropAnimation = useDropAnimation({\n      config: dropAnimationConfig,\n      draggableNodes,\n      droppableContainers,\n      measuringConfiguration,\n    });\n    // We need to wait for the active node to be measured before connecting the drag overlay ref\n    // otherwise collisions can be computed against a mispositioned drag overlay\n    const ref = initialRect ? dragOverlay.setRef : undefined;\n\n    return (\n      <NullifiedContextProvider>\n        <AnimationManager animation={dropAnimation}>\n          {active && key ? (\n            <PositionedOverlay\n              key={key}\n              id={active.id}\n              ref={ref}\n              as={wrapperElement}\n              activatorEvent={activatorEvent}\n              adjustScale={adjustScale}\n              className={className}\n              transition={transition}\n              rect={initialRect}\n              style={{\n                zIndex,\n                ...style,\n              }}\n              transform={modifiedTransform}\n            >\n              {children}\n            </PositionedOverlay>\n          ) : null}\n        </AnimationManager>\n      </NullifiedContextProvider>\n    );\n  }\n);\n","function _AwaitValue(value) {\n  this.wrapped = value;\n}\n\nmodule.exports = _AwaitValue;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","import {DirectionalLight} from './directional-light';\nimport {getSunDirection} from '@math.gl/sun';\n\nimport type Layer from '../../lib/layer';\n\nexport type SunLightOptions = {\n  id?: string;\n  /** Light color, [r, g, b] in the 0-255 range\n   * @default [255, 255, 255]\n   */\n  color?: number[];\n  /** Light intensity, higher number is brighter\n   * @default 1.0\n   */\n  intensity?: number;\n  /**\n   * The time at which to position the sun. Either a Date object or a timestamp (milliseconds elapsed since unix time 0)\n   */\n  timestamp: number | Date;\n  /** (Experimental) render shadows casted by this light\n   * @default false\n   */\n  _shadow?: boolean;\n};\n\nexport default class SunLight extends DirectionalLight {\n  timestamp: number | Date;\n\n  constructor(opts: SunLightOptions) {\n    super(opts);\n\n    this.timestamp = opts.timestamp;\n  }\n\n  getProjectedLight({layer}: {layer: Layer}): DirectionalLight {\n    const {viewport} = layer.context;\n    const isGlobe = viewport.resolution && viewport.resolution > 0;\n\n    if (isGlobe) {\n      // Rotate vector to align with the direction of the globe projection (up at lon:0,lat:0 is [0, -1, 0])\n      const [x, y, z] = getSunDirection(this.timestamp, 0, 0);\n      this.direction = [x, -z, y];\n    } else {\n      // @ts-expect-error longitude and latitude are not defined on all viewports\n      const {latitude, longitude} = viewport;\n      this.direction = getSunDirection(this.timestamp, latitude, longitude);\n    }\n\n    return this;\n  }\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport {deepEqual} from '../utils/deep-equal';\nimport type Layer from './layer';\nimport type CompositeLayer from './composite-layer';\nimport type {UpdateParameters} from './layer';\nimport type {LayerContext} from './layer-manager';\n\nexport default abstract class LayerExtension<OptionsT = unknown> {\n  static defaultProps = {};\n  static extensionName = 'LayerExtension';\n\n  static get componentName() {\n    return Object.prototype.hasOwnProperty.call(this, 'extensionName') ? this.extensionName : '';\n  }\n\n  opts!: OptionsT;\n\n  constructor(opts?: OptionsT) {\n    if (opts) {\n      this.opts = opts;\n    }\n  }\n\n  /** Returns true if two extensions are equivalent */\n  equals(extension: LayerExtension<OptionsT>): boolean {\n    if (this === extension) {\n      return true;\n    }\n\n    // Compare extensions shallowly\n    return this.constructor === extension.constructor && deepEqual(this.opts, extension.opts, 1);\n  }\n\n  /** Only called if attached to a primitive layer */\n  getShaders(this: Layer, extension: this): any {\n    return null;\n  }\n\n  /** Only called if attached to a CompositeLayer */\n  getSubLayerProps(this: CompositeLayer, extension: this): any {\n    const {defaultProps} = extension.constructor as typeof LayerExtension;\n    const newProps = {\n      updateTriggers: {}\n    };\n\n    /* eslint-disable max-depth */\n    for (const key in defaultProps) {\n      if (key in this.props) {\n        const propDef = defaultProps[key];\n        const propValue = this.props[key];\n        newProps[key] = propValue;\n        if (propDef && propDef.type === 'accessor') {\n          newProps.updateTriggers[key] = this.props.updateTriggers[key];\n          if (typeof propValue === 'function') {\n            newProps[key] = this.getSubLayerAccessor(propValue);\n          }\n        }\n      }\n    }\n    /* eslint-enable max-depth */\n    return newProps;\n  }\n\n  /* eslint-disable @typescript-eslint/no-empty-function */\n  initializeState(this: Layer, context: LayerContext, extension: this): void {}\n\n  updateState(this: Layer, params: UpdateParameters<Layer>, extension: this): void {}\n\n  onNeedsRedraw(this: Layer, extension: this): void {}\n\n  getNeedsPickingBuffer(this: Layer, extension: this): boolean {\n    return false;\n  }\n\n  draw(this: Layer, params: any, extension: this): void {}\n\n  finalizeState(this: Layer, context: LayerContext, extension: this): void {}\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport project from '../project/project';\nimport type {ShaderModule} from '../../types/types';\n\nconst vs = `\nvec4 project_position_to_clipspace(\n  vec3 position, vec3 position64Low, vec3 offset, out vec4 commonPosition\n) {\n  vec3 projectedPosition = project_position(position, position64Low);\n  mat3 rotation;\n  if (project_needs_rotation(projectedPosition, rotation)) {\n    // offset is specified as ENU\n    // when in globe projection, rotate offset so that the ground alighs with the surface of the globe\n    offset = rotation * offset;\n  }\n  commonPosition = vec4(projectedPosition + offset, 1.0);\n  return project_common_position_to_clipspace(commonPosition);\n}\n\nvec4 project_position_to_clipspace(\n  vec3 position, vec3 position64Low, vec3 offset\n) {\n  vec4 commonPosition;\n  return project_position_to_clipspace(position, position64Low, offset, commonPosition);\n}\n`;\n\nexport default {\n  name: 'project32',\n  dependencies: [project],\n  vs\n} as ShaderModule;\n","import {picking} from '@luma.gl/core';\nimport type {ShaderModule} from '../../types/types';\n\ntype PickingModuleSettings = {\n  /** Set to a picking color to visually highlight that item */\n  pickingSelectedColor?: [number, number, number] | null;\n  /** Color of the highlight */\n  pickingHighlightColor?: [number, number, number, number];\n  /** Set to true when rendering to off-screen \"picking\" buffer */\n  pickingActive?: boolean;\n  /** Set to true when picking an attribute value instead of object index */\n  pickingAttribute?: boolean;\n};\n\nexport default {\n  inject: {\n    'vs:DECKGL_FILTER_GL_POSITION': `\n    // for picking depth values\n    picking_setPickingAttribute(position.z / position.w);\n  `,\n    'vs:DECKGL_FILTER_COLOR': `\n  picking_setPickingColor(geometry.pickingColor);\n  `,\n    // TODO - this should be declared in the luma module\n    'fs:#decl': `\nuniform bool picking_uAttribute;\n  `,\n    'fs:DECKGL_FILTER_COLOR': {\n      order: 99,\n      injection: `\n  // use highlight color if this fragment belongs to the selected object.\n  color = picking_filterHighlightColor(color);\n\n  // use picking color if rendering to picking FBO.\n  color = picking_filterPickingColor(color);\n    `\n    }\n  },\n  ...picking\n} as ShaderModule<PickingModuleSettings>;\n","// Replacement for the external assert method to reduce bundle size\n// Note: We don't use the second \"message\" argument in calling code,\n// so no need to support it here\nexport default function assert(condition: any, message?: string): asserts condition {\n  if (!condition) {\n    throw new Error(message || 'deck.gl: assertion failed.');\n  }\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport {createIterable, getAccessorFromBuffer} from './iterable-utils';\nimport defaultTypedArrayManager from './typed-array-manager';\nimport assert from './assert';\n\nimport {Buffer} from '@luma.gl/webgl';\n\nimport type {BinaryAttribute} from '../lib/attribute/attribute';\nimport type {TypedArray} from '../types/types';\nimport type {AccessorFunction} from '../types/layer-props';\nimport type {TypedArrayManager} from './typed-array-manager';\n\ntype ExternalBuffer = TypedArray | Buffer | BinaryAttribute;\n\ntype TesselatorOptions<GeometryT, ExtraOptionsT> = ExtraOptionsT & {\n  attributes?: Record<string, any>;\n  getGeometry?: AccessorFunction<any, GeometryT>;\n  data?: any;\n  buffers?: Record<string, ExternalBuffer>;\n  geometryBuffer?: ExternalBuffer;\n  positionFormat?: 'XY' | 'XYZ';\n  dataChanged?: {startRow: number; endRow?: number}[] | string | false;\n  normalize?: boolean;\n};\n\nexport type GeometryUpdateContext = {\n  vertexStart: number;\n  indexStart: number;\n  geometrySize: number;\n  geometryIndex: number;\n};\n\nexport default abstract class Tesselator<GeometryT, NormalizedGeometryT, ExtraOptionsT> {\n  opts: TesselatorOptions<GeometryT, ExtraOptionsT>;\n  typedArrayManager: TypedArrayManager;\n  indexStarts: number[] = [0];\n  vertexStarts: number[] = [0];\n  vertexCount: number = 0;\n  instanceCount: number = 0;\n  attributes: Record<string, TypedArray | null>;\n\n  protected _attributeDefs: any;\n  protected data: any;\n  protected getGeometry?: AccessorFunction<any, GeometryT> | null;\n  protected geometryBuffer?: ExternalBuffer;\n  protected buffers!: Record<string, ExternalBuffer>;\n  protected positionSize!: number;\n  protected normalize!: boolean;\n\n  constructor(opts: TesselatorOptions<GeometryT, ExtraOptionsT>) {\n    const {attributes = {}} = opts;\n\n    this.typedArrayManager = defaultTypedArrayManager;\n    this.attributes = {};\n    this._attributeDefs = attributes;\n    this.opts = opts;\n\n    this.updateGeometry(opts);\n  }\n\n  /* Public methods */\n  updateGeometry(opts: TesselatorOptions<GeometryT, ExtraOptionsT>): void {\n    Object.assign(this.opts, opts);\n    const {\n      data,\n      buffers = {},\n      getGeometry,\n      geometryBuffer,\n      positionFormat,\n      dataChanged,\n      normalize = true\n    } = this.opts;\n    this.data = data;\n    this.getGeometry = getGeometry;\n    this.positionSize =\n      // @ts-ignore (2339) when geometryBuffer is a luma Buffer, size falls back to positionFormat\n      (geometryBuffer && geometryBuffer.size) || (positionFormat === 'XY' ? 2 : 3);\n    this.buffers = buffers;\n    this.normalize = normalize;\n\n    // Handle external logical value\n    if (geometryBuffer) {\n      assert(data.startIndices); // binary data missing startIndices\n      this.getGeometry = this.getGeometryFromBuffer(geometryBuffer);\n\n      if (!normalize) {\n        // skip packing and set attribute value directly\n        // TODO - avoid mutating user-provided object\n        buffers.positions = geometryBuffer;\n      }\n    }\n    this.geometryBuffer = buffers.positions;\n\n    if (Array.isArray(dataChanged)) {\n      // is partial update\n      for (const dataRange of dataChanged as {startRow: number; endRow?: number}[]) {\n        this._rebuildGeometry(dataRange);\n      }\n    } else {\n      this._rebuildGeometry();\n    }\n  }\n\n  updatePartialGeometry({startRow, endRow}: {startRow: number; endRow: number}): void {\n    this._rebuildGeometry({startRow, endRow});\n  }\n\n  // Subclass interface\n\n  /** Convert geometry to a uniform shape */\n  protected abstract normalizeGeometry(geometry: GeometryT): NormalizedGeometryT;\n\n  /** Update the positions buffer of a single geometry */\n  protected abstract updateGeometryAttributes(\n    geometry: NormalizedGeometryT | null,\n    context: GeometryUpdateContext\n  );\n\n  /** Get the number of vertices in a geometry */\n  protected abstract getGeometrySize(geometry: NormalizedGeometryT): number;\n\n  protected getGeometryFromBuffer(\n    geometryBuffer: ExternalBuffer\n  ): AccessorFunction<any, GeometryT> | null {\n    const value = (geometryBuffer as BinaryAttribute).value || geometryBuffer;\n    if (!ArrayBuffer.isView(value)) {\n      // Cannot read binary geometries\n      return null;\n    }\n\n    // @ts-ignore (2322) NumericArray not assignable to GeometryT\n    return getAccessorFromBuffer(value, {\n      size: this.positionSize,\n      offset: (geometryBuffer as BinaryAttribute).offset,\n      stride: (geometryBuffer as BinaryAttribute).stride,\n      startIndices: this.data.startIndices\n    });\n  }\n\n  /* Private utility methods */\n  private _allocate(instanceCount: number, copy: boolean): void {\n    // allocate attributes\n    const {attributes, buffers, _attributeDefs, typedArrayManager} = this;\n    for (const name in _attributeDefs) {\n      if (name in buffers) {\n        // Use external buffer\n        typedArrayManager.release(attributes[name]);\n        attributes[name] = null;\n      } else {\n        const def = _attributeDefs[name];\n        // If dataRange is supplied, this is a partial update.\n        // In case we need to reallocate the typed array, it will need the old values copied\n        // before performing partial update.\n        def.copy = copy;\n\n        attributes[name] = typedArrayManager.allocate(attributes[name], instanceCount, def);\n      }\n    }\n  }\n\n  /**\n   * Visit all objects\n   * `data` is expected to be an iterable consistent with the base Layer expectation\n   */\n  private _forEachGeometry(\n    visitor: (geometry: GeometryT | null, index: number) => void,\n    startRow: number,\n    endRow: number\n  ): void {\n    const {data, getGeometry} = this;\n    const {iterable, objectInfo} = createIterable(data, startRow, endRow);\n    for (const object of iterable) {\n      objectInfo.index++;\n      const geometry = getGeometry ? getGeometry(object, objectInfo) : null;\n      visitor(geometry, objectInfo.index);\n    }\n  }\n\n  /* eslint-disable complexity,max-statements */\n  private _rebuildGeometry(dataRange?: {startRow: number; endRow?: number}): void {\n    if (!this.data) {\n      return;\n    }\n\n    let {indexStarts, vertexStarts, instanceCount} = this;\n    const {data, geometryBuffer} = this;\n    const {startRow = 0, endRow = Infinity} = dataRange || {};\n\n    const normalizedData: Record<number, NormalizedGeometryT | null> = {};\n\n    if (!dataRange) {\n      // Full update - regenerate buffer layout from scratch\n      indexStarts = [0];\n      vertexStarts = [0];\n    }\n    if (this.normalize || !geometryBuffer) {\n      this._forEachGeometry(\n        (geometry: GeometryT | null, dataIndex: number) => {\n          const normalizedGeometry = geometry && this.normalizeGeometry(geometry);\n          normalizedData[dataIndex] = normalizedGeometry;\n          vertexStarts[dataIndex + 1] =\n            vertexStarts[dataIndex] +\n            (normalizedGeometry ? this.getGeometrySize(normalizedGeometry) : 0);\n        },\n        startRow,\n        endRow\n      );\n      // count instances\n      instanceCount = vertexStarts[vertexStarts.length - 1];\n    } else {\n      // assume user provided data is already normalized\n      vertexStarts = data.startIndices;\n      instanceCount = vertexStarts[data.length] || 0;\n\n      if (ArrayBuffer.isView(geometryBuffer)) {\n        instanceCount = instanceCount || geometryBuffer.length / this.positionSize;\n      } else if (geometryBuffer instanceof Buffer) {\n        // @ts-expect-error (2339) accessor is not typed\n        const byteStride = geometryBuffer.accessor.stride || this.positionSize * 4;\n        instanceCount = instanceCount || geometryBuffer.byteLength / byteStride;\n      } else if (geometryBuffer.buffer) {\n        const byteStride = geometryBuffer.stride || this.positionSize * 4;\n        instanceCount = instanceCount || geometryBuffer.buffer.byteLength / byteStride;\n      } else if (geometryBuffer.value) {\n        const bufferValue = geometryBuffer.value;\n        const elementStride =\n          // @ts-ignore (2339) if stride is not specified, will fall through to positionSize\n          geometryBuffer.stride / bufferValue.BYTES_PER_ELEMENT || this.positionSize;\n        instanceCount = instanceCount || bufferValue.length / elementStride;\n      }\n    }\n\n    // allocate attributes\n    this._allocate(instanceCount, Boolean(dataRange));\n\n    this.indexStarts = indexStarts;\n    this.vertexStarts = vertexStarts;\n    this.instanceCount = instanceCount;\n\n    // @ts-ignore (2739) context will be populated in the loop\n    const context: GeometryUpdateContext = {};\n\n    this._forEachGeometry(\n      (geometry: GeometryT | null, dataIndex: number) => {\n        const normalizedGeometry =\n          normalizedData[dataIndex] ||\n          // @ts-expect-error (2352) GeometryT cannot be casted to NormalizedGeometryT. We are assuming the user passed already normalized data if opts.normalize is set to false.\n          (geometry as NormalizedGeometryT);\n        context.vertexStart = vertexStarts[dataIndex];\n        context.indexStart = indexStarts[dataIndex];\n        const vertexEnd =\n          dataIndex < vertexStarts.length - 1 ? vertexStarts[dataIndex + 1] : instanceCount;\n        context.geometrySize = vertexEnd - vertexStarts[dataIndex];\n        context.geometryIndex = dataIndex;\n        this.updateGeometryAttributes(normalizedGeometry, context);\n      },\n      startRow,\n      endRow\n    );\n\n    this.vertexCount = indexStarts[indexStarts.length - 1];\n  }\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {CubeGeometry} from '@luma.gl/core';\nimport {UNIT} from '@deck.gl/core';\nimport ColumnLayer, {ColumnLayerProps} from './column-layer';\n\nimport type {DefaultProps} from '@deck.gl/core';\n\nconst defaultProps: DefaultProps<GridCellLayerProps> = {\n  cellSize: {type: 'number', min: 0, value: 1000},\n  offset: {type: 'array', value: [1, 1]}\n};\n\n/** All properties supported by GridCellLayer. */\nexport type GridCellLayerProps<DataT = any> = _GridCellLayerProps & ColumnLayerProps<DataT>;\n\n/** Properties added by GridCellLayer. */\ntype _GridCellLayerProps = {\n  /**\n   * @default 1000\n   */\n  cellSize?: number;\n};\n\nexport default class GridCellLayer<DataT = any, ExtraPropsT extends {} = {}> extends ColumnLayer<\n  DataT,\n  ExtraPropsT & Required<_GridCellLayerProps>\n> {\n  static layerName = 'GridCellLayer';\n  static defaultProps = defaultProps;\n\n  getGeometry(diskResolution) {\n    return new CubeGeometry();\n  }\n\n  draw({uniforms}) {\n    const {elevationScale, extruded, offset, coverage, cellSize, angle, radiusUnits} = this.props;\n    this.state.model\n      .setUniforms(uniforms)\n      .setUniforms({\n        radius: cellSize / 2,\n        radiusUnits: UNIT[radiusUnits],\n        angle,\n        offset,\n        extruded,\n        coverage,\n        elevationScale,\n        edgeDistance: 1,\n        isWireframe: false\n      })\n      .draw();\n  }\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport type {NumericArray} from '@math.gl/core';\nimport {AccessorFunction, DefaultProps} from '@deck.gl/core';\nimport {PathLayer, PathLayerProps} from '@deck.gl/layers';\n\nconst defaultProps: DefaultProps<TripsLayerProps> = {\n  fadeTrail: true,\n  trailLength: {type: 'number', value: 120, min: 0},\n  currentTime: {type: 'number', value: 0, min: 0},\n  getTimestamps: {type: 'accessor', value: d => d.timestamps}\n};\n\n/** All properties supported by TripsLayer. */\nexport type TripsLayerProps<DataT = any> = _TripsLayerProps<DataT> & PathLayerProps<DataT>;\n\n/** Properties added by TripsLayer. */\ntype _TripsLayerProps<DataT = any> = {\n  /**\n   * Whether or not the path fades out.\n   * @default true\n   */\n  fadeTrail?: boolean;\n  /**\n   * Trail length.\n   * @default 120\n   */\n  trailLength?: number;\n  /**\n   * The current time of the frame.\n   * @default 0\n   */\n  currentTime?: number;\n  /**\n   * Timestamp accessor.\n   */\n  getTimestamps?: AccessorFunction<DataT, NumericArray>;\n};\n\n/** Render animated paths that represent vehicle trips. */\nexport default class TripsLayer<DataT = any, ExtraProps extends {} = {}> extends PathLayer<\n  DataT,\n  Required<_TripsLayerProps> & ExtraProps\n> {\n  static layerName = 'TripsLayer';\n  static defaultProps = defaultProps;\n\n  getShaders() {\n    const shaders = super.getShaders();\n    shaders.inject = {\n      'vs:#decl': `\\\nuniform float trailLength;\nattribute float instanceTimestamps;\nattribute float instanceNextTimestamps;\nvarying float vTime;\n`,\n      // Timestamp of the vertex\n      'vs:#main-end': `\\\nvTime = instanceTimestamps + (instanceNextTimestamps - instanceTimestamps) * vPathPosition.y / vPathLength;\n`,\n      'fs:#decl': `\\\nuniform bool fadeTrail;\nuniform float trailLength;\nuniform float currentTime;\nvarying float vTime;\n`,\n      // Drop the segments outside of the time window\n      'fs:#main-start': `\\\nif(vTime > currentTime || (fadeTrail && (vTime < currentTime - trailLength))) {\n  discard;\n}\n`,\n      // Fade the color (currentTime - 100%, end of trail - 0%)\n      'fs:DECKGL_FILTER_COLOR': `\\\nif(fadeTrail) {\n  color.a *= 1.0 - (currentTime - vTime) / trailLength;\n}\n`\n    };\n    return shaders;\n  }\n\n  initializeState() {\n    super.initializeState();\n\n    const attributeManager = this.getAttributeManager();\n    attributeManager!.addInstanced({\n      timestamps: {\n        size: 1,\n        accessor: 'getTimestamps',\n        shaderAttributes: {\n          instanceTimestamps: {\n            vertexOffset: 0\n          },\n          instanceNextTimestamps: {\n            vertexOffset: 1\n          }\n        }\n      }\n    });\n  }\n\n  draw(params) {\n    const {fadeTrail, trailLength, currentTime} = this.props;\n\n    params.uniforms = {\n      ...params.uniforms,\n      fadeTrail,\n      trailLength,\n      currentTime\n    };\n\n    super.draw(params);\n  }\n}\n","import TransitionInterpolator from './transition-interpolator';\nimport {lerp} from '@math.gl/core';\n\nimport {flyToViewport, getFlyToDuration} from '@math.gl/web-mercator';\n\nconst LINEARLY_INTERPOLATED_PROPS = {\n  bearing: 0,\n  pitch: 0,\n  position: [0, 0, 0]\n};\nconst DEFAULT_OPTS = {\n  speed: 1.2,\n  curve: 1.414\n};\n\n/**\n * This class adapts mapbox-gl-js Map#flyTo animation so it can be used in\n * react/redux architecture.\n * mapbox-gl-js flyTo : https://www.mapbox.com/mapbox-gl-js/api/#map#flyto.\n * It implements “Smooth and efficient zooming and panning.” algorithm by\n * \"Jarke J. van Wijk and Wim A.A. Nuij\"\n */\nexport default class FlyToInterpolator extends TransitionInterpolator {\n  opts: {\n    curve: number;\n    speed: number;\n    screenSpeed?: number;\n    maxDuration?: number;\n  };\n\n  constructor(\n    opts: {\n      /** The zooming \"curve\" that will occur along the flight path. Default 1.414 */\n      curve?: number;\n      /** The average speed of the animation defined in relation to `options.curve`, it linearly affects the duration, higher speed returns smaller durations and vice versa. Default 1.2 */\n      speed?: number;\n      /** The average speed of the animation measured in screenfuls per second. Similar to `opts.speed` it linearly affects the duration,  when specified `opts.speed` is ignored. */\n      screenSpeed?: number;\n      /** Maximum duration in milliseconds, if calculated duration exceeds this value, `0` is returned. */\n      maxDuration?: number;\n    } = {}\n  ) {\n    super({\n      compare: ['longitude', 'latitude', 'zoom', 'bearing', 'pitch', 'position'],\n      extract: ['width', 'height', 'longitude', 'latitude', 'zoom', 'bearing', 'pitch', 'position'],\n      required: ['width', 'height', 'latitude', 'longitude', 'zoom']\n    });\n    this.opts = {...DEFAULT_OPTS, ...opts};\n  }\n\n  interpolateProps(startProps, endProps, t) {\n    const viewport = flyToViewport(startProps, endProps, t, this.opts);\n\n    // Linearly interpolate 'bearing', 'pitch' and 'position'.\n    // If they are not supplied, they are interpreted as zeros in viewport calculation\n    // (fallback defined in WebMercatorViewport)\n    // Because there is no guarantee that the current controller's ViewState normalizes\n    // these props, safe guard is needed to avoid generating NaNs\n    for (const key in LINEARLY_INTERPOLATED_PROPS) {\n      viewport[key] = lerp(\n        startProps[key] || LINEARLY_INTERPOLATED_PROPS[key],\n        endProps[key] || LINEARLY_INTERPOLATED_PROPS[key],\n        t\n      );\n    }\n\n    return viewport;\n  }\n\n  // computes the transition duration\n  getDuration(startProps, endProps) {\n    let {transitionDuration} = endProps;\n    if (transitionDuration === 'auto') {\n      // auto calculate duration based on start and end props\n      transitionDuration = getFlyToDuration(startProps, endProps, this.opts);\n    }\n    return transitionDuration;\n  }\n}\n","var _typeof = require(\"@babel/runtime/helpers/typeof\")[\"default\"];\n\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","// Extensions to math.gl library. Intended to be folded back.\nimport typedArrayManager from './typed-array-manager';\nimport {Vector3, NumericArray} from '@math.gl/core';\n\nimport type {Matrix4} from '@math.gl/core';\n\n// Helper, avoids low-precision 32 bit matrices from gl-matrix mat4.create()\nexport function createMat4(): number[] {\n  return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}\n\nexport function mod(value: number, divisor: number): number {\n  const modulus = value % divisor;\n  return modulus < 0 ? divisor + modulus : modulus;\n}\n\n// Extract camera vectors (move to math library?)\nexport function getCameraPosition(\n  viewMatrixInverse: Matrix4 | NumericArray\n): [number, number, number] {\n  // Read the translation from the inverse view matrix\n  return [viewMatrixInverse[12], viewMatrixInverse[13], viewMatrixInverse[14]];\n}\n\nexport type FrustumPlane = {\n  distance: number;\n  normal: Vector3;\n};\n\n// https://www.gamedevs.org/uploads/fast-extraction-viewing-frustum-planes-from-world-view-projection-matrix.pdf\nexport function getFrustumPlanes(viewProjectionMatrix: Matrix4 | NumericArray): {\n  left: FrustumPlane;\n  right: FrustumPlane;\n  top: FrustumPlane;\n  bottom: FrustumPlane;\n  near: FrustumPlane;\n  far: FrustumPlane;\n} {\n  return {\n    left: getFrustumPlane(\n      viewProjectionMatrix[3] + viewProjectionMatrix[0],\n      viewProjectionMatrix[7] + viewProjectionMatrix[4],\n      viewProjectionMatrix[11] + viewProjectionMatrix[8],\n      viewProjectionMatrix[15] + viewProjectionMatrix[12]\n    ),\n    right: getFrustumPlane(\n      viewProjectionMatrix[3] - viewProjectionMatrix[0],\n      viewProjectionMatrix[7] - viewProjectionMatrix[4],\n      viewProjectionMatrix[11] - viewProjectionMatrix[8],\n      viewProjectionMatrix[15] - viewProjectionMatrix[12]\n    ),\n    bottom: getFrustumPlane(\n      viewProjectionMatrix[3] + viewProjectionMatrix[1],\n      viewProjectionMatrix[7] + viewProjectionMatrix[5],\n      viewProjectionMatrix[11] + viewProjectionMatrix[9],\n      viewProjectionMatrix[15] + viewProjectionMatrix[13]\n    ),\n    top: getFrustumPlane(\n      viewProjectionMatrix[3] - viewProjectionMatrix[1],\n      viewProjectionMatrix[7] - viewProjectionMatrix[5],\n      viewProjectionMatrix[11] - viewProjectionMatrix[9],\n      viewProjectionMatrix[15] - viewProjectionMatrix[13]\n    ),\n    near: getFrustumPlane(\n      viewProjectionMatrix[3] + viewProjectionMatrix[2],\n      viewProjectionMatrix[7] + viewProjectionMatrix[6],\n      viewProjectionMatrix[11] + viewProjectionMatrix[10],\n      viewProjectionMatrix[15] + viewProjectionMatrix[14]\n    ),\n    far: getFrustumPlane(\n      viewProjectionMatrix[3] - viewProjectionMatrix[2],\n      viewProjectionMatrix[7] - viewProjectionMatrix[6],\n      viewProjectionMatrix[11] - viewProjectionMatrix[10],\n      viewProjectionMatrix[15] - viewProjectionMatrix[14]\n    )\n  };\n}\n\nconst scratchVector = new Vector3();\n\nfunction getFrustumPlane(a: number, b: number, c: number, d: number): FrustumPlane {\n  scratchVector.set(a, b, c);\n  const L = scratchVector.len();\n  return {distance: d / L, normal: new Vector3(-a / L, -b / L, -c / L)};\n}\n\n/**\n * Calculate the low part of a WebGL 64 bit float\n * @param x {number} - the input float number\n * @returns {number} - the lower 32 bit of the number\n */\nexport function fp64LowPart(x: number): number {\n  return x - Math.fround(x);\n}\n\nlet scratchArray;\n\n/**\n * Split a Float64Array into a double-length Float32Array\n * @param typedArray\n * @param options\n * @param options.size  - per attribute size\n * @param options.startIndex - start index in the source array\n * @param options.endIndex  - end index in the source array\n * @returns {} - high part, low part for each attribute:\n    [1xHi, 1yHi, 1zHi, 1xLow, 1yLow, 1zLow, 2xHi, ...]\n */\nexport function toDoublePrecisionArray(\n  typedArray: Float64Array,\n  options: {size?: number; startIndex?: number; endIndex?: number}\n): Float32Array {\n  const {size = 1, startIndex = 0} = options;\n\n  const endIndex = options.endIndex !== undefined ? options.endIndex : typedArray.length;\n\n  const count = (endIndex - startIndex) / size;\n  scratchArray = typedArrayManager.allocate(scratchArray, count, {\n    type: Float32Array,\n    size: size * 2\n  });\n\n  let sourceIndex = startIndex;\n  let targetIndex = 0;\n  while (sourceIndex < endIndex) {\n    for (let j = 0; j < size; j++) {\n      const value = typedArray[sourceIndex++];\n      scratchArray[targetIndex + j] = value;\n      scratchArray[targetIndex + j + size] = fp64LowPart(value);\n    }\n    targetIndex += size * 2;\n  }\n\n  return scratchArray.subarray(0, count * size * 2);\n}\n\ntype LayerBounds = [number[], number[]];\nexport function mergeBounds(boundsList: (LayerBounds | null)[]): LayerBounds | null {\n  let mergedBounds: LayerBounds | null = null;\n  let isMerged = false;\n\n  for (const bounds of boundsList) {\n    if (!bounds) continue;\n    if (!mergedBounds) {\n      mergedBounds = bounds;\n    } else {\n      if (!isMerged) {\n        // Copy to avoid mutating input bounds\n        mergedBounds = [\n          [mergedBounds[0][0], mergedBounds[0][1]],\n          [mergedBounds[1][0], mergedBounds[1][1]]\n        ];\n        isMerged = true;\n      }\n\n      mergedBounds[0][0] = Math.min(mergedBounds[0][0], bounds[0][0]);\n      mergedBounds[0][1] = Math.min(mergedBounds[0][1], bounds[0][1]);\n      mergedBounds[1][0] = Math.max(mergedBounds[1][0], bounds[1][0]);\n      mergedBounds[1][1] = Math.max(mergedBounds[1][1], bounds[1][1]);\n    }\n  }\n\n  return mergedBounds;\n}\n","import deckLog from '../utils/log';\nimport {getLoggers} from './loggers';\n\n/* debug utility */\n\nlet loggers: Record<string, Function> = {};\n\n// Conditionally load default loggers in development mode\n// eslint-disable-next-line\nif (process.env.NODE_ENV !== 'production') {\n  loggers = getLoggers(deckLog);\n}\n\nexport function register(handlers: Record<string, Function>): void {\n  loggers = handlers;\n}\n\nexport default function debug(eventType: string, arg1?: any, arg2?: any, arg3?: any): void {\n  if (deckLog.level > 0 && loggers[eventType]) {\n    // Not using rest parameters to defeat perf hit from array construction\n    loggers[eventType].call(null, arg1, arg2, arg3);\n  }\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nexport {default as DeckGL} from './deckgl';\nexport {default} from './deckgl';\n\n// Types\nexport type {DeckGLContextValue} from './utils/position-children-under-views';\nexport type {DeckGLRef, DeckGLProps} from './deckgl';\n","module.exports = require(\"regenerator-runtime\");\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {deepEqual} from '../utils/deep-equal';\nimport log from '../utils/log';\nimport {flatten} from '../utils/flatten';\n\nimport type Controller from '../controllers/controller';\nimport type {ViewStateChangeParameters, InteractionState} from '../controllers/controller';\nimport type Viewport from '../viewports/viewport';\nimport type View from '../views/view';\nimport type {Timeline} from '@luma.gl/engine';\nimport type {EventManager} from 'mjolnir.js';\nimport type {ConstructorOf} from '../types/types';\n\nexport default class ViewManager {\n  width: number;\n  height: number;\n  views: View[];\n  viewState: any;\n  controllers: {[viewId: string]: Controller<any> | null};\n  timeline: Timeline;\n\n  private _viewports: Viewport[];\n  private _viewportMap: {[viewId: string]: Viewport};\n  private _isUpdating: boolean;\n  private _needsRedraw: string | false;\n  private _needsUpdate: string | false;\n  private _eventManager: EventManager;\n  private _eventCallbacks: {\n    onViewStateChange?: (params: ViewStateChangeParameters & {viewId: string}) => void;\n    onInteractionStateChange?: (state: InteractionState) => void;\n  };\n\n  constructor(props: {\n    // Initial options\n    timeline: Timeline;\n    eventManager: EventManager;\n    onViewStateChange?: (params: ViewStateChangeParameters & {viewId: string}) => void;\n    onInteractionStateChange?: (state: InteractionState) => void;\n    // Props\n    views?: View[];\n    viewState?: any;\n    width?: number;\n    height?: number;\n  }) {\n    // List of view descriptors, gets re-evaluated when width/height changes\n    this.views = [];\n    this.width = 100;\n    this.height = 100;\n    this.viewState = {};\n    this.controllers = {};\n    this.timeline = props.timeline;\n\n    this._viewports = []; // Generated viewports\n    this._viewportMap = {};\n    this._isUpdating = false;\n    this._needsRedraw = 'First render';\n    this._needsUpdate = 'Initialize';\n\n    this._eventManager = props.eventManager;\n    this._eventCallbacks = {\n      onViewStateChange: props.onViewStateChange,\n      onInteractionStateChange: props.onInteractionStateChange\n    };\n\n    Object.seal(this);\n\n    // Init with default map viewport\n    this.setProps(props);\n  }\n\n  /** Remove all resources and event listeners */\n  finalize(): void {\n    for (const key in this.controllers) {\n      const controller = this.controllers[key];\n      if (controller) {\n        controller.finalize();\n      }\n    }\n    this.controllers = {};\n  }\n\n  /** Check if a redraw is needed */\n  needsRedraw(\n    opts: {\n      /** Reset redraw flags to false */\n      clearRedrawFlags?: boolean;\n    } = {clearRedrawFlags: false}\n  ): string | false {\n    const redraw = this._needsRedraw;\n    if (opts.clearRedrawFlags) {\n      this._needsRedraw = false;\n    }\n    return redraw;\n  }\n\n  /** Mark the manager as dirty. Will rebuild all viewports and update controllers. */\n  setNeedsUpdate(reason: string): void {\n    this._needsUpdate = this._needsUpdate || reason;\n    this._needsRedraw = this._needsRedraw || reason;\n  }\n\n  /** Checks each viewport for transition updates */\n  updateViewStates(): void {\n    for (const viewId in this.controllers) {\n      const controller = this.controllers[viewId];\n      if (controller) {\n        controller.updateTransition();\n      }\n    }\n  }\n\n  /** Get a set of viewports for a given width and height\n   * TODO - Intention is for deck.gl to autodeduce width and height and drop the need for props\n   * @param rect (object, optional) - filter the viewports\n   *   + not provided - return all viewports\n   *   + {x, y} - only return viewports that contain this pixel\n   *   + {x, y, width, height} - only return viewports that overlap with this rectangle\n   */\n  getViewports(rect?: {x: number; y: number; width?: number; height?: number}): Viewport[] {\n    if (rect) {\n      return this._viewports.filter(viewport => viewport.containsPixel(rect));\n    }\n    return this._viewports;\n  }\n\n  /** Get a map of all views */\n  getViews(): {[viewId: string]: View} {\n    const viewMap = {};\n    this.views.forEach(view => {\n      viewMap[view.id] = view;\n    });\n    return viewMap;\n  }\n\n  /** Resolves a viewId string to a View */\n  getView(viewId: string): View | undefined {\n    return this.views.find(view => view.id === viewId);\n  }\n\n  /** Returns the viewState for a specific viewId. Matches the viewState by\n    1. view.viewStateId\n    2. view.id\n    3. root viewState\n    then applies the view's filter if any */\n  getViewState(viewOrViewId: string | View): any {\n    const view: View | undefined =\n      typeof viewOrViewId === 'string' ? this.getView(viewOrViewId) : viewOrViewId;\n    // Backward compatibility: view state for single view\n    const viewState = (view && this.viewState[view.getViewStateId()]) || this.viewState;\n    return view ? view.filterViewState(viewState) : viewState;\n  }\n\n  getViewport(viewId: string): Viewport | undefined {\n    return this._viewportMap[viewId];\n  }\n\n  /**\n   * Unproject pixel coordinates on screen onto world coordinates,\n   * (possibly [lon, lat]) on map.\n   * - [x, y] => [lng, lat]\n   * - [x, y, z] => [lng, lat, Z]\n   * @param {Array} xyz -\n   * @param {Object} opts - options\n   * @param {Object} opts.topLeft=true - Whether origin is top left\n   * @return {Array|null} - [lng, lat, Z] or [X, Y, Z]\n   */\n  unproject(xyz: number[], opts?: {topLeft?: boolean}): number[] | null {\n    const viewports = this.getViewports();\n    const pixel = {x: xyz[0], y: xyz[1]};\n    for (let i = viewports.length - 1; i >= 0; --i) {\n      const viewport = viewports[i];\n      if (viewport.containsPixel(pixel)) {\n        const p = xyz.slice();\n        p[0] -= viewport.x;\n        p[1] -= viewport.y;\n        return viewport.unproject(p, opts);\n      }\n    }\n    return null;\n  }\n\n  /** Update the manager with new Deck props */\n  setProps(props: {views?: View[]; viewState?: any; width?: number; height?: number}) {\n    if (props.views) {\n      this._setViews(props.views);\n    }\n\n    if (props.viewState) {\n      this._setViewState(props.viewState);\n    }\n\n    if ('width' in props || 'height' in props) {\n      this._setSize(props.width as number, props.height as number);\n    }\n\n    // Important: avoid invoking _update() inside itself\n    // Nested updates result in unexpected side effects inside _rebuildViewports()\n    // when using auto control in pure-js\n    if (!this._isUpdating) {\n      this._update();\n    }\n  }\n\n  //\n  // PRIVATE METHODS\n  //\n\n  private _update(): void {\n    this._isUpdating = true;\n\n    // Only rebuild viewports if the update flag is set\n    if (this._needsUpdate) {\n      this._needsUpdate = false;\n      this._rebuildViewports();\n    }\n\n    // If viewport transition(s) are triggered during viewports update, controller(s)\n    // will immediately call `onViewStateChange` which calls `viewManager.setProps` again.\n    if (this._needsUpdate) {\n      this._needsUpdate = false;\n      this._rebuildViewports();\n    }\n\n    this._isUpdating = false;\n  }\n\n  private _setSize(width: number, height: number): void {\n    if (width !== this.width || height !== this.height) {\n      this.width = width;\n      this.height = height;\n      this.setNeedsUpdate('Size changed');\n    }\n  }\n\n  // Update the view descriptor list and set change flag if needed\n  // Does not actually rebuild the `Viewport`s until `getViewports` is called\n  private _setViews(views: View[]): void {\n    views = flatten(views, Boolean);\n\n    const viewsChanged = this._diffViews(views, this.views);\n    if (viewsChanged) {\n      this.setNeedsUpdate('views changed');\n    }\n\n    this.views = views;\n  }\n\n  private _setViewState(viewState: any): void {\n    if (viewState) {\n      // depth = 3 when comparing viewStates: viewId.position.0\n      const viewStateChanged = !deepEqual(viewState, this.viewState, 3);\n\n      if (viewStateChanged) {\n        this.setNeedsUpdate('viewState changed');\n      }\n\n      this.viewState = viewState;\n    } else {\n      log.warn('missing `viewState` or `initialViewState`')();\n    }\n  }\n\n  private _onViewStateChange(viewId: string, event: ViewStateChangeParameters) {\n    if (this._eventCallbacks.onViewStateChange) {\n      this._eventCallbacks.onViewStateChange({...event, viewId});\n    }\n  }\n\n  private _createController(\n    view: View,\n    props: {id: string; type: ConstructorOf<Controller<any>>}\n  ): Controller<any> {\n    const Controller = props.type;\n\n    const controller = new Controller({\n      timeline: this.timeline,\n      eventManager: this._eventManager,\n      // Set an internal callback that calls the prop callback if provided\n      onViewStateChange: this._onViewStateChange.bind(this, props.id),\n      onStateChange: this._eventCallbacks.onInteractionStateChange,\n      makeViewport: viewState =>\n        this.getView(view.id)?.makeViewport({\n          viewState,\n          width: this.width,\n          height: this.height\n        })\n    });\n\n    return controller;\n  }\n\n  private _updateController(\n    view: View,\n    viewState: any,\n    viewport: Viewport | null,\n    controller?: Controller<any> | null\n  ): Controller<any> | null {\n    const controllerProps = view.controller;\n    if (controllerProps && viewport) {\n      const resolvedProps = {\n        ...viewState,\n        ...controllerProps,\n        id: view.id,\n        x: viewport.x,\n        y: viewport.y,\n        width: viewport.width,\n        height: viewport.height\n      };\n\n      // Create controller if not already existing or if the type of the\n      // controller has changed.\n      if (!controller || controller.constructor !== controllerProps.type) {\n        controller = this._createController(view, resolvedProps);\n      }\n      if (controller) {\n        controller.setProps(resolvedProps);\n      }\n      return controller;\n    }\n    return null;\n  }\n\n  // Rebuilds viewports from descriptors towards a certain window size\n  private _rebuildViewports(): void {\n    const {views} = this;\n\n    const oldControllers = this.controllers;\n    this._viewports = [];\n    this.controllers = {};\n\n    let invalidateControllers = false;\n    // Create controllers in reverse order, so that views on top receive events first\n    for (let i = views.length; i--; ) {\n      const view = views[i];\n      const viewState = this.getViewState(view);\n      const viewport = view.makeViewport({viewState, width: this.width, height: this.height});\n\n      let oldController = oldControllers[view.id];\n      const hasController = Boolean(view.controller);\n      if (hasController && !oldController) {\n        // When a new controller is added, invalidate all controllers below it so that\n        // events are registered in the correct order\n        invalidateControllers = true;\n      }\n      if ((invalidateControllers || !hasController) && oldController) {\n        // Remove and reattach invalidated controller\n        oldController.finalize();\n        oldController = null;\n      }\n\n      // Update the controller\n      this.controllers[view.id] = this._updateController(view, viewState, viewport, oldController);\n\n      if (viewport) {\n        this._viewports.unshift(viewport);\n      }\n    }\n\n    // Remove unused controllers\n    for (const id in oldControllers) {\n      const oldController = oldControllers[id];\n      if (oldController && !this.controllers[id]) {\n        oldController.finalize();\n      }\n    }\n\n    this._buildViewportMap();\n  }\n\n  _buildViewportMap(): void {\n    // Build a view id to view index\n    this._viewportMap = {};\n    this._viewports.forEach(viewport => {\n      if (viewport.id) {\n        // TODO - issue warning if multiple viewports use same id\n        this._viewportMap[viewport.id] = this._viewportMap[viewport.id] || viewport;\n      }\n    });\n  }\n\n  // Check if viewport array has changed, returns true if any change\n  // Note that descriptors can be the same\n  _diffViews(newViews: View[], oldViews: View[]): boolean {\n    if (newViews.length !== oldViews.length) {\n      return true;\n    }\n\n    return newViews.some((_, i) => !newViews[i].equals(oldViews[i]));\n  }\n}\n","import {deepEqual} from '../utils/deep-equal';\nimport LightingEffect from '../effects/lighting/lighting-effect';\nimport type {Effect} from './effect';\n\nconst DEFAULT_LIGHTING_EFFECT = new LightingEffect();\n\n/** Sort two effects. Returns 0 if equal, negative if e1 < e2, positive if e1 > e2 */\nfunction compareEffects(e1: Effect, e2: Effect): number {\n  const o1 = e1.order ?? Infinity;\n  const o2 = e2.order ?? Infinity;\n  return o1 - o2;\n}\n\nexport default class EffectManager {\n  effects: Effect[];\n  private _resolvedEffects: Effect[] = [];\n  /** Effect instances and order preference pairs, sorted by order */\n  private _defaultEffects: Effect[] = [];\n  private _needsRedraw: false | string;\n\n  constructor() {\n    this.effects = [];\n    this._needsRedraw = 'Initial render';\n    this._setEffects([]);\n  }\n\n  /**\n   * Register a new default effect, i.e. an effect presents regardless of user supplied props.effects\n   */\n  addDefaultEffect(effect: Effect) {\n    const defaultEffects = this._defaultEffects;\n    if (!defaultEffects.find(e => e.id === effect.id)) {\n      const index = defaultEffects.findIndex(e => compareEffects(e, effect) > 0);\n      if (index < 0) {\n        defaultEffects.push(effect);\n      } else {\n        defaultEffects.splice(index, 0, effect);\n      }\n      this._setEffects(this.effects);\n    }\n  }\n\n  setProps(props) {\n    if ('effects' in props) {\n      // Compare effects against each other shallowly\n      if (!deepEqual(props.effects, this.effects, 1)) {\n        this._setEffects(props.effects);\n      }\n    }\n  }\n\n  needsRedraw(opts = {clearRedrawFlags: false}): false | string {\n    const redraw = this._needsRedraw;\n    if (opts.clearRedrawFlags) {\n      this._needsRedraw = false;\n    }\n    return redraw;\n  }\n\n  getEffects() {\n    return this._resolvedEffects;\n  }\n\n  private _setEffects(effects: Effect[]) {\n    const oldEffectsMap: Record<string, Effect> = {};\n    for (const effect of this.effects) {\n      oldEffectsMap[effect.id] = effect;\n    }\n\n    const nextEffects: Effect[] = [];\n    for (const effect of effects) {\n      const oldEffect = oldEffectsMap[effect.id];\n      if (oldEffect && oldEffect !== effect) {\n        if (oldEffect.setProps) {\n          oldEffect.setProps(effect.props);\n          nextEffects.push(oldEffect);\n        } else {\n          oldEffect.cleanup();\n          nextEffects.push(effect);\n        }\n      } else {\n        nextEffects.push(effect);\n      }\n      delete oldEffectsMap[effect.id];\n    }\n    for (const removedEffectId in oldEffectsMap) {\n      oldEffectsMap[removedEffectId].cleanup();\n    }\n    this.effects = nextEffects;\n\n    this._resolvedEffects = nextEffects.concat(this._defaultEffects);\n    // Special case for lighting: only add default instance if no LightingEffect is specified\n    if (!effects.some(effect => effect instanceof LightingEffect)) {\n      this._resolvedEffects.push(DEFAULT_LIGHTING_EFFECT);\n    }\n    this._needsRedraw = 'effects changed';\n  }\n\n  finalize() {\n    for (const effect of this._resolvedEffects) {\n      effect.cleanup();\n    }\n\n    this.effects.length = 0;\n    this._resolvedEffects.length = 0;\n    this._defaultEffects.length = 0;\n  }\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport log from '../../utils/log';\nimport type Layer from '../layer';\nimport type Viewport from '../../viewports/viewport';\nimport type {PickingColorDecoder} from '../../passes/pick-layers-pass';\n\nexport type PickedPixel = {\n  pickedColor: Uint8Array | null;\n  pickedLayer?: Layer;\n  pickedViewports?: Viewport[];\n  pickedX?: number;\n  pickedY?: number;\n  pickedObjectIndex: number;\n};\n\nconst NO_PICKED_OBJECT = {\n  pickedColor: null,\n  pickedObjectIndex: -1\n};\n\n/* eslint-disable max-depth, max-statements */\n/**\n * Pick at a specified pixel with a tolerance radius\n * Returns the closest object to the pixel in shape `{pickedColor, pickedLayer, pickedObjectIndex}`\n */\nexport function getClosestObject({\n  pickedColors,\n  decodePickingColor,\n  deviceX,\n  deviceY,\n  deviceRadius,\n  deviceRect\n}: {\n  pickedColors: Uint8Array;\n  decodePickingColor: PickingColorDecoder;\n  deviceX: number;\n  deviceY: number;\n  deviceRadius: number;\n  deviceRect: {x: number; y: number; width: number; height: number};\n}): PickedPixel {\n  // Traverse all pixels in picking results and find the one closest to the supplied\n  // [deviceX, deviceY]\n  const {x, y, width, height} = deviceRect;\n  let minSquareDistanceToCenter = deviceRadius * deviceRadius;\n  let closestPixelIndex = -1;\n  let i = 0;\n\n  for (let row = 0; row < height; row++) {\n    const dy = row + y - deviceY;\n    const dy2 = dy * dy;\n\n    if (dy2 > minSquareDistanceToCenter) {\n      // skip this row\n      i += 4 * width;\n    } else {\n      for (let col = 0; col < width; col++) {\n        // Decode picked layer from color\n        const pickedLayerIndex = pickedColors[i + 3] - 1;\n\n        if (pickedLayerIndex >= 0) {\n          const dx = col + x - deviceX;\n          const d2 = dx * dx + dy2;\n\n          if (d2 <= minSquareDistanceToCenter) {\n            minSquareDistanceToCenter = d2;\n            closestPixelIndex = i;\n          }\n        }\n        i += 4;\n      }\n    }\n  }\n\n  if (closestPixelIndex >= 0) {\n    // Decode picked object index from color\n    const pickedColor = pickedColors.slice(closestPixelIndex, closestPixelIndex + 4);\n    const pickedObject = decodePickingColor(pickedColor);\n    if (pickedObject) {\n      const dy = Math.floor(closestPixelIndex / 4 / width);\n      const dx = closestPixelIndex / 4 - dy * width;\n      return {\n        ...pickedObject,\n        pickedColor,\n        pickedX: x + dx,\n        pickedY: y + dy\n      };\n    }\n    log.error('Picked non-existent layer. Is picking buffer corrupt?')();\n  }\n  return NO_PICKED_OBJECT;\n}\n\n/**\n * Examines a picking buffer for unique colors\n * Returns array of unique objects in shape `{x, y, pickedColor, pickedLayer, pickedObjectIndex}`\n */\nexport function getUniqueObjects({\n  pickedColors,\n  decodePickingColor\n}: {\n  pickedColors: Uint8Array;\n  decodePickingColor: PickingColorDecoder;\n}): PickedPixel[] {\n  const uniqueColors = new Map();\n\n  // Traverse all pixels in picking results and get unique colors\n  if (pickedColors) {\n    for (let i = 0; i < pickedColors.length; i += 4) {\n      // Decode picked layer from color\n      const pickedLayerIndex = pickedColors[i + 3] - 1;\n\n      if (pickedLayerIndex >= 0) {\n        const pickedColor = pickedColors.slice(i, i + 4);\n        const colorKey = pickedColor.join(',');\n        // eslint-disable-next-line\n        if (!uniqueColors.has(colorKey)) {\n          const pickedObject = decodePickingColor(pickedColor);\n          // eslint-disable-next-line\n          if (pickedObject) {\n            uniqueColors.set(colorKey, {\n              ...pickedObject,\n              color: pickedColor\n            });\n          } else {\n            log.error('Picked non-existent layer. Is picking buffer corrupt?')();\n          }\n        }\n      }\n    }\n  }\n\n  return Array.from(uniqueColors.values());\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport type Layer from '../layer';\nimport type Viewport from '../../viewports/viewport';\nimport type {PickedPixel} from './query-object';\n\nexport interface PickingInfo {\n  color: Uint8Array | null;\n  layer: Layer | null;\n  sourceLayer?: Layer | null;\n  viewport?: Viewport;\n  index: number;\n  picked: boolean;\n  object?: any;\n  x: number;\n  y: number;\n  pixel?: [number, number];\n  coordinate?: number[];\n  devicePixel?: [number, number];\n  pixelRatio: number;\n}\n\nexport interface GetPickingInfoParams {\n  info: PickingInfo;\n  mode: string;\n  sourceLayer: Layer | null;\n}\n\n/** Generates some basic information of the picking action: x, y, coordinates etc.\n * Regardless if anything is picked\n */\nexport function getEmptyPickingInfo({\n  pickInfo,\n  viewports,\n  pixelRatio,\n  x,\n  y,\n  z\n}: {\n  pickInfo?: PickedPixel;\n  viewports: Viewport[];\n  pixelRatio: number;\n  x: number;\n  y: number;\n  z?: number;\n}): PickingInfo {\n  // If more than one viewports are used in the picking pass, locate the viewport that\n  // drew the picked pixel\n  let pickedViewport = viewports[0];\n  if (viewports.length > 1) {\n    // Find the viewport that contain the picked pixel\n    pickedViewport = getViewportFromCoordinates(pickInfo?.pickedViewports || viewports, {x, y});\n  }\n  let coordinate: number[] | undefined;\n  if (pickedViewport) {\n    const point = [x - pickedViewport.x, y - pickedViewport.y];\n    if (z !== undefined) {\n      point[2] = z;\n    }\n    coordinate = pickedViewport.unproject(point);\n  }\n\n  return {\n    color: null,\n    layer: null,\n    viewport: pickedViewport,\n    index: -1,\n    picked: false,\n    x,\n    y,\n    pixel: [x, y],\n    coordinate,\n    devicePixel:\n      pickInfo && 'pickedX' in pickInfo\n        ? [pickInfo.pickedX as number, pickInfo.pickedY as number]\n        : undefined,\n    pixelRatio\n  };\n}\n\n/* eslint-disable max-depth */\n/** Generates the picking info of a picking operation */\nexport function processPickInfo(opts: {\n  pickInfo: PickedPixel;\n  lastPickedInfo: {\n    index: number;\n    layerId: string | null;\n    info: PickingInfo | null;\n  };\n  mode: string;\n  layers: Layer[];\n  viewports: Viewport[];\n  pixelRatio: number;\n  x: number;\n  y: number;\n  z?: number;\n}): Map<string | null, PickingInfo> {\n  const {pickInfo, lastPickedInfo, mode, layers} = opts;\n  const {pickedColor, pickedLayer, pickedObjectIndex} = pickInfo;\n\n  const affectedLayers = pickedLayer ? [pickedLayer] : [];\n\n  if (mode === 'hover') {\n    // only invoke onHover events if picked object has changed\n    const lastPickedPixelIndex = lastPickedInfo.index;\n    const lastPickedLayerId = lastPickedInfo.layerId;\n    const pickedLayerId = pickedLayer ? pickedLayer.props.id : null;\n\n    // proceed only if picked object changed\n    if (pickedLayerId !== lastPickedLayerId || pickedObjectIndex !== lastPickedPixelIndex) {\n      if (pickedLayerId !== lastPickedLayerId) {\n        // We cannot store a ref to lastPickedLayer in the context because\n        // the state of an outdated layer is no longer valid\n        // and the props may have changed\n        const lastPickedLayer = layers.find(layer => layer.props.id === lastPickedLayerId);\n        if (lastPickedLayer) {\n          // Let leave event fire before enter event\n          affectedLayers.unshift(lastPickedLayer);\n        }\n      }\n\n      // Update layer manager context\n      lastPickedInfo.layerId = pickedLayerId;\n      lastPickedInfo.index = pickedObjectIndex;\n      lastPickedInfo.info = null;\n    }\n  }\n\n  const baseInfo = getEmptyPickingInfo(opts);\n\n  // Use a Map to store all picking infos.\n  // The following two forEach loops are the result of\n  // https://github.com/visgl/deck.gl/issues/443\n  // Please be very careful when changing this pattern\n  const infos = new Map();\n\n  // Make sure infos always contain something even if no layer is affected\n  infos.set(null, baseInfo);\n\n  affectedLayers.forEach(layer => {\n    let info = {...baseInfo};\n\n    if (layer === pickedLayer) {\n      info.color = pickedColor;\n      info.index = pickedObjectIndex;\n      info.picked = true;\n    }\n\n    info = getLayerPickingInfo({layer, info, mode});\n    const rootLayer = info.layer as Layer;\n\n    if (layer === pickedLayer && mode === 'hover') {\n      lastPickedInfo.info = info;\n    }\n\n    // This guarantees that there will be only one copy of info for\n    // one composite layer\n    infos.set(rootLayer.id, info);\n\n    if (mode === 'hover') {\n      rootLayer.updateAutoHighlight(info);\n    }\n  });\n\n  return infos;\n}\n\n/** Walk up the layer composite chain to populate the info object */\nexport function getLayerPickingInfo({\n  layer,\n  info,\n  mode\n}: {\n  layer: Layer;\n  info: PickingInfo;\n  mode: string;\n}): PickingInfo {\n  while (layer && info) {\n    // For a composite layer, sourceLayer will point to the sublayer\n    // where the event originates from.\n    // It provides additional context for the composite layer's\n    // getPickingInfo() method to populate the info object\n    const sourceLayer = info.layer || null;\n    info.sourceLayer = sourceLayer;\n    info.layer = layer;\n    // layer.pickLayer() function requires a non-null ```layer.state```\n    // object to function properly. So the layer referenced here\n    // must be the \"current\" layer, not an \"out-dated\" / \"invalidated\" layer\n    info = layer.getPickingInfo({info, mode, sourceLayer});\n    layer = layer.parent as Layer;\n  }\n  return info;\n}\n\n/** Indentifies which viewport, if any corresponds to x and y\n   If multiple viewports contain the target pixel, last viewport drawn is returend\n   Returns first viewport if no match */\nfunction getViewportFromCoordinates(\n  viewports: Viewport[],\n  pixel: {x: number; y: number}\n): Viewport {\n  // find the last viewport that contains the pixel\n  for (let i = viewports.length - 1; i >= 0; i--) {\n    const viewport = viewports[i];\n    if (viewport.containsPixel(pixel)) {\n      return viewport;\n    }\n  }\n  return viewports[0];\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {\n  Framebuffer,\n  Texture2D,\n  isWebGL2,\n  readPixelsToArray,\n  cssToDeviceRatio,\n  cssToDevicePixels\n} from '@luma.gl/core';\nimport GL from '@luma.gl/constants';\nimport PickLayersPass, {PickingColorDecoder} from '../passes/pick-layers-pass';\nimport {getClosestObject, getUniqueObjects, PickedPixel} from './picking/query-object';\nimport {\n  processPickInfo,\n  getLayerPickingInfo,\n  getEmptyPickingInfo,\n  PickingInfo\n} from './picking/pick-info';\n\nimport type {Framebuffer as LumaFramebuffer} from '@luma.gl/webgl';\nimport type {FilterContext, Rect} from '../passes/layers-pass';\nimport type Layer from './layer';\nimport type {Effect} from './effect';\nimport type View from '../views/view';\nimport type Viewport from '../viewports/viewport';\n\nexport type PickByPointOptions = {\n  x: number;\n  y: number;\n  radius?: number;\n  depth?: number;\n  mode?: string;\n  unproject3D?: boolean;\n};\n\nexport type PickByRectOptions = {\n  x: number;\n  y: number;\n  width?: number;\n  height?: number;\n  mode?: string;\n  maxObjects?: number | null;\n};\n\ntype PickOperationContext = {\n  layers: Layer[];\n  views: Record<string, View>;\n  viewports: Viewport[];\n  onViewportActive: (viewport: Viewport) => void;\n  effects: Effect[];\n};\n\n/** Manages picking in a Deck context */\nexport default class DeckPicker {\n  gl: WebGLRenderingContext;\n  pickingFBO?: LumaFramebuffer;\n  depthFBO?: LumaFramebuffer;\n  pickLayersPass: PickLayersPass;\n  layerFilter?: (context: FilterContext) => boolean;\n\n  /** Identifiers of the previously picked object, for callback tracking and auto highlight */\n  lastPickedInfo: {\n    index: number;\n    layerId: string | null;\n    info: PickingInfo | null;\n  };\n\n  _pickable: boolean = true;\n\n  constructor(gl: WebGLRenderingContext) {\n    this.gl = gl;\n    this.pickLayersPass = new PickLayersPass(gl);\n    this.lastPickedInfo = {\n      index: -1,\n      layerId: null,\n      info: null\n    };\n  }\n\n  setProps(props: any): void {\n    if ('layerFilter' in props) {\n      this.layerFilter = props.layerFilter;\n    }\n\n    if ('_pickable' in props) {\n      this._pickable = props._pickable;\n    }\n  }\n\n  finalize() {\n    if (this.pickingFBO) {\n      this.pickingFBO.delete();\n    }\n    if (this.depthFBO) {\n      this.depthFBO.color.delete();\n      this.depthFBO.delete();\n    }\n  }\n\n  /** Pick the closest info at given coordinate */\n  pickObject(opts: PickByPointOptions & PickOperationContext) {\n    return this._pickClosestObject(opts);\n  }\n\n  /** Get all unique infos within a bounding box */\n  pickObjects(opts: PickByRectOptions & PickOperationContext) {\n    return this._pickVisibleObjects(opts);\n  }\n\n  // Returns a new picking info object by assuming the last picked object is still picked\n  getLastPickedObject({x, y, layers, viewports}, lastPickedInfo = this.lastPickedInfo.info) {\n    const lastPickedLayerId = lastPickedInfo && lastPickedInfo.layer && lastPickedInfo.layer.id;\n    const lastPickedViewportId =\n      lastPickedInfo && lastPickedInfo.viewport && lastPickedInfo.viewport.id;\n    const layer = lastPickedLayerId ? layers.find(l => l.id === lastPickedLayerId) : null;\n    const viewport =\n      (lastPickedViewportId && viewports.find(v => v.id === lastPickedViewportId)) || viewports[0];\n    const coordinate = viewport && viewport.unproject([x - viewport.x, y - viewport.y]);\n\n    const info = {\n      x,\n      y,\n      viewport,\n      coordinate,\n      layer\n    };\n\n    return {...lastPickedInfo, ...info};\n  }\n\n  // Private\n\n  /** Ensures that picking framebuffer exists and matches the canvas size */\n  _resizeBuffer() {\n    const {gl} = this;\n\n    // Create a frame buffer if not already available\n    if (!this.pickingFBO) {\n      this.pickingFBO = new Framebuffer(gl);\n\n      if (Framebuffer.isSupported(gl, {colorBufferFloat: true})) {\n        const depthFBO = new Framebuffer(gl);\n        depthFBO.attach({\n          [GL.COLOR_ATTACHMENT0]: new Texture2D(gl, {\n            format: isWebGL2(gl) ? GL.RGBA32F : GL.RGBA,\n            type: GL.FLOAT\n          })\n        });\n        this.depthFBO = depthFBO;\n      }\n    }\n    // Resize it to current canvas size (this is a noop if size hasn't changed)\n    this.pickingFBO?.resize({width: gl.canvas.width, height: gl.canvas.height});\n    this.depthFBO?.resize({width: gl.canvas.width, height: gl.canvas.height});\n  }\n\n  /** Preliminary filtering of the layers list. Skid picking pass if no layer is pickable. */\n  _getPickable(layers: Layer[]): Layer[] | null {\n    if (this._pickable === false) {\n      return null;\n    }\n    const pickableLayers = layers.filter(\n      layer => this.pickLayersPass.shouldDrawLayer(layer) && !layer.isComposite\n    );\n    return pickableLayers.length ? pickableLayers : null;\n  }\n\n  /** Pick the closest object at the given coordinate */\n  // eslint-disable-next-line max-statements,complexity\n  _pickClosestObject({\n    layers,\n    views,\n    viewports,\n    x,\n    y,\n    radius = 0,\n    depth = 1,\n    mode = 'query',\n    unproject3D,\n    onViewportActive,\n    effects\n  }: PickByPointOptions & PickOperationContext): {\n    result: PickingInfo[];\n    emptyInfo: PickingInfo;\n  } {\n    const pickableLayers = this._getPickable(layers);\n    const pixelRatio = cssToDeviceRatio(this.gl);\n\n    if (!pickableLayers) {\n      return {\n        result: [],\n        emptyInfo: getEmptyPickingInfo({viewports, x, y, pixelRatio})\n      };\n    }\n\n    this._resizeBuffer();\n\n    // Convert from canvas top-left to WebGL bottom-left coordinates\n    // Top-left coordinates [x, y] to bottom-left coordinates [deviceX, deviceY]\n    // And compensate for pixelRatio\n    const devicePixelRange = cssToDevicePixels(this.gl, [x, y], true);\n    const devicePixel = [\n      devicePixelRange.x + Math.floor(devicePixelRange.width / 2),\n      devicePixelRange.y + Math.floor(devicePixelRange.height / 2)\n    ];\n\n    const deviceRadius = Math.round(radius * pixelRatio);\n    const {width, height} = this.pickingFBO as LumaFramebuffer;\n    const deviceRect = this._getPickingRect({\n      deviceX: devicePixel[0],\n      deviceY: devicePixel[1],\n      deviceRadius,\n      deviceWidth: width,\n      deviceHeight: height\n    });\n\n    const cullRect: Rect = {\n      x: x - radius,\n      y: y - radius,\n      width: radius * 2 + 1,\n      height: radius * 2 + 1\n    };\n\n    let infos: Map<string | null, PickingInfo>;\n    const result: PickingInfo[] = [];\n    const affectedLayers = new Set<Layer>();\n\n    for (let i = 0; i < depth; i++) {\n      let pickInfo: PickedPixel;\n\n      if (deviceRect) {\n        const pickedResult = this._drawAndSample({\n          layers: pickableLayers,\n          views,\n          viewports,\n          onViewportActive,\n          deviceRect,\n          cullRect,\n          effects,\n          pass: `picking:${mode}`\n        });\n\n        pickInfo = getClosestObject({\n          ...pickedResult,\n          deviceX: devicePixel[0],\n          deviceY: devicePixel[1],\n          deviceRadius,\n          deviceRect\n        });\n      } else {\n        pickInfo = {\n          pickedColor: null,\n          pickedObjectIndex: -1\n        };\n      }\n\n      let z;\n      if (pickInfo.pickedLayer && unproject3D && this.depthFBO) {\n        const {pickedColors: pickedColors2} = this._drawAndSample(\n          {\n            layers: [pickInfo.pickedLayer],\n            views,\n            viewports,\n            onViewportActive,\n            deviceRect: {\n              x: pickInfo.pickedX as number,\n              y: pickInfo.pickedY as number,\n              width: 1,\n              height: 1\n            },\n            cullRect,\n            effects,\n            pass: `picking:${mode}:z`\n          },\n          true\n        );\n        // picked value is in common space (pixels) from the camera target (viewport.position)\n        // convert it to meters from the ground\n        if (pickedColors2[3]) {\n          z = pickedColors2[0];\n        }\n      }\n\n      // Only exclude if we need to run picking again.\n      // We need to run picking again if an object is detected AND\n      // we have not exhausted the requested depth.\n      if (pickInfo.pickedLayer && i + 1 < depth) {\n        affectedLayers.add(pickInfo.pickedLayer);\n        pickInfo.pickedLayer.disablePickingIndex(pickInfo.pickedObjectIndex);\n      }\n\n      // This logic needs to run even if no object is picked.\n      infos = processPickInfo({\n        pickInfo,\n        lastPickedInfo: this.lastPickedInfo,\n        mode,\n        layers: pickableLayers,\n        viewports,\n        x,\n        y,\n        z,\n        pixelRatio\n      });\n\n      for (const info of infos.values()) {\n        if (info.layer) {\n          result.push(info);\n        }\n      }\n\n      // If no object is picked stop.\n      if (!pickInfo.pickedColor) {\n        break;\n      }\n    }\n\n    // reset only affected buffers\n    for (const layer of affectedLayers) {\n      layer.restorePickingColors();\n    }\n\n    return {result, emptyInfo: infos!.get(null) as PickingInfo};\n  }\n\n  /** Pick all objects within the given bounding box */\n  _pickVisibleObjects({\n    layers,\n    views,\n    viewports,\n    x,\n    y,\n    width = 1,\n    height = 1,\n    mode = 'query',\n    maxObjects = null,\n    onViewportActive,\n    effects\n  }: PickByRectOptions & PickOperationContext): PickingInfo[] {\n    const pickableLayers = this._getPickable(layers);\n\n    if (!pickableLayers) {\n      return [];\n    }\n\n    this._resizeBuffer();\n    // Convert from canvas top-left to WebGL bottom-left coordinates\n    // And compensate for pixelRatio\n    const pixelRatio = cssToDeviceRatio(this.gl);\n    const leftTop = cssToDevicePixels(this.gl, [x, y], true);\n\n    // take left and top (y inverted in device pixels) from start location\n    const deviceLeft = leftTop.x;\n    const deviceTop = leftTop.y + leftTop.height;\n\n    // take right and bottom (y inverted in device pixels) from end location\n    const rightBottom = cssToDevicePixels(this.gl, [x + width, y + height], true);\n    const deviceRight = rightBottom.x + rightBottom.width;\n    const deviceBottom = rightBottom.y;\n\n    const deviceRect = {\n      x: deviceLeft,\n      y: deviceBottom,\n      // deviceTop and deviceRight represent the first pixel outside the desired rect\n      width: deviceRight - deviceLeft,\n      height: deviceTop - deviceBottom\n    };\n\n    const pickedResult = this._drawAndSample({\n      layers: pickableLayers,\n      views,\n      viewports,\n      onViewportActive,\n      deviceRect,\n      cullRect: {x, y, width, height},\n      effects,\n      pass: `picking:${mode}`\n    });\n\n    const pickInfos = getUniqueObjects(pickedResult);\n\n    // Only return unique infos, identified by info.object\n    const uniqueInfos = new Map();\n\n    const isMaxObjects = Number.isFinite(maxObjects);\n\n    for (let i = 0; i < pickInfos.length; i++) {\n      if (isMaxObjects && maxObjects && uniqueInfos.size >= maxObjects) {\n        break;\n      }\n      const pickInfo = pickInfos[i];\n      let info: PickingInfo = {\n        color: pickInfo.pickedColor,\n        layer: null,\n        index: pickInfo.pickedObjectIndex,\n        picked: true,\n        x,\n        y,\n        pixelRatio\n      };\n\n      info = getLayerPickingInfo({layer: pickInfo.pickedLayer as Layer, info, mode});\n      if (!uniqueInfos.has(info.object)) {\n        uniqueInfos.set(info.object, info);\n      }\n    }\n\n    return Array.from(uniqueInfos.values());\n  }\n\n  /** Renders layers into the picking buffer with picking colors and read the pixels. */\n  _drawAndSample(params: {\n    deviceRect: Rect;\n    pass: string;\n    layers: Layer[];\n    views: Record<string, View>;\n    viewports: Viewport[];\n    onViewportActive: (viewport: Viewport) => void;\n    cullRect?: Rect;\n    effects: Effect[];\n  }): {\n    pickedColors: Uint8Array;\n    decodePickingColor: PickingColorDecoder;\n  };\n\n  /** Renders layers into the picking buffer with encoded z values and read the pixels. */\n  _drawAndSample(\n    params: {\n      deviceRect: Rect;\n      pass: string;\n      layers: Layer[];\n      views: Record<string, View>;\n      viewports: Viewport[];\n      onViewportActive: (viewport: Viewport) => void;\n      cullRect?: Rect;\n      effects: Effect[];\n    },\n    pickZ: true\n  ): {\n    pickedColors: Float32Array;\n    decodePickingColor: null;\n  };\n\n  _drawAndSample(\n    {\n      layers,\n      views,\n      viewports,\n      onViewportActive,\n      deviceRect,\n      cullRect,\n      effects,\n      pass\n    }: {\n      deviceRect: Rect;\n      pass: string;\n      layers: Layer[];\n      views: Record<string, View>;\n      viewports: Viewport[];\n      onViewportActive: (viewport: Viewport) => void;\n      cullRect?: Rect;\n      effects: Effect[];\n    },\n    pickZ: boolean = false\n  ): {\n    pickedColors: Uint8Array | Float32Array;\n    decodePickingColor: PickingColorDecoder | null;\n  } {\n    const pickingFBO = pickZ ? this.depthFBO : this.pickingFBO;\n    const opts = {\n      layers,\n      layerFilter: this.layerFilter,\n      views,\n      viewports,\n      onViewportActive,\n      pickingFBO,\n      deviceRect,\n      cullRect,\n      effects,\n      pass,\n      pickZ,\n      preRenderStats: {}\n    };\n\n    for (const effect of effects) {\n      if (effect.useInPicking) {\n        opts.preRenderStats[effect.id] = effect.preRender(this.gl, opts);\n      }\n    }\n\n    const {decodePickingColor} = this.pickLayersPass.render(opts);\n\n    // Read from an already rendered picking buffer\n    // Returns an Uint8ClampedArray of picked pixels\n    const {x, y, width, height} = deviceRect;\n    const pickedColors = new (pickZ ? Float32Array : Uint8Array)(width * height * 4);\n    readPixelsToArray(pickingFBO, {\n      sourceX: x,\n      sourceY: y,\n      sourceWidth: width,\n      sourceHeight: height,\n      target: pickedColors\n    });\n\n    return {pickedColors, decodePickingColor};\n  }\n\n  // Calculate a picking rect centered on deviceX and deviceY and clipped to device\n  // Returns null if pixel is outside of device\n  _getPickingRect({\n    deviceX,\n    deviceY,\n    deviceRadius,\n    deviceWidth,\n    deviceHeight\n  }: {\n    deviceX: number;\n    deviceY: number;\n    deviceRadius: number;\n    deviceWidth: number;\n    deviceHeight: number;\n  }): Rect | null {\n    // Create a box of size `radius * 2 + 1` centered at [deviceX, deviceY]\n    const x = Math.max(0, deviceX - deviceRadius);\n    const y = Math.max(0, deviceY - deviceRadius);\n    const width = Math.min(deviceWidth, deviceX + deviceRadius + 1) - x;\n    const height = Math.min(deviceHeight, deviceY + deviceRadius + 1) - y;\n\n    // x, y out of bounds.\n    if (width <= 0 || height <= 0) {\n      return null;\n    }\n\n    return {x, y, width, height};\n  }\n}\n","// Copyright (c) 2015 - 2019 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/* global document */\nconst defaultStyle: Partial<CSSStyleDeclaration> = {\n  zIndex: '1',\n  position: 'absolute',\n  pointerEvents: 'none',\n  color: '#a0a7b4',\n  backgroundColor: '#29323c',\n  padding: '10px',\n  top: '0',\n  left: '0',\n  display: 'none'\n};\n\nexport type TooltipContent =\n  | null\n  | string\n  | {\n      text?: string;\n      html?: string;\n      className?: string;\n      style?: Partial<CSSStyleDeclaration>;\n    };\n\nexport default class Tooltip {\n  private el: HTMLDivElement | null = null;\n\n  isVisible: boolean = false;\n\n  constructor(canvas: HTMLCanvasElement) {\n    const canvasParent = canvas.parentElement;\n    if (canvasParent) {\n      this.el = document.createElement('div');\n      this.el.className = 'deck-tooltip';\n      Object.assign(this.el.style, defaultStyle);\n      canvasParent.appendChild(this.el);\n    }\n  }\n\n  setTooltip(displayInfo: TooltipContent, x?: number, y?: number): void {\n    const el = this.el;\n    if (!el) {\n      return;\n    }\n\n    if (typeof displayInfo === 'string') {\n      el.innerText = displayInfo;\n    } else if (!displayInfo) {\n      this.isVisible = false;\n      el.style.display = 'none';\n      return;\n    } else {\n      if (displayInfo.text) {\n        el.innerText = displayInfo.text;\n      }\n      if (displayInfo.html) {\n        el.innerHTML = displayInfo.html;\n      }\n      if (displayInfo.className) {\n        el.className = displayInfo.className;\n      }\n    }\n    this.isVisible = true;\n    el.style.display = 'block';\n    el.style.transform = `translate(${x}px, ${y}px)`;\n\n    if (displayInfo && typeof displayInfo === 'object' && 'style' in displayInfo) {\n      Object.assign(el.style, displayInfo.style);\n    }\n  }\n\n  remove(): void {\n    if (this.el) {\n      this.el.remove();\n      this.el = null;\n    }\n  }\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport LayerManager from './layer-manager';\nimport ViewManager from './view-manager';\nimport MapView from '../views/map-view';\nimport EffectManager from './effect-manager';\nimport DeckRenderer from './deck-renderer';\nimport DeckPicker from './deck-picker';\nimport Tooltip from './tooltip';\nimport log from '../utils/log';\nimport {deepEqual} from '../utils/deep-equal';\nimport typedArrayManager from '../utils/typed-array-manager';\nimport {VERSION} from './init';\n\nimport {getBrowser} from '@probe.gl/env';\nimport GL from '@luma.gl/constants';\nimport {\n  AnimationLoop,\n  createGLContext,\n  instrumentGLContext,\n  setParameters,\n  Timeline,\n  lumaStats\n} from '@luma.gl/core';\nimport {Stats} from '@probe.gl/stats';\nimport {EventManager} from 'mjolnir.js';\n\nimport assert from '../utils/assert';\nimport {EVENTS} from './constants';\n\nimport type {Effect} from './effect';\nimport type {FilterContext} from '../passes/layers-pass';\nimport type Layer from './layer';\nimport type View from '../views/view';\nimport type Viewport from '../viewports/viewport';\nimport type {RecognizerOptions, MjolnirGestureEvent, MjolnirPointerEvent} from 'mjolnir.js';\nimport type {Framebuffer} from '@luma.gl/core';\nimport type {TypedArrayManagerOptions} from '../utils/typed-array-manager';\nimport type {ViewStateChangeParameters, InteractionState} from '../controllers/controller';\nimport type {PickingInfo} from './picking/pick-info';\nimport type {PickByPointOptions, PickByRectOptions} from './deck-picker';\nimport type {LayersList} from './layer-manager';\nimport type {TooltipContent} from './tooltip';\n\n/* global document */\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nfunction noop() {}\n\nconst getCursor = ({isDragging}) => (isDragging ? 'grabbing' : 'grab');\n\nexport type DeckMetrics = {\n  fps: number;\n  setPropsTime: number;\n  updateAttributesTime: number;\n  framesRedrawn: number;\n  pickTime: number;\n  pickCount: number;\n  gpuTime: number;\n  gpuTimePerFrame: number;\n  cpuTime: number;\n  cpuTimePerFrame: number;\n  bufferMemory: number;\n  textureMemory: number;\n  renderbufferMemory: number;\n  gpuMemory: number;\n};\n\ntype CursorState = {\n  /** Whether the cursor is over a pickable object */\n  isHovering: boolean;\n  /** Whether the cursor is down */\n  isDragging: boolean;\n};\n\nexport type DeckProps = {\n  /** Id of this Deck instance */\n  id?: string;\n  /** Width of the canvas, a number in pixels or a valid CSS string.\n   * @default `'100%'`\n   */\n  width?: string | number | null;\n  /** Height of the canvas, a number in pixels or a valid CSS string.\n   * @default `'100%'`\n   */\n  height?: string | number | null;\n  /** Additional CSS styles for the canvas. */\n  style?: Partial<CSSStyleDeclaration> | null;\n\n  /** Controls the resolution of drawing buffer used for rendering.\n   * @default `true` (use browser devicePixelRatio)\n   */\n  useDevicePixels?: boolean | number;\n  /** Extra pixels around the pointer to include while picking.\n   * @default `0`\n   */\n  pickingRadius?: number;\n\n  /** WebGL parameters to be set before each frame is rendered.\n   * @see https://github.com/visgl/luma.gl/blob/8.5-release/modules/gltools/docs/api-reference/parameter-setting.md#parameters\n   */\n  parameters?: any;\n  /** If supplied, will be called before a layer is drawn to determine whether it should be rendered. */\n  layerFilter?: ((context: FilterContext) => boolean) | null;\n\n  /** The container to append the auto-created canvas to.\n   * @default `document.body`\n   */\n  parent?: HTMLDivElement | null;\n  /** The canvas to render into.\n   * Can be either a HTMLCanvasElement or the element id.\n   * Will be auto-created if not supplied.\n   */\n  canvas?: HTMLCanvasElement | string | null;\n  /** WebGL context. Will be auto-created if not supplied. */\n  gl?: WebGLRenderingContext | null;\n  /** Additional options used when creating the WebGL context. */\n  glOptions?: WebGLContextAttributes;\n\n  /**\n   * The array of Layer instances to be rendered.\n   * Nested arrays are accepted, as well as falsy values (`null`, `false`, `undefined`)\n   */\n  layers?: LayersList;\n  /** The array of effects to be rendered. A lighting effect will be added if an empty array is supplied. */\n  effects?: Effect[];\n  /** A single View instance, or an array of `View` instances.\n   * @default `new MapView()`\n   */\n  views?: View | View[] | null;\n  /** Options for viewport interactivity, e.g. pan, rotate and zoom with mouse, touch and keyboard.\n   * This is a shorthand for defining interaction with the `views` prop if you are using the default view (i.e. a single `MapView`)\n   */\n  controller?: View['props']['controller'];\n  /**\n   * An object that describes the view state for each view in the `views` prop.\n   * Use if the camera state should be managed external to the `Deck` instance.\n   */\n  viewState?: any;\n  /**\n   * If provided, the `Deck` instance will track camera state changes automatically,\n   * with `initialViewState` as its initial settings.\n   */\n  initialViewState?: any;\n\n  /** Allow browser default touch actions.\n   * @default `'none'`\n   */\n  touchAction?: string;\n  /** Set Hammer.js recognizer options for gesture recognition. See documentation for details. */\n  eventRecognizerOptions?: {\n    [type: string]: RecognizerOptions;\n  };\n\n  /** (Experimental) Render to a custom frame buffer other than to screen. */\n  _framebuffer?: Framebuffer | null;\n  /** (Experimental) Forces deck.gl to redraw layers every animation frame. */\n  _animate?: boolean;\n  /** (Experimental) If set to `false`, force disables all picking features, disregarding the `pickable` prop set in any layer. */\n  _pickable?: boolean;\n  /** (Experimental) Fine-tune attribute memory usage. See documentation for details. */\n  _typedArrayManagerProps?: TypedArrayManagerOptions;\n\n  /** Called once the WebGL context has been initiated. */\n  onWebGLInitialized?: (gl: WebGLRenderingContext) => void;\n  /** Called when the canvas resizes. */\n  onResize?: (dimensions: {width: number; height: number}) => void;\n  /** Called when the user has interacted with the deck.gl canvas, e.g. using mouse, touch or keyboard. */\n  onViewStateChange?: (params: ViewStateChangeParameters & {viewId: string}) => any;\n  /** Called when the user has interacted with the deck.gl canvas, e.g. using mouse, touch or keyboard. */\n  onInteractionStateChange?: (state: InteractionState) => void;\n  /** Called just before the canvas rerenders. */\n  onBeforeRender?: (context: {gl: WebGLRenderingContext}) => void;\n  /** Called right after the canvas rerenders. */\n  onAfterRender?: (context: {gl: WebGLRenderingContext}) => void;\n  /** Called once after gl context and all Deck components are created. */\n  onLoad?: () => void;\n  /** Called if deck.gl encounters an error.\n   * If this callback is set to `null`, errors are silently ignored.\n   * @default `console.error`\n   */\n  onError?: ((error: Error, layer?: Layer) => void) | null;\n  /** Called when the pointer moves over the canvas. */\n  onHover?: ((info: PickingInfo, event: MjolnirPointerEvent) => void) | null;\n  /** Called when clicking on the canvas. */\n  onClick?: ((info: PickingInfo, event: MjolnirGestureEvent) => void) | null;\n  /** Called when the user starts dragging on the canvas. */\n  onDragStart?: ((info: PickingInfo, event: MjolnirGestureEvent) => void) | null;\n  /** Called when dragging the canvas. */\n  onDrag?: ((info: PickingInfo, event: MjolnirGestureEvent) => void) | null;\n  /** Called when the user releases from dragging the canvas. */\n  onDragEnd?: ((info: PickingInfo, event: MjolnirGestureEvent) => void) | null;\n\n  /** (Experimental) Replace the default redraw procedure */\n  _customRender?: ((reason: string) => void) | null;\n  /** (Experimental) Called once every second with performance metrics. */\n  _onMetrics?: ((metrics: DeckMetrics) => void) | null;\n\n  /** A custom callback to retrieve the cursor type. */\n  getCursor?: (state: CursorState) => string;\n  /** Callback that takes a hovered-over point and renders a tooltip. */\n  getTooltip?: ((info: PickingInfo) => TooltipContent) | null;\n\n  /** (Debug) Flag to enable WebGL debug mode. Requires importing `@luma.gl/debug`. */\n  debug?: boolean;\n  /** (Debug) Render the picking buffer to screen. */\n  drawPickingColors?: boolean;\n};\n\nconst defaultProps = {\n  id: '',\n  width: '100%',\n  height: '100%',\n  style: null,\n  viewState: null,\n  initialViewState: null,\n  pickingRadius: 0,\n  layerFilter: null,\n  glOptions: {},\n  parameters: {},\n  parent: null,\n  gl: null,\n  canvas: null,\n  layers: [],\n  effects: [],\n  views: null,\n  controller: null, // Rely on external controller, e.g. react-map-gl\n  useDevicePixels: true,\n  touchAction: 'none',\n  eventRecognizerOptions: {},\n  _framebuffer: null,\n  _animate: false,\n  _pickable: true,\n  _typedArrayManagerProps: {},\n  _customRender: null,\n\n  onWebGLInitialized: noop,\n  onResize: noop,\n  onViewStateChange: noop,\n  onInteractionStateChange: noop,\n  onBeforeRender: noop,\n  onAfterRender: noop,\n  onLoad: noop,\n  onError: (error: Error) => log.error(error.message, error.cause)(),\n  onHover: null,\n  onClick: null,\n  onDragStart: null,\n  onDrag: null,\n  onDragEnd: null,\n  _onMetrics: null,\n\n  getCursor,\n  getTooltip: null,\n\n  debug: false,\n  drawPickingColors: false\n};\n\n/* eslint-disable max-statements */\nexport default class Deck {\n  static defaultProps = defaultProps;\n  // This is used to defeat tree shaking of init.js\n  // https://github.com/visgl/deck.gl/issues/3213\n  static VERSION = VERSION;\n\n  readonly props: Required<DeckProps>;\n  readonly width: number = 0;\n  readonly height: number = 0;\n  // Allows attaching arbitrary data to the instance\n  readonly userData: Record<string, any> = {};\n\n  protected canvas: HTMLCanvasElement | null = null;\n  protected viewManager: ViewManager | null = null;\n  protected layerManager: LayerManager | null = null;\n  protected effectManager: EffectManager | null = null;\n  protected deckRenderer: DeckRenderer | null = null;\n  protected deckPicker: DeckPicker | null = null;\n  protected eventManager: EventManager | null = null;\n  protected tooltip: Tooltip | null = null;\n  protected metrics: DeckMetrics;\n  protected animationLoop: AnimationLoop;\n  protected stats: Stats;\n\n  /** Internal view state if no callback is supplied */\n  protected viewState: any;\n  protected cursorState: CursorState;\n\n  private _needsRedraw: false | string;\n  private _pickRequest: {\n    mode: string;\n    event: MjolnirPointerEvent | null;\n    x: number;\n    y: number;\n    radius: number;\n  };\n  /**\n   * Pick and store the object under the pointer on `pointerdown`.\n   * This object is reused for subsequent `onClick` and `onDrag*` callbacks.\n   */\n  private _lastPointerDownInfo: PickingInfo | null = null;\n  private _metricsCounter: number;\n\n  constructor(props: DeckProps) {\n    this.props = {...defaultProps, ...props};\n    props = this.props;\n\n    this._needsRedraw = 'Initial render';\n    this._pickRequest = {\n      mode: 'hover',\n      x: -1,\n      y: -1,\n      radius: 0,\n      event: null\n    };\n\n    this.cursorState = {\n      isHovering: false,\n      isDragging: false\n    };\n\n    if (props.viewState && props.initialViewState) {\n      log.warn(\n        'View state tracking is disabled. Use either `initialViewState` for auto update or `viewState` for manual update.'\n      )();\n    }\n    if (getBrowser() === 'IE') {\n      log.warn('IE 11 is not supported')();\n    }\n    this.viewState = props.initialViewState;\n\n    if (!props.gl) {\n      // Note: LayerManager creation deferred until gl context available\n      if (typeof document !== 'undefined') {\n        this.canvas = this._createCanvas(props);\n      }\n    }\n    this.animationLoop = this._createAnimationLoop(props);\n\n    this.stats = new Stats({id: 'deck.gl'});\n    this.metrics = {\n      fps: 0,\n      setPropsTime: 0,\n      updateAttributesTime: 0,\n      framesRedrawn: 0,\n      pickTime: 0,\n      pickCount: 0,\n      gpuTime: 0,\n      gpuTimePerFrame: 0,\n      cpuTime: 0,\n      cpuTimePerFrame: 0,\n      bufferMemory: 0,\n      textureMemory: 0,\n      renderbufferMemory: 0,\n      gpuMemory: 0\n    };\n    this._metricsCounter = 0;\n\n    this.setProps(props);\n\n    // UNSAFE/experimental prop: only set at initialization to avoid performance hit\n    if (props._typedArrayManagerProps) {\n      typedArrayManager.setOptions(props._typedArrayManagerProps);\n    }\n\n    this.animationLoop.start();\n  }\n\n  /** Stop rendering and dispose all resources */\n  finalize() {\n    this.animationLoop?.stop();\n    this.animationLoop = null;\n    this._lastPointerDownInfo = null;\n\n    this.layerManager?.finalize();\n    this.layerManager = null;\n\n    this.viewManager?.finalize();\n    this.viewManager = null;\n\n    this.effectManager?.finalize();\n    this.effectManager = null;\n\n    this.deckRenderer?.finalize();\n    this.deckRenderer = null;\n\n    this.deckPicker?.finalize();\n    this.deckPicker = null;\n\n    this.eventManager?.destroy();\n    this.eventManager = null;\n\n    this.tooltip?.remove();\n    this.tooltip = null;\n\n    if (!this.props.canvas && !this.props.gl && this.canvas) {\n      // remove internally created canvas\n      this.canvas.parentElement?.removeChild(this.canvas);\n      this.canvas = null;\n    }\n  }\n\n  /** Partially update props */\n  setProps(props: DeckProps): void {\n    this.stats.get('setProps Time').timeStart();\n\n    if ('onLayerHover' in props) {\n      log.removed('onLayerHover', 'onHover')();\n    }\n    if ('onLayerClick' in props) {\n      log.removed('onLayerClick', 'onClick')();\n    }\n    if (\n      props.initialViewState &&\n      // depth = 3 when comparing viewStates: viewId.position.0\n      !deepEqual(this.props.initialViewState, props.initialViewState, 3)\n    ) {\n      // Overwrite internal view state\n      this.viewState = props.initialViewState;\n    }\n\n    // Merge with existing props\n    Object.assign(this.props, props);\n\n    // Update CSS size of canvas\n    this._setCanvasSize(this.props);\n\n    // We need to overwrite CSS style width and height with actual, numeric values\n    const resolvedProps: Required<DeckProps> & {\n      width: number;\n      height: number;\n      views: View[];\n      viewState: Record<string, any>;\n    } = Object.create(this.props);\n    Object.assign(resolvedProps, {\n      views: this._getViews(),\n      width: this.width,\n      height: this.height,\n      viewState: this._getViewState()\n    });\n\n    // Update the animation loop\n    this.animationLoop.setProps(resolvedProps);\n\n    // If initialized, update sub manager props\n    if (this.layerManager) {\n      this.viewManager!.setProps(resolvedProps);\n      // Make sure that any new layer gets initialized with the current viewport\n      this.layerManager.activateViewport(this.getViewports()[0]);\n      this.layerManager.setProps(resolvedProps);\n      this.effectManager!.setProps(resolvedProps);\n      this.deckRenderer!.setProps(resolvedProps);\n      this.deckPicker!.setProps(resolvedProps);\n    }\n\n    this.stats.get('setProps Time').timeEnd();\n  }\n\n  // Public API\n\n  /**\n   * Check if a redraw is needed\n   * @returns `false` or a string summarizing the redraw reason\n   */\n  needsRedraw(\n    opts: {\n      /** Reset the redraw flag afterwards. Default `true` */\n      clearRedrawFlags: boolean;\n    } = {clearRedrawFlags: false}\n  ): false | string {\n    if (!this.layerManager) {\n      // Not initialized or already finalized\n      return false;\n    }\n    if (this.props._animate) {\n      return 'Deck._animate';\n    }\n\n    let redraw: false | string = this._needsRedraw;\n\n    if (opts.clearRedrawFlags) {\n      this._needsRedraw = false;\n    }\n\n    const viewManagerNeedsRedraw = this.viewManager!.needsRedraw(opts);\n    const layerManagerNeedsRedraw = this.layerManager.needsRedraw(opts);\n    const effectManagerNeedsRedraw = this.effectManager!.needsRedraw(opts);\n    const deckRendererNeedsRedraw = this.deckRenderer!.needsRedraw(opts);\n\n    redraw =\n      redraw ||\n      viewManagerNeedsRedraw ||\n      layerManagerNeedsRedraw ||\n      effectManagerNeedsRedraw ||\n      deckRendererNeedsRedraw;\n    return redraw;\n  }\n\n  /**\n   * Redraw the GL context\n   * @param reason If not provided, only redraw if deemed necessary. Otherwise redraw regardless of internal states.\n   * @returns\n   */\n  redraw(reason?: string): void {\n    if (!this.layerManager) {\n      // Not yet initialized\n      return;\n    }\n    // Check if we need to redraw\n    let redrawReason = this.needsRedraw({clearRedrawFlags: true});\n    // User-supplied should take precedent, however the redraw flags get cleared regardless\n    redrawReason = reason || redrawReason;\n\n    if (!redrawReason) {\n      return;\n    }\n\n    this.stats.get('Redraw Count').incrementCount();\n    if (this.props._customRender) {\n      this.props._customRender(redrawReason);\n    } else {\n      this._drawLayers(redrawReason);\n    }\n  }\n\n  /** Flag indicating that the Deck instance has initialized its resources and it's safe to call public methods. */\n  get isInitialized(): boolean {\n    return this.viewManager !== null;\n  }\n\n  /** Get a list of views that are currently rendered */\n  getViews(): View[] {\n    assert(this.viewManager);\n    return this.viewManager.views;\n  }\n\n  /** Get a list of viewports that are currently rendered.\n   * @param rect If provided, only returns viewports within the given bounding box.\n   */\n  getViewports(rect?: {x: number; y: number; width?: number; height?: number}): Viewport[] {\n    assert(this.viewManager);\n    return this.viewManager.getViewports(rect);\n  }\n\n  /** Get the current canvas element. */\n  getCanvas(): HTMLCanvasElement | null {\n    return this.canvas;\n  }\n\n  /** Query the object rendered on top at a given point */\n  pickObject(opts: {\n    /** x position in pixels */\n    x: number;\n    /** y position in pixels */\n    y: number;\n    /** Radius of tolerance in pixels. Default `0`. */\n    radius?: number;\n    /** A list of layer ids to query from. If not specified, then all pickable and visible layers are queried. */\n    layerIds?: string[];\n    /** If `true`, `info.coordinate` will be a 3D point by unprojecting the `x, y` screen coordinates onto the picked geometry. Default `false`. */\n    unproject3D?: boolean;\n  }): PickingInfo | null {\n    const infos = this._pick('pickObject', 'pickObject Time', opts).result;\n    return infos.length ? infos[0] : null;\n  }\n\n  /* Query all rendered objects at a given point */\n  pickMultipleObjects(opts: {\n    /** x position in pixels */\n    x: number;\n    /** y position in pixels */\n    y: number;\n    /** Radius of tolerance in pixels. Default `0`. */\n    radius?: number;\n    /** Specifies the max number of objects to return. Default `10`. */\n    depth?: number;\n    /** A list of layer ids to query from. If not specified, then all pickable and visible layers are queried. */\n    layerIds?: string[];\n    /** If `true`, `info.coordinate` will be a 3D point by unprojecting the `x, y` screen coordinates onto the picked geometry. Default `false`. */\n    unproject3D?: boolean;\n  }): PickingInfo[] {\n    opts.depth = opts.depth || 10;\n    return this._pick('pickObject', 'pickMultipleObjects Time', opts).result;\n  }\n\n  /* Query all objects rendered on top within a bounding box */\n  pickObjects(opts: {\n    /** Left of the bounding box in pixels */\n    x: number;\n    /** Top of the bounding box in pixels */\n    y: number;\n    /** Width of the bounding box in pixels. Default `1` */\n    width?: number;\n    /** Height of the bounding box in pixels. Default `1` */\n    height?: number;\n    /** A list of layer ids to query from. If not specified, then all pickable and visible layers are queried. */\n    layerIds?: string[];\n    /** If specified, limits the number of objects that can be returned. */\n    maxObjects?: number | null;\n  }): PickingInfo[] {\n    return this._pick('pickObjects', 'pickObjects Time', opts);\n  }\n\n  /** Experimental\n   * Add a global resource for sharing among layers\n   */\n  _addResources(\n    resources: {\n      [id: string]: any;\n    },\n    forceUpdate = false\n  ) {\n    for (const id in resources) {\n      this.layerManager!.resourceManager.add({resourceId: id, data: resources[id], forceUpdate});\n    }\n  }\n\n  /** Experimental\n   * Remove a global resource\n   */\n  _removeResources(resourceIds: string[]) {\n    for (const id of resourceIds) {\n      this.layerManager!.resourceManager.remove(id);\n    }\n  }\n\n  /** Experimental\n   * Register a default effect. Effects will be sorted by order, those with a low order will be rendered first\n   */\n  _addDefaultEffect(effect: Effect) {\n    this.effectManager!.addDefaultEffect(effect);\n  }\n\n  // Private Methods\n\n  private _pick(\n    method: 'pickObject',\n    statKey: string,\n    opts: PickByPointOptions & {layerIds?: string[]}\n  ): {\n    result: PickingInfo[];\n    emptyInfo: PickingInfo;\n  };\n  private _pick(\n    method: 'pickObjects',\n    statKey: string,\n    opts: PickByRectOptions & {layerIds?: string[]}\n  ): PickingInfo[];\n\n  private _pick(\n    method: 'pickObject' | 'pickObjects',\n    statKey: string,\n    opts: (PickByPointOptions | PickByRectOptions) & {layerIds?: string[]}\n  ) {\n    assert(this.deckPicker);\n\n    const {stats} = this;\n\n    stats.get('Pick Count').incrementCount();\n    stats.get(statKey).timeStart();\n\n    const infos = this.deckPicker[method]({\n      // layerManager, viewManager and effectManager are always defined if deckPicker is\n      layers: this.layerManager!.getLayers(opts),\n      views: this.viewManager!.getViews(),\n      viewports: this.getViewports(opts),\n      onViewportActive: this.layerManager!.activateViewport,\n      effects: this.effectManager!.getEffects(),\n      ...opts\n    });\n\n    stats.get(statKey).timeEnd();\n\n    return infos;\n  }\n\n  /** Resolve props.canvas to element */\n  private _createCanvas(props: DeckProps): HTMLCanvasElement {\n    let canvas = props.canvas;\n\n    // TODO EventManager should accept element id\n    if (typeof canvas === 'string') {\n      canvas = document.getElementById(canvas) as HTMLCanvasElement;\n      assert(canvas);\n    }\n\n    if (!canvas) {\n      canvas = document.createElement('canvas');\n      canvas.id = props.id || 'deckgl-overlay';\n      const parent = props.parent || document.body;\n      parent.appendChild(canvas);\n    }\n\n    Object.assign(canvas.style, props.style);\n\n    return canvas;\n  }\n\n  /** Updates canvas width and/or height, if provided as props */\n  private _setCanvasSize(props: Required<DeckProps>): void {\n    if (!this.canvas) {\n      return;\n    }\n\n    const {width, height} = props;\n    // Set size ONLY if props are being provided, otherwise let canvas be layouted freely\n    if (width || width === 0) {\n      const cssWidth = Number.isFinite(width) ? `${width}px` : (width as string);\n      this.canvas.style.width = cssWidth;\n    }\n    if (height || height === 0) {\n      const cssHeight = Number.isFinite(height) ? `${height}px` : (height as string);\n      // Note: position==='absolute' required for height 100% to work\n      this.canvas.style.position = props.style?.position || 'absolute';\n      this.canvas.style.height = cssHeight;\n    }\n  }\n\n  /** If canvas size has changed, reads out the new size and update */\n  private _updateCanvasSize(): void {\n    const {canvas} = this;\n    if (!canvas) {\n      return;\n    }\n    // Fallback to width/height when clientWidth/clientHeight are undefined (OffscreenCanvas).\n    const newWidth = canvas.clientWidth ?? canvas.width;\n    const newHeight = canvas.clientHeight ?? canvas.height;\n    if (newWidth !== this.width || newHeight !== this.height) {\n      // @ts-expect-error private assign to read-only property\n      this.width = newWidth;\n      // @ts-expect-error private assign to read-only property\n      this.height = newHeight;\n      this.viewManager?.setProps({width: newWidth, height: newHeight});\n      // Make sure that any new layer gets initialized with the current viewport\n      this.layerManager?.activateViewport(this.getViewports()[0]);\n      this.props.onResize({width: newWidth, height: newHeight});\n    }\n  }\n\n  private _createAnimationLoop(props: DeckProps): AnimationLoop {\n    const {\n      width,\n      height,\n      gl,\n      glOptions,\n      debug,\n      onError,\n      onBeforeRender,\n      onAfterRender,\n      useDevicePixels\n    } = props;\n\n    return new AnimationLoop({\n      width,\n      height,\n      useDevicePixels,\n      autoResizeDrawingBuffer: !gl, // do not auto resize external context\n      autoResizeViewport: false,\n      gl,\n      onCreateContext: opts =>\n        createGLContext({\n          ...glOptions,\n          ...opts,\n          canvas: this.canvas,\n          debug,\n          onContextLost: () => this._onContextLost()\n        }),\n      onInitialize: context => this._setGLContext(context.gl),\n      onRender: this._onRenderFrame.bind(this),\n      onBeforeRender,\n      onAfterRender,\n      onError\n    });\n  }\n\n  // Get the most relevant view state: props.viewState, if supplied, shadows internal viewState\n  // TODO: For backwards compatibility ensure numeric width and height is added to the viewState\n  private _getViewState(): Record<string, any> {\n    return this.props.viewState || this.viewState;\n  }\n\n  // Get the view descriptor list\n  private _getViews(): View[] {\n    // Default to a full screen map view port\n    let views = this.props.views || [new MapView({id: 'default-view'})];\n    views = Array.isArray(views) ? views : [views];\n    if (views.length && this.props.controller) {\n      // Backward compatibility: support controller prop\n      views[0].props.controller = this.props.controller;\n    }\n    return views;\n  }\n\n  private _onContextLost() {\n    const {onError} = this.props;\n    if (this.animationLoop && onError) {\n      onError(new Error('WebGL context is lost'));\n    }\n  }\n\n  // The `pointermove` event may fire multiple times in between two animation frames,\n  // it's a waste of time to run picking without rerender. Instead we save the last pick\n  // request and only do it once on the next animation frame.\n  /** Internal use only: event handler for pointerdown */\n  _onPointerMove = (event: MjolnirPointerEvent) => {\n    const {_pickRequest} = this;\n    if (event.type === 'pointerleave') {\n      _pickRequest.x = -1;\n      _pickRequest.y = -1;\n      _pickRequest.radius = 0;\n    } else if (event.leftButton || event.rightButton) {\n      // Do not trigger onHover callbacks if mouse button is down.\n      return;\n    } else {\n      const pos = event.offsetCenter;\n      // Do not trigger callbacks when click/hover position is invalid. Doing so will cause a\n      // assertion error when attempting to unproject the position.\n      if (!pos) {\n        return;\n      }\n      _pickRequest.x = pos.x;\n      _pickRequest.y = pos.y;\n      _pickRequest.radius = this.props.pickingRadius;\n    }\n\n    if (this.layerManager) {\n      this.layerManager.context.mousePosition = {x: _pickRequest.x, y: _pickRequest.y};\n    }\n\n    _pickRequest.event = event;\n  };\n\n  /** Actually run picking */\n  private _pickAndCallback() {\n    const {_pickRequest} = this;\n\n    if (_pickRequest.event) {\n      // Perform picking\n      const {result, emptyInfo} = this._pick('pickObject', 'pickObject Time', _pickRequest);\n      this.cursorState.isHovering = result.length > 0;\n\n      // There are 4 possible scenarios:\n      // result is [outInfo, pickedInfo] (moved from one pickable layer to another)\n      // result is [outInfo] (moved outside of a pickable layer)\n      // result is [pickedInfo] (moved into or over a pickable layer)\n      // result is [] (nothing is or was picked)\n      //\n      // `layer.props.onHover` should be called on all affected layers (out/over)\n      // `deck.props.onHover` should be called with the picked info if any, or empty info otherwise\n      // `deck.props.getTooltip` should be called with the picked info if any, or empty info otherwise\n\n      // Execute callbacks\n      let pickedInfo = emptyInfo;\n      let handled = false;\n      for (const info of result) {\n        pickedInfo = info;\n        handled = info.layer?.onHover(info, _pickRequest.event) || handled;\n      }\n      if (!handled && this.props.onHover) {\n        this.props.onHover(pickedInfo, _pickRequest.event);\n      }\n\n      // Update tooltip\n      if (this.props.getTooltip && this.tooltip) {\n        const displayInfo = this.props.getTooltip(pickedInfo);\n        this.tooltip.setTooltip(displayInfo, pickedInfo.x, pickedInfo.y);\n      }\n\n      // Clear pending pickRequest\n      _pickRequest.event = null;\n    }\n  }\n\n  private _updateCursor(): void {\n    const container = this.props.parent || this.canvas;\n    if (container) {\n      container.style.cursor = this.props.getCursor(this.cursorState);\n    }\n  }\n\n  private _setGLContext(gl: WebGLRenderingContext) {\n    if (this.layerManager) {\n      return;\n    }\n\n    // if external context...\n    if (!this.canvas) {\n      this.canvas = gl.canvas;\n      instrumentGLContext(gl, {enable: true, copyState: true});\n    }\n\n    this.tooltip = new Tooltip(this.canvas);\n\n    setParameters(gl, {\n      blend: true,\n      blendFunc: [GL.SRC_ALPHA, GL.ONE_MINUS_SRC_ALPHA, GL.ONE, GL.ONE_MINUS_SRC_ALPHA],\n      polygonOffsetFill: true,\n      depthTest: true,\n      depthFunc: GL.LEQUAL\n    });\n\n    this.props.onWebGLInitialized(gl);\n\n    // timeline for transitions\n    const timeline = new Timeline();\n    timeline.play();\n    this.animationLoop.attachTimeline(timeline);\n\n    this.eventManager = new EventManager(this.props.parent || gl.canvas, {\n      touchAction: this.props.touchAction,\n      recognizerOptions: this.props.eventRecognizerOptions,\n      events: {\n        pointerdown: this._onPointerDown,\n        pointermove: this._onPointerMove,\n        pointerleave: this._onPointerMove\n      }\n    });\n    for (const eventType in EVENTS) {\n      this.eventManager.on(eventType as keyof typeof EVENTS, this._onEvent);\n    }\n\n    this.viewManager = new ViewManager({\n      timeline,\n      eventManager: this.eventManager,\n      onViewStateChange: this._onViewStateChange.bind(this),\n      onInteractionStateChange: this._onInteractionStateChange.bind(this),\n      views: this._getViews(),\n      viewState: this._getViewState(),\n      width: this.width,\n      height: this.height\n    });\n\n    // viewManager must be initialized before layerManager\n    // layerManager depends on viewport created by viewManager.\n    const viewport = this.viewManager.getViewports()[0];\n\n    // Note: avoid React setState due GL animation loop / setState timing issue\n    this.layerManager = new LayerManager(gl, {\n      deck: this,\n      stats: this.stats,\n      viewport,\n      timeline\n    });\n\n    this.effectManager = new EffectManager();\n\n    this.deckRenderer = new DeckRenderer(gl);\n\n    this.deckPicker = new DeckPicker(gl);\n\n    this.setProps(this.props);\n\n    this._updateCanvasSize();\n    this.props.onLoad();\n  }\n\n  /** Internal only: default render function (redraw all layers and views) */\n  _drawLayers(\n    redrawReason: string,\n    renderOptions?: {\n      target?: Framebuffer;\n      layerFilter?: (context: FilterContext) => boolean;\n      layers?: Layer[];\n      viewports?: Viewport[];\n      views?: {[viewId: string]: View};\n      pass?: string;\n      effects?: Effect[];\n      clearStack?: boolean;\n      clearCanvas?: boolean;\n    }\n  ) {\n    const {gl} = this.layerManager!.context;\n\n    setParameters(gl, this.props.parameters);\n\n    this.props.onBeforeRender({gl});\n\n    this.deckRenderer!.renderLayers({\n      target: this.props._framebuffer,\n      layers: this.layerManager!.getLayers(),\n      viewports: this.viewManager!.getViewports(),\n      onViewportActive: this.layerManager!.activateViewport,\n      views: this.viewManager!.getViews(),\n      pass: 'screen',\n      effects: this.effectManager!.getEffects(),\n      ...renderOptions\n    });\n\n    this.props.onAfterRender({gl});\n  }\n\n  // Callbacks\n\n  private _onRenderFrame(animationProps: any) {\n    this._getFrameStats();\n\n    // Log perf stats every second\n    if (this._metricsCounter++ % 60 === 0) {\n      this._getMetrics();\n      this.stats.reset();\n      log.table(4, this.metrics)();\n\n      // Experimental: report metrics\n      if (this.props._onMetrics) {\n        this.props._onMetrics(this.metrics);\n      }\n    }\n\n    this._updateCanvasSize();\n\n    this._updateCursor();\n\n    // If view state has changed, clear tooltip\n    if (this.tooltip!.isVisible && this.viewManager!.needsRedraw()) {\n      this.tooltip!.setTooltip(null);\n    }\n\n    // Update layers if needed (e.g. some async prop has loaded)\n    // Note: This can trigger a redraw\n    this.layerManager!.updateLayers();\n\n    // Perform picking request if any\n    this._pickAndCallback();\n\n    // Redraw if necessary\n    this.redraw();\n\n    // Update viewport transition if needed\n    // Note: this can trigger `onViewStateChange`, and affect layers\n    // We want to defer these changes to the next frame\n    if (this.viewManager) {\n      this.viewManager.updateViewStates();\n    }\n  }\n\n  // Callbacks\n\n  private _onViewStateChange(params: ViewStateChangeParameters & {viewId: string}) {\n    // Let app know that view state is changing, and give it a chance to change it\n    const viewState = this.props.onViewStateChange(params) || params.viewState;\n\n    // If initialViewState was set on creation, auto track position\n    if (this.viewState) {\n      this.viewState = {...this.viewState, [params.viewId]: viewState};\n      if (!this.props.viewState) {\n        // Apply internal view state\n        if (this.viewManager) {\n          this.viewManager.setProps({viewState: this.viewState});\n        }\n      }\n    }\n  }\n\n  private _onInteractionStateChange(interactionState: InteractionState) {\n    this.cursorState.isDragging = interactionState.isDragging || false;\n    this.props.onInteractionStateChange(interactionState);\n  }\n\n  /** Internal use only: event handler for click & drag */\n  _onEvent = (event: MjolnirGestureEvent) => {\n    const eventOptions = EVENTS[event.type];\n    const pos = event.offsetCenter;\n\n    if (!eventOptions || !pos || !this.layerManager) {\n      return;\n    }\n\n    // Reuse last picked object\n    const layers = this.layerManager.getLayers();\n    const info = this.deckPicker!.getLastPickedObject(\n      {\n        x: pos.x,\n        y: pos.y,\n        layers,\n        viewports: this.getViewports(pos)\n      },\n      this._lastPointerDownInfo\n    );\n\n    const {layer} = info;\n    const layerHandler =\n      layer && (layer[eventOptions.handler] || layer.props[eventOptions.handler]);\n    const rootHandler = this.props[eventOptions.handler];\n    let handled = false;\n\n    if (layerHandler) {\n      handled = layerHandler.call(layer, info, event);\n    }\n    if (!handled && rootHandler) {\n      rootHandler(info, event);\n    }\n  };\n\n  /** Internal use only: evnet handler for pointerdown */\n  _onPointerDown = (event: MjolnirPointerEvent) => {\n    const pos = event.offsetCenter;\n    const pickedInfo = this._pick('pickObject', 'pickObject Time', {\n      x: pos.x,\n      y: pos.y,\n      radius: this.props.pickingRadius\n    });\n    this._lastPointerDownInfo = pickedInfo.result[0] || pickedInfo.emptyInfo;\n  };\n\n  private _getFrameStats(): void {\n    const {stats} = this;\n    stats.get('frameRate').timeEnd();\n    stats.get('frameRate').timeStart();\n\n    // Get individual stats from luma.gl so reset works\n    const animationLoopStats = this.animationLoop.stats;\n    stats.get('GPU Time').addTime(animationLoopStats.get('GPU Time').lastTiming);\n    stats.get('CPU Time').addTime(animationLoopStats.get('CPU Time').lastTiming);\n  }\n\n  private _getMetrics(): void {\n    const {metrics, stats} = this;\n    metrics.fps = stats.get('frameRate').getHz();\n    metrics.setPropsTime = stats.get('setProps Time').time;\n    metrics.updateAttributesTime = stats.get('Update Attributes').time;\n    metrics.framesRedrawn = stats.get('Redraw Count').count;\n    metrics.pickTime =\n      stats.get('pickObject Time').time +\n      stats.get('pickMultipleObjects Time').time +\n      stats.get('pickObjects Time').time;\n    metrics.pickCount = stats.get('Pick Count').count;\n\n    // Luma stats\n    metrics.gpuTime = stats.get('GPU Time').time;\n    metrics.cpuTime = stats.get('CPU Time').time;\n    metrics.gpuTimePerFrame = stats.get('GPU Time').getAverageTime();\n    metrics.cpuTimePerFrame = stats.get('CPU Time').getAverageTime();\n\n    const memoryStats = lumaStats.get('Memory Usage');\n    metrics.bufferMemory = memoryStats.get('Buffer Memory').count;\n    metrics.textureMemory = memoryStats.get('Texture Memory').count;\n    metrics.renderbufferMemory = memoryStats.get('Renderbuffer Memory').count;\n    metrics.gpuMemory = memoryStats.get('GPU Memory').count;\n  }\n}\n","/* global requestAnimationFrame */\nimport type {GroupNode, ModelNode} from '@luma.gl/experimental';\n\nexport async function waitForGLTFAssets(gltfObjects: {scenes: GroupNode[]}): Promise<void> {\n  const remaining: any[] = [];\n\n  gltfObjects.scenes.forEach(scene => {\n    scene.traverse((model: ModelNode) => {\n      Object.values(model.model.getUniforms()).forEach((uniform: any) => {\n        if (uniform.loaded === false) {\n          remaining.push(uniform);\n        }\n      });\n    });\n  });\n\n  return await waitWhileCondition(() => remaining.some(uniform => !uniform.loaded));\n}\n\nasync function waitWhileCondition(condition: () => boolean): Promise<void> {\n  while (condition()) {\n    await new Promise(resolve => requestAnimationFrame(resolve));\n  }\n}\n","// Copyright (c) 2019 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {Layer, project32, picking, log} from '@deck.gl/core';\nimport {isWebGL2} from '@luma.gl/core';\nimport {pbr} from '@luma.gl/shadertools';\nimport {\n  ScenegraphNode,\n  GroupNode,\n  GLTFAnimator,\n  GLTFEnvironment,\n  createGLTFObjects\n} from '@luma.gl/experimental';\nimport GL from '@luma.gl/constants';\nimport {GLTFLoader} from '@loaders.gl/gltf';\nimport {waitForGLTFAssets} from './gltf-utils';\n\nimport {MATRIX_ATTRIBUTES, shouldComposeModelMatrix} from '../utils/matrix';\n\nimport vs from './scenegraph-layer-vertex.glsl';\nimport fs from './scenegraph-layer-fragment.glsl';\n\nimport type {\n  UpdateParameters,\n  LayerContext,\n  LayerProps,\n  LayerDataSource,\n  Position,\n  Color,\n  Accessor,\n  DefaultProps\n} from '@deck.gl/core';\n\nconst DEFAULT_COLOR: [number, number, number, number] = [255, 255, 255, 255];\n\nexport type ScenegraphLayerProps<DataT = any> = _ScenegraphLayerProps<DataT> & LayerProps;\n\ntype _ScenegraphLayerProps<DataT> = {\n  data: LayerDataSource<DataT>;\n  // TODO - define in luma.gl\n  /**\n   * A url for a glTF model or scenegraph loaded via a [scenegraph loader](https://loaders.gl/docs/specifications/category-scenegraph)\n   */\n  scenegraph: any;\n  /**\n   * Create a luma.gl GroupNode from the resolved scenegraph prop\n   */\n  getScene?: (\n    scenegraph: any,\n    context: {gl: WebGLRenderingContext; layer: ScenegraphLayer<DataT>}\n  ) => GroupNode;\n  /**\n   * Create a luma.gl GLTFAnimator from the resolved scenegraph prop\n   */\n  getAnimator?: (\n    scenegraph: any,\n    context: {gl: WebGLRenderingContext; layer: ScenegraphLayer<DataT>}\n  ) => GLTFAnimator;\n  /**\n   * (Experimental) animation configurations. Requires `_animate` on deck object.\n   */\n  _animations?: {\n    [name: number | string | '*']: {\n      /** If the animation is playing */\n      playing?: boolean;\n      /** Start time of the animation, default `0` */\n      startTime?: number;\n      /** Speed multiplier of the animation, default `1` */\n      speed?: number;\n    };\n  } | null;\n  /**\n   * (Experimental) lighting mode\n   * @default 'flat'\n   */\n  _lighting?: 'flat' | 'pbr';\n  /**\n   * (Experimental) lighting environment. Requires `_lighting` to be `'pbr'`.\n   */\n  _imageBasedLightingEnvironment?:\n    | null\n    | GLTFEnvironment\n    | ((context: {gl: WebGLRenderingContext; layer: ScenegraphLayer<DataT>}) => GLTFEnvironment);\n\n  /** Anchor position accessor. */\n  getPosition?: Accessor<DataT, Position>;\n  /** Color value or accessor.\n   * @default [255, 255, 255, 255]\n   */\n  getColor?: Accessor<DataT, Color>;\n  /**\n   * Orientation in [pitch, yaw, roll] in degrees.\n   * @see https://en.wikipedia.org/wiki/Euler_angles\n   * @default [0, 0, 0]\n   */\n  getOrientation?: Accessor<DataT, [number, number, number]>;\n  /**\n   * Scaling factor of the model along each axis.\n   * @default [1, 1, 1]\n   */\n  getScale?: Accessor<DataT, [number, number, number]>;\n  /**\n   * Translation from the anchor point, [x, y, z] in meters.\n   * @default [0, 0, 0]\n   */\n  getTranslation?: Accessor<DataT, [number, number, number]>;\n  /**\n   * TransformMatrix. If specified, `getOrientation`, `getScale` and `getTranslation` are ignored.\n   */\n  getTransformMatrix?: Accessor<DataT, number[]>;\n  /**\n   * Multiplier to scale each geometry by.\n   * @default 1\n   */\n  sizeScale?: number;\n  /**\n   * The minimum size in pixels for one unit of the scene.\n   * @default 0\n   */\n  sizeMinPixels?: number;\n  /**\n   * The maximum size in pixels for one unit of the scene.\n   * @default Number.MAX_SAFE_INTEGER\n   */\n  sizeMaxPixels?: number;\n};\n\nconst defaultProps: DefaultProps<ScenegraphLayerProps> = {\n  scenegraph: {type: 'object', value: null, async: true},\n  getScene: gltf => {\n    if (gltf && gltf.scenes) {\n      // gltf post processor replaces `gltf.scene` number with the scene `object`\n      return typeof gltf.scene === 'object' ? gltf.scene : gltf.scenes[gltf.scene || 0];\n    }\n    return gltf;\n  },\n  getAnimator: scenegraph => scenegraph && scenegraph.animator,\n  _animations: null,\n\n  sizeScale: {type: 'number', value: 1, min: 0},\n  sizeMinPixels: {type: 'number', min: 0, value: 0},\n  sizeMaxPixels: {type: 'number', min: 0, value: Number.MAX_SAFE_INTEGER},\n\n  getPosition: {type: 'accessor', value: x => x.position},\n  getColor: {type: 'accessor', value: DEFAULT_COLOR},\n\n  // flat or pbr\n  _lighting: 'flat',\n  // _lighting must be pbr for this to work\n  _imageBasedLightingEnvironment: null,\n\n  // yaw, pitch and roll are in degrees\n  // https://en.wikipedia.org/wiki/Euler_angles\n  // [pitch, yaw, roll]\n  getOrientation: {type: 'accessor', value: [0, 0, 0]},\n  getScale: {type: 'accessor', value: [1, 1, 1]},\n  getTranslation: {type: 'accessor', value: [0, 0, 0]},\n  // 4x4 matrix\n  getTransformMatrix: {type: 'accessor', value: []},\n\n  loaders: [GLTFLoader]\n};\n\n/** Render a number of instances of a complete glTF scenegraph. */\nexport default class ScenegraphLayer<DataT = any, ExtraPropsT extends {} = {}> extends Layer<\n  ExtraPropsT & Required<_ScenegraphLayerProps<DataT>>\n> {\n  static defaultProps = defaultProps;\n  static layerName = 'ScenegraphLayer';\n\n  state!: {\n    scenegraph: GroupNode;\n    animator: GLTFAnimator;\n    attributesAvailable?: boolean;\n  };\n\n  getShaders() {\n    const modules = [project32, picking];\n\n    if (this.props._lighting === 'pbr') {\n      modules.push(pbr);\n    }\n\n    return super.getShaders({vs, fs, modules});\n  }\n\n  initializeState() {\n    const attributeManager = this.getAttributeManager();\n    // attributeManager is always defined for primitive layers\n    attributeManager!.addInstanced({\n      instancePositions: {\n        size: 3,\n        type: GL.DOUBLE,\n        fp64: this.use64bitPositions(),\n        accessor: 'getPosition',\n        transition: true\n      },\n      instanceColors: {\n        type: GL.UNSIGNED_BYTE,\n        size: this.props.colorFormat.length,\n        accessor: 'getColor',\n        normalized: true,\n        defaultValue: DEFAULT_COLOR,\n        transition: true\n      },\n      instanceModelMatrix: MATRIX_ATTRIBUTES\n    });\n  }\n\n  updateState(params: UpdateParameters<this>) {\n    super.updateState(params);\n    const {props, oldProps} = params;\n\n    if (props.scenegraph !== oldProps.scenegraph) {\n      this._updateScenegraph();\n    } else if (props._animations !== oldProps._animations) {\n      this._applyAnimationsProp(this.state.scenegraph, this.state.animator, props._animations);\n    }\n  }\n\n  finalizeState(context: LayerContext) {\n    super.finalizeState(context);\n    this._deleteScenegraph();\n  }\n\n  private _updateScenegraph(): void {\n    const props = this.props;\n    const {gl} = this.context;\n    let scenegraphData: any = null;\n    if (props.scenegraph instanceof ScenegraphNode) {\n      // Signature 1: props.scenegraph is a proper luma.gl Scenegraph\n      scenegraphData = {scenes: [props.scenegraph]};\n    } else if (props.scenegraph && !props.scenegraph.gltf) {\n      // Converts loaders.gl gltf to luma.gl scenegraph using the undocumented @luma.gl/experimental function\n      const gltf = props.scenegraph;\n      const gltfObjects = createGLTFObjects(gl, gltf, this._getModelOptions());\n      scenegraphData = {gltf, ...gltfObjects};\n\n      waitForGLTFAssets(gltfObjects).then(() => this.setNeedsRedraw()); // eslint-disable-line @typescript-eslint/no-floating-promises\n    } else if (props.scenegraph) {\n      // DEPRECATED PATH: Assumes this data was loaded through GLTFScenegraphLoader\n      log.deprecated(\n        'ScenegraphLayer.props.scenegraph',\n        'Use GLTFLoader instead of GLTFScenegraphLoader'\n      )();\n      scenegraphData = props.scenegraph;\n    }\n\n    const options = {layer: this, gl};\n    const scenegraph = props.getScene(scenegraphData, options);\n    const animator = props.getAnimator(scenegraphData, options);\n\n    if (scenegraph instanceof ScenegraphNode) {\n      this._deleteScenegraph();\n      this._applyAllAttributes(scenegraph);\n      this._applyAnimationsProp(scenegraph, animator, props._animations);\n      this.setState({scenegraph, animator});\n    } else if (scenegraph !== null) {\n      log.warn('invalid scenegraph:', scenegraph)();\n    }\n  }\n\n  private _applyAllAttributes(scenegraph: GroupNode): void {\n    if (this.state.attributesAvailable) {\n      // attributeManager is always defined for primitive layers\n      const allAttributes = this.getAttributeManager()!.getAttributes();\n      scenegraph.traverse(model => {\n        this._setModelAttributes(model.model, allAttributes);\n      });\n    }\n  }\n\n  private _applyAnimationsProp(\n    scenegraph: GroupNode,\n    animator: GLTFAnimator,\n    animationsProp: any\n  ): void {\n    if (!scenegraph || !animator || !animationsProp) {\n      return;\n    }\n\n    const animations = animator.getAnimations();\n\n    // sort() to ensure '*' comes first so that other values can override\n    Object.keys(animationsProp)\n      .sort()\n      .forEach(key => {\n        // Key can be:\n        //  - number for index number\n        //  - name for animation name\n        //  - * to affect all animations\n        const value = animationsProp[key];\n\n        if (key === '*') {\n          animations.forEach(animation => {\n            Object.assign(animation, value);\n          });\n        } else if (Number.isFinite(Number(key))) {\n          const number = Number(key);\n          if (number >= 0 && number < animations.length) {\n            Object.assign(animations[number], value);\n          } else {\n            log.warn(`animation ${key} not found`)();\n          }\n        } else {\n          const findResult = animations.find(({name}) => name === key);\n          if (findResult) {\n            Object.assign(findResult, value);\n          } else {\n            log.warn(`animation ${key} not found`)();\n          }\n        }\n      });\n  }\n\n  private _deleteScenegraph(): void {\n    const {scenegraph} = this.state;\n    if (scenegraph instanceof ScenegraphNode) {\n      scenegraph.delete();\n    }\n  }\n\n  private _getModelOptions(): any {\n    const {_imageBasedLightingEnvironment} = this.props;\n\n    let env: GLTFEnvironment | null = null;\n    if (_imageBasedLightingEnvironment) {\n      if (typeof _imageBasedLightingEnvironment === 'function') {\n        env = _imageBasedLightingEnvironment({gl: this.context.gl, layer: this});\n      } else {\n        env = _imageBasedLightingEnvironment;\n      }\n    }\n\n    return {\n      gl: this.context.gl,\n      waitForFullLoad: true,\n      imageBasedLightingEnvironment: env,\n      modelOptions: {\n        isInstanced: true,\n        transpileToGLSL100: !isWebGL2(this.context.gl),\n        ...this.getShaders()\n      },\n      // tangents are not supported\n      useTangents: false\n    };\n  }\n\n  updateAttributes(changedAttributes) {\n    this.setState({attributesAvailable: true});\n    if (!this.state.scenegraph) return;\n\n    this.state.scenegraph.traverse(model => {\n      this._setModelAttributes(model.model, changedAttributes);\n    });\n  }\n\n  draw({moduleParameters = null, parameters = {}, context}) {\n    if (!this.state.scenegraph) return;\n\n    if (this.props._animations && this.state.animator) {\n      this.state.animator.animate(context.timeline.getTime());\n      this.setNeedsRedraw();\n    }\n\n    const {viewport} = this.context;\n    const {sizeScale, sizeMinPixels, sizeMaxPixels, opacity, coordinateSystem} = this.props;\n    const numInstances = this.getNumInstances();\n    this.state.scenegraph.traverse((model, {worldMatrix}) => {\n      model.model.setInstanceCount(numInstances);\n      model.updateModuleSettings(moduleParameters);\n      model.draw({\n        parameters,\n        uniforms: {\n          sizeScale,\n          opacity,\n          sizeMinPixels,\n          sizeMaxPixels,\n          composeModelMatrix: shouldComposeModelMatrix(viewport, coordinateSystem),\n          sceneModelMatrix: worldMatrix,\n          // Needed for PBR (TODO: find better way to get it)\n          // eslint-disable-next-line camelcase\n          u_Camera: model.model.getUniforms().project_uCameraPosition\n        }\n      });\n    });\n  }\n}\n","export default `\\\n#version 300 es\n\n// Instance attributes\nin vec3 instancePositions;\nin vec3 instancePositions64Low;\nin vec4 instanceColors;\nin vec3 instancePickingColors;\nin mat3 instanceModelMatrix;\nin vec3 instanceTranslation;\n\n// Uniforms\nuniform float sizeScale;\nuniform float sizeMinPixels;\nuniform float sizeMaxPixels;\nuniform mat4 sceneModelMatrix;\nuniform bool composeModelMatrix;\n\n// Attributes\nin vec4 POSITION;\n\n#ifdef HAS_UV\n  in vec2 TEXCOORD_0;\n#endif\n\n#ifdef MODULE_PBR\n  #ifdef HAS_NORMALS\n    in vec4 NORMAL;\n  #endif\n#endif\n\n// Varying\nout vec4 vColor;\n\n// MODULE_PBR contains all the varying definitions needed\n#ifndef MODULE_PBR\n  #ifdef HAS_UV\n    out vec2 vTEXCOORD_0;\n  #endif\n#endif\n\n// Main\nvoid main(void) {\n  #if defined(HAS_UV) && !defined(MODULE_PBR)\n    vTEXCOORD_0 = TEXCOORD_0;\n    geometry.uv = vTEXCOORD_0;\n  #endif\n\n  geometry.worldPosition = instancePositions;\n  geometry.pickingColor = instancePickingColors;\n\n  vec3 normal = vec3(0.0, 0.0, 1.0);\n  #ifdef MODULE_PBR\n    #ifdef HAS_NORMALS\n      normal = instanceModelMatrix * (sceneModelMatrix * vec4(NORMAL.xyz, 0.0)).xyz;\n    #endif\n  #endif\n\n  float originalSize = project_size_to_pixel(sizeScale);\n  float clampedSize = clamp(originalSize, sizeMinPixels, sizeMaxPixels);\n\n  vec3 pos = (instanceModelMatrix * (sceneModelMatrix * POSITION).xyz) * sizeScale * (clampedSize / originalSize) + instanceTranslation;\n  if(composeModelMatrix) {\n    DECKGL_FILTER_SIZE(pos, geometry);\n    // using instancePositions as world coordinates\n    // when using globe mode, this branch does not re-orient the model to align with the surface of the earth\n    // call project_normal before setting position to avoid rotation\n    geometry.normal = project_normal(normal);\n    geometry.worldPosition += pos;\n    gl_Position = project_position_to_clipspace(pos + instancePositions, instancePositions64Low, vec3(0.0), geometry.position);\n  }\n  else {\n    pos = project_size(pos);\n    DECKGL_FILTER_SIZE(pos, geometry);\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, pos, geometry.position);\n    geometry.normal = project_normal(normal);\n  }\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n\n  #ifdef MODULE_PBR\n    // set PBR data\n    pbr_vPosition = geometry.position.xyz;\n    #ifdef HAS_NORMALS\n      pbr_vNormal = geometry.normal;\n    #endif\n\n    #ifdef HAS_UV\n      pbr_vUV = TEXCOORD_0;\n    #else\n      pbr_vUV = vec2(0., 0.);\n    #endif\n    geometry.uv = pbr_vUV;\n  #endif\n\n  vColor = instanceColors;\n  DECKGL_FILTER_COLOR(vColor, geometry);\n}\n`;\n","export default `\\\n#version 300 es\n\n// Uniforms\nuniform float opacity;\n\n// Varying\nin vec4 vColor;\n\nout vec4 fragmentColor;\n\n// MODULE_PBR contains all the varying definitions needed\n#ifndef MODULE_PBR\n  #if defined(HAS_UV) && defined(HAS_BASECOLORMAP)\n    in vec2 vTEXCOORD_0;\n    uniform sampler2D u_BaseColorSampler;\n  #endif\n#endif\n\nvoid main(void) {\n  #ifdef MODULE_PBR\n    fragmentColor = vColor * pbr_filterColor(vec4(0));\n    geometry.uv = pbr_vUV;\n  #else\n    #if defined(HAS_UV) && defined(HAS_BASECOLORMAP)\n      fragmentColor = vColor * texture2D(u_BaseColorSampler, vTEXCOORD_0);\n      geometry.uv = vTEXCOORD_0;\n    #else\n      fragmentColor = vColor;\n    #endif\n  #endif\n\n  fragmentColor.a *= opacity;\n  DECKGL_FILTER_COLOR(fragmentColor, geometry);\n}\n`;\n","import {lerp} from '@math.gl/core';\n\nconst DEFAULT_INDICES = new Uint16Array([0, 2, 1, 0, 3, 2]);\nconst DEFAULT_TEX_COORDS = new Float32Array([0, 1, 0, 0, 1, 0, 1, 1]);\n\n/*\n  1 ---- 2\n  |      |\n  |      |\n  0 ---- 3\n*/\n/* eslint-disable max-statements */\nexport default function createMesh(bounds, resolution) {\n  if (!resolution) {\n    return createQuad(bounds);\n  }\n  const maxXSpan = Math.max(\n    Math.abs(bounds[0][0] - bounds[3][0]),\n    Math.abs(bounds[1][0] - bounds[2][0])\n  );\n  const maxYSpan = Math.max(\n    Math.abs(bounds[1][1] - bounds[0][1]),\n    Math.abs(bounds[2][1] - bounds[3][1])\n  );\n  const uCount = Math.ceil(maxXSpan / resolution) + 1;\n  const vCount = Math.ceil(maxYSpan / resolution) + 1;\n\n  const vertexCount = (uCount - 1) * (vCount - 1) * 6;\n  const indices = new Uint32Array(vertexCount);\n  const texCoords = new Float32Array(uCount * vCount * 2);\n  const positions = new Float64Array(uCount * vCount * 3);\n\n  // Tesselate\n  let vertex = 0;\n  let index = 0;\n  for (let u = 0; u < uCount; u++) {\n    const ut = u / (uCount - 1);\n    for (let v = 0; v < vCount; v++) {\n      const vt = v / (vCount - 1);\n      const p = interpolateQuad(bounds, ut, vt);\n\n      positions[vertex * 3 + 0] = p[0];\n      positions[vertex * 3 + 1] = p[1];\n      positions[vertex * 3 + 2] = p[2] || 0;\n\n      texCoords[vertex * 2 + 0] = ut;\n      texCoords[vertex * 2 + 1] = 1 - vt;\n\n      if (u > 0 && v > 0) {\n        indices[index++] = vertex - vCount;\n        indices[index++] = vertex - vCount - 1;\n        indices[index++] = vertex - 1;\n        indices[index++] = vertex - vCount;\n        indices[index++] = vertex - 1;\n        indices[index++] = vertex;\n      }\n\n      vertex++;\n    }\n  }\n  return {\n    vertexCount,\n    positions,\n    indices,\n    texCoords\n  };\n}\n\nfunction createQuad(bounds) {\n  const positions = new Float64Array(12);\n  // [[minX, minY], [minX, maxY], [maxX, maxY], [maxX, minY]]\n  for (let i = 0; i < bounds.length; i++) {\n    positions[i * 3 + 0] = bounds[i][0];\n    positions[i * 3 + 1] = bounds[i][1];\n    positions[i * 3 + 2] = bounds[i][2] || 0;\n  }\n\n  return {\n    vertexCount: 6,\n    positions,\n    indices: DEFAULT_INDICES,\n    texCoords: DEFAULT_TEX_COORDS\n  };\n}\n\nfunction interpolateQuad(quad, ut, vt) {\n  return lerp(lerp(quad[0], quad[1], vt), lerp(quad[3], quad[2], vt), ut);\n}\n","/**\n * Pack the top 12 bits of two normalized floats into 3 8-bit (rgb) values\n * This enables addressing 4096x4096 individual pixels\n *\n * returns vec3 encoded RGB colors\n *  result.r - top 8 bits of u\n *  result.g - top 8 bits of v\n *  result.b - next 4 bits of u and v: (u + v * 16)\n */\nconst packUVsIntoRGB = `\nvec3 packUVsIntoRGB(vec2 uv) {\n  // Extract the top 8 bits. We want values to be truncated down so we can add a fraction\n  vec2 uv8bit = floor(uv * 256.);\n\n  // Calculate the normalized remainders of u and v parts that do not fit into 8 bits\n  // Scale and clamp to 0-1 range\n  vec2 uvFraction = fract(uv * 256.);\n  vec2 uvFraction4bit = floor(uvFraction * 16.);\n\n  // Remainder can be encoded in blue channel, encode as 4 bits for pixel coordinates\n  float fractions = uvFraction4bit.x + uvFraction4bit.y * 16.;\n\n  return vec3(uv8bit, fractions) / 255.;\n}\n`;\n\nexport default `\n#define SHADER_NAME bitmap-layer-fragment-shader\n\n#ifdef GL_ES\nprecision highp float;\n#endif\n\nuniform sampler2D bitmapTexture;\n\nvarying vec2 vTexCoord;\nvarying vec2 vTexPos;\n\nuniform float desaturate;\nuniform vec4 transparentColor;\nuniform vec3 tintColor;\nuniform float opacity;\n\nuniform float coordinateConversion;\nuniform vec4 bounds;\n\n/* projection utils */\nconst float TILE_SIZE = 512.0;\nconst float PI = 3.1415926536;\nconst float WORLD_SCALE = TILE_SIZE / PI / 2.0;\n\n// from degrees to Web Mercator\nvec2 lnglat_to_mercator(vec2 lnglat) {\n  float x = lnglat.x;\n  float y = clamp(lnglat.y, -89.9, 89.9);\n  return vec2(\n    radians(x) + PI,\n    PI + log(tan(PI * 0.25 + radians(y) * 0.5))\n  ) * WORLD_SCALE;\n}\n\n// from Web Mercator to degrees\nvec2 mercator_to_lnglat(vec2 xy) {\n  xy /= WORLD_SCALE;\n  return degrees(vec2(\n    xy.x - PI,\n    atan(exp(xy.y - PI)) * 2.0 - PI * 0.5\n  ));\n}\n/* End projection utils */\n\n// apply desaturation\nvec3 color_desaturate(vec3 color) {\n  float luminance = (color.r + color.g + color.b) * 0.333333333;\n  return mix(color, vec3(luminance), desaturate);\n}\n\n// apply tint\nvec3 color_tint(vec3 color) {\n  return color * tintColor;\n}\n\n// blend with background color\nvec4 apply_opacity(vec3 color, float alpha) {\n  if (transparentColor.a == 0.0) {\n    return vec4(color, alpha);\n  }\n  float blendedAlpha = alpha + transparentColor.a * (1.0 - alpha);\n  float highLightRatio = alpha / blendedAlpha;\n  vec3 blendedRGB = mix(transparentColor.rgb, color, highLightRatio);\n  return vec4(blendedRGB, blendedAlpha);\n}\n\nvec2 getUV(vec2 pos) {\n  return vec2(\n    (pos.x - bounds[0]) / (bounds[2] - bounds[0]),\n    (pos.y - bounds[3]) / (bounds[1] - bounds[3])\n  );\n}\n\n${packUVsIntoRGB}\n\nvoid main(void) {\n  vec2 uv = vTexCoord;\n  if (coordinateConversion < -0.5) {\n    vec2 lnglat = mercator_to_lnglat(vTexPos);\n    uv = getUV(lnglat);\n  } else if (coordinateConversion > 0.5) {\n    vec2 commonPos = lnglat_to_mercator(vTexPos);\n    uv = getUV(commonPos);\n  }\n  vec4 bitmapColor = texture2D(bitmapTexture, uv);\n\n  gl_FragColor = apply_opacity(color_tint(color_desaturate(bitmapColor.rgb)), bitmapColor.a * opacity);\n\n  geometry.uv = uv;\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n\n  if (picking_uActive && !picking_uAttribute) {\n    // Since instance information is not used, we can use picking color for pixel index\n    gl_FragColor.rgb = packUVsIntoRGB(uv);\n  }\n}\n`;\n","// Copyright (c) 2015 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport GL from '@luma.gl/constants';\nimport {\n  Layer,\n  project32,\n  picking,\n  CoordinateSystem,\n  COORDINATE_SYSTEM,\n  LayerProps,\n  PickingInfo,\n  GetPickingInfoParams,\n  UpdateParameters,\n  Color,\n  Texture,\n  Position,\n  DefaultProps\n} from '@deck.gl/core';\nimport {Model, Geometry} from '@luma.gl/core';\nimport {lngLatToWorld} from '@math.gl/web-mercator';\n\nimport createMesh from './create-mesh';\n\nimport vs from './bitmap-layer-vertex';\nimport fs from './bitmap-layer-fragment';\n\nconst defaultProps: DefaultProps<BitmapLayerProps> = {\n  image: {type: 'image', value: null, async: true},\n  bounds: {type: 'array', value: [1, 0, 0, 1], compare: true},\n  _imageCoordinateSystem: COORDINATE_SYSTEM.DEFAULT,\n\n  desaturate: {type: 'number', min: 0, max: 1, value: 0},\n  // More context: because of the blending mode we're using for ground imagery,\n  // alpha is not effective when blending the bitmap layers with the base map.\n  // Instead we need to manually dim/blend rgb values with a background color.\n  transparentColor: {type: 'color', value: [0, 0, 0, 0]},\n  tintColor: {type: 'color', value: [255, 255, 255]},\n\n  textureParameters: {type: 'object', ignore: true}\n};\n\n/** All properties supported by BitmapLayer. */\nexport type BitmapLayerProps = _BitmapLayerProps & LayerProps;\nexport type BitmapBoundingBox =\n  | [left: number, bottom: number, right: number, top: number]\n  | [Position, Position, Position, Position];\n\n/** Properties added by BitmapLayer. */\ntype _BitmapLayerProps = {\n  data: never;\n  /**\n   * The image to display.\n   *\n   * @default null\n   */\n  image?: string | Texture | null;\n\n  /**\n   * Supported formats:\n   *  - Coordinates of the bounding box of the bitmap `[left, bottom, right, top]`\n   *  - Coordinates of four corners of the bitmap, should follow the sequence of `[[left, bottom], [left, top], [right, top], [right, bottom]]`.\n   *   Each position could optionally contain a third component `z`.\n   * @default [1, 0, 0, 1]\n   */\n  bounds?: BitmapBoundingBox;\n\n  /**\n   * > Note: this prop is experimental.\n   *\n   * Specifies how image coordinates should be geographically interpreted.\n   * @default COORDINATE_SYSTEM.DEFAULT\n   */\n  _imageCoordinateSystem?: CoordinateSystem;\n\n  /**\n   * The desaturation of the bitmap. Between `[0, 1]`.\n   * @default 0\n   */\n  desaturate?: number;\n\n  /**\n   * The color to use for transparent pixels, in `[r, g, b, a]`.\n   * @default [0, 0, 0, 0]\n   */\n  transparentColor?: Color;\n\n  /**\n   * The color to tint the bitmap by, in `[r, g, b]`.\n   * @default [255, 255, 255]\n   */\n  tintColor?: Color;\n\n  /** Customize the [texture parameters](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/texParameter). */\n  textureParameters?: Record<number, number> | null;\n};\n\n/** Render a bitmap at specified boundaries. */\nexport default class BitmapLayer<ExtraPropsT extends {} = {}> extends Layer<\n  ExtraPropsT & Required<_BitmapLayerProps>\n> {\n  static layerName = 'BitmapLayer';\n  static defaultProps = defaultProps;\n\n  state!: Layer['state'] & {\n    disablePicking?: boolean;\n    model?: Model;\n    mesh?: any;\n    coordinateConversion?: number;\n    bounds?: number[];\n  };\n\n  getShaders() {\n    return super.getShaders({vs, fs, modules: [project32, picking]});\n  }\n\n  initializeState() {\n    const attributeManager = this.getAttributeManager()!;\n\n    attributeManager.remove(['instancePickingColors']);\n    const noAlloc = true;\n\n    attributeManager.add({\n      indices: {\n        size: 1,\n        isIndexed: true,\n        update: attribute => (attribute.value = this.state.mesh.indices),\n        noAlloc\n      },\n      positions: {\n        size: 3,\n        type: GL.DOUBLE,\n        fp64: this.use64bitPositions(),\n        update: attribute => (attribute.value = this.state.mesh.positions),\n        noAlloc\n      },\n      texCoords: {\n        size: 2,\n        update: attribute => (attribute.value = this.state.mesh.texCoords),\n        noAlloc\n      }\n    });\n  }\n\n  updateState({props, oldProps, changeFlags}: UpdateParameters<this>): void {\n    // setup model first\n    const attributeManager = this.getAttributeManager()!;\n\n    if (changeFlags.extensionsChanged) {\n      const {gl} = this.context;\n      this.state.model?.delete();\n      this.state.model = this._getModel(gl);\n      attributeManager.invalidateAll();\n    }\n\n    if (props.bounds !== oldProps.bounds) {\n      const oldMesh = this.state.mesh;\n      const mesh = this._createMesh();\n      this.state.model.setVertexCount(mesh.vertexCount);\n      for (const key in mesh) {\n        if (oldMesh && oldMesh[key] !== mesh[key]) {\n          attributeManager.invalidate(key);\n        }\n      }\n      this.setState({mesh, ...this._getCoordinateUniforms()});\n    } else if (props._imageCoordinateSystem !== oldProps._imageCoordinateSystem) {\n      this.setState(this._getCoordinateUniforms());\n    }\n  }\n\n  getPickingInfo(params: GetPickingInfoParams): PickingInfo {\n    const {image} = this.props;\n    const info: PickingInfo & {bitmap?: any} = params.info;\n\n    if (!info.color || !image) {\n      info.bitmap = null;\n      return info;\n    }\n\n    const {width, height} = image as Texture;\n\n    // Picking color doesn't represent object index in this layer\n    info.index = 0;\n\n    // Calculate uv and pixel in bitmap\n    const uv = unpackUVsFromRGB(info.color);\n\n    const pixel = [Math.floor(uv[0] * (width as number)), Math.floor(uv[1] * (height as number))];\n\n    info.bitmap = {\n      size: {width, height}, // Size of bitmap\n      uv, // Floating point precision in 0-1 range\n      pixel // Truncated to integer and scaled to pixel size\n    };\n\n    return info;\n  }\n\n  // Override base Layer multi-depth picking logic\n  disablePickingIndex() {\n    this.setState({disablePicking: true});\n  }\n\n  restorePickingColors() {\n    this.setState({disablePicking: false});\n  }\n\n  protected _updateAutoHighlight(info) {\n    super._updateAutoHighlight({\n      ...info,\n      color: this.encodePickingColor(0)\n    });\n  }\n\n  protected _createMesh() {\n    const {bounds} = this.props;\n\n    let normalizedBounds = bounds;\n    // bounds as [minX, minY, maxX, maxY]\n    if (isRectangularBounds(bounds)) {\n      /*\n        (minX0, maxY3) ---- (maxX2, maxY3)\n               |                  |\n               |                  |\n               |                  |\n        (minX0, minY1) ---- (maxX2, minY1)\n     */\n      normalizedBounds = [\n        [bounds[0], bounds[1]],\n        [bounds[0], bounds[3]],\n        [bounds[2], bounds[3]],\n        [bounds[2], bounds[1]]\n      ];\n    }\n\n    return createMesh(normalizedBounds, this.context.viewport.resolution);\n  }\n\n  protected _getModel(gl: WebGLRenderingContext): Model {\n    if (!gl) {\n      return null;\n    }\n\n    /*\n      0,0 --- 1,0\n       |       |\n      0,1 --- 1,1\n    */\n    return new Model(gl, {\n      ...this.getShaders(),\n      id: this.props.id,\n      geometry: new Geometry({\n        drawMode: GL.TRIANGLES,\n        vertexCount: 6\n      }),\n      isInstanced: false\n    });\n  }\n\n  draw(opts) {\n    const {uniforms, moduleParameters} = opts;\n    const {model, coordinateConversion, bounds, disablePicking} = this.state;\n    const {image, desaturate, transparentColor, tintColor} = this.props;\n\n    if (moduleParameters.pickingActive && disablePicking) {\n      return;\n    }\n\n    // // TODO fix zFighting\n    // Render the image\n    if (image && model) {\n      model\n        .setUniforms(uniforms)\n        .setUniforms({\n          bitmapTexture: image,\n          desaturate,\n          transparentColor: transparentColor.map(x => x / 255),\n          tintColor: tintColor.slice(0, 3).map(x => x / 255),\n          coordinateConversion,\n          bounds\n        })\n        .draw();\n    }\n  }\n\n  _getCoordinateUniforms() {\n    const {LNGLAT, CARTESIAN, DEFAULT} = COORDINATE_SYSTEM;\n    let {_imageCoordinateSystem: imageCoordinateSystem} = this.props;\n    if (imageCoordinateSystem !== DEFAULT) {\n      const {bounds} = this.props;\n      if (!isRectangularBounds(bounds)) {\n        throw new Error('_imageCoordinateSystem only supports rectangular bounds');\n      }\n\n      // The default behavior (linearly interpolated tex coords)\n      const defaultImageCoordinateSystem = this.context.viewport.resolution ? LNGLAT : CARTESIAN;\n      imageCoordinateSystem = imageCoordinateSystem === LNGLAT ? LNGLAT : CARTESIAN;\n\n      if (imageCoordinateSystem === LNGLAT && defaultImageCoordinateSystem === CARTESIAN) {\n        // LNGLAT in Mercator, e.g. display LNGLAT-encoded image in WebMercator projection\n        return {coordinateConversion: -1, bounds};\n      }\n      if (imageCoordinateSystem === CARTESIAN && defaultImageCoordinateSystem === LNGLAT) {\n        // Mercator in LNGLAT, e.g. display WebMercator encoded image in Globe projection\n        const bottomLeft = lngLatToWorld([bounds[0], bounds[1]]);\n        const topRight = lngLatToWorld([bounds[2], bounds[3]]);\n        return {\n          coordinateConversion: 1,\n          bounds: [bottomLeft[0], bottomLeft[1], topRight[0], topRight[1]]\n        };\n      }\n    }\n    return {\n      coordinateConversion: 0,\n      bounds: [0, 0, 0, 0]\n    };\n  }\n}\n\n/**\n * Decode uv floats from rgb bytes where b contains 4-bit fractions of uv\n * @param {number[]} color\n * @returns {number[]} uvs\n * https://stackoverflow.com/questions/30242013/glsl-compressing-packing-multiple-0-1-colours-var4-into-a-single-var4-variab\n */\nfunction unpackUVsFromRGB(color) {\n  const [u, v, fracUV] = color;\n  const vFrac = (fracUV & 0xf0) / 256;\n  const uFrac = (fracUV & 0x0f) / 16;\n  return [(u + uFrac) / 256, (v + vFrac) / 256];\n}\n\nfunction isRectangularBounds(\n  bounds: [number, number, number, number] | [Position, Position, Position, Position]\n): bounds is [number, number, number, number] {\n  return Number.isFinite(bounds[0]);\n}\n","export default `\n#define SHADER_NAME bitmap-layer-vertex-shader\n\nattribute vec2 texCoords;\nattribute vec3 positions;\nattribute vec3 positions64Low;\n\nvarying vec2 vTexCoord;\nvarying vec2 vTexPos;\n\nuniform float coordinateConversion;\n\nconst vec3 pickingColor = vec3(1.0, 0.0, 0.0);\n\nvoid main(void) {\n  geometry.worldPosition = positions;\n  geometry.uv = texCoords;\n  geometry.pickingColor = pickingColor;\n\n  gl_Position = project_position_to_clipspace(positions, positions64Low, vec3(0.0), geometry.position);\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n\n  vTexCoord = texCoords;\n\n  if (coordinateConversion < -0.5) {\n    vTexPos = geometry.position.xy + project_uCommonOrigin.xy;\n  } else if (coordinateConversion > 0.5) {\n    vTexPos = geometry.worldPosition.xy;\n  }\n\n  vec4 color = vec4(0.0);\n  DECKGL_FILTER_COLOR(color, geometry);\n}\n`;\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {\n  Layer,\n  project32,\n  picking,\n  UNIT,\n  UpdateParameters,\n  LayerProps,\n  LayerDataSource,\n  Unit,\n  AccessorFunction,\n  Position,\n  Accessor,\n  Color,\n  DefaultProps\n} from '@deck.gl/core';\n\nimport GL from '@luma.gl/constants';\nimport {Model, Geometry} from '@luma.gl/core';\n\nimport vs from './arc-layer-vertex.glsl';\nimport fs from './arc-layer-fragment.glsl';\n\nconst DEFAULT_COLOR: [number, number, number, number] = [0, 0, 0, 255];\n\nconst defaultProps: DefaultProps<ArcLayerProps> = {\n  getSourcePosition: {type: 'accessor', value: x => x.sourcePosition},\n  getTargetPosition: {type: 'accessor', value: x => x.targetPosition},\n  getSourceColor: {type: 'accessor', value: DEFAULT_COLOR},\n  getTargetColor: {type: 'accessor', value: DEFAULT_COLOR},\n  getWidth: {type: 'accessor', value: 1},\n  getHeight: {type: 'accessor', value: 1},\n  getTilt: {type: 'accessor', value: 0},\n\n  greatCircle: false,\n  numSegments: {type: 'number', value: 50, min: 1},\n\n  widthUnits: 'pixels',\n  widthScale: {type: 'number', value: 1, min: 0},\n  widthMinPixels: {type: 'number', value: 0, min: 0},\n  widthMaxPixels: {type: 'number', value: Number.MAX_SAFE_INTEGER, min: 0}\n};\n\n/** All properties supported by ArcLayer. */\nexport type ArcLayerProps<DataT = any> = _ArcLayerProps<DataT> & LayerProps;\n\n/** Properties added by ArcLayer. */\ntype _ArcLayerProps<DataT> = {\n  data: LayerDataSource<DataT>;\n  /**\n   * If `true`, create the arc along the shortest path on the earth surface.\n   * @default false\n   */\n  greatCircle?: boolean;\n\n  /**\n   * The number of segments used to draw each arc.\n   * @default 50\n   */\n  numSegments?: number;\n\n  /**\n   * The units of the line width, one of `'meters'`, `'common'`, and `'pixels'`\n   * @default 'pixels'\n   */\n  widthUnits?: Unit;\n\n  /**\n   * The scaling multiplier for the width of each line.\n   * @default 1\n   */\n  widthScale?: number;\n\n  /**\n   * The minimum line width in pixels.\n   * @default 0\n   */\n  widthMinPixels?: number;\n\n  /**\n   * The maximum line width in pixels.\n   * @default Number.MAX_SAFE_INTEGER\n   */\n  widthMaxPixels?: number;\n\n  /**\n   * Method called to retrieve the source position of each object.\n   * @default object => object.sourcePosition\n   */\n  getSourcePosition?: AccessorFunction<DataT, Position>;\n\n  /**\n   * Method called to retrieve the target position of each object.\n   * @default object => object.targetPosition\n   */\n  getTargetPosition?: AccessorFunction<DataT, Position>;\n\n  /**\n   * The rgba color is in the format of `[r, g, b, [a]]`.\n   * @default [0, 0, 0, 255]\n   */\n  getSourceColor?: Accessor<DataT, Color>;\n\n  /**\n   * The rgba color is in the format of `[r, g, b, [a]]`.\n   * @default [0, 0, 0, 255]\n   */\n  getTargetColor?: Accessor<DataT, Color>;\n\n  /**\n   * The line width of each object, in units specified by `widthUnits`.\n   * @default 1\n   */\n  getWidth?: Accessor<DataT, number>;\n\n  /**\n   * Multiplier of layer height. `0` will make the layer flat.\n   * @default 1\n   */\n  getHeight?: Accessor<DataT, number>;\n\n  /**\n   * Use to tilt the arc to the side if you have multiple arcs with the same source and target positions.\n   * @default 0\n   */\n  getTilt?: Accessor<DataT, number>;\n};\n\n/** Render raised arcs joining pairs of source and target coordinates. */\nexport default class ArcLayer<DataT = any, ExtraPropsT extends {} = {}> extends Layer<\n  ExtraPropsT & Required<_ArcLayerProps<DataT>>\n> {\n  static layerName = 'ArcLayer';\n  static defaultProps = defaultProps;\n\n  state!: Layer['state'] & {\n    model?: Model;\n  };\n\n  getBounds(): [number[], number[]] | null {\n    return this.getAttributeManager()?.getBounds([\n      'instanceSourcePositions',\n      'instanceTargetPositions'\n    ]);\n  }\n\n  getShaders() {\n    return super.getShaders({vs, fs, modules: [project32, picking]}); // 'project' module added by default.\n  }\n\n  // This layer has its own wrapLongitude logic\n  get wrapLongitude() {\n    return false;\n  }\n\n  initializeState() {\n    const attributeManager = this.getAttributeManager()!;\n\n    /* eslint-disable max-len */\n    attributeManager.addInstanced({\n      instanceSourcePositions: {\n        size: 3,\n        type: GL.DOUBLE,\n        fp64: this.use64bitPositions(),\n        transition: true,\n        accessor: 'getSourcePosition'\n      },\n      instanceTargetPositions: {\n        size: 3,\n        type: GL.DOUBLE,\n        fp64: this.use64bitPositions(),\n        transition: true,\n        accessor: 'getTargetPosition'\n      },\n      instanceSourceColors: {\n        size: this.props.colorFormat.length,\n        type: GL.UNSIGNED_BYTE,\n        normalized: true,\n        transition: true,\n        accessor: 'getSourceColor',\n        defaultValue: DEFAULT_COLOR\n      },\n      instanceTargetColors: {\n        size: this.props.colorFormat.length,\n        type: GL.UNSIGNED_BYTE,\n        normalized: true,\n        transition: true,\n        accessor: 'getTargetColor',\n        defaultValue: DEFAULT_COLOR\n      },\n      instanceWidths: {\n        size: 1,\n        transition: true,\n        accessor: 'getWidth',\n        defaultValue: 1\n      },\n      instanceHeights: {\n        size: 1,\n        transition: true,\n        accessor: 'getHeight',\n        defaultValue: 1\n      },\n      instanceTilts: {\n        size: 1,\n        transition: true,\n        accessor: 'getTilt',\n        defaultValue: 0\n      }\n    });\n    /* eslint-enable max-len */\n  }\n\n  updateState(opts: UpdateParameters<this>): void {\n    super.updateState(opts);\n    const {props, oldProps, changeFlags} = opts;\n    // Re-generate model if geometry changed\n    if (\n      changeFlags.extensionsChanged ||\n      (changeFlags.propsChanged && props.numSegments !== oldProps.numSegments)\n    ) {\n      const {gl} = this.context;\n      this.state.model?.delete();\n      this.state.model = this._getModel(gl);\n      this.getAttributeManager()!.invalidateAll();\n    }\n  }\n\n  draw({uniforms}) {\n    const {widthUnits, widthScale, widthMinPixels, widthMaxPixels, greatCircle, wrapLongitude} =\n      this.props;\n\n    this.state.model\n      .setUniforms(uniforms)\n      .setUniforms({\n        greatCircle,\n        widthUnits: UNIT[widthUnits],\n        widthScale,\n        widthMinPixels,\n        widthMaxPixels,\n        useShortestPath: wrapLongitude\n      })\n      .draw();\n  }\n\n  protected _getModel(gl: WebGLRenderingContext): Model {\n    const {id, numSegments} = this.props;\n    let positions: number[] = [];\n    /*\n     *  (0, -1)-------------_(1, -1)\n     *       |          _,-\"  |\n     *       o      _,-\"      o\n     *       |  _,-\"          |\n     *   (0, 1)\"-------------(1, 1)\n     */\n    for (let i = 0; i < numSegments; i++) {\n      positions = positions.concat([i, 1, 0, i, -1, 0]);\n    }\n\n    const model = new Model(gl, {\n      ...this.getShaders(),\n      id,\n      geometry: new Geometry({\n        drawMode: GL.TRIANGLE_STRIP,\n        attributes: {\n          positions: new Float32Array(positions)\n        }\n      }),\n      isInstanced: true\n    });\n\n    model.setUniforms({numSegments});\n\n    return model;\n  }\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nexport default `\\\n#define SHADER_NAME arc-layer-vertex-shader\n\nattribute vec3 positions;\nattribute vec4 instanceSourceColors;\nattribute vec4 instanceTargetColors;\nattribute vec3 instanceSourcePositions;\nattribute vec3 instanceSourcePositions64Low;\nattribute vec3 instanceTargetPositions;\nattribute vec3 instanceTargetPositions64Low;\nattribute vec3 instancePickingColors;\nattribute float instanceWidths;\nattribute float instanceHeights;\nattribute float instanceTilts;\n\nuniform bool greatCircle;\nuniform bool useShortestPath;\nuniform float numSegments;\nuniform float opacity;\nuniform float widthScale;\nuniform float widthMinPixels;\nuniform float widthMaxPixels;\nuniform int widthUnits;\n\nvarying vec4 vColor;\nvarying vec2 uv;\nvarying float isValid;\n\nfloat paraboloid(float distance, float sourceZ, float targetZ, float ratio) {\n  // d: distance on the xy plane\n  // r: ratio of the current point\n  // p: ratio of the peak of the arc\n  // h: height multiplier\n  // z = f(r) = sqrt(r * (p * 2 - r)) * d * h\n  // f(0) = 0\n  // f(1) = dz\n\n  float deltaZ = targetZ - sourceZ;\n  float dh = distance * instanceHeights;\n  if (dh == 0.0) {\n    return sourceZ + deltaZ * ratio;\n  }\n  float unitZ = deltaZ / dh;\n  float p2 = unitZ * unitZ + 1.0;\n\n  // sqrt does not deal with negative values, manually flip source and target if delta.z < 0\n  float dir = step(deltaZ, 0.0);\n  float z0 = mix(sourceZ, targetZ, dir);\n  float r = mix(ratio, 1.0 - ratio, dir);\n  return sqrt(r * (p2 - r)) * dh + z0;\n}\n\n// offset vector by strokeWidth pixels\n// offset_direction is -1 (left) or 1 (right)\nvec2 getExtrusionOffset(vec2 line_clipspace, float offset_direction, float width) {\n  // normalized direction of the line\n  vec2 dir_screenspace = normalize(line_clipspace * project_uViewportSize);\n  // rotate by 90 degrees\n  dir_screenspace = vec2(-dir_screenspace.y, dir_screenspace.x);\n\n  return dir_screenspace * offset_direction * width / 2.0;\n}\n\nfloat getSegmentRatio(float index) {\n  return smoothstep(0.0, 1.0, index / (numSegments - 1.0));\n}\n\nvec3 interpolateFlat(vec3 source, vec3 target, float segmentRatio) {\n  float distance = length(source.xy - target.xy);\n  float z = paraboloid(distance, source.z, target.z, segmentRatio);\n\n  float tiltAngle = radians(instanceTilts);\n  vec2 tiltDirection = normalize(target.xy - source.xy);\n  vec2 tilt = vec2(-tiltDirection.y, tiltDirection.x) * z * sin(tiltAngle);\n\n  return vec3(\n    mix(source.xy, target.xy, segmentRatio) + tilt,\n    z * cos(tiltAngle)\n  );\n}\n\n/* Great circle interpolation\n * http://www.movable-type.co.uk/scripts/latlong.html\n */\nfloat getAngularDist (vec2 source, vec2 target) {\n  vec2 sourceRadians = radians(source);\n  vec2 targetRadians = radians(target);\n  vec2 sin_half_delta = sin((sourceRadians - targetRadians) / 2.0);\n  vec2 shd_sq = sin_half_delta * sin_half_delta;\n\n  float a = shd_sq.y + cos(sourceRadians.y) * cos(targetRadians.y) * shd_sq.x;\n  return 2.0 * asin(sqrt(a));\n}\n\nvec3 interpolateGreatCircle(vec3 source, vec3 target, vec3 source3D, vec3 target3D, float angularDist, float t) {\n  vec2 lngLat;\n\n  // if the angularDist is PI, linear interpolation is applied. otherwise, use spherical interpolation\n  if(abs(angularDist - PI) < 0.001) {\n    lngLat = (1.0 - t) * source.xy + t * target.xy;\n  } else {\n    float a = sin((1.0 - t) * angularDist);\n    float b = sin(t * angularDist);\n    vec3 p = source3D.yxz * a + target3D.yxz * b;\n    lngLat = degrees(vec2(atan(p.y, -p.x), atan(p.z, length(p.xy))));\n  }\n\n  float z = paraboloid(angularDist * EARTH_RADIUS, source.z, target.z, t);\n\n  return vec3(lngLat, z);\n}\n\n/* END GREAT CIRCLE */\n\nvoid main(void) {\n  geometry.worldPosition = instanceSourcePositions;\n  geometry.worldPositionAlt = instanceTargetPositions;\n\n  float segmentIndex = positions.x;\n  float segmentRatio = getSegmentRatio(segmentIndex);\n  float prevSegmentRatio = getSegmentRatio(max(0.0, segmentIndex - 1.0));\n  float nextSegmentRatio = getSegmentRatio(min(numSegments - 1.0, segmentIndex + 1.0));\n\n  // if it's the first point, use next - current as direction\n  // otherwise use current - prev\n  float indexDir = mix(-1.0, 1.0, step(segmentIndex, 0.0));\n  isValid = 1.0;\n\n  uv = vec2(segmentRatio, positions.y);\n  geometry.uv = uv;\n  geometry.pickingColor = instancePickingColors;\n\n  vec4 curr;\n  vec4 next;\n  vec3 source;\n  vec3 target;\n\n  if ((greatCircle || project_uProjectionMode == PROJECTION_MODE_GLOBE) && project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT) {\n    source = project_globe_(vec3(instanceSourcePositions.xy, 0.0));\n    target = project_globe_(vec3(instanceTargetPositions.xy, 0.0));\n    float angularDist = getAngularDist(instanceSourcePositions.xy, instanceTargetPositions.xy);\n\n    vec3 prevPos = interpolateGreatCircle(instanceSourcePositions, instanceTargetPositions, source, target, angularDist, prevSegmentRatio);\n    vec3 currPos = interpolateGreatCircle(instanceSourcePositions, instanceTargetPositions, source, target, angularDist, segmentRatio);\n    vec3 nextPos = interpolateGreatCircle(instanceSourcePositions, instanceTargetPositions, source, target, angularDist, nextSegmentRatio);\n\n    if (abs(currPos.x - prevPos.x) > 180.0) {\n      indexDir = -1.0;\n      isValid = 0.0;\n    } else if (abs(currPos.x - nextPos.x) > 180.0) {\n      indexDir = 1.0;\n      isValid = 0.0;\n    }\n    nextPos = indexDir < 0.0 ? prevPos : nextPos;\n    nextSegmentRatio = indexDir < 0.0 ? prevSegmentRatio : nextSegmentRatio;\n\n    if (isValid == 0.0) {\n      // split at the 180th meridian\n      nextPos.x += nextPos.x > 0.0 ? -360.0 : 360.0;\n      float t = ((currPos.x > 0.0 ? 180.0 : -180.0) - currPos.x) / (nextPos.x - currPos.x);\n      currPos = mix(currPos, nextPos, t);\n      segmentRatio = mix(segmentRatio, nextSegmentRatio, t);\n    }\n\n    vec3 currPos64Low = mix(instanceSourcePositions64Low, instanceTargetPositions64Low, segmentRatio);\n    vec3 nextPos64Low = mix(instanceSourcePositions64Low, instanceTargetPositions64Low, nextSegmentRatio);\n  \n    curr = project_position_to_clipspace(currPos, currPos64Low, vec3(0.0), geometry.position);\n    next = project_position_to_clipspace(nextPos, nextPos64Low, vec3(0.0));\n  \n  } else {\n    vec3 source_world = instanceSourcePositions;\n    vec3 target_world = instanceTargetPositions;\n    if (useShortestPath) {\n      source_world.x = mod(source_world.x + 180., 360.0) - 180.;\n      target_world.x = mod(target_world.x + 180., 360.0) - 180.;\n\n      float deltaLng = target_world.x - source_world.x;\n      if (deltaLng > 180.) target_world.x -= 360.;\n      if (deltaLng < -180.) source_world.x -= 360.;\n    }\n    source = project_position(source_world, instanceSourcePositions64Low);\n    target = project_position(target_world, instanceTargetPositions64Low);\n\n    // common x at longitude=-180\n    float antiMeridianX = 0.0;\n\n    if (useShortestPath) {\n      if (project_uProjectionMode == PROJECTION_MODE_WEB_MERCATOR_AUTO_OFFSET) {\n        antiMeridianX = -(project_uCoordinateOrigin.x + 180.) / 360. * TILE_SIZE;\n      }\n      float thresholdRatio = (antiMeridianX - source.x) / (target.x - source.x);\n\n      if (prevSegmentRatio <= thresholdRatio && nextSegmentRatio > thresholdRatio) {\n        isValid = 0.0;\n        indexDir = sign(segmentRatio - thresholdRatio);\n        segmentRatio = thresholdRatio;\n      }\n    }\n\n    nextSegmentRatio = indexDir < 0.0 ? prevSegmentRatio : nextSegmentRatio;\n    vec3 currPos = interpolateFlat(source, target, segmentRatio);\n    vec3 nextPos = interpolateFlat(source, target, nextSegmentRatio);\n\n    if (useShortestPath) {\n      if (nextPos.x < antiMeridianX) {\n        currPos.x += TILE_SIZE;\n        nextPos.x += TILE_SIZE;\n      }\n    }\n\n    curr = project_common_position_to_clipspace(vec4(currPos, 1.0));\n    next = project_common_position_to_clipspace(vec4(nextPos, 1.0));\n    geometry.position = vec4(currPos, 1.0);\n  }\n\n  // Multiply out width and clamp to limits\n  // mercator pixels are interpreted as screen pixels\n  float widthPixels = clamp(\n    project_size_to_pixel(instanceWidths * widthScale, widthUnits),\n    widthMinPixels, widthMaxPixels\n  );\n\n  // extrude\n  vec3 offset = vec3(\n    getExtrusionOffset((next.xy - curr.xy) * indexDir, positions.y, widthPixels),\n    0.0);\n  DECKGL_FILTER_SIZE(offset, geometry);\n  DECKGL_FILTER_GL_POSITION(curr, geometry);\n  gl_Position = curr + vec4(project_pixel_size_to_clipspace(offset.xy), 0.0, 0.0);\n\n  vec4 color = mix(instanceSourceColors, instanceTargetColors, segmentRatio);\n  vColor = vec4(color.rgb, color.a * opacity);\n  DECKGL_FILTER_COLOR(vColor, geometry);\n}\n`;\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nexport default `\\\n#define SHADER_NAME arc-layer-fragment-shader\n\nprecision highp float;\n\nvarying vec4 vColor;\nvarying vec2 uv;\nvarying float isValid;\n\nvoid main(void) {\n  if (isValid == 0.0) {\n    discard;\n  }\n\n  gl_FragColor = vColor;\n  geometry.uv = uv;\n\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n`;\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {\n  Layer,\n  project32,\n  picking,\n  UNIT,\n  LayerProps,\n  LayerDataSource,\n  Unit,\n  Position,\n  Accessor,\n  Color,\n  UpdateParameters,\n  DefaultProps\n} from '@deck.gl/core';\nimport GL from '@luma.gl/constants';\nimport {Model, Geometry} from '@luma.gl/core';\n\nimport vs from './line-layer-vertex.glsl';\nimport fs from './line-layer-fragment.glsl';\n\nconst DEFAULT_COLOR: [number, number, number, number] = [0, 0, 0, 255];\n\nconst defaultProps: DefaultProps<LineLayerProps> = {\n  getSourcePosition: {type: 'accessor', value: x => x.sourcePosition},\n  getTargetPosition: {type: 'accessor', value: x => x.targetPosition},\n  getColor: {type: 'accessor', value: DEFAULT_COLOR},\n  getWidth: {type: 'accessor', value: 1},\n\n  widthUnits: 'pixels',\n  widthScale: {type: 'number', value: 1, min: 0},\n  widthMinPixels: {type: 'number', value: 0, min: 0},\n  widthMaxPixels: {type: 'number', value: Number.MAX_SAFE_INTEGER, min: 0}\n};\n\n/** All properties supported by LineLayer. */\nexport type LineLayerProps<DataT = any> = _LineLayerProps<DataT> & LayerProps;\n\n/** Properties added by LineLayer. */\ntype _LineLayerProps<DataT> = {\n  data: LayerDataSource<DataT>;\n  /**\n   * The units of the line width, one of `'meters'`, `'common'`, and `'pixels'`.\n   * @default 'pixels'\n   */\n  widthUnits?: Unit;\n\n  /**\n   * The scaling multiplier for the width of each line.\n   * @default 1\n   */\n  widthScale?: number;\n\n  /**\n   * The minimum line width in pixels.\n   * @default 0\n   */\n  widthMinPixels?: number;\n\n  /**\n   * The maximum line width in pixels.\n   * @default Number.MAX_SAFE_INTEGER\n   */\n  widthMaxPixels?: number;\n\n  /**\n   * Source position of each object.\n   * @default object => object.sourcePosition\n   */\n  getSourcePosition?: Accessor<DataT, Position>;\n\n  /**\n   * Target position of each object.\n   * @default object => object.targetPosition\n   */\n  getTargetPosition?: Accessor<DataT, Position>;\n\n  /**\n   * The rgba color is in the format of `[r, g, b, [a]]`.\n   * @default [0, 0, 0, 255]\n   */\n  getColor?: Accessor<DataT, Color>;\n\n  /**\n   * Width of each object\n   * @default 1\n   */\n  getWidth?: Accessor<DataT, number>;\n};\n\n/**\n * A layer that renders straight lines joining pairs of source and target coordinates.\n */\nexport default class LineLayer<DataT = any, ExtraProps extends {} = {}> extends Layer<\n  ExtraProps & Required<_LineLayerProps<DataT>>\n> {\n  static layerName = 'LineLayer';\n  static defaultProps = defaultProps;\n\n  getBounds(): [number[], number[]] | null {\n    return this.getAttributeManager()?.getBounds([\n      'instanceSourcePositions',\n      'instanceTargetPositions'\n    ]);\n  }\n\n  getShaders() {\n    return super.getShaders({vs, fs, modules: [project32, picking]});\n  }\n\n  // This layer has its own wrapLongitude logic\n  get wrapLongitude(): boolean {\n    return false;\n  }\n\n  initializeState() {\n    const attributeManager = this.getAttributeManager()!;\n\n    /* eslint-disable max-len */\n    attributeManager.addInstanced({\n      instanceSourcePositions: {\n        size: 3,\n        type: GL.DOUBLE,\n        fp64: this.use64bitPositions(),\n        transition: true,\n        accessor: 'getSourcePosition'\n      },\n      instanceTargetPositions: {\n        size: 3,\n        type: GL.DOUBLE,\n        fp64: this.use64bitPositions(),\n        transition: true,\n        accessor: 'getTargetPosition'\n      },\n      instanceColors: {\n        size: this.props.colorFormat.length,\n        type: GL.UNSIGNED_BYTE,\n        normalized: true,\n        transition: true,\n        accessor: 'getColor',\n        defaultValue: [0, 0, 0, 255]\n      },\n      instanceWidths: {\n        size: 1,\n        transition: true,\n        accessor: 'getWidth',\n        defaultValue: 1\n      }\n    });\n    /* eslint-enable max-len */\n  }\n\n  updateState(params: UpdateParameters<this>): void {\n    super.updateState(params);\n\n    if (params.changeFlags.extensionsChanged) {\n      const {gl} = this.context;\n      this.state.model?.delete();\n      this.state.model = this._getModel(gl);\n      this.getAttributeManager()!.invalidateAll();\n    }\n  }\n\n  draw({uniforms}): void {\n    const {widthUnits, widthScale, widthMinPixels, widthMaxPixels, wrapLongitude} = this.props;\n\n    this.state.model\n      .setUniforms(uniforms)\n      .setUniforms({\n        widthUnits: UNIT[widthUnits],\n        widthScale,\n        widthMinPixels,\n        widthMaxPixels,\n        useShortestPath: wrapLongitude ? 1 : 0\n      })\n      .draw();\n\n    if (wrapLongitude) {\n      // Render a second copy for the clipped lines at the 180th meridian\n      this.state.model\n        .setUniforms({\n          useShortestPath: -1\n        })\n        .draw();\n    }\n  }\n\n  protected _getModel(gl: WebGLRenderingContext): Model {\n    /*\n     *  (0, -1)-------------_(1, -1)\n     *       |          _,-\"  |\n     *       o      _,-\"      o\n     *       |  _,-\"          |\n     *   (0, 1)\"-------------(1, 1)\n     */\n    const positions = [0, -1, 0, 0, 1, 0, 1, -1, 0, 1, 1, 0];\n\n    return new Model(gl, {\n      ...this.getShaders(),\n      id: this.props.id,\n      geometry: new Geometry({\n        drawMode: GL.TRIANGLE_STRIP,\n        attributes: {\n          positions: new Float32Array(positions)\n        }\n      }),\n      isInstanced: true\n    });\n  }\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nexport default `\\\n#define SHADER_NAME line-layer-vertex-shader\n\nattribute vec3 positions;\nattribute vec3 instanceSourcePositions;\nattribute vec3 instanceTargetPositions;\nattribute vec3 instanceSourcePositions64Low;\nattribute vec3 instanceTargetPositions64Low;\nattribute vec4 instanceColors;\nattribute vec3 instancePickingColors;\nattribute float instanceWidths;\n\nuniform float opacity;\nuniform float widthScale;\nuniform float widthMinPixels;\nuniform float widthMaxPixels;\nuniform float useShortestPath;\nuniform int widthUnits;\n\nvarying vec4 vColor;\nvarying vec2 uv;\n\n// offset vector by strokeWidth pixels\n// offset_direction is -1 (left) or 1 (right)\nvec2 getExtrusionOffset(vec2 line_clipspace, float offset_direction, float width) {\n  // normalized direction of the line\n  vec2 dir_screenspace = normalize(line_clipspace * project_uViewportSize);\n  // rotate by 90 degrees\n  dir_screenspace = vec2(-dir_screenspace.y, dir_screenspace.x);\n\n  return dir_screenspace * offset_direction * width / 2.0;\n}\n\nvec3 splitLine(vec3 a, vec3 b, float x) {\n  float t = (x - a.x) / (b.x - a.x);\n  return vec3(x, mix(a.yz, b.yz, t));\n}\n\nvoid main(void) {\n  geometry.worldPosition = instanceSourcePositions;\n  geometry.worldPositionAlt = instanceTargetPositions;\n\n  vec3 source_world = instanceSourcePositions;\n  vec3 target_world = instanceTargetPositions;\n  vec3 source_world_64low = instanceSourcePositions64Low;\n  vec3 target_world_64low = instanceTargetPositions64Low;\n\n  if (useShortestPath > 0.5 || useShortestPath < -0.5) {\n    source_world.x = mod(source_world.x + 180., 360.0) - 180.;\n    target_world.x = mod(target_world.x + 180., 360.0) - 180.;\n    float deltaLng = target_world.x - source_world.x;\n\n    if (deltaLng * useShortestPath > 180.) {\n      source_world.x += 360. * useShortestPath;\n      source_world = splitLine(source_world, target_world, 180. * useShortestPath);\n      source_world_64low = vec3(0.0);\n    } else if (deltaLng * useShortestPath < -180.) {\n      target_world.x += 360. * useShortestPath;\n      target_world = splitLine(source_world, target_world, 180. * useShortestPath);\n      target_world_64low = vec3(0.0);\n    } else if (useShortestPath < 0.) {\n      // Line is not split, abort\n      gl_Position = vec4(0.);\n      return;\n    }\n  }\n\n  // Position\n  vec4 source_commonspace;\n  vec4 target_commonspace;\n  vec4 source = project_position_to_clipspace(source_world, source_world_64low, vec3(0.), source_commonspace);\n  vec4 target = project_position_to_clipspace(target_world, target_world_64low, vec3(0.), target_commonspace);\n  \n  // linear interpolation of source & target to pick right coord\n  float segmentIndex = positions.x;\n  vec4 p = mix(source, target, segmentIndex);\n  geometry.position = mix(source_commonspace, target_commonspace, segmentIndex);\n  uv = positions.xy;\n  geometry.uv = uv;\n  geometry.pickingColor = instancePickingColors;\n\n  // Multiply out width and clamp to limits\n  float widthPixels = clamp(\n    project_size_to_pixel(instanceWidths * widthScale, widthUnits),\n    widthMinPixels, widthMaxPixels\n  );\n\n  // extrude\n  vec3 offset = vec3(\n    getExtrusionOffset(target.xy - source.xy, positions.y, widthPixels),\n    0.0);\n  DECKGL_FILTER_SIZE(offset, geometry);\n  DECKGL_FILTER_GL_POSITION(p, geometry);\n  gl_Position = p + vec4(project_pixel_size_to_clipspace(offset.xy), 0.0, 0.0);\n\n  // Color\n  vColor = vec4(instanceColors.rgb, instanceColors.a * opacity);\n  DECKGL_FILTER_COLOR(vColor, geometry);\n}\n`;\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nexport default `\\\n#define SHADER_NAME line-layer-fragment-shader\n\nprecision highp float;\n\nvarying vec4 vColor;\nvarying vec2 uv;\n\nvoid main(void) {\n  geometry.uv = uv;\n\n  gl_FragColor = vColor;\n\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n`;\n","/*\nAdapted from s2-geometry\n\nISC License (ISC)\n\nCopyright (c) 2012-2016, Jon Atkins <github@jonatkins.com>\nCopyright (c) 2016, AJ ONeal <aj@daplie.com>\n\nPermission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport Long from 'long';\n\n//\n// Functional Style\n//\nconst FACE_BITS = 3;\nconst MAX_LEVEL = 30;\nconst POS_BITS = 2 * MAX_LEVEL + 1; // 61 (60 bits of data, 1 bit lsb marker)\nconst RADIAN_TO_DEGREE = 180 / Math.PI;\n\nexport function IJToST(\n  ij: [number, number],\n  order: number,\n  offsets: [number, number]\n): [number, number] {\n  const maxSize = 1 << order;\n\n  return [(ij[0] + offsets[0]) / maxSize, (ij[1] + offsets[1]) / maxSize];\n}\n\nfunction singleSTtoUV(st: number): number {\n  if (st >= 0.5) {\n    return (1 / 3.0) * (4 * st * st - 1);\n  }\n  return (1 / 3.0) * (1 - 4 * (1 - st) * (1 - st));\n}\n\nexport function STToUV(st: [number, number]): [number, number] {\n  return [singleSTtoUV(st[0]), singleSTtoUV(st[1])];\n}\n\nexport function FaceUVToXYZ(face: number, [u, v]: [number, number]): [number, number, number] {\n  switch (face) {\n    case 0:\n      return [1, u, v];\n    case 1:\n      return [-u, 1, v];\n    case 2:\n      return [-u, -v, 1];\n    case 3:\n      return [-1, -v, -u];\n    case 4:\n      return [v, -1, -u];\n    case 5:\n      return [v, u, -1];\n    default:\n      throw new Error('Invalid face');\n  }\n}\n\nexport function XYZToLngLat([x, y, z]: [number, number, number]): [number, number] {\n  const lat = Math.atan2(z, Math.sqrt(x * x + y * y));\n  const lng = Math.atan2(y, x);\n\n  return [lng * RADIAN_TO_DEGREE, lat * RADIAN_TO_DEGREE];\n}\n\nexport function toHilbertQuadkey(idS: string): string {\n  let bin = Long.fromString(idS, true, 10).toString(2);\n\n  while (bin.length < FACE_BITS + POS_BITS) {\n    // eslint-disable-next-line prefer-template\n    bin = '0' + bin;\n  }\n\n  // MUST come AFTER binstr has been left-padded with '0's\n  const lsbIndex = bin.lastIndexOf('1');\n  // substr(start, len)\n  // substring(start, end) // includes start, does not include end\n  const faceB = bin.substring(0, 3);\n  // posB will always be a multiple of 2 (or it's invalid)\n  const posB = bin.substring(3, lsbIndex);\n  const levelN = posB.length / 2;\n\n  const faceS = Long.fromString(faceB, true, 2).toString(10);\n  let posS = Long.fromString(posB, true, 2).toString(4);\n\n  while (posS.length < levelN) {\n    // eslint-disable-next-line prefer-template\n    posS = '0' + posS;\n  }\n\n  return `${faceS}/${posS}`;\n}\n\nfunction rotateAndFlipQuadrant(n: number, point: [number, number], rx: number, ry: number): void {\n  if (ry === 0) {\n    if (rx === 1) {\n      point[0] = n - 1 - point[0];\n      point[1] = n - 1 - point[1];\n    }\n\n    const x = point[0];\n    point[0] = point[1];\n    point[1] = x;\n  }\n}\n\nexport function FromHilbertQuadKey(hilbertQuadkey: string): {\n  face: number;\n  ij: [number, number];\n  level: number;\n} {\n  const parts = hilbertQuadkey.split('/');\n  const face = parseInt(parts[0], 10);\n  const position = parts[1];\n  const maxLevel = position.length;\n  const point = [0, 0] as [number, number];\n  let level;\n\n  for (let i = maxLevel - 1; i >= 0; i--) {\n    level = maxLevel - i;\n    const bit = position[i];\n    let rx = 0;\n    let ry = 0;\n    if (bit === '1') {\n      ry = 1;\n    } else if (bit === '2') {\n      rx = 1;\n      ry = 1;\n    } else if (bit === '3') {\n      rx = 1;\n    }\n\n    const val = Math.pow(2, level - 1);\n    rotateAndFlipQuadrant(val, point, rx, ry);\n\n    point[0] += val * rx;\n    point[1] += val * ry;\n  }\n\n  if (face % 2 === 1) {\n    const t = point[0];\n    point[0] = point[1];\n    point[1] = t;\n  }\n\n  return {face, ij: point, level};\n}\n","// s2-geometry is a pure JavaScript port of Google/Niantic's S2 Geometry library\n// which is perfect since it works in the browser.\nimport {\n  toHilbertQuadkey,\n  FromHilbertQuadKey,\n  IJToST,\n  STToUV,\n  FaceUVToXYZ,\n  XYZToLngLat\n} from './s2-geometry';\nimport Long from 'long';\n\n/**\n * Given an S2 token this function convert the token to 64 bit id\n   https://github.com/google/s2-geometry-library-java/blob/c04b68bf3197a9c34082327eeb3aec7ab7c85da1/src/com/google/common/geometry/S2CellId.java#L439\n * */\nfunction getIdFromToken(token: string): number {\n  // pad token with zeros to make the length 16\n  const paddedToken = token.padEnd(16, '0');\n  return Long.fromString(paddedToken, 16);\n}\n\nconst MAX_RESOLUTION = 100;\n\n/* Adapted from s2-geometry's S2Cell.getCornerLatLngs */\n/* eslint-disable max-statements */\nfunction getGeoBounds({\n  face,\n  ij,\n  level\n}: {\n  face: number;\n  ij: [number, number];\n  level: number;\n}): Float64Array {\n  const offsets = [\n    [0, 0],\n    [0, 1],\n    [1, 1],\n    [1, 0],\n    [0, 0]\n  ];\n\n  // The S2 cell edge is curved: http://s2geometry.io/\n  // This is more prominent at lower levels\n  // resolution is the number of segments to generate per edge.\n  // We exponentially reduce resolution as level increases so it doesn't affect perf\n  // when there are a large number of cells\n  const resolution = Math.max(1, Math.ceil(MAX_RESOLUTION * Math.pow(2, -level)));\n  const result = new Float64Array(4 * resolution * 2 + 2);\n  let ptIndex = 0;\n  let prevLng = 0;\n\n  for (let i = 0; i < 4; i++) {\n    const offset = offsets[i].slice(0) as [number, number];\n    const nextOffset = offsets[i + 1];\n    const stepI = (nextOffset[0] - offset[0]) / resolution;\n    const stepJ = (nextOffset[1] - offset[1]) / resolution;\n\n    for (let j = 0; j < resolution; j++) {\n      offset[0] += stepI;\n      offset[1] += stepJ;\n      // Cell can be represented by coordinates IJ, ST, UV, XYZ\n      // http://s2geometry.io/devguide/s2cell_hierarchy#coordinate-systems\n      const st = IJToST(ij, level, offset);\n      const uv = STToUV(st);\n      const xyz = FaceUVToXYZ(face, uv);\n      const lngLat = XYZToLngLat(xyz);\n\n      // Adjust longitude for Web Mercator projection\n      if (Math.abs(lngLat[1]) > 89.999) {\n        lngLat[0] = prevLng;\n      }\n      const deltaLng = lngLat[0] - prevLng;\n      lngLat[0] += deltaLng > 180 ? -360 : deltaLng < -180 ? 360 : 0;\n\n      result[ptIndex++] = lngLat[0];\n      result[ptIndex++] = lngLat[1];\n      prevLng = lngLat[0];\n    }\n  }\n  // close the loop\n  result[ptIndex++] = result[0];\n  result[ptIndex++] = result[1];\n  return result;\n}\n/* eslint-enable max-statements */\n\nexport function getS2QuadKey(token: string | number): string {\n  if (typeof token === 'string') {\n    if (token.indexOf('/') > 0) {\n      // is Hilbert quad key\n      return token;\n    }\n    // is S2 token\n    token = getIdFromToken(token);\n  }\n  // is Long id\n  return toHilbertQuadkey(token.toString());\n}\n\n/**\n * Get a polygon with corner coordinates for an s2 cell\n * @param {*} cell - This can be an S2 key or token\n * @return {Float64Array} - a simple polygon in flat array format: [lng0, lat0, lng1, lat1, ...]\n *   - the polygon is closed, i.e. last coordinate is a copy of the first coordinate\n */\nexport function getS2Polygon(token: string | number): Float64Array {\n  const key = getS2QuadKey(token);\n  const s2cell = FromHilbertQuadKey(key);\n\n  return getGeoBounds(s2cell);\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {AccessorFunction, DefaultProps} from '@deck.gl/core';\nimport GeoCellLayer, {GeoCellLayerProps} from '../geo-cell-layer/GeoCellLayer';\nimport {getS2Polygon} from './s2-utils';\n\nconst defaultProps: DefaultProps<S2LayerProps> = {\n  getS2Token: {type: 'accessor', value: d => d.token}\n};\n\n/** All properties supported by S2Layer. */\nexport type S2LayerProps<DataT = any> = _S2LayerProps<DataT> & GeoCellLayerProps<DataT>;\n\n/** Properties added by S2Layer. */\ntype _S2LayerProps<DataT> = {\n  /**\n   * Called for each data object to retrieve the quadkey string identifier.\n   *\n   * By default, it reads `token` property of data object.\n   */\n  getS2Token?: AccessorFunction<DataT, string>;\n};\n\n/** Render filled and/or stroked polygons based on the [S2](http://s2geometry.io/) geospatial indexing system. */\nexport default class S2Layer<DataT = any, ExtraProps extends {} = {}> extends GeoCellLayer<\n  DataT,\n  Required<_S2LayerProps<DataT>> & ExtraProps\n> {\n  static layerName = 'S2Layer';\n  static defaultProps = defaultProps;\n\n  indexToBounds(): Partial<GeoCellLayer['props']> | null {\n    const {data, getS2Token} = this.props;\n\n    return {\n      data,\n      _normalize: false,\n      positionFormat: 'XY',\n      getPolygon: (x: DataT, objectInfo) => getS2Polygon(getS2Token(x, objectInfo))\n    };\n  }\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {\n  Layer,\n  project32,\n  gouraudLighting,\n  picking,\n  UNIT,\n  LayerProps,\n  LayerDataSource,\n  UpdateParameters,\n  Unit,\n  AccessorFunction,\n  Position,\n  Accessor,\n  Color,\n  Material,\n  DefaultProps\n} from '@deck.gl/core';\nimport GL from '@luma.gl/constants';\nimport {Model, Geometry} from '@luma.gl/core';\n\nimport vs from './point-cloud-layer-vertex.glsl';\nimport fs from './point-cloud-layer-fragment.glsl';\n\nconst DEFAULT_COLOR: [number, number, number, number] = [0, 0, 0, 255];\nconst DEFAULT_NORMAL: [number, number, number] = [0, 0, 1];\n\nconst defaultProps: DefaultProps<PointCloudLayerProps> = {\n  sizeUnits: 'pixels',\n  pointSize: {type: 'number', min: 0, value: 10}, //  point radius in pixels\n\n  getPosition: {type: 'accessor', value: x => x.position},\n  getNormal: {type: 'accessor', value: DEFAULT_NORMAL},\n  getColor: {type: 'accessor', value: DEFAULT_COLOR},\n\n  material: true,\n\n  // Depreated\n  radiusPixels: {deprecatedFor: 'pointSize'}\n};\n\n// support loaders.gl point cloud format\nfunction normalizeData(data) {\n  const {header, attributes} = data;\n  if (!header || !attributes) {\n    return;\n  }\n\n  data.length = header.vertexCount;\n\n  if (attributes.POSITION) {\n    attributes.instancePositions = attributes.POSITION;\n  }\n  if (attributes.NORMAL) {\n    attributes.instanceNormals = attributes.NORMAL;\n  }\n  if (attributes.COLOR_0) {\n    attributes.instanceColors = attributes.COLOR_0;\n  }\n}\n\n/** All properties supported by PointCloudLayer. */\nexport type PointCloudLayerProps<DataT = any> = _PointCloudLayerProps<DataT> & LayerProps;\n\n/** Properties added by PointCloudLayer. */\ntype _PointCloudLayerProps<DataT> = {\n  data: LayerDataSource<DataT>;\n  /**\n   * The units of the point size, one of `'meters'`, `'common'`, and `'pixels'`.\n   * @default 'pixels'\n   */\n  sizeUnits?: Unit;\n\n  /**\n   * Global radius of all points, in units specified by `sizeUnits`\n   * @default 10\n   */\n  pointSize?: number;\n\n  /**\n   * @deprecated Use `pointSize` instead\n   */\n  radiusPixels?: number;\n\n  /**\n   * Material settings for lighting effect.\n   *\n   * @default true\n   * @see https://deck.gl/docs/developer-guide/using-lighting\n   */\n  material?: Material;\n\n  /**\n   * Method called to retrieve the position of each object.\n   * @default object => object.position\n   */\n  getPosition?: AccessorFunction<DataT, Position>;\n\n  /**\n   * The normal of each object, in `[nx, ny, nz]`.\n   * @default [0, 0, 1]\n   */\n  getNormal?: Accessor<DataT, [number, number, number]>;\n\n  /**\n   * The rgba color is in the format of `[r, g, b, [a]]`\n   * @default [0, 0, 0, 255]\n   */\n  getColor?: Accessor<DataT, Color>;\n};\n\n/** Render a point cloud with 3D positions, normals and colors. */\nexport default class PointCloudLayer<DataT = any, ExtraPropsT extends {} = {}> extends Layer<\n  ExtraPropsT & Required<_PointCloudLayerProps<DataT>>\n> {\n  static layerName = 'PointCloudLayer';\n  static defaultProps = defaultProps;\n\n  getShaders() {\n    return super.getShaders({vs, fs, modules: [project32, gouraudLighting, picking]});\n  }\n\n  initializeState() {\n    this.getAttributeManager()!.addInstanced({\n      instancePositions: {\n        size: 3,\n        type: GL.DOUBLE,\n        fp64: this.use64bitPositions(),\n        transition: true,\n        accessor: 'getPosition'\n      },\n      instanceNormals: {\n        size: 3,\n        transition: true,\n        accessor: 'getNormal',\n        defaultValue: DEFAULT_NORMAL\n      },\n      instanceColors: {\n        size: this.props.colorFormat.length,\n        type: GL.UNSIGNED_BYTE,\n        normalized: true,\n        transition: true,\n        accessor: 'getColor',\n        defaultValue: DEFAULT_COLOR\n      }\n    });\n  }\n\n  updateState(params: UpdateParameters<this>): void {\n    const {changeFlags, props} = params;\n    super.updateState(params);\n    if (changeFlags.extensionsChanged) {\n      const {gl} = this.context;\n      this.state.model?.delete();\n      this.state.model = this._getModel(gl);\n      this.getAttributeManager()!.invalidateAll();\n    }\n    if (changeFlags.dataChanged) {\n      normalizeData(props.data);\n    }\n  }\n\n  draw({uniforms}) {\n    const {pointSize, sizeUnits} = this.props;\n\n    this.state.model\n      .setUniforms(uniforms)\n      .setUniforms({\n        sizeUnits: UNIT[sizeUnits],\n        radiusPixels: pointSize\n      })\n      .draw();\n  }\n\n  protected _getModel(gl: WebGLRenderingContext): Model {\n    // a triangle that minimally cover the unit circle\n    const positions: number[] = [];\n    for (let i = 0; i < 3; i++) {\n      const angle = (i / 3) * Math.PI * 2;\n      positions.push(Math.cos(angle) * 2, Math.sin(angle) * 2, 0);\n    }\n\n    return new Model(gl, {\n      ...this.getShaders(),\n      id: this.props.id,\n      geometry: new Geometry({\n        drawMode: GL.TRIANGLES,\n        attributes: {\n          positions: new Float32Array(positions)\n        }\n      }),\n      isInstanced: true\n    });\n  }\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nexport default `\\\n#define SHADER_NAME point-cloud-layer-vertex-shader\n\nattribute vec3 positions;\nattribute vec3 instanceNormals;\nattribute vec4 instanceColors;\nattribute vec3 instancePositions;\nattribute vec3 instancePositions64Low;\nattribute vec3 instancePickingColors;\n\nuniform float opacity;\nuniform float radiusPixels;\nuniform int sizeUnits;\n\nvarying vec4 vColor;\nvarying vec2 unitPosition;\n\nvoid main(void) {\n  geometry.worldPosition = instancePositions;\n  geometry.normal = project_normal(instanceNormals);\n\n  // position on the containing square in [-1, 1] space\n  unitPosition = positions.xy;\n  geometry.uv = unitPosition;\n  geometry.pickingColor = instancePickingColors;\n\n  // Find the center of the point and add the current vertex\n  vec3 offset = vec3(positions.xy * project_size_to_pixel(radiusPixels, sizeUnits), 0.0);\n  DECKGL_FILTER_SIZE(offset, geometry);\n\n  gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, vec3(0.), geometry.position);\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n  gl_Position.xy += project_pixel_size_to_clipspace(offset.xy);\n\n  // Apply lighting\n  vec3 lightColor = lighting_getLightColor(instanceColors.rgb, project_uCameraPosition, geometry.position.xyz, geometry.normal);\n\n  // Apply opacity to instance color, or return instance picking color\n  vColor = vec4(lightColor, instanceColors.a * opacity);\n  DECKGL_FILTER_COLOR(vColor, geometry);\n}\n`;\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nexport default `\\\n#define SHADER_NAME point-cloud-layer-fragment-shader\n\nprecision highp float;\n\nvarying vec4 vColor;\nvarying vec2 unitPosition;\n\nvoid main(void) {\n  geometry.uv = unitPosition;\n\n  float distToCenter = length(unitPosition);\n\n  if (distToCenter > 1.0) {\n    discard;\n  }\n\n  gl_FragColor = vColor;\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n`;\n","// Note: This file will either be moved back to deck.gl or reformatted to web-monorepo standards\n// Disabling lint temporarily to facilitate copying code in and out of this repo\n/* eslint-disable */\n\n// Copyright (c) 2015 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {\n  Layer,\n  project32,\n  phongLighting,\n  picking,\n  DefaultProps,\n  log,\n  LayerContext,\n  Material\n} from '@deck.gl/core';\nimport GL from '@luma.gl/constants';\nimport {Model, Geometry, Texture2D, isWebGL2} from '@luma.gl/core';\nimport {hasFeature, FEATURES} from '@luma.gl/webgl';\n\nimport {MATRIX_ATTRIBUTES, shouldComposeModelMatrix} from '../utils/matrix';\n\nimport vs from './simple-mesh-layer-vertex.glsl';\nimport fs from './simple-mesh-layer-fragment.glsl';\n\nimport type {\n  LayerProps,\n  LayerDataSource,\n  UpdateParameters,\n  Accessor,\n  Position,\n  Color,\n  Texture\n} from '@deck.gl/core';\nimport type {MeshAttribute, MeshAttributes} from '@loaders.gl/schema';\nimport type {Geometry as GeometryType} from '@luma.gl/engine';\nimport {GLTFMaterialParser} from '@luma.gl/experimental';\nimport {getMeshBoundingBox} from '@loaders.gl/schema';\n\nfunction validateGeometryAttributes(attributes: Record<string, any>, useMeshColors: boolean): void {\n  const hasColorAttribute = attributes.COLOR_0 || attributes.colors;\n  const useColorAttribute = hasColorAttribute && useMeshColors;\n  if (!useColorAttribute) {\n    attributes.colors = {constant: true, value: new Float32Array([1, 1, 1])};\n  }\n  log.assert(\n    attributes.positions || attributes.POSITION,\n    'no \"postions\" or \"POSITION\" attribute in mesh'\n  );\n}\n\n/*\n * Convert mesh data into geometry\n * @returns {Geometry} geometry\n */\nfunction getGeometry(data: Mesh, useMeshColors: boolean): Geometry {\n  if ((data as any).attributes) {\n    validateGeometryAttributes((data as any).attributes, useMeshColors);\n    if (data instanceof Geometry) {\n      return data;\n    } else {\n      return new Geometry(data);\n    }\n  } else if ((data as MeshAttributes).positions || (data as MeshAttributes).POSITION) {\n    validateGeometryAttributes(data, useMeshColors);\n    return new Geometry({\n      attributes: data\n    });\n  }\n  throw Error('Invalid mesh');\n}\n\nconst DEFAULT_COLOR: [number, number, number, number] = [0, 0, 0, 255];\n\ntype Mesh =\n  | GeometryType\n  | {\n      attributes: MeshAttributes;\n      indices?: MeshAttribute;\n    }\n  | MeshAttributes;\n\ntype _SimpleMeshLayerProps<DataT> = {\n  data: LayerDataSource<DataT>;\n  mesh: string | Mesh | Promise<Mesh> | null;\n  texture?: string | Texture | Promise<Texture>;\n  /** Customize the [texture parameters](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/texParameter). */\n  textureParameters?: Record<number, number> | null;\n\n  /** Anchor position accessor. */\n  getPosition?: Accessor<DataT, Position>;\n  /** Color value or accessor.\n   * If `mesh` does not contain vertex colors, use this color to render each object.\n   * If `mesh` contains vertex colors, then the two colors are mixed together.\n   * Use `[255, 255, 255]` to use the original mesh colors.\n   * If `texture` is assigned, then both colors will be ignored.\n   * @default [0, 0, 0, 255]\n   */\n  getColor?: Accessor<DataT, Color>;\n  /**\n   * Orientation in [pitch, yaw, roll] in degrees.\n   * @see https://en.wikipedia.org/wiki/Euler_angles\n   * @default [0, 0, 0]\n   */\n  getOrientation?: Accessor<DataT, [number, number, number]>;\n  /**\n   * Scaling factor of the model along each axis.\n   * @default [1, 1, 1]\n   */\n  getScale?: Accessor<DataT, [number, number, number]>;\n  /**\n   * Translation from the anchor point, [x, y, z] in meters.\n   * @default [0, 0, 0]\n   */\n  getTranslation?: Accessor<DataT, [number, number, number]>;\n  /**\n   * TransformMatrix. If specified, `getOrientation`, `getScale` and `getTranslation` are ignored.\n   */\n  getTransformMatrix?: Accessor<DataT, number[]>;\n  /**\n   * Multiplier to scale each geometry by.\n   * @default 1\n   */\n  sizeScale?: number;\n  /**\n   * @deprecated Whether to color pixels using vertex colors supplied in the mesh (the `COLOR_0` or `colors` attribute).\n   * If set to `false` vertex colors will be ignored.\n   * This prop will be removed and set to always true in the next major release.\n   * @default false\n   */\n  _useMeshColors?: boolean;\n\n  /**\n   * (Experimental) If rendering only one instance of the mesh, set this to false to treat mesh positions\n   * as deltas of the world coordinates of the anchor.\n   * E.g. in LNGLAT coordinates, mesh positions are interpreted as meter offsets by default.\n   * setting _instanced to false interpreted mesh positions as lnglat deltas.\n   * @default true\n   */\n  _instanced?: boolean; // TODO - formalize API\n  /**\n   * Whether to render the mesh in wireframe mode.\n   * @default false\n   */\n  wireframe?: boolean;\n  /**\n   * Material props for lighting effect.\n   *\n   * @default true\n   * @see https://deck.gl/docs/developer-guide/using-lighting#constructing-a-material-instance\n   */\n  material?: Material;\n};\n\nexport type SimpleMeshLayerProps<DataT = any> = _SimpleMeshLayerProps<DataT> & LayerProps;\n\nconst defaultProps: DefaultProps<SimpleMeshLayerProps> = {\n  mesh: {type: 'object', value: null, async: true},\n  texture: {type: 'image', value: null, async: true},\n  sizeScale: {type: 'number', value: 1, min: 0},\n  // Whether the color attribute in a mesh will be used\n  // This prop will be removed and set to true in next major release\n  _useMeshColors: {type: 'boolean', value: false},\n\n  // _instanced is a hack to use world position instead of meter offsets in mesh\n  // TODO - formalize API\n  _instanced: true,\n  // NOTE(Tarek): Quick and dirty wireframe. Just draws\n  // the same mesh with LINE_STRIPS. Won't follow edges\n  // of the original mesh.\n  wireframe: false,\n  // Optional material for 'lighting' shader module\n  material: true,\n  getPosition: {type: 'accessor', value: x => x.position},\n  getColor: {type: 'accessor', value: DEFAULT_COLOR},\n\n  // yaw, pitch and roll are in degrees\n  // https://en.wikipedia.org/wiki/Euler_angles\n  // [pitch, yaw, roll]\n  getOrientation: {type: 'accessor', value: [0, 0, 0]},\n  getScale: {type: 'accessor', value: [1, 1, 1]},\n  getTranslation: {type: 'accessor', value: [0, 0, 0]},\n  // 4x4 matrix\n  getTransformMatrix: {type: 'accessor', value: []},\n\n  textureParameters: {type: 'object', ignore: true}\n};\n\n/** Render a number of instances of an arbitrary 3D geometry. */\nexport default class SimpleMeshLayer<DataT = any, ExtraPropsT extends {} = {}> extends Layer<\n  ExtraPropsT & Required<_SimpleMeshLayerProps<DataT>>\n> {\n  static defaultProps = defaultProps;\n  static layerName = 'SimpleMeshLayer';\n\n  state!: {\n    materialParser?: GLTFMaterialParser;\n    model?: Model;\n    emptyTexture: Texture2D;\n    hasNormals?: boolean;\n    positionBounds?: [number[], number[]] | null;\n  };\n\n  getShaders() {\n    const transpileToGLSL100 = !isWebGL2(this.context.gl);\n\n    const defines: any = {};\n\n    if (hasFeature(this.context.gl, FEATURES.GLSL_DERIVATIVES)) {\n      defines.DERIVATIVES_AVAILABLE = 1;\n    }\n\n    return super.getShaders({\n      vs,\n      fs,\n      modules: [project32, phongLighting, picking],\n      transpileToGLSL100,\n      defines\n    });\n  }\n\n  getBounds(): [number[], number[]] | null {\n    if (this.props._instanced) {\n      return super.getBounds();\n    }\n    let result = this.state.positionBounds;\n    if (result) {\n      return result;\n    }\n    const {mesh} = this.props;\n    if (!mesh) {\n      return null;\n    }\n    // @ts-ignore Detect if mesh is generated by loaders.gl\n    result = mesh.header?.boundingBox;\n\n    if (!result) {\n      // Otherwise, calculate bounding box from positions\n      const {attributes} = getGeometry(mesh as Mesh, this.props._useMeshColors);\n      attributes.POSITION = attributes.POSITION || attributes.positions;\n      result = getMeshBoundingBox(attributes);\n    }\n\n    this.state.positionBounds = result;\n    return result;\n  }\n\n  initializeState() {\n    const attributeManager = this.getAttributeManager();\n    // attributeManager is always defined in a primitive layer\n    attributeManager!.addInstanced({\n      instancePositions: {\n        transition: true,\n        type: GL.DOUBLE,\n        fp64: this.use64bitPositions(),\n        size: 3,\n        accessor: 'getPosition'\n      },\n      instanceColors: {\n        type: GL.UNSIGNED_BYTE,\n        transition: true,\n        size: this.props.colorFormat.length,\n        normalized: true,\n        accessor: 'getColor',\n        defaultValue: [0, 0, 0, 255]\n      },\n      instanceModelMatrix: MATRIX_ATTRIBUTES\n    });\n\n    this.setState({\n      // Avoid luma.gl's missing uniform warning\n      // TODO - add feature to luma.gl to specify ignored uniforms?\n      emptyTexture: new Texture2D(this.context.gl, {\n        data: new Uint8Array(4),\n        width: 1,\n        height: 1\n      })\n    });\n  }\n\n  updateState(params: UpdateParameters<this>) {\n    super.updateState(params);\n\n    const {props, oldProps, changeFlags} = params;\n    if (props.mesh !== oldProps.mesh || changeFlags.extensionsChanged) {\n      this.state.positionBounds = null;\n      this.state.model?.delete();\n      if (props.mesh) {\n        this.state.model = this.getModel(props.mesh as Mesh);\n\n        const attributes = (props.mesh as any).attributes || props.mesh;\n        this.setState({\n          hasNormals: Boolean(attributes.NORMAL || attributes.normals)\n        });\n      }\n      // attributeManager is always defined in a primitive layer\n      this.getAttributeManager()!.invalidateAll();\n    }\n\n    if (props.texture !== oldProps.texture) {\n      this.setTexture(props.texture);\n    }\n\n    if (this.state.model) {\n      this.state.model.setDrawMode(this.props.wireframe ? GL.LINE_STRIP : GL.TRIANGLES);\n    }\n  }\n\n  finalizeState(context: LayerContext) {\n    super.finalizeState(context);\n\n    this.state.emptyTexture.delete();\n  }\n\n  draw({uniforms}) {\n    if (!this.state.model) {\n      return;\n    }\n\n    const {viewport} = this.context;\n    const {sizeScale, coordinateSystem, _instanced} = this.props;\n\n    this.state.model\n      .setUniforms(uniforms)\n      .setUniforms({\n        sizeScale,\n        composeModelMatrix: !_instanced || shouldComposeModelMatrix(viewport, coordinateSystem),\n        flatShading: !this.state.hasNormals\n      })\n      .draw();\n  }\n\n  protected getModel(mesh: Mesh): Model {\n    const model = new Model(this.context.gl, {\n      ...this.getShaders(),\n      id: this.props.id,\n      geometry: getGeometry(mesh, this.props._useMeshColors),\n      isInstanced: true\n    });\n\n    const {texture} = this.props;\n    const {emptyTexture} = this.state;\n    model.setUniforms({\n      sampler: texture || emptyTexture,\n      hasTexture: Boolean(texture)\n    });\n\n    return model;\n  }\n\n  private setTexture(texture: Texture2D): void {\n    const {emptyTexture, model} = this.state;\n\n    // props.mesh may not be ready at this time.\n    // The sampler will be set when `getModel` is called\n    if (model) {\n      model.setUniforms({\n        sampler: texture || emptyTexture,\n        hasTexture: Boolean(texture)\n      });\n    }\n  }\n}\n","export default `#version 300 es\n#define SHADER_NAME simple-mesh-layer-vs\n\n// Scale the model\nuniform float sizeScale;\nuniform bool composeModelMatrix;\n\n// Primitive attributes\nin vec3 positions;\nin vec3 normals;\nin vec3 colors;\nin vec2 texCoords;\n\n// Instance attributes\nin vec3 instancePositions;\nin vec3 instancePositions64Low;\nin vec4 instanceColors;\nin vec3 instancePickingColors;\nin mat3 instanceModelMatrix;\nin vec3 instanceTranslation;\n\n// Outputs to fragment shader\nout vec2 vTexCoord;\nout vec3 cameraPosition;\nout vec3 normals_commonspace;\nout vec4 position_commonspace;\nout vec4 vColor;\n\nvoid main(void) {\n  geometry.worldPosition = instancePositions;\n  geometry.uv = texCoords;\n  geometry.pickingColor = instancePickingColors;\n\n  vTexCoord = texCoords;\n  cameraPosition = project_uCameraPosition;\n  vColor = vec4(colors * instanceColors.rgb, instanceColors.a);\n\n  vec3 pos = (instanceModelMatrix * positions) * sizeScale + instanceTranslation;\n\n  if (composeModelMatrix) {\n    DECKGL_FILTER_SIZE(pos, geometry);\n    // using instancePositions as world coordinates\n    // when using globe mode, this branch does not re-orient the model to align with the surface of the earth\n    // call project_normal before setting position to avoid rotation\n    normals_commonspace = project_normal(instanceModelMatrix * normals);\n    geometry.worldPosition += pos;\n    gl_Position = project_position_to_clipspace(pos + instancePositions, instancePositions64Low, vec3(0.0), position_commonspace);\n    geometry.position = position_commonspace;\n  }\n  else {\n    pos = project_size(pos);\n    DECKGL_FILTER_SIZE(pos, geometry);\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, pos, position_commonspace);\n    geometry.position = position_commonspace;\n    normals_commonspace = project_normal(instanceModelMatrix * normals);\n  }\n\n  geometry.normal = normals_commonspace;\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n\n  DECKGL_FILTER_COLOR(vColor, geometry);\n}\n`;\n","export default `#version 300 es\n#define SHADER_NAME simple-mesh-layer-fs\n\nprecision highp float;\n\nuniform bool hasTexture;\nuniform sampler2D sampler;\nuniform bool flatShading;\nuniform float opacity;\n\nin vec2 vTexCoord;\nin vec3 cameraPosition;\nin vec3 normals_commonspace;\nin vec4 position_commonspace;\nin vec4 vColor;\n\nout vec4 fragColor;\n\nvoid main(void) {\n  geometry.uv = vTexCoord;\n\n  vec3 normal;\n  if (flatShading) {\n\n// NOTE(Tarek): This is necessary because\n// headless.gl reports the extension as\n// available but does not support it in\n// the shader.\n#ifdef DERIVATIVES_AVAILABLE\n    normal = normalize(cross(dFdx(position_commonspace.xyz), dFdy(position_commonspace.xyz)));\n#else\n    normal = vec3(0.0, 0.0, 1.0);\n#endif\n  } else {\n    normal = normals_commonspace;\n  }\n\n  vec4 color = hasTexture ? texture(sampler, vTexCoord) : vColor;\n  DECKGL_FILTER_COLOR(color, geometry);\n\n  vec3 lightColor = lighting_getLightColor(color.rgb, cameraPosition, position_commonspace.xyz, normal);\n  fragColor = vec4(lightColor, color.a * opacity);\n}\n`;\n","//\n// A base render pass.\n//\n// Attribution: This class and the multipass system were inspired by\n// the THREE.js EffectComposer and *Pass classes\n\nimport type {Framebuffer} from '@luma.gl/core';\nimport {ClipSpace, setParameters, withParameters, clear} from '@luma.gl/core';\nimport Pass from './pass';\n\nimport type {ShaderModule} from '../types/types';\n\ntype ScreenPassProps = {\n  module: ShaderModule;\n  fs: string | null;\n  id: string;\n};\n\ntype ScreenPassRenderOptions = {\n  inputBuffer: Framebuffer;\n  outputBuffer: Framebuffer;\n  moduleSettings: any;\n};\n\nexport default class ScreenPass extends Pass {\n  model: ClipSpace;\n\n  constructor(gl: WebGLRenderingContext, props: ScreenPassProps) {\n    super(gl, props);\n    const {module, fs, id} = props;\n    this.model = new ClipSpace(gl, {id, fs, modules: [module]});\n  }\n\n  render(params: ScreenPassRenderOptions): void {\n    const gl = this.gl;\n\n    setParameters(gl, {viewport: [0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight]});\n\n    withParameters(gl, {framebuffer: params.outputBuffer, clearColor: [0, 0, 0, 0]}, () =>\n      this._renderPass(gl, params)\n    );\n  }\n\n  delete() {\n    this.model.delete();\n    this.model = null;\n  }\n\n  // Private methods\n\n  /**\n   * Renders the pass.\n   * This is an abstract method that should be overridden.\n   * @param inputBuffer - Frame buffer that contains the result of the previous pass\n   * @param outputBuffer - Frame buffer that serves as the output render target\n   */\n  protected _renderPass(gl: WebGLRenderingContext, options: ScreenPassRenderOptions) {\n    const {inputBuffer} = options;\n    clear(gl, {color: true});\n    this.model.draw({\n      moduleSettings: options.moduleSettings,\n      uniforms: {\n        texture: inputBuffer,\n        texSize: [inputBuffer.width, inputBuffer.height]\n      },\n      parameters: {\n        depthWrite: false,\n        depthTest: false\n      }\n    });\n  }\n}\n","import ScreenPass from '../passes/screen-pass';\nimport {normalizeShaderModule} from '@luma.gl/core';\n\nimport type {Effect, PostRenderOptions} from '../lib/effect';\nimport type {Framebuffer} from '@luma.gl/webgl';\nimport type {ShaderModule} from '../types/types';\n\nexport default class PostProcessEffect implements Effect {\n  id: string;\n  props: any;\n  module: ShaderModule;\n  passes?: ScreenPass[];\n\n  constructor(module: ShaderModule, props: any = {}) {\n    this.id = `${module.name}-pass`;\n    this.props = props;\n    normalizeShaderModule(module);\n    this.module = module;\n  }\n\n  setProps(props: any) {\n    this.props = props;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  preRender(): void {}\n\n  postRender(gl: WebGLRenderingContext, params: PostRenderOptions): Framebuffer {\n    const passes = this.passes || createPasses(gl, this.module, this.id);\n    this.passes = passes;\n\n    const {target} = params;\n    let inputBuffer = params.inputBuffer;\n    let outputBuffer = params.swapBuffer;\n\n    for (let index = 0; index < this.passes.length; index++) {\n      if (target && index === this.passes.length - 1) {\n        outputBuffer = target;\n      }\n      this.passes[index].render({inputBuffer, outputBuffer, moduleSettings: this.props});\n      const switchBuffer = outputBuffer;\n      outputBuffer = inputBuffer;\n      inputBuffer = switchBuffer;\n    }\n    return inputBuffer;\n  }\n\n  cleanup(): void {\n    if (this.passes) {\n      for (const pass of this.passes) {\n        pass.delete();\n      }\n      this.passes = undefined;\n    }\n  }\n}\n\nfunction createPasses(gl: WebGLRenderingContext, module: ShaderModule, id: string): ScreenPass[] {\n  if (!module.passes) {\n    const fs = getFragmentShaderForRenderPass(module);\n    const pass = new ScreenPass(gl, {\n      id,\n      module,\n      fs\n    });\n    return [pass];\n  }\n\n  return module.passes.map((pass, index) => {\n    const fs = getFragmentShaderForRenderPass(module, pass);\n    const idn = `${id}-${index}`;\n\n    return new ScreenPass(gl, {\n      id: idn,\n      module,\n      fs\n    });\n  });\n}\n\nconst FILTER_FS_TEMPLATE = func => `\\\nuniform sampler2D texture;\nuniform vec2 texSize;\n\nvarying vec2 position;\nvarying vec2 coordinate;\nvarying vec2 uv;\n\nvoid main() {\n  vec2 texCoord = coordinate;\n\n  gl_FragColor = texture2D(texture, texCoord);\n  gl_FragColor = ${func}(gl_FragColor, texSize, texCoord);\n}\n`;\n\nconst SAMPLER_FS_TEMPLATE = func => `\\\nuniform sampler2D texture;\nuniform vec2 texSize;\n\nvarying vec2 position;\nvarying vec2 coordinate;\nvarying vec2 uv;\n\nvoid main() {\n  vec2 texCoord = coordinate;\n\n  gl_FragColor = ${func}(texture, texSize, texCoord);\n}\n`;\n\nfunction getFragmentShaderForRenderPass(module, pass = module) {\n  if (pass.filter) {\n    const func = typeof pass.filter === 'string' ? pass.filter : `${module.name}_filterColor`;\n    return FILTER_FS_TEMPLATE(func);\n  }\n\n  if (pass.sampler) {\n    const func = typeof pass.sampler === 'string' ? pass.sampler : `${module.name}_sampleColor`;\n    return SAMPLER_FS_TEMPLATE(func);\n  }\n\n  // console.error(`${module.name} no fragment shader generated`);\n  return null;\n}\n","function _extends() {\n  module.exports = _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  return _extends.apply(this, arguments);\n}\n\nmodule.exports = _extends;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","'use strict';\n\nmodule.exports = earcut;\nmodule.exports.default = earcut;\n\nfunction earcut(data, holeIndices, dim) {\n\n    dim = dim || 2;\n\n    var hasHoles = holeIndices && holeIndices.length,\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n        outerNode = linkedList(data, 0, outerLen, dim, true),\n        triangles = [];\n\n    if (!outerNode || outerNode.next === outerNode.prev) return triangles;\n\n    var minX, minY, maxX, maxY, x, y, invSize;\n\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (data.length > 80 * dim) {\n        minX = maxX = data[0];\n        minY = maxY = data[1];\n\n        for (var i = dim; i < outerLen; i += dim) {\n            x = data[i];\n            y = data[i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n        }\n\n        // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n        invSize = Math.max(maxX - minX, maxY - minY);\n        invSize = invSize !== 0 ? 32767 / invSize : 0;\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize, 0);\n\n    return triangles;\n}\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n    var i, last;\n\n    if (clockwise === (signedArea(data, start, end, dim) > 0)) {\n        for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n    } else {\n        for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n    }\n\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n\n    return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n\n    var p = start,\n        again;\n    do {\n        again = false;\n\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next) break;\n            again = true;\n\n        } else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n\n    return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n    if (!ear) return;\n\n    // interlink polygon nodes in z-order\n    if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n\n    var stop = ear,\n        prev, next;\n\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        prev = ear.prev;\n        next = ear.next;\n\n        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n            // cut off the triangle\n            triangles.push(prev.i / dim | 0);\n            triangles.push(ear.i / dim | 0);\n            triangles.push(next.i / dim | 0);\n\n            removeNode(ear);\n\n            // skipping the next vertex leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n\n            continue;\n        }\n\n        ear = next;\n\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n\n            // if this didn't work, try curing all small self-intersections locally\n            } else if (pass === 1) {\n                ear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n\n            // as a last resort, try splitting the remaining polygon into two\n            } else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, invSize);\n            }\n\n            break;\n        }\n    }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // now make sure we don't have other points inside the potential ear\n    var ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n    // triangle bbox; min & max are calculated like this for speed\n    var x0 = ax < bx ? (ax < cx ? ax : cx) : (bx < cx ? bx : cx),\n        y0 = ay < by ? (ay < cy ? ay : cy) : (by < cy ? by : cy),\n        x1 = ax > bx ? (ax > cx ? ax : cx) : (bx > cx ? bx : cx),\n        y1 = ay > by ? (ay > cy ? ay : cy) : (by > cy ? by : cy);\n\n    var p = c.next;\n    while (p !== a) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.next;\n    }\n\n    return true;\n}\n\nfunction isEarHashed(ear, minX, minY, invSize) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    var ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n    // triangle bbox; min & max are calculated like this for speed\n    var x0 = ax < bx ? (ax < cx ? ax : cx) : (bx < cx ? bx : cx),\n        y0 = ay < by ? (ay < cy ? ay : cy) : (by < cy ? by : cy),\n        x1 = ax > bx ? (ax > cx ? ax : cx) : (bx > cx ? bx : cx),\n        y1 = ay > by ? (ay > cy ? ay : cy) : (by > cy ? by : cy);\n\n    // z-order range for the current triangle bbox;\n    var minZ = zOrder(x0, y0, minX, minY, invSize),\n        maxZ = zOrder(x1, y1, minX, minY, invSize);\n\n    var p = ear.prevZ,\n        n = ear.nextZ;\n\n    // look for points inside the triangle in both directions\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n\n        if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    // look for remaining points in decreasing z-order\n    while (p && p.z >= minZ) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n    }\n\n    // look for remaining points in increasing z-order\n    while (n && n.z <= maxZ) {\n        if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n    var p = start;\n    do {\n        var a = p.prev,\n            b = p.next.next;\n\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\n            triangles.push(a.i / dim | 0);\n            triangles.push(p.i / dim | 0);\n            triangles.push(b.i / dim | 0);\n\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n\n    return filterPoints(p);\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n    // look for a valid diagonal that divides the polygon into two\n    var a = start;\n    do {\n        var b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                var c = splitPolygon(a, b);\n\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, invSize, 0);\n                earcutLinked(c, triangles, dim, minX, minY, invSize, 0);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n    var queue = [],\n        i, len, start, end, list;\n\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n        start = holeIndices[i] * dim;\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        list = linkedList(data, start, end, dim, false);\n        if (list === list.next) list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareX);\n\n    // process holes from left to right\n    for (i = 0; i < queue.length; i++) {\n        outerNode = eliminateHole(queue[i], outerNode);\n    }\n\n    return outerNode;\n}\n\nfunction compareX(a, b) {\n    return a.x - b.x;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    var bridge = findHoleBridge(hole, outerNode);\n    if (!bridge) {\n        return outerNode;\n    }\n\n    var bridgeReverse = splitPolygon(bridge, hole);\n\n    // filter collinear points around the cuts\n    filterPoints(bridgeReverse, bridgeReverse.next);\n    return filterPoints(bridge, bridge.next);\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    var p = outerNode,\n        hx = hole.x,\n        hy = hole.y,\n        qx = -Infinity,\n        m;\n\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    do {\n        if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                m = p.x < p.next.x ? p : p.next;\n                if (x === hx) return m; // hole touches outer segment; pick leftmost endpoint\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    var stop = m,\n        mx = m.x,\n        my = m.y,\n        tanMin = Infinity,\n        tan;\n\n    p = m;\n\n    do {\n        if (hx >= p.x && p.x >= mx && hx !== p.x &&\n                pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n            if (locallyInside(p, hole) &&\n                (tan < tanMin || (tan === tanMin && (p.x > m.x || (p.x === m.x && sectorContainsSector(m, p)))))) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n\n        p = p.next;\n    } while (p !== stop);\n\n    return m;\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector(m, p) {\n    return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, invSize) {\n    var p = start;\n    do {\n        if (p.z === 0) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n\n    sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    var i, p, q, e, tail, numMerges, pSize, qSize,\n        inSize = 1;\n\n    do {\n        p = list;\n        list = null;\n        tail = null;\n        numMerges = 0;\n\n        while (p) {\n            numMerges++;\n            q = p;\n            pSize = 0;\n            for (i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q) break;\n            }\n            qSize = inSize;\n\n            while (pSize > 0 || (qSize > 0 && q)) {\n\n                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n\n                if (tail) tail.nextZ = e;\n                else list = e;\n\n                e.prevZ = tail;\n                tail = e;\n            }\n\n            p = q;\n        }\n\n        tail.nextZ = null;\n        inSize *= 2;\n\n    } while (numMerges > 1);\n\n    return list;\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x, y, minX, minY, invSize) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = (x - minX) * invSize | 0;\n    y = (y - minY) * invSize | 0;\n\n    x = (x | (x << 8)) & 0x00FF00FF;\n    x = (x | (x << 4)) & 0x0F0F0F0F;\n    x = (x | (x << 2)) & 0x33333333;\n    x = (x | (x << 1)) & 0x55555555;\n\n    y = (y | (y << 8)) & 0x00FF00FF;\n    y = (y | (y << 4)) & 0x0F0F0F0F;\n    y = (y | (y << 2)) & 0x33333333;\n    y = (y | (y << 1)) & 0x55555555;\n\n    return x | (y << 1);\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    var p = start,\n        leftmost = start;\n    do {\n        if (p.x < leftmost.x || (p.x === leftmost.x && p.y < leftmost.y)) leftmost = p;\n        p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) >= (ax - px) * (cy - py) &&\n           (ax - px) * (by - py) >= (bx - px) * (ay - py) &&\n           (bx - px) * (cy - py) >= (cx - px) * (by - py);\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && // dones't intersect other edges\n           (locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && // locally visible\n            (area(a.prev, a, b.prev) || area(a, b.prev, b)) || // does not create opposite-facing sectors\n            equals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0); // special zero-length case\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    var o1 = sign(area(p1, q1, p2));\n    var o2 = sign(area(p1, q1, q2));\n    var o3 = sign(area(p2, q2, p1));\n    var o4 = sign(area(p2, q2, q1));\n\n    if (o1 !== o2 && o3 !== o4) return true; // general case\n\n    if (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n    if (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n    if (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n    if (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n    return false;\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment(p, q, r) {\n    return q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\n}\n\nfunction sign(num) {\n    return num > 0 ? 1 : num < 0 ? -1 : 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    var p = a;\n    do {\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n                intersects(p, p.next, a, b)) return true;\n        p = p.next;\n    } while (p !== a);\n\n    return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ?\n        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :\n        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    var p = a,\n        inside = false,\n        px = (a.x + b.x) / 2,\n        py = (a.y + b.y) / 2;\n    do {\n        if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\n                (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\n            inside = !inside;\n        p = p.next;\n    } while (p !== a);\n\n    return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    var a2 = new Node(a.i, a.x, a.y),\n        b2 = new Node(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n\n    a.next = b;\n    b.prev = a;\n\n    a2.next = an;\n    an.prev = a2;\n\n    b2.next = a2;\n    a2.prev = b2;\n\n    bp.next = b2;\n    b2.prev = bp;\n\n    return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    var p = new Node(i, x, y);\n\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n\n    } else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\n\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n    // vertex index in coordinates array\n    this.i = i;\n\n    // vertex coordinates\n    this.x = x;\n    this.y = y;\n\n    // previous and next vertex nodes in a polygon ring\n    this.prev = null;\n    this.next = null;\n\n    // z-order curve value\n    this.z = 0;\n\n    // previous and next nodes in z-order\n    this.prevZ = null;\n    this.nextZ = null;\n\n    // indicates whether this is a steiner point\n    this.steiner = false;\n}\n\n// return a percentage difference between the polygon area and its triangulation area;\n// used to verify correctness of triangulation\nearcut.deviation = function (data, holeIndices, dim, triangles) {\n    var hasHoles = holeIndices && holeIndices.length;\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\n    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n    if (hasHoles) {\n        for (var i = 0, len = holeIndices.length; i < len; i++) {\n            var start = holeIndices[i] * dim;\n            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\n        }\n    }\n\n    var trianglesArea = 0;\n    for (i = 0; i < triangles.length; i += 3) {\n        var a = triangles[i] * dim;\n        var b = triangles[i + 1] * dim;\n        var c = triangles[i + 2] * dim;\n        trianglesArea += Math.abs(\n            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\n            (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n    }\n\n    return polygonArea === 0 && trianglesArea === 0 ? 0 :\n        Math.abs((trianglesArea - polygonArea) / polygonArea);\n};\n\nfunction signedArea(data, start, end, dim) {\n    var sum = 0;\n    for (var i = start, j = end - dim; i < end; i += dim) {\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n        j = i;\n    }\n    return sum;\n}\n\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\nearcut.flatten = function (data) {\n    var dim = data[0][0].length,\n        result = {vertices: [], holes: [], dimensions: dim},\n        holeIndex = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].length; j++) {\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n        }\n        if (i > 0) {\n            holeIndex += data[i - 1].length;\n            result.holes.push(holeIndex);\n        }\n    }\n    return result;\n};\n","/* eslint-env browser */\nimport {RequestScheduler} from '@loaders.gl/loader-utils';\nimport {TileBoundingBox, TileIndex, TileLoadProps} from './types';\n\nexport type TileLoadDataProps<DataT = any> = {\n  requestScheduler: RequestScheduler;\n  getData: (props: TileLoadProps) => Promise<DataT>;\n  onLoad: (tile: Tile2DHeader<DataT>) => void;\n  onError: (error: any, tile: Tile2DHeader<DataT>) => void;\n};\n\nexport class Tile2DHeader<DataT = any> {\n  index: TileIndex;\n  isVisible: boolean;\n  isSelected: boolean;\n  parent: Tile2DHeader | null;\n  children: Tile2DHeader[] | null;\n  content: DataT | null;\n  state?: number;\n  layers?: any[] | null; // Layer[] | null\n\n  id!: string; // assigned _always_ with result of `getTileId`\n  zoom!: number; // assigned _always_ with result of `getTileZoom`\n  userData?: Record<string, any>; // _may be_ assigned with result of `getTileMetadata`\n  boundingBox!: [min: number[], max: number[]]; // assigned _always_ with bbox from `getTileMetadata`\n\n  private _abortController: AbortController | null;\n  private _loader: Promise<void> | undefined;\n  private _loaderId: number;\n  private _isLoaded: boolean;\n  private _isCancelled: boolean;\n  private _needsReload: boolean;\n  private _bbox!: TileBoundingBox;\n\n  constructor(index: TileIndex) {\n    this.index = index;\n    this.isVisible = false;\n    this.isSelected = false;\n    this.parent = null;\n    this.children = [];\n\n    this.content = null;\n\n    this._loader = undefined;\n    this._abortController = null;\n    this._loaderId = 0;\n    this._isLoaded = false;\n    this._isCancelled = false;\n    this._needsReload = false;\n  }\n\n  /** @deprecated use `boundingBox` instead */\n  get bbox(): TileBoundingBox {\n    return this._bbox;\n  }\n\n  // TODO - remove in v9\n  set bbox(value: TileBoundingBox) {\n    // Only set once from `Tileset2D.getTileMetadata`\n    if (this._bbox) return;\n\n    this._bbox = value;\n    if ('west' in value) {\n      this.boundingBox = [\n        [value.west, value.south],\n        [value.east, value.north]\n      ];\n    } else {\n      this.boundingBox = [\n        [value.left, value.top],\n        [value.right, value.bottom]\n      ];\n    }\n  }\n\n  get data(): Promise<DataT | null> | DataT | null {\n    return this.isLoading && this._loader ? this._loader.then(() => this.data) : this.content;\n  }\n\n  get isLoaded(): boolean {\n    return this._isLoaded && !this._needsReload;\n  }\n\n  get isLoading(): boolean {\n    return Boolean(this._loader) && !this._isCancelled;\n  }\n\n  get needsReload(): boolean {\n    return this._needsReload || this._isCancelled;\n  }\n\n  get byteLength(): number {\n    const result = this.content ? (this.content as any).byteLength : 0;\n    if (!Number.isFinite(result)) {\n      // eslint-disable-next-line no-console\n      console.error('byteLength not defined in tile data');\n    }\n    return result;\n  }\n\n  /* eslint-disable max-statements */\n  private async _loadData({\n    getData,\n    requestScheduler,\n    onLoad,\n    onError\n  }: TileLoadDataProps<DataT>): Promise<void> {\n    const {index, id, bbox, userData, zoom} = this;\n    const loaderId = this._loaderId;\n\n    this._abortController = new AbortController();\n    const {signal} = this._abortController;\n\n    // @ts-expect-error (2345) Argument of type '(tile: any) => 1 | -1' is not assignable ...\n    const requestToken = await requestScheduler.scheduleRequest(this, tile => {\n      return tile.isSelected ? 1 : -1;\n    });\n\n    if (!requestToken) {\n      this._isCancelled = true;\n      return;\n    }\n    // A tile can be cancelled while being scheduled\n    if (this._isCancelled) {\n      requestToken.done();\n      return;\n    }\n\n    let tileData: DataT | null = null;\n    let error;\n    try {\n      tileData = await getData({index, id, bbox, userData, zoom, signal});\n    } catch (err) {\n      error = err || true;\n    } finally {\n      requestToken.done();\n    }\n\n    // If loadData has been called with a newer version, discard the result from this operation\n    if (loaderId !== this._loaderId) {\n      return;\n    }\n    // Clear the `isLoading` flag\n    this._loader = undefined;\n    // Rewrite tile content with the result of getTileData if successful, or `null` in case of\n    // error or cancellation\n    this.content = tileData;\n    // If cancelled, do not invoke the callbacks\n    // Consider it loaded if we tried to cancel but `getTileData` still returned data\n    if (this._isCancelled && !tileData) {\n      this._isLoaded = false;\n      return;\n    }\n    this._isLoaded = true;\n    this._isCancelled = false;\n\n    if (error) {\n      onError(error, this);\n    } else {\n      onLoad(this);\n    }\n  }\n\n  loadData(opts: TileLoadDataProps): Promise<void> {\n    this._isLoaded = false;\n    this._isCancelled = false;\n    this._needsReload = false;\n    this._loaderId++;\n    this._loader = this._loadData(opts);\n    return this._loader;\n  }\n\n  setNeedsReload(): void {\n    if (this.isLoading) {\n      this.abort();\n      this._loader = undefined;\n    }\n    this._needsReload = true;\n  }\n\n  abort(): void {\n    if (this.isLoaded) {\n      return;\n    }\n\n    this._isCancelled = true;\n    this._abortController?.abort();\n  }\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n// getValue takes an array of points returns a value to sort the bins on.\n// by default it returns the number of points\n// this is where to pass in a function to color the bins by\n// avg/mean/max of specific value of the point\nconst defaultGetValue = points => points.length;\n\nimport {clamp, getQuantileDomain, getOrdinalDomain} from './scale-utils';\n\nconst MAX_32_BIT_FLOAT = 3.402823466e38;\n\n// access array of points in each bin\nconst defaultGetPoints = bin => bin.points;\n// access index of each bin\nconst defaultGetIndex = bin => bin.index;\n\n// d3-scending\nconst ascending = (a, b) => (a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN);\n\nconst defaultProps = {\n  getValue: defaultGetValue,\n  getPoints: defaultGetPoints,\n  getIndex: defaultGetIndex,\n  filterData: null\n};\n\nexport type AggregatedBin = {\n  i: number;\n  value: any;\n  counts: number;\n};\n\nexport default class BinSorter {\n  maxCount!: number;\n  maxValue!: number;\n  minValue!: number;\n  totalCount!: number;\n\n  aggregatedBins: AggregatedBin[];\n  sortedBins!: AggregatedBin[];\n  binMap: Record<number, AggregatedBin>;\n\n  constructor(bins = [], props: Partial<typeof defaultProps> = defaultProps) {\n    this.aggregatedBins = this.getAggregatedBins(bins, props);\n    this._updateMinMaxValues();\n    this.binMap = this.getBinMap();\n  }\n\n  /**\n   * Get an array of object with aggregated values and index of bins\n   * Array object will be sorted by value optionally.\n   * @param {Array} bins\n   * @param {Function} getValue\n   * @return {Array} array of values and index lookup\n   */\n  getAggregatedBins(bins, props): AggregatedBin[] {\n    const {\n      getValue = defaultGetValue,\n      getPoints = defaultGetPoints,\n      getIndex = defaultGetIndex,\n      filterData\n    } = props;\n\n    const hasFilter = typeof filterData === 'function';\n    const binCount = bins.length;\n    const aggregatedBins: AggregatedBin[] = [];\n    let index = 0;\n\n    for (let binIndex = 0; binIndex < binCount; binIndex++) {\n      const bin = bins[binIndex];\n      const points = getPoints(bin);\n      const i = getIndex(bin);\n\n      const filteredPoints = hasFilter ? points.filter(filterData) : points;\n\n      bin.filteredPoints = hasFilter ? filteredPoints : null;\n\n      const value = filteredPoints.length ? getValue(filteredPoints) : null;\n\n      if (value !== null && value !== undefined) {\n        // filter bins if value is null or undefined\n        aggregatedBins[index] = {\n          i: Number.isFinite(i) ? i : binIndex,\n          value,\n          counts: filteredPoints.length\n        };\n        index++;\n      }\n    }\n    return aggregatedBins;\n  }\n\n  _percentileToIndex(percentileRange): [number, number] {\n    const len = this.sortedBins.length;\n    if (len < 2) {\n      return [0, 0];\n    }\n\n    const [lower, upper] = percentileRange.map(n => clamp(n, 0, 100));\n\n    const lowerIdx = Math.ceil((lower / 100) * (len - 1));\n    const upperIdx = Math.floor((upper / 100) * (len - 1));\n\n    return [lowerIdx, upperIdx];\n  }\n\n  /**\n   * Get a mapping from cell/hexagon index to sorted bin\n   * This is used to retrieve bin value for color calculation\n   * @return {Object} bin index to aggregatedBins\n   */\n  getBinMap(): Record<number, AggregatedBin> {\n    const binMap = {};\n    for (const bin of this.aggregatedBins) {\n      binMap[bin.i] = bin;\n    }\n    return binMap;\n  }\n\n  // Private\n\n  /**\n   * Get ths max count of all bins\n   */\n  _updateMinMaxValues(): void {\n    let maxCount = 0;\n    let maxValue = 0;\n    let minValue = MAX_32_BIT_FLOAT;\n    let totalCount = 0;\n    for (const x of this.aggregatedBins) {\n      maxCount = maxCount > x.counts ? maxCount : x.counts;\n      maxValue = maxValue > x.value ? maxValue : x.value;\n      minValue = minValue < x.value ? minValue : x.value;\n      totalCount += x.counts;\n    }\n    this.maxCount = maxCount;\n    this.maxValue = maxValue;\n    this.minValue = minValue;\n    this.totalCount = totalCount;\n  }\n\n  /**\n   * Get range of values of all bins\n   * @param {Number[]} range\n   * @param {Number} range[0] - lower bound\n   * @param {Number} range[1] - upper bound\n   * @return {Array} array of new value range\n   */\n  getValueRange(percentileRange: [number, number]): [number, number] {\n    if (!this.sortedBins) {\n      this.sortedBins = this.aggregatedBins.sort((a, b) => ascending(a.value, b.value));\n    }\n    if (!this.sortedBins.length) {\n      // @ts-expect-error\n      return [];\n    }\n    let lowerIdx = 0;\n    let upperIdx = this.sortedBins.length - 1;\n\n    if (Array.isArray(percentileRange)) {\n      const idxRange = this._percentileToIndex(percentileRange);\n      lowerIdx = idxRange[0];\n      upperIdx = idxRange[1];\n    }\n\n    return [this.sortedBins[lowerIdx].value, this.sortedBins[upperIdx].value];\n  }\n\n  getValueDomainByScale(scale: string, [lower = 0, upper = 100] = []) {\n    if (!this.sortedBins) {\n      this.sortedBins = this.aggregatedBins.sort((a, b) => ascending(a.value, b.value));\n    }\n    if (!this.sortedBins.length) {\n      return [];\n    }\n    const indexEdge = this._percentileToIndex([lower, upper]);\n\n    return this._getScaleDomain(scale, indexEdge);\n  }\n\n  _getScaleDomain(scaleType: string, [lowerIdx, upperIdx]: [number, number]): [number, number] {\n    const bins = this.sortedBins;\n\n    switch (scaleType) {\n      case 'quantize':\n      case 'linear':\n        return [bins[lowerIdx].value, bins[upperIdx].value];\n\n      case 'quantile':\n        return getQuantileDomain(bins.slice(lowerIdx, upperIdx + 1), d => d.value);\n\n      case 'ordinal':\n        return getOrdinalDomain(bins, d => d.value) as [number, number];\n\n      default:\n        return [bins[lowerIdx].value, bins[upperIdx].value];\n    }\n  }\n}\n","var unitlessKeys = {\n  animationIterationCount: 1,\n  borderImageOutset: 1,\n  borderImageSlice: 1,\n  borderImageWidth: 1,\n  boxFlex: 1,\n  boxFlexGroup: 1,\n  boxOrdinalGroup: 1,\n  columnCount: 1,\n  columns: 1,\n  flex: 1,\n  flexGrow: 1,\n  flexPositive: 1,\n  flexShrink: 1,\n  flexNegative: 1,\n  flexOrder: 1,\n  gridRow: 1,\n  gridRowEnd: 1,\n  gridRowSpan: 1,\n  gridRowStart: 1,\n  gridColumn: 1,\n  gridColumnEnd: 1,\n  gridColumnSpan: 1,\n  gridColumnStart: 1,\n  msGridRow: 1,\n  msGridRowSpan: 1,\n  msGridColumn: 1,\n  msGridColumnSpan: 1,\n  fontWeight: 1,\n  lineHeight: 1,\n  opacity: 1,\n  order: 1,\n  orphans: 1,\n  tabSize: 1,\n  widows: 1,\n  zIndex: 1,\n  zoom: 1,\n  WebkitLineClamp: 1,\n  // SVG-related properties\n  fillOpacity: 1,\n  floodOpacity: 1,\n  stopOpacity: 1,\n  strokeDasharray: 1,\n  strokeDashoffset: 1,\n  strokeMiterlimit: 1,\n  strokeOpacity: 1,\n  strokeWidth: 1\n};\n\nexport default unitlessKeys;\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","function memoize(fn) {\n  var cache = {};\n  return function (arg) {\n    if (cache[arg] === undefined) cache[arg] = fn(arg);\n    return cache[arg];\n  };\n}\n\nexport default memoize;\n","import memoize from '@emotion/memoize';\n\nvar reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|inert|itemProp|itemScope|itemType|itemID|itemRef|on|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/; // https://esbench.com/bench/5bfee68a4cd7e6009ef61d23\n\nvar index = memoize(function (prop) {\n  return reactPropsRegex.test(prop) || prop.charCodeAt(0) === 111\n  /* o */\n  && prop.charCodeAt(1) === 110\n  /* n */\n  && prop.charCodeAt(2) < 91;\n}\n/* Z+1 */\n);\n\nexport default index;\n","// deck.gl, MIT license\n// @note - this is a duplicate of the deck.gl core export (because Tileset2D should be deck.gl independent)\n\n/**\n * Speed up consecutive function calls by caching the result of calls with identical input\n * https://en.wikipedia.org/wiki/Memoization\n * @param compute - the function to be memoized\n */\nexport function memoize<In, Out>(compute: (args: In) => Out): (args: In) => Out {\n  let cachedArgs: any = {};\n  let cachedResult: Out;\n\n  return (args: In) => {\n    for (const key in args) {\n      if (!isEqual(args[key], cachedArgs[key])) {\n        cachedResult = compute(args);\n        cachedArgs = args;\n        break;\n      }\n    }\n    return cachedResult;\n  };\n}\n\nfunction isEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (Array.isArray(a)) {\n    // Special treatment for arrays: compare 1-level deep\n    // This is to support equality of matrix/coordinate props\n    const len = a.length;\n    if (!b || b.length !== len) {\n      return false;\n    }\n\n    for (let i = 0; i < len; i++) {\n      if (a[i] !== b[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return false;\n}\n","import {Viewport} from '@deck.gl/core';\n\nimport {RequestScheduler} from '@loaders.gl/loader-utils';\nimport {Matrix4, equals} from '@math.gl/core';\n\nimport {Tile2DHeader} from './tile-2d-header';\n\nimport {getTileIndices, tileToBoundingBox, getCullBounds} from './utils';\nimport {Bounds, TileIndex, ZRange} from './types';\nimport {TileLoadProps} from './types';\nimport {memoize} from './memoize';\n\n// bit masks\nconst TILE_STATE_VISITED = 1;\nconst TILE_STATE_VISIBLE = 2;\n/*\n   show cached parent tile if children are loading\n   +-----------+       +-----+            +-----+-----+\n   |           |       |     |            |     |     |\n   |           |       |     |            |     |     |\n   |           |  -->  +-----+-----+  ->  +-----+-----+\n   |           |             |     |      |     |     |\n   |           |             |     |      |     |     |\n   +-----------+             +-----+      +-----+-----+\n\n   show cached children tiles when parent is loading\n   +-------+----       +------------\n   |       |           |\n   |       |           |\n   |       |           |\n   +-------+----  -->  |\n   |       |           |\n */\n\nexport const STRATEGY_NEVER = 'never';\nexport const STRATEGY_REPLACE = 'no-overlap';\nexport const STRATEGY_DEFAULT = 'best-available';\n\nexport type RefinementStrategyFunction = (tiles: Tile2DHeader[]) => void;\nexport type RefinementStrategy =\n  | 'never'\n  | 'no-overlap'\n  | 'best-available'\n  | RefinementStrategyFunction;\n\nconst DEFAULT_CACHE_SCALE = 5;\n\nconst STRATEGIES = {\n  [STRATEGY_DEFAULT]: updateTileStateDefault,\n  [STRATEGY_REPLACE]: updateTileStateReplace,\n  [STRATEGY_NEVER]: () => {}\n};\n\nexport type Tileset2DProps<DataT = any> = {\n  /** `getTileData` is called to retrieve the data of each tile. */\n  getTileData: (props: TileLoadProps) => Promise<DataT> | DataT;\n\n  /** The bounding box of the layer's data. */\n  extent?: number[] | null;\n  /** The pixel dimension of the tiles, usually a power of 2. */\n  tileSize?: number;\n  /** The max zoom level of the layer's data. @default null */\n  maxZoom?: number | null;\n  /** The min zoom level of the layer's data. @default 0 */\n  minZoom?: number | null;\n  /** The maximum number of tiles that can be cached. */\n  maxCacheSize?: number | null;\n  /** The maximum memory used for caching tiles. @default null */\n  maxCacheByteSize?: number | null;\n  /** How the tile layer refines the visibility of tiles. @default 'best-available' */\n  refinementStrategy?: RefinementStrategy;\n  /** Range of minimum and maximum heights in the tile. */\n  zRange?: ZRange | null;\n  /** The maximum number of concurrent getTileData calls. @default 6 */\n  maxRequests?: number;\n  /** Changes the zoom level at which the tiles are fetched. Needs to be an integer. @default 0 */\n  zoomOffset?: number;\n\n  /** Called when a tile successfully loads. */\n  onTileLoad?: (tile: Tile2DHeader<DataT>) => void;\n  /** Called when a tile is cleared from cache. */\n  onTileUnload?: (tile: Tile2DHeader<DataT>) => void;\n  /** Called when a tile failed to load. */\n  onTileError?: (err: any, tile: Tile2DHeader<DataT>) => void;\n\n  // onTileLoad: (tile: Tile2DHeader) => void;\n  // onTileUnload: (tile: Tile2DHeader) => void;\n  // onTileError: (error: any, tile: Tile2DHeader) => void;\n  /** Called when all tiles in the current viewport are loaded. */\n  // sonViewportLoad?: ((tiles: Tile2DHeader<DataT>[]) => void) | null;\n};\n\nexport const DEFAULT_TILESET2D_PROPS: Omit<Required<Tileset2DProps>, 'getTileData'> = {\n  extent: null,\n  tileSize: 512,\n\n  maxZoom: null,\n  minZoom: null,\n  maxCacheSize: null,\n  maxCacheByteSize: null,\n  refinementStrategy: 'best-available',\n  zRange: null,\n  maxRequests: 6,\n  zoomOffset: 0,\n\n  // onTileLoad: (tile: Tile2DHeader) => void,  // onTileUnload: (tile: Tile2DHeader) => void,  // onTileError: (error: any, tile: Tile2DHeader) => void,  /** Called when all tiles in the current viewport are loaded. */\n  // onViewportLoad: ((tiles: Tile2DHeader<DataT>[]) => void) | null,\n  onTileLoad: () => {},\n  onTileUnload: () => {},\n  onTileError: () => {}\n};\n\n/**\n * Manages loading and purging of tile data. This class caches recently visited tiles\n * and only creates new tiles if they are present.\n */\nexport class Tileset2D {\n  private opts: Required<Tileset2DProps>;\n  private _requestScheduler: RequestScheduler;\n  private _cache: Map<string, Tile2DHeader>;\n  private _dirty: boolean;\n  private _tiles: Tile2DHeader[];\n\n  private _cacheByteSize: number;\n  private _viewport: Viewport | null;\n  private _zRange?: ZRange;\n  private _selectedTiles: Tile2DHeader[] | null;\n  private _frameNumber: number;\n  private _modelMatrix: Matrix4;\n  private _modelMatrixInverse: Matrix4;\n\n  private _maxZoom?: number;\n  private _minZoom?: number;\n\n  private onTileLoad: (tile: Tile2DHeader) => void;\n\n  /**\n   * Takes in a function that returns tile data, a cache size, and a max and a min zoom level.\n   * Cache size defaults to 5 * number of tiles in the current viewport\n   */\n  constructor(opts: Tileset2DProps) {\n    this.opts = {...DEFAULT_TILESET2D_PROPS, ...opts};\n\n    this.onTileLoad = tile => {\n      this.opts.onTileLoad?.(tile);\n      if (this.opts.maxCacheByteSize) {\n        this._cacheByteSize += tile.byteLength;\n        this._resizeCache();\n      }\n    };\n\n    this._requestScheduler = new RequestScheduler({\n      maxRequests: opts.maxRequests,\n      throttleRequests: Boolean(opts.maxRequests && opts.maxRequests > 0)\n    });\n\n    // Maps tile id in string {z}-{x}-{y} to a Tile object\n    this._cache = new Map();\n    this._tiles = [];\n    this._dirty = false;\n    this._cacheByteSize = 0;\n\n    // Cache the last processed viewport\n    this._viewport = null;\n    this._selectedTiles = null;\n    this._frameNumber = 0;\n\n    this._modelMatrix = new Matrix4();\n    this._modelMatrixInverse = new Matrix4();\n\n    this.setOptions(opts);\n  }\n\n  /* Public API */\n  get tiles() {\n    return this._tiles;\n  }\n\n  get selectedTiles(): Tile2DHeader[] | null {\n    return this._selectedTiles;\n  }\n\n  get isLoaded(): boolean {\n    return this._selectedTiles !== null && this._selectedTiles.every(tile => tile.isLoaded);\n  }\n\n  get needsReload(): boolean {\n    return this._selectedTiles !== null && this._selectedTiles.some(tile => tile.needsReload);\n  }\n\n  setOptions(opts: Tileset2DProps): void {\n    Object.assign(this.opts, opts);\n    if (Number.isFinite(opts.maxZoom)) {\n      this._maxZoom = Math.floor(opts.maxZoom as number);\n    }\n    if (Number.isFinite(opts.minZoom)) {\n      this._minZoom = Math.ceil(opts.minZoom as number);\n    }\n  }\n\n  // Clean up any outstanding tile requests.\n  finalize(): void {\n    for (const tile of this._cache.values()) {\n      if (tile.isLoading) {\n        tile.abort();\n      }\n    }\n    this._cache.clear();\n    this._tiles = [];\n    this._selectedTiles = null;\n  }\n\n  reloadAll(): void {\n    for (const id of this._cache.keys()) {\n      const tile = this._cache.get(id) as Tile2DHeader;\n      if (!this._selectedTiles || !this._selectedTiles.includes(tile)) {\n        this._cache.delete(id);\n      } else {\n        tile.setNeedsReload();\n      }\n    }\n  }\n\n  /**\n   * Update the cache with the given viewport and model matrix and triggers callback onUpdate.\n   */\n  update(\n    viewport: Viewport,\n    {zRange, modelMatrix}: {zRange?: ZRange; modelMatrix?: Matrix4} = {}\n  ): number {\n    const modelMatrixAsMatrix4 = new Matrix4(modelMatrix);\n    const isModelMatrixNew = !modelMatrixAsMatrix4.equals(this._modelMatrix);\n    if (\n      !this._viewport ||\n      !viewport.equals(this._viewport) ||\n      !equals(this._zRange, zRange) ||\n      isModelMatrixNew\n    ) {\n      if (isModelMatrixNew) {\n        this._modelMatrixInverse = modelMatrixAsMatrix4.clone().invert();\n        this._modelMatrix = modelMatrixAsMatrix4;\n      }\n      this._viewport = viewport;\n      this._zRange = zRange;\n      const tileIndices = this.getTileIndices({\n        viewport,\n        maxZoom: this._maxZoom,\n        minZoom: this._minZoom,\n        zRange,\n        modelMatrix: this._modelMatrix,\n        modelMatrixInverse: this._modelMatrixInverse\n      });\n      this._selectedTiles = tileIndices.map(index => this._getTile(index, true));\n\n      if (this._dirty) {\n        // Some new tiles are added\n        this._rebuildTree();\n      }\n      // Check for needed reloads explicitly even if the view/matrix has not changed.\n    } else if (this.needsReload) {\n      this._selectedTiles = this._selectedTiles!.map(tile => this._getTile(tile.index, true));\n    }\n\n    // Update tile states\n    const changed = this.updateTileStates();\n    this._pruneRequests();\n\n    if (this._dirty) {\n      // cache size is either the user defined maxSize or 5 * number of current tiles in the viewport.\n      this._resizeCache();\n    }\n\n    if (changed) {\n      this._frameNumber++;\n    }\n\n    return this._frameNumber;\n  }\n\n  // eslint-disable-next-line complexity\n  isTileVisible(\n    tile: Tile2DHeader,\n    cullRect?: {x: number; y: number; width: number; height: number}\n  ): boolean {\n    if (!tile.isVisible) {\n      return false;\n    }\n\n    if (cullRect && this._viewport) {\n      const boundsArr = this._getCullBounds({\n        viewport: this._viewport,\n        z: this._zRange,\n        cullRect\n      });\n      const {bbox} = tile;\n      for (const [minX, minY, maxX, maxY] of boundsArr) {\n        let overlaps;\n        if ('west' in bbox) {\n          overlaps = bbox.west < maxX && bbox.east > minX && bbox.south < maxY && bbox.north > minY;\n        } else {\n          // top/bottom could be swapped depending on the indexing system\n          const y0 = Math.min(bbox.top, bbox.bottom);\n          const y1 = Math.max(bbox.top, bbox.bottom);\n          overlaps = bbox.left < maxX && bbox.right > minX && y0 < maxY && y1 > minY;\n        }\n        if (overlaps) {\n          return true;\n        }\n      }\n      return false;\n    }\n    return true;\n  }\n\n  /* Public interface for subclassing */\n\n  /** Returns array of tile indices in the current viewport */\n  getTileIndices({\n    viewport,\n    maxZoom,\n    minZoom,\n    zRange,\n    modelMatrix,\n    modelMatrixInverse\n  }: {\n    viewport: Viewport;\n    maxZoom?: number;\n    minZoom?: number;\n    zRange: ZRange | undefined;\n    tileSize?: number;\n    modelMatrix?: Matrix4;\n    modelMatrixInverse?: Matrix4;\n    zoomOffset?: number;\n  }): TileIndex[] {\n    const {tileSize, extent, zoomOffset} = this.opts;\n    return getTileIndices({\n      viewport,\n      maxZoom,\n      minZoom,\n      zRange,\n      tileSize,\n      extent: extent as Bounds | undefined,\n      modelMatrix,\n      modelMatrixInverse,\n      zoomOffset\n    });\n  }\n\n  /** Returns unique string key for a tile index */\n  getTileId(index: TileIndex) {\n    return `${index.x}-${index.y}-${index.z}`;\n  }\n\n  /** Returns a zoom level for a tile index */\n  getTileZoom(index: TileIndex) {\n    return index.z;\n  }\n\n  /** Returns additional metadata to add to tile, bbox by default */\n  getTileMetadata(index: TileIndex): Record<string, any> {\n    const {tileSize} = this.opts;\n    // @ts-expect-error\n    return {bbox: tileToBoundingBox(this._viewport, index.x, index.y, index.z, tileSize)};\n  }\n\n  /** Returns index of the parent tile */\n  getParentIndex(index: TileIndex) {\n    const x = Math.floor(index.x / 2);\n    const y = Math.floor(index.y / 2);\n    const z = index.z - 1;\n    return {x, y, z};\n  }\n\n  // Returns true if any tile's visibility changed\n  private updateTileStates() {\n    const refinementStrategy = this.opts.refinementStrategy || STRATEGY_DEFAULT;\n\n    const visibilities = new Array(this._cache.size);\n    let i = 0;\n    // Reset state\n    for (const tile of this._cache.values()) {\n      // save previous state\n      visibilities[i++] = tile.isVisible;\n      tile.isSelected = false;\n      tile.isVisible = false;\n    }\n    // @ts-expect-error called only when _selectedTiles is already defined\n    for (const tile of this._selectedTiles) {\n      tile.isSelected = true;\n      tile.isVisible = true;\n    }\n\n    // Strategy-specific state logic\n    (typeof refinementStrategy === 'function'\n      ? refinementStrategy\n      : STRATEGIES[refinementStrategy])(Array.from(this._cache.values()));\n\n    i = 0;\n    // Check if any visibility has changed\n    for (const tile of this._cache.values()) {\n      if (visibilities[i++] !== tile.isVisible) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /* Private methods */\n\n  private _getCullBounds = memoize(getCullBounds);\n\n  private _pruneRequests(): void {\n    const {maxRequests = 0} = this.opts;\n\n    const abortCandidates: Tile2DHeader[] = [];\n    let ongoingRequestCount = 0;\n    for (const tile of this._cache.values()) {\n      // Keep track of all the ongoing requests\n      if (tile.isLoading) {\n        ongoingRequestCount++;\n        if (!tile.isSelected && !tile.isVisible) {\n          abortCandidates.push(tile);\n        }\n      }\n    }\n\n    while (maxRequests > 0 && ongoingRequestCount > maxRequests && abortCandidates.length > 0) {\n      // There are too many ongoing requests, so abort some that are unselected\n      const tile = abortCandidates.shift()!;\n      tile.abort();\n      ongoingRequestCount--;\n    }\n  }\n\n  // This needs to be called every time some tiles have been added/removed from cache\n  private _rebuildTree() {\n    const {_cache} = this;\n\n    // Reset states\n    for (const tile of _cache.values()) {\n      tile.parent = null;\n      if (tile.children) {\n        tile.children.length = 0;\n      }\n    }\n\n    // Rebuild tree\n    for (const tile of _cache.values()) {\n      const parent = this._getNearestAncestor(tile);\n      tile.parent = parent;\n      if (parent?.children) {\n        parent.children.push(tile);\n      }\n    }\n  }\n\n  /**\n   * Clear tiles that are not visible when the cache is full\n   */\n  /* eslint-disable complexity */\n  private _resizeCache() {\n    const {_cache, opts} = this;\n\n    const maxCacheSize =\n      opts.maxCacheSize ||\n      // @ts-expect-error called only when selectedTiles is initialized\n      (opts.maxCacheByteSize ? Infinity : DEFAULT_CACHE_SCALE * this.selectedTiles.length);\n    const maxCacheByteSize = opts.maxCacheByteSize || Infinity;\n\n    const overflown = _cache.size > maxCacheSize || this._cacheByteSize > maxCacheByteSize;\n\n    if (overflown) {\n      for (const [id, tile] of _cache) {\n        if (!tile.isVisible && !tile.isSelected) {\n          // delete tile\n          this._cacheByteSize -= opts.maxCacheByteSize ? tile.byteLength : 0;\n          _cache.delete(id);\n          this.opts.onTileUnload?.(tile);\n        }\n        if (_cache.size <= maxCacheSize && this._cacheByteSize <= maxCacheByteSize) {\n          break;\n        }\n      }\n      this._rebuildTree();\n      this._dirty = true;\n    }\n    if (this._dirty) {\n      // sort by zoom level so that smaller tiles are displayed on top\n      this._tiles = Array.from(this._cache.values()).sort((t1, t2) => t1.zoom - t2.zoom);\n\n      this._dirty = false;\n    }\n  }\n  /* eslint-enable complexity */\n\n  private _getTile(index: TileIndex, create: true): Tile2DHeader;\n  private _getTile(index: TileIndex, create?: false): Tile2DHeader | undefined;\n  private _getTile(index: TileIndex, create?: boolean): Tile2DHeader | undefined {\n    const id = this.getTileId(index);\n    let tile = this._cache.get(id);\n    let needsReload = false;\n\n    if (!tile && create) {\n      tile = new Tile2DHeader(index);\n      Object.assign(tile, this.getTileMetadata(tile.index));\n      Object.assign(tile, {id, zoom: this.getTileZoom(tile.index)});\n      needsReload = true;\n      this._cache.set(id, tile);\n      this._dirty = true;\n    } else if (tile && tile.needsReload) {\n      needsReload = true;\n    }\n    if (tile && needsReload) {\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      tile.loadData({\n        getData: this.opts.getTileData,\n        requestScheduler: this._requestScheduler,\n        onLoad: this.onTileLoad,\n        onError: this.opts.onTileError\n      });\n    }\n\n    return tile;\n  }\n\n  _getNearestAncestor(tile: Tile2DHeader): Tile2DHeader | null {\n    const {_minZoom = 0} = this;\n\n    let index = tile.index;\n    while (this.getTileZoom(index) > _minZoom) {\n      index = this.getParentIndex(index);\n      const parent = this._getTile(index);\n      if (parent) {\n        return parent;\n      }\n    }\n    return null;\n  }\n}\n\n/* -- Refinement strategies --*/\n/* eslint-disable max-depth */\n\n// For all the selected && pending tiles:\n// - pick the closest ancestor as placeholder\n// - if no ancestor is visible, pick the closest children as placeholder\nfunction updateTileStateDefault(allTiles: Tile2DHeader[]) {\n  for (const tile of allTiles) {\n    tile.state = 0;\n  }\n  for (const tile of allTiles) {\n    if (tile.isSelected && !getPlaceholderInAncestors(tile)) {\n      getPlaceholderInChildren(tile);\n    }\n  }\n  for (const tile of allTiles) {\n    tile.isVisible = Boolean(tile.state! & TILE_STATE_VISIBLE);\n  }\n}\n\n// Until a selected tile and all its selected siblings are loaded, use the closest ancestor as placeholder\nfunction updateTileStateReplace(allTiles: Tile2DHeader[]) {\n  for (const tile of allTiles) {\n    tile.state = 0;\n  }\n  for (const tile of allTiles) {\n    if (tile.isSelected) {\n      getPlaceholderInAncestors(tile);\n    }\n  }\n  // Always process parents first\n  const sortedTiles = Array.from(allTiles).sort((t1, t2) => t1.zoom - t2.zoom);\n  for (const tile of sortedTiles) {\n    tile.isVisible = Boolean(tile.state! & TILE_STATE_VISIBLE);\n\n    if (tile.children && (tile.isVisible || tile.state! & TILE_STATE_VISITED)) {\n      // If the tile is rendered, or if the tile has been explicitly hidden, hide all of its children\n      for (const child of tile.children) {\n        child.state = TILE_STATE_VISITED;\n      }\n    } else if (tile.isSelected) {\n      getPlaceholderInChildren(tile);\n    }\n  }\n}\n\n// Walk up the tree until we find one ancestor that is loaded. Returns true if successful.\nfunction getPlaceholderInAncestors(startTile: Tile2DHeader) {\n  let tile: Tile2DHeader | null = startTile;\n  while (tile) {\n    if (tile.isLoaded || tile.content) {\n      tile.state! |= TILE_STATE_VISIBLE;\n      return true;\n    }\n    tile = tile.parent;\n  }\n  return false;\n}\n\n// Recursively set children as placeholder\nfunction getPlaceholderInChildren(tile) {\n  for (const child of tile.children) {\n    if (child.isLoaded || child.content) {\n      child.state |= TILE_STATE_VISIBLE;\n    } else {\n      getPlaceholderInChildren(child);\n    }\n  }\n}\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport {NumberArray} from '@math.gl/types';\nimport {config} from './common';\n\nexport function validateVector(v: NumberArray, length: number): boolean {\n  if (v.length !== length) {\n    return false;\n  }\n  // Could be arguments \"array\" (v.every not availasble)\n  for (let i = 0; i < v.length; ++i) {\n    if (!Number.isFinite(v[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function checkNumber(value: any): number {\n  if (!Number.isFinite(value)) {\n    throw new Error(`Invalid number ${value}`);\n  }\n  return value as number;\n}\n\nexport function checkVector<T extends NumberArray>(\n  v: T,\n  length: number,\n  callerName: string = ''\n): T {\n  if (config.debug && !validateVector(v, length)) {\n    throw new Error(`math.gl: ${callerName} some fields set to invalid numbers'`);\n  }\n  return v;\n}\n\nconst map = {};\n\nexport function deprecated(method: string, version: string): void {\n  if (!map[method]) {\n    map[method] = true;\n    // eslint-disable-next-line\n    console.warn(\n      `${method} has been removed in version ${version}, see upgrade guide for more information`\n    );\n  }\n}\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/**\n * Move an array item to a different position. Returns a new array with the item moved to the new position.\n */\nexport function arrayMove<T>(array: T[], from: number, to: number): T[] {\n  const newArray = array.slice();\n  newArray.splice(\n    to < 0 ? newArray.length + to : to,\n    0,\n    newArray.splice(from, 1)[0]\n  );\n\n  return newArray;\n}\n","/**\n * Swap an array item to a different position. Returns a new array with the item swapped to the new position.\n */\nexport function arraySwap<T>(array: T[], from: number, to: number): T[] {\n  const newArray = array.slice();\n\n  newArray[from] = array[to];\n  newArray[to] = array[from];\n\n  return newArray;\n}\n","import type {\n  ClientRect,\n  UniqueIdentifier,\n  UseDndContextReturnValue,\n} from '@dnd-kit/core';\n\nexport function getSortedRects(\n  items: UniqueIdentifier[],\n  rects: UseDndContextReturnValue['droppableRects']\n) {\n  return items.reduce<ClientRect[]>((accumulator, id, index) => {\n    const rect = rects.get(id);\n\n    if (rect) {\n      accumulator[index] = rect;\n    }\n\n    return accumulator;\n  }, Array(items.length));\n}\n","export function isValidIndex(index: number | null): index is number {\n  return index !== null && index >= 0;\n}\n","import type {ClientRect} from '@dnd-kit/core';\nimport type {SortingStrategy} from '../types';\n\n// To-do: We should be calculating scale transformation\nconst defaultScale = {\n  scaleX: 1,\n  scaleY: 1,\n};\n\nexport const horizontalListSortingStrategy: SortingStrategy = ({\n  rects,\n  activeNodeRect: fallbackActiveRect,\n  activeIndex,\n  overIndex,\n  index,\n}) => {\n  const activeNodeRect = rects[activeIndex] ?? fallbackActiveRect;\n\n  if (!activeNodeRect) {\n    return null;\n  }\n\n  const itemGap = getItemGap(rects, index, activeIndex);\n\n  if (index === activeIndex) {\n    const newIndexRect = rects[overIndex];\n\n    if (!newIndexRect) {\n      return null;\n    }\n\n    return {\n      x:\n        activeIndex < overIndex\n          ? newIndexRect.left +\n            newIndexRect.width -\n            (activeNodeRect.left + activeNodeRect.width)\n          : newIndexRect.left - activeNodeRect.left,\n      y: 0,\n      ...defaultScale,\n    };\n  }\n\n  if (index > activeIndex && index <= overIndex) {\n    return {\n      x: -activeNodeRect.width - itemGap,\n      y: 0,\n      ...defaultScale,\n    };\n  }\n\n  if (index < activeIndex && index >= overIndex) {\n    return {\n      x: activeNodeRect.width + itemGap,\n      y: 0,\n      ...defaultScale,\n    };\n  }\n\n  return {\n    x: 0,\n    y: 0,\n    ...defaultScale,\n  };\n};\n\nfunction getItemGap(rects: ClientRect[], index: number, activeIndex: number) {\n  const currentRect: ClientRect | undefined = rects[index];\n  const previousRect: ClientRect | undefined = rects[index - 1];\n  const nextRect: ClientRect | undefined = rects[index + 1];\n\n  if (!currentRect || (!previousRect && !nextRect)) {\n    return 0;\n  }\n\n  if (activeIndex < index) {\n    return previousRect\n      ? currentRect.left - (previousRect.left + previousRect.width)\n      : nextRect.left - (currentRect.left + currentRect.width);\n  }\n\n  return nextRect\n    ? nextRect.left - (currentRect.left + currentRect.width)\n    : currentRect.left - (previousRect.left + previousRect.width);\n}\n","import {arrayMove} from '../utilities';\nimport type {SortingStrategy} from '../types';\n\nexport const rectSortingStrategy: SortingStrategy = ({\n  rects,\n  activeIndex,\n  overIndex,\n  index,\n}) => {\n  const newRects = arrayMove(rects, overIndex, activeIndex);\n\n  const oldRect = rects[index];\n  const newRect = newRects[index];\n\n  if (!newRect || !oldRect) {\n    return null;\n  }\n\n  return {\n    x: newRect.left - oldRect.left,\n    y: newRect.top - oldRect.top,\n    scaleX: newRect.width / oldRect.width,\n    scaleY: newRect.height / oldRect.height,\n  };\n};\n","import type {SortingStrategy} from '../types';\n\nexport const rectSwappingStrategy: SortingStrategy = ({\n  activeIndex,\n  index,\n  rects,\n  overIndex,\n}) => {\n  let oldRect;\n  let newRect;\n\n  if (index === activeIndex) {\n    oldRect = rects[index];\n    newRect = rects[overIndex];\n  }\n\n  if (index === overIndex) {\n    oldRect = rects[index];\n    newRect = rects[activeIndex];\n  }\n\n  if (!newRect || !oldRect) {\n    return null;\n  }\n\n  return {\n    x: newRect.left - oldRect.left,\n    y: newRect.top - oldRect.top,\n    scaleX: newRect.width / oldRect.width,\n    scaleY: newRect.height / oldRect.height,\n  };\n};\n","import type {ClientRect} from '@dnd-kit/core';\nimport type {SortingStrategy} from '../types';\n\n// To-do: We should be calculating scale transformation\nconst defaultScale = {\n  scaleX: 1,\n  scaleY: 1,\n};\n\nexport const verticalListSortingStrategy: SortingStrategy = ({\n  activeIndex,\n  activeNodeRect: fallbackActiveRect,\n  index,\n  rects,\n  overIndex,\n}) => {\n  const activeNodeRect = rects[activeIndex] ?? fallbackActiveRect;\n\n  if (!activeNodeRect) {\n    return null;\n  }\n\n  if (index === activeIndex) {\n    const overIndexRect = rects[overIndex];\n\n    if (!overIndexRect) {\n      return null;\n    }\n\n    return {\n      x: 0,\n      y:\n        activeIndex < overIndex\n          ? overIndexRect.top +\n            overIndexRect.height -\n            (activeNodeRect.top + activeNodeRect.height)\n          : overIndexRect.top - activeNodeRect.top,\n      ...defaultScale,\n    };\n  }\n\n  const itemGap = getItemGap(rects, index, activeIndex);\n\n  if (index > activeIndex && index <= overIndex) {\n    return {\n      x: 0,\n      y: -activeNodeRect.height - itemGap,\n      ...defaultScale,\n    };\n  }\n\n  if (index < activeIndex && index >= overIndex) {\n    return {\n      x: 0,\n      y: activeNodeRect.height + itemGap,\n      ...defaultScale,\n    };\n  }\n\n  return {\n    x: 0,\n    y: 0,\n    ...defaultScale,\n  };\n};\n\nfunction getItemGap(\n  clientRects: ClientRect[],\n  index: number,\n  activeIndex: number\n) {\n  const currentRect: ClientRect | undefined = clientRects[index];\n  const previousRect: ClientRect | undefined = clientRects[index - 1];\n  const nextRect: ClientRect | undefined = clientRects[index + 1];\n\n  if (!currentRect) {\n    return 0;\n  }\n\n  if (activeIndex < index) {\n    return previousRect\n      ? currentRect.top - (previousRect.top + previousRect.height)\n      : nextRect\n      ? nextRect.top - (currentRect.top + currentRect.height)\n      : 0;\n  }\n\n  return nextRect\n    ? nextRect.top - (currentRect.top + currentRect.height)\n    : previousRect\n    ? currentRect.top - (previousRect.top + previousRect.height)\n    : 0;\n}\n","import React, {useEffect, useMemo, useRef} from 'react';\nimport {useDndContext, ClientRect, UniqueIdentifier} from '@dnd-kit/core';\nimport {useIsomorphicLayoutEffect, useUniqueId} from '@dnd-kit/utilities';\n\nimport type {Disabled, SortingStrategy} from '../types';\nimport {getSortedRects, itemsEqual, normalizeDisabled} from '../utilities';\nimport {rectSortingStrategy} from '../strategies';\n\nexport interface Props {\n  children: React.ReactNode;\n  items: (UniqueIdentifier | {id: UniqueIdentifier})[];\n  strategy?: SortingStrategy;\n  id?: string;\n  disabled?: boolean | Disabled;\n}\n\nconst ID_PREFIX = 'Sortable';\n\ninterface ContextDescriptor {\n  activeIndex: number;\n  containerId: string;\n  disabled: Disabled;\n  disableTransforms: boolean;\n  items: UniqueIdentifier[];\n  overIndex: number;\n  useDragOverlay: boolean;\n  sortedRects: ClientRect[];\n  strategy: SortingStrategy;\n}\n\nexport const Context = React.createContext<ContextDescriptor>({\n  activeIndex: -1,\n  containerId: ID_PREFIX,\n  disableTransforms: false,\n  items: [],\n  overIndex: -1,\n  useDragOverlay: false,\n  sortedRects: [],\n  strategy: rectSortingStrategy,\n  disabled: {\n    draggable: false,\n    droppable: false,\n  },\n});\n\nexport function SortableContext({\n  children,\n  id,\n  items: userDefinedItems,\n  strategy = rectSortingStrategy,\n  disabled: disabledProp = false,\n}: Props) {\n  const {\n    active,\n    dragOverlay,\n    droppableRects,\n    over,\n    measureDroppableContainers,\n  } = useDndContext();\n  const containerId = useUniqueId(ID_PREFIX, id);\n  const useDragOverlay = Boolean(dragOverlay.rect !== null);\n  const items = useMemo<UniqueIdentifier[]>(\n    () =>\n      userDefinedItems.map((item) =>\n        typeof item === 'object' && 'id' in item ? item.id : item\n      ),\n    [userDefinedItems]\n  );\n  const isDragging = active != null;\n  const activeIndex = active ? items.indexOf(active.id) : -1;\n  const overIndex = over ? items.indexOf(over.id) : -1;\n  const previousItemsRef = useRef(items);\n  const itemsHaveChanged = !itemsEqual(items, previousItemsRef.current);\n  const disableTransforms =\n    (overIndex !== -1 && activeIndex === -1) || itemsHaveChanged;\n  const disabled = normalizeDisabled(disabledProp);\n\n  useIsomorphicLayoutEffect(() => {\n    if (itemsHaveChanged && isDragging) {\n      measureDroppableContainers(items);\n    }\n  }, [itemsHaveChanged, items, isDragging, measureDroppableContainers]);\n\n  useEffect(() => {\n    previousItemsRef.current = items;\n  }, [items]);\n\n  const contextValue = useMemo(\n    (): ContextDescriptor => ({\n      activeIndex,\n      containerId,\n      disabled,\n      disableTransforms,\n      items,\n      overIndex,\n      useDragOverlay,\n      sortedRects: getSortedRects(items, droppableRects),\n      strategy,\n    }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      activeIndex,\n      containerId,\n      disabled.draggable,\n      disabled.droppable,\n      disableTransforms,\n      items,\n      overIndex,\n      droppableRects,\n      useDragOverlay,\n      strategy,\n    ]\n  );\n\n  return <Context.Provider value={contextValue}>{children}</Context.Provider>;\n}\n","import type {UniqueIdentifier} from '@dnd-kit/core';\n\nexport function itemsEqual(a: UniqueIdentifier[], b: UniqueIdentifier[]) {\n  if (a === b) {\n    return true;\n  }\n\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  for (let i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","import type {Disabled} from '../types';\n\nexport function normalizeDisabled(disabled: boolean | Disabled): Disabled {\n  if (typeof disabled === 'boolean') {\n    return {\n      draggable: disabled,\n      droppable: disabled,\n    };\n  }\n\n  return disabled;\n}\n","import {CSS} from '@dnd-kit/utilities';\n\nimport {arrayMove} from '../utilities';\n\nimport type {\n  AnimateLayoutChanges,\n  NewIndexGetter,\n  SortableTransition,\n} from './types';\n\nexport const defaultNewIndexGetter: NewIndexGetter = ({\n  id,\n  items,\n  activeIndex,\n  overIndex,\n}) => arrayMove(items, activeIndex, overIndex).indexOf(id);\n\nexport const defaultAnimateLayoutChanges: AnimateLayoutChanges = ({\n  containerId,\n  isSorting,\n  wasDragging,\n  index,\n  items,\n  newIndex,\n  previousItems,\n  previousContainerId,\n  transition,\n}) => {\n  if (!transition || !wasDragging) {\n    return false;\n  }\n\n  if (previousItems !== items && index === newIndex) {\n    return false;\n  }\n\n  if (isSorting) {\n    return true;\n  }\n\n  return newIndex !== index && containerId === previousContainerId;\n};\n\nexport const defaultTransition: SortableTransition = {\n  duration: 200,\n  easing: 'ease',\n};\n\nexport const transitionProperty = 'transform';\n\nexport const disabledTransition = CSS.Transition.toString({\n  property: transitionProperty,\n  duration: 0,\n  easing: 'linear',\n});\n\nexport const defaultAttributes = {\n  roleDescription: 'sortable',\n};\n","import {useContext, useEffect, useMemo, useRef} from 'react';\nimport {\n  useDraggable,\n  useDroppable,\n  UseDraggableArguments,\n  UseDroppableArguments,\n} from '@dnd-kit/core';\nimport type {Data} from '@dnd-kit/core';\nimport {CSS, isKeyboardEvent, useCombinedRefs} from '@dnd-kit/utilities';\n\nimport {Context} from '../components';\nimport type {Disabled, SortableData, SortingStrategy} from '../types';\nimport {isValidIndex} from '../utilities';\nimport {\n  defaultAnimateLayoutChanges,\n  defaultAttributes,\n  defaultNewIndexGetter,\n  defaultTransition,\n  disabledTransition,\n  transitionProperty,\n} from './defaults';\nimport type {\n  AnimateLayoutChanges,\n  NewIndexGetter,\n  SortableTransition,\n} from './types';\nimport {useDerivedTransform} from './utilities';\n\nexport interface Arguments\n  extends Omit<UseDraggableArguments, 'disabled'>,\n    Pick<UseDroppableArguments, 'resizeObserverConfig'> {\n  animateLayoutChanges?: AnimateLayoutChanges;\n  disabled?: boolean | Disabled;\n  getNewIndex?: NewIndexGetter;\n  strategy?: SortingStrategy;\n  transition?: SortableTransition | null;\n}\n\nexport function useSortable({\n  animateLayoutChanges = defaultAnimateLayoutChanges,\n  attributes: userDefinedAttributes,\n  disabled: localDisabled,\n  data: customData,\n  getNewIndex = defaultNewIndexGetter,\n  id,\n  strategy: localStrategy,\n  resizeObserverConfig,\n  transition = defaultTransition,\n}: Arguments) {\n  const {\n    items,\n    containerId,\n    activeIndex,\n    disabled: globalDisabled,\n    disableTransforms,\n    sortedRects,\n    overIndex,\n    useDragOverlay,\n    strategy: globalStrategy,\n  } = useContext(Context);\n  const disabled: Disabled = normalizeLocalDisabled(\n    localDisabled,\n    globalDisabled\n  );\n  const index = items.indexOf(id);\n  const data = useMemo<SortableData & Data>(\n    () => ({sortable: {containerId, index, items}, ...customData}),\n    [containerId, customData, index, items]\n  );\n  const itemsAfterCurrentSortable = useMemo(\n    () => items.slice(items.indexOf(id)),\n    [items, id]\n  );\n  const {\n    rect,\n    node,\n    isOver,\n    setNodeRef: setDroppableNodeRef,\n  } = useDroppable({\n    id,\n    data,\n    disabled: disabled.droppable,\n    resizeObserverConfig: {\n      updateMeasurementsFor: itemsAfterCurrentSortable,\n      ...resizeObserverConfig,\n    },\n  });\n  const {\n    active,\n    activatorEvent,\n    activeNodeRect,\n    attributes,\n    setNodeRef: setDraggableNodeRef,\n    listeners,\n    isDragging,\n    over,\n    setActivatorNodeRef,\n    transform,\n  } = useDraggable({\n    id,\n    data,\n    attributes: {\n      ...defaultAttributes,\n      ...userDefinedAttributes,\n    },\n    disabled: disabled.draggable,\n  });\n  const setNodeRef = useCombinedRefs(setDroppableNodeRef, setDraggableNodeRef);\n  const isSorting = Boolean(active);\n  const displaceItem =\n    isSorting &&\n    !disableTransforms &&\n    isValidIndex(activeIndex) &&\n    isValidIndex(overIndex);\n  const shouldDisplaceDragSource = !useDragOverlay && isDragging;\n  const dragSourceDisplacement =\n    shouldDisplaceDragSource && displaceItem ? transform : null;\n  const strategy = localStrategy ?? globalStrategy;\n  const finalTransform = displaceItem\n    ? dragSourceDisplacement ??\n      strategy({\n        rects: sortedRects,\n        activeNodeRect,\n        activeIndex,\n        overIndex,\n        index,\n      })\n    : null;\n  const newIndex =\n    isValidIndex(activeIndex) && isValidIndex(overIndex)\n      ? getNewIndex({id, items, activeIndex, overIndex})\n      : index;\n  const activeId = active?.id;\n  const previous = useRef({\n    activeId,\n    items,\n    newIndex,\n    containerId,\n  });\n  const itemsHaveChanged = items !== previous.current.items;\n  const shouldAnimateLayoutChanges = animateLayoutChanges({\n    active,\n    containerId,\n    isDragging,\n    isSorting,\n    id,\n    index,\n    items,\n    newIndex: previous.current.newIndex,\n    previousItems: previous.current.items,\n    previousContainerId: previous.current.containerId,\n    transition,\n    wasDragging: previous.current.activeId != null,\n  });\n\n  const derivedTransform = useDerivedTransform({\n    disabled: !shouldAnimateLayoutChanges,\n    index,\n    node,\n    rect,\n  });\n\n  useEffect(() => {\n    if (isSorting && previous.current.newIndex !== newIndex) {\n      previous.current.newIndex = newIndex;\n    }\n\n    if (containerId !== previous.current.containerId) {\n      previous.current.containerId = containerId;\n    }\n\n    if (items !== previous.current.items) {\n      previous.current.items = items;\n    }\n  }, [isSorting, newIndex, containerId, items]);\n\n  useEffect(() => {\n    if (activeId === previous.current.activeId) {\n      return;\n    }\n\n    if (activeId && !previous.current.activeId) {\n      previous.current.activeId = activeId;\n      return;\n    }\n\n    const timeoutId = setTimeout(() => {\n      previous.current.activeId = activeId;\n    }, 50);\n\n    return () => clearTimeout(timeoutId);\n  }, [activeId]);\n\n  return {\n    active,\n    activeIndex,\n    attributes,\n    data,\n    rect,\n    index,\n    newIndex,\n    items,\n    isOver,\n    isSorting,\n    isDragging,\n    listeners,\n    node,\n    overIndex,\n    over,\n    setNodeRef,\n    setActivatorNodeRef,\n    setDroppableNodeRef,\n    setDraggableNodeRef,\n    transform: derivedTransform ?? finalTransform,\n    transition: getTransition(),\n  };\n\n  function getTransition() {\n    if (\n      // Temporarily disable transitions for a single frame to set up derived transforms\n      derivedTransform ||\n      // Or to prevent items jumping to back to their \"new\" position when items change\n      (itemsHaveChanged && previous.current.newIndex === index)\n    ) {\n      return disabledTransition;\n    }\n\n    if (\n      (shouldDisplaceDragSource && !isKeyboardEvent(activatorEvent)) ||\n      !transition\n    ) {\n      return undefined;\n    }\n\n    if (isSorting || shouldAnimateLayoutChanges) {\n      return CSS.Transition.toString({\n        ...transition,\n        property: transitionProperty,\n      });\n    }\n\n    return undefined;\n  }\n}\n\nfunction normalizeLocalDisabled(\n  localDisabled: Arguments['disabled'],\n  globalDisabled: Disabled\n) {\n  if (typeof localDisabled === 'boolean') {\n    return {\n      draggable: localDisabled,\n      // Backwards compatibility\n      droppable: false,\n    };\n  }\n\n  return {\n    draggable: localDisabled?.draggable ?? globalDisabled.draggable,\n    droppable: localDisabled?.droppable ?? globalDisabled.droppable,\n  };\n}\n","import {useEffect, useRef, useState} from 'react';\nimport {getClientRect, ClientRect} from '@dnd-kit/core';\nimport {Transform, useIsomorphicLayoutEffect} from '@dnd-kit/utilities';\n\ninterface Arguments {\n  rect: React.MutableRefObject<ClientRect | null>;\n  disabled: boolean;\n  index: number;\n  node: React.MutableRefObject<HTMLElement | null>;\n}\n\n/*\n * When the index of an item changes while sorting,\n * we need to temporarily disable the transforms\n */\nexport function useDerivedTransform({disabled, index, node, rect}: Arguments) {\n  const [derivedTransform, setDerivedtransform] = useState<Transform | null>(\n    null\n  );\n  const previousIndex = useRef(index);\n\n  useIsomorphicLayoutEffect(() => {\n    if (!disabled && index !== previousIndex.current && node.current) {\n      const initial = rect.current;\n\n      if (initial) {\n        const current = getClientRect(node.current, {\n          ignoreTransform: true,\n        });\n\n        const delta = {\n          x: initial.left - current.left,\n          y: initial.top - current.top,\n          scaleX: initial.width / current.width,\n          scaleY: initial.height / current.height,\n        };\n\n        if (delta.x || delta.y) {\n          setDerivedtransform(delta);\n        }\n      }\n    }\n\n    if (index !== previousIndex.current) {\n      previousIndex.current = index;\n    }\n  }, [disabled, index, node, rect]);\n\n  useEffect(() => {\n    if (derivedTransform) {\n      setDerivedtransform(null);\n    }\n  }, [derivedTransform]);\n\n  return derivedTransform;\n}\n","import type {\n  Active,\n  Data,\n  DroppableContainer,\n  DraggableNode,\n  Over,\n} from '@dnd-kit/core';\n\nimport type {SortableData} from './data';\n\nexport function hasSortableData<\n  T extends Active | Over | DraggableNode | DroppableContainer\n>(\n  entry: T | null | undefined\n): entry is T & {data: {current: Data<SortableData>}} {\n  if (!entry) {\n    return false;\n  }\n\n  const data = entry.data.current;\n\n  if (\n    data &&\n    'sortable' in data &&\n    typeof data.sortable === 'object' &&\n    'containerId' in data.sortable &&\n    'items' in data.sortable &&\n    'index' in data.sortable\n  ) {\n    return true;\n  }\n\n  return false;\n}\n","import {\n  closestCorners,\n  getScrollableAncestors,\n  getFirstCollision,\n  KeyboardCode,\n  DroppableContainer,\n  KeyboardCoordinateGetter,\n} from '@dnd-kit/core';\nimport {subtract} from '@dnd-kit/utilities';\n\nimport {hasSortableData} from '../../types';\n\nconst directions: string[] = [\n  KeyboardCode.Down,\n  KeyboardCode.Right,\n  KeyboardCode.Up,\n  KeyboardCode.Left,\n];\n\nexport const sortableKeyboardCoordinates: KeyboardCoordinateGetter = (\n  event,\n  {\n    context: {\n      active,\n      collisionRect,\n      droppableRects,\n      droppableContainers,\n      over,\n      scrollableAncestors,\n    },\n  }\n) => {\n  if (directions.includes(event.code)) {\n    event.preventDefault();\n\n    if (!active || !collisionRect) {\n      return;\n    }\n\n    const filteredContainers: DroppableContainer[] = [];\n\n    droppableContainers.getEnabled().forEach((entry) => {\n      if (!entry || entry?.disabled) {\n        return;\n      }\n\n      const rect = droppableRects.get(entry.id);\n\n      if (!rect) {\n        return;\n      }\n\n      switch (event.code) {\n        case KeyboardCode.Down:\n          if (collisionRect.top < rect.top) {\n            filteredContainers.push(entry);\n          }\n          break;\n        case KeyboardCode.Up:\n          if (collisionRect.top > rect.top) {\n            filteredContainers.push(entry);\n          }\n          break;\n        case KeyboardCode.Left:\n          if (collisionRect.left > rect.left) {\n            filteredContainers.push(entry);\n          }\n          break;\n        case KeyboardCode.Right:\n          if (collisionRect.left < rect.left) {\n            filteredContainers.push(entry);\n          }\n          break;\n      }\n    });\n\n    const collisions = closestCorners({\n      active,\n      collisionRect: collisionRect,\n      droppableRects,\n      droppableContainers: filteredContainers,\n      pointerCoordinates: null,\n    });\n    let closestId = getFirstCollision(collisions, 'id');\n\n    if (closestId === over?.id && collisions.length > 1) {\n      closestId = collisions[1].id;\n    }\n\n    if (closestId != null) {\n      const activeDroppable = droppableContainers.get(active.id);\n      const newDroppable = droppableContainers.get(closestId);\n      const newRect = newDroppable ? droppableRects.get(newDroppable.id) : null;\n      const newNode = newDroppable?.node.current;\n\n      if (newNode && newRect && activeDroppable && newDroppable) {\n        const newScrollAncestors = getScrollableAncestors(newNode);\n        const hasDifferentScrollAncestors = newScrollAncestors.some(\n          (element, index) => scrollableAncestors[index] !== element\n        );\n        const hasSameContainer = isSameContainer(activeDroppable, newDroppable);\n        const isAfterActive = isAfter(activeDroppable, newDroppable);\n        const offset =\n          hasDifferentScrollAncestors || !hasSameContainer\n            ? {\n                x: 0,\n                y: 0,\n              }\n            : {\n                x: isAfterActive ? collisionRect.width - newRect.width : 0,\n                y: isAfterActive ? collisionRect.height - newRect.height : 0,\n              };\n        const rectCoordinates = {\n          x: newRect.left,\n          y: newRect.top,\n        };\n\n        const newCoordinates =\n          offset.x && offset.y\n            ? rectCoordinates\n            : subtract(rectCoordinates, offset);\n\n        return newCoordinates;\n      }\n    }\n  }\n\n  return undefined;\n};\n\nfunction isSameContainer(a: DroppableContainer, b: DroppableContainer) {\n  if (!hasSortableData(a) || !hasSortableData(b)) {\n    return false;\n  }\n\n  return (\n    a.data.current.sortable.containerId === b.data.current.sortable.containerId\n  );\n}\n\nfunction isAfter(a: DroppableContainer, b: DroppableContainer) {\n  if (!hasSortableData(a) || !hasSortableData(b)) {\n    return false;\n  }\n\n  if (!isSameContainer(a, b)) {\n    return false;\n  }\n\n  return a.data.current.sortable.index < b.data.current.sortable.index;\n}\n","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var AwaitValue = require(\"./AwaitValue.js\");\n\nfunction AsyncGenerator(gen) {\n  var front, back;\n\n  function send(key, arg) {\n    return new Promise(function (resolve, reject) {\n      var request = {\n        key: key,\n        arg: arg,\n        resolve: resolve,\n        reject: reject,\n        next: null\n      };\n\n      if (back) {\n        back = back.next = request;\n      } else {\n        front = back = request;\n        resume(key, arg);\n      }\n    });\n  }\n\n  function resume(key, arg) {\n    try {\n      var result = gen[key](arg);\n      var value = result.value;\n      var wrappedAwait = value instanceof AwaitValue;\n      Promise.resolve(wrappedAwait ? value.wrapped : value).then(function (arg) {\n        if (wrappedAwait) {\n          resume(key === \"return\" ? \"return\" : \"next\", arg);\n          return;\n        }\n\n        settle(result.done ? \"return\" : \"normal\", arg);\n      }, function (err) {\n        resume(\"throw\", err);\n      });\n    } catch (err) {\n      settle(\"throw\", err);\n    }\n  }\n\n  function settle(type, value) {\n    switch (type) {\n      case \"return\":\n        front.resolve({\n          value: value,\n          done: true\n        });\n        break;\n\n      case \"throw\":\n        front.reject(value);\n        break;\n\n      default:\n        front.resolve({\n          value: value,\n          done: false\n        });\n        break;\n    }\n\n    front = front.next;\n\n    if (front) {\n      resume(front.key, front.arg);\n    } else {\n      back = null;\n    }\n  }\n\n  this._invoke = send;\n\n  if (typeof gen[\"return\"] !== \"function\") {\n    this[\"return\"] = undefined;\n  }\n}\n\nif (typeof Symbol === \"function\" && Symbol.asyncIterator) {\n  AsyncGenerator.prototype[Symbol.asyncIterator] = function () {\n    return this;\n  };\n}\n\nAsyncGenerator.prototype.next = function (arg) {\n  return this._invoke(\"next\", arg);\n};\n\nAsyncGenerator.prototype[\"throw\"] = function (arg) {\n  return this._invoke(\"throw\", arg);\n};\n\nAsyncGenerator.prototype[\"return\"] = function (arg) {\n  return this._invoke(\"return\", arg);\n};\n\nmodule.exports = AsyncGenerator;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var getPrototypeOf = require(\"./getPrototypeOf.js\");\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nmodule.exports = _superPropBase;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","/**\n * Fast partial deep equal for prop.\n *\n * @param a Prop\n * @param b Prop to compare against `a`\n * @param depth Depth to which to recurse in nested Objects/Arrays. Use 0 (default) for shallow comparison, -1 for infinite depth\n */\n/* eslint-disable complexity */\nexport function deepEqual(a: any, b: any, depth: number): boolean {\n  if (a === b) {\n    return true;\n  }\n  if (!depth || !a || !b) {\n    return false;\n  }\n  if (Array.isArray(a)) {\n    if (!Array.isArray(b) || a.length !== b.length) {\n      return false;\n    }\n    for (let i = 0; i < a.length; i++) {\n      if (!deepEqual(a[i], b[i], depth - 1)) {\n        return false;\n      }\n    }\n    return true;\n  }\n  if (Array.isArray(b)) {\n    return false;\n  }\n  if (typeof a === 'object' && typeof b === 'object') {\n    const aKeys = Object.keys(a);\n    const bKeys = Object.keys(b);\n    if (aKeys.length !== bKeys.length) {\n      return false;\n    }\n    for (const key of aKeys) {\n      if (!b.hasOwnProperty(key)) {\n        return false;\n      }\n      if (!deepEqual(a[key], b[key], depth - 1)) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return false;\n}\n","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport log from '../utils/log';\nimport {createMat4, getCameraPosition, getFrustumPlanes, FrustumPlane} from '../utils/math-utils';\n\nimport {Matrix4, Vector3, equals, clamp} from '@math.gl/core';\nimport * as mat4 from 'gl-matrix/mat4';\n\nimport {\n  getDistanceScales,\n  getMeterZoom,\n  lngLatToWorld,\n  worldToLngLat,\n  worldToPixels,\n  pixelsToWorld\n} from '@math.gl/web-mercator';\n\nimport {PROJECTION_MODE} from '../lib/constants';\n\nexport type DistanceScales = {\n  unitsPerMeter: number[];\n  metersPerUnit: number[];\n};\n\nexport type Padding = {\n  left?: number;\n  right?: number;\n  top?: number;\n  bottom?: number;\n};\n\nexport type ViewportOptions = {\n  /** Name of the viewport */\n  id?: string;\n  /** Left offset from the canvas edge, in pixels */\n  x?: number;\n  /** Top offset from the canvas edge, in pixels */\n  y?: number;\n  /** Viewport width in pixels */\n  width?: number;\n  /** Viewport height in pixels */\n  height?: number;\n  /** Longitude in degrees (geospatial only) */\n  longitude?: number;\n  /** Latitude in degrees (geospatial only) */\n  latitude?: number;\n  /** Viewport center in world space. If geospatial, refers to meter offsets from lng, lat */\n  position?: number[];\n  /** Zoom level */\n  zoom?: number;\n  /** Padding around the viewport, in pixels. */\n  padding?: Padding | null;\n  distanceScales?: DistanceScales;\n  /** Model matrix of viewport center */\n  modelMatrix?: number[] | null;\n  /** Custom view matrix */\n  viewMatrix?: number[];\n  /** Custom projection matrix */\n  projectionMatrix?: number[];\n  /** Modifier of viewport scale. Corresponds to the number of pixels per common unit at zoom 0. */\n  focalDistance?: number;\n  /** Use orthographic projection */\n  orthographic?: boolean;\n  /** fovy in radians. If supplied, overrides fovy */\n  fovyRadians?: number;\n  /** fovy in degrees. */\n  fovy?: number;\n  /** Near plane of the projection matrix */\n  near?: number;\n  /** Far plane of the projection matrix */\n  far?: number;\n};\n\nconst DEGREES_TO_RADIANS = Math.PI / 180;\n\nconst IDENTITY = createMat4();\n\nconst ZERO_VECTOR = [0, 0, 0];\n\nconst DEFAULT_DISTANCE_SCALES: DistanceScales = {\n  unitsPerMeter: [1, 1, 1],\n  metersPerUnit: [1, 1, 1]\n};\n\n// / Helpers\nfunction createProjectionMatrix({\n  width,\n  height,\n  orthographic,\n  fovyRadians,\n  focalDistance,\n  padding,\n  near,\n  far\n}: {\n  width: number;\n  height: number;\n  orthographic: boolean;\n  fovyRadians: number;\n  focalDistance: number;\n  padding: Padding | null;\n  near: number;\n  far: number;\n}) {\n  const aspect = width / height;\n  const matrix = orthographic\n    ? new Matrix4().orthographic({fovy: fovyRadians, aspect, focalDistance, near, far})\n    : new Matrix4().perspective({fovy: fovyRadians, aspect, near, far});\n  if (padding) {\n    const {left = 0, right = 0, top = 0, bottom = 0} = padding;\n    const offsetX = clamp((left + width - right) / 2, 0, width) - width / 2;\n    const offsetY = clamp((top + height - bottom) / 2, 0, height) - height / 2;\n    // pixels to clip space\n    matrix[8] -= (offsetX * 2) / width;\n    matrix[9] += (offsetY * 2) / height;\n  }\n  return matrix;\n}\n\n/**\n * Manages coordinate system transformations.\n *\n * Note: The Viewport is immutable in the sense that it only has accessors.\n * A new viewport instance should be created if any parameters have changed.\n */\nexport default class Viewport {\n  static displayName = 'Viewport';\n\n  /** Init parameters */\n\n  id: string;\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  padding?: Padding | null;\n  isGeospatial: boolean;\n  zoom: number;\n  focalDistance: number;\n  position: number[];\n  modelMatrix: number[] | null;\n\n  /** Derived parameters */\n\n  // `!` post-fix expression operator asserts that its operand is non-null and non-undefined in contexts\n  // where the type checker is unable to conclude that fact.\n\n  distanceScales: DistanceScales; /** scale factors between world space and common space */\n  scale!: number; /** scale factor, equals 2^zoom */\n  center!: number[]; /** viewport center in common space */\n  cameraPosition!: number[]; /** Camera position in common space */\n  projectionMatrix!: number[];\n  viewMatrix!: number[];\n  viewMatrixUncentered!: number[];\n  viewMatrixInverse!: number[];\n  viewProjectionMatrix!: number[];\n  pixelProjectionMatrix!: number[];\n  pixelUnprojectionMatrix!: number[];\n  resolution?: number;\n\n  private _frustumPlanes: {[name: string]: FrustumPlane} = {};\n\n  // eslint-disable-next-line complexity\n  constructor(opts: ViewportOptions = {}) {\n    // @ts-ignore\n    this.id = opts.id || this.constructor.displayName || 'viewport';\n\n    this.x = opts.x || 0;\n    this.y = opts.y || 0;\n    // Silently allow apps to send in w,h = 0,0\n    this.width = opts.width || 1;\n    this.height = opts.height || 1;\n    this.zoom = opts.zoom || 0;\n    this.padding = opts.padding;\n    this.distanceScales = opts.distanceScales || DEFAULT_DISTANCE_SCALES;\n    this.focalDistance = opts.focalDistance || 1;\n    this.position = opts.position || ZERO_VECTOR;\n    this.modelMatrix = opts.modelMatrix || null;\n\n    const {longitude, latitude} = opts;\n    this.isGeospatial = Number.isFinite(latitude) && Number.isFinite(longitude);\n\n    this._initProps(opts);\n    this._initMatrices(opts);\n\n    // Bind methods for easy access\n    this.equals = this.equals.bind(this);\n    this.project = this.project.bind(this);\n    this.unproject = this.unproject.bind(this);\n    this.projectPosition = this.projectPosition.bind(this);\n    this.unprojectPosition = this.unprojectPosition.bind(this);\n    this.projectFlat = this.projectFlat.bind(this);\n    this.unprojectFlat = this.unprojectFlat.bind(this);\n  }\n\n  get subViewports(): Viewport[] | null {\n    return null;\n  }\n\n  get metersPerPixel(): number {\n    return this.distanceScales.metersPerUnit[2] / this.scale;\n  }\n\n  get projectionMode(): number {\n    if (this.isGeospatial) {\n      return this.zoom < 12\n        ? PROJECTION_MODE.WEB_MERCATOR\n        : PROJECTION_MODE.WEB_MERCATOR_AUTO_OFFSET;\n    }\n    return PROJECTION_MODE.IDENTITY;\n  }\n\n  // Two viewports are equal if width and height are identical, and if\n  // their view and projection matrices are (approximately) equal.\n  equals(viewport: Viewport): boolean {\n    if (!(viewport instanceof Viewport)) {\n      return false;\n    }\n    if (this === viewport) {\n      return true;\n    }\n\n    return (\n      viewport.width === this.width &&\n      viewport.height === this.height &&\n      viewport.scale === this.scale &&\n      equals(viewport.projectionMatrix, this.projectionMatrix) &&\n      equals(viewport.viewMatrix, this.viewMatrix)\n    );\n    // TODO - check distance scales?\n  }\n\n  /**\n   * Projects xyz (possibly latitude and longitude) to pixel coordinates in window\n   * using viewport projection parameters\n   * - [longitude, latitude] to [x, y]\n   * - [longitude, latitude, Z] => [x, y, z]\n   * Note: By default, returns top-left coordinates for canvas/SVG type render\n   *\n   * @param {Array} lngLatZ - [lng, lat] or [lng, lat, Z]\n   * @param {Object} opts - options\n   * @param {Object} opts.topLeft=true - Whether projected coords are top left\n   * @return {Array} - [x, y] or [x, y, z] in top left coords\n   */\n  project(xyz: number[], {topLeft = true}: {topLeft?: boolean} = {}): number[] {\n    const worldPosition = this.projectPosition(xyz);\n    const coord = worldToPixels(worldPosition, this.pixelProjectionMatrix);\n\n    const [x, y] = coord;\n    const y2 = topLeft ? y : this.height - y;\n    return xyz.length === 2 ? [x, y2] : [x, y2, coord[2]];\n  }\n\n  /**\n   * Unproject pixel coordinates on screen onto world coordinates,\n   * (possibly [lon, lat]) on map.\n   * - [x, y] => [lng, lat]\n   * - [x, y, z] => [lng, lat, Z]\n   * @param {Array} xyz -\n   * @param {Object} opts - options\n   * @param {Object} opts.topLeft=true - Whether origin is top left\n   * @return {Array|null} - [lng, lat, Z] or [X, Y, Z]\n   */\n  unproject(\n    xyz: number[],\n    {topLeft = true, targetZ}: {topLeft?: boolean; targetZ?: number} = {}\n  ): number[] {\n    const [x, y, z] = xyz;\n\n    const y2 = topLeft ? y : this.height - y;\n    const targetZWorld = targetZ && targetZ * this.distanceScales.unitsPerMeter[2];\n    const coord = pixelsToWorld([x, y2, z], this.pixelUnprojectionMatrix, targetZWorld);\n    const [X, Y, Z] = this.unprojectPosition(coord);\n\n    if (Number.isFinite(z)) {\n      return [X, Y, Z];\n    }\n    return Number.isFinite(targetZ) ? [X, Y, targetZ as number] : [X, Y];\n  }\n\n  // NON_LINEAR PROJECTION HOOKS\n  // Used for web meractor projection\n\n  projectPosition(xyz: number[]): [number, number, number] {\n    const [X, Y] = this.projectFlat(xyz);\n    const Z = (xyz[2] || 0) * this.distanceScales.unitsPerMeter[2];\n    return [X, Y, Z];\n  }\n\n  unprojectPosition(xyz: number[]): [number, number, number] {\n    const [X, Y] = this.unprojectFlat(xyz);\n    const Z = (xyz[2] || 0) * this.distanceScales.metersPerUnit[2];\n    return [X, Y, Z];\n  }\n\n  /**\n   * Project [lng,lat] on sphere onto [x,y] on 512*512 Mercator Zoom 0 tile.\n   * Performs the nonlinear part of the web mercator projection.\n   * Remaining projection is done with 4x4 matrices which also handles\n   * perspective.\n   * @param {Array} lngLat - [lng, lat] coordinates\n   *   Specifies a point on the sphere to project onto the map.\n   * @return {Array} [x,y] coordinates.\n   */\n  projectFlat(xyz: number[]): [number, number] {\n    if (this.isGeospatial) {\n      // Shader clamps latitude to +-89.9, see /shaderlib/project/project.glsl.js\n      // lngLatToWorld([0, -89.9])[1] = -317.9934163758329\n      // lngLatToWorld([0, 89.9])[1] = 829.9934163758271\n      const result = lngLatToWorld(xyz);\n      result[1] = clamp(result[1], -318, 830);\n      return result;\n    }\n    return xyz as [number, number];\n  }\n\n  /**\n   * Unproject world point [x,y] on map onto {lat, lon} on sphere\n   * @param {object|Vector} xy - object with {x,y} members\n   *  representing point on projected map plane\n   * @return {GeoCoordinates} - object with {lat,lon} of point on sphere.\n   *   Has toArray method if you need a GeoJSON Array.\n   *   Per cartographic tradition, lat and lon are specified as degrees.\n   */\n  unprojectFlat(xyz: number[]): [number, number] {\n    if (this.isGeospatial) {\n      return worldToLngLat(xyz);\n    }\n    return xyz as [number, number];\n  }\n\n  /**\n   * Get bounds of the current viewport\n   * @return {Array} - [minX, minY, maxX, maxY]\n   */\n  getBounds(options: {z?: number} = {}): [number, number, number, number] {\n    const unprojectOption = {targetZ: options.z || 0};\n\n    const topLeft = this.unproject([0, 0], unprojectOption);\n    const topRight = this.unproject([this.width, 0], unprojectOption);\n    const bottomLeft = this.unproject([0, this.height], unprojectOption);\n    const bottomRight = this.unproject([this.width, this.height], unprojectOption);\n\n    return [\n      Math.min(topLeft[0], topRight[0], bottomLeft[0], bottomRight[0]),\n      Math.min(topLeft[1], topRight[1], bottomLeft[1], bottomRight[1]),\n      Math.max(topLeft[0], topRight[0], bottomLeft[0], bottomRight[0]),\n      Math.max(topLeft[1], topRight[1], bottomLeft[1], bottomRight[1])\n    ];\n  }\n\n  getDistanceScales(coordinateOrigin?: number[]): DistanceScales {\n    if (coordinateOrigin) {\n      return getDistanceScales({\n        longitude: coordinateOrigin[0],\n        latitude: coordinateOrigin[1],\n        highPrecision: true\n      });\n    }\n    return this.distanceScales;\n  }\n\n  containsPixel({\n    x,\n    y,\n    width = 1,\n    height = 1\n  }: {\n    x: number;\n    y: number;\n    width?: number;\n    height?: number;\n  }): boolean {\n    return (\n      x < this.x + this.width &&\n      this.x < x + width &&\n      y < this.y + this.height &&\n      this.y < y + height\n    );\n  }\n\n  // Extract frustum planes in common space\n  getFrustumPlanes(): {\n    left: FrustumPlane;\n    right: FrustumPlane;\n    bottom: FrustumPlane;\n    top: FrustumPlane;\n    near: FrustumPlane;\n    far: FrustumPlane;\n  } {\n    if (this._frustumPlanes.near) {\n      // @ts-ignore\n      return this._frustumPlanes;\n    }\n\n    Object.assign(this._frustumPlanes, getFrustumPlanes(this.viewProjectionMatrix));\n\n    // @ts-ignore\n    return this._frustumPlanes;\n  }\n\n  // EXPERIMENTAL METHODS\n\n  /**\n   * Needed by panning and linear transition\n   * Pan the viewport to place a given world coordinate at screen point [x, y]\n   *\n   * @param {Array} coords - world coordinates\n   * @param {Array} pixel - [x,y] coordinates on screen\n   * @return {Object} props of the new viewport\n   */\n  panByPosition(coords: number[], pixel: number[]): any {\n    return null;\n  }\n\n  // INTERNAL METHODS\n\n  /* eslint-disable complexity, max-statements */\n  private _initProps(opts: ViewportOptions) {\n    const longitude = opts.longitude as number;\n    const latitude = opts.latitude as number;\n\n    if (this.isGeospatial) {\n      if (!Number.isFinite(opts.zoom)) {\n        this.zoom = getMeterZoom({latitude}) + Math.log2(this.focalDistance);\n      }\n      this.distanceScales = opts.distanceScales || getDistanceScales({latitude, longitude});\n    }\n    const scale = Math.pow(2, this.zoom);\n    this.scale = scale;\n\n    const {position, modelMatrix} = opts;\n    let meterOffset: number[] = ZERO_VECTOR;\n    if (position) {\n      meterOffset = modelMatrix\n        ? (new Matrix4(modelMatrix).transformAsVector(position, []) as number[])\n        : position;\n    }\n\n    if (this.isGeospatial) {\n      // Determine camera center in common space\n      const center = this.projectPosition([longitude, latitude, 0]);\n\n      this.center = new Vector3(meterOffset)\n        // Convert to pixels in current zoom\n        .scale(this.distanceScales.unitsPerMeter)\n        .add(center);\n    } else {\n      this.center = this.projectPosition(meterOffset);\n    }\n  }\n  /* eslint-enable complexity, max-statements */\n\n  private _initMatrices(opts: ViewportOptions) {\n    const {\n      // View matrix\n      viewMatrix = IDENTITY,\n      // Projection matrix\n      projectionMatrix = null,\n\n      // Projection matrix parameters, used if projectionMatrix not supplied\n      orthographic = false,\n      fovyRadians,\n      fovy = 75,\n      near = 0.1, // Distance of near clipping plane\n      far = 1000, // Distance of far clipping plane\n      padding = null, // Center offset in pixels\n      focalDistance = 1\n    } = opts;\n\n    this.viewMatrixUncentered = viewMatrix;\n    // Make a centered version of the matrix for projection modes without an offset\n    this.viewMatrix = new Matrix4()\n      // Apply the uncentered view matrix\n      .multiplyRight(viewMatrix)\n      // And center it\n      .translate(new Vector3(this.center).negate());\n\n    this.projectionMatrix =\n      projectionMatrix ||\n      createProjectionMatrix({\n        width: this.width,\n        height: this.height,\n        orthographic,\n        fovyRadians: fovyRadians || fovy * DEGREES_TO_RADIANS,\n        focalDistance,\n        padding,\n        near,\n        far\n      });\n\n    // Note: As usual, matrix operations should be applied in \"reverse\" order\n    // since vectors will be multiplied in from the right during transformation\n    const vpm = createMat4();\n    mat4.multiply(vpm, vpm, this.projectionMatrix);\n    mat4.multiply(vpm, vpm, this.viewMatrix);\n    this.viewProjectionMatrix = vpm;\n\n    // console.log('VPM', this.viewMatrix, this.projectionMatrix, this.viewProjectionMatrix);\n\n    // Calculate inverse view matrix\n    this.viewMatrixInverse = mat4.invert([], this.viewMatrix) || this.viewMatrix;\n\n    // Decompose camera parameters\n    this.cameraPosition = getCameraPosition(this.viewMatrixInverse);\n\n    /*\n     * Builds matrices that converts preprojected lngLats to screen pixels\n     * and vice versa.\n     * Note: Currently returns bottom-left coordinates!\n     * Note: Starts with the GL projection matrix and adds steps to the\n     *       scale and translate that matrix onto the window.\n     * Note: WebGL controls clip space to screen projection with gl.viewport\n     *       and does not need this step.\n     */\n\n    // matrix for conversion from world location to screen (pixel) coordinates\n    const viewportMatrix = createMat4(); // matrix from NDC to viewport.\n    const pixelProjectionMatrix = createMat4(); // matrix from world space to viewport.\n    mat4.scale(viewportMatrix, viewportMatrix, [this.width / 2, -this.height / 2, 1]);\n    mat4.translate(viewportMatrix, viewportMatrix, [1, -1, 0]);\n    mat4.multiply(pixelProjectionMatrix, viewportMatrix, this.viewProjectionMatrix);\n    this.pixelProjectionMatrix = pixelProjectionMatrix;\n\n    this.pixelUnprojectionMatrix = mat4.invert(createMat4(), this.pixelProjectionMatrix);\n    if (!this.pixelUnprojectionMatrix) {\n      log.warn('Pixel project matrix not invertible')();\n      // throw new Error('Pixel project matrix not invertible');\n    }\n  }\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/*\n * Helper function for padArray\n */\nfunction padArrayChunk(options: {\n  source;\n  target;\n  start?: number;\n  end?: number;\n  size: number;\n  getData;\n}): void {\n  const {source, target, start = 0, size, getData} = options;\n  const end = options.end || target.length;\n\n  const sourceLength = source.length;\n  const targetLength = end - start;\n\n  if (sourceLength > targetLength) {\n    target.set(source.subarray(0, targetLength), start);\n    return;\n  }\n\n  target.set(source, start);\n\n  if (!getData) {\n    return;\n  }\n\n  // source is not large enough to fill target space, call `getData` to get filler data\n  let i = sourceLength;\n  while (i < targetLength) {\n    const datum = getData(i, source);\n    for (let j = 0; j < size; j++) {\n      target[start + i] = datum[j] || 0;\n      i++;\n    }\n  }\n}\n\n/*\n * The padArray function stretches a source array to the size of a target array.\n   The arrays can have internal structures (like the attributes of PathLayer and\n   SolidPolygonLayer), defined by the optional sourceStartIndices and targetStartIndices parameters.\n   If the target array is larger, the getData callback is used to fill in the blanks.\n * @params {TypedArray} source - original data\n * @params {TypedArray} target - output data\n * @params {Number} size - length per datum\n * @params {Function} getData - callback to get new data when source is short\n * @params {Array<Number>} [sourceStartIndices] - subdivision of the original data in [object0StartIndex, object1StartIndex, ...]\n * @params {Array<Number>} [targetStartIndices] - subdivision of the output data in [object0StartIndex, object1StartIndex, ...]\n */\nexport function padArray({source, target, size, getData, sourceStartIndices, targetStartIndices}) {\n  if (!Array.isArray(targetStartIndices)) {\n    // Flat arrays\n    padArrayChunk({\n      source,\n      target,\n      size,\n      getData\n    });\n    return target;\n  }\n\n  // Arrays have internal structure\n  let sourceIndex = 0;\n  let targetIndex = 0;\n  const getChunkData = getData && ((i, chunk) => getData(i + targetIndex, chunk));\n\n  const n = Math.min(sourceStartIndices.length, targetStartIndices.length);\n\n  for (let i = 1; i < n; i++) {\n    const nextSourceIndex = sourceStartIndices[i] * size;\n    const nextTargetIndex = targetStartIndices[i] * size;\n\n    padArrayChunk({\n      source: source.subarray(sourceIndex, nextSourceIndex),\n      target,\n      start: targetIndex,\n      end: nextTargetIndex,\n      size,\n      getData: getChunkData\n    });\n\n    sourceIndex = nextSourceIndex;\n    targetIndex = nextTargetIndex;\n  }\n\n  if (targetIndex < target.length) {\n    padArrayChunk({\n      source: [],\n      target,\n      start: targetIndex,\n      size,\n      getData: getChunkData\n    });\n  }\n\n  return target;\n}\n","import {padArray} from '../../utils/array-utils';\nimport {NumericArray} from '../../types/types';\nimport Attribute from './attribute';\nimport type {BufferAccessor} from './data-column';\nimport type {Buffer} from '@luma.gl/webgl';\n\nexport interface TransitionSettings {\n  type: string;\n  /** Callback to get the value that the entering vertices are transitioning from. */\n  enter?: (toValue: NumericArray, chunk?: NumericArray) => NumericArray;\n  /** Callback when the transition is started */\n  onStart?: () => void;\n  /** Callback when the transition is done */\n  onEnd?: () => void;\n  /** Callback when the transition is interrupted */\n  onInterrupt?: () => void;\n}\n\nexport type InterpolationTransitionSettings = TransitionSettings & {\n  type?: 'interpolation';\n  /** Duration of the transition animation, in milliseconds */\n  duration: number;\n  /** Easing function that maps a value from [0, 1] to [0, 1], see [http://easings.net/](http://easings.net/) */\n  easing?: (t: number) => number;\n};\n\nexport type SpringTransitionSettings = TransitionSettings & {\n  type: 'spring';\n  /** \"Tension\" factor for the spring */\n  stiffness: number;\n  /** \"Friction\" factor that counteracts the spring's acceleration */\n  damping: number;\n};\n\nconst DEFAULT_TRANSITION_SETTINGS = {\n  interpolation: {\n    duration: 0,\n    easing: t => t\n  },\n  spring: {\n    stiffness: 0.05,\n    damping: 0.5\n  }\n};\n\nexport function normalizeTransitionSettings(\n  userSettings: number | InterpolationTransitionSettings | SpringTransitionSettings,\n  layerSettings?: boolean | Partial<TransitionSettings>\n): TransitionSettings | null {\n  if (!userSettings) {\n    return null;\n  }\n  if (Number.isFinite(userSettings)) {\n    userSettings = {type: 'interpolation', duration: userSettings as number};\n  }\n  const type = (userSettings as TransitionSettings).type || 'interpolation';\n  return {\n    ...DEFAULT_TRANSITION_SETTINGS[type],\n    ...(layerSettings as TransitionSettings),\n    ...(userSettings as TransitionSettings),\n    type\n  };\n}\n\n// NOTE: NOT COPYING OVER OFFSET OR STRIDE HERE BECAUSE:\n// (1) WE DON'T SUPPORT INTERLEAVED BUFFERS FOR TRANSITIONS\n// (2) BUFFERS WITH OFFSETS ALWAYS CONTAIN VALUES OF THE SAME SIZE\n// (3) THE OPERATIONS IN THE SHADER ARE PER-COMPONENT (addition and scaling)\nexport function getSourceBufferAttribute(\n  gl: WebGLRenderingContext,\n  attribute: Attribute\n): [Buffer, BufferAccessor] | NumericArray {\n  // The Attribute we pass to Transform as a sourceBuffer must have {divisor: 0}\n  // so we create a copy of the attribute (with divisor=0) to use when running\n  // transform feedback\n  const buffer = attribute.getBuffer();\n  if (buffer) {\n    return [\n      buffer,\n      {\n        divisor: 0,\n        size: attribute.size,\n        normalized: attribute.settings.normalized\n      } as BufferAccessor\n    ];\n  }\n  // constant\n  // don't pass normalized here because the `value` from a normalized attribute is\n  // already normalized\n  return attribute.value as NumericArray;\n}\n\nexport function getAttributeTypeFromSize(size: number): string {\n  switch (size) {\n    case 1:\n      return 'float';\n    case 2:\n      return 'vec2';\n    case 3:\n      return 'vec3';\n    case 4:\n      return 'vec4';\n    default:\n      throw new Error(`No defined attribute type for size \"${size}\"`);\n  }\n}\n\nexport function cycleBuffers(buffers: Buffer[]): void {\n  buffers.push(buffers.shift() as Buffer);\n}\n\nexport function getAttributeBufferLength(attribute: Attribute, numInstances: number): number {\n  const {doublePrecision, settings, value, size} = attribute;\n  const multiplier = doublePrecision && value instanceof Float64Array ? 2 : 1;\n  return (settings.noAlloc ? (value as NumericArray).length : numInstances * size) * multiplier;\n}\n\n// This helper is used when transitioning attributes from a set of values in one buffer layout\n// to a set of values in a different buffer layout. (Buffer layouts are used when attribute values\n// within a buffer should be grouped for drawElements, like the Polygon layer.) For example, a\n// buffer layout of [3, 4] might have data [A1, A2, A3, B1, B2, B3, B4]. If it needs to transition\n// to a buffer layout of [4, 2], it should produce a buffer, using the transition setting's `enter`\n// function, that looks like this: [A1, A2, A3, A4 (user `enter` fn), B1, B2, 0]. Note: the final\n// 0 in this buffer is because we never shrink buffers, only grow them, for performance reasons.\nexport function padBuffer({\n  buffer,\n  numInstances,\n  attribute,\n  fromLength,\n  fromStartIndices,\n  getData = x => x\n}: {\n  buffer: Buffer;\n  numInstances: number;\n  attribute: Attribute;\n  fromLength: number;\n  fromStartIndices?: NumericArray | null;\n  getData?: (toValue: NumericArray, chunk?: NumericArray) => NumericArray;\n}): void {\n  // TODO: move the precisionMultiplier logic to the attribute when retrieving\n  // its `size` and `elementOffset`?\n  const precisionMultiplier =\n    attribute.doublePrecision && attribute.value instanceof Float64Array ? 2 : 1;\n  const size = attribute.size * precisionMultiplier;\n  const byteOffset = attribute.byteOffset;\n  const toStartIndices = attribute.startIndices;\n  const hasStartIndices = fromStartIndices && toStartIndices;\n  const toLength = getAttributeBufferLength(attribute, numInstances);\n  const isConstant = attribute.isConstant;\n\n  // check if buffer needs to be padded\n  if (!hasStartIndices && fromLength >= toLength) {\n    return;\n  }\n\n  const toData = isConstant\n    ? attribute.value\n    : (attribute.getBuffer() as Buffer).getData({srcByteOffset: byteOffset});\n  if (attribute.settings.normalized && !isConstant) {\n    const getter = getData;\n    getData = (value, chunk) => attribute.normalizeConstant(getter(value, chunk));\n  }\n\n  const getMissingData = isConstant\n    ? (i, chunk) => getData(toData, chunk)\n    : (i, chunk) => getData(toData.subarray(i, i + size), chunk);\n\n  const source = buffer.getData({length: fromLength});\n  const data = new Float32Array(toLength);\n  padArray({\n    source,\n    target: data,\n    sourceStartIndices: fromStartIndices,\n    targetStartIndices: toStartIndices,\n    size,\n    getData: getMissingData\n  });\n\n  // TODO: support offset in buffer.setData?\n  if (buffer.byteLength < data.byteLength + byteOffset) {\n    buffer.reallocate(data.byteLength + byteOffset);\n  }\n  buffer.subData({data, offset: byteOffset});\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport type {NumericArray} from '../types/types';\nimport type {AccessorFunction} from '../types/layer-props';\n\nconst EMPTY_ARRAY = [];\nconst placeholderArray = [];\n\n/*\n * Create an Iterable\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\n * and a \"context\" tracker from the given data\n */\nexport function createIterable(\n  data,\n  startRow = 0,\n  endRow = Infinity\n): {\n  iterable: Iterable<any>;\n  objectInfo: {\n    index: number;\n    data: any;\n    target: any[];\n  };\n} {\n  let iterable: Iterable<any> = EMPTY_ARRAY;\n\n  const objectInfo = {\n    index: -1,\n    data,\n    // visitor can optionally utilize this to avoid constructing a new array for every object\n    target: []\n  };\n\n  if (!data) {\n    iterable = EMPTY_ARRAY;\n  } else if (typeof data[Symbol.iterator] === 'function') {\n    // data is already an iterable\n    iterable = data;\n  } else if (data.length > 0) {\n    placeholderArray.length = data.length;\n    iterable = placeholderArray;\n  }\n\n  if (startRow > 0 || Number.isFinite(endRow)) {\n    iterable = (Array.isArray(iterable) ? iterable : Array.from(iterable)).slice(startRow, endRow);\n    objectInfo.index = startRow - 1;\n  }\n\n  return {iterable, objectInfo};\n}\n\n/*\n * Returns true if data is an async iterable object\n */\nexport function isAsyncIterable(data): boolean {\n  return data && data[Symbol.asyncIterator];\n}\n\n/*\n * Create an accessor function from a flat buffer that yields the value at each object index\n */\nexport function getAccessorFromBuffer(\n  typedArray,\n  options: {\n    size: number;\n    stride?: number;\n    offset?: number;\n    startIndices?: NumericArray;\n    nested?: boolean;\n  }\n): AccessorFunction<any, NumericArray> {\n  const {size, stride, offset, startIndices, nested} = options;\n  const bytesPerElement = typedArray.BYTES_PER_ELEMENT;\n  const elementStride = stride ? stride / bytesPerElement : size;\n  const elementOffset = offset ? offset / bytesPerElement : 0;\n  const vertexCount = Math.floor((typedArray.length - elementOffset) / elementStride);\n\n  return (_, {index, target}) => {\n    if (!startIndices) {\n      const sourceIndex = index * elementStride + elementOffset;\n      for (let j = 0; j < size; j++) {\n        target[j] = typedArray[sourceIndex + j];\n      }\n      return target;\n    }\n    const startIndex = startIndices[index];\n    const endIndex = startIndices[index + 1] || vertexCount;\n    let result;\n\n    if (nested) {\n      result = new Array(endIndex - startIndex);\n      for (let i = startIndex; i < endIndex; i++) {\n        const sourceIndex = i * elementStride + elementOffset;\n        target = new Array(size);\n        for (let j = 0; j < size; j++) {\n          target[j] = typedArray[sourceIndex + j];\n        }\n        result[i - startIndex] = target;\n      }\n    } else if (elementStride === size) {\n      result = typedArray.subarray(\n        startIndex * size + elementOffset,\n        endIndex * size + elementOffset\n      );\n    } else {\n      result = new typedArray.constructor((endIndex - startIndex) * size);\n      let targetIndex = 0;\n      for (let i = startIndex; i < endIndex; i++) {\n        const sourceIndex = i * elementStride + elementOffset;\n        for (let j = 0; j < size; j++) {\n          result[targetIndex++] = typedArray[sourceIndex + j];\n        }\n      }\n    }\n\n    return result;\n  };\n}\n","import TransitionInterpolator from './transition-interpolator';\nimport {lerp} from '@math.gl/core';\n\nimport type Viewport from '../viewports/viewport';\n\nconst DEFAULT_PROPS = ['longitude', 'latitude', 'zoom', 'bearing', 'pitch'];\nconst DEFAULT_REQUIRED_PROPS = ['longitude', 'latitude', 'zoom'];\n\ntype PropsWithAnchor = {\n  around?: number[];\n  aroundPosition?: number[];\n  [key: string]: any;\n};\n\n/**\n * Performs linear interpolation of two view states.\n */\nexport default class LinearInterpolator extends TransitionInterpolator {\n  opts: {\n    around?: number[];\n    makeViewport?: (props: Record<string, any>) => Viewport;\n  };\n\n  /**\n   * @param {Object} opts\n   * @param {Array} opts.transitionProps - list of props to apply linear transition to.\n   * @param {Array} opts.around - a screen point to zoom/rotate around.\n   * @param {Function} opts.makeViewport - construct a viewport instance with given props.\n   */\n  constructor(\n    opts:\n      | string[]\n      | {\n          transitionProps?:\n            | string[]\n            | {\n                compare: string[];\n                extract?: string[];\n                required?: string[];\n              };\n          around?: number[];\n          makeViewport?: (props: Record<string, any>) => Viewport;\n        } = {}\n  ) {\n    // Backward compatibility\n    const transitionProps = Array.isArray(opts) ? opts : opts.transitionProps;\n\n    const normalizedOpts = Array.isArray(opts) ? {} : opts;\n    normalizedOpts.transitionProps = Array.isArray(transitionProps)\n      ? {\n          compare: transitionProps,\n          required: transitionProps\n        }\n      : transitionProps || {\n          compare: DEFAULT_PROPS,\n          required: DEFAULT_REQUIRED_PROPS\n        };\n\n    super(normalizedOpts.transitionProps);\n    this.opts = normalizedOpts;\n  }\n\n  initializeProps(\n    startProps: Record<string, any>,\n    endProps: Record<string, any>\n  ): {\n    start: PropsWithAnchor;\n    end: PropsWithAnchor;\n  } {\n    const result = super.initializeProps(startProps, endProps);\n\n    const {makeViewport, around} = this.opts;\n    if (makeViewport && around) {\n      const startViewport = makeViewport(startProps);\n      const endViewport = makeViewport(endProps);\n      const aroundPosition = startViewport.unproject(around);\n      result.start.around = around;\n      Object.assign(result.end, {\n        around: endViewport.project(aroundPosition),\n        aroundPosition,\n        width: endProps.width,\n        height: endProps.height\n      });\n    }\n\n    return result;\n  }\n\n  interpolateProps(\n    startProps: PropsWithAnchor,\n    endProps: PropsWithAnchor,\n    t: number\n  ): Record<string, any> {\n    const propsInTransition = {};\n    for (const key of this._propsToExtract) {\n      propsInTransition[key] = lerp(startProps[key] || 0, endProps[key] || 0, t);\n    }\n\n    if (endProps.aroundPosition && this.opts.makeViewport) {\n      // Linear transition should be performed in common space\n      const viewport = this.opts.makeViewport({...endProps, ...propsInTransition});\n      Object.assign(\n        propsInTransition,\n        viewport.panByPosition(\n          endProps.aroundPosition,\n          // anchor point in current screen coordinates\n          lerp(startProps.around as number[], endProps.around as number[], t) as number[]\n        )\n      );\n    }\n    return propsInTransition;\n  }\n}\n","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","/* eslint-disable max-statements, max-depth, complexity, no-unused-expressions */\n\nimport {equals} from '@math.gl/core';\nimport type {NumericArray} from '@math.gl/core';\n\nexport const WINDING = {\n  CLOCKWISE: 1,\n  COUNTER_CLOCKWISE: -1\n} as const;\n\n/** Polygon representation where each point is represented as a separate array of positions. */\ntype PointsArray = NumericArray[];\n\n/** Segment visitor callback type for polygons defined with flat arrays, */\ntype SegmentVisitorFlat = (\n  p1x: number,\n  p1y: number,\n  p2x: number,\n  p2y: number,\n  i1: number,\n  i2: number\n) => void;\n\n/** Segment visitor callback type for polygons defined with array of points. */\nexport type SegmentVisitorPoints = (\n  p1: NumericArray,\n  p2: NumericArray,\n  i1: number,\n  i2: number\n) => void;\n\n/** Parameters of a polygon. */\ntype PolygonParams = {\n  start?: number; // Start index of the polygon in the array of positions. Defaults to 0.\n  end?: number; // End index of the polygon in the array of positions. Defaults to number of positions.\n  size?: number; // Size of a point, 2 (XZ) or 3 (XYZ). Defaults to 2. Affects only polygons stored in flat arrays.\n  isClosed?: boolean; // Indicates that the first point of the polygon is equal to the last point, and additional checks should be ommited.\n};\n\n/**\n * Checks winding direction of the polygon and reverses the polygon in case of opposite winding direction.\n * Note: points are modified in-place.\n * @param points An array that represents points of the polygon.\n * @param direction Requested winding direction. 1 is for clockwise, -1 for counterclockwise winding direction.\n * @param options Parameters of the polygon.\n * @return Returns true if the winding direction was changed.\n */\nexport function modifyPolygonWindingDirection(\n  points: NumericArray,\n  direction: number,\n  options: PolygonParams = {}\n): boolean {\n  const windingDirection = getPolygonWindingDirection(points, options);\n  if (windingDirection !== direction) {\n    reversePolygon(points, options);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns winding direction of the polygon.\n * @param points An array that represents points of the polygon.\n * @param options Parameters of the polygon.\n * @returns Winding direction of the polygon.\n */\nexport function getPolygonWindingDirection(\n  points: NumericArray,\n  options: PolygonParams = {}\n): number {\n  return Math.sign(getPolygonSignedArea(points, options));\n}\n\n/**\n * Returns signed area of the polygon.\n * @param points An array that represents points of the polygon.\n * @param options Parameters of the polygon.\n * @returns Signed area of the polygon.\n * https://en.wikipedia.org/wiki/Shoelace_formula\n */\nexport function getPolygonSignedArea(points: NumericArray, options: PolygonParams = {}): number {\n  const {start = 0, end = points.length} = options;\n  const dim = options.size || 2;\n  let area = 0;\n  for (let i = start, j = end - dim; i < end; i += dim) {\n    area += (points[i] - points[j]) * (points[i + 1] + points[j + 1]);\n    j = i;\n  }\n  return area / 2;\n}\n\n/**\n * Calls the visitor callback for each segment in the polygon.\n * @param points An array that represents points of the polygon\n * @param visitor A callback to call for each segment.\n * @param options Parameters of the polygon.\n */\nexport function forEachSegmentInPolygon(\n  points: NumericArray,\n  visitor: SegmentVisitorFlat,\n  options: PolygonParams = {}\n): void {\n  const {start = 0, end = points.length, size = 2, isClosed} = options;\n\n  const numPoints = (end - start) / size;\n  for (let i = 0; i < numPoints - 1; ++i) {\n    visitor(\n      points[start + i * size],\n      points[start + i * size + 1],\n      points[start + (i + 1) * size],\n      points[start + (i + 1) * size + 1],\n      i,\n      i + 1\n    );\n  }\n\n  const endPointIndex = start + (numPoints - 1) * size;\n  const isClosedEx =\n    isClosed ||\n    (equals(points[start], points[endPointIndex]) &&\n      equals(points[start + 1], points[endPointIndex + 1]));\n\n  if (!isClosedEx) {\n    visitor(\n      points[endPointIndex],\n      points[endPointIndex + 1],\n      points[start],\n      points[start + 1],\n      numPoints - 1,\n      0\n    );\n  }\n}\n\nfunction reversePolygon(\n  points: NumericArray,\n  options: {start?: number; end?: number; size?: number}\n): void {\n  const {start = 0, end = points.length, size = 2} = options;\n\n  const numPoints = (end - start) / size;\n  const numSwaps = Math.floor(numPoints / 2);\n  for (let i = 0; i < numSwaps; ++i) {\n    const b1 = start + i * size;\n    const b2 = start + (numPoints - 1 - i) * size;\n    for (let j = 0; j < size; ++j) {\n      const tmp = points[b1 + j];\n      points[b1 + j] = points[b2 + j];\n      points[b2 + j] = tmp;\n    }\n  }\n}\n\n/**\n * Checks winding direction of the polygon and reverses the polygon in case of opposite winding direction.\n * Note: points are modified in-place.\n * @param points Array of points that represent the polygon.\n * @param direction Requested winding direction. 1 is for clockwise, -1 for counterclockwise winding direction.\n * @param options Parameters of the polygon.\n * @return Returns true if the winding direction was changed.\n */\nexport function modifyPolygonWindingDirectionPoints(\n  points: PointsArray,\n  direction: number,\n  options: PolygonParams = {}\n): boolean {\n  const currentDirection = getPolygonWindingDirectionPoints(points, options);\n  if (currentDirection !== direction) {\n    points.reverse();\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns winding direction of the polygon.\n * @param points Array of points that represent the polygon.\n * @param options Parameters of the polygon.\n * @returns Winding direction of the polygon.\n */\nexport function getPolygonWindingDirectionPoints(\n  points: PointsArray,\n  options: PolygonParams = {}\n): number {\n  return Math.sign(getPolygonSignedAreaPoints(points, options));\n}\n\n/**\n * Returns signed area of the polygon.\n * @param points Array of points that represent the polygon.\n * @param options Parameters of the polygon.\n * @returns Signed area of the polygon.\n */\nexport function getPolygonSignedAreaPoints(\n  points: PointsArray,\n  options: PolygonParams = {}\n): number {\n  // https://en.wikipedia.org/wiki/Shoelace_formula\n  const {start = 0, end = points.length} = options;\n  let area = 0;\n  for (let i = start, j = end - 1; i < end; ++i) {\n    area += (points[i][0] - points[j][0]) * (points[i][1] + points[j][1]);\n    j = i;\n  }\n  return area / 2;\n}\n\n/**\n * Calls visitor callback for each segment in the polygon.\n * @param points Array of points that represent the polygon.\n * @param visitor A callback to call for each segment.\n * @param options Parameters of the polygon.\n */\nexport function forEachSegmentInPolygonPoints(\n  points: PointsArray,\n  visitor: SegmentVisitorPoints,\n  options: PolygonParams = {}\n): void {\n  const {start = 0, end = points.length, isClosed} = options;\n  for (let i = start; i < end - 1; ++i) {\n    visitor(points[i], points[i + 1], i, i + 1);\n  }\n\n  const isClosedEx = isClosed || equals(points[end - 1], points[0]);\n  if (!isClosedEx) {\n    visitor(points[end - 1], points[0], end - 1, 0);\n  }\n}\n","import type {NumericArray} from '@math.gl/core';\n\nexport function push(target: number[], source: number[]): boolean {\n  const size = source.length;\n  const startIndex = target.length;\n\n  // dedupe, if source is the same point as the last vertex\n  if (startIndex > 0) {\n    let isDuplicate = true;\n    for (let i = 0; i < size; i++) {\n      if (target[startIndex - size + i] !== source[i]) {\n        isDuplicate = false;\n        break;\n      }\n    }\n    if (isDuplicate) {\n      return false;\n    }\n  }\n\n  for (let i = 0; i < size; i++) {\n    target[startIndex + i] = source[i];\n  }\n  return true;\n}\n\nexport function copy(target: number[], source: Readonly<NumericArray>): void {\n  const size = source.length;\n  for (let i = 0; i < size; i++) {\n    target[i] = source[i];\n  }\n}\n\nexport function getPointAtIndex(\n  positions: Readonly<NumericArray>,\n  index: number,\n  size: number,\n  offset: number,\n  out: number[] = []\n): number[] {\n  const startI = offset + index * size;\n  for (let i = 0; i < size; i++) {\n    out[i] = positions[startI + i];\n  }\n  return out;\n}\n","/*\n  Adapted from https://github.com/mapbox/lineclip to work with flat arrays\n  and 3d positions\n\n  ISC License\n\n  Copyright (c) 2015, Mapbox\n\n  Permission to use, copy, modify, and/or distribute this software for any purpose\n  with or without fee is hereby granted, provided that the above copyright notice\n  and this permission notice appear in all copies.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND\n  FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS\n  OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER\n  TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF\n  THIS SOFTWARE.\n\n */\n\n/* eslint-disable max-statements, max-depth, complexity */\n\nimport {push, copy, getPointAtIndex} from './utils';\nimport type {NumericArray} from '@math.gl/core';\n\nexport type BoundingBox = [number, number, number, number];\n\n/**\n * Cohen-Sutherland line clipping algorithm, adapted to efficiently\n * handle polylines rather than just segments\n */\nexport function clipPolyline(\n  positions: Readonly<NumericArray>,\n  bbox: BoundingBox,\n  options?: {\n    size?: number;\n    startIndex?: number;\n    endIndex?: number;\n  }\n): number[][] {\n  const {size = 2, startIndex = 0, endIndex = positions.length} = options || {};\n  const numPoints = (endIndex - startIndex) / size;\n  const result: number[][] = [];\n  let part: number[] = [];\n  let a: number[];\n  let b: number[];\n  let codeA: number = -1;\n  let codeB: number;\n  let lastCode: number;\n\n  for (let i = 1; i < numPoints; i++) {\n    a = getPointAtIndex(positions, i - 1, size, startIndex, a);\n    b = getPointAtIndex(positions, i, size, startIndex, b);\n    if (codeA < 0) {\n      codeA = bitCode(a, bbox);\n    }\n    codeB = lastCode = bitCode(b, bbox);\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      if (!(codeA | codeB)) {\n        // accept\n        push(part, a);\n\n        if (codeB !== lastCode) {\n          // segment went outside\n          push(part, b);\n\n          if (i < numPoints - 1) {\n            // start a new line\n            result.push(part);\n            part = [];\n          }\n        } else if (i === numPoints - 1) {\n          push(part, b);\n        }\n        break;\n      } else if (codeA & codeB) {\n        // trivial reject\n        break;\n      } else if (codeA) {\n        // a outside, intersect with clip edge\n        intersect(a, b, codeA, bbox, a);\n        codeA = bitCode(a, bbox);\n      } else {\n        // b outside\n        intersect(a, b, codeB, bbox, b);\n        codeB = bitCode(b, bbox);\n      }\n    }\n\n    codeA = lastCode;\n  }\n\n  if (part.length) result.push(part);\n\n  return result;\n}\n\n/**\n * Sutherland-Hodgeman polygon clipping algorithm\n * polygon must be closed (first vertex == last vertex)\n */\nexport function clipPolygon(\n  positions: Readonly<NumericArray>,\n  bbox: BoundingBox,\n  options?: {\n    size?: number;\n    startIndex?: number;\n    endIndex?: number;\n  }\n): number[] {\n  const {size = 2, endIndex = positions.length} = options || {};\n  let {startIndex = 0} = options || {};\n  let numPoints = (endIndex - startIndex) / size;\n  let result: number[];\n  let p: number[];\n  let prev: number[];\n  let inside: boolean;\n  let prevInside: boolean;\n\n  // clip against each side of the clip rectangle\n  for (let edge = 1; edge <= 8; edge *= 2) {\n    result = [];\n    prev = getPointAtIndex(positions, numPoints - 1, size, startIndex, prev);\n    prevInside = !(bitCode(prev, bbox) & edge);\n\n    for (let i = 0; i < numPoints; i++) {\n      p = getPointAtIndex(positions, i, size, startIndex, p);\n      inside = !(bitCode(p, bbox) & edge);\n\n      // if segment goes through the clip window, add an intersection\n      if (inside !== prevInside) push(result, intersect(prev, p, edge, bbox));\n\n      if (inside) push(result, p); // add a point if it's inside\n\n      copy(prev, p);\n      prevInside = inside;\n    }\n\n    // close loop\n    positions = result;\n    startIndex = 0;\n    numPoints = result.length / size;\n\n    if (!numPoints) break;\n  }\n\n  return result;\n}\n\n/** intersect a segment against one of the 4 lines that make up the bbox */\n\nexport function intersect(\n  a: number[],\n  b: number[],\n  edge: number,\n  bbox: BoundingBox,\n  out: number[] = []\n): number[] {\n  let t;\n  // Forces out[snapI] to be on the bbox edge\n  // Interpolation introduces precision issue which may cause lineclip to be\n  // stuck in an infinite loop\n  let snap: number;\n  if (edge & 8) {\n    // top\n    t = (bbox[3] - a[1]) / (b[1] - a[1]);\n    snap = 3;\n  } else if (edge & 4) {\n    // bottom\n    t = (bbox[1] - a[1]) / (b[1] - a[1]);\n    snap = 1;\n  } else if (edge & 2) {\n    // right\n    t = (bbox[2] - a[0]) / (b[0] - a[0]);\n    snap = 2;\n  } else if (edge & 1) {\n    // left\n    t = (bbox[0] - a[0]) / (b[0] - a[0]);\n    snap = 0;\n  } else {\n    return null;\n  }\n  for (let i = 0; i < a.length; i++) {\n    out[i] = (snap & 1) === i ? bbox[snap] : t * (b[i] - a[i]) + a[i];\n  }\n  return out;\n}\n\n/**\n * bit code reflects the point position relative to the bbox:\n *         left  mid  right\n *    top  1001  1000  1010\n *    mid  0001  0000  0010\n * bottom  0101  0100  0110\n */\nexport function bitCode(p: number[], bbox: BoundingBox): number {\n  let code = 0;\n\n  if (p[0] < bbox[0]) code |= 1;\n  // left\n  else if (p[0] > bbox[2]) code |= 2; // right\n\n  if (p[1] < bbox[1]) code |= 4;\n  // bottom\n  else if (p[1] > bbox[3]) code |= 8; // top\n\n  return code;\n}\n","/* eslint-disable max-statements, max-depth, complexity, no-unused-expressions */\nimport {bitCode, intersect, BoundingBox} from './lineclip';\nimport {getPointAtIndex, copy, push} from './utils';\n\nimport type {NumericArray} from '@math.gl/core';\n\nexport type Polygon = {\n  positions: Readonly<NumericArray>;\n  holeIndices?: Readonly<NumericArray>;\n  edgeTypes?: Readonly<NumericArray>;\n};\n\nexport function cutPolylineByGrid(\n  positions: NumericArray,\n  options?: {\n    size?: number;\n    broken?: boolean;\n    gridResolution?: number;\n    gridOffset?: [number, number];\n    startIndex?: number;\n    endIndex?: number;\n  }\n): number[] | number[][] {\n  const {\n    size = 2,\n    broken = false,\n    gridResolution = 10,\n    gridOffset = [0, 0],\n    startIndex = 0,\n    endIndex = positions.length\n  } = options || {};\n  const numPoints = (endIndex - startIndex) / size;\n  let part: number[] = [];\n  const result: number[][] = [part];\n  const a: number[] = getPointAtIndex(positions, 0, size, startIndex);\n  let b: number[];\n  let codeB: number;\n  const cell: BoundingBox = getGridCell(a, gridResolution, gridOffset, []);\n  const scratchPoint: number[] = [];\n  push(part, a);\n\n  for (let i = 1; i < numPoints; i++) {\n    b = getPointAtIndex(positions, i, size, startIndex, b);\n    codeB = bitCode(b, cell);\n\n    while (codeB) {\n      // find the intersection with the current cell\n      intersect(a, b, codeB, cell, scratchPoint);\n      const codeAlt = bitCode(scratchPoint, cell);\n      if (codeAlt) {\n        intersect(a, scratchPoint, codeAlt, cell, scratchPoint);\n        codeB = codeAlt;\n      }\n      push(part, scratchPoint);\n      // move to the next cell\n      copy(a, scratchPoint);\n\n      moveToNeighborCell(cell, gridResolution, codeB);\n      if (broken && part.length > size) {\n        part = [];\n        result.push(part);\n        push(part, a);\n      }\n\n      codeB = bitCode(b, cell);\n    }\n\n    push(part, b);\n    copy(a, b);\n  }\n\n  return broken ? result : result[0];\n}\n\nconst TYPE_INSIDE = 0;\nconst TYPE_BORDER = 1;\n\nfunction concatInPlace(arr1: number[], arr2: number[]): number[] {\n  for (let i = 0; i < arr2.length; i++) {\n    arr1.push(arr2[i]);\n  }\n  return arr1;\n}\n\nexport function cutPolygonByGrid(\n  positions: Readonly<NumericArray>,\n  holeIndices: Readonly<NumericArray> | null = null,\n  options?: {\n    size?: number;\n    gridResolution?: number;\n    gridOffset?: [number, number];\n    edgeTypes?: boolean;\n  }\n): Polygon[] {\n  if (!positions.length) {\n    // input is empty\n    return [];\n  }\n  const {size = 2, gridResolution = 10, gridOffset = [0, 0], edgeTypes = false} = options || {};\n  const result: Polygon[] = [];\n  const queue: {pos: Readonly<NumericArray>; types: number[]; holes: Readonly<NumericArray>}[] = [\n    {\n      pos: positions,\n      types: edgeTypes ? (new Array(positions.length / size).fill(TYPE_BORDER) as number[]) : null,\n      holes: holeIndices || []\n    }\n  ];\n  const bbox: number[][] = [[], []];\n  // @ts-ignore\n  let cell: BoundingBox = [];\n\n  // Recursively bisect polygon until every part fit in a single grid cell\n  while (queue.length) {\n    const {pos, types, holes} = queue.shift();\n\n    // Get the bounding box of the outer polygon\n    getBoundingBox(pos, size, holes[0] || pos.length, bbox);\n    cell = getGridCell(bbox[0], gridResolution, gridOffset, cell);\n    const code = bitCode(bbox[1], cell);\n\n    if (code) {\n      // Split the outer ring at the boundary\n      let parts = bisectPolygon(pos, types, size, 0, holes[0] || pos.length, cell, code);\n      const polygonLow = {pos: parts[0].pos, types: parts[0].types, holes: []};\n      const polygonHigh = {pos: parts[1].pos, types: parts[1].types, holes: []};\n      queue.push(polygonLow, polygonHigh);\n\n      // Split each hole at the boundary\n      for (let i = 0; i < holes.length; i++) {\n        parts = bisectPolygon(pos, types, size, holes[i], holes[i + 1] || pos.length, cell, code);\n\n        if (parts[0]) {\n          polygonLow.holes.push(polygonLow.pos.length);\n          polygonLow.pos = concatInPlace(polygonLow.pos, parts[0].pos);\n          if (edgeTypes) {\n            polygonLow.types = concatInPlace(polygonLow.types, parts[0].types);\n          }\n        }\n        if (parts[1]) {\n          polygonHigh.holes.push(polygonHigh.pos.length);\n          polygonHigh.pos = concatInPlace(polygonHigh.pos, parts[1].pos);\n          if (edgeTypes) {\n            polygonHigh.types = concatInPlace(polygonHigh.types, parts[1].types);\n          }\n        }\n      }\n    } else {\n      // Polygon fits in a single cell, no more processing required\n      const polygon: Polygon = {positions: pos};\n      if (edgeTypes) {\n        polygon.edgeTypes = types;\n      }\n      if (holes.length) {\n        polygon.holeIndices = holes;\n      }\n\n      result.push(polygon);\n    }\n  }\n  return result;\n}\n\n// edgeTypes:\n// TYPE_BORDER - edge from the original polygon\n// TYPE_INSIDE - inside the original polygon\n// eslint-disable-next-line max-params\nfunction bisectPolygon(\n  positions: Readonly<NumericArray>,\n  edgeTypes: number[] | undefined,\n  size: number,\n  startIndex: number,\n  endIndex: number,\n  bbox: BoundingBox,\n  edge: number\n): {\n  pos: number[];\n  types?: number[];\n}[] {\n  const numPoints = (endIndex - startIndex) / size;\n  const resultLow: number[] = [];\n  const resultHigh: number[] = [];\n  const typesLow: number[] = [];\n  const typesHigh: number[] = [];\n  const scratchPoint: number[] = [];\n\n  let p: number[];\n  let side: number;\n  let type: number;\n  const prev = getPointAtIndex(positions, numPoints - 1, size, startIndex);\n  let prevSide = Math.sign(edge & 8 ? prev[1] - bbox[3] : prev[0] - bbox[2]);\n  let prevType = edgeTypes && edgeTypes[numPoints - 1];\n  let lowPointCount = 0;\n  let highPointCount = 0;\n\n  for (let i = 0; i < numPoints; i++) {\n    p = getPointAtIndex(positions, i, size, startIndex, p);\n    side = Math.sign(edge & 8 ? p[1] - bbox[3] : p[0] - bbox[2]);\n    type = edgeTypes && edgeTypes[startIndex / size + i];\n\n    // if segment goes through the boundary, add an intersection\n    if (side && prevSide && prevSide !== side) {\n      intersect(prev, p, edge, bbox, scratchPoint);\n      push(resultLow, scratchPoint) && typesLow.push(prevType);\n      push(resultHigh, scratchPoint) && typesHigh.push(prevType);\n    }\n\n    if (side <= 0) {\n      push(resultLow, p) && typesLow.push(type);\n      lowPointCount -= side;\n    } else if (typesLow.length) {\n      typesLow[typesLow.length - 1] = TYPE_INSIDE;\n    }\n    if (side >= 0) {\n      push(resultHigh, p) && typesHigh.push(type);\n      highPointCount += side;\n    } else if (typesHigh.length) {\n      typesHigh[typesHigh.length - 1] = TYPE_INSIDE;\n    }\n\n    copy(prev, p);\n    prevSide = side;\n    prevType = type;\n  }\n\n  return [\n    lowPointCount ? {pos: resultLow, types: edgeTypes && typesLow} : null,\n    highPointCount ? {pos: resultHigh, types: edgeTypes && typesHigh} : null\n  ];\n}\n\nfunction getGridCell(\n  p: number[],\n  gridResolution: number,\n  gridOffset: [number, number],\n  out: number[]\n): BoundingBox {\n  const left = Math.floor((p[0] - gridOffset[0]) / gridResolution) * gridResolution + gridOffset[0];\n  const bottom =\n    Math.floor((p[1] - gridOffset[1]) / gridResolution) * gridResolution + gridOffset[1];\n  out[0] = left;\n  out[1] = bottom;\n  out[2] = left + gridResolution;\n  out[3] = bottom + gridResolution;\n  return out as BoundingBox;\n}\n\nfunction moveToNeighborCell(cell: number[], gridResolution: number, edge: number): void {\n  if (edge & 8) {\n    // top\n    cell[1] += gridResolution;\n    cell[3] += gridResolution;\n  } else if (edge & 4) {\n    // bottom\n    cell[1] -= gridResolution;\n    cell[3] -= gridResolution;\n  } else if (edge & 2) {\n    // right\n    cell[0] += gridResolution;\n    cell[2] += gridResolution;\n  } else if (edge & 1) {\n    // left\n    cell[0] -= gridResolution;\n    cell[2] -= gridResolution;\n  }\n}\n\nfunction getBoundingBox(\n  positions: Readonly<NumericArray>,\n  size: number,\n  endIndex: number,\n  out: number[][]\n): number[][] {\n  let minX = Infinity;\n  let maxX = -Infinity;\n  let minY = Infinity;\n  let maxY = -Infinity;\n\n  for (let i = 0; i < endIndex; i += size) {\n    const x = positions[i];\n    const y = positions[i + 1];\n    minX = x < minX ? x : minX;\n    maxX = x > maxX ? x : maxX;\n    minY = y < minY ? y : minY;\n    maxY = y > maxY ? y : maxY;\n  }\n\n  out[0][0] = minX;\n  out[0][1] = minY;\n  out[1][0] = maxX;\n  out[1][1] = maxY;\n  return out;\n}\n","import {cutPolylineByGrid, cutPolygonByGrid} from './cut-by-grid';\nimport {getPointAtIndex, push} from './utils';\nimport type {Polygon} from './cut-by-grid';\nimport type {NumericArray} from '@math.gl/core';\n\n// https://en.wikipedia.org/wiki/Web_Mercator_projection\nconst DEFAULT_MAX_LATITUDE = 85.051129;\n\n/** https://user-images.githubusercontent.com/2059298/78465769-938b7a00-76ae-11ea-9b95-1f4c26425ab9.png */\nexport function cutPolylineByMercatorBounds(\n  positions: Readonly<NumericArray>,\n  options?: {\n    size?: number;\n    startIndex?: number;\n    endIndex?: number;\n    normalize?: boolean;\n  }\n): number[][] {\n  const {size = 2, startIndex = 0, endIndex = positions.length, normalize = true} = options || {};\n\n  // Remap longitudes so that each segment takes the shorter path\n  const newPositions = positions.slice(startIndex, endIndex);\n  wrapLongitudesForShortestPath(newPositions, size, 0, endIndex - startIndex);\n\n  const parts = cutPolylineByGrid(newPositions, {\n    size,\n    broken: true,\n    gridResolution: 360,\n    gridOffset: [-180, -180]\n  }) as number[][];\n\n  if (normalize) {\n    // Each part is guaranteed to be in a single copy of the world\n    // Map longitudes back to [-180, 180]\n    for (const part of parts) {\n      shiftLongitudesIntoRange(part, size);\n    }\n  }\n  return parts;\n}\n\n/** https://user-images.githubusercontent.com/2059298/78465770-94241080-76ae-11ea-809a-6a8534dac1d9.png */\nexport function cutPolygonByMercatorBounds(\n  positions: Readonly<NumericArray>,\n  holeIndices: Readonly<NumericArray> | null = null,\n  options?: {\n    size?: number;\n    normalize?: boolean;\n    maxLatitude?: number;\n    edgeTypes?: boolean;\n  }\n): Polygon[] {\n  const {size = 2, normalize = true, edgeTypes = false} = options || {};\n  holeIndices = holeIndices || [];\n  const newPositions: number[] = [];\n  const newHoleIndices: number[] = [];\n  let srcStartIndex = 0;\n  let targetIndex = 0;\n\n  for (let ringIndex = 0; ringIndex <= holeIndices.length; ringIndex++) {\n    // srcStartIndex/srcEndIndex define the ring in the original positions\n    const srcEndIndex = holeIndices[ringIndex] || positions.length;\n    // targetStartIndex/targetIndex define the ring in newPositions\n    const targetStartIndex = targetIndex;\n\n    // In case the ring contains a pole (e.g. Antarctica), we'll have to insert vertices\n    // The insertion point is defined by the vertex closest to the pole\n    // Split the the ring by the insertion point when copying to newPositions\n    const splitIndex = findSplitIndex(positions, size, srcStartIndex, srcEndIndex);\n    for (let i = splitIndex; i < srcEndIndex; i++) {\n      newPositions[targetIndex++] = positions[i];\n    }\n    for (let i = srcStartIndex; i < splitIndex; i++) {\n      newPositions[targetIndex++] = positions[i];\n    }\n\n    // Remap longitudes so that each segment takes the shorter path\n    wrapLongitudesForShortestPath(newPositions, size, targetStartIndex, targetIndex);\n\n    // Handle the case when the ring contains a pole\n    insertPoleVertices(newPositions, size, targetStartIndex, targetIndex, options?.maxLatitude);\n\n    srcStartIndex = srcEndIndex;\n    newHoleIndices[ringIndex] = targetIndex;\n  }\n  newHoleIndices.pop();\n\n  const parts = cutPolygonByGrid(newPositions, newHoleIndices, {\n    size,\n    gridResolution: 360,\n    gridOffset: [-180, -180],\n    edgeTypes\n  });\n\n  if (normalize) {\n    // Each part is guaranteed to be in a single copy of the world\n    // Map longitudes back to [-180, 180]\n    for (const part of parts) {\n      // @ts-expect-error (mutates readonly array) May mutate newPositions, which is created by us\n      shiftLongitudesIntoRange(part.positions, size);\n    }\n  }\n  return parts;\n}\n\n/* Helpers */\n\n// See comments for insertPoleVertices\nfunction findSplitIndex(\n  positions: Readonly<NumericArray>,\n  size: number,\n  startIndex: number,\n  endIndex: number\n): number {\n  let maxLat = -1;\n  let pointIndex = -1;\n  for (let i = startIndex + 1; i < endIndex; i += size) {\n    const lat = Math.abs(positions[i]);\n    if (lat > maxLat) {\n      maxLat = lat;\n      pointIndex = i - 1;\n    }\n  }\n  return pointIndex;\n}\n\n// https://user-images.githubusercontent.com/2059298/78857483-5987e400-79de-11ea-98fc-0631287a8431.png\n//\n// If the polygon contains a pole, to tesselate it correctly, we need to insert the edge\n// of map into the polygon. This requires adding two vertices that represent the pole, by\n// drawing a perpendicular line to the Mercator map edge from a selected vertex on the ring.\n//\n// We select the insertion position carefully so that the inserted line segments do not\n// intersect with the ring itself. This is ensured by findSplitIndex, which returns the\n// vertex closest to the pole.\nfunction insertPoleVertices(\n  positions: number[],\n  size: number,\n  startIndex: number,\n  endIndex: number,\n  maxLatitude: number = DEFAULT_MAX_LATITUDE\n): void {\n  // Check if the ring contains a pole\n  const firstLng = positions[startIndex];\n  const lastLng = positions[endIndex - size];\n  if (Math.abs(firstLng - lastLng) > 180) {\n    // The ring does not make a round trip\n    // Add the nearest pole to the vertices so that the polygon tesselates correctly\n    const p = getPointAtIndex(positions, 0, size, startIndex);\n    // Copy the first vertex to the world of the last vertex\n    p[0] += Math.round((lastLng - firstLng) / 360) * 360;\n    push(positions, p);\n    // Project the copied vertex to the edge of the map\n    p[1] = Math.sign(p[1]) * maxLatitude;\n    push(positions, p);\n    // Project the first vertex to the edge of the map\n    p[0] = firstLng;\n    push(positions, p);\n  }\n}\n\nfunction wrapLongitudesForShortestPath(\n  positions: NumericArray,\n  size: number,\n  startIndex: number,\n  endIndex: number\n): void {\n  let prevLng: number = positions[0];\n  let lng: number;\n  for (let i = startIndex; i < endIndex; i += size) {\n    lng = positions[i];\n    const delta = lng - prevLng;\n    if (delta > 180 || delta < -180) {\n      lng -= Math.round(delta / 360) * 360;\n    }\n    positions[i] = prevLng = lng;\n  }\n}\n\nfunction shiftLongitudesIntoRange(positions: NumericArray, size: number): void {\n  let refLng: number;\n  const pointCount = positions.length / size;\n\n  // Find a longitude that is not on the edge of a world\n  // Which we will use to determine which world copy it is\n  for (let i = 0; i < pointCount; i++) {\n    refLng = positions[i * size];\n    if ((refLng + 180) % 360 !== 0) {\n      break;\n    }\n  }\n\n  const delta = -Math.round(refLng / 360) * 360;\n  if (delta === 0) {\n    return;\n  }\n  for (let i = 0; i < pointCount; i++) {\n    positions[i * size] += delta;\n  }\n}\n","// math.gl, MIT License\nimport {NumericArray} from '@math.gl/types';\nimport {ConfigurationOptions, config, formatValue, equals, isArray} from '../../lib/common';\n\n/** Base class for vectors and matrices */\nexport default abstract class MathArray extends Array<number> {\n  /** Number of elements (values) in this array */\n  abstract get ELEMENTS(): number;\n\n  abstract copy(vector: Readonly<NumericArray>): this;\n\n  abstract fromObject(object: object): this;\n\n  // Common methods\n\n  /**\n   * Clone the current object\n   * @returns a new copy of this object\n   */\n  clone(): this {\n    // @ts-expect-error TS2351: Cannot use 'new' with an expression whose type lacks a call or construct signature.\n    return new this.constructor().copy(this); // eslint-disable-line\n  }\n\n  fromArray(array: Readonly<NumericArray>, offset: number = 0): this {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = array[i + offset];\n    }\n    return this.check();\n  }\n\n  toArray<TypedArray>(targetArray: TypedArray, offset?: number): TypedArray;\n  toArray(targetArray?: number[], offset?: number): NumericArray;\n\n  toArray(targetArray: NumericArray = [], offset: number = 0): NumericArray {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      targetArray[offset + i] = this[i];\n    }\n    return targetArray;\n  }\n\n  from(arrayOrObject: Readonly<NumericArray> | object): this {\n    return Array.isArray(arrayOrObject) ? this.copy(arrayOrObject) : this.fromObject(arrayOrObject);\n  }\n\n  to<T extends NumericArray | object>(arrayOrObject: T): T {\n    // @ts-ignore\n    if (arrayOrObject === this) {\n      return this;\n    }\n    // @ts-expect-error TS2339: Property 'toObject' does not exist on type 'MathArray'.\n    return isArray(arrayOrObject) ? this.toArray(arrayOrObject) : this.toObject(arrayOrObject);\n  }\n\n  toTarget(target: this): this {\n    return target ? this.to(target) : this;\n  }\n\n  /** @deprecated */\n  toFloat32Array(): Float32Array {\n    return new Float32Array(this);\n  }\n\n  toString(): string {\n    return this.formatString(config);\n  }\n\n  /** Formats string according to options */\n  formatString(opts: ConfigurationOptions): string {\n    let string = '';\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      string += (i > 0 ? ', ' : '') + formatValue(this[i], opts);\n    }\n    return `${opts.printTypes ? this.constructor.name : ''}[${string}]`;\n  }\n\n  equals(array: Readonly<NumericArray>): boolean {\n    if (!array || this.length !== array.length) {\n      return false;\n    }\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      if (!equals(this[i], array[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  exactEquals(array: Readonly<NumericArray>): boolean {\n    if (!array || this.length !== array.length) {\n      return false;\n    }\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      if (this[i] !== array[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  // Modifiers\n\n  /** Negates all values in this object */\n  negate(): this {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = -this[i];\n    }\n    return this.check();\n  }\n\n  /** Linearly interpolates between two values */\n  lerp(a: Readonly<NumericArray>, t: number): this;\n  lerp(a: Readonly<NumericArray>, b: Readonly<NumericArray>, t: number): this;\n\n  lerp(a: Readonly<NumericArray>, b: Readonly<NumericArray> | number, t?: number): this {\n    if (t === undefined) {\n      return this.lerp(this, a, b as number);\n    }\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      const ai = a[i];\n      this[i] = ai + t * (b[i] - ai);\n    }\n    return this.check();\n  }\n\n  /** Minimal */\n  min(vector: Readonly<NumericArray>): this {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = Math.min(vector[i], this[i]);\n    }\n    return this.check();\n  }\n\n  /** Maximal */\n  max(vector: Readonly<NumericArray>): this {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = Math.max(vector[i], this[i]);\n    }\n    return this.check();\n  }\n\n  clamp(minVector: Readonly<NumericArray>, maxVector: Readonly<NumericArray>): this {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = Math.min(Math.max(this[i], minVector[i]), maxVector[i]);\n    }\n    return this.check();\n  }\n\n  add(...vectors: Readonly<NumericArray>[]): this {\n    for (const vector of vectors) {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] += vector[i];\n      }\n    }\n    return this.check();\n  }\n\n  subtract(...vectors: Readonly<NumericArray>[]): this {\n    for (const vector of vectors) {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] -= vector[i];\n      }\n    }\n    return this.check();\n  }\n\n  scale(scale: number | Readonly<NumericArray>): this {\n    if (typeof scale === 'number') {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] *= scale;\n      }\n    } else {\n      for (let i = 0; i < this.ELEMENTS && i < scale.length; ++i) {\n        this[i] *= scale[i];\n      }\n    }\n    return this.check();\n  }\n\n  /**\n   * Multiplies all elements by `scale`\n   * Note: `Matrix4.multiplyByScalar` only scales its 3x3 \"minor\"\n   */\n  multiplyByScalar(scalar: number): this {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] *= scalar;\n    }\n    return this.check();\n  }\n\n  // Debug checks\n\n  /** Throws an error if array length is incorrect or contains illegal values */\n  check(): this {\n    if (config.debug && !this.validate()) {\n      throw new Error(`math.gl: ${this.constructor.name} some fields set to invalid numbers'`);\n    }\n    return this;\n  }\n\n  /** Returns false if the array length is incorrect or contains illegal values */\n  validate(): boolean {\n    let valid = this.length === this.ELEMENTS;\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      valid = valid && Number.isFinite(this[i]);\n    }\n    return valid;\n  }\n\n  // three.js compatibility\n\n  /** @deprecated */\n  sub(a: Readonly<NumericArray>): this {\n    return this.subtract(a);\n  }\n\n  /** @deprecated */\n  setScalar(a: number): this {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = a;\n    }\n    return this.check();\n  }\n\n  /** @deprecated */\n  addScalar(a: number): this {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] += a;\n    }\n    return this.check();\n  }\n\n  /** @deprecated */\n  subScalar(a: number): this {\n    return this.addScalar(-a);\n  }\n\n  /** @deprecated */\n  multiplyScalar(scalar: number): this {\n    // Multiplies all elements\n    // `Matrix4.scale` only scales its 3x3 \"minor\"\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] *= scalar;\n    }\n    return this.check();\n  }\n\n  /** @deprecated */\n  divideScalar(a: number): this {\n    return this.multiplyByScalar(1 / a);\n  }\n\n  /** @deprecated */\n  clampScalar(min: number, max: number): this {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = Math.min(Math.max(this[i], min), max);\n    }\n    return this.check();\n  }\n\n  /** @deprecated */\n  get elements(): NumericArray {\n    return this;\n  }\n}\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport {NumberArray} from '@math.gl/types';\nimport {config} from './common';\n\nexport function validateVector(v: NumberArray, length: number): boolean {\n  if (v.length !== length) {\n    return false;\n  }\n  // Could be arguments \"array\" (v.every not availasble)\n  for (let i = 0; i < v.length; ++i) {\n    if (!Number.isFinite(v[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function checkNumber(value: any): number {\n  if (!Number.isFinite(value)) {\n    throw new Error(`Invalid number ${value}`);\n  }\n  return value as number;\n}\n\nexport function checkVector<T extends NumberArray>(\n  v: T,\n  length: number,\n  callerName: string = ''\n): T {\n  if (config.debug && !validateVector(v, length)) {\n    throw new Error(`math.gl: ${callerName} some fields set to invalid numbers'`);\n  }\n  return v;\n}\n\nconst map = {};\n\nexport function deprecated(method: string, version: string): void {\n  if (!map[method]) {\n    map[method] = true;\n    // eslint-disable-next-line\n    console.warn(\n      `${method} has been removed in version ${version}, see upgrade guide for more information`\n    );\n  }\n}\n","// Copyright (c) 2017 Uber Technologies, Inc.\n// MIT License\nimport {NumericArray} from '@math.gl/types';\nimport MathArray from './math-array';\nimport {checkNumber} from '../../lib/validators';\nimport {config} from '../../lib/common';\n\n/** Base class for matrices */\nexport default abstract class Matrix extends MathArray {\n  abstract get RANK(): number;\n\n  // fromObject(object) {\n  //   const array = object.elements;\n  //   return this.fromRowMajor(array);\n  // }\n  // toObject(object) {\n  //   const array = object.elements;\n  //   this.toRowMajor(array);\n  //   return object;\n  // }\n\n  // TODO better override formatString?\n  toString(): string {\n    let string = '[';\n    if (config.printRowMajor) {\n      string += 'row-major:';\n      for (let row = 0; row < this.RANK; ++row) {\n        for (let col = 0; col < this.RANK; ++col) {\n          string += ` ${this[col * this.RANK + row]}`;\n        }\n      }\n    } else {\n      string += 'column-major:';\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        string += ` ${this[i]}`;\n      }\n    }\n    string += ']';\n    return string;\n  }\n\n  getElementIndex(row: number, col: number): number {\n    return col * this.RANK + row;\n  }\n\n  // By default assumes row major indices\n  getElement(row: number, col: number): number {\n    return this[col * this.RANK + row];\n  }\n\n  // By default assumes row major indices\n  setElement(row: number, col: number, value: number): this {\n    this[col * this.RANK + row] = checkNumber(value);\n    return this;\n  }\n  getColumn<NumArrayT>(columnIndex: number, result: NumArrayT): NumArrayT;\n  getColumn(columnIndex: number): number[];\n\n  getColumn(columnIndex: number, result: number[] = new Array(this.RANK).fill(-0)): number[] {\n    const firstIndex = columnIndex * this.RANK;\n    for (let i = 0; i < this.RANK; ++i) {\n      result[i] = this[firstIndex + i];\n    }\n    return result;\n  }\n\n  setColumn(columnIndex: number, columnVector: Readonly<NumericArray>): this {\n    const firstIndex = columnIndex * this.RANK;\n    for (let i = 0; i < this.RANK; ++i) {\n      this[firstIndex + i] = columnVector[i];\n    }\n    return this;\n  }\n}\n","/**\n * Common utilities\n * @module glMatrix\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import * as glMatrix from \"./common.js\";\n/**\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\n * Calculates the determinant of a mat4\n *\n * @param {ReadonlyMat4} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {mat4} out\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 from a dual quat.\n *\n * @param {mat4} out Matrix\n * @param {ReadonlyQuat2} a Dual Quaternion\n * @returns {mat4} mat4 receiving operation result\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveNO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\n * Alias for {@link mat4.perspectiveNO}\n * @function\n */\n\nexport var perspective = perspectiveNO;\n/**\n * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveZO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = far * nf;\n    out[14] = far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -near;\n  }\n\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoNO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Alias for {@link mat4.orthoNO}\n * @function\n */\n\nexport var ortho = orthoNO;\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoZO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = near * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat4\n *\n * @param {ReadonlyMat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\n * 2 Dimensional Vector\n * @module vec2\n */\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(2);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {ReadonlyVec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\n\nexport function fromValues(x, y) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the source vector\n * @returns {vec2} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\n\nexport function set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n/**\n * Math.ceil the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to ceil\n * @returns {vec2} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n/**\n * Math.floor the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to floor\n * @returns {vec2} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n/**\n * Math.round the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to round\n * @returns {vec2} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.hypot(x, y);\n}\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n}\n/**\n * Calculates the length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.hypot(x, y);\n}\n/**\n * Calculates the squared length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n}\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to negate\n * @returns {vec2} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to invert\n * @returns {vec2} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to normalize\n * @returns {vec2} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec3} out\n */\n\nexport function cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec2} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec2} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2d} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat3} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n/**\n * Rotate a 2D vector\n * @param {vec2} out The receiving vec2\n * @param {ReadonlyVec2} a The vec2 point to rotate\n * @param {ReadonlyVec2} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec2} out\n */\n\nexport function rotate(out, a, b, rad) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n      p1 = a[1] - b[1],\n      sinC = Math.sin(rad),\n      cosC = Math.cos(rad); //perform rotation and translate to correct position\n\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n/**\n * Get the angle between two 2D vectors\n * @param {ReadonlyVec2} a The first operand\n * @param {ReadonlyVec2} b The second operand\n * @returns {Number} The angle in radians\n */\n\nexport function angle(a, b) {\n  var x1 = a[0],\n      y1 = a[1],\n      x2 = b[0],\n      y2 = b[1],\n      // mag is the product of the magnitudes of a and b\n  mag = Math.sqrt(x1 * x1 + y1 * y1) * Math.sqrt(x2 * x2 + y2 * y2),\n      // mag &&.. short circuits if mag == 0\n  cosine = mag && (x1 * x2 + y1 * y2) / mag; // Math.min(Math.max(cosine, -1), 1) clamps the cosine between -1 and 1\n\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec2 to zero\n *\n * @param {vec2} out the receiving vector\n * @returns {vec2} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec2} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec2(\" + a[0] + \", \" + a[1] + \")\";\n}\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n/**\n * Alias for {@link vec2.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec2.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec2.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec2.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec2.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec2.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec2.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {ReadonlyVec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Calculates the length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the source vector\n * @returns {vec3} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to ceil\n * @returns {vec3} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to floor\n * @returns {vec3} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to round\n * @returns {vec3} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Calculates the squared length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to negate\n * @returns {vec3} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to invert\n * @returns {vec3} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to normalize\n * @returns {vec3} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\n * Transforms the vec3 with a quat\n * Can also be used for dual quaternions. (Multiply it with the real part)\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec3} out\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Get the angle between two 3D vectors\n * @param {ReadonlyVec3} a The first operand\n * @param {ReadonlyVec3} b The second operand\n * @returns {Number} The angle in radians\n */\n\nexport function angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec3 to zero\n *\n * @param {vec3} out the receiving vector\n * @returns {vec3} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec3.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\n/**\n * 4 Dimensional Vector\n * @module vec4\n */\n\n/**\n * Creates a new, empty vec4\n *\n * @returns {vec4} a new 4D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {ReadonlyVec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\n\nexport function fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the source vector\n * @returns {vec4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\n\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\n * Multiplies two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\n * Divides two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\n * Math.ceil the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to ceil\n * @returns {vec4} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\n * Math.floor the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to floor\n * @returns {vec4} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\n * Returns the minimum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\n * Returns the maximum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\n * Math.round the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to round\n * @returns {vec4} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\n * Adds two vec4's after scaling the second operand by a scalar value\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec4} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\n * Calculates the squared euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\n * Calculates the length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\n * Calculates the squared length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\n * Negates the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to negate\n * @returns {vec4} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to invert\n * @returns {vec4} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to normalize\n * @returns {vec4} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\n * Returns the cross-product of three vectors in a 4-dimensional space\n *\n * @param {ReadonlyVec4} result the receiving vector\n * @param {ReadonlyVec4} U the first vector\n * @param {ReadonlyVec4} V the second vector\n * @param {ReadonlyVec4} W the third vector\n * @returns {vec4} result\n */\n\nexport function cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec4} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec4} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec4} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec4} out\n */\n\nexport function transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set the components of a vec4 to zero\n *\n * @param {vec4} out the receiving vector\n * @returns {vec4} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec4} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\n * Alias for {@link vec4.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec4.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec4.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec4.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec4.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec4.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec4s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();","// Copyright (c) 2017 Uber Technologies, Inc.\n// MIT License\nimport Matrix from './base/matrix';\nimport {NumericArray} from '@math.gl/types';\nimport {checkVector} from '../lib/validators';\n\n/* eslint-disable camelcase */\nimport {vec2_transformMat4AsVector, vec3_transformMat4AsVector} from '../lib/gl-matrix-extras';\nimport * as mat4 from 'gl-matrix/mat4';\nimport * as vec2 from 'gl-matrix/vec2';\nimport * as vec3 from 'gl-matrix/vec3';\nimport * as vec4 from 'gl-matrix/vec4';\n\nenum INDICES {\n  COL0ROW0 = 0,\n  COL0ROW1 = 1,\n  COL0ROW2 = 2,\n  COL0ROW3 = 3,\n  COL1ROW0 = 4,\n  COL1ROW1 = 5,\n  COL1ROW2 = 6,\n  COL1ROW3 = 7,\n  COL2ROW0 = 8,\n  COL2ROW1 = 9,\n  COL2ROW2 = 10,\n  COL2ROW3 = 11,\n  COL3ROW0 = 12,\n  COL3ROW1 = 13,\n  COL3ROW2 = 14,\n  COL3ROW3 = 15\n}\n\nconst DEFAULT_FOVY = (45 * Math.PI) / 180;\nconst DEFAULT_ASPECT = 1;\nconst DEFAULT_NEAR = 0.1;\nconst DEFAULT_FAR = 500;\n\nconst IDENTITY_MATRIX = Object.freeze([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);\n\n/** 4x4 matrix */\nexport default class Matrix4 extends Matrix {\n  static get IDENTITY(): Readonly<Matrix4> {\n    return getIdentityMatrix();\n  }\n\n  static get ZERO(): Readonly<Matrix4> {\n    return getZeroMatrix();\n  }\n\n  get ELEMENTS(): number {\n    return 16;\n  }\n\n  get RANK(): number {\n    return 4;\n  }\n\n  get INDICES(): typeof INDICES {\n    return INDICES;\n  }\n\n  constructor(array?: Readonly<NumericArray>) {\n    // PERF NOTE: initialize elements as double precision numbers\n    super(-0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0);\n    if (arguments.length === 1 && Array.isArray(array)) {\n      this.copy(array);\n    } else {\n      this.identity();\n    }\n  }\n\n  copy(array: Readonly<NumericArray>): this {\n    this[0] = array[0];\n    this[1] = array[1];\n    this[2] = array[2];\n    this[3] = array[3];\n    this[4] = array[4];\n    this[5] = array[5];\n    this[6] = array[6];\n    this[7] = array[7];\n    this[8] = array[8];\n    this[9] = array[9];\n    this[10] = array[10];\n    this[11] = array[11];\n    this[12] = array[12];\n    this[13] = array[13];\n    this[14] = array[14];\n    this[15] = array[15];\n    return this.check();\n  }\n\n  // eslint-disable-next-line max-params\n  set(\n    m00: number,\n    m10: number,\n    m20: number,\n    m30: number,\n    m01: number,\n    m11: number,\n    m21: number,\n    m31: number,\n    m02: number,\n    m12: number,\n    m22: number,\n    m32: number,\n    m03: number,\n    m13: number,\n    m23: number,\n    m33: number\n  ): this {\n    this[0] = m00;\n    this[1] = m10;\n    this[2] = m20;\n    this[3] = m30;\n    this[4] = m01;\n    this[5] = m11;\n    this[6] = m21;\n    this[7] = m31;\n    this[8] = m02;\n    this[9] = m12;\n    this[10] = m22;\n    this[11] = m32;\n    this[12] = m03;\n    this[13] = m13;\n    this[14] = m23;\n    this[15] = m33;\n    return this.check();\n  }\n\n  // accepts row major order, stores as column major\n  // eslint-disable-next-line max-params\n  setRowMajor(\n    m00: number,\n    m01: number,\n    m02: number,\n    m03: number,\n    m10: number,\n    m11: number,\n    m12: number,\n    m13: number,\n    m20: number,\n    m21: number,\n    m22: number,\n    m23: number,\n    m30: number,\n    m31: number,\n    m32: number,\n    m33: number\n  ): this {\n    this[0] = m00;\n    this[1] = m10;\n    this[2] = m20;\n    this[3] = m30;\n    this[4] = m01;\n    this[5] = m11;\n    this[6] = m21;\n    this[7] = m31;\n    this[8] = m02;\n    this[9] = m12;\n    this[10] = m22;\n    this[11] = m32;\n    this[12] = m03;\n    this[13] = m13;\n    this[14] = m23;\n    this[15] = m33;\n    return this.check();\n  }\n\n  toRowMajor(result: NumericArray): NumericArray {\n    result[0] = this[0];\n    result[1] = this[4];\n    result[2] = this[8];\n    result[3] = this[12];\n    result[4] = this[1];\n    result[5] = this[5];\n    result[6] = this[9];\n    result[7] = this[13];\n    result[8] = this[2];\n    result[9] = this[6];\n    result[10] = this[10];\n    result[11] = this[14];\n    result[12] = this[3];\n    result[13] = this[7];\n    result[14] = this[11];\n    result[15] = this[15];\n    return result;\n  }\n\n  // Constructors\n\n  /** Set to identity matrix */\n  identity(): this {\n    return this.copy(IDENTITY_MATRIX);\n  }\n\n  /**\n   *\n   * @param object\n   * @returns self\n   */\n  fromObject(object: {[key: string]: any}): this {\n    return this.check();\n  }\n\n  /**\n   * Calculates a 4x4 matrix from the given quaternion\n   * @param quaternion Quaternion to create matrix from\n   * @returns self\n   */\n  fromQuaternion(quaternion: Readonly<NumericArray>): this {\n    mat4.fromQuat(this, quaternion);\n    return this.check();\n  }\n\n  /**\n   * Generates a frustum matrix with the given bounds\n   * @param view.left - Left bound of the frustum\n   * @param view.right - Right bound of the frustum\n   * @param view.bottom - Bottom bound of the frustum\n   * @param view.top - Top bound of the frustum\n   * @param view.near - Near bound of the frustum\n   * @param view.far - Far bound of the frustum. Can be set to Infinity.\n   * @returns self\n   */\n  frustum(view: {\n    left: number;\n    right: number;\n    bottom: number;\n    top: number;\n    near: number;\n    far?: number;\n  }): this {\n    const {left, right, bottom, top, near = DEFAULT_NEAR, far = DEFAULT_FAR} = view;\n    if (far === Infinity) {\n      computeInfinitePerspectiveOffCenter(this, left, right, bottom, top, near);\n    } else {\n      mat4.frustum(this, left, right, bottom, top, near, far);\n    }\n    return this.check();\n  }\n\n  /**\n   * Generates a look-at matrix with the given eye position, focal point,\n   * and up axis\n   * @param view.eye - (vector) Position of the viewer\n   * @param view.center - (vector) Point the viewer is looking at\n   * @param view.up - (vector) Up axis\n   * @returns self\n   */\n  lookAt(view: {\n    eye: Readonly<NumericArray>;\n    center?: Readonly<NumericArray>;\n    up?: Readonly<NumericArray>;\n  }): this {\n    const {eye, center = [0, 0, 0], up = [0, 1, 0]} = view;\n    mat4.lookAt(this, eye, center, up);\n    return this.check();\n  }\n\n  /**\n   * Generates a orthogonal projection matrix with the given bounds\n   * from \"traditional\" view space parameters\n   * @param view.left - Left bound of the frustum\n   * @param view.right number  Right bound of the frustum\n   * @param view.bottom - Bottom bound of the frustum\n   * @param view.top number  Top bound of the frustum\n   * @param view.near - Near bound of the frustum\n   * @param view.far number  Far bound of the frustum\n   * @returns self\n   */\n  ortho(view: {\n    left: number;\n    right: number;\n    bottom: number;\n    top: number;\n    near?: number;\n    far?: number;\n  }): this {\n    const {left, right, bottom, top, near = DEFAULT_NEAR, far = DEFAULT_FAR} = view;\n    mat4.ortho(this, left, right, bottom, top, near, far);\n    return this.check();\n  }\n\n  /**\n   * Generates an orthogonal projection matrix with the same parameters\n   * as a perspective matrix (plus focalDistance)\n   * @param view.fovy Vertical field of view in radians\n   * @param view.aspect Aspect ratio. Typically viewport width / viewport height\n   * @param view.focalDistance Distance in the view frustum used for extent calculations\n   * @param view.near Near bound of the frustum\n   * @param view.far Far bound of the frustum\n   * @returns self\n   */\n  orthographic(view: {\n    fovy?: number;\n    aspect?: number;\n    focalDistance?: number;\n    near?: number;\n    far?: number;\n  }): this {\n    const {\n      fovy = DEFAULT_FOVY,\n      aspect = DEFAULT_ASPECT,\n      focalDistance = 1,\n      near = DEFAULT_NEAR,\n      far = DEFAULT_FAR\n    } = view;\n\n    checkRadians(fovy);\n\n    const halfY = fovy / 2;\n    const top = focalDistance * Math.tan(halfY); // focus_plane is the distance from the camera\n    const right = top * aspect;\n\n    return this.ortho({\n      left: -right,\n      right,\n      bottom: -top,\n      top,\n      near,\n      far\n    });\n  }\n\n  /**\n   * Generates a perspective projection matrix with the given bounds\n   * @param view.fovy Vertical field of view in radians\n   * @param view.aspect Aspect ratio. typically viewport width/height\n   * @param view.near Near bound of the frustum\n   * @param view.far Far bound of the frustum\n   * @returns self\n   */\n  perspective(view: {fovy: number; aspect?: number; near?: number; far?: number}): this {\n    const {fovy = (45 * Math.PI) / 180, aspect = 1, near = 0.1, far = 500} = view;\n    checkRadians(fovy);\n    mat4.perspective(this, fovy, aspect, near, far);\n    return this.check();\n  }\n\n  // Accessors\n\n  determinant(): number {\n    return mat4.determinant(this);\n  }\n\n  /**\n   * Extracts the non-uniform scale assuming the matrix is an affine transformation.\n   * The scales are the \"lengths\" of the column vectors in the upper-left 3x3 matrix.\n   * @param result\n   * @returns self\n   */\n  getScale(result: NumericArray = [-0, -0, -0]): NumericArray {\n    // explicit is faster than hypot...\n    result[0] = Math.sqrt(this[0] * this[0] + this[1] * this[1] + this[2] * this[2]);\n    result[1] = Math.sqrt(this[4] * this[4] + this[5] * this[5] + this[6] * this[6]);\n    result[2] = Math.sqrt(this[8] * this[8] + this[9] * this[9] + this[10] * this[10]);\n    // result[0] = Math.hypot(this[0], this[1], this[2]);\n    // result[1] = Math.hypot(this[4], this[5], this[6]);\n    // result[2] = Math.hypot(this[8], this[9], this[10]);\n    return result;\n  }\n\n  /**\n   * Gets the translation portion, assuming the matrix is a affine transformation matrix.\n   * @param result\n   * @returns self\n   */\n  getTranslation(result: NumericArray = [-0, -0, -0]): NumericArray {\n    result[0] = this[12];\n    result[1] = this[13];\n    result[2] = this[14];\n    return result;\n  }\n\n  /**\n   * Gets upper left 3x3 pure rotation matrix (non-scaling), assume affine transformation matrix\n   * @param result\n   * @param scaleResult\n   * @returns self\n   */\n  getRotation(result?: NumericArray, scaleResult?: NumericArray): NumericArray {\n    result = result || [-0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0];\n    scaleResult = scaleResult || [-0, -0, -0];\n    const scale = this.getScale(scaleResult);\n    const inverseScale0 = 1 / scale[0];\n    const inverseScale1 = 1 / scale[1];\n    const inverseScale2 = 1 / scale[2];\n    result[0] = this[0] * inverseScale0;\n    result[1] = this[1] * inverseScale1;\n    result[2] = this[2] * inverseScale2;\n    result[3] = 0;\n    result[4] = this[4] * inverseScale0;\n    result[5] = this[5] * inverseScale1;\n    result[6] = this[6] * inverseScale2;\n    result[7] = 0;\n    result[8] = this[8] * inverseScale0;\n    result[9] = this[9] * inverseScale1;\n    result[10] = this[10] * inverseScale2;\n    result[11] = 0;\n    result[12] = 0;\n    result[13] = 0;\n    result[14] = 0;\n    result[15] = 1;\n    return result;\n  }\n\n  /**\n   *\n   * @param result\n   * @param scaleResult\n   * @returns self\n   */\n  getRotationMatrix3(result?: NumericArray, scaleResult?: NumericArray): NumericArray {\n    result = result || [-0, -0, -0, -0, -0, -0, -0, -0, -0];\n    scaleResult = scaleResult || [-0, -0, -0];\n    const scale = this.getScale(scaleResult);\n    const inverseScale0 = 1 / scale[0];\n    const inverseScale1 = 1 / scale[1];\n    const inverseScale2 = 1 / scale[2];\n    result[0] = this[0] * inverseScale0;\n    result[1] = this[1] * inverseScale1;\n    result[2] = this[2] * inverseScale2;\n    result[3] = this[4] * inverseScale0;\n    result[4] = this[5] * inverseScale1;\n    result[5] = this[6] * inverseScale2;\n    result[6] = this[8] * inverseScale0;\n    result[7] = this[9] * inverseScale1;\n    result[8] = this[10] * inverseScale2;\n    return result;\n  }\n\n  // Modifiers\n\n  transpose(): this {\n    mat4.transpose(this, this);\n    return this.check();\n  }\n\n  invert(): this {\n    mat4.invert(this, this);\n    return this.check();\n  }\n\n  // Operations\n\n  multiplyLeft(a: Readonly<NumericArray>): this {\n    mat4.multiply(this, a, this);\n    return this.check();\n  }\n\n  multiplyRight(a: Readonly<NumericArray>): this {\n    mat4.multiply(this, this, a);\n    return this.check();\n  }\n\n  // Rotates a matrix by the given angle around the X axis\n  rotateX(radians: number): this {\n    mat4.rotateX(this, this, radians);\n    // mat4.rotate(this, this, radians, [1, 0, 0]);\n    return this.check();\n  }\n\n  // Rotates a matrix by the given angle around the Y axis.\n  rotateY(radians: number): this {\n    mat4.rotateY(this, this, radians);\n    // mat4.rotate(this, this, radians, [0, 1, 0]);\n    return this.check();\n  }\n\n  /**\n   * Rotates a matrix by the given angle around the Z axis.\n   * @param radians\n   * @returns self\n   */\n  rotateZ(radians: number): this {\n    mat4.rotateZ(this, this, radians);\n    // mat4.rotate(this, this, radians, [0, 0, 1]);\n    return this.check();\n  }\n\n  /**\n   *\n   * @param param0\n   * @returns self\n   */\n  rotateXYZ(angleXYZ: Readonly<NumericArray>): this {\n    return this.rotateX(angleXYZ[0]).rotateY(angleXYZ[1]).rotateZ(angleXYZ[2]);\n  }\n\n  /**\n   *\n   * @param radians\n   * @param axis\n   * @returns self\n   */\n  rotateAxis(radians: number, axis: Readonly<NumericArray>): this {\n    mat4.rotate(this, this, radians, axis);\n    return this.check();\n  }\n\n  /**\n   *\n   * @param factor\n   * @returns self\n   */\n  scale(factor: number | Readonly<NumericArray>): this {\n    mat4.scale(this, this, Array.isArray(factor) ? factor : [factor, factor, factor]);\n    return this.check();\n  }\n\n  /**\n   *\n   * @param vec\n   * @returns self\n   */\n  translate(vector: Readonly<NumericArray>): this {\n    mat4.translate(this, this, vector);\n    return this.check();\n  }\n\n  // Transforms\n\n  /**\n   * Transforms any 2, 3 or 4 element vector. 2 and 3 elements are treated as points\n   * @param vector\n   * @param result\n   * @returns self\n   */\n  transform(vector: Readonly<NumericArray>, result?: NumericArray): NumericArray {\n    if (vector.length === 4) {\n      result = vec4.transformMat4(result || [-0, -0, -0, -0], vector, this);\n      checkVector(result, 4);\n      return result;\n    }\n    return this.transformAsPoint(vector, result);\n  }\n\n  /**\n   * Transforms any 2 or 3 element array as point (w implicitly 1)\n   * @param vector\n   * @param result\n   * @returns self\n   */\n  transformAsPoint(vector: Readonly<NumericArray>, result?: NumericArray): NumericArray {\n    const {length} = vector;\n    let out: NumericArray;\n    switch (length) {\n      case 2:\n        out = vec2.transformMat4(result || [-0, -0], vector, this);\n        break;\n      case 3:\n        out = vec3.transformMat4(result || [-0, -0, -0], vector, this);\n        break;\n      default:\n        throw new Error('Illegal vector');\n    }\n    checkVector(out, vector.length);\n    return out;\n  }\n\n  /**\n   * Transforms any 2 or 3 element array as vector (w implicitly 0)\n   * @param vector\n   * @param result\n   * @returns self\n   */\n  transformAsVector(vector: Readonly<NumericArray>, result?: NumericArray): NumericArray {\n    let out: NumericArray;\n    switch (vector.length) {\n      case 2:\n        out = vec2_transformMat4AsVector(result || [-0, -0], vector, this);\n        break;\n      case 3:\n        out = vec3_transformMat4AsVector(result || [-0, -0, -0], vector, this);\n        break;\n      default:\n        throw new Error('Illegal vector');\n    }\n    checkVector(out, vector.length);\n    return out;\n  }\n\n  /** @deprecated */\n  transformPoint(vector: Readonly<NumericArray>, result?: NumericArray): NumericArray {\n    return this.transformAsPoint(vector, result);\n  }\n\n  /** @deprecated */\n  transformVector(vector: Readonly<NumericArray>, result?: NumericArray): NumericArray {\n    return this.transformAsPoint(vector, result);\n  }\n\n  /** @deprecated */\n  transformDirection(vector: Readonly<NumericArray>, result?: NumericArray): NumericArray {\n    return this.transformAsVector(vector, result);\n  }\n\n  // three.js math API compatibility\n\n  makeRotationX(radians: number): this {\n    return this.identity().rotateX(radians);\n  }\n\n  makeTranslation(x: number, y: number, z: number): this {\n    return this.identity().translate([x, y, z]);\n  }\n}\n\n// TODO initializing static members directly is an option, but make sure no tree-shaking issues\nlet ZERO: Matrix4;\nlet IDENTITY: Matrix4;\n\nfunction getZeroMatrix(): Readonly<Matrix4> {\n  if (!ZERO) {\n    ZERO = new Matrix4([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n    Object.freeze(ZERO);\n  }\n  return ZERO;\n}\n\nfunction getIdentityMatrix(): Matrix4 {\n  if (!IDENTITY) {\n    IDENTITY = new Matrix4();\n    Object.freeze(IDENTITY);\n  }\n  return IDENTITY;\n}\n\n// HELPER FUNCTIONS\n\nfunction checkRadians(possiblyDegrees: number) {\n  if (possiblyDegrees > Math.PI * 2) {\n    throw Error('expected radians');\n  }\n}\n\n// eslint-disable-next-line max-params\nfunction computeInfinitePerspectiveOffCenter(\n  result: NumericArray,\n  left: number,\n  right: number,\n  bottom: number,\n  top: number,\n  near: number\n): NumericArray {\n  const column0Row0 = (2 * near) / (right - left);\n  const column1Row1 = (2 * near) / (top - bottom);\n  const column2Row0 = (right + left) / (right - left);\n  const column2Row1 = (top + bottom) / (top - bottom);\n  const column2Row2 = -1;\n  const column2Row3 = -1;\n  const column3Row2 = -2 * near;\n  result[0] = column0Row0;\n  result[1] = 0;\n  result[2] = 0;\n  result[3] = 0;\n  result[4] = 0;\n  result[5] = column1Row1;\n  result[6] = 0;\n  result[7] = 0;\n  result[8] = column2Row0;\n  result[9] = column2Row1;\n  result[10] = column2Row2;\n  result[11] = column2Row3;\n  result[12] = 0;\n  result[13] = 0;\n  result[14] = column3Row2;\n  result[15] = 0;\n  return result;\n}\n","/* eslint-disable camelcase */\nimport {NumericArray} from '@math.gl/types';\n// vec2 additions\n\nexport function vec2_transformMat4AsVector<T extends NumericArray>(\n  out: T,\n  a: Readonly<NumericArray>,\n  m: Readonly<NumericArray>\n): T {\n  const x = a[0];\n  const y = a[1];\n  const w = m[3] * x + m[7] * y || 1.0;\n  out[0] = (m[0] * x + m[4] * y) / w;\n  out[1] = (m[1] * x + m[5] * y) / w;\n  return out;\n}\n\n// vec3 additions\n\n// Transform as vector, only uses 3x3 minor matrix\nexport function vec3_transformMat4AsVector<T extends NumericArray>(\n  out: T,\n  a: Readonly<NumericArray>,\n  m: Readonly<NumericArray>\n): T {\n  const x = a[0];\n  const y = a[1];\n  const z = a[2];\n  const w = m[3] * x + m[7] * y + m[11] * z || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z) / w;\n  return out;\n}\n\nexport function vec3_transformMat2<T extends NumericArray>(\n  out: T,\n  a: Readonly<NumericArray>,\n  m: Readonly<NumericArray>\n): T {\n  const x = a[0];\n  const y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  out[2] = a[2];\n  return out;\n}\n\n// vec4 additions\n\nexport function vec4_transformMat2<T extends NumericArray>(\n  out: T,\n  a: Readonly<NumericArray>,\n  m: Readonly<NumericArray>\n): T {\n  const x = a[0];\n  const y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\nexport function vec4_transformMat3<T extends NumericArray>(\n  out: T,\n  a: Readonly<NumericArray>,\n  m: Readonly<NumericArray>\n): T {\n  const x = a[0];\n  const y = a[1];\n  const z = a[2];\n  out[0] = m[0] * x + m[3] * y + m[6] * z;\n  out[1] = m[1] * x + m[4] * y + m[7] * z;\n  out[2] = m[2] * x + m[5] * y + m[8] * z;\n  out[3] = a[3];\n  return out;\n}\n","import {_ShaderModule as ShaderModule} from '@deck.gl/core';\n\nimport type {DataFilterExtensionProps} from './data-filter-extension';\n\n/*\n * data filter shader module\n */\nconst vs = `\nuniform DATAFILTER_TYPE filter_min;\nuniform DATAFILTER_TYPE filter_softMin;\nuniform DATAFILTER_TYPE filter_softMax;\nuniform DATAFILTER_TYPE filter_max;\nuniform bool filter_useSoftMargin;\nuniform bool filter_enabled;\nuniform bool filter_transformSize;\n\n#ifdef NON_INSTANCED_MODEL\n  #define DATAFILTER_ATTRIB filterValues\n  #define DATAFILTER_ATTRIB_64LOW filterValues64Low\n#else\n  #define DATAFILTER_ATTRIB instanceFilterValues\n  #define DATAFILTER_ATTRIB_64LOW instanceFilterValues64Low\n#endif\n\nattribute DATAFILTER_TYPE DATAFILTER_ATTRIB;\n#ifdef DATAFILTER_DOUBLE\n  attribute DATAFILTER_TYPE DATAFILTER_ATTRIB_64LOW;\n\n  uniform DATAFILTER_TYPE filter_min64High;\n  uniform DATAFILTER_TYPE filter_max64High;\n#endif\n\nvarying float dataFilter_value;\n\nfloat dataFilter_reduceValue(float value) {\n  return value;\n}\nfloat dataFilter_reduceValue(vec2 value) {\n  return min(value.x, value.y);\n}\nfloat dataFilter_reduceValue(vec3 value) {\n  return min(min(value.x, value.y), value.z);\n}\nfloat dataFilter_reduceValue(vec4 value) {\n  return min(min(value.x, value.y), min(value.z, value.w));\n}\nvoid dataFilter_setValue(DATAFILTER_TYPE valueFromMin, DATAFILTER_TYPE valueFromMax) {\n  if (filter_enabled) {\n    if (filter_useSoftMargin) {\n      dataFilter_value = dataFilter_reduceValue(\n        smoothstep(filter_min, filter_softMin, valueFromMin) *\n        (1.0 - smoothstep(filter_softMax, filter_max, valueFromMax))\n      );\n    } else {\n      dataFilter_value = dataFilter_reduceValue(\n        step(filter_min, valueFromMin) * step(valueFromMax, filter_max)\n      );\n    }\n  } else {\n    dataFilter_value = 1.0;\n  }\n}\n`;\n\nconst fs = `\nuniform bool filter_transformColor;\nvarying float dataFilter_value;\n`;\n\ntype DataFilterModuleSettings = {\n  extensions: any[]; // used to detect if layer props are present\n} & DataFilterExtensionProps;\n\n/* eslint-disable camelcase */\nfunction getUniforms(opts?: DataFilterModuleSettings | {}): Record<string, any> {\n  if (!opts || !('extensions' in opts)) {\n    return {};\n  }\n  const {\n    filterRange = [-1, 1],\n    filterEnabled = true,\n    filterTransformSize = true,\n    filterTransformColor = true\n  } = opts;\n  const filterSoftRange = opts.filterSoftRange || filterRange;\n\n  return {\n    ...(Number.isFinite(filterRange[0])\n      ? {\n          filter_min: filterRange[0],\n          filter_softMin: filterSoftRange[0],\n          filter_softMax: filterSoftRange[1],\n          filter_max: filterRange[1]\n        }\n      : {\n          filter_min: filterRange.map(r => r[0]),\n          filter_softMin: filterSoftRange.map(r => r[0]),\n          filter_softMax: filterSoftRange.map(r => r[1]),\n          filter_max: filterRange.map(r => r[1])\n        }),\n    filter_enabled: filterEnabled,\n    filter_useSoftMargin: Boolean(opts.filterSoftRange),\n    filter_transformSize: filterEnabled && filterTransformSize,\n    filter_transformColor: filterEnabled && filterTransformColor\n  };\n}\n\nfunction getUniforms64(opts?: DataFilterModuleSettings | {}): Record<string, any> {\n  if (!opts || !('extensions' in opts)) {\n    return {};\n  }\n  const uniforms = getUniforms(opts);\n  if (Number.isFinite(uniforms.filter_min)) {\n    const min64High = Math.fround(uniforms.filter_min);\n    uniforms.filter_min -= min64High;\n    uniforms.filter_softMin -= min64High;\n    uniforms.filter_min64High = min64High;\n\n    const max64High = Math.fround(uniforms.filter_max);\n    uniforms.filter_max -= max64High;\n    uniforms.filter_softMax -= max64High;\n    uniforms.filter_max64High = max64High;\n  } else {\n    const min64High = uniforms.filter_min.map(Math.fround);\n    uniforms.filter_min = uniforms.filter_min.map((x, i) => x - min64High[i]);\n    uniforms.filter_softMin = uniforms.filter_softMin.map((x, i) => x - min64High[i]);\n    uniforms.filter_min64High = min64High;\n\n    const max64High = uniforms.filter_max.map(Math.fround);\n    uniforms.filter_max = uniforms.filter_max.map((x, i) => x - max64High[i]);\n    uniforms.filter_softMax = uniforms.filter_softMax.map((x, i) => x - max64High[i]);\n    uniforms.filter_max64High = max64High;\n  }\n  return uniforms;\n}\n\nconst inject = {\n  'vs:#main-start': `\n    #ifdef DATAFILTER_DOUBLE\n      dataFilter_setValue(\n        DATAFILTER_ATTRIB - filter_min64High + DATAFILTER_ATTRIB_64LOW,\n        DATAFILTER_ATTRIB - filter_max64High + DATAFILTER_ATTRIB_64LOW\n      );\n    #else\n      dataFilter_setValue(DATAFILTER_ATTRIB, DATAFILTER_ATTRIB);\n    #endif\n  `,\n\n  'vs:#main-end': `\n    if (dataFilter_value == 0.0) {\n      gl_Position = vec4(0.);\n    }\n  `,\n\n  'vs:DECKGL_FILTER_SIZE': `\n    if (filter_transformSize) {\n      size = size * dataFilter_value;\n    }\n  `,\n\n  'fs:DECKGL_FILTER_COLOR': `\n    if (dataFilter_value == 0.0) discard;\n    if (filter_transformColor) {\n      color.a *= dataFilter_value;\n    }\n  `\n};\n\nexport const shaderModule: ShaderModule<DataFilterModuleSettings> = {\n  name: 'data-filter',\n  vs,\n  fs,\n  inject,\n  getUniforms\n};\n\nexport const shaderModule64: ShaderModule<DataFilterModuleSettings> = {\n  name: 'data-filter-fp64',\n  vs,\n  fs,\n  inject,\n  getUniforms: getUniforms64\n};\n","import {Model, Texture2D, Framebuffer, isWebGL2} from '@luma.gl/core';\nimport GL from '@luma.gl/constants';\n\nconst AGGREGATE_VS = `\\\n#define SHADER_NAME data-filter-vertex-shader\n\n#ifdef FLOAT_TARGET\n  attribute float filterIndices;\n  attribute float filterPrevIndices;\n#else\n  attribute vec2 filterIndices;\n  attribute vec2 filterPrevIndices;\n#endif\n\nvarying vec4 vColor;\nconst float component = 1.0 / 255.0;\n\nvoid main() {\n  #ifdef FLOAT_TARGET\n    dataFilter_value *= float(filterIndices != filterPrevIndices);\n    gl_Position = vec4(0.0, 0.0, 0.0, 1.0);\n    vColor = vec4(0.0, 0.0, 0.0, 1.0);\n  #else\n    // Float texture is not supported: pack result into 4 channels x 256 px x 64px\n    dataFilter_value *= float(filterIndices.x != filterPrevIndices.x);\n    float col = filterIndices.x;\n    float row = filterIndices.y * 4.0;\n    float channel = floor(row);\n    row = fract(row);\n    vColor = component * vec4(bvec4(channel == 0.0, channel == 1.0, channel == 2.0, channel == 3.0));\n    gl_Position = vec4(col * 2.0 - 1.0, row * 2.0 - 1.0, 0.0, 1.0);\n  #endif\n  gl_PointSize = 1.0;\n}\n`;\n\nconst AGGREGATE_FS = `\\\n#define SHADER_NAME data-filter-fragment-shader\nprecision highp float;\n\nvarying vec4 vColor;\n\nvoid main() {\n  if (dataFilter_value < 0.5) {\n    discard;\n  }\n  gl_FragColor = vColor;\n}\n`;\n\nexport function supportsFloatTarget(gl: WebGLRenderingContext): boolean {\n  // https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/WebGL_best_practices#Support_for_float_textures_doesnt_mean_you_can_render_into_them!\n  return Boolean(\n    gl.getExtension('EXT_float_blend') &&\n      // WebGL 2\n      (gl.getExtension('EXT_color_buffer_float') ||\n        // WebGL 1\n        gl.getExtension('WEBGL_color_buffer_float'))\n  );\n}\n\n// A 1x1 framebuffer object that encodes the total count of filtered items\nexport function getFramebuffer(gl: WebGLRenderingContext, useFloatTarget: boolean): Framebuffer {\n  if (useFloatTarget) {\n    return new Framebuffer(gl, {\n      width: 1,\n      height: 1,\n      attachments: {\n        [GL.COLOR_ATTACHMENT0]: new Texture2D(gl, {\n          format: isWebGL2(gl) ? GL.RGBA32F : GL.RGBA,\n          type: GL.FLOAT,\n          mipmaps: false\n        })\n      }\n    });\n  }\n  return new Framebuffer(gl, {\n    width: 256,\n    height: 64,\n    depth: false\n  });\n}\n\n// Increments the counter based on dataFilter_value\nexport function getModel(\n  gl: WebGLRenderingContext,\n  shaderOptions: any,\n  useFloatTarget: boolean\n): Model {\n  shaderOptions.defines.NON_INSTANCED_MODEL = 1;\n  if (useFloatTarget) {\n    shaderOptions.defines.FLOAT_TARGET = 1;\n  }\n\n  return new Model(gl, {\n    id: 'data-filter-aggregation-model',\n    vertexCount: 1,\n    isInstanced: false,\n    drawMode: GL.POINTS,\n    vs: AGGREGATE_VS,\n    fs: AGGREGATE_FS,\n    ...shaderOptions\n  });\n}\n\nexport const parameters = {\n  blend: true,\n  blendFunc: [GL.ONE, GL.ONE, GL.ONE, GL.ONE],\n  blendEquation: [GL.FUNC_ADD, GL.FUNC_ADD],\n  depthTest: false\n};\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {LayerExtension} from '@deck.gl/core';\nimport {shaderModule, shaderModule64} from './shader-module';\nimport * as aggregator from './aggregator';\nimport {readPixelsToArray, clear} from '@luma.gl/core';\nimport GL from '@luma.gl/constants';\n\nimport type {Layer, LayerContext, Accessor, UpdateParameters} from '@deck.gl/core';\n\nconst defaultProps = {\n  getFilterValue: {type: 'accessor', value: 0},\n  onFilteredItemsChange: {type: 'function', value: null, optional: true},\n\n  filterEnabled: true,\n  filterRange: [-1, 1],\n  filterSoftRange: null,\n  filterTransformSize: true,\n  filterTransformColor: true\n};\n\nexport type DataFilterExtensionProps<DataT = any> = {\n  /**\n   * Accessor to retrieve the value for each object that it will be filtered by.\n   * Returns either a number (if `filterSize: 1`) or an array of numbers.\n   */\n  getFilterValue?: Accessor<DataT, number | number[]>;\n  /**\n   * Enable/disable the data filter. If the data filter is disabled, all objects are rendered.\n   * @default true\n   */\n  filterEnabled?: boolean;\n  /**\n   * The [min, max] bounds which defines whether an object should be rendered.\n   * If an object's filtered value is within the bounds, the object will be rendered; otherwise it will be hidden.\n   * @default [-1, 1]\n   */\n  filterRange?: [number, number] | [number, number][];\n  /**\n   * If specified, objects will be faded in/out instead of abruptly shown/hidden.\n   * When the filtered value is outside of the bounds defined by `filterSoftRange` but still within the bounds defined by `filterRange`, the object will be rendered as \"faded.\"\n   * @default null\n   */\n  filterSoftRange?: [number, number] | [number, number][] | null;\n  /**\n   * When an object is \"faded\", manipulate its size so that it appears smaller or thinner. Only works if `filterSoftRange` is specified.\n   * @default true\n   */\n  filterTransformSize?: boolean;\n  /**\n   * When an object is \"faded\", manipulate its opacity so that it appears more translucent. Only works if `filterSoftRange` is specified.\n   * @default true\n   */\n  filterTransformColor?: boolean;\n  /**\n   * Only called if the `countItems` option is enabled.\n   */\n  onFilteredItemsChange?: (evt: {\n    /** The id of the source layer. */\n    id: string;\n    /** The number of data objects that pass the filter. */\n    count: number;\n  }) => void;\n};\n\ntype DataFilterExtensionOptions = {\n  /**\n   * The size of the filter (number of columns to filter by). The data filter can show/hide data based on 1-4 numeric properties of each object.\n   * @default 1\n   */\n  filterSize: number;\n  /**\n   * Use 64-bit precision instead of 32-bit.\n   * @default false\n   */\n  fp64: boolean;\n  /**\n   * If `true`, reports the number of filtered objects with the `onFilteredItemsChange` callback.\n   * @default `false`.\n   */\n  countItems: boolean;\n};\n\nconst DATA_TYPE_FROM_SIZE = {\n  1: 'float',\n  2: 'vec2',\n  3: 'vec3',\n  4: 'vec4'\n};\n\n/** Adds GPU-based data filtering functionalities to layers. It allows the layer to show/hide objects based on user-defined properties. */\nexport default class DataFilterExtension extends LayerExtension<DataFilterExtensionOptions> {\n  static defaultProps = defaultProps;\n  static extensionName = 'DataFilterExtension';\n\n  constructor({\n    filterSize = 1,\n    fp64 = false,\n    countItems = false\n  }: Partial<DataFilterExtensionOptions> = {}) {\n    if (!DATA_TYPE_FROM_SIZE[filterSize]) {\n      throw new Error('filterSize out of range');\n    }\n\n    super({filterSize, fp64, countItems});\n  }\n\n  getShaders(this: Layer<DataFilterExtensionProps>, extension: this): any {\n    const {filterSize, fp64} = extension.opts;\n\n    return {\n      modules: [fp64 ? shaderModule64 : shaderModule],\n      defines: {\n        DATAFILTER_TYPE: DATA_TYPE_FROM_SIZE[filterSize],\n        DATAFILTER_DOUBLE: Boolean(fp64)\n      }\n    };\n  }\n\n  initializeState(this: Layer<DataFilterExtensionProps>, context: LayerContext, extension: this) {\n    const attributeManager = this.getAttributeManager();\n    if (attributeManager) {\n      attributeManager.add({\n        filterValues: {\n          size: extension.opts.filterSize,\n          type: extension.opts.fp64 ? GL.DOUBLE : GL.FLOAT,\n          accessor: 'getFilterValue',\n          shaderAttributes: {\n            filterValues: {\n              divisor: 0\n            },\n            instanceFilterValues: {\n              divisor: 1\n            }\n          }\n        }\n      });\n    }\n\n    const {gl} = this.context;\n    if (attributeManager && extension.opts.countItems) {\n      const useFloatTarget = aggregator.supportsFloatTarget(gl);\n      // This attribute is needed for variable-width data, e.g. Path, SolidPolygon, Text\n      // The vertex shader checks if a vertex has the same \"index\" as the previous vertex\n      // so that we only write one count cross multiple vertices of the same object\n      attributeManager.add({\n        filterIndices: {\n          size: useFloatTarget ? 1 : 2,\n          vertexOffset: 1,\n          type: GL.UNSIGNED_BYTE,\n          normalized: true,\n          accessor: (object, {index}) => {\n            const i = object && object.__source ? object.__source.index : index;\n            return useFloatTarget ? (i + 1) % 255 : [(i + 1) % 255, Math.floor(i / 255) % 255];\n          },\n          shaderAttributes: {\n            filterPrevIndices: {\n              vertexOffset: 0\n            },\n            filterIndices: {\n              vertexOffset: 1\n            }\n          }\n        }\n      });\n\n      const filterFBO = aggregator.getFramebuffer(gl, useFloatTarget);\n      const filterModel = aggregator.getModel(\n        gl,\n        extension.getShaders.call(this, extension),\n        useFloatTarget\n      );\n      this.setState({filterFBO, filterModel});\n    }\n  }\n\n  updateState(\n    this: Layer<DataFilterExtensionProps>,\n    {props, oldProps}: UpdateParameters<Layer<DataFilterExtensionProps>>\n  ) {\n    if (this.state.filterModel) {\n      const attributeManager = this.getAttributeManager();\n      const filterNeedsUpdate =\n        // attributeManager must be defined for filterModel to be set\n        attributeManager!.attributes.filterValues.needsUpdate() ||\n        props.filterEnabled !== oldProps.filterEnabled ||\n        props.filterRange !== oldProps.filterRange ||\n        props.filterSoftRange !== oldProps.filterSoftRange;\n      if (filterNeedsUpdate) {\n        this.setState({filterNeedsUpdate});\n      }\n    }\n  }\n\n  draw(this: Layer<DataFilterExtensionProps>, params: any, extension: this) {\n    const {filterFBO, filterModel, filterNeedsUpdate} = this.state;\n    const {onFilteredItemsChange} = this.props;\n    if (filterNeedsUpdate && onFilteredItemsChange && filterModel) {\n      const {\n        attributes: {filterValues, filterIndices}\n      } = this.getAttributeManager()!;\n      filterModel.setVertexCount(this.getNumInstances());\n\n      const {gl} = this.context;\n      clear(gl, {framebuffer: filterFBO, color: [0, 0, 0, 0]});\n\n      filterModel\n        .updateModuleSettings(params.moduleParameters)\n        .setAttributes({\n          ...filterValues.getShaderAttributes(),\n          ...(filterIndices && filterIndices.getShaderAttributes())\n        })\n        .draw({\n          framebuffer: filterFBO,\n          parameters: {\n            ...aggregator.parameters,\n            viewport: [0, 0, filterFBO.width, filterFBO.height]\n          }\n        });\n      const color = readPixelsToArray(filterFBO);\n      let count = 0;\n      for (let i = 0; i < color.length; i++) {\n        count += color[i];\n      }\n      onFilteredItemsChange({id: this.id, count});\n\n      this.state.filterNeedsUpdate = false;\n    }\n  }\n\n  finalizeState(this: Layer<DataFilterExtensionProps>) {\n    const {filterFBO, filterModel} = this.state;\n    if (filterFBO) {\n      filterFBO.color.delete();\n      filterFBO.delete();\n      filterModel.delete();\n    }\n  }\n}\n","import {log, COORDINATE_SYSTEM} from '@deck.gl/core';\nconst R_EARTH = 6378000;\n\nfunction toFinite(n) {\n  return Number.isFinite(n) ? n : 0;\n}\n\n// Parse input data to build positions, wights and bounding box.\n/* eslint-disable max-statements */\nexport function getBoundingBox(attributes, vertexCount) {\n  // TODO - value might not exist (e.g. attribute transition)\n  const positions = attributes.positions.value;\n\n  let yMin = Infinity;\n  let yMax = -Infinity;\n  let xMin = Infinity;\n  let xMax = -Infinity;\n  let y;\n  let x;\n\n  for (let i = 0; i < vertexCount; i++) {\n    x = positions[i * 3];\n    y = positions[i * 3 + 1];\n    yMin = y < yMin ? y : yMin;\n    yMax = y > yMax ? y : yMax;\n    xMin = x < xMin ? x : xMin;\n    xMax = x > xMax ? x : xMax;\n  }\n\n  const boundingBox = {\n    xMin: toFinite(xMin),\n    xMax: toFinite(xMax),\n    yMin: toFinite(yMin),\n    yMax: toFinite(yMax)\n  };\n\n  return boundingBox;\n}\n/* eslint-enable max-statements */\n\n// Returns XY translation for positions to peform aggregation in +ve sapce\nfunction getTranslation(boundingBox, gridOffset, coordinateSystem, viewport) {\n  const {width, height} = viewport;\n\n  // Origin to define grid\n  // DEFAULT coordinate system is treated as LNGLAT\n  const worldOrigin =\n    coordinateSystem === COORDINATE_SYSTEM.CARTESIAN ? [-width / 2, -height / 2] : [-180, -90];\n\n  // Other coordinate systems not supported/verified yet\n  log.assert(\n    coordinateSystem === COORDINATE_SYSTEM.CARTESIAN ||\n      coordinateSystem === COORDINATE_SYSTEM.LNGLAT ||\n      coordinateSystem === COORDINATE_SYSTEM.DEFAULT\n  );\n\n  const {xMin, yMin} = boundingBox;\n  return [\n    // Align origin to match grid cell boundaries in CPU and GPU aggregations\n    -1 * (alignToCell(xMin - worldOrigin[0], gridOffset.xOffset) + worldOrigin[0]),\n    -1 * (alignToCell(yMin - worldOrigin[1], gridOffset.yOffset) + worldOrigin[1])\n  ];\n}\n\n// Aligns `inValue` to given `cellSize`\nexport function alignToCell(inValue, cellSize) {\n  const sign = inValue < 0 ? -1 : 1;\n\n  let value = sign < 0 ? Math.abs(inValue) + cellSize : Math.abs(inValue);\n\n  value = Math.floor(value / cellSize) * cellSize;\n\n  return value * sign;\n}\n\n/**\n * Based on geometric center of sample points, calculate cellSize in lng/lat (degree) space\n * @param {object} boundingBox - {xMin, yMin, xMax, yMax} contains bounding box of data\n * @param {number} cellSize - grid cell size in meters\n * @param {boolean, optional} converToDegrees - when true offsets are converted from meters to lng/lat (degree) space\n * @returns {xOffset, yOffset} - cellSize size\n */\n\nexport function getGridOffset(boundingBox, cellSize, convertToMeters = true) {\n  if (!convertToMeters) {\n    return {xOffset: cellSize, yOffset: cellSize};\n  }\n\n  const {yMin, yMax} = boundingBox;\n  const centerLat = (yMin + yMax) / 2;\n\n  return calculateGridLatLonOffset(cellSize, centerLat);\n}\n\nexport function getGridParams(boundingBox, cellSize, viewport, coordinateSystem) {\n  const gridOffset = getGridOffset(\n    boundingBox,\n    cellSize,\n    coordinateSystem !== COORDINATE_SYSTEM.CARTESIAN\n  );\n\n  const translation = getTranslation(boundingBox, gridOffset, coordinateSystem, viewport);\n\n  const {xMin, yMin, xMax, yMax} = boundingBox;\n\n  const width = xMax - xMin + gridOffset.xOffset;\n  const height = yMax - yMin + gridOffset.yOffset;\n\n  const numCol = Math.ceil(width / gridOffset.xOffset);\n  const numRow = Math.ceil(height / gridOffset.yOffset);\n  return {gridOffset, translation, width, height, numCol, numRow};\n}\n\n/**\n * calculate grid layer cell size in lat lon based on world unit size\n * and current latitude\n * @param {number} cellSize\n * @param {number} latitude\n * @returns {object} - lat delta and lon delta\n */\nfunction calculateGridLatLonOffset(cellSize, latitude) {\n  const yOffset = calculateLatOffset(cellSize);\n  const xOffset = calculateLonOffset(latitude, cellSize);\n  return {yOffset, xOffset};\n}\n\n/**\n * with a given x-km change, calculate the increment of latitude\n * based on stackoverflow http://stackoverflow.com/questions/7477003\n * @param {number} dy - change in km\n * @return {number} - increment in latitude\n */\nfunction calculateLatOffset(dy) {\n  return (dy / R_EARTH) * (180 / Math.PI);\n}\n\n/**\n * with a given x-km change, and current latitude\n * calculate the increment of longitude\n * based on stackoverflow http://stackoverflow.com/questions/7477003\n * @param {number} lat - latitude of current location (based on city)\n * @param {number} dx - change in km\n * @return {number} - increment in longitude\n */\nfunction calculateLonOffset(lat, dx) {\n  return ((dx / R_EARTH) * (180 / Math.PI)) / Math.cos((lat * Math.PI) / 180);\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport GL from '@luma.gl/constants';\nimport {GridCellLayer} from '@deck.gl/layers';\nimport {Accessor, AccessorFunction, Color, Position, Material, DefaultProps} from '@deck.gl/core';\n\nimport {defaultColorRange} from '../utils/color-utils';\nimport {pointToDensityGridDataCPU} from './grid-aggregator';\nimport CPUAggregator from '../utils/cpu-aggregator';\nimport AggregationLayer, {AggregationLayerProps} from '../aggregation-layer';\n\nimport {Layer, UpdateParameters, GetPickingInfoParams, PickingInfo} from '@deck.gl/core';\nimport {AggregateAccessor} from '../types';\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nfunction nop() {}\n\nconst defaultProps: DefaultProps<CPUGridLayerProps> = {\n  // color\n  colorDomain: null,\n  colorRange: defaultColorRange,\n  getColorValue: {type: 'accessor', value: null}, // default value is calculated from `getColorWeight` and `colorAggregation`\n  getColorWeight: {type: 'accessor', value: 1},\n  colorAggregation: 'SUM',\n  lowerPercentile: {type: 'number', min: 0, max: 100, value: 0},\n  upperPercentile: {type: 'number', min: 0, max: 100, value: 100},\n  colorScaleType: 'quantize',\n  onSetColorDomain: nop,\n\n  // elevation\n  elevationDomain: null,\n  elevationRange: [0, 1000],\n  getElevationValue: {type: 'accessor', value: null}, // default value is calculated from `getElevationWeight` and `elevationAggregation`\n  getElevationWeight: {type: 'accessor', value: 1},\n  elevationAggregation: 'SUM',\n  elevationLowerPercentile: {type: 'number', min: 0, max: 100, value: 0},\n  elevationUpperPercentile: {type: 'number', min: 0, max: 100, value: 100},\n  elevationScale: {type: 'number', min: 0, value: 1},\n  elevationScaleType: 'linear',\n  onSetElevationDomain: nop,\n\n  gridAggregator: pointToDensityGridDataCPU,\n\n  // grid\n  cellSize: {type: 'number', min: 0, max: 1000, value: 1000},\n  coverage: {type: 'number', min: 0, max: 1, value: 1},\n  getPosition: {type: 'accessor', value: x => x.position},\n  extruded: false,\n\n  // Optional material for 'lighting' shader module\n  material: true,\n\n  // data filter\n  _filterData: {type: 'function', value: null, optional: true}\n};\n\n/** All properties supported by CPUGridLayer. */\nexport type CPUGridLayerProps<DataT = any> = _CPUGridLayerProps<DataT> &\n  AggregationLayerProps<DataT>;\n\n/** Properties added by CPUGridLayer. */\ntype _CPUGridLayerProps<DataT> = {\n  /**\n   * Size of each cell in meters.\n   * @default 1000\n   */\n  cellSize?: number;\n\n  /**\n   * Color scale domain, default is set to the extent of aggregated weights in each cell.\n   * @default [min(colorWeight), max(colorWeight)]\n   */\n  colorDomain?: [number, number] | null;\n\n  /**\n   * Default: [colorbrewer](http://colorbrewer2.org/#type=sequential&scheme=YlOrRd&n=6) `6-class YlOrRd`\n   */\n  colorRange?: Color[];\n\n  /**\n   * Cell size multiplier, clamped between 0 - 1.\n   * @default 1\n   */\n  coverage?: number;\n\n  /**\n   * Elevation scale input domain, default is set to between 0 and the max of aggregated weights in each cell.\n   * @default [0, max(elevationWeight)]\n   */\n  elevationDomain?: [number, number] | null;\n\n  /**\n   * Elevation scale output range.\n   * @default [0, 1000]\n   */\n  elevationRange?: [number, number];\n\n  /**\n   * Cell elevation multiplier.\n   * @default 1\n   */\n  elevationScale?: number;\n\n  /**\n   * Whether to enable cell elevation. If set to false, all cell will be flat.\n   * @default true\n   */\n  extruded?: boolean;\n\n  /**\n   * Filter cells and re-calculate color by `upperPercentile`.\n   * Cells with value arger than the upperPercentile will be hidden.\n   * @default 100\n   */\n  upperPercentile?: number;\n\n  /**\n   * Filter cells and re-calculate color by `lowerPercentile`.\n   * Cells with value smaller than the lowerPercentile will be hidden.\n   * @default 0\n   */\n  lowerPercentile?: number;\n\n  /**\n   * Filter cells and re-calculate elevation by `elevationUpperPercentile`.\n   * Cells with elevation value larger than the `elevationUpperPercentile` will be hidden.\n   * @default 100\n   */\n  elevationUpperPercentile?: number;\n\n  /**\n   * Filter cells and re-calculate elevation by `elevationLowerPercentile`.\n   * Cells with elevation value larger than the `elevationLowerPercentile` will be hidden.\n   * @default 0\n   */\n  elevationLowerPercentile?: number;\n\n  /**\n   * Scaling function used to determine the color of the grid cell, default value is 'quantize'.\n   * Supported Values are 'quantize', 'linear', 'quantile' and 'ordinal'.\n   * @default 'quantize'\n   */\n  colorScaleType?: 'quantize' | 'linear' | 'quantile' | 'ordinal';\n\n  /**\n   * Scaling function used to determine the elevation of the grid cell, only supports 'linear'.\n   */\n  elevationScaleType?: 'linear';\n\n  // TODO - document\n  gridAggregator?: (props: any, params: any) => any;\n\n  /**\n   * Material settings for lighting effect. Applies if `extruded: true`.\n   *\n   * @default true\n   * @see https://deck.gl/docs/developer-guide/using-lighting\n   */\n  material?: Material;\n\n  /**\n   * Defines the operation used to aggregate all data object weights to calculate a cell's color value.\n   * @default 'SUM'\n   */\n  colorAggregation?: 'SUM' | 'MEAN' | 'MIN' | 'MAX';\n\n  /**\n   * Defines the operation used to aggregate all data object weights to calculate a cell's elevation value.\n   * @default 'SUM'\n   */\n  elevationAggregation?: 'SUM' | 'MEAN' | 'MIN' | 'MAX';\n\n  /**\n   * Method called to retrieve the position of each object.\n   * @default object => object.position\n   */\n  getPosition?: AccessorFunction<DataT, Position>;\n\n  /**\n   * The weight of a data object used to calculate the color value for a cell.\n   * @default 1\n   */\n  getColorWeight?: Accessor<DataT, number>;\n\n  /**\n   * After data objects are aggregated into cells, this accessor is called on each cell to get the value that its color is based on.\n   * @default null\n   */\n  getColorValue?: AggregateAccessor<DataT> | null;\n\n  /**\n   * The weight of a data object used to calculate the elevation value for a cell.\n   * @default 1\n   */\n  getElevationWeight?: Accessor<DataT, number>;\n\n  /**\n   * After data objects are aggregated into cells, this accessor is called on each cell to get the value that its elevation is based on.\n   * @default null\n   */\n  getElevationValue?: AggregateAccessor<DataT> | null;\n\n  /**\n   * This callback will be called when bin color domain has been calculated.\n   * @default () => {}\n   */\n  onSetColorDomain?: (minMax: [number, number]) => void;\n\n  /**\n   * This callback will be called when bin elevation domain has been calculated.\n   * @default () => {}\n   */\n  onSetElevationDomain?: (minMax: [number, number]) => void;\n\n  /**\n   * (Experimental) Filter data objects\n   */\n  _filterData: null | ((d: DataT) => boolean);\n};\n\n/** Aggregate data into a grid-based heatmap. Aggregation is performed on CPU. */\nexport default class CPUGridLayer<\n  DataT = any,\n  ExtraPropsT extends {} = {}\n> extends AggregationLayer<DataT, ExtraPropsT & Required<_CPUGridLayerProps<DataT>>> {\n  static layerName = 'CPUGridLayer';\n  static defaultProps = defaultProps;\n\n  initializeState(): void {\n    const cpuAggregator = new CPUAggregator({\n      getAggregator: props => props.gridAggregator,\n      getCellSize: props => props.cellSize\n    });\n\n    this.state = {\n      cpuAggregator,\n      aggregatorState: cpuAggregator.state\n    };\n    const attributeManager = this.getAttributeManager()!;\n    attributeManager.add({\n      positions: {size: 3, type: GL.DOUBLE, accessor: 'getPosition'}\n    });\n    // color and elevation attributes can't be added as attributes\n    // they are calcualted using 'getValue' accessor that takes an array of pints.\n  }\n\n  updateState(opts: UpdateParameters<this>) {\n    super.updateState(opts);\n    this.setState({\n      // make a copy of the internal state of cpuAggregator for testing\n      aggregatorState: this.state.cpuAggregator.updateState(opts, {\n        viewport: this.context.viewport,\n        attributes: this.getAttributes(),\n        numInstances: this.getNumInstances()\n      })\n    });\n  }\n\n  getPickingInfo({info}: GetPickingInfoParams): PickingInfo {\n    return this.state.cpuAggregator.getPickingInfo({info});\n  }\n\n  // create a method for testing\n  _onGetSublayerColor(cell) {\n    return this.state.cpuAggregator.getAccessor('fillColor')(cell);\n  }\n\n  // create a method for testing\n  _onGetSublayerElevation(cell) {\n    return this.state.cpuAggregator.getAccessor('elevation')(cell);\n  }\n\n  _getSublayerUpdateTriggers() {\n    return this.state.cpuAggregator.getUpdateTriggers(this.props);\n  }\n\n  renderLayers(): Layer {\n    const {elevationScale, extruded, cellSize, coverage, material, transitions} = this.props;\n    const {cpuAggregator} = this.state;\n    const SubLayerClass = this.getSubLayerClass('grid-cell', GridCellLayer);\n    const updateTriggers = this._getSublayerUpdateTriggers();\n\n    return new SubLayerClass(\n      {\n        cellSize,\n        coverage,\n        material,\n        elevationScale,\n        extruded,\n\n        getFillColor: this._onGetSublayerColor.bind(this),\n        getElevation: this._onGetSublayerElevation.bind(this),\n        transitions: transitions && {\n          getFillColor: transitions.getColorValue || transitions.getColorWeight,\n          getElevation: transitions.getElevationValue || transitions.getElevationWeight\n        }\n      },\n      this.getSubLayerProps({\n        id: 'grid-cell',\n        updateTriggers\n      }),\n      {\n        data: cpuAggregator.state.layerData.data\n      }\n    );\n  }\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {createIterable} from '@deck.gl/core';\nimport {getGridOffset} from '../utils/grid-aggregation-utils';\n\n/**\n * Calculate density grid from an array of points\n * @param {Object} props - object containing :\n * @param {Iterable} [props.data] - data objects to be aggregated\n * @param {Integer} [props.cellSize] - size of the grid cell\n *\n * @param {Object} aggregationParams - object containing :\n * @param {Object} gridOffset - {xOffset, yOffset} cell size in meters\n * @param {Integer} width - width of the grid\n * @param {Integer} height - height of the grid\n * @param {Boolean} projectPoints - `true` if doing screen space projection, `false` otherwise\n * @param {Array} attributes - attributes array containing position values\n * @param {Viewport} viewport - viewport to be used for projection\n * @param {Array} posOffset - [xOffset, yOffset] offset to be applied to positions to get cell index\n * @param {Object} boundingBox - {xMin, yMin, xMax, yMax} bounding box of input data\n *\n * @returns {object} - grid data, cell dimension\n */\nexport function pointToDensityGridDataCPU(props, aggregationParams) {\n  const hashInfo = pointsToGridHashing(props, aggregationParams);\n  const result = getGridLayerDataFromGridHash(hashInfo);\n\n  return {\n    gridHash: hashInfo.gridHash,\n    gridOffset: hashInfo.gridOffset,\n    data: result\n  };\n}\n\n/**\n * Project points into each cell, return a hash table of cells\n * @param {Iterable} points\n * @param {number} cellSize - unit size in meters\n * @param {function} getPosition - position accessor\n * @returns {object} - grid hash and cell dimension\n */\n/* eslint-disable max-statements, complexity */\nfunction pointsToGridHashing(props, aggregationParams) {\n  const {data = [], cellSize} = props;\n  const {attributes, viewport, projectPoints, numInstances} = aggregationParams;\n  const positions = attributes.positions.value;\n  const {size} = attributes.positions.getAccessor();\n  const boundingBox =\n    aggregationParams.boundingBox || getPositionBoundingBox(attributes.positions, numInstances);\n  const offsets = aggregationParams.posOffset || [180, 90];\n  const gridOffset = aggregationParams.gridOffset || getGridOffset(boundingBox, cellSize);\n\n  if (gridOffset.xOffset <= 0 || gridOffset.yOffset <= 0) {\n    return {gridHash: {}, gridOffset};\n  }\n\n  const {width, height} = viewport;\n  const numCol = Math.ceil(width / gridOffset.xOffset);\n  const numRow = Math.ceil(height / gridOffset.yOffset);\n\n  // calculate count per cell\n  const gridHash = {};\n\n  const {iterable, objectInfo} = createIterable(data);\n  const position = new Array(3);\n  for (const pt of iterable) {\n    objectInfo.index++;\n    position[0] = positions[objectInfo.index * size];\n    position[1] = positions[objectInfo.index * size + 1];\n    position[2] = size >= 3 ? positions[objectInfo.index * size + 2] : 0;\n    const [x, y] = projectPoints ? viewport.project(position) : position;\n    if (Number.isFinite(x) && Number.isFinite(y)) {\n      const yIndex = Math.floor((y + offsets[1]) / gridOffset.yOffset);\n      const xIndex = Math.floor((x + offsets[0]) / gridOffset.xOffset);\n      if (\n        !projectPoints ||\n        // when doing screen space agggregation (projectPoints = true), filter points outside of the viewport range.\n        (xIndex >= 0 && xIndex < numCol && yIndex >= 0 && yIndex < numRow)\n      ) {\n        const key = `${yIndex}-${xIndex}`;\n\n        gridHash[key] = gridHash[key] || {count: 0, points: [], lonIdx: xIndex, latIdx: yIndex};\n        gridHash[key].count += 1;\n        gridHash[key].points.push({\n          source: pt,\n          index: objectInfo.index\n        });\n      }\n    }\n  }\n\n  return {gridHash, gridOffset, offsets: [offsets[0] * -1, offsets[1] * -1]};\n}\n/* eslint-enable max-statements, complexity */\n\nfunction getGridLayerDataFromGridHash({gridHash, gridOffset, offsets}) {\n  const data = new Array(Object.keys(gridHash).length);\n  let i = 0;\n  for (const key in gridHash) {\n    const idxs = key.split('-');\n    const latIdx = parseInt(idxs[0], 10);\n    const lonIdx = parseInt(idxs[1], 10);\n    const index = i++;\n\n    data[index] = {\n      index,\n      position: [\n        offsets[0] + gridOffset.xOffset * lonIdx,\n        offsets[1] + gridOffset.yOffset * latIdx\n      ],\n      ...gridHash[key]\n    };\n  }\n  return data;\n}\n\n// Calculate bounding box of position attribute\nfunction getPositionBoundingBox(positionAttribute, numInstance) {\n  // TODO - value might not exist (e.g. attribute transition)\n  const positions = positionAttribute.value;\n  const {size} = positionAttribute.getAccessor();\n\n  let yMin = Infinity;\n  let yMax = -Infinity;\n  let xMin = Infinity;\n  let xMax = -Infinity;\n  let y;\n  let x;\n\n  for (let i = 0; i < numInstance; i++) {\n    x = positions[i * size];\n    y = positions[i * size + 1];\n    if (Number.isFinite(x) && Number.isFinite(y)) {\n      yMin = y < yMin ? y : yMin;\n      yMax = y > yMax ? y : yMax;\n      xMin = x < xMin ? x : xMin;\n      xMax = x > xMax ? x : xMax;\n    }\n  }\n\n  return {xMin, xMax, yMin, yMax};\n}\n","// Copyright (c) 2015-2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n/* eslint-disable camelcase */\nimport {project} from '@deck.gl/core';\nimport type {Viewport, _ShaderModule as ShaderModule} from '@deck.gl/core';\n\nimport type {BrushingExtensionProps} from './brushing-extension';\n\ntype BrushingModuleSettings = {\n  // From layer context\n  viewport: Viewport;\n  mousePosition?: {x: number; y: number};\n} & BrushingExtensionProps;\n\nconst vs = `\n  uniform bool brushing_enabled;\n  uniform int brushing_target;\n  uniform vec2 brushing_mousePos;\n  uniform float brushing_radius;\n\n  #ifdef NON_INSTANCED_MODEL\n  attribute vec2 brushingTargets;\n  #else\n  attribute vec2 instanceBrushingTargets;\n  #endif\n\n  varying float brushing_isVisible;\n\n  bool brushing_isPointInRange(vec2 position) {\n    if (!brushing_enabled) {\n      return true;\n    }\n    vec2 source_commonspace = project_position(position);\n    vec2 target_commonspace = project_position(brushing_mousePos);\n    float distance = length((target_commonspace - source_commonspace) / project_uCommonUnitsPerMeter.xy);\n\n    return distance <= brushing_radius;\n  }\n\n  bool brushing_arePointsInRange(vec2 sourcePos, vec2 targetPos) {\n    return brushing_isPointInRange(sourcePos) || brushing_isPointInRange(targetPos);\n  }\n\n  void brushing_setVisible(bool visible) {\n    brushing_isVisible = float(visible);\n  }\n`;\n\nconst fs = `\n  uniform bool brushing_enabled;\n  varying float brushing_isVisible;\n`;\n\nconst TARGET = {\n  source: 0,\n  target: 1,\n  custom: 2,\n  source_target: 3\n};\n\nconst inject = {\n  'vs:DECKGL_FILTER_GL_POSITION': `\n    vec2 brushingTarget;\n    vec2 brushingSource;\n    if (brushing_target == 3) {\n      brushingTarget = geometry.worldPositionAlt.xy;\n      brushingSource = geometry.worldPosition.xy;\n    } else if (brushing_target == 0) {\n      brushingTarget = geometry.worldPosition.xy;\n    } else if (brushing_target == 1) {\n      brushingTarget = geometry.worldPositionAlt.xy;\n    } else {\n      #ifdef NON_INSTANCED_MODEL\n      brushingTarget = brushingTargets;\n      #else\n      brushingTarget = instanceBrushingTargets;\n      #endif\n    }\n    bool visible;\n    if (brushing_target == 3) {\n      visible = brushing_arePointsInRange(brushingSource, brushingTarget);\n    } else {\n      visible = brushing_isPointInRange(brushingTarget);\n    }\n    brushing_setVisible(visible);\n  `,\n\n  'fs:DECKGL_FILTER_COLOR': `\n    if (brushing_enabled && brushing_isVisible < 0.5) {\n      discard;\n    }\n  `\n};\n\nexport default {\n  name: 'brushing',\n  dependencies: [project],\n  vs,\n  fs,\n  inject,\n  getUniforms: (opts?: BrushingModuleSettings | {}): Record<string, any> => {\n    if (!opts || !('viewport' in opts)) {\n      return {};\n    }\n    const {\n      brushingEnabled = true,\n      brushingRadius = 10000,\n      brushingTarget = 'source',\n      mousePosition,\n      viewport\n    } = opts;\n    return {\n      brushing_enabled: Boolean(\n        brushingEnabled && mousePosition && viewport.containsPixel(mousePosition)\n      ),\n      brushing_radius: brushingRadius,\n      brushing_target: TARGET[brushingTarget] || 0,\n      brushing_mousePos: mousePosition\n        ? viewport.unproject([mousePosition.x - viewport.x, mousePosition.y - viewport.y])\n        : [0, 0]\n    };\n  }\n} as ShaderModule<BrushingModuleSettings>;\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {LayerExtension} from '@deck.gl/core';\nimport shaderModule from './shader-module';\n\nimport type {Layer, LayerContext, Accessor} from '@deck.gl/core';\n\nconst defaultProps = {\n  getBrushingTarget: {type: 'accessor', value: [0, 0]},\n\n  brushingTarget: 'source',\n  brushingEnabled: true,\n  brushingRadius: 10000\n};\n\nexport type BrushingExtensionProps<DataT = any> = {\n  /**\n   * Called to retrieve an arbitrary position for each object that it will be filtered by.\n   * Only effective if `brushingTarget` is set to `custom`.\n   */\n  getBrushingTarget?: Accessor<DataT, [number, number]>;\n  /**\n   * Enable/disable brushing. If brushing is disabled, all objects are rendered.\n   * @default true\n   */\n  brushingEnabled?: boolean;\n  /**\n   * The position used to filter each object by.\n   */\n  brushingTarget?: 'source' | 'target' | 'source_target' | 'custom';\n  /** The brushing radius centered at the pointer, in meters. If a data object is within this circle, it is rendered; otherwise it is hidden.\n   * @default 10000\n   */\n  brushingRadius?: number;\n};\n\n/** Adds GPU-based data brushing functionalities to layers. It allows the layer to show/hide objects based on the current pointer position. */\nexport default class BrushingExtension extends LayerExtension {\n  static defaultProps = defaultProps;\n  static extensionName = 'BrushingExtension';\n\n  getShaders(): any {\n    return {\n      modules: [shaderModule]\n    };\n  }\n\n  initializeState(this: Layer<BrushingExtensionProps>, context: LayerContext, extension: this) {\n    const attributeManager = this.getAttributeManager();\n    if (attributeManager) {\n      attributeManager.add({\n        brushingTargets: {\n          size: 2,\n          accessor: 'getBrushingTarget',\n          shaderAttributes: {\n            brushingTargets: {\n              divisor: 0\n            },\n            instanceBrushingTargets: {\n              divisor: 1\n            }\n          }\n        }\n      });\n    }\n\n    // Trigger redraw when mouse moves\n    // TODO - expose this in a better way\n    this.state.onMouseMove = () => {\n      this.getCurrentLayer()?.setNeedsRedraw();\n    };\n    if (context.deck) {\n      // @ts-expect-error (2446) accessing protected property\n      context.deck.eventManager.on({\n        pointermove: this.state.onMouseMove,\n        pointerleave: this.state.onMouseMove\n      });\n    }\n  }\n\n  finalizeState(this: Layer<BrushingExtensionProps>, context: LayerContext, extension: this) {\n    // Remove event listeners\n    if (context.deck) {\n      // @ts-expect-error (2446) accessing protected property\n      context.deck.eventManager.off({\n        pointermove: this.state.onMouseMove,\n        pointerleave: this.state.onMouseMove\n      });\n    }\n  }\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {\n  Accessor,\n  AccessorFunction,\n  Color,\n  log,\n  Position,\n  Material,\n  UpdateParameters,\n  DefaultProps\n} from '@deck.gl/core';\nimport {ColumnLayer} from '@deck.gl/layers';\n\nimport {defaultColorRange} from '../utils/color-utils';\n\nimport {pointToHexbin} from './hexagon-aggregator';\nimport CPUAggregator from '../utils/cpu-aggregator';\nimport AggregationLayer, {AggregationLayerProps} from '../aggregation-layer';\n\nimport GL from '@luma.gl/constants';\nimport {AggregateAccessor} from '../types';\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nfunction nop() {}\n\nconst defaultProps: DefaultProps<HexagonLayerProps> = {\n  // color\n  colorDomain: null,\n  colorRange: defaultColorRange,\n  getColorValue: {type: 'accessor', value: null}, // default value is calcuated from `getColorWeight` and `colorAggregation`\n  getColorWeight: {type: 'accessor', value: 1},\n  colorAggregation: 'SUM',\n  lowerPercentile: {type: 'number', value: 0, min: 0, max: 100},\n  upperPercentile: {type: 'number', value: 100, min: 0, max: 100},\n  colorScaleType: 'quantize',\n  onSetColorDomain: nop,\n\n  // elevation\n  elevationDomain: null,\n  elevationRange: [0, 1000],\n  getElevationValue: {type: 'accessor', value: null}, // default value is calcuated from `getElevationWeight` and `elevationAggregation`\n  getElevationWeight: {type: 'accessor', value: 1},\n  elevationAggregation: 'SUM',\n  elevationLowerPercentile: {type: 'number', value: 0, min: 0, max: 100},\n  elevationUpperPercentile: {type: 'number', value: 100, min: 0, max: 100},\n  elevationScale: {type: 'number', min: 0, value: 1},\n  elevationScaleType: 'linear',\n  onSetElevationDomain: nop,\n\n  radius: {type: 'number', value: 1000, min: 1},\n  coverage: {type: 'number', min: 0, max: 1, value: 1},\n  extruded: false,\n  hexagonAggregator: pointToHexbin,\n  getPosition: {type: 'accessor', value: x => x.position},\n  // Optional material for 'lighting' shader module\n  material: true,\n\n  // data filter\n  _filterData: {type: 'function', value: null, optional: true}\n};\n\n/** All properties supported by by HexagonLayer. */\nexport type HexagonLayerProps<DataT = any> = _HexagonLayerProps<DataT> &\n  AggregationLayerProps<DataT>;\n\n/** Properties added by HexagonLayer. */\ntype _HexagonLayerProps<DataT = any> = {\n  /**\n   * Radius of hexagon bin in meters. The hexagons are pointy-topped (rather than flat-topped).\n   * @default 1000\n   */\n  radius?: number;\n\n  /**\n   * Function to aggregate data into hexagonal bins.\n   * @default d3-hexbin\n   */\n  hexagonAggregator?: (props: any, params: any) => any;\n\n  /**\n   * Color scale input domain.\n   * @default [min(colorWeight), max(colorWeight)]\n   */\n  colorDomain?: [number, number] | null;\n\n  /**\n   * Specified as an array of colors [color1, color2, ...].\n   * @default `6-class YlOrRd` - [colorbrewer](http://colorbrewer2.org/#type=sequential&scheme=YlOrRd&n=6)\n   */\n  colorRange?: Color[];\n\n  /**\n   * Hexagon radius multiplier, clamped between 0 - 1.\n   * @default 1\n   */\n  coverage?: number;\n\n  /**\n   * Elevation scale input domain. The elevation scale is a linear scale that maps number of counts to elevation.\n   * @default [0, max(elevationWeight)]\n   */\n  elevationDomain?: [number, number] | null;\n\n  /**\n   * Elevation scale output range.\n   * @default [0, 1000]\n   */\n  elevationRange?: [number, number];\n\n  /**\n   * Hexagon elevation multiplier.\n   * @default 1\n   */\n  elevationScale?: number;\n\n  /**\n   * Whether to enable cell elevation. If set to false, all cell will be flat.\n   * @default false\n   */\n  extruded?: boolean;\n\n  /**\n   * Filter bins and re-calculate color by `upperPercentile`.\n   * Hexagons with color value larger than the `upperPercentile` will be hidden.\n   * @default 100\n   */\n  upperPercentile?: number;\n\n  /**\n   * Filter bins and re-calculate color by `lowerPercentile`.\n   * Hexagons with color value smaller than the `lowerPercentile` will be hidden.\n   * @default 0\n   */\n  lowerPercentile?: number;\n\n  /**\n   * Filter bins and re-calculate elevation by `elevationUpperPercentile`.\n   * Hexagons with elevation value larger than the `elevationUpperPercentile` will be hidden.\n   * @default 100\n   */\n  elevationUpperPercentile?: number;\n\n  /**\n   * Filter bins and re-calculate elevation by `elevationLowerPercentile`.\n   * Hexagons with elevation value larger than the `elevationLowerPercentile` will be hidden.\n   * @default 0\n   */\n  elevationLowerPercentile?: number;\n\n  /**\n   * Scaling function used to determine the color of the grid cell, default value is 'quantize'.\n   * Supported Values are 'quantize', 'quantile' and 'ordinal'.\n   * @default 'quantize'\n   */\n  colorScaleType?: 'quantize' | 'quantile' | 'ordinal';\n\n  /**\n   * Scaling function used to determine the elevation of the grid cell, only supports 'linear'.\n   */\n  elevationScaleType?: 'linear';\n\n  /**\n   * Material settings for lighting effect. Applies if `extruded: true`.\n   *\n   * @default true\n   * @see https://deck.gl/docs/developer-guide/using-lighting\n   */\n  material?: Material;\n\n  /**\n   * Defines the operation used to aggregate all data object weights to calculate a cell's color value.\n   * @default 'SUM'\n   */\n  colorAggregation?: 'SUM' | 'MEAN' | 'MIN' | 'MAX';\n\n  /**\n   * Defines the operation used to aggregate all data object weights to calculate a cell's elevation value.\n   * @default 'SUM'\n   */\n  elevationAggregation?: 'SUM' | 'MEAN' | 'MIN' | 'MAX';\n\n  /**\n   * Method called to retrieve the position of each object.\n   * @default object => object.position\n   */\n  getPosition?: AccessorFunction<DataT, Position>;\n\n  /**\n   * The weight of a data object used to calculate the color value for a bin.\n   * @default 1\n   */\n  getColorWeight?: Accessor<DataT, number>;\n\n  /**\n   * After data objects are aggregated into bins, this accessor is called on each cell to get the value that its color is based on.\n   * @default null\n   */\n  getColorValue?: AggregateAccessor<DataT> | null;\n\n  /**\n   * The weight of a data object used to calculate the elevation value for a bin.\n   * @default 1\n   */\n  getElevationWeight?: Accessor<DataT, number>;\n\n  /**\n   * After data objects are aggregated into bins, this accessor is called on each cell to get the value that its elevation is based on.\n   * @default null\n   */\n  getElevationValue?: AggregateAccessor<DataT> | null;\n\n  /**\n   * This callback will be called when cell color domain has been calculated.\n   * @default () => {}\n   */\n  onSetColorDomain?: (minMax: [number, number]) => void;\n\n  /**\n   * This callback will be called when cell elevation domain has been calculated.\n   * @default () => {}\n   */\n  onSetElevationDomain?: (minMax: [number, number]) => void;\n\n  /**\n   * (Experimental) Filter data objects\n   */\n  _filterData: null | ((d: DataT) => boolean);\n};\n\n/** Aggregates data into a hexagon-based heatmap. The color and height of a hexagon are determined based on the objects it contains. */\nexport default class HexagonLayer<DataT, ExtraPropsT extends {} = {}> extends AggregationLayer<\n  DataT,\n  ExtraPropsT & Required<_HexagonLayerProps>\n> {\n  static layerName = 'HexagonLayer';\n  static defaultProps = defaultProps;\n\n  state!: AggregationLayer<DataT>['state'] & {\n    cpuAggregator: CPUAggregator;\n    aggregatorState: any;\n  };\n  initializeState() {\n    const cpuAggregator = new CPUAggregator({\n      getAggregator: props => props.hexagonAggregator,\n      getCellSize: props => props.radius\n    });\n\n    this.state = {\n      cpuAggregator,\n      aggregatorState: cpuAggregator.state,\n      vertices: null\n    };\n    const attributeManager = this.getAttributeManager()!;\n    attributeManager.add({\n      positions: {size: 3, type: GL.DOUBLE, accessor: 'getPosition'}\n    });\n    // color and elevation attributes can't be added as attributes\n    // they are calculated using 'getValue' accessor that takes an array of pints.\n  }\n\n  updateState(opts: UpdateParameters<this>) {\n    super.updateState(opts);\n\n    if (opts.changeFlags.propsOrDataChanged) {\n      const aggregatorState = this.state.cpuAggregator.updateState(opts, {\n        viewport: this.context.viewport,\n        attributes: this.getAttributes()\n      });\n      if (this.state.aggregatorState.layerData !== aggregatorState.layerData) {\n        // if user provided custom aggregator and returns hexagonVertices,\n        // Need to recalculate radius and angle based on vertices\n        const {hexagonVertices} = aggregatorState.layerData || {};\n        this.setState({\n          vertices: hexagonVertices && this.convertLatLngToMeterOffset(hexagonVertices)\n        });\n      }\n\n      this.setState({\n        // make a copy of the internal state of cpuAggregator for testing\n        aggregatorState\n      });\n    }\n  }\n\n  convertLatLngToMeterOffset(hexagonVertices) {\n    const {viewport} = this.context;\n    if (Array.isArray(hexagonVertices) && hexagonVertices.length === 6) {\n      // get centroid of hexagons\n      const vertex0 = hexagonVertices[0];\n      const vertex3 = hexagonVertices[3];\n\n      const centroid = [(vertex0[0] + vertex3[0]) / 2, (vertex0[1] + vertex3[1]) / 2];\n      const centroidFlat = viewport.projectFlat(centroid);\n\n      const {metersPerUnit} = viewport.getDistanceScales(centroid);\n\n      // offset all points by centroid to meter offset\n      const vertices = hexagonVertices.map(vt => {\n        const vtFlat = viewport.projectFlat(vt);\n\n        return [\n          (vtFlat[0] - centroidFlat[0]) * metersPerUnit[0],\n          (vtFlat[1] - centroidFlat[1]) * metersPerUnit[1]\n        ];\n      });\n\n      return vertices;\n    }\n\n    log.error('HexagonLayer: hexagonVertices needs to be an array of 6 points')();\n    return null;\n  }\n\n  getPickingInfo({info}) {\n    return this.state.cpuAggregator.getPickingInfo({info});\n  }\n\n  // create a method for testing\n  _onGetSublayerColor(cell) {\n    return this.state.cpuAggregator.getAccessor('fillColor')(cell);\n  }\n\n  // create a method for testing\n  _onGetSublayerElevation(cell) {\n    return this.state.cpuAggregator.getAccessor('elevation')(cell);\n  }\n\n  _getSublayerUpdateTriggers() {\n    return this.state.cpuAggregator.getUpdateTriggers(this.props);\n  }\n\n  renderLayers() {\n    const {elevationScale, extruded, coverage, material, transitions} = this.props;\n    const {aggregatorState, vertices} = this.state;\n\n    const SubLayerClass = this.getSubLayerClass('hexagon-cell', ColumnLayer);\n    const updateTriggers = this._getSublayerUpdateTriggers();\n\n    const geometry = vertices\n      ? {vertices, radius: 1}\n      : {\n          // default geometry\n          radius: aggregatorState.layerData.radiusCommon || 1,\n          radiusUnits: 'common',\n          angle: 90\n        };\n    return new SubLayerClass(\n      {\n        ...geometry,\n        diskResolution: 6,\n        elevationScale,\n        extruded,\n        coverage,\n        material,\n\n        getFillColor: this._onGetSublayerColor.bind(this),\n        getElevation: this._onGetSublayerElevation.bind(this),\n        transitions: transitions && {\n          getFillColor: transitions.getColorValue || transitions.getColorWeight,\n          getElevation: transitions.getElevationValue || transitions.getElevationWeight\n        }\n      },\n      this.getSubLayerProps({\n        id: 'hexagon-cell',\n        updateTriggers\n      }),\n      {\n        data: aggregatorState.layerData.data\n      }\n    );\n  }\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {hexbin} from 'd3-hexbin';\nimport {createIterable, log} from '@deck.gl/core';\n\n/**\n * Use d3-hexbin to performs hexagonal binning from geo points to hexagons\n * @param {Iterable} data - array of points\n * @param {Number} radius - hexagon radius in meter\n * @param {function} getPosition - get points lon lat\n * @param {Object} viewport - current viewport object\n\n * @return {Object} - hexagons and countRange\n */\nexport function pointToHexbin(props, aggregationParams) {\n  const {data, radius} = props;\n  const {viewport, attributes} = aggregationParams;\n  // get hexagon radius in mercator world unit\n  const centerLngLat = data.length ? getPointsCenter(data, aggregationParams) : null;\n  const radiusCommon = getRadiusInCommon(radius, viewport, centerLngLat);\n\n  // add world space coordinates to points\n  const screenPoints = [];\n  const {iterable, objectInfo} = createIterable(data);\n  const positions = attributes.positions.value;\n  const {size} = attributes.positions.getAccessor();\n  for (const object of iterable) {\n    objectInfo.index++;\n    const posIndex = objectInfo.index * size;\n    const position = [positions[posIndex], positions[posIndex + 1]];\n    const arrayIsFinite = Number.isFinite(position[0]) && Number.isFinite(position[1]);\n    if (arrayIsFinite) {\n      screenPoints.push({\n        screenCoord: viewport.projectFlat(position),\n        source: object,\n        index: objectInfo.index\n      });\n    } else {\n      log.warn('HexagonLayer: invalid position')();\n    }\n  }\n\n  const newHexbin = hexbin()\n    .radius(radiusCommon)\n    .x(d => d.screenCoord[0])\n    .y(d => d.screenCoord[1]);\n\n  const hexagonBins = newHexbin(screenPoints);\n\n  return {\n    hexagons: hexagonBins.map((hex, index) => ({\n      position: viewport.unprojectFlat([hex.x, hex.y]),\n      points: hex,\n      index\n    })),\n    radiusCommon\n  };\n}\n\n/**\n * Get the bounding box of all data points\n */\nexport function getPointsCenter(data, aggregationParams) {\n  const {attributes} = aggregationParams;\n  const positions = attributes.positions.value;\n  const {size} = attributes.positions.getAccessor();\n\n  let minX = Infinity;\n  let minY = Infinity;\n  let maxX = -Infinity;\n  let maxY = -Infinity;\n  let i;\n\n  for (i = 0; i < size * data.length; i += size) {\n    const x = positions[i];\n    const y = positions[i + 1];\n    const arrayIsFinite = Number.isFinite(x) && Number.isFinite(y);\n\n    if (arrayIsFinite) {\n      minX = Math.min(x, minX);\n      maxX = Math.max(x, maxX);\n      minY = Math.min(y, minY);\n      maxY = Math.max(y, maxY);\n    }\n  }\n\n  // return center\n  return [minX, minY, maxX, maxY].every(Number.isFinite)\n    ? [(minX + maxX) / 2, (minY + maxY) / 2]\n    : null;\n}\n\n/**\n * Get radius in mercator world space coordinates from meter\n * @param {Number} radius - in meter\n * @param {Object} viewport - current viewport object\n * @param {Array<Number>} center - data center\n\n * @return {Number} radius in mercator world spcae coordinates\n */\nexport function getRadiusInCommon(radius, viewport, center) {\n  const {unitsPerMeter} = viewport.getDistanceScales(center);\n  // x, y distance should be the same\n  return radius * unitsPerMeter[0];\n}\n","export const dashShaders = {\n  inject: {\n    'vs:#decl': `\nattribute vec2 instanceDashArrays;\nattribute float instanceDashOffsets;\nvarying vec2 vDashArray;\nvarying float vDashOffset;\n`,\n\n    'vs:#main-end': `\nvDashArray = instanceDashArrays;\nvDashOffset = instanceDashOffsets / width.x;\n`,\n\n    'fs:#decl': `\nuniform float dashAlignMode;\nuniform float capType;\nuniform bool dashGapPickable;\nvarying vec2 vDashArray;\nvarying float vDashOffset;\n\nfloat round(float x) {\n  return floor(x + 0.5);\n}\n`,\n\n    // if given position is in the gap part of the dashed line\n    // dashArray.x: solid stroke length, relative to width\n    // dashArray.y: gap length, relative to width\n    // alignMode:\n    // 0 - no adjustment\n    // o----     ----     ----     ---- o----     -o----     ----     o\n    // 1 - stretch to fit, draw half dash at each end for nicer joints\n    // o--    ----    ----    ----    --o--      --o--     ----     --o\n    'fs:#main-start': `\n  float solidLength = vDashArray.x;\n  float gapLength = vDashArray.y;\n  float unitLength = solidLength + gapLength;\n\n  float offset;\n\n  if (unitLength > 0.0) {\n    if (dashAlignMode == 0.0) {\n      offset = vDashOffset;\n    } else {\n      unitLength = vPathLength / round(vPathLength / unitLength);\n      offset = solidLength / 2.0;\n    }\n\n    float unitOffset = mod(vPathPosition.y + offset, unitLength);\n\n    if (gapLength > 0.0 && unitOffset > solidLength) {\n      if (capType <= 0.5) {\n        if (!(dashGapPickable && picking_uActive)) {\n          discard;\n        }\n      } else {\n        // caps are rounded, test the distance to solid ends\n        float distToEnd = length(vec2(\n          min(unitOffset - solidLength, unitLength - unitOffset),\n          vPathPosition.x\n        ));\n        if (distToEnd > 1.0) {\n          if (!(dashGapPickable && picking_uActive)) {\n            discard;\n          }\n        }\n      }\n    }\n  }\n`\n  }\n};\n\nexport const offsetShaders = {\n  inject: {\n    'vs:#decl': `\nattribute float instanceOffsets;\n`,\n    'vs:DECKGL_FILTER_SIZE': `\n  float offsetWidth = abs(instanceOffsets * 2.0) + 1.0;\n  size *= offsetWidth;\n`,\n    'vs:#main-end': `\n  float offsetWidth = abs(instanceOffsets * 2.0) + 1.0;\n  float offsetDir = sign(instanceOffsets);\n  vPathPosition.x = (vPathPosition.x + offsetDir) * offsetWidth - offsetDir;\n  vPathPosition.y *= offsetWidth;\n  vPathLength *= offsetWidth;\n`,\n    'fs:#main-start': `\n  float isInside;\n  isInside = step(-1.0, vPathPosition.x) * step(vPathPosition.x, 1.0);\n  if (isInside == 0.0) {\n    discard;\n  }\n`\n  }\n};\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {LayerExtension, _mergeShaders as mergeShaders} from '@deck.gl/core';\nimport {dashShaders, offsetShaders} from './shaders.glsl';\nimport {dist} from 'gl-matrix/vec3';\n\nimport type {Layer, LayerContext, Accessor, UpdateParameters} from '@deck.gl/core';\n\nconst defaultProps = {\n  getDashArray: {type: 'accessor', value: [0, 0]},\n  getOffset: {type: 'accessor', value: 0},\n  dashJustified: false,\n  dashGapPickable: false\n};\n\nexport type PathStyleExtensionProps<DataT = any> = {\n  /**\n   * Accessor for the dash array to draw each path with: `[dashSize, gapSize]` relative to the width of the path.\n   * Requires the `dash` option to be on.\n   */\n  getDashArray?: Accessor<DataT, [number, number]>;\n  /**\n   * Accessor for the offset to draw each path with, relative to the width of the path.\n   * Negative offset is to the left hand side, and positive offset is to the right hand side.\n   * @default 0\n   */\n  getOffset?: Accessor<DataT, number>;\n  /**\n   * If `true`, adjust gaps for the dashes to align at both ends.\n   * @default false\n   */\n  dashJustified?: boolean;\n  /**\n   * If `true`, gaps between solid strokes are pickable. If `false`, only the solid strokes are pickable.\n   * @default false\n   */\n  dashGapPickable?: boolean;\n};\n\ntype PathStyleExtensionOptions = {\n  /**\n   * Add capability to render dashed lines.\n   * @default false\n   */\n  dash: boolean;\n  /**\n   * Add capability to offset lines.\n   * @default false\n   */\n  offset: boolean;\n  /**\n   * Improve dash rendering quality in certain circumstances. Note that this option introduces additional performance overhead.\n   * @default false\n   */\n  highPrecisionDash: boolean;\n};\n\n/** Adds selected features to the `PathLayer` and composite layers that render the `PathLayer`. */\nexport default class PathStyleExtension extends LayerExtension<PathStyleExtensionOptions> {\n  static defaultProps = defaultProps;\n  static extensionName = 'PathStyleExtension';\n\n  constructor({\n    dash = false,\n    offset = false,\n    highPrecisionDash = false\n  }: Partial<PathStyleExtensionOptions> = {}) {\n    super({dash: dash || highPrecisionDash, offset, highPrecisionDash});\n  }\n\n  isEnabled(layer: Layer<PathStyleExtensionProps>): boolean {\n    return 'pathTesselator' in layer.state;\n  }\n\n  getShaders(this: Layer<PathStyleExtensionProps>, extension: this): any {\n    if (!extension.isEnabled(this)) {\n      return null;\n    }\n\n    // Merge shader injection\n    let result = {};\n    if (extension.opts.dash) {\n      result = mergeShaders(result, dashShaders);\n    }\n    if (extension.opts.offset) {\n      result = mergeShaders(result, offsetShaders);\n    }\n\n    return result;\n  }\n\n  initializeState(this: Layer<PathStyleExtensionProps>, context: LayerContext, extension: this) {\n    const attributeManager = this.getAttributeManager();\n    if (!attributeManager || !extension.isEnabled(this)) {\n      // This extension only works with the PathLayer\n      return;\n    }\n\n    if (extension.opts.dash) {\n      attributeManager.addInstanced({\n        instanceDashArrays: {size: 2, accessor: 'getDashArray'}\n      });\n    }\n    if (extension.opts.highPrecisionDash) {\n      attributeManager.addInstanced({\n        instanceDashOffsets: {\n          size: 1,\n          accessor: 'getPath',\n          transform: extension.getDashOffsets.bind(this)\n        }\n      });\n    }\n    if (extension.opts.offset) {\n      attributeManager.addInstanced({\n        instanceOffsets: {size: 1, accessor: 'getOffset'}\n      });\n    }\n  }\n\n  updateState(\n    this: Layer<PathStyleExtensionProps>,\n    params: UpdateParameters<Layer<PathStyleExtensionProps>>,\n    extension: this\n  ) {\n    if (!extension.isEnabled(this)) {\n      return;\n    }\n\n    const uniforms: any = {};\n\n    if (extension.opts.dash) {\n      uniforms.dashAlignMode = this.props.dashJustified ? 1 : 0;\n      uniforms.dashGapPickable = Boolean(this.props.dashGapPickable);\n    }\n\n    this.state.model.setUniforms(uniforms);\n  }\n\n  getDashOffsets(this: Layer<PathStyleExtensionProps>, path: number[] | number[][]): number[] {\n    const result = [0];\n    const positionSize = this.props.positionFormat === 'XY' ? 2 : 3;\n    const isNested = Array.isArray(path[0]);\n    const geometrySize = isNested ? path.length : path.length / positionSize;\n\n    let p;\n    let prevP;\n    for (let i = 0; i < geometrySize - 1; i++) {\n      p = isNested ? path[i] : path.slice(i * positionSize, i * positionSize + positionSize);\n      p = this.projectPosition(p);\n\n      if (i > 0) {\n        result[i] = result[i - 1] + dist(prevP, p);\n      }\n\n      prevP = p;\n    }\n    return result;\n  }\n}\n","// Copyright (c) 2017 Uber Technologies, Inc.\n// MIT License\nimport {NumericArray} from '@math.gl/types';\nimport assert from './assert';\n\nimport type MathArray from '../classes/base/math-array';\n\nexport type ConfigurationOptions = {\n  EPSILON: number;\n  debug?: boolean;\n  precision: number;\n  printTypes?: boolean;\n  printDegrees?: boolean;\n  printRowMajor?: boolean;\n  _cartographicRadians?: boolean;\n};\n\nconst RADIANS_TO_DEGREES = (1 / Math.PI) * 180;\nconst DEGREES_TO_RADIANS = (1 / 180) * Math.PI;\n\n// TODO - remove\nexport const config: ConfigurationOptions = {\n  EPSILON: 1e-12,\n  debug: false,\n  precision: 4,\n  printTypes: false,\n  printDegrees: false,\n  printRowMajor: true\n};\n\nexport function configure(options?: Partial<ConfigurationOptions>): ConfigurationOptions {\n  // Only copy existing keys\n  for (const key in options) {\n    assert(key in config);\n    config[key] = options[key];\n  }\n  return config;\n}\n\n/**\n * Formats a value into a string\n * @param value\n * @param param1\n * @returns\n */\nexport function formatValue(\n  value: number,\n  {precision = config.precision}: {precision?: number} = {}\n): string {\n  value = round(value);\n  // get rid of trailing zeros\n  return `${parseFloat(value.toPrecision(precision))}`;\n}\n\n/**\n * Check if value is an \"array\"\n * Returns `true` if value is either an array or a typed array\n *\n * Note: returns `false` for `ArrayBuffer` and `DataView` instances\n */\nexport function isArray(value: unknown): boolean {\n  return Array.isArray(value) || (ArrayBuffer.isView(value) && !(value instanceof DataView));\n}\n\nexport function clone(array: NumericArray | MathArray): NumericArray {\n  return 'clone' in array ? array.clone() : array.slice();\n}\n\nexport function toRadians(degrees: number): number;\nexport function toRadians(degrees: NumericArray): NumericArray;\n\nexport function toRadians(degrees: number | NumericArray): number | NumericArray {\n  return radians(degrees as NumericArray);\n}\n\nexport function toDegrees(degrees: number): number;\nexport function toDegrees(degrees: NumericArray): NumericArray;\n\nexport function toDegrees(radians: number | NumericArray): number | NumericArray {\n  return degrees(radians as NumericArray);\n}\n\n// GLSL math function equivalents - Works on both single values and vectors\n\n/**\n * \"GLSL equivalent\" radians: Works on single values and vectors\n */\nexport function radians(degrees: number): number;\nexport function radians(degrees: NumericArray, result?: NumericArray): NumericArray;\n\nexport function radians(\n  degrees: number | NumericArray,\n  result?: NumericArray\n): number | NumericArray {\n  return map(degrees, (degrees) => degrees * DEGREES_TO_RADIANS, result);\n}\n\n/**\n * \"GLSL equivalent\" degrees: Works on single values and vectors\n */\nexport function degrees(radians: number): number;\nexport function degrees(radians: NumericArray, result?: NumericArray): NumericArray;\n\nexport function degrees(\n  radians: number | NumericArray,\n  result?: NumericArray\n): number | NumericArray {\n  return map(radians, (radians) => radians * RADIANS_TO_DEGREES, result);\n}\n\n/**\n * \"GLSL equivalent\" of `Math.sin`: Works on single values and vectors\n * @deprecated\n */\nexport function sin(radians: number | NumericArray, result?: NumericArray): number | NumericArray {\n  return map(radians, (angle) => Math.sin(angle), result);\n}\n\n/**\n * \"GLSL equivalent\" of `Math.cos`: Works on single values and vectors\n * @deprecated\n */\nexport function cos(radians: number | NumericArray, result?: NumericArray): number | NumericArray {\n  return map(radians, (angle) => Math.cos(angle), result);\n}\n\n/**\n * \"GLSL equivalent\" of `Math.tan`: Works on single values and vectors\n * @deprecated\n */\nexport function tan(radians: number | NumericArray, result?: NumericArray): number | NumericArray {\n  return map(radians, (angle) => Math.tan(angle), result);\n}\n\n/**\n * \"GLSL equivalent\" of `Math.asin`: Works on single values and vectors\n * @deprecated\n */\nexport function asin(radians: number | NumericArray, result?: NumericArray): number | NumericArray {\n  return map(radians, (angle) => Math.asin(angle), result);\n}\n\n/**\n * \"GLSL equivalent\" of `Math.acos`: Works on single values and vectors\n * @deprecated\n */\nexport function acos(radians: number | NumericArray, result?: NumericArray): number | NumericArray {\n  return map(radians, (angle) => Math.acos(angle), result);\n}\n\n/**\n * \"GLSL equivalent\" of `Math.atan`: Works on single values and vectors\n * @deprecated\n */\nexport function atan(radians: number | NumericArray, result?: NumericArray): number | NumericArray {\n  return map(radians, (angle) => Math.atan(angle), result);\n}\n\n/**\n * GLSL style value clamping: Works on single values and vectors\n */\nexport function clamp(value: number, min: number, max: number): number;\nexport function clamp(value: NumericArray, min: number, max: number): NumericArray;\n\nexport function clamp(\n  value: number | NumericArray,\n  min: number,\n  max: number\n): number | NumericArray {\n  return map(value, (value) => Math.max(min, Math.min(max, value)));\n}\n\n/**\n * Interpolate between two numbers or two arrays\n */\nexport function lerp(a: number, b: number, t: number): number;\nexport function lerp(a: NumericArray, b: NumericArray, t: number): NumericArray;\n\nexport function lerp(\n  a: number | NumericArray,\n  b: number | NumericArray,\n  t: number\n): number | NumericArray {\n  if (isArray(a)) {\n    return (a as NumericArray).map((ai: number, i: number) => lerp(ai, (b as NumericArray)[i], t));\n  }\n  return t * (b as number) + (1 - t) * (a as number);\n}\n\n/* eslint-disable */\n\n/**\n * Compares any two math objects, using `equals` method if available.\n * @param a\n * @param b\n * @param epsilon\n * @returns\n */\nexport function equals(a: any, b: any, epsilon?: number): boolean {\n  const oldEpsilon = config.EPSILON;\n  if (epsilon) {\n    config.EPSILON = epsilon;\n  }\n  try {\n    if (a === b) {\n      return true;\n    }\n    if (isArray(a) && isArray(b)) {\n      if (a.length !== b.length) {\n        return false;\n      }\n      for (let i = 0; i < a.length; ++i) {\n        // eslint-disable-next-line max-depth\n        if (!equals(a[i], b[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a && a.equals) {\n      return a.equals(b);\n    }\n    if (b && b.equals) {\n      return b.equals(a);\n    }\n    if (typeof a === 'number' && typeof b === 'number') {\n      return Math.abs(a - b) <= config.EPSILON * Math.max(1, Math.abs(a), Math.abs(b));\n    }\n    return false;\n  } finally {\n    config.EPSILON = oldEpsilon;\n  }\n}\n\nexport function exactEquals(a: any, b: any): boolean {\n  if (a === b) {\n    return true;\n  }\n  if (a && typeof a === 'object' && b && typeof b === 'object') {\n    if (a.constructor !== b.constructor) {\n      return false;\n    }\n    if (a.exactEquals) {\n      return a.exactEquals(b);\n    }\n  }\n  if (isArray(a) && isArray(b)) {\n    if (a.length !== b.length) {\n      return false;\n    }\n    for (let i = 0; i < a.length; ++i) {\n      if (!exactEquals(a[i], b[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return false;\n}\n\n/* eslint-enable */\n\nexport function withEpsilon<T>(epsilon: number, func: () => T): T {\n  const oldPrecision = config.EPSILON;\n  config.EPSILON = epsilon;\n  let value: T;\n  try {\n    value = func();\n  } finally {\n    config.EPSILON = oldPrecision;\n  }\n  return value;\n}\n\n// HELPERS\n\nfunction round(value: number): number {\n  return Math.round(value / config.EPSILON) * config.EPSILON;\n}\n\n// If the array has a clone function, calls it, otherwise returns a copy\nfunction duplicateArray(array: NumericArray): NumericArray {\n  // @ts-expect-error We check for math.gl class methods\n  return array.clone ? array.clone() : (new Array(array.length) as number[]);\n}\n\n// If the argument value is an array, applies the func element wise,\n// otherwise applies func to the argument value\nfunction map(\n  value: number | NumericArray,\n  func: (x: number, index?: number, result?: NumericArray) => number,\n  result?: NumericArray\n): number | NumericArray {\n  if (isArray(value)) {\n    const array = value as NumericArray;\n    result = result || duplicateArray(array);\n    for (let i = 0; i < result.length && i < array.length; ++i) {\n      result[i] = func(value[i], i, result);\n    }\n    return result;\n  }\n  return func(value as number);\n}\n","import * as glMatrix from \"./common.js\";\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {ReadonlyVec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Calculates the length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the source vector\n * @returns {vec3} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to ceil\n * @returns {vec3} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to floor\n * @returns {vec3} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to round\n * @returns {vec3} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Calculates the squared length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to negate\n * @returns {vec3} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to invert\n * @returns {vec3} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to normalize\n * @returns {vec3} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\n * Transforms the vec3 with a quat\n * Can also be used for dual quaternions. (Multiply it with the real part)\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec3} out\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Get the angle between two 3D vectors\n * @param {ReadonlyVec3} a The first operand\n * @param {ReadonlyVec3} b The second operand\n * @returns {Number} The angle in radians\n */\n\nexport function angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec3 to zero\n *\n * @param {vec3} out the receiving vector\n * @returns {vec3} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec3.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\ntype NestedArray<T> = (T | NestedArray<T>)[];\n\n/**\n * Flattens a nested array into a single level array,\n * or a single value into an array with one value\n * @example flatten([[1, [2]], [3], 4]) => [1, 2, 3, 4]\n * @example flatten(1) => [1]\n * @param array The array to flatten.\n * @param filter= - Optional predicate called on each `value` to\n *   determine if it should be included (pushed onto) the resulting array.\n * @return Returns the new flattened array (new array or `result` if provided)\n */\nexport function flatten<T>(\n  array: T | NestedArray<T>,\n  filter: (element: T) => boolean = () => true\n): T[] {\n  // Wrap single object in array\n  if (!Array.isArray(array)) {\n    return filter(array) ? [array] : [];\n  }\n  // Deep flatten and filter the array\n  return flattenArray(array, filter, []);\n}\n\n/** Deep flattens an array. Helper to `flatten`, see its parameters */\nfunction flattenArray<T>(array: NestedArray<T>, filter: (element: T) => boolean, result: T[]): T[] {\n  let index = -1;\n  while (++index < array.length) {\n    const value = array[index];\n    if (Array.isArray(value)) {\n      flattenArray(value, filter, result);\n    } else if (filter(value)) {\n      result.push(value);\n    }\n  }\n  return result;\n}\n\n/** Uses copyWithin to significantly speed up typed array value filling */\nexport function fillArray({target, source, start = 0, count = 1}) {\n  const length = source.length;\n  const total = count * length;\n  let copied = 0;\n  for (let i = start; copied < length; copied++) {\n    target[i++] = source[copied];\n  }\n\n  while (copied < total) {\n    // If we have copied less than half, copy everything we got\n    // else copy remaining in one operation\n    if (copied < total - copied) {\n      target.copyWithin(start + copied, start, start + copied);\n      copied *= 2;\n    } else {\n      target.copyWithin(start + copied, start, start + total - copied);\n      copied = total;\n    }\n  }\n\n  return target;\n}\n","// Copyright (c) 2015 Uber Technologies, Inc.\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/* eslint-disable max-statements, complexity */\nimport TransitionManager, {TransitionProps} from './transition-manager';\nimport LinearInterpolator from '../transitions/linear-interpolator';\nimport {IViewState} from './view-state';\nimport {ConstructorOf} from '../types/types';\n\nimport type Viewport from '../viewports/viewport';\n\nimport type {EventManager, MjolnirEvent, MjolnirGestureEvent, MjolnirWheelEvent, MjolnirKeyEvent} from 'mjolnir.js';\nimport type {Timeline} from '@luma.gl/core';\n\nconst NO_TRANSITION_PROPS = {\n  transitionDuration: 0\n} as const;\n\nconst DEFAULT_INERTIA = 300;\nconst INERTIA_EASING = t => 1 - (1 - t) * (1 - t);\n\nconst EVENT_TYPES = {\n  WHEEL: ['wheel'],\n  PAN: ['panstart', 'panmove', 'panend'],\n  PINCH: ['pinchstart', 'pinchmove', 'pinchend'],\n  TRIPLE_PAN: ['tripanstart', 'tripanmove', 'tripanend'],\n  DOUBLE_TAP: ['doubletap'],\n  KEYBOARD: ['keydown']\n} as const;\n\n/** Configuration of how user input is handled */\nexport type ControllerOptions = {\n  /** Enable zooming with mouse wheel. Default `true`. */\n  scrollZoom?: boolean | {\n    /** Scaler that translates wheel delta to the change of viewport scale. Default `0.01`. */\n    speed?: number;\n    /** Smoothly transition to the new zoom. If enabled, will provide a slightly lagged but smoother experience. Default `false`. */\n    smooth?: boolean\n  };\n  /** Enable panning with pointer drag. Default `true` */\n  dragPan?: boolean;\n  /** Enable rotating with pointer drag. Default `true` */\n  dragRotate?: boolean;\n  /** Enable zooming with double click. Default `true` */\n  doubleClickZoom?: boolean;\n  /** Enable zooming with multi-touch. Default `true` */\n  touchZoom?: boolean;\n  /** Enable rotating with multi-touch. Use two-finger rotating gesture for horizontal and three-finger swiping gesture for vertical rotation. Default `false` */\n  touchRotate?: boolean;\n  /** Enable interaction with keyboard. Default `true`. */\n  keyboard?:\n    | boolean\n    | {\n        /** Speed of zoom using +/- keys. Default `2` */\n        zoomSpeed?: number;\n        /** Speed of movement using arrow keys, in pixels. */\n        moveSpeed?: number;\n        /** Speed of rotation using shift + left/right arrow keys, in degrees. Default 15. */\n        rotateSpeedX?: number;\n        /** Speed of rotation using shift + up/down arrow keys, in degrees. Default 10. */\n        rotateSpeedY?: number;\n      };\n  /** Drag behavior without pressing function keys, one of `pan` and `rotate`. */\n  dragMode?: 'pan' | 'rotate';\n  /** Enable inertia after panning/pinching. If a number is provided, indicates the duration of time over which the velocity reduces to zero, in milliseconds. Default `false`. */\n  inertia?: boolean | number;\n};\n\nexport type ControllerProps = {\n  /** Identifier of the controller */\n  id: string;\n  /** Viewport x position */\n  x: number;\n  /** Viewport y position */\n  y: number;\n  /** Viewport width */\n  width: number;\n  /** Viewport height */\n  height: number;\n} & ControllerOptions & TransitionProps;\n\n/** The state of a controller */\nexport type InteractionState = {\n  /** If the view state is in transition */\n  inTransition?: boolean;\n  /** If the user is dragging */\n  isDragging?: boolean;\n  /** If the view is being panned, either from user input or transition */\n  isPanning?: boolean;\n  /** If the view is being rotated, either from user input or transition */\n  isRotating?: boolean;\n  /** If the view is being zoomed, either from user input or transition */\n  isZooming?: boolean;\n}\n\n/** Parameters passed to the onViewStateChange callback */\nexport type ViewStateChangeParameters = {\n  /** The next view state, either from user input or transition */\n  viewState: Record<string, any>;\n  /** Object describing the nature of the view state change */\n  interactionState: InteractionState;\n  /** The current view state */\n  oldViewState?: Record<string, any>;\n}\n\nconst pinchEventWorkaround: any = {};\n\nexport default abstract class Controller<ControllerState extends IViewState<ControllerState>> {\n  abstract get ControllerState(): ConstructorOf<ControllerState>;\n  abstract get transition(): TransitionProps;\n\n  // @ts-expect-error (2564) - not assigned in the constructor\n  protected props: ControllerProps;\n  protected state: Record<string, any> = {};\n\n  protected transitionManager: TransitionManager<ControllerState>;\n  protected eventManager: EventManager;\n  protected onViewStateChange: (params: ViewStateChangeParameters) => void;\n  protected onStateChange: (state: InteractionState) => void;\n  protected makeViewport: (opts: Record<string, any>) => Viewport\n\n  private _controllerState?: ControllerState;\n  private _events: Record<string, boolean> = {};\n  private _interactionState: InteractionState = {\n    isDragging: false\n  };\n  private _customEvents: string[] = [];\n  private _eventStartBlocked: any = null;\n  private _panMove: boolean = false;\n\n  protected invertPan: boolean = false;\n  protected dragMode: 'pan' | 'rotate' = 'rotate';\n  protected inertia: number = 0;\n  protected scrollZoom: boolean | {speed?: number; smooth?: boolean} = true;\n  protected dragPan: boolean = true;\n  protected dragRotate: boolean = true;\n  protected doubleClickZoom: boolean = true;\n  protected touchZoom: boolean = true;\n  protected touchRotate: boolean = false;\n  protected keyboard:\n    | boolean\n    | {\n        zoomSpeed?: number; //  speed of zoom using +/- keys. Default 2.\n        moveSpeed?: number; //  speed of movement using arrow keys, in pixels.\n        rotateSpeedX?: number; //  speed of rotation using shift + left/right arrow keys, in degrees. Default 15.\n        rotateSpeedY?: number; //  speed of rotation using shift + up/down arrow keys, in degrees. Default 10.\n      } = true;\n\n  constructor(opts: {\n    timeline: Timeline,\n    eventManager: EventManager;\n    makeViewport: (opts: Record<string, any>) => Viewport;\n    onViewStateChange: (params: ViewStateChangeParameters) => void;\n    onStateChange: (state: InteractionState) => void;\n  }) {\n    this.transitionManager = new TransitionManager<ControllerState>({\n      ...opts,\n      getControllerState: props => new this.ControllerState(props),\n      onViewStateChange: this._onTransition.bind(this),\n      onStateChange: this._setInteractionState.bind(this)\n    });\n\n    this.handleEvent = this.handleEvent.bind(this);\n\n    this.eventManager = opts.eventManager;\n    this.onViewStateChange = opts.onViewStateChange || (() => {});\n    this.onStateChange = opts.onStateChange || (() => {});\n    this.makeViewport = opts.makeViewport;\n  }\n\n  set events(customEvents) {\n    this.toggleEvents(this._customEvents, false);\n    this.toggleEvents(customEvents, true);\n    this._customEvents = customEvents;\n    // Make sure default events are not overwritten\n    if (this.props) {\n      this.setProps(this.props);\n    }\n  }\n\n  finalize() {\n    for (const eventName in this._events) {\n      if (this._events[eventName]) {\n        // @ts-ignore (2345) event type string cannot be assifned to enum\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        this.eventManager?.off(eventName, this.handleEvent);\n      }\n    }\n    this.transitionManager.finalize();\n  }\n\n  /**\n   * Callback for events\n   */\n  handleEvent(event: MjolnirEvent) {\n    // Force recalculate controller state\n    this._controllerState = undefined;\n    const eventStartBlocked = this._eventStartBlocked;\n\n    switch (event.type) {\n      case 'panstart':\n        return eventStartBlocked ? false : this._onPanStart(event);\n      case 'panmove':\n        return this._onPan(event);\n      case 'panend':\n        return this._onPanEnd(event);\n      case 'pinchstart':\n        return eventStartBlocked ? false : this._onPinchStart(event);\n      case 'pinchmove':\n        return this._onPinch(event);\n      case 'pinchend':\n        return this._onPinchEnd(event);\n      case 'tripanstart':\n        return eventStartBlocked ? false : this._onTriplePanStart(event);\n      case 'tripanmove':\n        return this._onTriplePan(event);\n      case 'tripanend':\n        return this._onTriplePanEnd(event);\n      case 'doubletap':\n        return this._onDoubleTap(event);\n      case 'wheel':\n        return this._onWheel(event);\n      case 'keydown':\n        return this._onKeyDown(event);\n      default:\n        return false;\n    }\n  }\n\n  /* Event utils */\n  // Event object: http://hammerjs.github.io/api/#event-object\n  get controllerState(): ControllerState {\n    this._controllerState = this._controllerState || new this.ControllerState({\n      makeViewport: this.makeViewport,\n      ...this.props,\n      ...this.state\n    });\n    return this._controllerState ;\n  }\n\n  getCenter(event: MjolnirGestureEvent | MjolnirWheelEvent) : [number, number] {\n    const {x, y} = this.props;\n    const {offsetCenter} = event;\n    return [offsetCenter.x - x, offsetCenter.y - y];\n  }\n\n  isPointInBounds(pos: [number, number], event: MjolnirEvent): boolean {\n    const {width, height} = this.props;\n    if (event && event.handled) {\n      return false;\n    }\n\n    const inside = pos[0] >= 0 && pos[0] <= width && pos[1] >= 0 && pos[1] <= height;\n    if (inside && event) {\n      event.stopPropagation();\n    }\n    return inside;\n  }\n\n  isFunctionKeyPressed(event: MjolnirEvent): boolean {\n    const {srcEvent} = event;\n    return Boolean(srcEvent.metaKey || srcEvent.altKey || srcEvent.ctrlKey || srcEvent.shiftKey);\n  }\n\n  isDragging(): boolean {\n    return this._interactionState.isDragging || false;\n  }\n\n  // When a multi-touch event ends, e.g. pinch, not all pointers are lifted at the same time.\n  // This triggers a brief `pan` event.\n  // Calling this method will temporarily disable *start events to avoid conflicting transitions.\n  blockEvents(timeout: number): void {\n    /* global setTimeout */\n    const timer = setTimeout(() => {\n      if (this._eventStartBlocked === timer) {\n        this._eventStartBlocked = null;\n      }\n    }, timeout);\n    this._eventStartBlocked = timer;\n  }\n\n  /**\n   * Extract interactivity options\n   */\n  setProps(props: ControllerProps) {\n    if (props.dragMode) {\n      this.dragMode = props.dragMode;\n    }\n    this.props = props;\n\n    if (!('transitionInterpolator' in props)) {\n      // Add default transition interpolator\n      props.transitionInterpolator = this._getTransitionProps().transitionInterpolator;\n    }\n\n    this.transitionManager.processViewStateChange(props);\n\n    const {inertia} = props;\n    this.inertia = Number.isFinite(inertia) ? (inertia as number) : (inertia === true ? DEFAULT_INERTIA : 0);\n\n    // TODO - make sure these are not reset on every setProps\n    const {\n      scrollZoom = true,\n      dragPan = true,\n      dragRotate = true,\n      doubleClickZoom = true,\n      touchZoom = true,\n      touchRotate = false,\n      keyboard = true\n    } = props;\n\n    // Register/unregister events\n    const isInteractive = Boolean(this.onViewStateChange);\n    this.toggleEvents(EVENT_TYPES.WHEEL, isInteractive && scrollZoom);\n    // We always need the pan events to set the correct isDragging state, even if dragPan & dragRotate are both false\n    this.toggleEvents(EVENT_TYPES.PAN, isInteractive);\n    this.toggleEvents(EVENT_TYPES.PINCH, isInteractive && (touchZoom || touchRotate));\n    this.toggleEvents(EVENT_TYPES.TRIPLE_PAN, isInteractive && touchRotate);\n    this.toggleEvents(EVENT_TYPES.DOUBLE_TAP, isInteractive && doubleClickZoom);\n    this.toggleEvents(EVENT_TYPES.KEYBOARD, isInteractive && keyboard);\n\n    // Interaction toggles\n    this.scrollZoom = scrollZoom;\n    this.dragPan = dragPan;\n    this.dragRotate = dragRotate;\n    this.doubleClickZoom = doubleClickZoom;\n    this.touchZoom = touchZoom;\n    this.touchRotate = touchRotate;\n    this.keyboard = keyboard;\n  }\n\n  updateTransition() {\n    this.transitionManager.updateTransition();\n  }\n\n  toggleEvents(eventNames, enabled) {\n    if (this.eventManager) {\n      eventNames.forEach(eventName => {\n        if (this._events[eventName] !== enabled) {\n          this._events[eventName] = enabled;\n          if (enabled) {\n            // eslint-disable-next-line @typescript-eslint/unbound-method\n            this.eventManager.on(eventName, this.handleEvent);\n          } else {\n            // eslint-disable-next-line @typescript-eslint/unbound-method\n            this.eventManager.off(eventName, this.handleEvent);\n          }\n        }\n      });\n    }\n  }\n\n  // Private Methods\n\n  /* Callback util */\n  // formats map state and invokes callback function\n  protected updateViewport(newControllerState: ControllerState, extraProps: Record<string, any> | null = null, interactionState: InteractionState = {}) {\n    const viewState = {...newControllerState.getViewportProps(), ...extraProps};\n\n    // TODO - to restore diffing, we need to include interactionState\n    const changed = this.controllerState !== newControllerState;\n    // const oldViewState = this.controllerState.getViewportProps();\n    // const changed = Object.keys(viewState).some(key => oldViewState[key] !== viewState[key]);\n\n    this.state = newControllerState.getState();\n    this._setInteractionState(interactionState);\n\n    if (changed) {\n      const oldViewState = this.controllerState && this.controllerState.getViewportProps();\n      if (this.onViewStateChange) {\n        this.onViewStateChange({viewState, interactionState: this._interactionState, oldViewState});\n      }\n    }\n  }\n\n  private _onTransition(params: {viewState: Record<string, any>, oldViewState: Record<string, any>}) {\n    this.onViewStateChange({...params, interactionState: this._interactionState});\n  }\n\n  private _setInteractionState(newStates: InteractionState) {\n    Object.assign(this._interactionState, newStates);\n    this.onStateChange(this._interactionState);\n  }\n\n  /* Event handlers */\n  // Default handler for the `panstart` event.\n  protected _onPanStart(event: MjolnirGestureEvent): boolean {\n    const pos = this.getCenter(event);\n    if (!this.isPointInBounds(pos, event)) {\n      return false;\n    }\n    let alternateMode = this.isFunctionKeyPressed(event) || event.rightButton || false;\n    if (this.invertPan || this.dragMode === 'pan') {\n      // invertPan is replaced by props.dragMode, keeping for backward compatibility\n      alternateMode = !alternateMode;\n    }\n    const newControllerState = this.controllerState[alternateMode ? 'panStart' : 'rotateStart']({\n      pos\n    });\n    this._panMove = alternateMode;\n    this.updateViewport(newControllerState, NO_TRANSITION_PROPS, {isDragging: true});\n    return true;\n  }\n\n  // Default handler for the `panmove` and `panend` event.\n  protected _onPan(event: MjolnirGestureEvent): boolean {\n    if (!this.isDragging()) {\n      return false;\n    }\n    return this._panMove ? this._onPanMove(event) : this._onPanRotate(event);\n  }\n\n  protected _onPanEnd(event: MjolnirGestureEvent): boolean {\n    if (!this.isDragging()) {\n      return false;\n    }\n    return this._panMove ? this._onPanMoveEnd(event) : this._onPanRotateEnd(event);\n  }\n\n  // Default handler for panning to move.\n  // Called by `_onPan` when panning without function key pressed.\n  protected _onPanMove(event: MjolnirGestureEvent): boolean {\n    if (!this.dragPan) {\n      return false;\n    }\n    const pos = this.getCenter(event);\n    const newControllerState = this.controllerState.pan({pos});\n    this.updateViewport(newControllerState, NO_TRANSITION_PROPS, {\n      isDragging: true,\n      isPanning: true\n    });\n    return true;\n  }\n\n  protected _onPanMoveEnd(event: MjolnirGestureEvent): boolean {\n    const {inertia} = this;\n    if (this.dragPan && inertia && event.velocity) {\n      const pos = this.getCenter(event);\n      const endPos: [number, number] = [\n        pos[0] + (event.velocityX * inertia) / 2,\n        pos[1] + (event.velocityY * inertia) / 2\n      ];\n      const newControllerState = this.controllerState.pan({pos: endPos}).panEnd();\n      this.updateViewport(\n        newControllerState,\n        {\n          ...this._getTransitionProps(),\n          transitionDuration: inertia,\n          transitionEasing: INERTIA_EASING\n        },\n        {\n          isDragging: false,\n          isPanning: true\n        }\n      );\n    } else {\n      const newControllerState = this.controllerState.panEnd();\n      this.updateViewport(newControllerState, null, {\n        isDragging: false,\n        isPanning: false\n      });\n    }\n    return true;\n  }\n\n  // Default handler for panning to rotate.\n  // Called by `_onPan` when panning with function key pressed.\n  protected _onPanRotate(event: MjolnirGestureEvent): boolean {\n    if (!this.dragRotate) {\n      return false;\n    }\n\n    const pos = this.getCenter(event);\n    const newControllerState = this.controllerState.rotate({pos});\n    this.updateViewport(newControllerState, NO_TRANSITION_PROPS, {\n      isDragging: true,\n      isRotating: true\n    });\n    return true;\n  }\n\n  protected _onPanRotateEnd(event): boolean {\n    const {inertia} = this;\n    if (this.dragRotate && inertia && event.velocity) {\n      const pos = this.getCenter(event);\n      const endPos: [number, number] = [\n        pos[0] + (event.velocityX * inertia) / 2,\n        pos[1] + (event.velocityY * inertia) / 2\n      ];\n      const newControllerState = this.controllerState.rotate({pos: endPos}).rotateEnd();\n      this.updateViewport(\n        newControllerState,\n        {\n          ...this._getTransitionProps(),\n          transitionDuration: inertia,\n          transitionEasing: INERTIA_EASING\n        },\n        {\n          isDragging: false,\n          isRotating: true\n        }\n      );\n    } else {\n      const newControllerState = this.controllerState.rotateEnd();\n      this.updateViewport(newControllerState, null, {\n        isDragging: false,\n        isRotating: false\n      });\n    }\n    return true;\n  }\n\n  // Default handler for the `wheel` event.\n  protected _onWheel(event: MjolnirWheelEvent): boolean {\n    if (!this.scrollZoom) {\n      return false;\n    }\n\n    const pos = this.getCenter(event);\n    if (!this.isPointInBounds(pos, event)) {\n      return false;\n    }\n    event.srcEvent.preventDefault();\n\n    const {speed = 0.01, smooth = false} = this.scrollZoom === true ? {} : this.scrollZoom;\n    const {delta} = event;\n\n    // Map wheel delta to relative scale\n    let scale = 2 / (1 + Math.exp(-Math.abs(delta * speed)));\n    if (delta < 0 && scale !== 0) {\n      scale = 1 / scale;\n    }\n\n    const newControllerState = this.controllerState.zoom({pos, scale});\n    this.updateViewport(\n      newControllerState,\n      {...this._getTransitionProps({around: pos}), transitionDuration: smooth ? 250 : 1},\n      {\n        isZooming: true,\n        isPanning: true\n      }\n    );\n    return true;\n  }\n\n  protected _onTriplePanStart(event: MjolnirGestureEvent): boolean {\n    const pos = this.getCenter(event);\n    if (!this.isPointInBounds(pos, event)) {\n      return false;\n    }\n    const newControllerState = this.controllerState.rotateStart({pos});\n    this.updateViewport(newControllerState, NO_TRANSITION_PROPS, {isDragging: true});\n    return true;\n  }\n\n  protected _onTriplePan(event: MjolnirGestureEvent): boolean {\n    if (!this.touchRotate) {\n      return false;\n    }\n    if (!this.isDragging()) {\n      return false;\n    }\n\n    const pos = this.getCenter(event);\n    pos[0] -= event.deltaX;\n\n    const newControllerState = this.controllerState.rotate({pos});\n    this.updateViewport(newControllerState, NO_TRANSITION_PROPS, {\n      isDragging: true,\n      isRotating: true\n    });\n    return true;\n  }\n\n  protected _onTriplePanEnd(event: MjolnirGestureEvent): boolean {\n    if (!this.isDragging()) {\n      return false;\n    }\n    const {inertia} = this;\n    if (this.touchRotate && inertia && event.velocityY) {\n      const pos = this.getCenter(event);\n      const endPos: [number, number] = [pos[0], (pos[1] += (event.velocityY * inertia) / 2)];\n      const newControllerState = this.controllerState.rotate({pos: endPos});\n      this.updateViewport(\n        newControllerState,\n        {\n          ...this._getTransitionProps(),\n          transitionDuration: inertia,\n          transitionEasing: INERTIA_EASING\n        },\n        {\n          isDragging: false,\n          isRotating: true\n        }\n      );\n      this.blockEvents(inertia);\n    } else {\n      const newControllerState = this.controllerState.rotateEnd();\n      this.updateViewport(newControllerState, null, {\n        isDragging: false,\n        isRotating: false\n      });\n    }\n    return true;\n  }\n\n  // Default handler for the `pinchstart` event.\n  protected _onPinchStart(event: MjolnirGestureEvent): boolean {\n    const pos = this.getCenter(event);\n    if (!this.isPointInBounds(pos, event)) {\n      return false;\n    }\n\n    const newControllerState = this.controllerState.zoomStart({pos}).rotateStart({pos});\n    // hack - hammer's `rotation` field doesn't seem to produce the correct angle\n    pinchEventWorkaround._startPinchRotation = event.rotation;\n    pinchEventWorkaround._lastPinchEvent = event;\n    this.updateViewport(newControllerState, NO_TRANSITION_PROPS, {isDragging: true});\n    return true;\n  }\n\n  // Default handler for the `pinchmove` and `pinchend` events.\n  protected _onPinch(event: MjolnirGestureEvent): boolean {\n    if (!this.touchZoom && !this.touchRotate) {\n      return false;\n    }\n    if (!this.isDragging()) {\n      return false;\n    }\n\n    let newControllerState = this.controllerState;\n    if (this.touchZoom) {\n      const {scale} = event;\n      const pos = this.getCenter(event);\n      newControllerState = newControllerState.zoom({pos, scale});\n    }\n    if (this.touchRotate) {\n      const {rotation} = event;\n      newControllerState = newControllerState.rotate({\n        deltaAngleX: pinchEventWorkaround._startPinchRotation - rotation\n      });\n    }\n\n    this.updateViewport(newControllerState, NO_TRANSITION_PROPS, {\n      isDragging: true,\n      isPanning: this.touchZoom,\n      isZooming: this.touchZoom,\n      isRotating: this.touchRotate\n    });\n    pinchEventWorkaround._lastPinchEvent = event;\n    return true;\n  }\n\n  protected _onPinchEnd(event: MjolnirGestureEvent): boolean {\n    if (!this.isDragging()) {\n      return false;\n    }\n    const {inertia} = this;\n    const {_lastPinchEvent} = pinchEventWorkaround;\n    if (this.touchZoom && inertia && _lastPinchEvent && event.scale !== _lastPinchEvent.scale) {\n      const pos = this.getCenter(event);\n      let newControllerState = this.controllerState.rotateEnd();\n      const z = Math.log2(event.scale);\n      const velocityZ =\n        (z - Math.log2(_lastPinchEvent.scale)) / (event.deltaTime - _lastPinchEvent.deltaTime);\n      const endScale = Math.pow(2, z + (velocityZ * inertia) / 2);\n      newControllerState = newControllerState.zoom({pos, scale: endScale}).zoomEnd();\n\n      this.updateViewport(\n        newControllerState,\n        {\n          ...this._getTransitionProps({around: pos}),\n          transitionDuration: inertia,\n          transitionEasing: INERTIA_EASING\n        },\n        {\n          isDragging: false,\n          isPanning: this.touchZoom,\n          isZooming: this.touchZoom,\n          isRotating: false\n        }\n      );\n      this.blockEvents(inertia);\n    } else {\n      const newControllerState = this.controllerState.zoomEnd().rotateEnd();\n      this.updateViewport(newControllerState, null, {\n        isDragging: false,\n        isPanning: false,\n        isZooming: false,\n        isRotating: false\n      });\n    }\n    pinchEventWorkaround._startPinchRotation = null;\n    pinchEventWorkaround._lastPinchEvent = null;\n    return true;\n  }\n\n  // Default handler for the `doubletap` event.\n  protected _onDoubleTap(event: MjolnirGestureEvent): boolean {\n    if (!this.doubleClickZoom) {\n      return false;\n    }\n    const pos = this.getCenter(event);\n    if (!this.isPointInBounds(pos, event)) {\n      return false;\n    }\n\n    const isZoomOut = this.isFunctionKeyPressed(event);\n\n    const newControllerState = this.controllerState.zoom({pos, scale: isZoomOut ? 0.5 : 2});\n    this.updateViewport(newControllerState, this._getTransitionProps({around: pos}), {\n      isZooming: true,\n      isPanning: true\n    });\n    this.blockEvents(100);\n    return true;\n  }\n\n  // Default handler for the `keydown` event\n  protected _onKeyDown(event: MjolnirKeyEvent): boolean {\n    if (!this.keyboard) {\n      return false;\n    }\n    const funcKey = this.isFunctionKeyPressed(event);\n    // @ts-ignore\n    const {zoomSpeed, moveSpeed, rotateSpeedX, rotateSpeedY} = this.keyboard === true ? {} : this.keyboard;\n    const {controllerState} = this;\n    let newControllerState;\n    const interactionState: InteractionState = {};\n\n    switch (event.srcEvent.code) {\n      case 'Minus':\n        newControllerState = funcKey\n          ? controllerState.zoomOut(zoomSpeed).zoomOut(zoomSpeed)\n          : controllerState.zoomOut(zoomSpeed);\n        interactionState.isZooming = true;\n        break;\n      case 'Equal':\n        newControllerState = funcKey\n          ? controllerState.zoomIn(zoomSpeed).zoomIn(zoomSpeed)\n          : controllerState.zoomIn(zoomSpeed);\n        interactionState.isZooming = true;\n        break;\n      case 'ArrowLeft':\n        if (funcKey) {\n          newControllerState = controllerState.rotateLeft(rotateSpeedX);\n          interactionState.isRotating = true;\n        } else {\n          newControllerState = controllerState.moveLeft(moveSpeed);\n          interactionState.isPanning = true;\n        }\n        break;\n      case 'ArrowRight':\n        if (funcKey) {\n          newControllerState = controllerState.rotateRight(rotateSpeedX);\n          interactionState.isRotating = true;\n        } else {\n          newControllerState = controllerState.moveRight(moveSpeed);\n          interactionState.isPanning = true;\n        }\n        break;\n      case 'ArrowUp':\n        if (funcKey) {\n          newControllerState = controllerState.rotateUp(rotateSpeedY);\n          interactionState.isRotating = true;\n        } else {\n          newControllerState = controllerState.moveUp(moveSpeed);\n          interactionState.isPanning = true;\n        }\n        break;\n      case 'ArrowDown':\n        if (funcKey) {\n          newControllerState = controllerState.rotateDown(rotateSpeedY);\n          interactionState.isRotating = true;\n        } else {\n          newControllerState = controllerState.moveDown(moveSpeed);\n          interactionState.isPanning = true;\n        }\n        break;\n      default:\n        return false;\n    }\n    this.updateViewport(newControllerState, this._getTransitionProps(), interactionState);\n    return true;\n  }\n\n  protected _getTransitionProps(opts?: any): TransitionProps {\n    const {transition} = this;\n\n    if (!transition || !transition.transitionInterpolator) {\n      return NO_TRANSITION_PROPS;\n    }\n\n    // Enables Transitions on double-tap and key-down events.\n    return opts\n      ? {\n        ...transition,\n        transitionInterpolator: new LinearInterpolator({\n          ...opts,\n          ...(transition.transitionInterpolator as LinearInterpolator).opts,\n          makeViewport: this.controllerState.makeViewport\n        })\n      }\n      : transition;\n  }\n}\n","const PERCENT_OR_PIXELS_REGEX = /([0-9]+\\.?[0-9]*)(%|px)/;\n\nexport type Position = {\n  position: number;\n  relative: boolean;\n};\n\n// Takes a number or a string of formats `50%`, `33.3%` or `200px`\nexport function parsePosition(value: number | string): Position {\n  switch (typeof value) {\n    case 'number':\n      return {\n        position: value,\n        relative: false\n      };\n\n    case 'string':\n      const match = PERCENT_OR_PIXELS_REGEX.exec(value);\n      if (match && match.length >= 3) {\n        const relative = match[2] === '%';\n        const position = parseFloat(match[1]);\n        return {\n          position: relative ? position / 100 : position,\n          relative\n        };\n      }\n    // fallthrough\n\n    default:\n      // eslint-disable-line\n      throw new Error(`Could not parse position string ${value}`);\n  }\n}\n\nexport function getPosition(position: Position, extent: number): number {\n  return position.relative ? Math.round(position.position * extent) : position.position;\n}\n","import Viewport from '../viewports/viewport';\nimport {parsePosition, getPosition, Position} from '../utils/positions';\nimport {deepEqual} from '../utils/deep-equal';\nimport assert from '../utils/assert';\nimport type Controller from '../controllers/controller';\nimport type {ControllerOptions} from '../controllers/controller';\nimport type {TransitionProps} from '../controllers/transition-manager';\nimport type {Padding} from '../viewports/viewport';\nimport type {ConstructorOf} from '../types/types';\n\nexport type CommonViewState = TransitionProps;\n\ntype CommonViewProps<ViewState> = {\n  /** A unique id of the view. In a multi-view use case, this is important for matching view states and place contents into this view. */\n  id?: string;\n  /** A relative (e.g. `'50%'`) or absolute position. Default `0`. */\n  x?: number | string;\n  /** A relative (e.g. `'50%'`) or absolute position. Default `0`. */\n  y?: number | string;\n  /** A relative (e.g. `'50%'`) or absolute extent. Default `'100%'`. */\n  width?: number | string;\n  /** A relative (e.g. `'50%'`) or absolute extent. Default `'100%'`. */\n  height?: number | string;\n  /** Padding around the view, expressed in either relative (e.g. `'50%'`) or absolute pixels. Default `null`. */\n  padding?: {\n    left?: number | string;\n    right?: number | string;\n    top?: number | string;\n    bottom?: number | string;\n  } | null;\n  /** State of the view */\n  viewState?:\n    | string\n    | ({\n        id?: string;\n      } & Partial<ViewState>);\n  /** Options for viewport interactivity. */\n  controller?:\n    | null\n    | boolean\n    | ConstructorOf<Controller<any>>\n    | (ControllerOptions & {\n        type?: ConstructorOf<Controller<any>>;\n      });\n\n  /** @deprecated Directly wrap a viewport instance */\n  viewportInstance?: Viewport;\n};\n\nexport default abstract class View<\n  ViewState extends CommonViewState = CommonViewState,\n  ViewProps = {}\n> {\n  id: string;\n  abstract get ViewportType(): ConstructorOf<Viewport>;\n  protected abstract get ControllerType(): ConstructorOf<Controller<any>>;\n\n  private viewportInstance?: Viewport;\n  private _x: Position;\n  private _y: Position;\n  private _width: Position;\n  private _height: Position;\n  private _padding: {\n    left: Position;\n    right: Position;\n    top: Position;\n    bottom: Position;\n  } | null;\n\n  readonly props: ViewProps & CommonViewProps<ViewState>;\n\n  constructor(props: ViewProps & CommonViewProps<ViewState>) {\n    const {\n      id,\n      x = 0,\n      y = 0,\n      width = '100%',\n      height = '100%',\n      padding = null,\n      viewportInstance\n    } = props || {};\n\n    assert(!viewportInstance || viewportInstance instanceof Viewport);\n    this.viewportInstance = viewportInstance;\n\n    // @ts-ignore\n    this.id = id || this.constructor.displayName || 'view';\n\n    this.props = {...props, id: this.id};\n\n    // Extents\n    this._x = parsePosition(x);\n    this._y = parsePosition(y);\n    this._width = parsePosition(width);\n    this._height = parsePosition(height);\n    this._padding = padding && {\n      left: parsePosition(padding.left || 0),\n      right: parsePosition(padding.right || 0),\n      top: parsePosition(padding.top || 0),\n      bottom: parsePosition(padding.bottom || 0)\n    };\n\n    // Bind methods for easy access\n    this.equals = this.equals.bind(this);\n\n    Object.seal(this);\n  }\n\n  equals(view: View<ViewState, ViewProps>): boolean {\n    if (this === view) {\n      return true;\n    }\n\n    // if `viewportInstance` is set, it is the only prop that is used\n    // Delegate to `Viewport.equals`\n    if (this.viewportInstance) {\n      return view.viewportInstance ? this.viewportInstance.equals(view.viewportInstance) : false;\n    }\n\n    // To correctly compare padding use depth=2\n    return this.ViewportType === view.ViewportType && deepEqual(this.props, view.props, 2);\n  }\n\n  /** Make viewport from canvas dimensions and view state */\n  makeViewport({width, height, viewState}: {width: number; height: number; viewState: any}) {\n    if (this.viewportInstance) {\n      return this.viewportInstance;\n    }\n\n    viewState = this.filterViewState(viewState);\n\n    // Resolve relative viewport dimensions\n    const viewportDimensions = this.getDimensions({width, height});\n    if (!viewportDimensions.height || !viewportDimensions.width) {\n      return null;\n    }\n    return new this.ViewportType({...viewState, ...this.props, ...viewportDimensions});\n  }\n\n  getViewStateId(): string {\n    const {viewState} = this.props;\n    if (typeof viewState === 'string') {\n      // if View.viewState is a string, return it\n      return viewState;\n    }\n    return viewState?.id || this.id;\n  }\n\n  // Allows view to override (or completely define) viewState\n  filterViewState(viewState: ViewState): ViewState {\n    if (this.props.viewState && typeof this.props.viewState === 'object') {\n      // If we have specified an id, then intent is to override,\n      // If not, completely specify the view state\n      if (!this.props.viewState.id) {\n        return this.props.viewState as ViewState;\n      }\n\n      // Merge in all props from View's viewState, except id\n      const newViewState = {...viewState};\n      for (const key in this.props.viewState) {\n        if (key !== 'id') {\n          newViewState[key] = this.props.viewState[key];\n        }\n      }\n      return newViewState;\n    }\n\n    return viewState;\n  }\n\n  /** Resolve the dimensions of the view from overall canvas dimensions */\n  getDimensions({width, height}: {width: number; height: number}): {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    padding?: Padding;\n  } {\n    const dimensions: {\n      x: number;\n      y: number;\n      width: number;\n      height: number;\n      padding?: Padding;\n    } = {\n      x: getPosition(this._x, width),\n      y: getPosition(this._y, height),\n      width: getPosition(this._width, width),\n      height: getPosition(this._height, height)\n    };\n\n    if (this._padding) {\n      dimensions.padding = {\n        left: getPosition(this._padding.left, width),\n        top: getPosition(this._padding.top, height),\n        right: getPosition(this._padding.right, width),\n        bottom: getPosition(this._padding.bottom, height)\n      };\n    }\n    return dimensions;\n  }\n\n  // Used by sub classes to resolve controller props\n  get controller(): (ControllerOptions & {type: ConstructorOf<Controller<any>>}) | null {\n    const opts = this.props.controller;\n\n    if (!opts) {\n      return null;\n    }\n    if (opts === true) {\n      return {type: this.ControllerType};\n    }\n    if (typeof opts === 'function') {\n      return {type: opts};\n    }\n    return {type: this.ControllerType, ...opts};\n  }\n}\n","var arrayWithHoles = require(\"./arrayWithHoles.js\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableRest = require(\"./nonIterableRest.js\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","// Copyright (c) 2017 Uber Technologies, Inc.\n// MIT License\nimport {NumericArray} from '@math.gl/types';\nimport assert from './assert';\n\nimport type MathArray from '../classes/base/math-array';\n\nexport type ConfigurationOptions = {\n  EPSILON: number;\n  debug?: boolean;\n  precision: number;\n  printTypes?: boolean;\n  printDegrees?: boolean;\n  printRowMajor?: boolean;\n  _cartographicRadians?: boolean;\n};\n\nconst RADIANS_TO_DEGREES = (1 / Math.PI) * 180;\nconst DEGREES_TO_RADIANS = (1 / 180) * Math.PI;\n\n// TODO - remove\nexport const config: ConfigurationOptions = {\n  EPSILON: 1e-12,\n  debug: false,\n  precision: 4,\n  printTypes: false,\n  printDegrees: false,\n  printRowMajor: true\n};\n\nexport function configure(options?: Partial<ConfigurationOptions>): ConfigurationOptions {\n  // Only copy existing keys\n  for (const key in options) {\n    assert(key in config);\n    config[key] = options[key];\n  }\n  return config;\n}\n\n/**\n * Formats a value into a string\n * @param value\n * @param param1\n * @returns\n */\nexport function formatValue(\n  value: number,\n  {precision = config.precision}: {precision?: number} = {}\n): string {\n  value = round(value);\n  // get rid of trailing zeros\n  return `${parseFloat(value.toPrecision(precision))}`;\n}\n\n/**\n * Check if value is an \"array\"\n * Returns `true` if value is either an array or a typed array\n *\n * Note: returns `false` for `ArrayBuffer` and `DataView` instances\n */\nexport function isArray(value: unknown): boolean {\n  return Array.isArray(value) || (ArrayBuffer.isView(value) && !(value instanceof DataView));\n}\n\nexport function clone(array: NumericArray | MathArray): NumericArray {\n  return 'clone' in array ? array.clone() : array.slice();\n}\n\nexport function toRadians(degrees: number): number;\nexport function toRadians(degrees: NumericArray): NumericArray;\n\nexport function toRadians(degrees: number | NumericArray): number | NumericArray {\n  return radians(degrees as NumericArray);\n}\n\nexport function toDegrees(degrees: number): number;\nexport function toDegrees(degrees: NumericArray): NumericArray;\n\nexport function toDegrees(radians: number | NumericArray): number | NumericArray {\n  return degrees(radians as NumericArray);\n}\n\n// GLSL math function equivalents - Works on both single values and vectors\n\n/**\n * \"GLSL equivalent\" radians: Works on single values and vectors\n */\nexport function radians(degrees: number): number;\nexport function radians(degrees: NumericArray, result?: NumericArray): NumericArray;\n\nexport function radians(\n  degrees: number | NumericArray,\n  result?: NumericArray\n): number | NumericArray {\n  return map(degrees, (degrees) => degrees * DEGREES_TO_RADIANS, result);\n}\n\n/**\n * \"GLSL equivalent\" degrees: Works on single values and vectors\n */\nexport function degrees(radians: number): number;\nexport function degrees(radians: NumericArray, result?: NumericArray): NumericArray;\n\nexport function degrees(\n  radians: number | NumericArray,\n  result?: NumericArray\n): number | NumericArray {\n  return map(radians, (radians) => radians * RADIANS_TO_DEGREES, result);\n}\n\n/**\n * \"GLSL equivalent\" of `Math.sin`: Works on single values and vectors\n * @deprecated\n */\nexport function sin(radians: number | NumericArray, result?: NumericArray): number | NumericArray {\n  return map(radians, (angle) => Math.sin(angle), result);\n}\n\n/**\n * \"GLSL equivalent\" of `Math.cos`: Works on single values and vectors\n * @deprecated\n */\nexport function cos(radians: number | NumericArray, result?: NumericArray): number | NumericArray {\n  return map(radians, (angle) => Math.cos(angle), result);\n}\n\n/**\n * \"GLSL equivalent\" of `Math.tan`: Works on single values and vectors\n * @deprecated\n */\nexport function tan(radians: number | NumericArray, result?: NumericArray): number | NumericArray {\n  return map(radians, (angle) => Math.tan(angle), result);\n}\n\n/**\n * \"GLSL equivalent\" of `Math.asin`: Works on single values and vectors\n * @deprecated\n */\nexport function asin(radians: number | NumericArray, result?: NumericArray): number | NumericArray {\n  return map(radians, (angle) => Math.asin(angle), result);\n}\n\n/**\n * \"GLSL equivalent\" of `Math.acos`: Works on single values and vectors\n * @deprecated\n */\nexport function acos(radians: number | NumericArray, result?: NumericArray): number | NumericArray {\n  return map(radians, (angle) => Math.acos(angle), result);\n}\n\n/**\n * \"GLSL equivalent\" of `Math.atan`: Works on single values and vectors\n * @deprecated\n */\nexport function atan(radians: number | NumericArray, result?: NumericArray): number | NumericArray {\n  return map(radians, (angle) => Math.atan(angle), result);\n}\n\n/**\n * GLSL style value clamping: Works on single values and vectors\n */\nexport function clamp(value: number, min: number, max: number): number;\nexport function clamp(value: NumericArray, min: number, max: number): NumericArray;\n\nexport function clamp(\n  value: number | NumericArray,\n  min: number,\n  max: number\n): number | NumericArray {\n  return map(value, (value) => Math.max(min, Math.min(max, value)));\n}\n\n/**\n * Interpolate between two numbers or two arrays\n */\nexport function lerp(a: number, b: number, t: number): number;\nexport function lerp(a: NumericArray, b: NumericArray, t: number): NumericArray;\n\nexport function lerp(\n  a: number | NumericArray,\n  b: number | NumericArray,\n  t: number\n): number | NumericArray {\n  if (isArray(a)) {\n    return (a as NumericArray).map((ai: number, i: number) => lerp(ai, (b as NumericArray)[i], t));\n  }\n  return t * (b as number) + (1 - t) * (a as number);\n}\n\n/* eslint-disable */\n\n/**\n * Compares any two math objects, using `equals` method if available.\n * @param a\n * @param b\n * @param epsilon\n * @returns\n */\nexport function equals(a: any, b: any, epsilon?: number): boolean {\n  const oldEpsilon = config.EPSILON;\n  if (epsilon) {\n    config.EPSILON = epsilon;\n  }\n  try {\n    if (a === b) {\n      return true;\n    }\n    if (isArray(a) && isArray(b)) {\n      if (a.length !== b.length) {\n        return false;\n      }\n      for (let i = 0; i < a.length; ++i) {\n        // eslint-disable-next-line max-depth\n        if (!equals(a[i], b[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a && a.equals) {\n      return a.equals(b);\n    }\n    if (b && b.equals) {\n      return b.equals(a);\n    }\n    if (typeof a === 'number' && typeof b === 'number') {\n      return Math.abs(a - b) <= config.EPSILON * Math.max(1, Math.abs(a), Math.abs(b));\n    }\n    return false;\n  } finally {\n    config.EPSILON = oldEpsilon;\n  }\n}\n\nexport function exactEquals(a: any, b: any): boolean {\n  if (a === b) {\n    return true;\n  }\n  if (a && typeof a === 'object' && b && typeof b === 'object') {\n    if (a.constructor !== b.constructor) {\n      return false;\n    }\n    if (a.exactEquals) {\n      return a.exactEquals(b);\n    }\n  }\n  if (isArray(a) && isArray(b)) {\n    if (a.length !== b.length) {\n      return false;\n    }\n    for (let i = 0; i < a.length; ++i) {\n      if (!exactEquals(a[i], b[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return false;\n}\n\n/* eslint-enable */\n\nexport function withEpsilon<T>(epsilon: number, func: () => T): T {\n  const oldPrecision = config.EPSILON;\n  config.EPSILON = epsilon;\n  let value: T;\n  try {\n    value = func();\n  } finally {\n    config.EPSILON = oldPrecision;\n  }\n  return value;\n}\n\n// HELPERS\n\nfunction round(value: number): number {\n  return Math.round(value / config.EPSILON) * config.EPSILON;\n}\n\n// If the array has a clone function, calls it, otherwise returns a copy\nfunction duplicateArray(array: NumericArray): NumericArray {\n  // @ts-expect-error We check for math.gl class methods\n  return array.clone ? array.clone() : (new Array(array.length) as number[]);\n}\n\n// If the argument value is an array, applies the func element wise,\n// otherwise applies func to the argument value\nfunction map(\n  value: number | NumericArray,\n  func: (x: number, index?: number, result?: NumericArray) => number,\n  result?: NumericArray\n): number | NumericArray {\n  if (isArray(value)) {\n    const array = value as NumericArray;\n    result = result || duplicateArray(array);\n    for (let i = 0; i < result.length && i < array.length; ++i) {\n      result[i] = func(value[i], i, result);\n    }\n    return result;\n  }\n  return func(value as number);\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/* eslint-disable max-params */\nimport earcut from 'earcut';\nimport {modifyPolygonWindingDirection, WINDING} from '@math.gl/polygon';\n\nimport type {Position} from '@deck.gl/core';\nimport type {NumericArray} from '@math.gl/core';\n\nconst OUTER_POLYGON_WINDING = WINDING.CLOCKWISE;\nconst HOLE_POLYGON_WINDING = WINDING.COUNTER_CLOCKWISE;\n\ntype WindingOptions = {\n  start?: number;\n  end?: number;\n  size?: number;\n  isClosed?: boolean;\n};\n\n/** A scratch object for sending winding options */\nconst windingOptions: WindingOptions = {\n  isClosed: true\n};\n\n// 4 data formats are supported:\n\n/** Simple Polygon: an array of points */\nexport type NestedSimplePolygonGeometry = Position[];\n/** Complex Polygon: an array of array of points (array of rings)\n * with the first ring representing the outer hull and other rings representing holes\n */\nexport type NestedComplexPolygonGeometry = Position[][];\n/** An array of numbers (flattened \"simple polygon\") */\nexport type FlatSimplePolygonGeometry = NumericArray;\n/** Flattened \"complex polygon\" */\nexport type FlatComplexPolygonGeometry = {positions: NumericArray; holeIndices: NumericArray};\n\nexport type PolygonGeometry =\n  | NestedSimplePolygonGeometry\n  | NestedComplexPolygonGeometry\n  | FlatSimplePolygonGeometry\n  | FlatComplexPolygonGeometry;\n\nexport type NormalizedPolygonGeometry = FlatSimplePolygonGeometry | FlatComplexPolygonGeometry;\n\n/**\n * Ensure a polygon is valid format\n */\nfunction validate(polygon: PolygonGeometry): void {\n  polygon = (polygon && (polygon as FlatComplexPolygonGeometry).positions) || polygon;\n  if (!Array.isArray(polygon) && !ArrayBuffer.isView(polygon)) {\n    throw new Error('invalid polygon');\n  }\n}\n\n/** Get the positions from a normalized polygon */\nexport function getPositions(polygon: NormalizedPolygonGeometry): NumericArray {\n  return 'positions' in polygon ? polygon.positions : polygon;\n}\n\n/** Get the hole indices from a normalized polygon */\nexport function getHoleIndices(polygon: NormalizedPolygonGeometry): NumericArray | null {\n  return 'holeIndices' in polygon ? polygon.holeIndices : null;\n}\n\n/**\n * Check if a polygon is nested or flat\n * Returns true if the polygon is a flat polygon (i.e. not an array of polygons)\n */\nfunction isNested(\n  polygon: PolygonGeometry\n): polygon is NestedSimplePolygonGeometry | NestedComplexPolygonGeometry {\n  return Array.isArray(polygon[0]);\n}\n\n/**\n * Check if a polygon is simple or complex\n * Returns true if the polygon is a simple polygon (i.e. not an array of polygons)\n */\nfunction isSimple(\n  polygon: NestedSimplePolygonGeometry | NestedComplexPolygonGeometry\n): polygon is NestedSimplePolygonGeometry {\n  return polygon.length >= 1 && polygon[0].length >= 2 && Number.isFinite(polygon[0][0]);\n}\n\n/**\n * Check if a simple polygon is a closed ring\n * Returns true if the simple polygon is a closed ring\n */\nfunction isNestedRingClosed(simplePolygon: NestedSimplePolygonGeometry): boolean {\n  // check if first and last vertex are the same\n  const p0 = simplePolygon[0];\n  const p1 = simplePolygon[simplePolygon.length - 1];\n\n  return p0[0] === p1[0] && p0[1] === p1[1] && p0[2] === p1[2];\n}\n\n/**\n * Check if a simple flat array is a closed ring\n * Returns true if the simple flat array is a closed ring\n */\nfunction isFlatRingClosed(\n  positions: FlatSimplePolygonGeometry,\n  /** size of a position, 2 (xy) or 3 (xyz) */\n  size: number,\n  /** start index of the path in the positions array */\n  startIndex: number,\n  /** end index of the path in the positions array */\n  endIndex: number\n): boolean {\n  for (let i = 0; i < size; i++) {\n    if (positions[startIndex + i] !== positions[endIndex - size + i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Copy a simple polygon coordinates into a flat array, closes the ring if needed.\n * Returns the index of the write head in the destination\n */\nfunction copyNestedRing(\n  /** destination */\n  target: NumericArray,\n  /** index in the destination to start copying into */\n  targetStartIndex: number,\n  /** the source polygon */\n  simplePolygon: NestedSimplePolygonGeometry,\n  /** size of a position, 2 (xy) or 3 (xyz) */\n  size: number,\n  /** modify polygon to be of the specified winding direction */\n  windingDirection: number\n): number {\n  let targetIndex = targetStartIndex;\n  const len = simplePolygon.length;\n  for (let i = 0; i < len; i++) {\n    for (let j = 0; j < size; j++) {\n      target[targetIndex++] = simplePolygon[i][j] || 0;\n    }\n  }\n\n  if (!isNestedRingClosed(simplePolygon)) {\n    for (let j = 0; j < size; j++) {\n      target[targetIndex++] = simplePolygon[0][j] || 0;\n    }\n  }\n\n  windingOptions.start = targetStartIndex;\n  windingOptions.end = targetIndex;\n  windingOptions.size = size;\n  modifyPolygonWindingDirection(target, windingDirection, windingOptions);\n\n  return targetIndex;\n}\n\n/**\n * Copy a simple flat array into another flat array, closes the ring if needed.\n * Returns the index of the write head in the destination\n */\nfunction copyFlatRing(\n  /** destination */\n  target: NumericArray,\n  /** index in the destination to start copying into */\n  targetStartIndex: number,\n  /** the source polygon */\n  positions: FlatSimplePolygonGeometry,\n  /** size of a position, 2 (xy) or 3 (xyz) */\n  size: number,\n  /** start index of the path in the positions array */\n  srcStartIndex: number = 0,\n  /** end index of the path in the positions array */\n  srcEndIndex: number,\n  windingDirection: number\n): number {\n  srcEndIndex = srcEndIndex || positions.length;\n  const srcLength = srcEndIndex - srcStartIndex;\n  if (srcLength <= 0) {\n    return targetStartIndex;\n  }\n  let targetIndex = targetStartIndex;\n\n  for (let i = 0; i < srcLength; i++) {\n    target[targetIndex++] = positions[srcStartIndex + i];\n  }\n\n  if (!isFlatRingClosed(positions, size, srcStartIndex, srcEndIndex)) {\n    for (let i = 0; i < size; i++) {\n      target[targetIndex++] = positions[srcStartIndex + i];\n    }\n  }\n\n  windingOptions.start = targetStartIndex;\n  windingOptions.end = targetIndex;\n  windingOptions.size = size;\n  modifyPolygonWindingDirection(target, windingDirection, windingOptions);\n\n  return targetIndex;\n}\n\n/**\n * Normalize any polygon representation into the \"complex flat\" format\n */\n/* eslint-disable max-statements */\nexport function normalize(\n  polygon: PolygonGeometry,\n  positionSize: number\n): NormalizedPolygonGeometry {\n  validate(polygon);\n\n  const positions: number[] = [];\n  const holeIndices: number[] = [];\n\n  if ('positions' in polygon) {\n    // complex flat\n    const {positions: srcPositions, holeIndices: srcHoleIndices} = polygon;\n\n    if (srcHoleIndices) {\n      let targetIndex = 0;\n      // split the positions array into `holeIndices.length + 1` rings\n      // holeIndices[-1] falls back to 0\n      // holeIndices[holeIndices.length] falls back to positions.length\n      for (let i = 0; i <= srcHoleIndices.length; i++) {\n        targetIndex = copyFlatRing(\n          positions,\n          targetIndex,\n          srcPositions,\n          positionSize,\n          srcHoleIndices[i - 1],\n          srcHoleIndices[i],\n          i === 0 ? OUTER_POLYGON_WINDING : HOLE_POLYGON_WINDING\n        );\n        holeIndices.push(targetIndex);\n      }\n      // The last one is not a starting index of a hole, remove\n      holeIndices.pop();\n\n      return {positions, holeIndices};\n    }\n    polygon = srcPositions;\n  }\n  if (!isNested(polygon)) {\n    // simple flat\n    copyFlatRing(positions, 0, polygon, positionSize, 0, positions.length, OUTER_POLYGON_WINDING);\n    return positions;\n  }\n  if (!isSimple(polygon)) {\n    // complex polygon\n    let targetIndex = 0;\n\n    for (const [polygonIndex, simplePolygon] of polygon.entries()) {\n      targetIndex = copyNestedRing(\n        positions,\n        targetIndex,\n        simplePolygon,\n        positionSize,\n        polygonIndex === 0 ? OUTER_POLYGON_WINDING : HOLE_POLYGON_WINDING\n      );\n      holeIndices.push(targetIndex);\n    }\n    // The last one is not a starting index of a hole, remove\n    holeIndices.pop();\n    // last index points to the end of the array, remove it\n    return {positions, holeIndices};\n  }\n  // simple polygon\n  copyNestedRing(positions, 0, polygon, positionSize, OUTER_POLYGON_WINDING);\n  return positions;\n}\n/* eslint-enable max-statements */\n\n/*\n * Calculate the area of a single plane of the polygon\n */\nfunction getPlaneArea(positions: NumericArray, xIndex: number, yIndex: number): number {\n  const numVerts = positions.length / 3;\n  let area = 0;\n  for (let i = 0; i < numVerts; i++) {\n    const j = (i + 1) % numVerts;\n    area += positions[i * 3 + xIndex] * positions[j * 3 + yIndex];\n    area -= positions[j * 3 + xIndex] * positions[i * 3 + yIndex];\n  }\n  return Math.abs(area / 2);\n}\n\nfunction permutePositions(positions: NumericArray, xIndex: number, yIndex: number, zIndex: number) {\n  const numVerts = positions.length / 3;\n  for (let i = 0; i < numVerts; i++) {\n    const o = i * 3;\n\n    const x = positions[o + 0];\n    const y = positions[o + 1];\n    const z = positions[o + 2];\n\n    positions[o + xIndex] = x;\n    positions[o + yIndex] = y;\n    positions[o + zIndex] = z;\n  }\n}\n\n/*\n * Get vertex indices for drawing polygon mesh (triangulation)\n */\n// eslint-disable-next-line complexity, max-statements\nexport function getSurfaceIndices(\n  polygon: NormalizedPolygonGeometry,\n  positionSize: number,\n  preproject?: (xy: number[]) => number[],\n  full3d?: boolean\n): number[] {\n  let holeIndices = getHoleIndices(polygon);\n  if (holeIndices) {\n    holeIndices = holeIndices.map(positionIndex => positionIndex / positionSize);\n  }\n\n  let positions = getPositions(polygon);\n\n  const is3d = full3d && positionSize === 3;\n\n  if (preproject) {\n    // When tesselating lnglat coordinates, project them to the common space for accuracy\n    const n = positions.length;\n\n    // Clone the array\n    positions = positions.slice();\n\n    const p: number[] = [];\n    for (let i = 0; i < n; i += positionSize) {\n      p[0] = positions[i];\n      p[1] = positions[i + 1];\n\n      if (is3d) {\n        p[2] = positions[i + 2];\n      }\n\n      const xy = preproject(p);\n\n      positions[i] = xy[0];\n      positions[i + 1] = xy[1];\n\n      if (is3d) {\n        positions[i + 2] = xy[2];\n      }\n    }\n  }\n\n  if (is3d) {\n    // calculate plane with largest area\n    const xyArea = getPlaneArea(positions, 0, 1);\n    const xzArea = getPlaneArea(positions, 0, 2);\n    const yzArea = getPlaneArea(positions, 1, 2);\n\n    if (!xyArea && !xzArea && !yzArea) {\n      return []; // no planes have area, nothing we can do\n    }\n\n    // permute positions to make the largest plane xy for earcut\n    if (xyArea > xzArea && xyArea > yzArea) {\n      // xy plane largest, nothing to do\n    } else if (xzArea > yzArea) {\n      // xz plane largest, permute to make xyz -> xzy\n      if (!preproject) {\n        positions = positions.slice();\n      }\n      permutePositions(positions, 0, 2, 1);\n    } else {\n      // yz plane largest, permute to make xyz -> yzx\n      if (!preproject) {\n        positions = positions.slice();\n      }\n      permutePositions(positions, 2, 0, 1);\n    }\n  }\n\n  // Let earcut triangulate the polygon\n  return earcut(positions, holeIndices, positionSize);\n}\n","function isEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (Array.isArray(a)) {\n    // Special treatment for arrays: compare 1-level deep\n    // This is to support equality of matrix/coordinate props\n    const len = a.length;\n    if (!b || b.length !== len) {\n      return false;\n    }\n\n    for (let i = 0; i < len; i++) {\n      if (a[i] !== b[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return false;\n}\n\n/**\n * Speed up consecutive function calls by caching the result of calls with identical input\n * https://en.wikipedia.org/wiki/Memoization\n * @param {function} compute - the function to be memoized\n */\nexport default function memoize<In, Out>(compute: (args: In) => Out): (args: In) => Out {\n  let cachedArgs: any = {};\n  let cachedResult: Out;\n\n  return (args: In) => {\n    for (const key in args) {\n      if (!isEqual(args[key], cachedArgs[key])) {\n        cachedResult = compute(args);\n        cachedArgs = args;\n        break;\n      }\n    }\n    return cachedResult;\n  };\n}\n","import {TypedArray, TypedArrayConstructor} from '../types/types';\n\nexport type TypedArrayManagerOptions = {\n  overAlloc?: number;\n  poolSize?: number;\n};\n\nexport class TypedArrayManager {\n  private _pool: ArrayBuffer[] = [];\n  opts: {\n    overAlloc: number;\n    poolSize: number;\n  } = {overAlloc: 2, poolSize: 100};\n\n  constructor(options: TypedArrayManagerOptions = {}) {\n    this.setOptions(options);\n  }\n\n  setOptions(options: TypedArrayManagerOptions) {\n    Object.assign(this.opts, options);\n  }\n\n  allocate<T extends TypedArray>(\n    typedArray: T | null | undefined,\n    count: number,\n    {\n      size = 1,\n      type,\n      padding = 0,\n      copy = false,\n      initialize = false,\n      maxCount\n    }: {\n      size?: number;\n      type?: TypedArrayConstructor;\n      padding?: number;\n      copy?: boolean;\n      initialize?: boolean;\n      maxCount?: number;\n    }\n  ): T {\n    const Type =\n      type || (typedArray && (typedArray.constructor as TypedArrayConstructor)) || Float32Array;\n\n    const newSize = count * size + padding;\n    if (ArrayBuffer.isView(typedArray)) {\n      if (newSize <= typedArray.length) {\n        return typedArray;\n      }\n      if (newSize * typedArray.BYTES_PER_ELEMENT <= typedArray.buffer.byteLength) {\n        return new Type(typedArray.buffer, 0, newSize) as T;\n      }\n    }\n\n    let maxSize: number = Infinity;\n    if (maxCount) {\n      maxSize = maxCount * size + padding;\n    }\n\n    const newArray = this._allocate(Type, newSize, initialize, maxSize);\n\n    if (typedArray && copy) {\n      newArray.set(typedArray);\n    } else if (!initialize) {\n      // Hack - always initialize the first 4 elements. NaNs crash the Attribute validation\n      newArray.fill(0, 0, 4);\n    }\n\n    this._release(typedArray);\n    return newArray as T;\n  }\n\n  release(typedArray: TypedArray | null | undefined) {\n    this._release(typedArray);\n  }\n\n  private _allocate(\n    Type: TypedArrayConstructor,\n    size: number,\n    initialize: boolean,\n    maxSize: number\n  ): TypedArray {\n    // Allocate at least one element to ensure a valid buffer\n    let sizeToAllocate = Math.max(Math.ceil(size * this.opts.overAlloc), 1);\n    // Don't over allocate after certain specified number of elements\n    if (sizeToAllocate > maxSize) {\n      sizeToAllocate = maxSize;\n    }\n\n    // Check if available in pool\n    const pool = this._pool;\n    const byteLength = Type.BYTES_PER_ELEMENT * sizeToAllocate;\n    const i = pool.findIndex(b => b.byteLength >= byteLength);\n    if (i >= 0) {\n      // Create a new array using an existing buffer\n      const array = new Type(pool.splice(i, 1)[0], 0, sizeToAllocate);\n      if (initialize) {\n        // Viewing a buffer with a different type may create NaNs\n        array.fill(0);\n      }\n      return array;\n    }\n    return new Type(sizeToAllocate);\n  }\n\n  private _release(typedArray: TypedArray | null | undefined): void {\n    if (!ArrayBuffer.isView(typedArray)) {\n      return;\n    }\n    const pool = this._pool;\n    const {buffer} = typedArray;\n    // Save the buffer of the released array into the pool\n    // Sort buffers by size\n    // TODO - implement binary search?\n    const {byteLength} = buffer;\n    const i = pool.findIndex(b => b.byteLength >= byteLength);\n    if (i < 0) {\n      pool.push(buffer);\n    } else if (i > 0 || pool.length < this.opts.poolSize) {\n      pool.splice(i, 0, buffer);\n    }\n    if (pool.length > this.opts.poolSize) {\n      // Drop the smallest one\n      pool.shift();\n    }\n  }\n}\n\nexport default new TypedArrayManager();\n","import {CompositeLayer, Layer, LayersList, DefaultProps} from '@deck.gl/core';\nimport {PolygonLayer, PolygonLayerProps} from '@deck.gl/layers';\n\nconst defaultProps: DefaultProps<GeoCellLayerProps> = {\n  ...PolygonLayer.defaultProps\n};\n\n/** All properties supported by GeoCellLayer. */\nexport type GeoCellLayerProps<DataT = any> = PolygonLayerProps<DataT>;\n\nexport default class GeoCellLayer<DataT = any, ExtraProps extends {} = {}> extends CompositeLayer<\n  Required<GeoCellLayerProps<DataT>> & ExtraProps\n> {\n  static layerName = 'GeoCellLayer';\n  static defaultProps: DefaultProps = defaultProps;\n\n  /** Implement to generate props to create geometry. */\n  indexToBounds(): Partial<GeoCellLayer['props']> | null {\n    return null;\n  }\n\n  renderLayers(): Layer | null | LayersList {\n    // Rendering props underlying layer\n    const {\n      elevationScale,\n      extruded,\n      wireframe,\n      filled,\n      stroked,\n      lineWidthUnits,\n      lineWidthScale,\n      lineWidthMinPixels,\n      lineWidthMaxPixels,\n      lineJointRounded,\n      lineMiterLimit,\n      lineDashJustified,\n      getElevation,\n      getFillColor,\n      getLineColor,\n      getLineWidth\n    } = this.props;\n\n    // Accessor props for underlying layers\n    const {updateTriggers, material, transitions} = this.props;\n\n    // Filled Polygon Layer\n    const CellLayer = this.getSubLayerClass('cell', PolygonLayer);\n    const {updateTriggers: boundsUpdateTriggers, ...boundsProps} = this.indexToBounds() || {};\n    return new CellLayer(\n      {\n        filled,\n        wireframe,\n\n        extruded,\n        elevationScale,\n\n        stroked,\n        lineWidthUnits,\n        lineWidthScale,\n        lineWidthMinPixels,\n        lineWidthMaxPixels,\n        lineJointRounded,\n        lineMiterLimit,\n        lineDashJustified,\n\n        material,\n        transitions,\n\n        getElevation,\n        getFillColor,\n        getLineColor,\n        getLineWidth\n      },\n      this.getSubLayerProps({\n        id: 'cell',\n        updateTriggers: updateTriggers && {\n          ...boundsUpdateTriggers,\n          getElevation: updateTriggers.getElevation,\n          getFillColor: updateTriggers.getFillColor,\n          getLineColor: updateTriggers.getLineColor,\n          getLineWidth: updateTriggers.getLineWidth\n        }\n      }),\n      boundsProps\n    );\n  }\n}\n","import type {Timeline} from '@luma.gl/core';\n\nexport type TransitionSettings = {\n  duration: number;\n  onStart?: (transition: Transition) => void;\n  onUpdate?: (transition: Transition) => void;\n  onInterrupt?: (transition: Transition) => void;\n  onEnd?: (transition: Transition) => void;\n};\n\nexport default class Transition {\n  private _inProgress: boolean;\n  private _handle: number | null;\n  private _timeline: Timeline;\n\n  time: number;\n  settings: TransitionSettings;\n\n  /**\n   * @params timeline {Timeline}\n   */\n  constructor(timeline: Timeline) {\n    this._inProgress = false;\n    this._handle = null;\n    this._timeline = timeline;\n    this.time = 0;\n\n    // Defaults\n    this.settings = {duration: 0};\n  }\n\n  /* Public API */\n  get inProgress(): boolean {\n    return this._inProgress;\n  }\n\n  /**\n   * (re)start this transition.\n   * @params props {object} - optional overriding props. see constructor\n   */\n  start(settings: TransitionSettings) {\n    this.cancel();\n    this.settings = settings;\n    this._inProgress = true;\n    this.settings.onStart?.(this);\n  }\n\n  /**\n   * end this transition if it is in progress.\n   */\n  end() {\n    if (this._inProgress) {\n      this._timeline.removeChannel(this._handle);\n      this._handle = null;\n      this._inProgress = false;\n      this.settings.onEnd?.(this);\n    }\n  }\n\n  /**\n   * cancel this transition if it is in progress.\n   */\n  cancel() {\n    if (this._inProgress) {\n      this.settings.onInterrupt?.(this);\n      this._timeline.removeChannel(this._handle);\n      this._handle = null;\n      this._inProgress = false;\n    }\n  }\n\n  /**\n   * update this transition. Returns `true` if updated.\n   */\n  update() {\n    if (!this._inProgress) {\n      return false;\n    }\n\n    // It is important to initialize the handle during `update` instead of `start`.\n    // The CPU time that the `start` frame takes should not be counted towards the duration.\n    // On the other hand, `update` always happens during a render cycle. The clock starts when the\n    // transition is rendered for the first time.\n    if (this._handle === null) {\n      const {_timeline: timeline, settings} = this;\n      this._handle = timeline.addChannel({\n        delay: timeline.getTime(),\n        duration: settings.duration\n      });\n    }\n\n    this.time = this._timeline.getTime(this._handle);\n    // Call subclass method\n    this._onUpdate();\n    // Call user callback\n    this.settings.onUpdate?.(this);\n\n    // This only works if `settings.duration` is set\n    // Spring transition must call `end` manually\n    if (this._timeline.isFinished(this._handle)) {\n      this.end();\n    }\n    return true;\n  }\n\n  /* Private API */\n\n  protected _onUpdate() {\n    // for subclass override\n  }\n}\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","// Copyright (c) 2017 Uber Technologies, Inc.\n// MIT License\nimport {NumericArray} from '@math.gl/types';\nimport MathArray from './math-array';\nimport {checkNumber} from '../../lib/validators';\nimport assert from '../../lib/assert';\n\n/** Base class for vectors with at least 2 elements */\nexport default abstract class Vector extends MathArray {\n  // ACCESSORS\n\n  get x(): number {\n    return this[0];\n  }\n\n  set x(value: number) {\n    this[0] = checkNumber(value);\n  }\n\n  get y(): number {\n    return this[1];\n  }\n\n  set y(value: number) {\n    this[1] = checkNumber(value);\n  }\n\n  /**\n   * Returns the length of the vector from the origin to the point described by this vector\n   *\n   * @note `length` is a reserved word for Arrays, so `v.length()` will return number of elements\n   * Instead we provide `len` and `magnitude`\n   */\n  len(): number {\n    return Math.sqrt(this.lengthSquared());\n  }\n\n  /**\n   * Returns the length of the vector from the origin to the point described by this vector\n   */\n  magnitude(): number {\n    return this.len();\n  }\n\n  /**\n   * Returns the squared length of the vector from the origin to the point described by this vector\n   */\n  lengthSquared(): number {\n    let length = 0;\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      length += this[i] * this[i];\n    }\n    return length;\n  }\n\n  /**\n   * Returns the squared length of the vector from the origin to the point described by this vector\n   */\n  magnitudeSquared(): number {\n    return this.lengthSquared();\n  }\n\n  distance(mathArray: Readonly<NumericArray>): number {\n    return Math.sqrt(this.distanceSquared(mathArray));\n  }\n\n  distanceSquared(mathArray: Readonly<NumericArray>): number {\n    let length = 0;\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      const dist = this[i] - mathArray[i];\n      length += dist * dist;\n    }\n    return checkNumber(length);\n  }\n\n  dot(mathArray: Readonly<NumericArray>): number {\n    let product = 0;\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      product += this[i] * mathArray[i];\n    }\n    return checkNumber(product);\n  }\n\n  // MODIFIERS\n\n  normalize(): this {\n    const length = this.magnitude();\n    if (length !== 0) {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] /= length;\n      }\n    }\n    return this.check();\n  }\n\n  multiply(...vectors: Readonly<NumericArray>[]): this {\n    for (const vector of vectors) {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] *= vector[i];\n      }\n    }\n    return this.check();\n  }\n\n  divide(...vectors: Readonly<NumericArray>[]): this {\n    for (const vector of vectors) {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] /= vector[i];\n      }\n    }\n    return this.check();\n  }\n\n  // THREE.js compatibility\n\n  lengthSq(): number {\n    return this.lengthSquared();\n  }\n  distanceTo(vector: Readonly<NumericArray>): number {\n    return this.distance(vector);\n  }\n  distanceToSquared(vector: Readonly<NumericArray>): number {\n    return this.distanceSquared(vector);\n  }\n\n  getComponent(i: number): number {\n    assert(i >= 0 && i < this.ELEMENTS, 'index is out of range');\n    return checkNumber(this[i]);\n  }\n\n  setComponent(i: number, value: number): this {\n    assert(i >= 0 && i < this.ELEMENTS, 'index is out of range');\n    this[i] = value;\n    return this.check();\n  }\n\n  addVectors(a: Readonly<NumericArray>, b: Readonly<NumericArray>): this {\n    return this.copy(a).add(b);\n  }\n\n  subVectors(a: Readonly<NumericArray>, b: Readonly<NumericArray>): this {\n    return this.copy(a).subtract(b);\n  }\n\n  multiplyVectors(a: Readonly<NumericArray>, b: Readonly<NumericArray>): this {\n    return this.copy(a).multiply(b);\n  }\n\n  addScaledVector(a: Readonly<NumericArray>, b: number): this {\n    // @ts-expect-error error TS2351: Cannot use 'new' with an expression whose type lacks a call or construct signature.\n    return this.add(new this.constructor(a).multiplyScalar(b));\n  }\n}\n","// Copyright (c) 2017 Uber Technologies, Inc.\n// MIT License\nimport {NumericArray} from '@math.gl/types';\nimport Vector from './base/vector';\nimport {config, isArray} from '../lib/common';\nimport {checkNumber} from '../lib/validators';\nimport * as vec3 from 'gl-matrix/vec3';\n/* eslint-disable camelcase */\nimport {vec3_transformMat2, vec3_transformMat4AsVector} from '../lib/gl-matrix-extras';\n\nconst ORIGIN = [0, 0, 0];\n\nlet ZERO: Vector3;\n\n/**\n * Three-element vector class.\n * Subclass of Array<number>\n */\nexport default class Vector3 extends Vector {\n  static get ZERO(): Vector3 {\n    if (!ZERO) {\n      ZERO = new Vector3(0, 0, 0);\n      Object.freeze(ZERO);\n    }\n    return ZERO;\n  }\n\n  /**\n   * @class\n   * @param x\n   * @param y\n   * @param z\n   */\n  constructor(x: number | Readonly<NumericArray> = 0, y: number = 0, z: number = 0) {\n    // PERF NOTE: initialize elements as double precision numbers\n    super(-0, -0, -0);\n    if (arguments.length === 1 && isArray(x)) {\n      this.copy(x as NumericArray);\n    } else {\n      // this.set(x, y, z);\n      if (config.debug) {\n        checkNumber(x);\n        checkNumber(y);\n        checkNumber(z);\n      }\n      // @ts-expect-error TS2412: Property '0' of type 'number | [number, number, number]' is not assignable to numeric index type 'number'\n      this[0] = x;\n      this[1] = y;\n      this[2] = z;\n    }\n  }\n\n  set(x: number, y: number, z: number): this {\n    this[0] = x;\n    this[1] = y;\n    this[2] = z;\n    return this.check();\n  }\n\n  copy(array: Readonly<NumericArray>): this {\n    this[0] = array[0];\n    this[1] = array[1];\n    this[2] = array[2];\n    return this.check();\n  }\n\n  fromObject(object: {x: number; y: number; z: number}): this {\n    if (config.debug) {\n      checkNumber(object.x);\n      checkNumber(object.y);\n      checkNumber(object.z);\n    }\n    this[0] = object.x;\n    this[1] = object.y;\n    this[2] = object.z;\n    return this.check();\n  }\n\n  toObject(object: {x?: number; y?: number; z?: number}): {x: number; y: number; z: number} {\n    object.x = this[0];\n    object.y = this[1];\n    object.z = this[2];\n    return object as {x: number; y: number; z: number};\n  }\n\n  // Getters/setters\n\n  get ELEMENTS(): number {\n    return 3;\n  }\n  get z(): number {\n    return this[2];\n  }\n  set z(value: number) {\n    this[2] = checkNumber(value);\n  }\n\n  // ACCESSORS\n\n  angle(vector: Readonly<NumericArray>): number {\n    return vec3.angle(this, vector);\n  }\n\n  // MODIFIERS\n\n  cross(vector: Readonly<NumericArray>): this {\n    vec3.cross(this, this, vector);\n    return this.check();\n  }\n\n  rotateX({radians, origin = ORIGIN}: {radians: number; origin?: Readonly<NumericArray>}): this {\n    vec3.rotateX(this, this, origin, radians);\n    return this.check();\n  }\n\n  rotateY({radians, origin = ORIGIN}: {radians: number; origin?: Readonly<NumericArray>}): this {\n    vec3.rotateY(this, this, origin, radians);\n    return this.check();\n  }\n\n  rotateZ({radians, origin = ORIGIN}: {radians: number; origin?: Readonly<NumericArray>}): this {\n    vec3.rotateZ(this, this, origin, radians);\n    return this.check();\n  }\n\n  // Transforms\n\n  // transforms as point (4th component is implicitly 1)\n  transform(matrix4: Readonly<NumericArray>): this {\n    return this.transformAsPoint(matrix4);\n  }\n\n  // transforms as point (4th component is implicitly 1)\n  transformAsPoint(matrix4: Readonly<NumericArray>): this {\n    vec3.transformMat4(this, this, matrix4);\n    return this.check();\n  }\n\n  // transforms as vector  (4th component is implicitly 0, ignores translation. slightly faster)\n  transformAsVector(matrix4: Readonly<NumericArray>): this {\n    vec3_transformMat4AsVector(this, this, matrix4);\n    return this.check();\n  }\n\n  transformByMatrix3(matrix3: Readonly<NumericArray>): this {\n    vec3.transformMat3(this, this, matrix3);\n    return this.check();\n  }\n\n  transformByMatrix2(matrix2: Readonly<NumericArray>): this {\n    vec3_transformMat2(this, this, matrix2);\n    return this.check();\n  }\n\n  transformByQuaternion(quaternion: Readonly<NumericArray>): this {\n    vec3.transformQuat(this, this, quaternion);\n    return this.check();\n  }\n}\n","import GL from '@luma.gl/constants';\nimport Pass from './pass';\nimport {clear, setParameters, withParameters, cssToDeviceRatio} from '@luma.gl/core';\n\nimport type {Framebuffer} from '@luma.gl/core';\nimport type Viewport from '../viewports/viewport';\nimport type View from '../views/view';\nimport type Layer from '../lib/layer';\nimport type {Effect} from '../lib/effect';\n\nexport type Rect = {x: number; y: number; width: number; height: number};\n\nexport type LayersPassRenderOptions = {\n  target?: Framebuffer;\n  isPicking?: boolean;\n  pass: string;\n  layers: Layer[];\n  viewports: Viewport[];\n  onViewportActive?: (viewport: Viewport) => void;\n  cullRect?: Rect;\n  views?: Record<string, View>;\n  effects?: Effect[];\n  /** If true, recalculates render index (z) from 0. Set to false if a stack of layers are rendered in multiple passes. */\n  clearStack?: boolean;\n  clearCanvas?: boolean;\n  layerFilter?: ((context: FilterContext) => boolean) | null;\n  moduleParameters?: any;\n  /** Stores returned results from Effect.preRender, for use downstream in the render pipeline */\n  preRenderStats?: Record<string, any>;\n};\n\ntype DrawLayerParameters = {\n  shouldDrawLayer: boolean;\n  layerRenderIndex?: number;\n  moduleParameters?: any;\n  layerParameters?: any;\n};\n\nexport type FilterContext = {\n  layer: Layer;\n  viewport: Viewport;\n  isPicking: boolean;\n  renderPass: string;\n  cullRect?: Rect;\n};\n\nexport type RenderStats = {\n  totalCount: number;\n  visibleCount: number;\n  compositeCount: number;\n  pickableCount: number;\n};\n\nexport default class LayersPass extends Pass {\n  _lastRenderIndex: number = -1;\n\n  render(options: LayersPassRenderOptions): any {\n    const gl = this.gl;\n\n    setParameters(gl, {framebuffer: options.target});\n    return this._drawLayers(options);\n  }\n\n  // Draw a list of layers in a list of viewports\n  private _drawLayers(options: LayersPassRenderOptions) {\n    const {\n      target,\n      moduleParameters,\n      viewports,\n      views,\n      onViewportActive,\n      clearStack = true,\n      clearCanvas = true\n    } = options;\n    options.pass = options.pass || 'unknown';\n\n    const gl = this.gl;\n    if (clearCanvas) {\n      clearGLCanvas(gl, target);\n    }\n\n    if (clearStack) {\n      this._lastRenderIndex = -1;\n    }\n\n    const renderStats: RenderStats[] = [];\n\n    for (const viewport of viewports) {\n      const view = views && views[viewport.id];\n\n      // Update context to point to this viewport\n      onViewportActive?.(viewport);\n\n      const drawLayerParams = this._getDrawLayerParams(viewport, options);\n\n      // render this viewport\n      const subViewports = viewport.subViewports || [viewport];\n      for (const subViewport of subViewports) {\n        const stats = this._drawLayersInViewport(\n          gl,\n          {\n            target,\n            moduleParameters,\n            viewport: subViewport,\n            view,\n            pass: options.pass,\n            layers: options.layers\n          },\n          drawLayerParams\n        );\n        renderStats.push(stats);\n      }\n    }\n    return renderStats;\n  }\n\n  // When a viewport contains multiple subviewports (e.g. repeated web mercator map),\n  // this is only done once for the parent viewport\n  /* Resolve the parameters needed to draw each layer */\n  protected _getDrawLayerParams(\n    viewport: Viewport,\n    {\n      layers,\n      pass,\n      isPicking = false,\n      layerFilter,\n      cullRect,\n      effects,\n      moduleParameters\n    }: LayersPassRenderOptions,\n    /** Internal flag, true if only used to determine whether each layer should be drawn */\n    evaluateShouldDrawOnly: boolean = false\n  ): DrawLayerParameters[] {\n    const drawLayerParams: DrawLayerParameters[] = [];\n    const indexResolver = layerIndexResolver(this._lastRenderIndex + 1);\n    const drawContext: FilterContext = {\n      layer: layers[0],\n      viewport,\n      isPicking,\n      renderPass: pass,\n      cullRect\n    };\n    const layerFilterCache = {};\n    for (let layerIndex = 0; layerIndex < layers.length; layerIndex++) {\n      const layer = layers[layerIndex];\n      // Check if we should draw layer\n      const shouldDrawLayer = this._shouldDrawLayer(\n        layer,\n        drawContext,\n        layerFilter,\n        layerFilterCache\n      );\n\n      const layerParam: DrawLayerParameters = {\n        shouldDrawLayer\n      };\n\n      if (shouldDrawLayer && !evaluateShouldDrawOnly) {\n        // This is the \"logical\" index for ordering this layer in the stack\n        // used to calculate polygon offsets\n        // It can be the same as another layer\n        layerParam.layerRenderIndex = indexResolver(layer, shouldDrawLayer);\n\n        layerParam.moduleParameters = this._getModuleParameters(\n          layer,\n          effects,\n          pass,\n          moduleParameters\n        );\n        layerParam.layerParameters = this.getLayerParameters(layer, layerIndex, viewport);\n      }\n      drawLayerParams[layerIndex] = layerParam;\n    }\n    return drawLayerParams;\n  }\n\n  // Draws a list of layers in one viewport\n  // TODO - when picking we could completely skip rendering viewports that dont\n  // intersect with the picking rect\n  /* eslint-disable max-depth, max-statements */\n  private _drawLayersInViewport(\n    gl,\n    {layers, moduleParameters: globalModuleParameters, pass, target, viewport, view},\n    drawLayerParams\n  ): RenderStats {\n    const glViewport = getGLViewport(gl, {\n      moduleParameters: globalModuleParameters,\n      target,\n      viewport\n    });\n\n    if (view && view.props.clear) {\n      const clearOpts = view.props.clear === true ? {color: true, depth: true} : view.props.clear;\n      withParameters(\n        gl,\n        {\n          scissorTest: true,\n          scissor: glViewport\n        },\n        () => clear(gl, clearOpts)\n      );\n    }\n\n    // render layers in normal colors\n    const renderStatus = {\n      totalCount: layers.length,\n      visibleCount: 0,\n      compositeCount: 0,\n      pickableCount: 0\n    };\n\n    setParameters(gl, {viewport: glViewport});\n\n    // render layers in normal colors\n    for (let layerIndex = 0; layerIndex < layers.length; layerIndex++) {\n      const layer = layers[layerIndex];\n      const {shouldDrawLayer, layerRenderIndex, moduleParameters, layerParameters} =\n        drawLayerParams[layerIndex];\n\n      // Calculate stats\n      if (shouldDrawLayer && layer.props.pickable) {\n        renderStatus.pickableCount++;\n      }\n      if (layer.isComposite) {\n        renderStatus.compositeCount++;\n      } else if (shouldDrawLayer) {\n        // Draw the layer\n        renderStatus.visibleCount++;\n\n        this._lastRenderIndex = Math.max(this._lastRenderIndex, layerRenderIndex);\n\n        // overwrite layer.context.viewport with the sub viewport\n        moduleParameters.viewport = viewport;\n\n        try {\n          layer._drawLayer({\n            moduleParameters,\n            uniforms: {layerIndex: layerRenderIndex},\n            parameters: layerParameters\n          });\n        } catch (err) {\n          layer.raiseError(err, `drawing ${layer} to ${pass}`);\n        }\n      }\n    }\n\n    return renderStatus;\n  }\n  /* eslint-enable max-depth, max-statements */\n\n  /* Methods for subclass overrides */\n  shouldDrawLayer(layer: Layer): boolean {\n    return true;\n  }\n\n  protected getModuleParameters(layer: Layer, effects?: Effect[]): any {\n    return null;\n  }\n\n  protected getLayerParameters(layer: Layer, layerIndex: number, viewport: Viewport): any {\n    return layer.props.parameters;\n  }\n\n  /* Private */\n  private _shouldDrawLayer(\n    layer: Layer,\n    drawContext: FilterContext,\n    layerFilter: ((params: FilterContext) => boolean) | undefined | null,\n    layerFilterCache: Record<string, boolean>\n  ) {\n    const shouldDrawLayer = layer.props.visible && this.shouldDrawLayer(layer);\n\n    if (!shouldDrawLayer) {\n      return false;\n    }\n\n    drawContext.layer = layer;\n\n    let parent = layer.parent as Layer;\n    while (parent) {\n      // @ts-ignore\n      if (!parent.props.visible || !parent.filterSubLayer(drawContext)) {\n        return false;\n      }\n      drawContext.layer = parent;\n      parent = parent.parent as Layer;\n    }\n\n    if (layerFilter) {\n      const rootLayerId = drawContext.layer.id;\n      if (!(rootLayerId in layerFilterCache)) {\n        layerFilterCache[rootLayerId] = layerFilter(drawContext);\n      }\n      if (!layerFilterCache[rootLayerId]) {\n        return false;\n      }\n    }\n\n    // If a layer is drawn, update its viewportChanged flag\n    layer.activateViewport(drawContext.viewport);\n\n    return true;\n  }\n\n  private _getModuleParameters(\n    layer: Layer,\n    effects: Effect[] | undefined,\n    pass: string,\n    overrides: any\n  ): any {\n    const moduleParameters = Object.assign(\n      Object.create(layer.internalState?.propsInTransition || layer.props),\n      {\n        autoWrapLongitude: layer.wrapLongitude,\n        // @ts-ignore\n        viewport: layer.context.viewport,\n        // @ts-ignore\n        mousePosition: layer.context.mousePosition,\n        pickingActive: 0,\n        devicePixelRatio: cssToDeviceRatio(this.gl)\n      }\n    );\n\n    if (effects) {\n      for (const effect of effects) {\n        Object.assign(moduleParameters, effect.getModuleParameters?.(layer));\n      }\n    }\n\n    return Object.assign(moduleParameters, this.getModuleParameters(layer, effects), overrides);\n  }\n}\n\n// If the _index prop is defined, return a layer index that's relative to its parent\n// Otherwise return the index of the layer among all rendered layers\n// This is done recursively, i.e. if the user overrides a layer's default index,\n// all its descendants will be resolved relative to that index.\n// This implementation assumes that parent layers always appear before its children\n// which is true if the layer array comes from the LayerManager\nexport function layerIndexResolver(\n  startIndex: number = 0,\n  layerIndices: Record<string, number> = {}\n): (layer: Layer, isDrawn: boolean) => number {\n  const resolvers = {};\n\n  const resolveLayerIndex = (layer, isDrawn) => {\n    const indexOverride = layer.props._offset;\n    const layerId = layer.id;\n    const parentId = layer.parent && layer.parent.id;\n\n    let index;\n\n    if (parentId && !(parentId in layerIndices)) {\n      // Populate layerIndices with the parent layer's index\n      resolveLayerIndex(layer.parent, false);\n    }\n\n    if (parentId in resolvers) {\n      const resolver = (resolvers[parentId] =\n        resolvers[parentId] || layerIndexResolver(layerIndices[parentId], layerIndices));\n      index = resolver(layer, isDrawn);\n      resolvers[layerId] = resolver;\n    } else if (Number.isFinite(indexOverride)) {\n      index = indexOverride + (layerIndices[parentId] || 0);\n      // Mark layer as needing its own resolver\n      // We don't actually create it until it's used for the first time\n      resolvers[layerId] = null;\n    } else {\n      index = startIndex;\n    }\n\n    if (isDrawn && index >= startIndex) {\n      startIndex = index + 1;\n    }\n\n    layerIndices[layerId] = index;\n    return index;\n  };\n  return resolveLayerIndex;\n}\n\n// Convert viewport top-left CSS coordinates to bottom up WebGL coordinates\nfunction getGLViewport(\n  gl,\n  {\n    moduleParameters,\n    target,\n    viewport\n  }: {\n    moduleParameters: any;\n    target?: Framebuffer;\n    viewport: Viewport;\n  }\n): [number, number, number, number] {\n  const useTarget = target && target.id !== 'default-framebuffer';\n  const pixelRatio =\n    (moduleParameters && moduleParameters.devicePixelRatio) || cssToDeviceRatio(gl);\n\n  // Default framebuffer is used when writing to canvas\n  const height = useTarget ? target.height : gl.drawingBufferHeight;\n\n  // Convert viewport top-left CSS coordinates to bottom up WebGL coordinates\n  const dimensions = viewport;\n  return [\n    dimensions.x * pixelRatio,\n    height - (dimensions.y + dimensions.height) * pixelRatio,\n    dimensions.width * pixelRatio,\n    dimensions.height * pixelRatio\n  ];\n}\n\nfunction clearGLCanvas(gl: WebGLRenderingContext, targetFramebuffer?: Framebuffer) {\n  const width = targetFramebuffer ? targetFramebuffer.width : gl.drawingBufferWidth;\n  const height = targetFramebuffer ? targetFramebuffer.height : gl.drawingBufferHeight;\n  // clear depth and color buffers, restoring transparency\n  setParameters(gl, {viewport: [0, 0, width, height]});\n  gl.clear(GL.COLOR_BUFFER_BIT | GL.DEPTH_BUFFER_BIT);\n}\n","import {useMemo} from 'react';\n\nexport function useCombinedRefs<T>(\n  ...refs: ((node: T) => void)[]\n): (node: T) => void {\n  return useMemo(\n    () => (node: T) => {\n      refs.forEach((ref) => ref(node));\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    refs\n  );\n}\n","// https://github.com/facebook/react/blob/master/packages/shared/ExecutionEnvironment.js\nexport const canUseDOM =\n  typeof window !== 'undefined' &&\n  typeof window.document !== 'undefined' &&\n  typeof window.document.createElement !== 'undefined';\n","export function isWindow(element: Object): element is typeof window {\n  const elementString = Object.prototype.toString.call(element);\n  return (\n    elementString === '[object Window]' ||\n    // In Electron context the Window object serializes to [object global]\n    elementString === '[object global]'\n  );\n}\n","export function isNode(node: Object): node is Node {\n  return 'nodeType' in node;\n}\n","import {isWindow} from '../type-guards/isWindow';\nimport {isNode} from '../type-guards/isNode';\n\nexport function getWindow(target: Event['target']): typeof window {\n  if (!target) {\n    return window;\n  }\n\n  if (isWindow(target)) {\n    return target;\n  }\n\n  if (!isNode(target)) {\n    return window;\n  }\n\n  return target.ownerDocument?.defaultView ?? window;\n}\n","import {getWindow} from '../execution-context/getWindow';\n\nexport function isDocument(node: Node): node is Document {\n  const {Document} = getWindow(node);\n\n  return node instanceof Document;\n}\n","import {getWindow} from '../execution-context/getWindow';\n\nimport {isWindow} from './isWindow';\n\nexport function isHTMLElement(node: Node | Window): node is HTMLElement {\n  if (isWindow(node)) {\n    return false;\n  }\n\n  return node instanceof getWindow(node).HTMLElement;\n}\n","import {getWindow} from '../execution-context/getWindow';\n\nexport function isSVGElement(node: Node): node is SVGElement {\n  return node instanceof getWindow(node).SVGElement;\n}\n","import {isWindow, isHTMLElement, isDocument, isNode} from '../type-guards';\n\nexport function getOwnerDocument(target: Event['target']): Document {\n  if (!target) {\n    return document;\n  }\n\n  if (isWindow(target)) {\n    return target.document;\n  }\n\n  if (!isNode(target)) {\n    return document;\n  }\n\n  if (isDocument(target)) {\n    return target;\n  }\n\n  if (isHTMLElement(target)) {\n    return target.ownerDocument;\n  }\n\n  return document;\n}\n","import {useEffect, useLayoutEffect} from 'react';\n\nimport {canUseDOM} from '../execution-context';\n\n/**\n * A hook that resolves to useEffect on the server and useLayoutEffect on the client\n * @param callback {function} Callback function that is invoked when the dependencies of the hook change\n */\nexport const useIsomorphicLayoutEffect = canUseDOM\n  ? useLayoutEffect\n  : useEffect;\n","import {useCallback, useRef} from 'react';\n\nimport {useIsomorphicLayoutEffect} from './useIsomorphicLayoutEffect';\n\nexport function useEvent<T extends Function>(handler: T | undefined) {\n  const handlerRef = useRef<T | undefined>(handler);\n\n  useIsomorphicLayoutEffect(() => {\n    handlerRef.current = handler;\n  });\n\n  return useCallback(function (...args: any) {\n    return handlerRef.current?.(...args);\n  }, []);\n}\n","import {useCallback, useRef} from 'react';\n\nexport function useInterval() {\n  const intervalRef = useRef<number | null>(null);\n\n  const set = useCallback((listener: Function, duration: number) => {\n    intervalRef.current = setInterval(listener, duration);\n  }, []);\n\n  const clear = useCallback(() => {\n    if (intervalRef.current !== null) {\n      clearInterval(intervalRef.current);\n      intervalRef.current = null;\n    }\n  }, []);\n\n  return [set, clear] as const;\n}\n","import {useRef} from 'react';\nimport type {DependencyList} from 'react';\n\nimport {useIsomorphicLayoutEffect} from './useIsomorphicLayoutEffect';\n\nexport function useLatestValue<T extends any>(\n  value: T,\n  dependencies: DependencyList = [value]\n) {\n  const valueRef = useRef<T>(value);\n\n  useIsomorphicLayoutEffect(() => {\n    if (valueRef.current !== value) {\n      valueRef.current = value;\n    }\n  }, dependencies);\n\n  return valueRef;\n}\n","import {useMemo, useRef} from 'react';\n\nexport function useLazyMemo<T>(\n  callback: (prevValue: T | undefined) => T,\n  dependencies: any[]\n) {\n  const valueRef = useRef<T>();\n\n  return useMemo(\n    () => {\n      const newValue = callback(valueRef.current);\n      valueRef.current = newValue;\n\n      return newValue;\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [...dependencies]\n  );\n}\n","import {useRef, useCallback} from 'react';\n\nimport {useEvent} from './useEvent';\n\nexport function useNodeRef(\n  onChange?: (\n    newElement: HTMLElement | null,\n    previousElement: HTMLElement | null\n  ) => void\n) {\n  const onChangeHandler = useEvent(onChange);\n  const node = useRef<HTMLElement | null>(null);\n  const setNodeRef = useCallback(\n    (element: HTMLElement | null) => {\n      if (element !== node.current) {\n        onChangeHandler?.(element, node.current);\n      }\n\n      node.current = element;\n    },\n    //eslint-disable-next-line\n    []\n  );\n\n  return [node, setNodeRef] as const;\n}\n","import {useRef, useEffect} from 'react';\n\nexport function usePrevious<T>(value: T) {\n  const ref = useRef<T>();\n\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n\n  return ref.current;\n}\n","import {useMemo} from 'react';\n\nlet ids: Record<string, number> = {};\n\nexport function useUniqueId(prefix: string, value?: string) {\n  return useMemo(() => {\n    if (value) {\n      return value;\n    }\n\n    const id = ids[prefix] == null ? 0 : ids[prefix] + 1;\n    ids[prefix] = id;\n\n    return `${prefix}-${id}`;\n  }, [prefix, value]);\n}\n","function createAdjustmentFn(modifier: number) {\n  return <T extends Record<U, number>, U extends string>(\n    object: T,\n    ...adjustments: Partial<T>[]\n  ): T => {\n    return adjustments.reduce<T>(\n      (accumulator, adjustment) => {\n        const entries = Object.entries(adjustment) as [U, number][];\n\n        for (const [key, valueAdjustment] of entries) {\n          const value = accumulator[key];\n\n          if (value != null) {\n            accumulator[key] = (value + modifier * valueAdjustment) as T[U];\n          }\n        }\n\n        return accumulator;\n      },\n      {\n        ...object,\n      }\n    );\n  };\n}\n\nexport const add = createAdjustmentFn(1);\nexport const subtract = createAdjustmentFn(-1);\n","export function hasViewportRelativeCoordinates(\n  event: Event\n): event is Event & Pick<PointerEvent, 'clientX' | 'clientY'> {\n  return 'clientX' in event && 'clientY' in event;\n}\n","import {getWindow} from '../execution-context';\n\nexport function isKeyboardEvent(\n  event: Event | undefined | null\n): event is KeyboardEvent {\n  if (!event) {\n    return false;\n  }\n\n  const {KeyboardEvent} = getWindow(event.target);\n\n  return KeyboardEvent && event instanceof KeyboardEvent;\n}\n","import {getWindow} from '../execution-context';\n\nexport function isTouchEvent(\n  event: Event | undefined | null\n): event is TouchEvent {\n  if (!event) {\n    return false;\n  }\n\n  const {TouchEvent} = getWindow(event.target);\n\n  return TouchEvent && event instanceof TouchEvent;\n}\n","import type {Coordinates} from './types';\nimport {isTouchEvent, hasViewportRelativeCoordinates} from '../event';\n\n/**\n * Returns the normalized x and y coordinates for mouse and touch events.\n */\nexport function getEventCoordinates(event: Event): Coordinates | null {\n  if (isTouchEvent(event)) {\n    if (event.touches && event.touches.length) {\n      const {clientX: x, clientY: y} = event.touches[0];\n\n      return {\n        x,\n        y,\n      };\n    } else if (event.changedTouches && event.changedTouches.length) {\n      const {clientX: x, clientY: y} = event.changedTouches[0];\n\n      return {\n        x,\n        y,\n      };\n    }\n  }\n\n  if (hasViewportRelativeCoordinates(event)) {\n    return {\n      x: event.clientX,\n      y: event.clientY,\n    };\n  }\n\n  return null;\n}\n","export type Transform = {\n  x: number;\n  y: number;\n  scaleX: number;\n  scaleY: number;\n};\n\nexport interface Transition {\n  property: string;\n  easing: string;\n  duration: number;\n}\n\nexport const CSS = Object.freeze({\n  Translate: {\n    toString(transform: Transform | null) {\n      if (!transform) {\n        return;\n      }\n\n      const {x, y} = transform;\n\n      return `translate3d(${x ? Math.round(x) : 0}px, ${\n        y ? Math.round(y) : 0\n      }px, 0)`;\n    },\n  },\n  Scale: {\n    toString(transform: Transform | null) {\n      if (!transform) {\n        return;\n      }\n\n      const {scaleX, scaleY} = transform;\n\n      return `scaleX(${scaleX}) scaleY(${scaleY})`;\n    },\n  },\n  Transform: {\n    toString(transform: Transform | null) {\n      if (!transform) {\n        return;\n      }\n\n      return [\n        CSS.Translate.toString(transform),\n        CSS.Scale.toString(transform),\n      ].join(' ');\n    },\n  },\n  Transition: {\n    toString({property, duration, easing}: Transition) {\n      return `${property} ${duration}ms ${easing}`;\n    },\n  },\n});\n","const SELECTOR =\n  'a,frame,iframe,input:not([type=hidden]):not(:disabled),select:not(:disabled),textarea:not(:disabled),button:not(:disabled),*[tabindex]';\n\nexport function findFirstFocusableNode(\n  element: HTMLElement\n): HTMLElement | null {\n  if (element.matches(SELECTOR)) {\n    return element;\n  }\n\n  return element.querySelector(SELECTOR);\n}\n","// Copyright (c) 2017 Uber Technologies, Inc.\n// MIT License\nimport {NumericArray} from '@math.gl/types';\nimport MathArray from './math-array';\nimport {checkNumber} from '../../lib/validators';\nimport {config} from '../../lib/common';\n\n/** Base class for matrices */\nexport default abstract class Matrix extends MathArray {\n  abstract get RANK(): number;\n\n  // fromObject(object) {\n  //   const array = object.elements;\n  //   return this.fromRowMajor(array);\n  // }\n  // toObject(object) {\n  //   const array = object.elements;\n  //   this.toRowMajor(array);\n  //   return object;\n  // }\n\n  // TODO better override formatString?\n  toString(): string {\n    let string = '[';\n    if (config.printRowMajor) {\n      string += 'row-major:';\n      for (let row = 0; row < this.RANK; ++row) {\n        for (let col = 0; col < this.RANK; ++col) {\n          string += ` ${this[col * this.RANK + row]}`;\n        }\n      }\n    } else {\n      string += 'column-major:';\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        string += ` ${this[i]}`;\n      }\n    }\n    string += ']';\n    return string;\n  }\n\n  getElementIndex(row: number, col: number): number {\n    return col * this.RANK + row;\n  }\n\n  // By default assumes row major indices\n  getElement(row: number, col: number): number {\n    return this[col * this.RANK + row];\n  }\n\n  // By default assumes row major indices\n  setElement(row: number, col: number, value: number): this {\n    this[col * this.RANK + row] = checkNumber(value);\n    return this;\n  }\n  getColumn<NumArrayT>(columnIndex: number, result: NumArrayT): NumArrayT;\n  getColumn(columnIndex: number): number[];\n\n  getColumn(columnIndex: number, result: number[] = new Array(this.RANK).fill(-0)): number[] {\n    const firstIndex = columnIndex * this.RANK;\n    for (let i = 0; i < this.RANK; ++i) {\n      result[i] = this[firstIndex + i];\n    }\n    return result;\n  }\n\n  setColumn(columnIndex: number, columnVector: Readonly<NumericArray>): this {\n    const firstIndex = columnIndex * this.RANK;\n    for (let i = 0; i < this.RANK; ++i) {\n      this[firstIndex + i] = columnVector[i];\n    }\n    return this;\n  }\n}\n","import * as glMatrix from \"./common.js\";\n/**\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\n * Calculates the determinant of a mat4\n *\n * @param {ReadonlyMat4} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {mat4} out\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 from a dual quat.\n *\n * @param {mat4} out Matrix\n * @param {ReadonlyQuat2} a Dual Quaternion\n * @returns {mat4} mat4 receiving operation result\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveNO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\n * Alias for {@link mat4.perspectiveNO}\n * @function\n */\n\nexport var perspective = perspectiveNO;\n/**\n * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveZO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = far * nf;\n    out[14] = far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -near;\n  }\n\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoNO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Alias for {@link mat4.orthoNO}\n * @function\n */\n\nexport var ortho = orthoNO;\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoZO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = near * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat4\n *\n * @param {ReadonlyMat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\n * 2 Dimensional Vector\n * @module vec2\n */\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(2);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {ReadonlyVec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\n\nexport function fromValues(x, y) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the source vector\n * @returns {vec2} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\n\nexport function set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n/**\n * Math.ceil the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to ceil\n * @returns {vec2} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n/**\n * Math.floor the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to floor\n * @returns {vec2} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n/**\n * Math.round the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to round\n * @returns {vec2} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.hypot(x, y);\n}\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n}\n/**\n * Calculates the length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.hypot(x, y);\n}\n/**\n * Calculates the squared length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n}\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to negate\n * @returns {vec2} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to invert\n * @returns {vec2} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to normalize\n * @returns {vec2} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec3} out\n */\n\nexport function cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec2} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec2} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2d} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat3} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n/**\n * Rotate a 2D vector\n * @param {vec2} out The receiving vec2\n * @param {ReadonlyVec2} a The vec2 point to rotate\n * @param {ReadonlyVec2} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec2} out\n */\n\nexport function rotate(out, a, b, rad) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n      p1 = a[1] - b[1],\n      sinC = Math.sin(rad),\n      cosC = Math.cos(rad); //perform rotation and translate to correct position\n\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n/**\n * Get the angle between two 2D vectors\n * @param {ReadonlyVec2} a The first operand\n * @param {ReadonlyVec2} b The second operand\n * @returns {Number} The angle in radians\n */\n\nexport function angle(a, b) {\n  var x1 = a[0],\n      y1 = a[1],\n      x2 = b[0],\n      y2 = b[1],\n      // mag is the product of the magnitudes of a and b\n  mag = Math.sqrt(x1 * x1 + y1 * y1) * Math.sqrt(x2 * x2 + y2 * y2),\n      // mag &&.. short circuits if mag == 0\n  cosine = mag && (x1 * x2 + y1 * y2) / mag; // Math.min(Math.max(cosine, -1), 1) clamps the cosine between -1 and 1\n\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec2 to zero\n *\n * @param {vec2} out the receiving vector\n * @returns {vec2} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec2} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec2(\" + a[0] + \", \" + a[1] + \")\";\n}\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n/**\n * Alias for {@link vec2.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec2.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec2.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec2.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec2.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec2.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec2.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\n/**\n * 4 Dimensional Vector\n * @module vec4\n */\n\n/**\n * Creates a new, empty vec4\n *\n * @returns {vec4} a new 4D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {ReadonlyVec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\n\nexport function fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the source vector\n * @returns {vec4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\n\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\n * Multiplies two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\n * Divides two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\n * Math.ceil the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to ceil\n * @returns {vec4} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\n * Math.floor the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to floor\n * @returns {vec4} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\n * Returns the minimum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\n * Returns the maximum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\n * Math.round the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to round\n * @returns {vec4} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\n * Adds two vec4's after scaling the second operand by a scalar value\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec4} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\n * Calculates the squared euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\n * Calculates the length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\n * Calculates the squared length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\n * Negates the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to negate\n * @returns {vec4} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to invert\n * @returns {vec4} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to normalize\n * @returns {vec4} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\n * Returns the cross-product of three vectors in a 4-dimensional space\n *\n * @param {ReadonlyVec4} result the receiving vector\n * @param {ReadonlyVec4} U the first vector\n * @param {ReadonlyVec4} V the second vector\n * @param {ReadonlyVec4} W the third vector\n * @returns {vec4} result\n */\n\nexport function cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec4} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec4} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec4} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec4} out\n */\n\nexport function transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set the components of a vec4 to zero\n *\n * @param {vec4} out the receiving vector\n * @returns {vec4} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec4} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\n * Alias for {@link vec4.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec4.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec4.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec4.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec4.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec4.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec4s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();","// Copyright (c) 2017 Uber Technologies, Inc.\n// MIT License\nimport Matrix from './base/matrix';\nimport {NumericArray} from '@math.gl/types';\nimport {checkVector} from '../lib/validators';\n\n/* eslint-disable camelcase */\nimport {vec2_transformMat4AsVector, vec3_transformMat4AsVector} from '../lib/gl-matrix-extras';\nimport * as mat4 from 'gl-matrix/mat4';\nimport * as vec2 from 'gl-matrix/vec2';\nimport * as vec3 from 'gl-matrix/vec3';\nimport * as vec4 from 'gl-matrix/vec4';\n\nenum INDICES {\n  COL0ROW0 = 0,\n  COL0ROW1 = 1,\n  COL0ROW2 = 2,\n  COL0ROW3 = 3,\n  COL1ROW0 = 4,\n  COL1ROW1 = 5,\n  COL1ROW2 = 6,\n  COL1ROW3 = 7,\n  COL2ROW0 = 8,\n  COL2ROW1 = 9,\n  COL2ROW2 = 10,\n  COL2ROW3 = 11,\n  COL3ROW0 = 12,\n  COL3ROW1 = 13,\n  COL3ROW2 = 14,\n  COL3ROW3 = 15\n}\n\nconst DEFAULT_FOVY = (45 * Math.PI) / 180;\nconst DEFAULT_ASPECT = 1;\nconst DEFAULT_NEAR = 0.1;\nconst DEFAULT_FAR = 500;\n\nconst IDENTITY_MATRIX = Object.freeze([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);\n\n/** 4x4 matrix */\nexport default class Matrix4 extends Matrix {\n  static get IDENTITY(): Readonly<Matrix4> {\n    return getIdentityMatrix();\n  }\n\n  static get ZERO(): Readonly<Matrix4> {\n    return getZeroMatrix();\n  }\n\n  get ELEMENTS(): number {\n    return 16;\n  }\n\n  get RANK(): number {\n    return 4;\n  }\n\n  get INDICES(): typeof INDICES {\n    return INDICES;\n  }\n\n  constructor(array?: Readonly<NumericArray>) {\n    // PERF NOTE: initialize elements as double precision numbers\n    super(-0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0);\n    if (arguments.length === 1 && Array.isArray(array)) {\n      this.copy(array);\n    } else {\n      this.identity();\n    }\n  }\n\n  copy(array: Readonly<NumericArray>): this {\n    this[0] = array[0];\n    this[1] = array[1];\n    this[2] = array[2];\n    this[3] = array[3];\n    this[4] = array[4];\n    this[5] = array[5];\n    this[6] = array[6];\n    this[7] = array[7];\n    this[8] = array[8];\n    this[9] = array[9];\n    this[10] = array[10];\n    this[11] = array[11];\n    this[12] = array[12];\n    this[13] = array[13];\n    this[14] = array[14];\n    this[15] = array[15];\n    return this.check();\n  }\n\n  // eslint-disable-next-line max-params\n  set(\n    m00: number,\n    m10: number,\n    m20: number,\n    m30: number,\n    m01: number,\n    m11: number,\n    m21: number,\n    m31: number,\n    m02: number,\n    m12: number,\n    m22: number,\n    m32: number,\n    m03: number,\n    m13: number,\n    m23: number,\n    m33: number\n  ): this {\n    this[0] = m00;\n    this[1] = m10;\n    this[2] = m20;\n    this[3] = m30;\n    this[4] = m01;\n    this[5] = m11;\n    this[6] = m21;\n    this[7] = m31;\n    this[8] = m02;\n    this[9] = m12;\n    this[10] = m22;\n    this[11] = m32;\n    this[12] = m03;\n    this[13] = m13;\n    this[14] = m23;\n    this[15] = m33;\n    return this.check();\n  }\n\n  // accepts row major order, stores as column major\n  // eslint-disable-next-line max-params\n  setRowMajor(\n    m00: number,\n    m01: number,\n    m02: number,\n    m03: number,\n    m10: number,\n    m11: number,\n    m12: number,\n    m13: number,\n    m20: number,\n    m21: number,\n    m22: number,\n    m23: number,\n    m30: number,\n    m31: number,\n    m32: number,\n    m33: number\n  ): this {\n    this[0] = m00;\n    this[1] = m10;\n    this[2] = m20;\n    this[3] = m30;\n    this[4] = m01;\n    this[5] = m11;\n    this[6] = m21;\n    this[7] = m31;\n    this[8] = m02;\n    this[9] = m12;\n    this[10] = m22;\n    this[11] = m32;\n    this[12] = m03;\n    this[13] = m13;\n    this[14] = m23;\n    this[15] = m33;\n    return this.check();\n  }\n\n  toRowMajor(result: NumericArray): NumericArray {\n    result[0] = this[0];\n    result[1] = this[4];\n    result[2] = this[8];\n    result[3] = this[12];\n    result[4] = this[1];\n    result[5] = this[5];\n    result[6] = this[9];\n    result[7] = this[13];\n    result[8] = this[2];\n    result[9] = this[6];\n    result[10] = this[10];\n    result[11] = this[14];\n    result[12] = this[3];\n    result[13] = this[7];\n    result[14] = this[11];\n    result[15] = this[15];\n    return result;\n  }\n\n  // Constructors\n\n  /** Set to identity matrix */\n  identity(): this {\n    return this.copy(IDENTITY_MATRIX);\n  }\n\n  /**\n   *\n   * @param object\n   * @returns self\n   */\n  fromObject(object: {[key: string]: any}): this {\n    return this.check();\n  }\n\n  /**\n   * Calculates a 4x4 matrix from the given quaternion\n   * @param quaternion Quaternion to create matrix from\n   * @returns self\n   */\n  fromQuaternion(quaternion: Readonly<NumericArray>): this {\n    mat4.fromQuat(this, quaternion);\n    return this.check();\n  }\n\n  /**\n   * Generates a frustum matrix with the given bounds\n   * @param view.left - Left bound of the frustum\n   * @param view.right - Right bound of the frustum\n   * @param view.bottom - Bottom bound of the frustum\n   * @param view.top - Top bound of the frustum\n   * @param view.near - Near bound of the frustum\n   * @param view.far - Far bound of the frustum. Can be set to Infinity.\n   * @returns self\n   */\n  frustum(view: {\n    left: number;\n    right: number;\n    bottom: number;\n    top: number;\n    near: number;\n    far?: number;\n  }): this {\n    const {left, right, bottom, top, near = DEFAULT_NEAR, far = DEFAULT_FAR} = view;\n    if (far === Infinity) {\n      computeInfinitePerspectiveOffCenter(this, left, right, bottom, top, near);\n    } else {\n      mat4.frustum(this, left, right, bottom, top, near, far);\n    }\n    return this.check();\n  }\n\n  /**\n   * Generates a look-at matrix with the given eye position, focal point,\n   * and up axis\n   * @param view.eye - (vector) Position of the viewer\n   * @param view.center - (vector) Point the viewer is looking at\n   * @param view.up - (vector) Up axis\n   * @returns self\n   */\n  lookAt(view: {\n    eye: Readonly<NumericArray>;\n    center?: Readonly<NumericArray>;\n    up?: Readonly<NumericArray>;\n  }): this {\n    const {eye, center = [0, 0, 0], up = [0, 1, 0]} = view;\n    mat4.lookAt(this, eye, center, up);\n    return this.check();\n  }\n\n  /**\n   * Generates a orthogonal projection matrix with the given bounds\n   * from \"traditional\" view space parameters\n   * @param view.left - Left bound of the frustum\n   * @param view.right number  Right bound of the frustum\n   * @param view.bottom - Bottom bound of the frustum\n   * @param view.top number  Top bound of the frustum\n   * @param view.near - Near bound of the frustum\n   * @param view.far number  Far bound of the frustum\n   * @returns self\n   */\n  ortho(view: {\n    left: number;\n    right: number;\n    bottom: number;\n    top: number;\n    near?: number;\n    far?: number;\n  }): this {\n    const {left, right, bottom, top, near = DEFAULT_NEAR, far = DEFAULT_FAR} = view;\n    mat4.ortho(this, left, right, bottom, top, near, far);\n    return this.check();\n  }\n\n  /**\n   * Generates an orthogonal projection matrix with the same parameters\n   * as a perspective matrix (plus focalDistance)\n   * @param view.fovy Vertical field of view in radians\n   * @param view.aspect Aspect ratio. Typically viewport width / viewport height\n   * @param view.focalDistance Distance in the view frustum used for extent calculations\n   * @param view.near Near bound of the frustum\n   * @param view.far Far bound of the frustum\n   * @returns self\n   */\n  orthographic(view: {\n    fovy?: number;\n    aspect?: number;\n    focalDistance?: number;\n    near?: number;\n    far?: number;\n  }): this {\n    const {\n      fovy = DEFAULT_FOVY,\n      aspect = DEFAULT_ASPECT,\n      focalDistance = 1,\n      near = DEFAULT_NEAR,\n      far = DEFAULT_FAR\n    } = view;\n\n    checkRadians(fovy);\n\n    const halfY = fovy / 2;\n    const top = focalDistance * Math.tan(halfY); // focus_plane is the distance from the camera\n    const right = top * aspect;\n\n    return this.ortho({\n      left: -right,\n      right,\n      bottom: -top,\n      top,\n      near,\n      far\n    });\n  }\n\n  /**\n   * Generates a perspective projection matrix with the given bounds\n   * @param view.fovy Vertical field of view in radians\n   * @param view.aspect Aspect ratio. typically viewport width/height\n   * @param view.near Near bound of the frustum\n   * @param view.far Far bound of the frustum\n   * @returns self\n   */\n  perspective(view: {fovy: number; aspect?: number; near?: number; far?: number}): this {\n    const {fovy = (45 * Math.PI) / 180, aspect = 1, near = 0.1, far = 500} = view;\n    checkRadians(fovy);\n    mat4.perspective(this, fovy, aspect, near, far);\n    return this.check();\n  }\n\n  // Accessors\n\n  determinant(): number {\n    return mat4.determinant(this);\n  }\n\n  /**\n   * Extracts the non-uniform scale assuming the matrix is an affine transformation.\n   * The scales are the \"lengths\" of the column vectors in the upper-left 3x3 matrix.\n   * @param result\n   * @returns self\n   */\n  getScale(result: NumericArray = [-0, -0, -0]): NumericArray {\n    // explicit is faster than hypot...\n    result[0] = Math.sqrt(this[0] * this[0] + this[1] * this[1] + this[2] * this[2]);\n    result[1] = Math.sqrt(this[4] * this[4] + this[5] * this[5] + this[6] * this[6]);\n    result[2] = Math.sqrt(this[8] * this[8] + this[9] * this[9] + this[10] * this[10]);\n    // result[0] = Math.hypot(this[0], this[1], this[2]);\n    // result[1] = Math.hypot(this[4], this[5], this[6]);\n    // result[2] = Math.hypot(this[8], this[9], this[10]);\n    return result;\n  }\n\n  /**\n   * Gets the translation portion, assuming the matrix is a affine transformation matrix.\n   * @param result\n   * @returns self\n   */\n  getTranslation(result: NumericArray = [-0, -0, -0]): NumericArray {\n    result[0] = this[12];\n    result[1] = this[13];\n    result[2] = this[14];\n    return result;\n  }\n\n  /**\n   * Gets upper left 3x3 pure rotation matrix (non-scaling), assume affine transformation matrix\n   * @param result\n   * @param scaleResult\n   * @returns self\n   */\n  getRotation(result?: NumericArray, scaleResult?: NumericArray): NumericArray {\n    result = result || [-0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0];\n    scaleResult = scaleResult || [-0, -0, -0];\n    const scale = this.getScale(scaleResult);\n    const inverseScale0 = 1 / scale[0];\n    const inverseScale1 = 1 / scale[1];\n    const inverseScale2 = 1 / scale[2];\n    result[0] = this[0] * inverseScale0;\n    result[1] = this[1] * inverseScale1;\n    result[2] = this[2] * inverseScale2;\n    result[3] = 0;\n    result[4] = this[4] * inverseScale0;\n    result[5] = this[5] * inverseScale1;\n    result[6] = this[6] * inverseScale2;\n    result[7] = 0;\n    result[8] = this[8] * inverseScale0;\n    result[9] = this[9] * inverseScale1;\n    result[10] = this[10] * inverseScale2;\n    result[11] = 0;\n    result[12] = 0;\n    result[13] = 0;\n    result[14] = 0;\n    result[15] = 1;\n    return result;\n  }\n\n  /**\n   *\n   * @param result\n   * @param scaleResult\n   * @returns self\n   */\n  getRotationMatrix3(result?: NumericArray, scaleResult?: NumericArray): NumericArray {\n    result = result || [-0, -0, -0, -0, -0, -0, -0, -0, -0];\n    scaleResult = scaleResult || [-0, -0, -0];\n    const scale = this.getScale(scaleResult);\n    const inverseScale0 = 1 / scale[0];\n    const inverseScale1 = 1 / scale[1];\n    const inverseScale2 = 1 / scale[2];\n    result[0] = this[0] * inverseScale0;\n    result[1] = this[1] * inverseScale1;\n    result[2] = this[2] * inverseScale2;\n    result[3] = this[4] * inverseScale0;\n    result[4] = this[5] * inverseScale1;\n    result[5] = this[6] * inverseScale2;\n    result[6] = this[8] * inverseScale0;\n    result[7] = this[9] * inverseScale1;\n    result[8] = this[10] * inverseScale2;\n    return result;\n  }\n\n  // Modifiers\n\n  transpose(): this {\n    mat4.transpose(this, this);\n    return this.check();\n  }\n\n  invert(): this {\n    mat4.invert(this, this);\n    return this.check();\n  }\n\n  // Operations\n\n  multiplyLeft(a: Readonly<NumericArray>): this {\n    mat4.multiply(this, a, this);\n    return this.check();\n  }\n\n  multiplyRight(a: Readonly<NumericArray>): this {\n    mat4.multiply(this, this, a);\n    return this.check();\n  }\n\n  // Rotates a matrix by the given angle around the X axis\n  rotateX(radians: number): this {\n    mat4.rotateX(this, this, radians);\n    // mat4.rotate(this, this, radians, [1, 0, 0]);\n    return this.check();\n  }\n\n  // Rotates a matrix by the given angle around the Y axis.\n  rotateY(radians: number): this {\n    mat4.rotateY(this, this, radians);\n    // mat4.rotate(this, this, radians, [0, 1, 0]);\n    return this.check();\n  }\n\n  /**\n   * Rotates a matrix by the given angle around the Z axis.\n   * @param radians\n   * @returns self\n   */\n  rotateZ(radians: number): this {\n    mat4.rotateZ(this, this, radians);\n    // mat4.rotate(this, this, radians, [0, 0, 1]);\n    return this.check();\n  }\n\n  /**\n   *\n   * @param param0\n   * @returns self\n   */\n  rotateXYZ(angleXYZ: Readonly<NumericArray>): this {\n    return this.rotateX(angleXYZ[0]).rotateY(angleXYZ[1]).rotateZ(angleXYZ[2]);\n  }\n\n  /**\n   *\n   * @param radians\n   * @param axis\n   * @returns self\n   */\n  rotateAxis(radians: number, axis: Readonly<NumericArray>): this {\n    mat4.rotate(this, this, radians, axis);\n    return this.check();\n  }\n\n  /**\n   *\n   * @param factor\n   * @returns self\n   */\n  scale(factor: number | Readonly<NumericArray>): this {\n    mat4.scale(this, this, Array.isArray(factor) ? factor : [factor, factor, factor]);\n    return this.check();\n  }\n\n  /**\n   *\n   * @param vec\n   * @returns self\n   */\n  translate(vector: Readonly<NumericArray>): this {\n    mat4.translate(this, this, vector);\n    return this.check();\n  }\n\n  // Transforms\n\n  /**\n   * Transforms any 2, 3 or 4 element vector. 2 and 3 elements are treated as points\n   * @param vector\n   * @param result\n   * @returns self\n   */\n  transform(vector: Readonly<NumericArray>, result?: NumericArray): NumericArray {\n    if (vector.length === 4) {\n      result = vec4.transformMat4(result || [-0, -0, -0, -0], vector, this);\n      checkVector(result, 4);\n      return result;\n    }\n    return this.transformAsPoint(vector, result);\n  }\n\n  /**\n   * Transforms any 2 or 3 element array as point (w implicitly 1)\n   * @param vector\n   * @param result\n   * @returns self\n   */\n  transformAsPoint(vector: Readonly<NumericArray>, result?: NumericArray): NumericArray {\n    const {length} = vector;\n    let out: NumericArray;\n    switch (length) {\n      case 2:\n        out = vec2.transformMat4(result || [-0, -0], vector, this);\n        break;\n      case 3:\n        out = vec3.transformMat4(result || [-0, -0, -0], vector, this);\n        break;\n      default:\n        throw new Error('Illegal vector');\n    }\n    checkVector(out, vector.length);\n    return out;\n  }\n\n  /**\n   * Transforms any 2 or 3 element array as vector (w implicitly 0)\n   * @param vector\n   * @param result\n   * @returns self\n   */\n  transformAsVector(vector: Readonly<NumericArray>, result?: NumericArray): NumericArray {\n    let out: NumericArray;\n    switch (vector.length) {\n      case 2:\n        out = vec2_transformMat4AsVector(result || [-0, -0], vector, this);\n        break;\n      case 3:\n        out = vec3_transformMat4AsVector(result || [-0, -0, -0], vector, this);\n        break;\n      default:\n        throw new Error('Illegal vector');\n    }\n    checkVector(out, vector.length);\n    return out;\n  }\n\n  /** @deprecated */\n  transformPoint(vector: Readonly<NumericArray>, result?: NumericArray): NumericArray {\n    return this.transformAsPoint(vector, result);\n  }\n\n  /** @deprecated */\n  transformVector(vector: Readonly<NumericArray>, result?: NumericArray): NumericArray {\n    return this.transformAsPoint(vector, result);\n  }\n\n  /** @deprecated */\n  transformDirection(vector: Readonly<NumericArray>, result?: NumericArray): NumericArray {\n    return this.transformAsVector(vector, result);\n  }\n\n  // three.js math API compatibility\n\n  makeRotationX(radians: number): this {\n    return this.identity().rotateX(radians);\n  }\n\n  makeTranslation(x: number, y: number, z: number): this {\n    return this.identity().translate([x, y, z]);\n  }\n}\n\n// TODO initializing static members directly is an option, but make sure no tree-shaking issues\nlet ZERO: Matrix4;\nlet IDENTITY: Matrix4;\n\nfunction getZeroMatrix(): Readonly<Matrix4> {\n  if (!ZERO) {\n    ZERO = new Matrix4([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n    Object.freeze(ZERO);\n  }\n  return ZERO;\n}\n\nfunction getIdentityMatrix(): Matrix4 {\n  if (!IDENTITY) {\n    IDENTITY = new Matrix4();\n    Object.freeze(IDENTITY);\n  }\n  return IDENTITY;\n}\n\n// HELPER FUNCTIONS\n\nfunction checkRadians(possiblyDegrees: number) {\n  if (possiblyDegrees > Math.PI * 2) {\n    throw Error('expected radians');\n  }\n}\n\n// eslint-disable-next-line max-params\nfunction computeInfinitePerspectiveOffCenter(\n  result: NumericArray,\n  left: number,\n  right: number,\n  bottom: number,\n  top: number,\n  near: number\n): NumericArray {\n  const column0Row0 = (2 * near) / (right - left);\n  const column1Row1 = (2 * near) / (top - bottom);\n  const column2Row0 = (right + left) / (right - left);\n  const column2Row1 = (top + bottom) / (top - bottom);\n  const column2Row2 = -1;\n  const column2Row3 = -1;\n  const column3Row2 = -2 * near;\n  result[0] = column0Row0;\n  result[1] = 0;\n  result[2] = 0;\n  result[3] = 0;\n  result[4] = 0;\n  result[5] = column1Row1;\n  result[6] = 0;\n  result[7] = 0;\n  result[8] = column2Row0;\n  result[9] = column2Row1;\n  result[10] = column2Row2;\n  result[11] = column2Row3;\n  result[12] = 0;\n  result[13] = 0;\n  result[14] = column3Row2;\n  result[15] = 0;\n  return result;\n}\n","import {Vector3} from '@math.gl/core';\nimport type Layer from '../../lib/layer';\n\nconst DEFAULT_LIGHT_COLOR = [255, 255, 255];\nconst DEFAULT_LIGHT_INTENSITY = 1.0;\nconst DEFAULT_LIGHT_DIRECTION = [0.0, 0.0, -1.0];\n\nlet idCount = 0;\n\nexport type DirectionalLightOptions = {\n  id?: string;\n  /** Light color, [r, g, b] in the 0-255 range\n   * @default [255, 255, 255]\n   */\n  color?: number[];\n  /** Light intensity, higher number is brighter\n   * @default 1.0\n   */\n  intensity?: number;\n  /** Light direction in the common space\n   * @default [0.0, 0.0, -1.0]\n   */\n  direction?: number[];\n  /** (Experimental) render shadows cast by this light\n   * @default false\n   */\n  _shadow?: boolean;\n};\n\nexport class DirectionalLight {\n  id: string;\n  color: number[];\n  intensity: number;\n  type = 'directional';\n  direction: number[];\n  shadow: boolean;\n\n  constructor(props: DirectionalLightOptions = {}) {\n    const {color = DEFAULT_LIGHT_COLOR} = props;\n    const {intensity = DEFAULT_LIGHT_INTENSITY} = props;\n    const {direction = DEFAULT_LIGHT_DIRECTION} = props;\n    const {_shadow = false} = props;\n\n    this.id = props.id || `directional-${idCount++}`;\n    this.color = color;\n    this.intensity = intensity;\n    this.type = 'directional';\n    this.direction = new Vector3(direction).normalize().toArray() as [number, number, number];\n    this.shadow = _shadow;\n  }\n\n  getProjectedLight(opts: {layer: Layer}): DirectionalLight {\n    return this;\n  }\n}\n","import {\n  CompositeLayer,\n  CompositeLayerProps,\n  Layer,\n  LayerProps,\n  UpdateParameters,\n  PickingInfo,\n  GetPickingInfoParams,\n  DefaultProps,\n  FilterContext,\n  _flatten as flatten\n} from '@deck.gl/core';\nimport {GeoJsonLayer} from '@deck.gl/layers';\nimport {LayersList} from '@deck.gl/core';\n\nimport type {TileLoadProps, ZRange} from '../tileset-2d';\nimport {\n  Tileset2D,\n  Tile2DHeader,\n  RefinementStrategy,\n  STRATEGY_DEFAULT,\n  Tileset2DProps\n} from '../tileset-2d';\nimport {urlType, URLTemplate, getURLFromTemplate} from '../tileset-2d';\n\nconst defaultProps: DefaultProps<TileLayerProps> = {\n  TilesetClass: Tileset2D,\n  data: {type: 'data', value: []},\n  dataComparator: urlType.equal,\n  renderSubLayers: {type: 'function', value: props => new GeoJsonLayer(props)},\n  getTileData: {type: 'function', optional: true, value: null},\n  // TODO - change to onViewportLoad to align with Tile3DLayer\n  onViewportLoad: {type: 'function', optional: true, value: null},\n  onTileLoad: {type: 'function', value: tile => {}},\n  onTileUnload: {type: 'function', value: tile => {}},\n  // eslint-disable-next-line\n  onTileError: {type: 'function', value: err => console.error(err)},\n  extent: {type: 'array', optional: true, value: null, compare: true},\n  tileSize: 512,\n  maxZoom: null,\n  minZoom: 0,\n  maxCacheSize: null,\n  maxCacheByteSize: null,\n  refinementStrategy: STRATEGY_DEFAULT,\n  zRange: null,\n  maxRequests: 6,\n  zoomOffset: 0\n};\n\n/** All props supported by the TileLayer */\nexport type TileLayerProps<DataT = any> = CompositeLayerProps & _TileLayerProps<DataT>;\n\n/** Props added by the TileLayer */\ntype _TileLayerProps<DataT> = {\n  data: URLTemplate;\n  /**\n   * Optionally implement a custom indexing scheme.\n   */\n  TilesetClass?: typeof Tileset2D;\n  /**\n   * Renders one or an array of Layer instances.\n   */\n  renderSubLayers?: (\n    props: TileLayerProps<DataT> & {\n      id: string;\n      data: DataT;\n      _offset: number;\n      tile: Tile2DHeader<DataT>;\n    }\n  ) => Layer | null | LayersList;\n  /**\n   * If supplied, `getTileData` is called to retrieve the data of each tile.\n   */\n  getTileData?: ((props: TileLoadProps) => Promise<DataT> | DataT) | null;\n\n  /** Called when all tiles in the current viewport are loaded. */\n  onViewportLoad?: ((tiles: Tile2DHeader<DataT>[]) => void) | null;\n\n  /** Called when a tile successfully loads. */\n  onTileLoad?: (tile: Tile2DHeader<DataT>) => void;\n\n  /** Called when a tile is cleared from cache. */\n  onTileUnload?: (tile: Tile2DHeader<DataT>) => void;\n\n  /** Called when a tile failed to load. */\n  onTileError?: (err: any, tile?) => void;\n\n  /** The bounding box of the layer's data. */\n  extent?: number[] | null;\n\n  /** The pixel dimension of the tiles, usually a power of 2. */\n  tileSize?: number;\n\n  /** The max zoom level of the layer's data.\n   * @default null\n   */\n  maxZoom?: number | null;\n\n  /** The min zoom level of the layer's data.\n   * @default 0\n   */\n  minZoom?: number | null;\n\n  /** The maximum number of tiles that can be cached. */\n  maxCacheSize?: number | null;\n\n  /**\n   * The maximum memory used for caching tiles.\n   *\n   * @default null\n   */\n  maxCacheByteSize?: number | null;\n\n  /**\n   * How the tile layer refines the visibility of tiles.\n   *\n   * @default 'best-available'\n   */\n  refinementStrategy?: RefinementStrategy;\n\n  /** Range of minimum and maximum heights in the tile. */\n  zRange?: ZRange | null;\n\n  /**\n   * The maximum number of concurrent getTileData calls.\n   *\n   * @default 6\n   */\n  maxRequests?: number;\n\n  /**\n   * This offset changes the zoom level at which the tiles are fetched.\n   *\n   * Needs to be an integer.\n   *\n   * @default 0\n   */\n  zoomOffset?: number;\n};\n\nexport type TiledPickingInfo<DataT = any> = PickingInfo & {\n  tile?: Tile2DHeader<DataT>;\n};\n\n/**\n * The TileLayer is a composite layer that makes it possible to visualize very large datasets.\n *\n * Instead of fetching the entire dataset, it only loads and renders what's visible in the current viewport.\n */\nexport default class TileLayer<DataT = any, ExtraPropsT extends {} = {}> extends CompositeLayer<\n  ExtraPropsT & Required<_TileLayerProps<DataT>>\n> {\n  static defaultProps: DefaultProps = defaultProps;\n  static layerName = 'TileLayer';\n\n  initializeState() {\n    this.state = {\n      tileset: null,\n      isLoaded: false\n    };\n  }\n\n  finalizeState() {\n    this.state?.tileset?.finalize();\n  }\n\n  get isLoaded(): boolean {\n    return this.state?.tileset?.selectedTiles?.every(\n      tile => tile.isLoaded && tile.layers && tile.layers.every(layer => layer.isLoaded)\n    );\n  }\n\n  shouldUpdateState({changeFlags}): boolean {\n    return changeFlags.somethingChanged;\n  }\n\n  updateState({changeFlags}: UpdateParameters<this>) {\n    let {tileset} = this.state;\n    const propsChanged = changeFlags.propsOrDataChanged || changeFlags.updateTriggersChanged;\n    const dataChanged =\n      changeFlags.dataChanged ||\n      (changeFlags.updateTriggersChanged &&\n        (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getTileData));\n\n    if (!tileset) {\n      tileset = new this.props.TilesetClass(this._getTilesetOptions());\n      this.setState({tileset});\n    } else if (propsChanged) {\n      tileset.setOptions(this._getTilesetOptions());\n\n      if (dataChanged) {\n        // reload all tiles\n        // use cached layers until new content is loaded\n        tileset.reloadAll();\n      } else {\n        // some render options changed, regenerate sub layers now\n        this.state.tileset.tiles.forEach(tile => {\n          tile.layers = null;\n        });\n      }\n    }\n\n    this._updateTileset();\n  }\n\n  _getTilesetOptions(): Tileset2DProps {\n    const {\n      tileSize,\n      maxCacheSize,\n      maxCacheByteSize,\n      refinementStrategy,\n      extent,\n      maxZoom,\n      minZoom,\n      maxRequests,\n      zoomOffset\n    } = this.props;\n\n    return {\n      maxCacheSize,\n      maxCacheByteSize,\n      maxZoom,\n      minZoom,\n      tileSize,\n      refinementStrategy,\n      extent,\n      maxRequests,\n      zoomOffset,\n\n      getTileData: this.getTileData.bind(this),\n      onTileLoad: this._onTileLoad.bind(this),\n      onTileError: this._onTileError.bind(this),\n      onTileUnload: this._onTileUnload.bind(this)\n    };\n  }\n\n  private _updateTileset(): void {\n    const {tileset} = this.state;\n    const {zRange, modelMatrix} = this.props;\n    const frameNumber = tileset.update(this.context.viewport, {zRange, modelMatrix});\n    const {isLoaded} = tileset;\n\n    const loadingStateChanged = this.state.isLoaded !== isLoaded;\n    const tilesetChanged = this.state.frameNumber !== frameNumber;\n\n    if (isLoaded && (loadingStateChanged || tilesetChanged)) {\n      this._onViewportLoad();\n    }\n\n    if (tilesetChanged) {\n      // Save the tileset frame number - trigger a rerender\n      this.setState({frameNumber});\n    }\n    // Save the loaded state - should not trigger a rerender\n    this.state.isLoaded = isLoaded;\n  }\n\n  _onViewportLoad(): void {\n    const {tileset} = this.state;\n    const {onViewportLoad} = this.props;\n\n    if (onViewportLoad) {\n      onViewportLoad(tileset.selectedTiles);\n    }\n  }\n\n  _onTileLoad(tile: Tile2DHeader<DataT>): void {\n    this.props.onTileLoad(tile);\n    tile.layers = null;\n\n    this.setNeedsUpdate();\n  }\n\n  _onTileError(error: any, tile: Tile2DHeader<DataT>) {\n    this.props.onTileError(error);\n    tile.layers = null;\n\n    this.setNeedsUpdate();\n  }\n\n  _onTileUnload(tile: Tile2DHeader<DataT>) {\n    this.props.onTileUnload(tile);\n  }\n\n  // Methods for subclass to override\n\n  getTileData(tile: TileLoadProps): Promise<DataT> | DataT | null {\n    const {data, getTileData, fetch} = this.props;\n    const {signal} = tile;\n\n    tile.url =\n      typeof data === 'string' || Array.isArray(data) ? getURLFromTemplate(data, tile) : null;\n\n    if (getTileData) {\n      return getTileData(tile);\n    }\n    if (fetch && tile.url) {\n      return fetch(tile.url, {propName: 'data', layer: this, signal});\n    }\n    return null;\n  }\n\n  renderSubLayers(\n    props: TileLayer['props'] & {\n      id: string;\n      data: DataT;\n      _offset: number;\n      tile: Tile2DHeader<DataT>;\n    }\n  ): Layer | null | LayersList {\n    return this.props.renderSubLayers(props);\n  }\n\n  getSubLayerPropsByTile(tile: Tile2DHeader): Partial<LayerProps> | null {\n    return null;\n  }\n\n  getPickingInfo({info, sourceLayer}: GetPickingInfoParams): TiledPickingInfo<DataT> {\n    const sourceTile = (sourceLayer as any).props.tile;\n    if (info.picked) {\n      (info as any).tile = sourceTile;\n    }\n    (info as any).sourceTile = sourceTile;\n    return info;\n  }\n\n  protected _updateAutoHighlight(info: PickingInfo): void {\n    const sourceTile = (info as any).sourceTile as Tile2DHeader;\n    if (sourceTile && sourceTile.layers) {\n      for (const layer of sourceTile.layers) {\n        layer.updateAutoHighlight(info);\n      }\n    }\n  }\n\n  renderLayers(): Layer | null | LayersList {\n    return this.state.tileset.tiles.map((tile: Tile2DHeader) => {\n      const subLayerProps = this.getSubLayerPropsByTile(tile);\n      // cache the rendered layer in the tile\n      if (!tile.isLoaded && !tile.content) {\n        // nothing to show\n      } else if (!tile.layers) {\n        const layers = this.renderSubLayers({\n          ...this.props,\n          ...this.getSubLayerProps({\n            id: tile.id,\n            updateTriggers: this.props.updateTriggers\n          }),\n          data: tile.content,\n          _offset: 0,\n          tile\n        });\n        tile.layers = (flatten(layers, Boolean) as Layer<{tile?: Tile2DHeader}>[]).map(layer =>\n          layer.clone({\n            tile,\n            ...subLayerProps\n          })\n        );\n      } else if (\n        subLayerProps &&\n        tile.layers[0] &&\n        Object.keys(subLayerProps).some(\n          propName => tile.layers![0].props[propName] !== subLayerProps[propName]\n        )\n      ) {\n        tile.layers = tile.layers.map(layer => layer.clone(subLayerProps));\n      }\n      return tile.layers;\n    });\n  }\n\n  filterSubLayer({layer, cullRect}: FilterContext) {\n    const {tile} = (layer as Layer<{tile: Tile2DHeader}>).props;\n    return this.state.tileset.isTileVisible(tile, cullRect);\n  }\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport {Tesselator} from '@deck.gl/core';\nimport {normalizePath} from './path';\n\nimport type {TypedArray} from '@math.gl/core';\nimport type {PathGeometry, FlatPathGeometry, NormalizedPathGeometry} from './path';\n\nconst START_CAP = 1;\nconst END_CAP = 2;\nconst INVALID = 4;\n\n// This class is set up to allow querying one attribute at a time\n// the way the AttributeManager expects it\nexport default class PathTesselator extends Tesselator<\n  PathGeometry,\n  NormalizedPathGeometry,\n  {\n    fp64?: boolean;\n    resolution?: number;\n    wrapLongitude?: boolean;\n    loop?: boolean;\n  }\n> {\n  constructor(opts) {\n    super({\n      ...opts,\n      attributes: {\n        // Padding covers shaderAttributes for last segment in largest case fp64\n        // additional vertex + hi & low parts, 3 * 6\n        positions: {\n          size: 3,\n          padding: 18,\n          initialize: true,\n          type: opts.fp64 ? Float64Array : Float32Array\n        },\n        segmentTypes: {size: 1, type: Uint8ClampedArray}\n      }\n    });\n  }\n\n  /** Get packed attribute by name */\n  get(attributeName: string): TypedArray | null {\n    return this.attributes[attributeName];\n  }\n\n  /* Implement base Tesselator interface */\n  protected getGeometryFromBuffer(buffer) {\n    if (this.normalize) {\n      return super.getGeometryFromBuffer(buffer);\n    }\n    // we don't need to read the positions if no normalization\n    return null;\n  }\n\n  /* Implement base Tesselator interface */\n  protected normalizeGeometry(path: PathGeometry): number[][] | PathGeometry {\n    if (this.normalize) {\n      return normalizePath(path, this.positionSize, this.opts.resolution, this.opts.wrapLongitude);\n    }\n    return path;\n  }\n\n  /* Implement base Tesselator interface */\n  protected getGeometrySize(path: NormalizedPathGeometry): number {\n    if (isCut(path)) {\n      let size = 0;\n      for (const subPath of path) {\n        size += this.getGeometrySize(subPath);\n      }\n      return size;\n    }\n    const numPoints = this.getPathLength(path);\n    if (numPoints < 2) {\n      // invalid path\n      return 0;\n    }\n    if (this.isClosed(path)) {\n      // minimum 3 vertices\n      return numPoints < 3 ? 0 : numPoints + 2;\n    }\n    return numPoints;\n  }\n\n  /* Implement base Tesselator interface */\n  protected updateGeometryAttributes(\n    path: NormalizedPathGeometry | null,\n    context: {\n      vertexStart: number;\n      geometrySize: number;\n    }\n  ): void {\n    if (context.geometrySize === 0) {\n      return;\n    }\n    if (path && isCut(path)) {\n      for (const subPath of path) {\n        const geometrySize = this.getGeometrySize(subPath);\n        context.geometrySize = geometrySize;\n        this.updateGeometryAttributes(subPath, context);\n        context.vertexStart += geometrySize;\n      }\n    } else {\n      this._updateSegmentTypes(path, context);\n      this._updatePositions(path, context);\n    }\n  }\n\n  private _updateSegmentTypes(\n    path: FlatPathGeometry | null,\n    context: {\n      vertexStart: number;\n      geometrySize: number;\n    }\n  ) {\n    const segmentTypes = this.attributes.segmentTypes as TypedArray;\n    const isPathClosed = path ? this.isClosed(path) : false;\n    const {vertexStart, geometrySize} = context;\n\n    // positions   --  A0 A1 B0 B1 B2 B3 B0 B1 B2 --\n    // segmentTypes     3  4  4  0  0  0  0  4  4\n    segmentTypes.fill(0, vertexStart, vertexStart + geometrySize);\n    if (isPathClosed) {\n      segmentTypes[vertexStart] = INVALID;\n      segmentTypes[vertexStart + geometrySize - 2] = INVALID;\n    } else {\n      segmentTypes[vertexStart] += START_CAP;\n      segmentTypes[vertexStart + geometrySize - 2] += END_CAP;\n    }\n    segmentTypes[vertexStart + geometrySize - 1] = INVALID;\n  }\n\n  private _updatePositions(\n    path: FlatPathGeometry | null,\n    context: {\n      vertexStart: number;\n      geometrySize: number;\n    }\n  ) {\n    const {positions} = this.attributes;\n    if (!positions || !path) {\n      return;\n    }\n    const {vertexStart, geometrySize} = context;\n    const p = new Array(3);\n\n    // positions   --  A0 A1 B0 B1 B2 B3 B0 B1 B2 --\n    // segmentTypes     3  4  4  0  0  0  0  4  4\n    for (let i = vertexStart, ptIndex = 0; ptIndex < geometrySize; i++, ptIndex++) {\n      this.getPointOnPath(path, ptIndex, p);\n      positions[i * 3] = p[0];\n      positions[i * 3 + 1] = p[1];\n      positions[i * 3 + 2] = p[2];\n    }\n  }\n\n  // Utilities\n  /** Returns the number of points in the path */\n  private getPathLength(path: FlatPathGeometry): number {\n    return path.length / this.positionSize;\n  }\n\n  /** Returns a point on the path at the specified index */\n  private getPointOnPath(path: FlatPathGeometry, index: number, target: number[] = []): number[] {\n    const {positionSize} = this;\n    if (index * positionSize >= path.length) {\n      // loop\n      index += 1 - path.length / positionSize;\n    }\n    const i = index * positionSize;\n    target[0] = path[i];\n    target[1] = path[i + 1];\n    target[2] = (positionSize === 3 && path[i + 2]) || 0;\n    return target;\n  }\n\n  // Returns true if the first and last points are identical\n  private isClosed(path: FlatPathGeometry): boolean {\n    if (!this.normalize) {\n      return Boolean(this.opts.loop);\n    }\n    const {positionSize} = this;\n    const lastPointIndex = path.length - positionSize;\n    return (\n      path[0] === path[lastPointIndex] &&\n      path[1] === path[lastPointIndex + 1] &&\n      (positionSize === 2 || path[2] === path[lastPointIndex + 2])\n    );\n  }\n}\n\nfunction isCut(path: NormalizedPathGeometry): path is FlatPathGeometry[] {\n  return Array.isArray(path[0]);\n}\n","import {cutPolylineByGrid, cutPolylineByMercatorBounds} from '@math.gl/polygon';\n\nimport type {NumericArray} from '@math.gl/core';\nimport type {Position} from '@deck.gl/core';\n\nexport type NestedPathGeometry = Position[];\nexport type FlatPathGeometry = NumericArray;\nexport type PathGeometry = NestedPathGeometry | FlatPathGeometry;\nexport type NormalizedPathGeometry = FlatPathGeometry[] | FlatPathGeometry;\n\n/**\n * Flattens a nested path object\n * Cut the feature if needed (globe projection, wrap longitude, etc.)\n * Returns a flat array of path positions, or a list of flat arrays representing multiple paths\n */\nexport function normalizePath(\n  path: PathGeometry,\n  size: number,\n  gridResolution?: number,\n  wrapLongitude?: boolean\n): number[][] | NumericArray {\n  let flatPath: NumericArray;\n  if (Array.isArray(path[0])) {\n    const length = path.length * size;\n    flatPath = new Array(length);\n    for (let i = 0; i < path.length; i++) {\n      for (let j = 0; j < size; j++) {\n        flatPath[i * size + j] = path[i][j] || 0;\n      }\n    }\n  } else {\n    flatPath = path as NumericArray;\n  }\n  if (gridResolution) {\n    return cutPolylineByGrid(flatPath, {size, gridResolution});\n  }\n  if (wrapLongitude) {\n    return cutPolylineByMercatorBounds(flatPath, {size});\n  }\n  return flatPath;\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {Layer, project32, picking, UNIT} from '@deck.gl/core';\nimport GL from '@luma.gl/constants';\nimport {Model, Geometry} from '@luma.gl/core';\nimport PathTesselator from './path-tesselator';\n\nimport vs from './path-layer-vertex.glsl';\nimport fs from './path-layer-fragment.glsl';\n\nimport type {\n  LayerProps,\n  LayerDataSource,\n  Color,\n  Accessor,\n  AccessorFunction,\n  Unit,\n  UpdateParameters,\n  GetPickingInfoParams,\n  PickingInfo,\n  DefaultProps\n} from '@deck.gl/core';\nimport type {PathGeometry} from './path';\n\ntype _PathLayerProps<DataT> = {\n  data: LayerDataSource<DataT>;\n  /** The units of the line width, one of `'meters'`, `'common'`, and `'pixels'`\n   * @default 'meters'\n   */\n  widthUnits?: Unit;\n  /**\n   * Path width multiplier.\n   * @default 1\n   */\n  widthScale?: number;\n  /**\n   * The minimum path width in pixels. This prop can be used to prevent the path from getting too thin when zoomed out.\n   * @default 0\n   */\n  widthMinPixels?: number;\n  /**\n   * The maximum path width in pixels. This prop can be used to prevent the path from getting too thick when zoomed in.\n   * @default Number.MAX_SAFE_INTEGER\n   */\n  widthMaxPixels?: number;\n  /**\n   * Type of joint. If `true`, draw round joints. Otherwise draw miter joints.\n   * @default false\n   */\n  jointRounded?: boolean;\n  /**\n   * Type of caps. If `true`, draw round caps. Otherwise draw square caps.\n   * @default false\n   */\n  capRounded?: boolean;\n  /**\n   * The maximum extent of a joint in ratio to the stroke width. Only works if `jointRounded` is `false`.\n   * @default 4\n   */\n  miterLimit?: number;\n  /**\n   * If `true`, extrude the path in screen space (width always faces the camera).\n   * If `false`, the width always faces up (z).\n   * @default false\n   */\n  billboard?: boolean;\n  /**\n   * (Experimental) If `'loop'` or `'open'`, will skip normalizing the coordinates returned by `getPath` and instead assume all paths are to be loops or open paths.\n   * When normalization is disabled, paths must be specified in the format of flat array. Open paths must contain at least 2 vertices and closed paths must contain at least 3 vertices.\n   * @default null\n   */\n  _pathType?: null | 'loop' | 'open';\n  /**\n   * Path geometry accessor.\n   */\n  getPath?: AccessorFunction<DataT, PathGeometry>;\n  /**\n   * Path color accessor.\n   * @default [0, 0, 0, 255]\n   */\n  getColor?: Accessor<DataT, Color | Color[]>;\n  /**\n   * Path width accessor.\n   * @default 1\n   */\n  getWidth?: Accessor<DataT, number | number[]>;\n  /**\n   * @deprecated Use `jointRounded` and `capRounded` instead\n   */\n  rounded?: boolean;\n};\n\nexport type PathLayerProps<DataT = any> = _PathLayerProps<DataT> & LayerProps;\n\nconst DEFAULT_COLOR: [number, number, number, number] = [0, 0, 0, 255];\n\nconst defaultProps: DefaultProps<PathLayerProps> = {\n  widthUnits: 'meters',\n  widthScale: {type: 'number', min: 0, value: 1},\n  widthMinPixels: {type: 'number', min: 0, value: 0},\n  widthMaxPixels: {type: 'number', min: 0, value: Number.MAX_SAFE_INTEGER},\n  jointRounded: false,\n  capRounded: false,\n  miterLimit: {type: 'number', min: 0, value: 4},\n  billboard: false,\n  _pathType: null,\n\n  getPath: {type: 'accessor', value: object => object.path},\n  getColor: {type: 'accessor', value: DEFAULT_COLOR},\n  getWidth: {type: 'accessor', value: 1},\n\n  // deprecated props\n  rounded: {deprecatedFor: ['jointRounded', 'capRounded']}\n};\n\nconst ATTRIBUTE_TRANSITION = {\n  enter: (value, chunk) => {\n    return chunk.length ? chunk.subarray(chunk.length - value.length) : value;\n  }\n};\n\n/** Render lists of coordinate points as extruded polylines with mitering. */\nexport default class PathLayer<DataT = any, ExtraPropsT extends {} = {}> extends Layer<\n  ExtraPropsT & Required<_PathLayerProps<DataT>>\n> {\n  static defaultProps = defaultProps;\n  static layerName = 'PathLayer';\n\n  state!: {\n    model?: Model;\n    pathTesselator: PathTesselator;\n  };\n\n  getShaders() {\n    return super.getShaders({vs, fs, modules: [project32, picking]}); // 'project' module added by default.\n  }\n\n  get wrapLongitude(): boolean {\n    return false;\n  }\n\n  initializeState() {\n    const noAlloc = true;\n    const attributeManager = this.getAttributeManager();\n    /* eslint-disable max-len */\n    attributeManager!.addInstanced({\n      positions: {\n        size: 3,\n        // Start filling buffer from 1 vertex in\n        vertexOffset: 1,\n        type: GL.DOUBLE,\n        fp64: this.use64bitPositions(),\n        transition: ATTRIBUTE_TRANSITION,\n        accessor: 'getPath',\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        update: this.calculatePositions,\n        noAlloc,\n        shaderAttributes: {\n          instanceLeftPositions: {\n            vertexOffset: 0\n          },\n          instanceStartPositions: {\n            vertexOffset: 1\n          },\n          instanceEndPositions: {\n            vertexOffset: 2\n          },\n          instanceRightPositions: {\n            vertexOffset: 3\n          }\n        }\n      },\n      instanceTypes: {\n        size: 1,\n        type: GL.UNSIGNED_BYTE,\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        update: this.calculateSegmentTypes,\n        noAlloc\n      },\n      instanceStrokeWidths: {\n        size: 1,\n        accessor: 'getWidth',\n        transition: ATTRIBUTE_TRANSITION,\n        defaultValue: 1\n      },\n      instanceColors: {\n        size: this.props.colorFormat.length,\n        type: GL.UNSIGNED_BYTE,\n        normalized: true,\n        accessor: 'getColor',\n        transition: ATTRIBUTE_TRANSITION,\n        defaultValue: DEFAULT_COLOR\n      },\n      instancePickingColors: {\n        size: 3,\n        type: GL.UNSIGNED_BYTE,\n        accessor: (object, {index, target: value}) =>\n          this.encodePickingColor(object && object.__source ? object.__source.index : index, value)\n      }\n    });\n    /* eslint-enable max-len */\n\n    this.setState({\n      pathTesselator: new PathTesselator({\n        fp64: this.use64bitPositions()\n      })\n    });\n  }\n\n  updateState(params: UpdateParameters<this>) {\n    super.updateState(params);\n    const {props, changeFlags} = params;\n\n    const attributeManager = this.getAttributeManager();\n\n    const geometryChanged =\n      changeFlags.dataChanged ||\n      (changeFlags.updateTriggersChanged &&\n        (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getPath));\n\n    if (geometryChanged) {\n      const {pathTesselator} = this.state;\n      const buffers = (props.data as any).attributes || {};\n\n      pathTesselator.updateGeometry({\n        data: props.data,\n        geometryBuffer: buffers.getPath,\n        buffers,\n        normalize: !props._pathType,\n        loop: props._pathType === 'loop',\n        getGeometry: props.getPath,\n        positionFormat: props.positionFormat,\n        wrapLongitude: props.wrapLongitude,\n        // TODO - move the flag out of the viewport\n        resolution: this.context.viewport.resolution,\n        dataChanged: changeFlags.dataChanged\n      });\n      this.setState({\n        numInstances: pathTesselator.instanceCount,\n        startIndices: pathTesselator.vertexStarts\n      });\n      if (!changeFlags.dataChanged) {\n        // Base `layer.updateState` only invalidates all attributes on data change\n        // Cover the rest of the scenarios here\n        attributeManager!.invalidateAll();\n      }\n    }\n\n    if (changeFlags.extensionsChanged) {\n      const {gl} = this.context;\n      this.state.model?.delete();\n      this.state.model = this._getModel(gl);\n      attributeManager!.invalidateAll();\n    }\n  }\n\n  getPickingInfo(params: GetPickingInfoParams): PickingInfo {\n    const info = super.getPickingInfo(params);\n    const {index} = info;\n    const {data} = this.props;\n\n    // Check if data comes from a composite layer, wrapped with getSubLayerRow\n    if (data[0] && data[0].__source) {\n      // index decoded from picking color refers to the source index\n      info.object = (data as any[]).find(d => d.__source.index === index);\n    }\n    return info;\n  }\n\n  /** Override base Layer method */\n  disablePickingIndex(objectIndex: number) {\n    const {data} = this.props;\n\n    // Check if data comes from a composite layer, wrapped with getSubLayerRow\n    if (data[0] && data[0].__source) {\n      // index decoded from picking color refers to the source index\n      for (let i = 0; i < (data as any[]).length; i++) {\n        if (data[i].__source.index === objectIndex) {\n          this._disablePickingIndex(i);\n        }\n      }\n    } else {\n      super.disablePickingIndex(objectIndex);\n    }\n  }\n\n  draw({uniforms}) {\n    const {\n      jointRounded,\n      capRounded,\n      billboard,\n      miterLimit,\n      widthUnits,\n      widthScale,\n      widthMinPixels,\n      widthMaxPixels\n    } = this.props;\n\n    this.state.model\n      .setUniforms(uniforms)\n      .setUniforms({\n        jointType: Number(jointRounded),\n        capType: Number(capRounded),\n        billboard,\n        widthUnits: UNIT[widthUnits],\n        widthScale,\n        miterLimit,\n        widthMinPixels,\n        widthMaxPixels\n      })\n      .draw();\n  }\n\n  protected _getModel(gl: WebGLRenderingContext): Model {\n    /*\n     *       _\n     *        \"-_ 1                   3                       5\n     *     _     \"o---------------------o-------------------_-o\n     *       -   / \"\"--..__              '.             _.-' /\n     *   _     \"@- - - - - \"\"--..__- - - - x - - - -_.@'    /\n     *    \"-_  /                   \"\"--..__ '.  _,-` :     /\n     *       \"o----------------------------\"\"-o'    :     /\n     *      0,2                            4 / '.  :     /\n     *                                      /   '.:     /\n     *                                     /     :'.   /\n     *                                    /     :  ', /\n     *                                   /     :     o\n     */\n\n    // prettier-ignore\n    const SEGMENT_INDICES = [\n      // start corner\n      0, 1, 2,\n      // body\n      1, 4, 2,\n      1, 3, 4,\n      // end corner\n      3, 5, 4\n    ];\n\n    // [0] position on segment - 0: start, 1: end\n    // [1] side of path - -1: left, 0: center (joint), 1: right\n    // prettier-ignore\n    const SEGMENT_POSITIONS = [\n      // bevel start corner\n      0, 0,\n      // start inner corner\n      0, -1,\n      // start outer corner\n      0, 1,\n      // end inner corner\n      1, -1,\n      // end outer corner\n      1, 1,\n      // bevel end corner\n      1, 0\n    ];\n\n    return new Model(gl, {\n      ...this.getShaders(),\n      id: this.props.id,\n      geometry: new Geometry({\n        drawMode: GL.TRIANGLES,\n        attributes: {\n          indices: new Uint16Array(SEGMENT_INDICES),\n          positions: {value: new Float32Array(SEGMENT_POSITIONS), size: 2}\n        }\n      }),\n      isInstanced: true\n    });\n  }\n\n  protected calculatePositions(attribute) {\n    const {pathTesselator} = this.state;\n\n    attribute.startIndices = pathTesselator.vertexStarts;\n    attribute.value = pathTesselator.get('positions');\n  }\n\n  protected calculateSegmentTypes(attribute) {\n    const {pathTesselator} = this.state;\n\n    attribute.startIndices = pathTesselator.vertexStarts;\n    attribute.value = pathTesselator.get('segmentTypes');\n  }\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nexport default `\\\n#define SHADER_NAME path-layer-vertex-shader\n\nattribute vec2 positions;\n\nattribute float instanceTypes;\nattribute vec3 instanceStartPositions;\nattribute vec3 instanceEndPositions;\nattribute vec3 instanceLeftPositions;\nattribute vec3 instanceRightPositions;\nattribute vec3 instanceLeftPositions64Low;\nattribute vec3 instanceStartPositions64Low;\nattribute vec3 instanceEndPositions64Low;\nattribute vec3 instanceRightPositions64Low;\nattribute float instanceStrokeWidths;\nattribute vec4 instanceColors;\nattribute vec3 instancePickingColors;\n\nuniform float widthScale;\nuniform float widthMinPixels;\nuniform float widthMaxPixels;\nuniform float jointType;\nuniform float capType;\nuniform float miterLimit;\nuniform bool billboard;\nuniform int widthUnits;\n\nuniform float opacity;\n\nvarying vec4 vColor;\nvarying vec2 vCornerOffset;\nvarying float vMiterLength;\nvarying vec2 vPathPosition;\nvarying float vPathLength;\nvarying float vJointType;\n\nconst float EPSILON = 0.001;\nconst vec3 ZERO_OFFSET = vec3(0.0);\n\nfloat flipIfTrue(bool flag) {\n  return -(float(flag) * 2. - 1.);\n}\n\n// calculate line join positions\nvec3 getLineJoinOffset(\n  vec3 prevPoint, vec3 currPoint, vec3 nextPoint,\n  vec2 width\n) {\n  bool isEnd = positions.x > 0.0;\n  // side of the segment - -1: left, 0: center, 1: right\n  float sideOfPath = positions.y;\n  float isJoint = float(sideOfPath == 0.0);\n\n  vec3 deltaA3 = (currPoint - prevPoint);\n  vec3 deltaB3 = (nextPoint - currPoint);\n\n  mat3 rotationMatrix;\n  bool needsRotation = !billboard && project_needs_rotation(currPoint, rotationMatrix);\n  if (needsRotation) {\n    deltaA3 = deltaA3 * rotationMatrix;\n    deltaB3 = deltaB3 * rotationMatrix;\n  }\n  vec2 deltaA = deltaA3.xy / width;\n  vec2 deltaB = deltaB3.xy / width;\n\n  float lenA = length(deltaA);\n  float lenB = length(deltaB);\n\n  vec2 dirA = lenA > 0. ? normalize(deltaA) : vec2(0.0, 0.0);\n  vec2 dirB = lenB > 0. ? normalize(deltaB) : vec2(0.0, 0.0);\n\n  vec2 perpA = vec2(-dirA.y, dirA.x);\n  vec2 perpB = vec2(-dirB.y, dirB.x);\n\n  // tangent of the corner\n  vec2 tangent = dirA + dirB;\n  tangent = length(tangent) > 0. ? normalize(tangent) : perpA;\n  // direction of the corner\n  vec2 miterVec = vec2(-tangent.y, tangent.x);\n  // direction of the segment\n  vec2 dir = isEnd ? dirA : dirB;\n  // direction of the extrusion\n  vec2 perp = isEnd ? perpA : perpB;\n  // length of the segment\n  float L = isEnd ? lenA : lenB;\n\n  // A = angle of the corner\n  float sinHalfA = abs(dot(miterVec, perp));\n  float cosHalfA = abs(dot(dirA, miterVec));\n\n  // -1: right, 1: left\n  float turnDirection = flipIfTrue(dirA.x * dirB.y >= dirA.y * dirB.x);\n\n  // relative position to the corner:\n  // -1: inside (smaller side of the angle)\n  // 0: center\n  // 1: outside (bigger side of the angle)\n  float cornerPosition = sideOfPath * turnDirection;\n\n  float miterSize = 1.0 / max(sinHalfA, EPSILON);\n  // trim if inside corner extends further than the line segment\n  miterSize = mix(\n    min(miterSize, max(lenA, lenB) / max(cosHalfA, EPSILON)),\n    miterSize,\n    step(0.0, cornerPosition)\n  );\n\n  vec2 offsetVec = mix(miterVec * miterSize, perp, step(0.5, cornerPosition))\n    * (sideOfPath + isJoint * turnDirection);\n\n  // special treatment for start cap and end cap\n  bool isStartCap = lenA == 0.0 || (!isEnd && (instanceTypes == 1.0 || instanceTypes == 3.0));\n  bool isEndCap = lenB == 0.0 || (isEnd && (instanceTypes == 2.0 || instanceTypes == 3.0));\n  bool isCap = isStartCap || isEndCap;\n\n  // extend out a triangle to envelope the round cap\n  if (isCap) {\n    offsetVec = mix(perp * sideOfPath, dir * capType * 4.0 * flipIfTrue(isStartCap), isJoint);\n    vJointType = capType;\n  } else {\n    vJointType = jointType;\n  }\n\n  // Generate variables for fragment shader\n  vPathLength = L;\n  vCornerOffset = offsetVec;\n  vMiterLength = dot(vCornerOffset, miterVec * turnDirection);\n  vMiterLength = isCap ? isJoint : vMiterLength;\n\n  vec2 offsetFromStartOfPath = vCornerOffset + deltaA * float(isEnd);\n  vPathPosition = vec2(\n    dot(offsetFromStartOfPath, perp),\n    dot(offsetFromStartOfPath, dir)\n  );\n  geometry.uv = vPathPosition;\n\n  float isValid = step(instanceTypes, 3.5);\n  vec3 offset = vec3(offsetVec * width * isValid, 0.0);\n\n  if (needsRotation) {\n    offset = rotationMatrix * offset;\n  }\n  return offset;\n}\n\n// In clipspace extrusion, if a line extends behind the camera, clip it to avoid visual artifacts\nvoid clipLine(inout vec4 position, vec4 refPosition) {\n  if (position.w < EPSILON) {\n    float r = (EPSILON - refPosition.w) / (position.w - refPosition.w);\n    position = refPosition + (position - refPosition) * r;\n  }\n}\n\nvoid main() {\n  geometry.pickingColor = instancePickingColors;\n\n  vColor = vec4(instanceColors.rgb, instanceColors.a * opacity);\n\n  float isEnd = positions.x;\n\n  vec3 prevPosition = mix(instanceLeftPositions, instanceStartPositions, isEnd);\n  vec3 prevPosition64Low = mix(instanceLeftPositions64Low, instanceStartPositions64Low, isEnd);\n\n  vec3 currPosition = mix(instanceStartPositions, instanceEndPositions, isEnd);\n  vec3 currPosition64Low = mix(instanceStartPositions64Low, instanceEndPositions64Low, isEnd);\n\n  vec3 nextPosition = mix(instanceEndPositions, instanceRightPositions, isEnd);\n  vec3 nextPosition64Low = mix(instanceEndPositions64Low, instanceRightPositions64Low, isEnd);\n\n  geometry.worldPosition = currPosition;\n  vec2 widthPixels = vec2(clamp(\n    project_size_to_pixel(instanceStrokeWidths * widthScale, widthUnits),\n    widthMinPixels, widthMaxPixels) / 2.0);\n  vec3 width;\n\n  if (billboard) {\n    // Extrude in clipspace\n    vec4 prevPositionScreen = project_position_to_clipspace(prevPosition, prevPosition64Low, ZERO_OFFSET);\n    vec4 currPositionScreen = project_position_to_clipspace(currPosition, currPosition64Low, ZERO_OFFSET, geometry.position);\n    vec4 nextPositionScreen = project_position_to_clipspace(nextPosition, nextPosition64Low, ZERO_OFFSET);\n\n    clipLine(prevPositionScreen, currPositionScreen);\n    clipLine(nextPositionScreen, currPositionScreen);\n    clipLine(currPositionScreen, mix(nextPositionScreen, prevPositionScreen, isEnd));\n\n    width = vec3(widthPixels, 0.0);\n    DECKGL_FILTER_SIZE(width, geometry);\n\n    vec3 offset = getLineJoinOffset(\n      prevPositionScreen.xyz / prevPositionScreen.w,\n      currPositionScreen.xyz / currPositionScreen.w,\n      nextPositionScreen.xyz / nextPositionScreen.w,\n      project_pixel_size_to_clipspace(width.xy)\n    );\n\n    DECKGL_FILTER_GL_POSITION(currPositionScreen, geometry);\n    gl_Position = vec4(currPositionScreen.xyz + offset * currPositionScreen.w, currPositionScreen.w);\n  } else {\n    // Extrude in commonspace\n    prevPosition = project_position(prevPosition, prevPosition64Low);\n    currPosition = project_position(currPosition, currPosition64Low);\n    nextPosition = project_position(nextPosition, nextPosition64Low);\n\n    width = vec3(project_pixel_size(widthPixels), 0.0);\n    DECKGL_FILTER_SIZE(width, geometry);\n\n    vec3 offset = getLineJoinOffset(prevPosition, currPosition, nextPosition, width.xy);\n    geometry.position = vec4(currPosition + offset, 1.0);\n    gl_Position = project_common_position_to_clipspace(geometry.position);\n    DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n  }\n  DECKGL_FILTER_COLOR(vColor, geometry);\n}\n`;\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nexport default `\\\n#define SHADER_NAME path-layer-fragment-shader\n\nprecision highp float;\n\nuniform float miterLimit;\n\nvarying vec4 vColor;\nvarying vec2 vCornerOffset;\nvarying float vMiterLength;\n/*\n * vPathPosition represents the relative coordinates of the current fragment on the path segment.\n * vPathPosition.x - position along the width of the path, between [-1, 1]. 0 is the center line.\n * vPathPosition.y - position along the length of the path, between [0, L / width].\n */\nvarying vec2 vPathPosition;\nvarying float vPathLength;\nvarying float vJointType;\n\nvoid main(void) {\n  geometry.uv = vPathPosition;\n\n  if (vPathPosition.y < 0.0 || vPathPosition.y > vPathLength) {\n    // if joint is rounded, test distance from the corner\n    if (vJointType > 0.5 && length(vCornerOffset) > 1.0) {\n      discard;\n    }\n    // trim miter\n    if (vJointType < 0.5 && vMiterLength > miterLimit + 1.0) {\n      discard;\n    }\n  }\n  gl_FragColor = vColor;\n\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n`;\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport type {ShaderModule} from '../../types/types';\n\nconst defines = '#define SMOOTH_EDGE_RADIUS 0.5';\nconst vs = `\n${defines}\n\nstruct VertexGeometry {\n  vec4 position;\n  vec3 worldPosition;\n  vec3 worldPositionAlt;\n  vec3 normal;\n  vec2 uv;\n  vec3 pickingColor;\n} geometry = VertexGeometry(\n  vec4(0.0, 0.0, 1.0, 0.0),\n  vec3(0.0),\n  vec3(0.0),\n  vec3(0.0),\n  vec2(0.0),\n  vec3(0.0)\n);\n`;\n\nconst fs = `\n${defines}\n\nstruct FragmentGeometry {\n  vec2 uv;\n} geometry;\n\nfloat smoothedge(float edge, float x) {\n  return smoothstep(edge - SMOOTH_EDGE_RADIUS, edge + SMOOTH_EDGE_RADIUS, x);\n}\n`;\n\nexport default {name: 'geometry', vs, fs} as ShaderModule;\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {COORDINATE_SYSTEM, PROJECTION_MODE, UNIT} from '../../lib/constants';\n\n// We are generating these from the js code in constants.js\nconst COORDINATE_SYSTEM_GLSL_CONSTANTS = Object.keys(COORDINATE_SYSTEM)\n  .map(key => `const int COORDINATE_SYSTEM_${key} = ${COORDINATE_SYSTEM[key]};`)\n  .join('');\nconst PROJECTION_MODE_GLSL_CONSTANTS = Object.keys(PROJECTION_MODE)\n  .map(key => `const int PROJECTION_MODE_${key} = ${PROJECTION_MODE[key]};`)\n  .join('');\nconst UNIT_GLSL_CONSTANTS = Object.keys(UNIT)\n  .map(key => `const int UNIT_${key.toUpperCase()} = ${UNIT[key]};`)\n  .join('');\n\nexport default `\\\n${COORDINATE_SYSTEM_GLSL_CONSTANTS}\n${PROJECTION_MODE_GLSL_CONSTANTS}\n${UNIT_GLSL_CONSTANTS}\n\nuniform int project_uCoordinateSystem;\nuniform int project_uProjectionMode;\nuniform float project_uScale;\nuniform bool project_uWrapLongitude;\nuniform vec3 project_uCommonUnitsPerMeter;\nuniform vec3 project_uCommonUnitsPerWorldUnit;\nuniform vec3 project_uCommonUnitsPerWorldUnit2;\nuniform vec4 project_uCenter;\nuniform mat4 project_uModelMatrix;\nuniform mat4 project_uViewProjectionMatrix;\nuniform vec2 project_uViewportSize;\nuniform float project_uDevicePixelRatio;\nuniform float project_uFocalDistance;\nuniform vec3 project_uCameraPosition;\nuniform vec3 project_uCoordinateOrigin;\nuniform vec3 project_uCommonOrigin;\nuniform bool project_uPseudoMeters;\n\nconst float TILE_SIZE = 512.0;\nconst float PI = 3.1415926536;\nconst float WORLD_SCALE = TILE_SIZE / (PI * 2.0);\nconst vec3 ZERO_64_LOW = vec3(0.0);\nconst float EARTH_RADIUS = 6370972.0; // meters\nconst float GLOBE_RADIUS = 256.0;\n\n// returns an adjustment factor for uCommonUnitsPerMeter\nfloat project_size_at_latitude(float lat) {\n  float y = clamp(lat, -89.9, 89.9);\n  return 1.0 / cos(radians(y));\n}\n\nfloat project_size() {\n  if (project_uProjectionMode == PROJECTION_MODE_WEB_MERCATOR &&\n    project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT &&\n    project_uPseudoMeters == false) {\n\n    // uCommonUnitsPerMeter in low-zoom Web Mercator is non-linear\n    // Adjust by 1 / cos(latitude)\n    // If geometry.position (vertex in common space) is populated, use it\n    // Otherwise use geometry.worldPosition (anchor in world space)\n    \n    if (geometry.position.w == 0.0) {\n      return project_size_at_latitude(geometry.worldPosition.y);\n    }\n\n    // latitude from common y: 2.0 * (atan(exp(y / TILE_SIZE * 2.0 * PI - PI)) - PI / 4.0)\n    // Taylor series of 1 / cos(latitude)\n    // Max error < 0.003\n  \n    float y = geometry.position.y / TILE_SIZE * 2.0 - 1.0;\n    float y2 = y * y;\n    float y4 = y2 * y2;\n    float y6 = y4 * y2;\n    return 1.0 + 4.9348 * y2 + 4.0587 * y4 + 1.5642 * y6;\n  }\n  return 1.0;\n}\n\nfloat project_size_at_latitude(float meters, float lat) {\n  return meters * project_uCommonUnitsPerMeter.z * project_size_at_latitude(lat);\n}\n\n//\n// Scaling offsets - scales meters to \"world distance\"\n// Note the scalar version of project_size is for scaling the z component only\n//\nfloat project_size(float meters) {\n  return meters * project_uCommonUnitsPerMeter.z * project_size();\n}\n\nvec2 project_size(vec2 meters) {\n  return meters * project_uCommonUnitsPerMeter.xy * project_size();\n}\n\nvec3 project_size(vec3 meters) {\n  return meters * project_uCommonUnitsPerMeter * project_size();\n}\n\nvec4 project_size(vec4 meters) {\n  return vec4(meters.xyz * project_uCommonUnitsPerMeter, meters.w);\n}\n\n// Get rotation matrix that aligns the z axis with the given up vector\n// Find 3 unit vectors ux, uy, uz that are perpendicular to each other and uz == up\nmat3 project_get_orientation_matrix(vec3 up) {\n  vec3 uz = normalize(up);\n  // Tangent on XY plane\n  vec3 ux = abs(uz.z) == 1.0 ? vec3(1.0, 0.0, 0.0) : normalize(vec3(uz.y, -uz.x, 0));\n  vec3 uy = cross(uz, ux);\n  return mat3(ux, uy, uz);\n}\n\nbool project_needs_rotation(vec3 commonPosition, out mat3 transform) {\n  if (project_uProjectionMode == PROJECTION_MODE_GLOBE) {\n    transform = project_get_orientation_matrix(commonPosition);\n    return true;\n  }\n  return false;\n}\n\n//\n// Projecting normal - transform deltas from current coordinate system to\n// normals in the worldspace\n//\nvec3 project_normal(vec3 vector) {\n  // Apply model matrix\n  vec4 normal_modelspace = project_uModelMatrix * vec4(vector, 0.0);\n  vec3 n = normalize(normal_modelspace.xyz * project_uCommonUnitsPerMeter);\n  mat3 rotation;\n  if (project_needs_rotation(geometry.position.xyz, rotation)) {\n    n = rotation * n;\n  }\n  return n;\n}\n\nvec4 project_offset_(vec4 offset) {\n  float dy = offset.y;\n  vec3 commonUnitsPerWorldUnit = project_uCommonUnitsPerWorldUnit + project_uCommonUnitsPerWorldUnit2 * dy;\n  return vec4(offset.xyz * commonUnitsPerWorldUnit, offset.w);\n}\n\n//\n// Projecting positions - non-linear projection: lnglats => unit tile [0-1, 0-1]\n//\nvec2 project_mercator_(vec2 lnglat) {\n  float x = lnglat.x;\n  if (project_uWrapLongitude) {\n    x = mod(x + 180., 360.0) - 180.;\n  }\n  float y = clamp(lnglat.y, -89.9, 89.9);\n  return vec2(\n    radians(x) + PI,\n    PI + log(tan_fp32(PI * 0.25 + radians(y) * 0.5))\n  ) * WORLD_SCALE;\n}\n\nvec3 project_globe_(vec3 lnglatz) {\n  float lambda = radians(lnglatz.x);\n  float phi = radians(lnglatz.y);\n  float cosPhi = cos(phi);\n  float D = (lnglatz.z / EARTH_RADIUS + 1.0) * GLOBE_RADIUS;\n\n  return vec3(\n    sin(lambda) * cosPhi,\n    -cos(lambda) * cosPhi,\n    sin(phi)\n  ) * D;\n}\n\n//\n// Projects positions (defined by project_uCoordinateSystem) to common space (defined by project_uProjectionMode)\n//\nvec4 project_position(vec4 position, vec3 position64Low) {\n  vec4 position_world = project_uModelMatrix * position;\n\n  // Work around for a Mac+NVIDIA bug https://github.com/visgl/deck.gl/issues/4145\n  if (project_uProjectionMode == PROJECTION_MODE_WEB_MERCATOR) {\n    if (project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT) {\n      return vec4(\n        project_mercator_(position_world.xy),\n        project_size_at_latitude(position_world.z, position_world.y),\n        position_world.w\n      );\n    }\n    if (project_uCoordinateSystem == COORDINATE_SYSTEM_CARTESIAN) {\n      position_world.xyz += project_uCoordinateOrigin;\n    }\n  }\n  if (project_uProjectionMode == PROJECTION_MODE_GLOBE) {\n    if (project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT) {\n      return vec4(\n        project_globe_(position_world.xyz),\n        position_world.w\n      );\n    }\n  }\n  if (project_uProjectionMode == PROJECTION_MODE_WEB_MERCATOR_AUTO_OFFSET) {\n    if (project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT) {\n      if (abs(position_world.y - project_uCoordinateOrigin.y) > 0.25) {\n        // Too far from the projection center for offset mode to be accurate\n        // Only use high parts\n        return vec4(\n          project_mercator_(position_world.xy) - project_uCommonOrigin.xy,\n          project_size(position_world.z),\n          position_world.w\n        );\n      }\n    }\n  }\n  if (project_uProjectionMode == PROJECTION_MODE_IDENTITY ||\n    (project_uProjectionMode == PROJECTION_MODE_WEB_MERCATOR_AUTO_OFFSET &&\n    (project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT ||\n     project_uCoordinateSystem == COORDINATE_SYSTEM_CARTESIAN))) {\n    // Subtract high part of 64 bit value. Convert remainder to float32, preserving precision.\n    position_world.xyz -= project_uCoordinateOrigin;\n  }\n\n  // Translation is already added to the high parts\n  return project_offset_(position_world + project_uModelMatrix * vec4(position64Low, 0.0));\n}\n\nvec4 project_position(vec4 position) {\n  return project_position(position, ZERO_64_LOW);\n}\n\nvec3 project_position(vec3 position, vec3 position64Low) {\n  vec4 projected_position = project_position(vec4(position, 1.0), position64Low);\n  return projected_position.xyz;\n}\n\nvec3 project_position(vec3 position) {\n  vec4 projected_position = project_position(vec4(position, 1.0), ZERO_64_LOW);\n  return projected_position.xyz;\n}\n\nvec2 project_position(vec2 position) {\n  vec4 projected_position = project_position(vec4(position, 0.0, 1.0), ZERO_64_LOW);\n  return projected_position.xy;\n}\n\nvec4 project_common_position_to_clipspace(vec4 position, mat4 viewProjectionMatrix, vec4 center) {\n  return viewProjectionMatrix * position + center;\n}\n\n//\n// Projects from common space coordinates to clip space.\n// Uses project_uViewProjectionMatrix\n//\nvec4 project_common_position_to_clipspace(vec4 position) {\n  return project_common_position_to_clipspace(position, project_uViewProjectionMatrix, project_uCenter);\n}\n\n// Returns a clip space offset that corresponds to a given number of screen pixels\nvec2 project_pixel_size_to_clipspace(vec2 pixels) {\n  vec2 offset = pixels / project_uViewportSize * project_uDevicePixelRatio * 2.0;\n  return offset * project_uFocalDistance;\n}\n\nfloat project_size_to_pixel(float meters) {\n  return project_size(meters) * project_uScale;\n}\nfloat project_size_to_pixel(float size, int unit) {\n  if (unit == UNIT_METERS) return project_size_to_pixel(size);\n  if (unit == UNIT_COMMON) return size * project_uScale;\n  // UNIT_PIXELS\n  return size;\n}\nfloat project_pixel_size(float pixels) {\n  return pixels / project_uScale;\n}\nvec2 project_pixel_size(vec2 pixels) {\n  return pixels / project_uScale;\n}\n`;\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {fp32} from '@luma.gl/core';\nimport geometry from '../misc/geometry';\nimport projectShader from './project.glsl';\nimport {getUniformsFromViewport} from './viewport-uniforms';\n\nimport type {ProjectModuleSettings} from './viewport-uniforms';\nimport type {ShaderModule} from '../../types/types';\n\nconst INITIAL_MODULE_OPTIONS = {};\n\nfunction getUniforms(opts: ProjectModuleSettings | {} = INITIAL_MODULE_OPTIONS) {\n  if ('viewport' in opts) {\n    return getUniformsFromViewport(opts);\n  }\n  return {};\n}\n\nexport default {\n  name: 'project',\n  dependencies: [fp32, geometry],\n  vs: projectShader,\n  getUniforms\n} as ShaderModule<ProjectModuleSettings>;\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n// View and Projection Matrix calculations for mapbox-js style\n// map view properties\nimport Viewport from './viewport';\n\nimport {\n  pixelsToWorld,\n  getViewMatrix,\n  addMetersToLngLat,\n  unitsPerMeter,\n  getProjectionParameters,\n  altitudeToFovy,\n  fovyToAltitude,\n  fitBounds,\n  getBounds\n} from '@math.gl/web-mercator';\nimport {Padding} from './viewport';\n\n// TODO - import from math.gl\nimport * as vec2 from 'gl-matrix/vec2';\nimport {Matrix4, clamp} from '@math.gl/core';\n\nexport type WebMercatorViewportOptions = {\n  /** Name of the viewport */\n  id?: string;\n  /** Left offset from the canvas edge, in pixels */\n  x?: number;\n  /** Top offset from the canvas edge, in pixels */\n  y?: number;\n  /** Viewport width in pixels */\n  width?: number;\n  /** Viewport height in pixels */\n  height?: number;\n  /** Longitude in degrees */\n  longitude?: number;\n  /** Latitude in degrees */\n  latitude?: number;\n  /** Tilt of the camera in degrees */\n  pitch?: number;\n  /** Heading of the camera in degrees */\n  bearing?: number;\n  /** Camera altitude relative to the viewport height, legacy property used to control the FOV. Default `1.5` */\n  altitude?: number;\n  /** Camera fovy in degrees. If provided, overrides `altitude` */\n  fovy?: number;\n  /** Viewport center in world space. If geospatial, refers to meter offsets from lng, lat */\n  position?: number[];\n  /** Zoom level */\n  zoom?: number;\n  /** Padding around the viewport, in pixels. */\n  padding?: Padding | null;\n  /** Model matrix of viewport center */\n  modelMatrix?: number[] | null;\n  /** Custom projection matrix */\n  projectionMatrix?: number[];\n  /** Use orthographic projection */\n  orthographic?: boolean;\n  /** Scaler for the near plane, 1 unit equals to the height of the viewport. Default `0.1` */\n  nearZMultiplier?: number;\n  /** Scaler for the far plane, 1 unit equals to the distance from the camera to the edge of the screen. Default `1.01` */\n  farZMultiplier?: number;\n  /** Optionally override the near plane position. `nearZMultiplier` is ignored if `nearZ` is supplied. */\n  nearZ?: number;\n  /** Optionally override the far plane position. `farZMultiplier` is ignored if `farZ` is supplied. */\n  farZ?: number;\n  /** Render multiple copies of the world */\n  repeat?: boolean;\n  /** Internal use */\n  worldOffset?: number;\n  /** @deprecated Revert to approximated meter size calculation prior to v8.5 */\n  legacyMeterSizes?: boolean;\n};\n\n/**\n * Manages transformations to/from WGS84 coordinates using the Web Mercator Projection.\n */\nexport default class WebMercatorViewport extends Viewport {\n  static displayName = 'WebMercatorViewport';\n\n  longitude: number;\n  latitude: number;\n  pitch: number;\n  bearing: number;\n  altitude: number;\n  fovy: number;\n  orthographic: boolean;\n\n  /** Each sub viewport renders one copy of the world if repeat:true. The list is generated and cached on first request. */\n  private _subViewports: WebMercatorViewport[] | null;\n  /** @deprecated Revert to approximated meter size calculation prior to v8.5 */\n  private _pseudoMeters: boolean;\n\n  /* eslint-disable complexity, max-statements */\n  constructor(opts: WebMercatorViewportOptions = {}) {\n    const {\n      latitude = 0,\n      longitude = 0,\n      zoom = 0,\n      pitch = 0,\n      bearing = 0,\n      nearZMultiplier = 0.1,\n      farZMultiplier = 1.01,\n      nearZ,\n      farZ,\n      orthographic = false,\n      projectionMatrix,\n\n      repeat = false,\n      worldOffset = 0,\n      position,\n      padding,\n\n      // backward compatibility\n      // TODO: remove in v9\n      legacyMeterSizes = false\n    } = opts;\n\n    let {width, height, altitude = 1.5} = opts;\n    const scale = Math.pow(2, zoom);\n\n    // Silently allow apps to send in 0,0 to facilitate isomorphic render etc\n    width = width || 1;\n    height = height || 1;\n\n    let fovy;\n    let projectionParameters: any = null;\n    if (projectionMatrix) {\n      altitude = projectionMatrix[5] / 2;\n      fovy = altitudeToFovy(altitude);\n    } else {\n      if (opts.fovy) {\n        fovy = opts.fovy;\n        altitude = fovyToAltitude(fovy);\n      } else {\n        fovy = altitudeToFovy(altitude);\n      }\n\n      let offset: [number, number] | undefined;\n      if (padding) {\n        const {top = 0, bottom = 0} = padding;\n        offset = [0, clamp((top + height - bottom) / 2, 0, height) - height / 2];\n      }\n\n      projectionParameters = getProjectionParameters({\n        width,\n        height,\n        scale,\n        center: position && [0, 0, position[2] * unitsPerMeter(latitude)],\n        offset,\n        pitch,\n        fovy,\n        nearZMultiplier,\n        farZMultiplier\n      });\n\n      if (Number.isFinite(nearZ)) {\n        projectionParameters.near = nearZ;\n      }\n      if (Number.isFinite(farZ)) {\n        projectionParameters.far = farZ;\n      }\n    }\n\n    // The uncentered matrix allows us two move the center addition to the\n    // shader (cheap) which gives a coordinate system that has its center in\n    // the layer's center position. This makes rotations and other modelMatrx\n    // transforms much more useful.\n    let viewMatrixUncentered = getViewMatrix({\n      height,\n      pitch,\n      bearing,\n      scale,\n      altitude\n    });\n\n    if (worldOffset) {\n      const viewOffset = new Matrix4().translate([512 * worldOffset, 0, 0]);\n      viewMatrixUncentered = viewOffset.multiplyLeft(viewMatrixUncentered);\n    }\n\n    super({\n      ...opts,\n      // x, y,\n      width,\n      height,\n\n      // view matrix\n      viewMatrix: viewMatrixUncentered,\n      longitude,\n      latitude,\n      zoom,\n\n      // projection matrix parameters\n      ...projectionParameters,\n      fovy,\n      focalDistance: altitude\n    });\n\n    // Save parameters\n    this.latitude = latitude;\n    this.longitude = longitude;\n    this.zoom = zoom;\n    this.pitch = pitch;\n    this.bearing = bearing;\n    this.altitude = altitude;\n    this.fovy = fovy;\n\n    this.orthographic = orthographic;\n\n    this._subViewports = repeat ? [] : null;\n    this._pseudoMeters = legacyMeterSizes;\n\n    Object.freeze(this);\n  }\n  /* eslint-enable complexity, max-statements */\n\n  get subViewports(): WebMercatorViewport[] | null {\n    if (this._subViewports && !this._subViewports.length) {\n      // Cache sub viewports so that we only calculate them once\n      const bounds = this.getBounds();\n\n      const minOffset = Math.floor((bounds[0] + 180) / 360);\n      const maxOffset = Math.ceil((bounds[2] - 180) / 360);\n\n      for (let x = minOffset; x <= maxOffset; x++) {\n        const offsetViewport = x\n          ? new WebMercatorViewport({\n              ...this,\n              worldOffset: x\n            })\n          : this;\n        this._subViewports.push(offsetViewport);\n      }\n    }\n    return this._subViewports;\n  }\n\n  projectPosition(xyz: number[]): [number, number, number] {\n    if (this._pseudoMeters) {\n      // Backward compatibility\n      return super.projectPosition(xyz);\n    }\n    const [X, Y] = this.projectFlat(xyz);\n    const Z = (xyz[2] || 0) * unitsPerMeter(xyz[1]);\n    return [X, Y, Z];\n  }\n\n  unprojectPosition(xyz: number[]): [number, number, number] {\n    if (this._pseudoMeters) {\n      // Backward compatibility\n      return super.unprojectPosition(xyz);\n    }\n    const [X, Y] = this.unprojectFlat(xyz);\n    const Z = (xyz[2] || 0) / unitsPerMeter(Y);\n    return [X, Y, Z];\n  }\n\n  /**\n   * Add a meter delta to a base lnglat coordinate, returning a new lnglat array\n   *\n   * Note: Uses simple linear approximation around the viewport center\n   * Error increases with size of offset (roughly 1% per 100km)\n   *\n   * @param {[Number,Number]|[Number,Number,Number]) lngLatZ - base coordinate\n   * @param {[Number,Number]|[Number,Number,Number]) xyz - array of meter deltas\n   * @return {[Number,Number]|[Number,Number,Number]) array of [lng,lat,z] deltas\n   */\n  addMetersToLngLat(lngLatZ: number[], xyz: number[]): number[] {\n    return addMetersToLngLat(lngLatZ, xyz);\n  }\n\n  panByPosition(coords: number[], pixel: number[]): WebMercatorViewportOptions {\n    const fromLocation = pixelsToWorld(pixel, this.pixelUnprojectionMatrix);\n    const toLocation = this.projectFlat(coords);\n\n    const translate = vec2.add([], toLocation, vec2.negate([], fromLocation));\n    const newCenter = vec2.add([], this.center, translate);\n\n    const [longitude, latitude] = this.unprojectFlat(newCenter);\n    return {longitude, latitude};\n  }\n\n  getBounds(options: {z?: number} = {}): [number, number, number, number] {\n    // @ts-ignore\n    const corners = getBounds(this, options.z || 0);\n\n    return [\n      Math.min(corners[0][0], corners[1][0], corners[2][0], corners[3][0]),\n      Math.min(corners[0][1], corners[1][1], corners[2][1], corners[3][1]),\n      Math.max(corners[0][0], corners[1][0], corners[2][0], corners[3][0]),\n      Math.max(corners[0][1], corners[1][1], corners[2][1], corners[3][1])\n    ];\n  }\n\n  /**\n   * Returns a new viewport that fit around the given rectangle.\n   * Only supports non-perspective mode.\n   */\n  fitBounds(\n    /** [[lon, lat], [lon, lat]] */\n    bounds: [[number, number], [number, number]],\n    options: {\n      /** If not supplied, will use the current width of the viewport (default `1`) */\n      width?: number;\n      /** If not supplied, will use the current height of the viewport (default `1`) */\n      height?: number;\n      /** In degrees, 0.01 would be about 1000 meters */\n      minExtent?: number;\n      /** Max zoom level */\n      maxZoom?: number;\n      /** Extra padding in pixels */\n      padding?: number | Required<Padding>;\n      /** Center shift in pixels */\n      offset?: number[];\n    } = {}\n  ) {\n    const {width, height} = this;\n    const {longitude, latitude, zoom} = fitBounds({width, height, bounds, ...options});\n    return new WebMercatorViewport({width, height, longitude, latitude, zoom});\n  }\n}\n","import LayersPass, {LayersPassRenderOptions, RenderStats, Rect} from './layers-pass';\nimport {withParameters} from '@luma.gl/core';\nimport GL from '@luma.gl/constants';\nimport log from '../utils/log';\n\nimport type {Framebuffer} from '@luma.gl/core';\nimport type Viewport from '../viewports/viewport';\nimport type Layer from '../lib/layer';\n\nconst PICKING_PARAMETERS = {\n  blendFunc: [GL.ONE, GL.ZERO, GL.CONSTANT_ALPHA, GL.ZERO],\n  blendEquation: GL.FUNC_ADD\n};\n\ntype PickLayersPassRenderOptions = LayersPassRenderOptions & {\n  pickingFBO: Framebuffer;\n  deviceRect: Rect;\n  pickZ: boolean;\n};\n\ntype EncodedPickingColors = {\n  a: number;\n  layer: Layer;\n  viewports: Viewport[];\n};\n\nexport type PickingColorDecoder = (pickedColor: number[] | Uint8Array) =>\n  | {\n      pickedLayer: Layer;\n      pickedViewports: Viewport[];\n      pickedObjectIndex: number;\n    }\n  | undefined;\n\nexport default class PickLayersPass extends LayersPass {\n  private pickZ?: boolean;\n  private _colorEncoderState: {\n    byLayer: Map<Layer, EncodedPickingColors>;\n    byAlpha: EncodedPickingColors[];\n  } | null = null;\n\n  render(props: LayersPassRenderOptions | PickLayersPassRenderOptions) {\n    if ('pickingFBO' in props) {\n      // When drawing into an off-screen buffer, use the alpha channel to encode layer index\n      return this._drawPickingBuffer(props);\n    }\n    // When drawing to screen (debug mode), do not use the alpha channel so that result is always visible\n    return super.render(props);\n  }\n\n  // Private\n  // Draws list of layers and viewports into the picking buffer\n  // Note: does not sample the buffer, that has to be done by the caller\n  _drawPickingBuffer({\n    layers,\n    layerFilter,\n    views,\n    viewports,\n    onViewportActive,\n    pickingFBO,\n    deviceRect: {x, y, width, height},\n    cullRect,\n    effects,\n    pass = 'picking',\n    pickZ,\n    moduleParameters\n  }: PickLayersPassRenderOptions): {\n    decodePickingColor: PickingColorDecoder | null;\n    stats: RenderStats;\n  } {\n    const gl = this.gl;\n    this.pickZ = pickZ;\n    const colorEncoderState = this._resetColorEncoder(pickZ);\n\n    // Make sure we clear scissor test and fbo bindings in case of exceptions\n    // We are only interested in one pixel, no need to render anything else\n    // Note that the callback here is called synchronously.\n    // Set blend mode for picking\n    // always overwrite existing pixel with [r,g,b,layerIndex]\n    const renderStatus = withParameters(\n      gl,\n      {\n        scissorTest: true,\n        scissor: [x, y, width, height],\n        clearColor: [0, 0, 0, 0],\n        // When used as Mapbox custom layer, the context state may be dirty\n        // TODO - Remove when mapbox fixes this issue\n        // https://github.com/mapbox/mapbox-gl-js/issues/7801\n        depthMask: true,\n        depthTest: true,\n        depthRange: [0, 1],\n        colorMask: [true, true, true, true],\n        // Blending\n        ...PICKING_PARAMETERS,\n        blend: !pickZ\n      },\n      () =>\n        super.render({\n          target: pickingFBO,\n          layers,\n          layerFilter,\n          views,\n          viewports,\n          onViewportActive,\n          cullRect,\n          effects: effects?.filter(e => e.useInPicking),\n          pass,\n          isPicking: true,\n          moduleParameters\n        })\n    );\n\n    // Clear the temp field\n    this._colorEncoderState = null;\n    const decodePickingColor = colorEncoderState && decodeColor.bind(null, colorEncoderState);\n    return {decodePickingColor, stats: renderStatus};\n  }\n\n  shouldDrawLayer(layer: Layer): boolean {\n    const {pickable, operation} = layer.props;\n    return (\n      (pickable && operation.includes('draw')) ||\n      operation.includes('terrain') ||\n      operation.includes('mask')\n    );\n  }\n\n  protected getModuleParameters() {\n    return {\n      pickingActive: 1,\n      pickingAttribute: this.pickZ,\n      // turn off lighting by adding empty light source object\n      // lights shader module relies on the `lightSources` to turn on/off lighting\n      lightSources: {}\n    };\n  }\n\n  protected getLayerParameters(layer: Layer, layerIndex: number, viewport: Viewport): any {\n    const pickParameters = {...layer.props.parameters};\n    const {pickable, operation} = layer.props;\n\n    if (!this._colorEncoderState) {\n      pickParameters.blend = false;\n    } else if (pickable && operation.includes('draw')) {\n      Object.assign(pickParameters, PICKING_PARAMETERS);\n      pickParameters.blend = true;\n      pickParameters.blendColor = encodeColor(this._colorEncoderState, layer, viewport);\n    }\n    if (operation.includes('terrain')) {\n      pickParameters.blend = false;\n    }\n\n    return pickParameters;\n  }\n\n  protected _resetColorEncoder(pickZ: boolean) {\n    // Track encoded layer indices\n    this._colorEncoderState = pickZ\n      ? null\n      : {\n          byLayer: new Map<Layer, EncodedPickingColors>(),\n          byAlpha: []\n        };\n    // Temporarily store it on the instance so that it can be accessed by this.getLayerParameters\n    return this._colorEncoderState;\n  }\n}\n\n// Assign an unique alpha value for each pickable layer and track the encoding in the cache object\n// Returns normalized blend color\nfunction encodeColor(\n  encoded: {\n    byLayer: Map<Layer, EncodedPickingColors>;\n    byAlpha: EncodedPickingColors[];\n  },\n  layer: Layer,\n  viewport: Viewport\n): number[] {\n  const {byLayer, byAlpha} = encoded;\n  let a;\n\n  // Encode layerIndex in the alpha channel\n  // TODO - combine small layers to better utilize the picking color space\n  let entry = byLayer.get(layer);\n  if (entry) {\n    entry.viewports.push(viewport);\n    a = entry.a;\n  } else {\n    a = byLayer.size + 1;\n    if (a <= 255) {\n      entry = {a, layer, viewports: [viewport]};\n      byLayer.set(layer, entry);\n      byAlpha[a] = entry;\n    } else {\n      log.warn('Too many pickable layers, only picking the first 255')();\n      a = 0;\n    }\n  }\n  return [0, 0, 0, a / 255];\n}\n\n// Given a picked color, retrieve the corresponding layer and viewports from cache\nfunction decodeColor(\n  encoded: {\n    byLayer: Map<Layer, EncodedPickingColors>;\n    byAlpha: EncodedPickingColors[];\n  },\n  pickedColor: number[] | Uint8Array\n):\n  | {\n      pickedLayer: Layer;\n      pickedViewports: Viewport[];\n      pickedObjectIndex: number;\n    }\n  | undefined {\n  const entry = encoded.byAlpha[pickedColor[3]];\n  return (\n    entry && {\n      pickedLayer: entry.layer,\n      pickedViewports: entry.viewports,\n      pickedObjectIndex: entry.layer.decodePickingColor(pickedColor)\n    }\n  );\n}\n","import {clamp} from '@math.gl/core';\nimport Controller, {ControllerProps} from './controller';\nimport ViewState from './view-state';\nimport {normalizeViewportProps} from '@math.gl/web-mercator';\nimport assert from '../utils/assert';\n\nimport LinearInterpolator from '../transitions/linear-interpolator';\nimport type Viewport from '../viewports/viewport';\n\nconst PITCH_MOUSE_THRESHOLD = 5;\nconst PITCH_ACCEL = 1.2;\n\nexport type MapStateProps = {\n  /** Mapbox viewport properties */\n  /** The width of the viewport */\n  width: number;\n  /** The height of the viewport */\n  height: number;\n  /** The latitude at the center of the viewport */\n  latitude: number;\n  /** The longitude at the center of the viewport */\n  longitude: number;\n  /** The tile zoom level of the map. */\n  zoom: number;\n  /** The bearing of the viewport in degrees */\n  bearing?: number;\n  /** The pitch of the viewport in degrees */\n  pitch?: number;\n  /**\n   * Specify the altitude of the viewport camera\n   * Unit: map heights, default 1.5\n   * Non-public API, see https://github.com/mapbox/mapbox-gl-js/issues/1137\n   */\n  altitude?: number;\n  /** Viewport position */\n  position?: [number, number, number];\n\n  /** Viewport constraints */\n  maxZoom?: number;\n  minZoom?: number;\n  maxPitch?: number;\n  minPitch?: number;\n\n  /** Normalize viewport props to fit map height into viewport. Default `true` */\n  normalize?: boolean;\n};\n\ntype MapStateInternal = {\n  /** Interaction states, required to calculate change during transform */\n  /* The point on map being grabbed when the operation first started */\n  startPanLngLat?: [number, number];\n  /* Center of the zoom when the operation first started */\n  startZoomLngLat?: [number, number];\n  /* Pointer position when rotation started */\n  startRotatePos?: [number, number];\n  /** Bearing when current perspective rotate operation started */\n  startBearing?: number;\n  /** Pitch when current perspective rotate operation started */\n  startPitch?: number;\n  /** Zoom when current zoom operation started */\n  startZoom?: number;\n};\n\n/* Utils */\n\nexport class MapState extends ViewState<MapState, MapStateProps, MapStateInternal> {\n  makeViewport: (props: Record<string, any>) => Viewport;\n\n  constructor(\n    options: MapStateProps &\n      MapStateInternal & {\n        makeViewport: (props: Record<string, any>) => Viewport;\n      }\n  ) {\n    const {\n      /** Mapbox viewport properties */\n      /** The width of the viewport */\n      width,\n      /** The height of the viewport */\n      height,\n      /** The latitude at the center of the viewport */\n      latitude,\n      /** The longitude at the center of the viewport */\n      longitude,\n      /** The tile zoom level of the map. */\n      zoom,\n      /** The bearing of the viewport in degrees */\n      bearing = 0,\n      /** The pitch of the viewport in degrees */\n      pitch = 0,\n      /**\n       * Specify the altitude of the viewport camera\n       * Unit: map heights, default 1.5\n       * Non-public API, see https://github.com/mapbox/mapbox-gl-js/issues/1137\n       */\n      altitude = 1.5,\n      /** Viewport position */\n      position = [0, 0, 0],\n\n      /** Viewport constraints */\n      maxZoom = 20,\n      minZoom = 0,\n      maxPitch = 60,\n      minPitch = 0,\n\n      /** Interaction states, required to calculate change during transform */\n      /* The point on map being grabbed when the operation first started */\n      startPanLngLat,\n      /* Center of the zoom when the operation first started */\n      startZoomLngLat,\n      /* Pointer position when rotation started */\n      startRotatePos,\n      /** Bearing when current perspective rotate operation started */\n      startBearing,\n      /** Pitch when current perspective rotate operation started */\n      startPitch,\n      /** Zoom when current zoom operation started */\n      startZoom,\n\n      /** Normalize viewport props to fit map height into viewport */\n      normalize = true\n    } = options;\n\n    assert(Number.isFinite(longitude)); // `longitude` must be supplied\n    assert(Number.isFinite(latitude)); // `latitude` must be supplied\n    assert(Number.isFinite(zoom)); // `zoom` must be supplied\n\n    super(\n      {\n        width,\n        height,\n        latitude,\n        longitude,\n        zoom,\n        bearing,\n        pitch,\n        altitude,\n        maxZoom,\n        minZoom,\n        maxPitch,\n        minPitch,\n        normalize,\n        position\n      },\n      {\n        startPanLngLat,\n        startZoomLngLat,\n        startRotatePos,\n        startBearing,\n        startPitch,\n        startZoom\n      }\n    );\n\n    this.makeViewport = options.makeViewport;\n  }\n\n  /**\n   * Start panning\n   * @param {[Number, Number]} pos - position on screen where the pointer grabs\n   */\n  panStart({pos}: {pos: [number, number]}): MapState {\n    return this._getUpdatedState({\n      startPanLngLat: this._unproject(pos)\n    });\n  }\n\n  /**\n   * Pan\n   * @param {[Number, Number]} pos - position on screen where the pointer is\n   * @param {[Number, Number], optional} startPos - where the pointer grabbed at\n   *   the start of the operation. Must be supplied of `panStart()` was not called\n   */\n  pan({pos, startPos}: {pos: [number, number]; startPos?: [number, number]}): MapState {\n    const startPanLngLat = this.getState().startPanLngLat || this._unproject(startPos);\n\n    if (!startPanLngLat) {\n      return this;\n    }\n\n    const viewport = this.makeViewport(this.getViewportProps());\n    const newProps = viewport.panByPosition(startPanLngLat, pos);\n\n    return this._getUpdatedState(newProps);\n  }\n\n  /**\n   * End panning\n   * Must call if `panStart()` was called\n   */\n  panEnd(): MapState {\n    return this._getUpdatedState({\n      startPanLngLat: null\n    });\n  }\n\n  /**\n   * Start rotating\n   * @param {[Number, Number]} pos - position on screen where the center is\n   */\n  rotateStart({pos}: {pos: [number, number]}): MapState {\n    return this._getUpdatedState({\n      startRotatePos: pos,\n      startBearing: this.getViewportProps().bearing,\n      startPitch: this.getViewportProps().pitch\n    });\n  }\n\n  /**\n   * Rotate\n   * @param {[Number, Number]} pos - position on screen where the center is\n   */\n  rotate({\n    pos,\n    deltaAngleX = 0,\n    deltaAngleY = 0\n  }: {\n    pos?: [number, number];\n    deltaAngleX?: number;\n    deltaAngleY?: number;\n  }): MapState {\n    const {startRotatePos, startBearing, startPitch} = this.getState();\n\n    if (!startRotatePos || startBearing === undefined || startPitch === undefined) {\n      return this;\n    }\n    let newRotation;\n    if (pos) {\n      newRotation = this._getNewRotation(pos, startRotatePos, startPitch, startBearing);\n    } else {\n      newRotation = {\n        bearing: startBearing + deltaAngleX,\n        pitch: startPitch + deltaAngleY\n      };\n    }\n    return this._getUpdatedState(newRotation);\n  }\n\n  /**\n   * End rotating\n   * Must call if `rotateStart()` was called\n   */\n  rotateEnd(): MapState {\n    return this._getUpdatedState({\n      startBearing: null,\n      startPitch: null\n    });\n  }\n\n  /**\n   * Start zooming\n   * @param {[Number, Number]} pos - position on screen where the center is\n   */\n  zoomStart({pos}: {pos: [number, number]}): MapState {\n    return this._getUpdatedState({\n      startZoomLngLat: this._unproject(pos),\n      startZoom: this.getViewportProps().zoom\n    });\n  }\n\n  /**\n   * Zoom\n   * @param {[Number, Number]} pos - position on screen where the current center is\n   * @param {[Number, Number]} startPos - the center position at\n   *   the start of the operation. Must be supplied of `zoomStart()` was not called\n   * @param {Number} scale - a number between [0, 1] specifying the accumulated\n   *   relative scale.\n   */\n  zoom({\n    pos,\n    startPos,\n    scale\n  }: {\n    pos: [number, number];\n    startPos?: [number, number];\n    scale: number;\n  }): MapState {\n    // Make sure we zoom around the current mouse position rather than map center\n    let {startZoom, startZoomLngLat} = this.getState();\n\n    if (!startZoomLngLat) {\n      // We have two modes of zoom:\n      // scroll zoom that are discrete events (transform from the current zoom level),\n      // and pinch zoom that are continuous events (transform from the zoom level when\n      // pinch started).\n      // If startZoom state is defined, then use the startZoom state;\n      // otherwise assume discrete zooming\n      startZoom = this.getViewportProps().zoom;\n      startZoomLngLat = this._unproject(startPos) || this._unproject(pos);\n    }\n    if (!startZoomLngLat) {\n      return this;\n    }\n\n    const {maxZoom, minZoom} = this.getViewportProps();\n    let zoom = (startZoom as number) + Math.log2(scale);\n    zoom = clamp(zoom, minZoom, maxZoom);\n\n    const zoomedViewport = this.makeViewport({...this.getViewportProps(), zoom});\n\n    return this._getUpdatedState({\n      zoom,\n      ...zoomedViewport.panByPosition(startZoomLngLat, pos)\n    });\n  }\n\n  /**\n   * End zooming\n   * Must call if `zoomStart()` was called\n   */\n  zoomEnd(): MapState {\n    return this._getUpdatedState({\n      startZoomLngLat: null,\n      startZoom: null\n    });\n  }\n\n  zoomIn(speed: number = 2): MapState {\n    return this._zoomFromCenter(speed);\n  }\n\n  zoomOut(speed: number = 2): MapState {\n    return this._zoomFromCenter(1 / speed);\n  }\n\n  moveLeft(speed: number = 100): MapState {\n    return this._panFromCenter([speed, 0]);\n  }\n\n  moveRight(speed: number = 100): MapState {\n    return this._panFromCenter([-speed, 0]);\n  }\n\n  moveUp(speed: number = 100): MapState {\n    return this._panFromCenter([0, speed]);\n  }\n\n  moveDown(speed: number = 100): MapState {\n    return this._panFromCenter([0, -speed]);\n  }\n\n  rotateLeft(speed: number = 15): MapState {\n    return this._getUpdatedState({\n      bearing: this.getViewportProps().bearing - speed\n    });\n  }\n\n  rotateRight(speed: number = 15): MapState {\n    return this._getUpdatedState({\n      bearing: this.getViewportProps().bearing + speed\n    });\n  }\n\n  rotateUp(speed: number = 10): MapState {\n    return this._getUpdatedState({\n      pitch: this.getViewportProps().pitch + speed\n    });\n  }\n\n  rotateDown(speed: number = 10): MapState {\n    return this._getUpdatedState({\n      pitch: this.getViewportProps().pitch - speed\n    });\n  }\n\n  shortestPathFrom(viewState: MapState): MapStateProps {\n    // const endViewStateProps = new this.ControllerState(endProps).shortestPathFrom(startViewstate);\n    const fromProps = viewState.getViewportProps();\n    const props = {...this.getViewportProps()};\n    const {bearing, longitude} = props;\n\n    if (Math.abs(bearing - fromProps.bearing) > 180) {\n      props.bearing = bearing < 0 ? bearing + 360 : bearing - 360;\n    }\n    if (Math.abs(longitude - fromProps.longitude) > 180) {\n      props.longitude = longitude < 0 ? longitude + 360 : longitude - 360;\n    }\n    return props;\n  }\n\n  // Apply any constraints (mathematical or defined by _viewportProps) to map state\n  applyConstraints(props: Required<MapStateProps>): Required<MapStateProps> {\n    // Ensure zoom is within specified range\n    const {maxZoom, minZoom, zoom} = props;\n    props.zoom = clamp(zoom, minZoom, maxZoom);\n\n    // Ensure pitch is within specified range\n    const {maxPitch, minPitch, pitch} = props;\n    props.pitch = clamp(pitch, minPitch, maxPitch);\n\n    // Normalize viewport props to fit map height into viewport\n    const {normalize = true} = props;\n    if (normalize) {\n      Object.assign(props, normalizeViewportProps(props));\n    }\n\n    return props;\n  }\n\n  /* Private methods */\n\n  _zoomFromCenter(scale) {\n    const {width, height} = this.getViewportProps();\n    return this.zoom({\n      pos: [width / 2, height / 2],\n      scale\n    });\n  }\n\n  _panFromCenter(offset) {\n    const {width, height} = this.getViewportProps();\n    return this.pan({\n      startPos: [width / 2, height / 2],\n      pos: [width / 2 + offset[0], height / 2 + offset[1]]\n    });\n  }\n\n  _getUpdatedState(newProps): MapState {\n    // @ts-ignore\n    return new this.constructor({\n      makeViewport: this.makeViewport,\n      ...this.getViewportProps(),\n      ...this.getState(),\n      ...newProps\n    });\n  }\n\n  _unproject(pos?: [number, number]): [number, number] | undefined {\n    const viewport = this.makeViewport(this.getViewportProps());\n    // @ts-ignore\n    return pos && viewport.unproject(pos);\n  }\n\n  _getNewRotation(\n    pos: [number, number],\n    startPos: [number, number],\n    startPitch: number,\n    startBearing: number\n  ): {\n    pitch: number;\n    bearing: number;\n  } {\n    const deltaX = pos[0] - startPos[0];\n    const deltaY = pos[1] - startPos[1];\n    const centerY = pos[1];\n    const startY = startPos[1];\n    const {width, height} = this.getViewportProps();\n\n    const deltaScaleX = deltaX / width;\n    let deltaScaleY = 0;\n\n    if (deltaY > 0) {\n      if (Math.abs(height - startY) > PITCH_MOUSE_THRESHOLD) {\n        // Move from 0 to -1 as we drag upwards\n        deltaScaleY = (deltaY / (startY - height)) * PITCH_ACCEL;\n      }\n    } else if (deltaY < 0) {\n      if (startY > PITCH_MOUSE_THRESHOLD) {\n        // Move from 0 to 1 as we drag upwards\n        deltaScaleY = 1 - centerY / startY;\n      }\n    }\n    // clamp deltaScaleY to [-1, 1] so that rotation is constrained between minPitch and maxPitch.\n    // deltaScaleX does not need to be clamped as bearing does not have constraints.\n    deltaScaleY = clamp(deltaScaleY, -1, 1);\n\n    const {minPitch, maxPitch} = this.getViewportProps();\n\n    const bearing = startBearing + 180 * deltaScaleX;\n    let pitch = startPitch;\n    if (deltaScaleY > 0) {\n      // Gradually increase pitch\n      pitch = startPitch + deltaScaleY * (maxPitch - startPitch);\n    } else if (deltaScaleY < 0) {\n      // Gradually decrease pitch\n      pitch = startPitch - deltaScaleY * (minPitch - startPitch);\n    }\n\n    return {\n      pitch,\n      bearing\n    };\n  }\n}\n\nexport default class MapController extends Controller<MapState> {\n  ControllerState = MapState;\n\n  transition = {\n    transitionDuration: 300,\n    transitionInterpolator: new LinearInterpolator({\n      transitionProps: {\n        compare: ['longitude', 'latitude', 'zoom', 'bearing', 'pitch', 'position'],\n        required: ['longitude', 'latitude', 'zoom']\n      }\n    })\n  };\n\n  dragMode: 'pan' | 'rotate' = 'pan';\n\n  setProps(props: ControllerProps & MapStateProps) {\n    props.position = props.position || [0, 0, 0];\n    const oldProps = this.props;\n\n    super.setProps(props);\n\n    const dimensionChanged = !oldProps || oldProps.height !== props.height;\n    if (dimensionChanged) {\n      // Dimensions changed, normalize the props\n      this.updateViewport(\n        new this.ControllerState({\n          makeViewport: this.makeViewport,\n          ...props,\n          ...this.state\n        })\n      );\n    }\n  }\n}\n","import {equals} from '@math.gl/core';\nimport assert from '../utils/assert';\n\nexport default abstract class TransitionInterpolator {\n  protected _propsToCompare: string[];\n  protected _propsToExtract: string[];\n  protected _requiredProps?: string[];\n\n  /**\n   * @param opts {array|object}\n   * @param opts.compare {array} - prop names used in equality check\n   * @param opts.extract {array} - prop names needed for interpolation\n   * @param opts.required {array} - prop names that must be supplied\n   * alternatively, supply one list of prop names as `opts` if all of the above are the same.\n   */\n  constructor(opts: {compare: string[]; extract?: string[]; required?: string[]}) {\n    const {compare, extract, required} = opts;\n\n    this._propsToCompare = compare;\n    this._propsToExtract = extract || compare;\n    this._requiredProps = required;\n  }\n\n  /**\n   * Checks if two sets of props need transition in between\n   * @param currentProps {object} - a list of viewport props\n   * @param nextProps {object} - a list of viewport props\n   * @returns {bool} - true if two props are equivalent\n   */\n  arePropsEqual(currentProps: Record<string, any>, nextProps: Record<string, any>): boolean {\n    for (const key of this._propsToCompare) {\n      if (\n        !(key in currentProps) ||\n        !(key in nextProps) ||\n        !equals(currentProps[key], nextProps[key])\n      ) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Called before transition starts to validate/pre-process start and end props\n   * @param startProps {object} - a list of starting viewport props\n   * @param endProps {object} - a list of target viewport props\n   * @returns {Object} {start, end} - start and end props to be passed\n   *   to `interpolateProps`\n   */\n  initializeProps(\n    startProps: Record<string, any>,\n    endProps: Record<string, any>\n  ): {\n    start: Record<string, any>;\n    end: Record<string, any>;\n  } {\n    const startViewStateProps = {};\n    const endViewStateProps = {};\n\n    for (const key of this._propsToExtract) {\n      if (key in startProps || key in endProps) {\n        startViewStateProps[key] = startProps[key];\n        endViewStateProps[key] = endProps[key];\n      }\n    }\n\n    this._checkRequiredProps(startViewStateProps);\n    this._checkRequiredProps(endViewStateProps);\n\n    return {start: startViewStateProps, end: endViewStateProps};\n  }\n\n  /**\n   * Returns viewport props in transition\n   * @param startProps {object} - a list of starting viewport props\n   * @param endProps {object} - a list of target viewport props\n   * @param t {number} - a time factor between [0, 1]\n   * @returns {object} - a list of interpolated viewport props\n   */\n  abstract interpolateProps(\n    startProps: Record<string, any>,\n    endProps: Record<string, any>,\n    t: number\n  ): Record<string, any>;\n\n  /**\n   * Returns transition duration\n   * @param startProps {object} - a list of starting viewport props\n   * @param endProps {object} - a list of target viewport props\n   * @returns {Number} - transition duration in milliseconds\n   */\n  getDuration(startProps: Record<string, any>, endProps: Record<string, any>): number {\n    return endProps.transitionDuration;\n  }\n\n  _checkRequiredProps(props) {\n    if (!this._requiredProps) {\n      return;\n    }\n\n    this._requiredProps.forEach(propName => {\n      const value = props[propName];\n      assert(\n        Number.isFinite(value) || Array.isArray(value),\n        `${propName} is required for transition`\n      );\n    });\n  }\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n// Handles tesselation of polygons with holes\n// - 2D surfaces\n// - 2D outlines\n// - 3D surfaces (top and sides only)\n// - 3D wireframes (not yet)\nimport * as Polygon from './polygon';\nimport {Tesselator} from '@deck.gl/core';\nimport {cutPolygonByGrid, cutPolygonByMercatorBounds} from '@math.gl/polygon';\n\nimport type {\n  PolygonGeometry,\n  NormalizedPolygonGeometry,\n  FlatComplexPolygonGeometry\n} from './polygon';\nimport type {TypedArray} from '@math.gl/core';\n\ntype GeometryUpdateContext = {\n  vertexStart: number;\n  indexStart: number;\n  geometrySize: number;\n  geometryIndex: number;\n};\n\ntype CutPolygon = FlatComplexPolygonGeometry & {\n  edgeTypes: number[];\n};\n\n// This class is set up to allow querying one attribute at a time\n// the way the AttributeManager expects it\nexport default class PolygonTesselator extends Tesselator<\n  PolygonGeometry,\n  NormalizedPolygonGeometry | CutPolygon[],\n  {\n    fp64?: boolean;\n    IndexType?: Uint32ArrayConstructor | Uint16ArrayConstructor;\n    resolution?: number;\n    wrapLongitude?: boolean;\n    preproject?: (xy: number[]) => number[];\n    full3d?: boolean;\n  }\n> {\n  constructor(opts) {\n    const {fp64, IndexType = Uint32Array} = opts;\n    super({\n      ...opts,\n      attributes: {\n        positions: {size: 3, type: fp64 ? Float64Array : Float32Array},\n        vertexValid: {type: Uint8ClampedArray, size: 1},\n        indices: {type: IndexType, size: 1}\n      }\n    });\n  }\n\n  /** Get attribute by name */\n  get(attributeName: string): TypedArray | null {\n    const {attributes} = this;\n    if (attributeName === 'indices') {\n      return attributes.indices && attributes.indices.subarray(0, this.vertexCount);\n    }\n\n    return attributes[attributeName];\n  }\n\n  /** Override base Tesselator method */\n  updateGeometry(opts) {\n    super.updateGeometry(opts);\n\n    const externalIndices = this.buffers.indices;\n    if (externalIndices) {\n      // @ts-ignore (2339) value is not defined on TypedArray (fall through)\n      this.vertexCount = (externalIndices.value || externalIndices).length;\n    } else if (this.data && !this.getGeometry) {\n      throw new Error('missing indices buffer');\n    }\n  }\n\n  /** Implement base Tesselator interface */\n  protected normalizeGeometry(polygon: PolygonGeometry): NormalizedPolygonGeometry | CutPolygon[] {\n    if (this.normalize) {\n      const normalizedPolygon = Polygon.normalize(polygon, this.positionSize);\n      if (this.opts.resolution) {\n        return cutPolygonByGrid(\n          Polygon.getPositions(normalizedPolygon),\n          Polygon.getHoleIndices(normalizedPolygon),\n          {\n            size: this.positionSize,\n            gridResolution: this.opts.resolution,\n            edgeTypes: true\n          }\n        ) as CutPolygon[];\n      }\n      if (this.opts.wrapLongitude) {\n        return cutPolygonByMercatorBounds(\n          Polygon.getPositions(normalizedPolygon),\n          Polygon.getHoleIndices(normalizedPolygon),\n          {\n            size: this.positionSize,\n            maxLatitude: 86,\n            edgeTypes: true\n          }\n        ) as CutPolygon[];\n      }\n      return normalizedPolygon;\n    }\n    // normalize is explicitly set to false, assume that user passed in already normalized polygons\n    return polygon as NormalizedPolygonGeometry;\n  }\n\n  /** Implement base Tesselator interface */\n  protected getGeometrySize(polygon: NormalizedPolygonGeometry | CutPolygon[]): number {\n    if (isCut(polygon)) {\n      let size = 0;\n      for (const subPolygon of polygon) {\n        size += this.getGeometrySize(subPolygon);\n      }\n      return size;\n    }\n    return Polygon.getPositions(polygon).length / this.positionSize;\n  }\n\n  /** Override base Tesselator method */\n  protected getGeometryFromBuffer(buffer) {\n    if (this.normalize || !this.buffers.indices) {\n      return super.getGeometryFromBuffer(buffer);\n    }\n    // we don't need to read the positions if no normalization/tesselation\n    return null;\n  }\n\n  /** Implement base Tesselator interface */\n  protected updateGeometryAttributes(\n    polygon: NormalizedPolygonGeometry | CutPolygon[] | null,\n    context: GeometryUpdateContext\n  ) {\n    if (polygon && isCut(polygon)) {\n      for (const subPolygon of polygon) {\n        const geometrySize = this.getGeometrySize(subPolygon);\n        context.geometrySize = geometrySize;\n        this.updateGeometryAttributes(subPolygon, context);\n        context.vertexStart += geometrySize;\n        context.indexStart = this.indexStarts[context.geometryIndex + 1];\n      }\n    } else {\n      this._updateIndices(polygon, context);\n      this._updatePositions(polygon, context);\n      this._updateVertexValid(polygon, context);\n    }\n  }\n\n  // Flatten the indices array\n  private _updateIndices(\n    polygon: NormalizedPolygonGeometry | null,\n    {geometryIndex, vertexStart: offset, indexStart}: GeometryUpdateContext\n  ) {\n    const {attributes, indexStarts, typedArrayManager} = this;\n\n    let target = attributes.indices;\n    if (!target || !polygon) {\n      return;\n    }\n    let i = indexStart;\n\n    // 1. get triangulated indices for the internal areas\n    const indices = Polygon.getSurfaceIndices(\n      polygon,\n      this.positionSize,\n      this.opts.preproject,\n      this.opts.full3d\n    );\n\n    // make sure the buffer is large enough\n    target = typedArrayManager.allocate(target, indexStart + indices.length, {\n      copy: true\n    });\n\n    // 2. offset each index by the number of indices in previous polygons\n    for (let j = 0; j < indices.length; j++) {\n      target[i++] = indices[j] + offset;\n    }\n\n    indexStarts[geometryIndex + 1] = indexStart + indices.length;\n    attributes.indices = target;\n  }\n\n  // Flatten out all the vertices of all the sub subPolygons\n  private _updatePositions(\n    polygon: NormalizedPolygonGeometry | null,\n    {vertexStart, geometrySize}: GeometryUpdateContext\n  ) {\n    const {\n      attributes: {positions},\n      positionSize\n    } = this;\n    if (!positions || !polygon) {\n      return;\n    }\n    const polygonPositions = Polygon.getPositions(polygon);\n\n    for (let i = vertexStart, j = 0; j < geometrySize; i++, j++) {\n      const x = polygonPositions[j * positionSize];\n      const y = polygonPositions[j * positionSize + 1];\n      const z = positionSize > 2 ? polygonPositions[j * positionSize + 2] : 0;\n\n      positions[i * 3] = x;\n      positions[i * 3 + 1] = y;\n      positions[i * 3 + 2] = z;\n    }\n  }\n\n  private _updateVertexValid(\n    polygon: NormalizedPolygonGeometry | null,\n    {vertexStart, geometrySize}: GeometryUpdateContext\n  ) {\n    const {positionSize} = this;\n    const vertexValid = this.attributes.vertexValid as TypedArray;\n    const holeIndices = polygon && Polygon.getHoleIndices(polygon);\n    /* We are reusing the some buffer for `nextPositions` by offseting one vertex\n     * to the left. As a result,\n     * the last vertex of each ring overlaps with the first vertex of the next ring.\n     * `vertexValid` is used to mark the end of each ring so we don't draw these\n     * segments:\n      positions      A0 A1 A2 A3 A4 B0 B1 B2 C0 ...\n      nextPositions  A1 A2 A3 A4 B0 B1 B2 C0 C1 ...\n      vertexValid    1  1  1  1  0  1  1  0  1 ...\n     */\n    if (polygon && (polygon as CutPolygon).edgeTypes) {\n      vertexValid.set((polygon as CutPolygon).edgeTypes, vertexStart);\n    } else {\n      vertexValid.fill(1, vertexStart, vertexStart + geometrySize);\n    }\n    if (holeIndices) {\n      for (let j = 0; j < holeIndices.length; j++) {\n        vertexValid[vertexStart + holeIndices[j] / positionSize - 1] = 0;\n      }\n    }\n    vertexValid[vertexStart + geometrySize - 1] = 0;\n  }\n}\n\nfunction isCut(polygon: NormalizedPolygonGeometry | CutPolygon[]): polygon is CutPolygon[] {\n  return Array.isArray(polygon) && polygon.length > 0 && !Number.isFinite(polygon[0]);\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nexport default `\\\n\nattribute vec2 vertexPositions;\nattribute float vertexValid;\n\nuniform bool extruded;\nuniform bool isWireframe;\nuniform float elevationScale;\nuniform float opacity;\n\nvarying vec4 vColor;\n\nstruct PolygonProps {\n  vec4 fillColors;\n  vec4 lineColors;\n  vec3 positions;\n  vec3 nextPositions;\n  vec3 pickingColors;\n  vec3 positions64Low;\n  vec3 nextPositions64Low;\n  float elevations;\n};\n\nvec3 project_offset_normal(vec3 vector) {\n  if (project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT ||\n    project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT_OFFSETS) {\n    // normals generated by the polygon tesselator are in lnglat offsets instead of meters\n    return normalize(vector * project_uCommonUnitsPerWorldUnit);\n  }\n  return project_normal(vector);\n}\n\nvoid calculatePosition(PolygonProps props) {\n#ifdef IS_SIDE_VERTEX\n  if(vertexValid < 0.5){\n    gl_Position = vec4(0.);\n    return;\n  }\n#endif\n\n  vec3 pos;\n  vec3 pos64Low;\n  vec3 normal;\n  vec4 colors = isWireframe ? props.lineColors : props.fillColors;\n\n  geometry.worldPosition = props.positions;\n  geometry.worldPositionAlt = props.nextPositions;\n  geometry.pickingColor = props.pickingColors;\n\n#ifdef IS_SIDE_VERTEX\n  pos = mix(props.positions, props.nextPositions, vertexPositions.x);\n  pos64Low = mix(props.positions64Low, props.nextPositions64Low, vertexPositions.x);\n#else\n  pos = props.positions;\n  pos64Low = props.positions64Low;\n#endif\n\n  if (extruded) {\n    pos.z += props.elevations * vertexPositions.y * elevationScale;\n  }\n  gl_Position = project_position_to_clipspace(pos, pos64Low, vec3(0.), geometry.position);\n\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n\n  if (extruded) {\n  #ifdef IS_SIDE_VERTEX\n    normal = vec3(\n      props.positions.y - props.nextPositions.y + (props.positions64Low.y - props.nextPositions64Low.y),\n      props.nextPositions.x - props.positions.x + (props.nextPositions64Low.x - props.positions64Low.x),\n      0.0);\n    normal = project_offset_normal(normal);\n  #else\n    normal = project_normal(vec3(0.0, 0.0, 1.0));\n  #endif\n    geometry.normal = normal;\n    vec3 lightColor = lighting_getLightColor(colors.rgb, project_uCameraPosition, geometry.position.xyz, normal);\n    vColor = vec4(lightColor, colors.a * opacity);\n  } else {\n    vColor = vec4(colors.rgb, colors.a * opacity);\n  }\n  DECKGL_FILTER_COLOR(vColor, geometry);\n}\n`;\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport main from './solid-polygon-layer-vertex-main.glsl';\n\nexport default `\\\n#define SHADER_NAME solid-polygon-layer-vertex-shader\n\nattribute vec3 positions;\nattribute vec3 positions64Low;\nattribute float elevations;\nattribute vec4 fillColors;\nattribute vec4 lineColors;\nattribute vec3 pickingColors;\n\n${main}\n\nvoid main(void) {\n  PolygonProps props;\n\n  props.positions = positions;\n  props.positions64Low = positions64Low;\n  props.elevations = elevations;\n  props.fillColors = fillColors;\n  props.lineColors = lineColors;\n  props.pickingColors = pickingColors;\n\n  calculatePosition(props);\n}\n`;\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport main from './solid-polygon-layer-vertex-main.glsl';\n\nexport default `\\\n#define SHADER_NAME solid-polygon-layer-vertex-shader-side\n#define IS_SIDE_VERTEX\n\n\nattribute vec3 instancePositions;\nattribute vec3 nextPositions;\nattribute vec3 instancePositions64Low;\nattribute vec3 nextPositions64Low;\nattribute float instanceElevations;\nattribute vec4 instanceFillColors;\nattribute vec4 instanceLineColors;\nattribute vec3 instancePickingColors;\n\n${main}\n\nvoid main(void) {\n  PolygonProps props;\n\n  #if RING_WINDING_ORDER_CW == 1\n    props.positions = instancePositions;\n    props.positions64Low = instancePositions64Low;\n    props.nextPositions = nextPositions;\n    props.nextPositions64Low = nextPositions64Low;\n  #else\n    props.positions = nextPositions;\n    props.positions64Low = nextPositions64Low;\n    props.nextPositions = instancePositions;\n    props.nextPositions64Low = instancePositions64Low;\n  #endif\n  props.elevations = instanceElevations;\n  props.fillColors = instanceFillColors;\n  props.lineColors = instanceLineColors;\n  props.pickingColors = instancePickingColors;\n\n  calculatePosition(props);\n}\n`;\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {Layer, project32, gouraudLighting, picking, COORDINATE_SYSTEM} from '@deck.gl/core';\nimport GL from '@luma.gl/constants';\nimport {Model, Geometry, hasFeatures, FEATURES} from '@luma.gl/core';\n\n// Polygon geometry generation is managed by the polygon tesselator\nimport PolygonTesselator from './polygon-tesselator';\n\nimport vsTop from './solid-polygon-layer-vertex-top.glsl';\nimport vsSide from './solid-polygon-layer-vertex-side.glsl';\nimport fs from './solid-polygon-layer-fragment.glsl';\n\nimport type {\n  LayerProps,\n  LayerDataSource,\n  Color,\n  Material,\n  Accessor,\n  AccessorFunction,\n  UpdateParameters,\n  GetPickingInfoParams,\n  PickingInfo,\n  DefaultProps\n} from '@deck.gl/core';\nimport type {PolygonGeometry} from './polygon';\n\ntype _SolidPolygonLayerProps<DataT> = {\n  data: LayerDataSource<DataT>;\n  /** Whether to fill the polygons\n   * @default true\n   */\n  filled?: boolean;\n  /** Whether to extrude the polygons\n   * @default false\n   */\n  extruded?: boolean;\n  /** Whether to generate a line wireframe of the polygon.\n   * @default false\n   */\n  wireframe?: boolean;\n  /**\n   * (Experimental) If `false`, will skip normalizing the coordinates returned by `getPolygon`.\n   * @default true\n   */\n  _normalize?: boolean;\n  /**\n   * (Experimental) This prop is only effective with `_normalize: false`.\n   * It specifies the winding order of rings in the polygon data, one of 'CW' (clockwise) and 'CCW' (counter-clockwise)\n   */\n  _windingOrder?: 'CW' | 'CCW';\n\n  /**\n   * (Experimental) This prop is only effective with `XYZ` data.\n   * When true, polygon tesselation will be performed on the plane with the largest area, instead of the xy plane.\n   * @default false\n   */\n  _full3d?: boolean;\n\n  /** Elevation multiplier.\n   * @default 1\n   */\n  elevationScale?: number;\n\n  /** Polygon geometry accessor. */\n  getPolygon?: AccessorFunction<DataT, PolygonGeometry>;\n  /** Extrusion height accessor.\n   * @default 1000\n   */\n  getElevation?: Accessor<DataT, number>;\n  /** Fill color accessor.\n   * @default [0, 0, 0, 255]\n   */\n  getFillColor?: Accessor<DataT, Color>;\n  /** Stroke color accessor.\n   * @default [0, 0, 0, 255]\n   */\n  getLineColor?: Accessor<DataT, Color>;\n\n  /**\n   * Material settings for lighting effect. Applies if `extruded: true`\n   *\n   * @default true\n   * @see https://deck.gl/docs/developer-guide/using-lighting\n   */\n  material?: Material;\n};\n\n/** Render filled and/or extruded polygons. */\nexport type SolidPolygonLayerProps<DataT = any> = _SolidPolygonLayerProps<DataT> & LayerProps;\n\nconst DEFAULT_COLOR: [number, number, number, number] = [0, 0, 0, 255];\n\nconst defaultProps: DefaultProps<SolidPolygonLayerProps> = {\n  filled: true,\n  extruded: false,\n  wireframe: false,\n  _normalize: true,\n  _windingOrder: 'CW',\n  _full3d: false,\n\n  elevationScale: {type: 'number', min: 0, value: 1},\n\n  getPolygon: {type: 'accessor', value: f => f.polygon},\n  getElevation: {type: 'accessor', value: 1000},\n  getFillColor: {type: 'accessor', value: DEFAULT_COLOR},\n  getLineColor: {type: 'accessor', value: DEFAULT_COLOR},\n\n  material: true\n};\n\nconst ATTRIBUTE_TRANSITION = {\n  enter: (value, chunk) => {\n    return chunk.length ? chunk.subarray(chunk.length - value.length) : value;\n  }\n};\n\nexport default class SolidPolygonLayer<DataT = any, ExtraPropsT extends {} = {}> extends Layer<\n  ExtraPropsT & Required<_SolidPolygonLayerProps<DataT>>\n> {\n  static defaultProps = defaultProps;\n  static layerName = 'SolidPolygonLayer';\n\n  state!: {\n    topModel?: Model;\n    sideModel?: Model;\n    models?: Model[];\n    numInstances: number;\n    polygonTesselator: PolygonTesselator;\n  };\n\n  getShaders(type) {\n    return super.getShaders({\n      vs: type === 'top' ? vsTop : vsSide,\n      fs,\n      defines: {\n        RING_WINDING_ORDER_CW: !this.props._normalize && this.props._windingOrder === 'CCW' ? 0 : 1\n      },\n      modules: [project32, gouraudLighting, picking]\n    });\n  }\n\n  get wrapLongitude(): boolean {\n    return false;\n  }\n\n  initializeState() {\n    const {gl, viewport} = this.context;\n    let {coordinateSystem} = this.props;\n    const {_full3d} = this.props;\n    if (viewport.isGeospatial && coordinateSystem === COORDINATE_SYSTEM.DEFAULT) {\n      coordinateSystem = COORDINATE_SYSTEM.LNGLAT;\n    }\n\n    let preproject: ((xy: number[]) => number[]) | undefined;\n\n    if (coordinateSystem === COORDINATE_SYSTEM.LNGLAT) {\n      if (_full3d) {\n        preproject = viewport.projectPosition.bind(viewport);\n      } else {\n        preproject = viewport.projectFlat.bind(viewport);\n      }\n    }\n\n    this.setState({\n      numInstances: 0,\n      polygonTesselator: new PolygonTesselator({\n        // Lnglat coordinates are usually projected non-linearly, which affects tesselation results\n        // Provide a preproject function if the coordinates are in lnglat\n        preproject,\n        fp64: this.use64bitPositions(),\n        IndexType: !gl || hasFeatures(gl, FEATURES.ELEMENT_INDEX_UINT32) ? Uint32Array : Uint16Array\n      })\n    });\n\n    const attributeManager = this.getAttributeManager()!;\n    const noAlloc = true;\n\n    attributeManager.remove(['instancePickingColors']);\n\n    /* eslint-disable max-len */\n    attributeManager.add({\n      indices: {\n        size: 1,\n        isIndexed: true,\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        update: this.calculateIndices,\n        noAlloc\n      },\n      positions: {\n        size: 3,\n        type: GL.DOUBLE,\n        fp64: this.use64bitPositions(),\n        transition: ATTRIBUTE_TRANSITION,\n        accessor: 'getPolygon',\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        update: this.calculatePositions,\n        noAlloc,\n        shaderAttributes: {\n          positions: {\n            vertexOffset: 0,\n            divisor: 0\n          },\n          instancePositions: {\n            vertexOffset: 0,\n            divisor: 1\n          },\n          nextPositions: {\n            vertexOffset: 1,\n            divisor: 1\n          }\n        }\n      },\n      vertexValid: {\n        size: 1,\n        divisor: 1,\n        type: GL.UNSIGNED_BYTE,\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        update: this.calculateVertexValid,\n        noAlloc\n      },\n      elevations: {\n        size: 1,\n        transition: ATTRIBUTE_TRANSITION,\n        accessor: 'getElevation',\n        shaderAttributes: {\n          elevations: {\n            divisor: 0\n          },\n          instanceElevations: {\n            divisor: 1\n          }\n        }\n      },\n      fillColors: {\n        size: this.props.colorFormat.length,\n        type: GL.UNSIGNED_BYTE,\n        normalized: true,\n        transition: ATTRIBUTE_TRANSITION,\n        accessor: 'getFillColor',\n        defaultValue: DEFAULT_COLOR,\n        shaderAttributes: {\n          fillColors: {\n            divisor: 0\n          },\n          instanceFillColors: {\n            divisor: 1\n          }\n        }\n      },\n      lineColors: {\n        size: this.props.colorFormat.length,\n        type: GL.UNSIGNED_BYTE,\n        normalized: true,\n        transition: ATTRIBUTE_TRANSITION,\n        accessor: 'getLineColor',\n        defaultValue: DEFAULT_COLOR,\n        shaderAttributes: {\n          lineColors: {\n            divisor: 0\n          },\n          instanceLineColors: {\n            divisor: 1\n          }\n        }\n      },\n      pickingColors: {\n        size: 3,\n        type: GL.UNSIGNED_BYTE,\n        accessor: (object, {index, target: value}) =>\n          this.encodePickingColor(object && object.__source ? object.__source.index : index, value),\n        shaderAttributes: {\n          pickingColors: {\n            divisor: 0\n          },\n          instancePickingColors: {\n            divisor: 1\n          }\n        }\n      }\n    });\n    /* eslint-enable max-len */\n  }\n\n  getPickingInfo(params: GetPickingInfoParams): PickingInfo {\n    const info = super.getPickingInfo(params);\n    const {index} = info;\n    const {data} = this.props;\n\n    // Check if data comes from a composite layer, wrapped with getSubLayerRow\n    if (data[0] && data[0].__source) {\n      // index decoded from picking color refers to the source index\n      info.object = (data as any[]).find(d => d.__source.index === index);\n    }\n    return info;\n  }\n\n  disablePickingIndex(objectIndex: number) {\n    const {data} = this.props;\n\n    // Check if data comes from a composite layer, wrapped with getSubLayerRow\n    if (data[0] && data[0].__source) {\n      // index decoded from picking color refers to the source index\n      for (let i = 0; i < (data as any[]).length; i++) {\n        if (data[i].__source.index === objectIndex) {\n          this._disablePickingIndex(i);\n        }\n      }\n    } else {\n      super.disablePickingIndex(objectIndex);\n    }\n  }\n\n  draw({uniforms}) {\n    const {extruded, filled, wireframe, elevationScale} = this.props;\n    const {topModel, sideModel, polygonTesselator} = this.state;\n\n    const renderUniforms = {\n      ...uniforms,\n      extruded: Boolean(extruded),\n      elevationScale\n    };\n\n    // Note: the order is important\n    if (sideModel) {\n      sideModel.setInstanceCount(polygonTesselator.instanceCount - 1);\n      sideModel.setUniforms(renderUniforms);\n      if (wireframe) {\n        sideModel.setDrawMode(GL.LINE_STRIP);\n        sideModel.setUniforms({isWireframe: true}).draw();\n      }\n      if (filled) {\n        sideModel.setDrawMode(GL.TRIANGLE_FAN);\n        sideModel.setUniforms({isWireframe: false}).draw();\n      }\n    }\n\n    if (topModel) {\n      topModel.setVertexCount(polygonTesselator.vertexCount);\n      topModel.setUniforms(renderUniforms).draw();\n    }\n  }\n\n  updateState(updateParams: UpdateParameters<this>) {\n    super.updateState(updateParams);\n\n    this.updateGeometry(updateParams);\n\n    const {props, oldProps, changeFlags} = updateParams;\n    const attributeManager = this.getAttributeManager();\n\n    const regenerateModels =\n      changeFlags.extensionsChanged ||\n      props.filled !== oldProps.filled ||\n      props.extruded !== oldProps.extruded;\n\n    if (regenerateModels) {\n      this.state.models?.forEach(model => model.delete());\n\n      this.setState(this._getModels(this.context.gl));\n      attributeManager!.invalidateAll();\n    }\n  }\n\n  protected updateGeometry({props, oldProps, changeFlags}: UpdateParameters<this>) {\n    const geometryConfigChanged =\n      changeFlags.dataChanged ||\n      (changeFlags.updateTriggersChanged &&\n        (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getPolygon));\n\n    // When the geometry config  or the data is changed,\n    // tessellator needs to be invoked\n    if (geometryConfigChanged) {\n      const {polygonTesselator} = this.state;\n      const buffers = (props.data as any).attributes || {};\n      polygonTesselator.updateGeometry({\n        data: props.data,\n        normalize: props._normalize,\n        geometryBuffer: buffers.getPolygon,\n        buffers,\n        getGeometry: props.getPolygon,\n        positionFormat: props.positionFormat,\n        wrapLongitude: props.wrapLongitude,\n        // TODO - move the flag out of the viewport\n        resolution: this.context.viewport.resolution,\n        fp64: this.use64bitPositions(),\n        dataChanged: changeFlags.dataChanged,\n        full3d: props._full3d\n      });\n\n      this.setState({\n        numInstances: polygonTesselator.instanceCount,\n        startIndices: polygonTesselator.vertexStarts\n      });\n\n      if (!changeFlags.dataChanged) {\n        // Base `layer.updateState` only invalidates all attributes on data change\n        // Cover the rest of the scenarios here\n        this.getAttributeManager()!.invalidateAll();\n      }\n    }\n  }\n\n  protected _getModels(gl: WebGLRenderingContext): Model {\n    const {id, filled, extruded} = this.props;\n\n    let topModel;\n    let sideModel;\n\n    if (filled) {\n      const shaders = this.getShaders('top');\n      shaders.defines.NON_INSTANCED_MODEL = 1;\n\n      topModel = new Model(gl, {\n        ...shaders,\n        id: `${id}-top`,\n        drawMode: GL.TRIANGLES,\n        attributes: {\n          vertexPositions: new Float32Array([0, 1])\n        },\n        uniforms: {\n          isWireframe: false,\n          isSideVertex: false\n        },\n        vertexCount: 0,\n        isIndexed: true\n      });\n    }\n    if (extruded) {\n      sideModel = new Model(gl, {\n        ...this.getShaders('side'),\n        id: `${id}-side`,\n        geometry: new Geometry({\n          drawMode: GL.LINES,\n          vertexCount: 4,\n          attributes: {\n            // top right - top left - bootom left - bottom right\n            vertexPositions: {\n              size: 2,\n              value: new Float32Array([1, 0, 0, 0, 0, 1, 1, 1])\n            }\n          }\n        }),\n        instanceCount: 0,\n        isInstanced: 1\n      });\n\n      sideModel.userData.excludeAttributes = {indices: true};\n    }\n\n    return {\n      models: [sideModel, topModel].filter(Boolean),\n      topModel,\n      sideModel\n    };\n  }\n\n  protected calculateIndices(attribute) {\n    const {polygonTesselator} = this.state;\n    attribute.startIndices = polygonTesselator.indexStarts;\n    attribute.value = polygonTesselator.get('indices');\n  }\n\n  protected calculatePositions(attribute) {\n    const {polygonTesselator} = this.state;\n    attribute.startIndices = polygonTesselator.vertexStarts;\n    attribute.value = polygonTesselator.get('positions');\n  }\n\n  protected calculateVertexValid(attribute) {\n    attribute.value = this.state.polygonTesselator.get('vertexValid');\n  }\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nexport default `\\\n#define SHADER_NAME solid-polygon-layer-fragment-shader\n\nprecision highp float;\n\nvarying vec4 vColor;\n\nvoid main(void) {\n  gl_FragColor = vColor;\n\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n`;\n","import {projectPosition} from '../../shaderlib/project/project-functions';\nimport {COORDINATE_SYSTEM} from '../../lib/constants';\n\nimport type Layer from '../../lib/layer';\n\nconst DEFAULT_LIGHT_COLOR = [255, 255, 255];\nconst DEFAULT_LIGHT_INTENSITY = 1.0;\nconst DEFAULT_ATTENUATION = [0, 0, 1];\nconst DEFAULT_LIGHT_POSITION = [0.0, 0.0, 1.0];\n\nlet idCount = 0;\n\nexport type PointLightOptions = {\n  id?: string;\n  /** Light color, [r, g, b] in the 0-255 range\n   * @default [255, 255, 255]\n   */\n  color?: number[];\n  /** Light intensity, higher number is brighter\n   * @default 1.0\n   */\n  intensity?: number;\n  /** Light position [x, y, z] in the common space\n   * @default [0.0, 0.0, 1.0]\n   */\n  position?: number[];\n  /** Light attenuation\n   * @default [0.0, 0.0, 1.0]\n   */\n  attenuation?: number[];\n};\n\nexport class PointLight {\n  id: string;\n  color: number[];\n  intensity: number;\n  type = 'point';\n  position: number[];\n  attenuation: number[];\n\n  protected projectedLight: PointLight;\n\n  constructor(props: PointLightOptions = {}) {\n    const {color = DEFAULT_LIGHT_COLOR} = props;\n    const {intensity = DEFAULT_LIGHT_INTENSITY} = props;\n    const {position = DEFAULT_LIGHT_POSITION} = props;\n\n    this.id = props.id || `point-${idCount++}`;\n    this.color = color;\n    this.intensity = intensity;\n    this.type = 'point';\n    this.position = position;\n    this.attenuation = getAttenuation(props);\n    this.projectedLight = {...this};\n  }\n\n  getProjectedLight({layer}: {layer: Layer}): PointLight {\n    const {projectedLight} = this;\n    const viewport = layer.context.viewport;\n    const {coordinateSystem, coordinateOrigin} = layer.props;\n    const position = projectPosition(this.position, {\n      viewport,\n      coordinateSystem,\n      coordinateOrigin,\n      fromCoordinateSystem: viewport.isGeospatial\n        ? COORDINATE_SYSTEM.LNGLAT\n        : COORDINATE_SYSTEM.CARTESIAN,\n      fromCoordinateOrigin: [0, 0, 0]\n    });\n    projectedLight.color = this.color;\n    projectedLight.intensity = this.intensity;\n    projectedLight.position = position;\n    return projectedLight;\n  }\n}\n\nfunction getAttenuation(props: PointLightOptions): number[] {\n  if (props.attenuation) {\n    return props.attenuation;\n  }\n  if ('intensity' in props) {\n    return [0, 0, props.intensity || 0];\n  }\n  return DEFAULT_ATTENUATION;\n}\n","/* eslint-disable camelcase */\nimport {PointLight} from './point-light';\nimport {getUniformsFromViewport} from '../../shaderlib/project/viewport-uniforms';\nimport type Layer from '../../lib/layer';\n\nexport default class CameraLight extends PointLight {\n  getProjectedLight({layer}: {layer: Layer}): PointLight {\n    const {projectedLight} = this;\n    const viewport = layer.context.viewport;\n    const {coordinateSystem, coordinateOrigin, modelMatrix} = layer.props;\n    const {project_uCameraPosition} = getUniformsFromViewport({\n      viewport,\n      modelMatrix,\n      coordinateSystem,\n      coordinateOrigin\n    });\n    projectedLight.color = this.color;\n    projectedLight.intensity = this.intensity;\n    projectedLight.position = project_uCameraPosition;\n    return projectedLight;\n  }\n}\n","import Viewport from '../viewports/viewport';\n\nimport {Matrix4} from '@math.gl/core';\nimport {pixelsToWorld, fovyToAltitude} from '@math.gl/web-mercator';\n\nconst DEGREES_TO_RADIANS = Math.PI / 180;\n\nfunction getViewMatrix({\n  height,\n  focalDistance,\n  orbitAxis,\n  rotationX,\n  rotationOrbit,\n  zoom\n}: {\n  height: number;\n  focalDistance: number;\n  orbitAxis: 'Y' | 'Z';\n  rotationX: number;\n  rotationOrbit: number;\n  zoom: number;\n}): Matrix4 {\n  // We position the camera so that one common space unit (world space unit scaled by zoom)\n  // at the target maps to one screen pixel.\n  // This is a similar technique to that used in web mercator projection\n  // By doing so we are able to convert between common space and screen space sizes efficiently\n  // in the vertex shader.\n  const up = orbitAxis === 'Z' ? [0, 0, 1] : [0, 1, 0];\n  const eye = orbitAxis === 'Z' ? [0, -focalDistance, 0] : [0, 0, focalDistance];\n\n  const viewMatrix = new Matrix4().lookAt({eye, up});\n\n  viewMatrix.rotateX(rotationX * DEGREES_TO_RADIANS);\n  if (orbitAxis === 'Z') {\n    viewMatrix.rotateZ(rotationOrbit * DEGREES_TO_RADIANS);\n  } else {\n    viewMatrix.rotateY(rotationOrbit * DEGREES_TO_RADIANS);\n  }\n\n  // When height increases, we need to increase the distance from the camera to the target to\n  // keep the 1:1 mapping. However, this also changes the projected depth of each position by\n  // moving them further away between the near/far plane.\n  // Without modifying the default near/far planes, we instead scale down the common space to\n  // remove the distortion to the depth field.\n  const projectionScale = Math.pow(2, zoom) / height;\n  viewMatrix.scale(projectionScale);\n\n  return viewMatrix;\n}\n\nexport type OrbitViewportOptions = {\n  /** Name of the viewport */\n  id?: string;\n  /** Left offset from the canvas edge, in pixels */\n  x?: number;\n  /** Top offset from the canvas edge, in pixels */\n  y?: number;\n  /** Viewport width in pixels */\n  width?: number;\n  /** Viewport height in pixels */\n  height?: number;\n  /** Axis with 360 degrees rotating freedom, either `'Y'` or `'Z'`, default to `'Z'`. */\n  orbitAxis?: 'Y' | 'Z';\n  /** The world position at the center of the viewport. Default `[0, 0, 0]`. */\n  target?: [number, number, number];\n  /** The zoom level of the viewport. `zoom: 0` maps one unit distance to one pixel on screen, and increasing `zoom` by `1` scales the same object to twice as large. Default `0`. */\n  zoom?: number;\n  /** Rotating angle around orbit axis. Default `0`. */\n  rotationOrbit?: number;\n  /** Rotating angle around orbit axis. Default `0`. */\n  rotationX?: number;\n  /** Custom projection matrix */\n  projectionMatrix?: number[];\n  /** Field of view covered by camera, in the perspective case. In degrees. Default `50`. */\n  fovy?: number;\n  /** Distance of near clipping plane. Default `0.1`. */\n  near?: number;\n  /** Distance of far clipping plane. Default `1000`. */\n  far?: number;\n  /** Whether to create an orthographic or perspective projection matrix. Default is `false` (perspective projection). */\n  orthographic?: boolean;\n};\n\nexport default class OrbitViewport extends Viewport {\n  projectedCenter: number[];\n\n  constructor(props: OrbitViewportOptions) {\n    const {\n      height,\n\n      projectionMatrix,\n\n      fovy = 50, // For setting camera position\n      orbitAxis = 'Z', // Orbit axis with 360 degrees rotating freedom, can only be 'Y' or 'Z'\n      target = [0, 0, 0], // Which point is camera looking at, default origin\n\n      rotationX = 0, // Rotating angle around X axis\n      rotationOrbit = 0, // Rotating angle around orbit axis\n\n      zoom = 0\n    } = props;\n\n    const focalDistance = projectionMatrix ? projectionMatrix[5] / 2 : fovyToAltitude(fovy);\n\n    super({\n      ...props,\n      // in case viewState contains longitude/latitude values,\n      // make sure that the base Viewport class does not treat this as a geospatial viewport\n      longitude: undefined,\n      viewMatrix: getViewMatrix({\n        height: height || 1,\n        focalDistance,\n        orbitAxis,\n        rotationX,\n        rotationOrbit,\n        zoom\n      }),\n      fovy,\n      focalDistance,\n      position: target,\n      zoom\n    });\n\n    this.projectedCenter = this.project(this.center);\n  }\n\n  unproject(xyz: number[], {topLeft = true}: {topLeft?: boolean} = {}): [number, number, number] {\n    const [x, y, z = this.projectedCenter[2]] = xyz;\n\n    const y2 = topLeft ? y : this.height - y;\n    const [X, Y, Z] = pixelsToWorld([x, y2, z], this.pixelUnprojectionMatrix);\n    return [X, Y, Z];\n  }\n\n  panByPosition(coords: number[], pixel: number[]): OrbitViewportOptions {\n    const p0 = this.project(coords);\n    const nextCenter = [\n      this.width / 2 + p0[0] - pixel[0],\n      this.height / 2 + p0[1] - pixel[1],\n      this.projectedCenter[2]\n    ];\n    return {\n      target: this.unproject(nextCenter)\n    };\n  }\n}\n","import Viewport from '../viewports/viewport';\n\nimport {Matrix4, clamp} from '@math.gl/core';\nimport {pixelsToWorld} from '@math.gl/web-mercator';\nimport * as vec2 from 'gl-matrix/vec2';\n\nimport type {Padding} from './viewport';\n\nconst viewMatrix = new Matrix4().lookAt({eye: [0, 0, 1]});\n\nfunction getProjectionMatrix({\n  width,\n  height,\n  near,\n  far,\n  padding\n}: {\n  width: number;\n  height: number;\n  near: number;\n  far: number;\n  padding: Padding | null;\n}) {\n  let left = -width / 2;\n  let right = width / 2;\n  let bottom = -height / 2;\n  let top = height / 2;\n  if (padding) {\n    const {left: l = 0, right: r = 0, top: t = 0, bottom: b = 0} = padding;\n    const offsetX = clamp((l + width - r) / 2, 0, width) - width / 2;\n    const offsetY = clamp((t + height - b) / 2, 0, height) - height / 2;\n    left -= offsetX;\n    right -= offsetX;\n    bottom += offsetY;\n    top += offsetY;\n  }\n\n  return new Matrix4().ortho({\n    left,\n    right,\n    bottom,\n    top,\n    near,\n    far\n  });\n}\n\nexport type OrthographicViewportOptions = {\n  /** Name of the viewport */\n  id?: string;\n  /** Left offset from the canvas edge, in pixels */\n  x?: number;\n  /** Top offset from the canvas edge, in pixels */\n  y?: number;\n  /** Viewport width in pixels */\n  width?: number;\n  /** Viewport height in pixels */\n  height?: number;\n  /** The world position at the center of the viewport. Default `[0, 0, 0]`. */\n  target?: [number, number, number] | [number, number];\n  /**  The zoom level of the viewport. `zoom: 0` maps one unit distance to one pixel on screen, and increasing `zoom` by `1` scales the same object to twice as large.\n   *   To apply independent zoom levels to the X and Y axes, supply an array `[zoomX, zoomY]`. Default `0`. */\n  zoom?: number | [number, number];\n  /** Padding around the viewport, in pixels. */\n  padding?: Padding | null;\n  /** Distance of near clipping plane. Default `0.1`. */\n  near?: number;\n  /** Distance of far clipping plane. Default `1000`. */\n  far?: number;\n  /** Whether to use top-left coordinates (`true`) or bottom-left coordinates (`false`). Default `true`. */\n  flipY?: boolean;\n};\n\nexport default class OrthographicViewport extends Viewport {\n  constructor(props: OrthographicViewportOptions) {\n    const {\n      width,\n      height,\n      near = 0.1,\n      far = 1000,\n      zoom = 0,\n      target = [0, 0, 0],\n      padding = null,\n      flipY = true\n    } = props;\n    const zoomX = Array.isArray(zoom) ? zoom[0] : zoom;\n    const zoomY = Array.isArray(zoom) ? zoom[1] : zoom;\n    const zoom_ = Math.min(zoomX, zoomY);\n    const scale = Math.pow(2, zoom_);\n\n    let distanceScales;\n    if (zoomX !== zoomY) {\n      const scaleX = Math.pow(2, zoomX);\n      const scaleY = Math.pow(2, zoomY);\n\n      distanceScales = {\n        unitsPerMeter: [scaleX / scale, scaleY / scale, 1],\n        metersPerUnit: [scale / scaleX, scale / scaleY, 1]\n      };\n    }\n\n    super({\n      ...props,\n      // in case viewState contains longitude/latitude values,\n      // make sure that the base Viewport class does not treat this as a geospatial viewport\n      longitude: undefined,\n      position: target,\n      viewMatrix: viewMatrix.clone().scale([scale, scale * (flipY ? -1 : 1), scale]),\n      projectionMatrix: getProjectionMatrix({\n        width: width || 1,\n        height: height || 1,\n        padding,\n        near,\n        far\n      }),\n      zoom: zoom_,\n      distanceScales\n    });\n  }\n\n  projectFlat([X, Y]: number[]): [number, number] {\n    const {unitsPerMeter} = this.distanceScales;\n    return [X * unitsPerMeter[0], Y * unitsPerMeter[1]];\n  }\n\n  unprojectFlat([x, y]: number[]): [number, number] {\n    const {metersPerUnit} = this.distanceScales;\n    return [x * metersPerUnit[0], y * metersPerUnit[1]];\n  }\n\n  /* Needed by LinearInterpolator */\n  panByPosition(coords: number[], pixel: number[]): OrthographicViewportOptions {\n    const fromLocation = pixelsToWorld(pixel, this.pixelUnprojectionMatrix);\n    const toLocation = this.projectFlat(coords);\n\n    const translate = vec2.add([], toLocation, vec2.negate([], fromLocation));\n    const newCenter = vec2.add([], this.center, translate);\n\n    return {target: this.unprojectFlat(newCenter)};\n  }\n}\n","// Copyright (c) 2017 Uber Technologies, Inc.\n// MIT License\n// Adaptation of THREE.js Spherical class, under MIT license\nimport Vector3 from './vector3';\nimport {formatValue, equals, config} from '../lib/common';\nimport {degrees, radians, clamp} from '../lib/common';\nimport * as vec3 from 'gl-matrix/vec3';\nimport {NumericArray} from '@math.gl/types';\n\ntype SphericalCoordinatesOptions = {\n  phi?: number;\n  theta?: number;\n  radius?: number;\n  bearing?: number;\n  pitch?: number;\n  altitude?: number;\n  radiusScale?: number;\n};\n\ntype FormatOptions = {\n  printTypes?: boolean;\n};\n\n// TODO - import epsilon\nconst EPSILON = 0.000001;\nconst EARTH_RADIUS_METERS = 6371000;\n\n/**\n * The poles (phi) are at the positive and negative y axis.\n * The equator starts at positive z.\n * @link https://en.wikipedia.org/wiki/Spherical_coordinate_system\n */\nexport default class SphericalCoordinates {\n  phi: number;\n  theta: number;\n  radius: number;\n  radiusScale: number;\n  // bearing: number;\n  // pitch: number;\n  // altitude: number;\n\n  // lnglatZ coordinates\n  // longitude: number;\n  // latitude: number;\n  // lng: number;\n  // lat: number;\n  // z: number;\n\n  /**\n   * Creates a new SphericalCoordinates object\n   * @param options\n   * @param [options.phi] =0 - rotation around X (latitude)\n   * @param [options.theta] =0 - rotation around Y (longitude)\n   * @param [options.radius] =1 - Distance from center\n   * @param [options.bearing]\n   * @param [options.pitch]\n   * @param [options.altitude]\n   * @param [options.radiusScale] =1\n   */\n  // eslint-disable-next-line complexity\n  constructor({\n    phi = 0,\n    theta = 0,\n    radius = 1,\n    bearing,\n    pitch,\n    altitude,\n    radiusScale = EARTH_RADIUS_METERS\n  }: SphericalCoordinatesOptions = {}) {\n    this.phi = phi;\n    this.theta = theta;\n    // TODO - silently accepts illegal 0\n    this.radius = radius || altitude || 1; // radial distance from center\n    this.radiusScale = radiusScale || 1; // Used by lngLatZ\n    if (bearing !== undefined) {\n      this.bearing = bearing; // up / down towards top and bottom pole\n    }\n    if (pitch !== undefined) {\n      this.pitch = pitch; // around the equator of the sphere\n    }\n    this.check();\n  }\n\n  toString(): string {\n    return this.formatString(config);\n  }\n\n  formatString({printTypes = false}: FormatOptions): string {\n    const f = formatValue;\n    return `${printTypes ? 'Spherical' : ''}\\\n[rho:${f(this.radius)},theta:${f(this.theta)},phi:${f(this.phi)}]`;\n  }\n\n  equals(other: SphericalCoordinates): boolean {\n    return (\n      equals(this.radius, other.radius) &&\n      equals(this.theta, other.theta) &&\n      equals(this.phi, other.phi)\n    );\n  }\n\n  exactEquals(other: SphericalCoordinates): boolean {\n    return this.radius === other.radius && this.theta === other.theta && this.phi === other.phi;\n  }\n\n  /* eslint-disable brace-style */\n  // Cartographic (bearing 0 north, pitch 0 look from above)\n  get bearing(): number {\n    return 180 - degrees(this.phi);\n  }\n\n  set bearing(v: number) {\n    this.phi = Math.PI - radians(v);\n  }\n\n  get pitch(): number {\n    return degrees(this.theta);\n  }\n\n  set pitch(v: number) {\n    this.theta = radians(v);\n  }\n\n  // get pitch() { return 90 - degrees(this.phi); }\n  // set pitch(v) { this.phi = radians(v) + Math.PI / 2; }\n  // get altitude() { return this.radius - 1; } // relative altitude\n  // lnglatZ coordinates\n  get longitude(): number {\n    return degrees(this.phi);\n  }\n\n  get latitude(): number {\n    return degrees(this.theta);\n  }\n\n  get lng(): number {\n    return degrees(this.phi);\n  }\n\n  get lat(): number {\n    return degrees(this.theta);\n  }\n\n  get z(): number {\n    return (this.radius - 1) * this.radiusScale;\n  }\n\n  /* eslint-enable brace-style */\n  set(radius: number, phi: number, theta: number): this {\n    this.radius = radius;\n    this.phi = phi;\n    this.theta = theta;\n    return this.check();\n  }\n\n  clone(): SphericalCoordinates {\n    return new SphericalCoordinates().copy(this);\n  }\n\n  copy(other: SphericalCoordinates): this {\n    this.radius = other.radius;\n    this.phi = other.phi;\n    this.theta = other.theta;\n    return this.check();\n  }\n\n  fromLngLatZ([lng, lat, z]: [number, number, number]): this {\n    this.radius = 1 + z / this.radiusScale;\n    this.phi = radians(lat);\n    this.theta = radians(lng);\n    return this.check();\n  }\n\n  fromVector3(v: Readonly<NumericArray>): this {\n    this.radius = vec3.length(v);\n    if (this.radius > 0) {\n      this.theta = Math.atan2(v[0], v[1]); // equator angle around y-up axis\n      this.phi = Math.acos(clamp(v[2] / this.radius, -1, 1)); // polar angle\n    }\n    return this.check();\n  }\n\n  toVector3(): Vector3 {\n    return new Vector3(0, 0, this.radius)\n      .rotateX({radians: this.theta})\n      .rotateZ({radians: this.phi});\n  }\n\n  // restrict phi to be betwee EPS and PI-EPS\n  makeSafe(): this {\n    this.phi = Math.max(EPSILON, Math.min(Math.PI - EPSILON, this.phi));\n    return this;\n  }\n\n  check(): this {\n    // this.makeSafe();\n    if (!Number.isFinite(this.phi) || !Number.isFinite(this.theta) || !(this.radius > 0)) {\n      throw new Error('SphericalCoordinates: some fields set to invalid numbers');\n    }\n    return this;\n  }\n}\n","import Viewport from '../viewports/viewport';\nimport {getMeterZoom} from '@math.gl/web-mercator';\nimport {Matrix4, _SphericalCoordinates as SphericalCoordinates} from '@math.gl/core';\n\nexport type FirstPersonViewportOptions = {\n  /** Name of the viewport */\n  id?: string;\n  /** Left offset from the canvas edge, in pixels */\n  x?: number;\n  /** Top offset from the canvas edge, in pixels */\n  y?: number;\n  /** Viewport width in pixels */\n  width?: number;\n  /** Viewport height in pixels */\n  height?: number;\n  /** Longitude of the camera, in the geospatial case. */\n  longitude?: number;\n  /** Latitude of the camera, in the geospatial case. */\n  latitude?: number;\n  /** Meter offsets of the camera from the lng-lat anchor point. Default `[0, 0, 0]`. */\n  position?: [number, number, number];\n  /** Bearing (heading) of the camera in degrees. Default `0` (north). */\n  bearing?: number;\n  /** Pitch (tilt) of the camera in degrees. Default `0` (horizontal). */\n  pitch?: number;\n  /** Transform applied to the camera position and direction */\n  modelMatrix?: number[] | null;\n  /** Custom projection matrix */\n  projectionMatrix?: number[];\n  /** The up direction, default positive z axis. */\n  up?: [number, number, number];\n  /** Field of view covered by camera, in degrees. Default `75`. */\n  fovy?: number;\n  /** Distance of near clipping plane. Default `0.1`. */\n  near?: number;\n  /** Distance of far clipping plane. Default `1000`. */\n  far?: number;\n  /** Modifier of viewport scale. Corresponds to the number of pixels per meter. Default `1`. */\n  focalDistance?: number;\n};\n\nexport default class FirstPersonViewport extends Viewport {\n  longitude?: number;\n  latitude?: number;\n\n  constructor(props: FirstPersonViewportOptions) {\n    // TODO - push direction handling into Matrix4.lookAt\n    const {longitude, latitude, modelMatrix, bearing = 0, pitch = 0, up = [0, 0, 1]} = props;\n\n    // Always calculate direction from bearing and pitch\n    const spherical = new SphericalCoordinates({\n      bearing,\n      // Avoid \"pixel project matrix not invertible\" error\n      pitch: pitch === -90 ? 0.0001 : 90 + pitch\n    });\n    const dir = spherical.toVector3().normalize();\n\n    // Direction is relative to model coordinates, of course\n    const center = modelMatrix ? new Matrix4(modelMatrix).transformAsVector(dir) : dir;\n\n    // Just the direction. All the positioning is done in viewport.js\n    const zoom = Number.isFinite(latitude) ? getMeterZoom({latitude: latitude as number}) : 0;\n    const scale = Math.pow(2, zoom);\n    const viewMatrix = new Matrix4().lookAt({eye: [0, 0, 0], center, up}).scale(scale);\n\n    super({\n      ...props,\n      zoom,\n      viewMatrix\n    });\n\n    this.latitude = latitude;\n    this.longitude = longitude;\n  }\n}\n","import Controller from './controller';\nimport ViewState from './view-state';\nimport {mod} from '../utils/math-utils';\nimport LinearInterpolator from '../transitions/linear-interpolator';\n\nimport {Vector3, _SphericalCoordinates as SphericalCoordinates, clamp} from '@math.gl/core';\n\nconst MOVEMENT_SPEED = 20;\n\ntype FirstPersonStateProps = {\n  width: number;\n  height: number;\n\n  position?: number[];\n  bearing?: number;\n  pitch?: number;\n\n  // Geospatial anchor\n  longitude?: number | null;\n  latitude?: number | null;\n\n  maxPitch?: number;\n  minPitch?: number;\n};\n\ntype FirstPersonStateInternal = {\n  startRotatePos?: [number, number];\n  startBearing?: number;\n  startPitch?: number;\n  startZoomPosition?: number[];\n};\n\nclass FirstPersonState extends ViewState<\n  FirstPersonState,\n  FirstPersonStateProps,\n  FirstPersonStateInternal\n> {\n  constructor(options: FirstPersonStateProps & FirstPersonStateInternal) {\n    const {\n      /* Viewport arguments */\n      width, // Width of viewport\n      height, // Height of viewport\n\n      // Position and orientation\n      position = [0, 0, 0], // typically in meters from anchor point\n\n      bearing = 0, // Rotation around y axis\n      pitch = 0, // Rotation around x axis\n\n      // Geospatial anchor\n      longitude = null,\n      latitude = null,\n\n      maxPitch = 90,\n      minPitch = -90,\n\n      // Model state when the rotate operation first started\n      startRotatePos,\n      startBearing,\n      startPitch,\n      startZoomPosition\n    } = options;\n\n    super(\n      {\n        width,\n        height,\n        position,\n        bearing,\n        pitch,\n        longitude,\n        latitude,\n        maxPitch,\n        minPitch\n      },\n      {\n        startRotatePos,\n        startBearing,\n        startPitch,\n        startZoomPosition\n      }\n    );\n  }\n\n  /* Public API */\n\n  /**\n   * Start panning\n   * @param {[Number, Number]} pos - position on screen where the pointer grabs\n   */\n  panStart(): FirstPersonState {\n    return this;\n  }\n\n  /**\n   * Pan\n   * @param {[Number, Number]} pos - position on screen where the pointer is\n   */\n  pan(): FirstPersonState {\n    return this;\n  }\n\n  /**\n   * End panning\n   * Must call if `panStart()` was called\n   */\n  panEnd(): FirstPersonState {\n    return this;\n  }\n\n  /**\n   * Start rotating\n   * @param {[Number, Number]} pos - position on screen where the pointer grabs\n   */\n  rotateStart({pos}: {pos: [number, number]}): FirstPersonState {\n    return this._getUpdatedState({\n      startRotatePos: pos,\n      startBearing: this.getViewportProps().bearing,\n      startPitch: this.getViewportProps().pitch\n    });\n  }\n\n  /**\n   * Rotate\n   * @param {[Number, Number]} pos - position on screen where the pointer is\n   */\n  rotate({\n    pos,\n    deltaAngleX = 0,\n    deltaAngleY = 0\n  }: {\n    pos?: [number, number];\n    deltaAngleX?: number;\n    deltaAngleY: number;\n  }): FirstPersonState {\n    const {startRotatePos, startBearing, startPitch} = this.getState();\n    const {width, height} = this.getViewportProps();\n\n    if (!startRotatePos || startBearing === undefined || startPitch === undefined) {\n      return this;\n    }\n\n    let newRotation;\n    if (pos) {\n      const deltaScaleX = (pos[0] - startRotatePos[0]) / width;\n      const deltaScaleY = (pos[1] - startRotatePos[1]) / height;\n      newRotation = {\n        bearing: startBearing - deltaScaleX * 180,\n        pitch: startPitch - deltaScaleY * 90\n      };\n    } else {\n      newRotation = {\n        bearing: startBearing - deltaAngleX,\n        pitch: startPitch - deltaAngleY\n      };\n    }\n\n    return this._getUpdatedState(newRotation);\n  }\n\n  /**\n   * End rotating\n   * Must call if `rotateStart()` was called\n   */\n  rotateEnd(): FirstPersonState {\n    return this._getUpdatedState({\n      startRotatePos: null,\n      startBearing: null,\n      startPitch: null\n    });\n  }\n\n  /**\n   * Start zooming\n   * @param {[Number, Number]} pos - position on screen where the pointer grabs\n   */\n  zoomStart(): FirstPersonState {\n    return this._getUpdatedState({\n      startZoomPosition: this.getViewportProps().position\n    });\n  }\n\n  /**\n   * Zoom\n   * @param {[Number, Number]} pos - position on screen where the current center is\n   * @param {[Number, Number]} startPos - the center position at\n   *   the start of the operation. Must be supplied of `zoomStart()` was not called\n   * @param {Number} scale - a number between [0, 1] specifying the accumulated\n   *   relative scale.\n   */\n  zoom({scale}: {scale: number}): FirstPersonState {\n    let {startZoomPosition} = this.getState();\n    if (!startZoomPosition) {\n      startZoomPosition = this.getViewportProps().position;\n    }\n\n    const direction = this.getDirection();\n    return this._move(direction, Math.log2(scale) * MOVEMENT_SPEED, startZoomPosition);\n  }\n\n  /**\n   * End zooming\n   * Must call if `zoomStart()` was called\n   */\n  zoomEnd(): FirstPersonState {\n    return this._getUpdatedState({\n      startZoomPosition: null\n    });\n  }\n\n  moveLeft(speed: number = MOVEMENT_SPEED): FirstPersonState {\n    const direction = this.getDirection(true);\n    return this._move(direction.rotateZ({radians: Math.PI / 2}), speed);\n  }\n\n  moveRight(speed: number = MOVEMENT_SPEED): FirstPersonState {\n    const direction = this.getDirection(true);\n    return this._move(direction.rotateZ({radians: -Math.PI / 2}), speed);\n  }\n\n  // forward\n  moveUp(speed: number = MOVEMENT_SPEED): FirstPersonState {\n    const direction = this.getDirection(true);\n    return this._move(direction, speed);\n  }\n\n  // backward\n  moveDown(speed: number = MOVEMENT_SPEED): FirstPersonState {\n    const direction = this.getDirection(true);\n    return this._move(direction.negate(), speed);\n  }\n\n  rotateLeft(speed: number = 15): FirstPersonState {\n    return this._getUpdatedState({\n      bearing: this.getViewportProps().bearing - speed\n    });\n  }\n\n  rotateRight(speed: number = 15): FirstPersonState {\n    return this._getUpdatedState({\n      bearing: this.getViewportProps().bearing + speed\n    });\n  }\n\n  rotateUp(speed: number = 10): FirstPersonState {\n    return this._getUpdatedState({\n      pitch: this.getViewportProps().pitch + speed\n    });\n  }\n\n  rotateDown(speed: number = 10): FirstPersonState {\n    return this._getUpdatedState({\n      pitch: this.getViewportProps().pitch - speed\n    });\n  }\n\n  zoomIn(speed: number = 2): FirstPersonState {\n    return this.zoom({scale: speed});\n  }\n\n  zoomOut(speed: number = 2): FirstPersonState {\n    return this.zoom({scale: 1 / speed});\n  }\n\n  // shortest path between two view states\n  shortestPathFrom(viewState: FirstPersonState) {\n    const fromProps = viewState.getViewportProps();\n    const props = {...this.getViewportProps()};\n    const {bearing, longitude} = props;\n\n    if (Math.abs(bearing - fromProps.bearing) > 180) {\n      props.bearing = bearing < 0 ? bearing + 360 : bearing - 360;\n    }\n    if (\n      longitude !== null &&\n      fromProps.longitude !== null &&\n      Math.abs(longitude - fromProps.longitude) > 180\n    ) {\n      props.longitude = longitude < 0 ? longitude + 360 : longitude - 360;\n    }\n    return props;\n  }\n\n  /* Private methods */\n  _move(\n    direction: Vector3,\n    speed: number,\n    fromPosition: number[] = this.getViewportProps().position\n  ) {\n    const delta = direction.scale(speed);\n    return this._getUpdatedState({\n      position: new Vector3(fromPosition).add(delta)\n    });\n  }\n\n  getDirection(use2D: boolean = false): Vector3 {\n    const spherical = new SphericalCoordinates({\n      bearing: this.getViewportProps().bearing,\n      pitch: use2D ? 90 : 90 + this.getViewportProps().pitch\n    });\n    const direction = spherical.toVector3().normalize();\n    return direction;\n  }\n\n  _getUpdatedState(newProps: Record<string, any>): FirstPersonState {\n    // Update _viewportProps\n    return new FirstPersonState({...this.getViewportProps(), ...this.getState(), ...newProps});\n  }\n\n  // Apply any constraints (mathematical or defined by _viewportProps) to map state\n  applyConstraints(props: Required<FirstPersonStateProps>): Required<FirstPersonStateProps> {\n    // Ensure pitch and zoom are within specified range\n    const {pitch, maxPitch, minPitch, longitude, bearing} = props;\n    props.pitch = clamp(pitch, minPitch, maxPitch);\n\n    // Normalize degrees\n    if (longitude !== null && (longitude < -180 || longitude > 180)) {\n      props.longitude = mod(longitude + 180, 360) - 180;\n    }\n    if (bearing < -180 || bearing > 180) {\n      props.bearing = mod(bearing + 180, 360) - 180;\n    }\n\n    return props;\n  }\n}\n\nexport default class FirstPersonController extends Controller<FirstPersonState> {\n  ControllerState = FirstPersonState;\n\n  transition = {\n    transitionDuration: 300,\n    transitionInterpolator: new LinearInterpolator(['position', 'pitch', 'bearing'])\n  };\n}\n","import View, {CommonViewState} from './view';\nimport FirstPersonViewport from '../viewports/first-person-viewport';\nimport FirstPersonController from '../controllers/first-person-controller';\n\nexport type FirstPersonViewState = {\n  /** Longitude of the camera, in the geospatial case. */\n  longitude?: number;\n  /** Latitude of the camera, in the geospatial case. */\n  latitude?: number;\n  /** Meter offsets of the camera from the lng-lat anchor point. Default `[0, 0, 0]`. */\n  position?: [number, number, number];\n  /** Bearing (heading) of the camera in degrees. Default `0` (north). */\n  bearing?: number;\n  /** Pitch (tilt) of the camera in degrees. Default `0` (horizontal). */\n  pitch?: number;\n  /** Min pitch angle. Default `-90` (up). */\n  minPitch?: number;\n  /** Max pitch angle. Default `90` (down). */\n  maxPitch?: number;\n  /** Transform applied to the camera position and direction */\n  modelMatrix?: number[] | null;\n} & CommonViewState;\n\ntype FirstPersonViewProps = {\n  /** Custom projection matrix */\n  projectionMatrix?: number[];\n  /** Field of view covered by camera, in degrees. Default `75`. */\n  fovy?: number;\n  /** Distance of near clipping plane. Default `0.1`. */\n  near?: number;\n  /** Distance of far clipping plane. Default `1000`. */\n  far?: number;\n  /** Modifier of viewport scale. Corresponds to the number of pixels per meter. Default `1`. */\n  focalDistance?: number;\n};\n\nexport default class FirstPersonView extends View<FirstPersonViewState, FirstPersonViewProps> {\n  static displayName = 'FirstPersonView';\n\n  get ViewportType() {\n    return FirstPersonViewport;\n  }\n\n  get ControllerType() {\n    return FirstPersonController;\n  }\n}\n","import {clamp} from '@math.gl/core';\nimport Controller from './controller';\nimport ViewState from './view-state';\nimport {mod} from '../utils/math-utils';\n\nimport type Viewport from '../viewports/viewport';\nimport LinearInterpolator from '../transitions/linear-interpolator';\n\nexport type OrbitStateProps = {\n  width: number;\n  height: number;\n  target?: number[];\n  zoom?: number | number[];\n  rotationX?: number;\n  rotationOrbit?: number;\n\n  /** Viewport constraints */\n  maxZoom?: number;\n  minZoom?: number;\n  minRotationX?: number;\n  maxRotationX?: number;\n};\n\ntype OrbitStateInternal = {\n  startPanPosition?: number[];\n  startRotatePos?: number[];\n  startRotationX?: number;\n  startRotationOrbit?: number;\n  startZoomPosition?: number[];\n  startZoom?: number | number[];\n};\n\nexport class OrbitState extends ViewState<OrbitState, OrbitStateProps, OrbitStateInternal> {\n  makeViewport: (props: Record<string, any>) => Viewport;\n\n  constructor(\n    options: OrbitStateProps &\n      OrbitStateInternal & {\n        makeViewport: (props: Record<string, any>) => Viewport;\n      }\n  ) {\n    const {\n      /* Viewport arguments */\n      width, // Width of viewport\n      height, // Height of viewport\n      rotationX = 0, // Rotation around x axis\n      rotationOrbit = 0, // Rotation around orbit axis\n      target = [0, 0, 0],\n      zoom = 0,\n\n      /* Viewport constraints */\n      minRotationX = -90,\n      maxRotationX = 90,\n      minZoom = -Infinity,\n      maxZoom = Infinity,\n\n      /** Interaction states, required to calculate change during transform */\n      // Model state when the pan operation first started\n      startPanPosition,\n      // Model state when the rotate operation first started\n      startRotatePos,\n      startRotationX,\n      startRotationOrbit,\n      // Model state when the zoom operation first started\n      startZoomPosition,\n      startZoom\n    } = options;\n\n    super(\n      {\n        width,\n        height,\n        rotationX,\n        rotationOrbit,\n        target,\n        zoom,\n        minRotationX,\n        maxRotationX,\n        minZoom,\n        maxZoom\n      },\n      {\n        startPanPosition,\n        startRotatePos,\n        startRotationX,\n        startRotationOrbit,\n        startZoomPosition,\n        startZoom\n      }\n    );\n\n    this.makeViewport = options.makeViewport;\n  }\n\n  /**\n   * Start panning\n   * @param {[Number, Number]} pos - position on screen where the pointer grabs\n   */\n  panStart({pos}: {pos: [number, number]}): OrbitState {\n    return this._getUpdatedState({\n      startPanPosition: this._unproject(pos)\n    });\n  }\n\n  /**\n   * Pan\n   * @param {[Number, Number]} pos - position on screen where the pointer is\n   */\n  pan({pos, startPosition}: {pos: [number, number]; startPosition?: number[]}): OrbitState {\n    const startPanPosition = this.getState().startPanPosition || startPosition;\n\n    if (!startPanPosition) {\n      return this;\n    }\n\n    const viewport = this.makeViewport(this.getViewportProps());\n    const newProps = viewport.panByPosition(startPanPosition, pos);\n\n    return this._getUpdatedState(newProps);\n  }\n\n  /**\n   * End panning\n   * Must call if `panStart()` was called\n   */\n  panEnd(): OrbitState {\n    return this._getUpdatedState({\n      startPanPosition: null\n    });\n  }\n\n  /**\n   * Start rotating\n   * @param {[Number, Number]} pos - position on screen where the pointer grabs\n   */\n  rotateStart({pos}: {pos: [number, number]}): OrbitState {\n    return this._getUpdatedState({\n      startRotatePos: pos,\n      startRotationX: this.getViewportProps().rotationX,\n      startRotationOrbit: this.getViewportProps().rotationOrbit\n    });\n  }\n\n  /**\n   * Rotate\n   * @param {[Number, Number]} pos - position on screen where the pointer is\n   */\n  rotate({\n    pos,\n    deltaAngleX = 0,\n    deltaAngleY = 0\n  }: {\n    pos?: [number, number];\n    deltaAngleX?: number;\n    deltaAngleY?: number;\n  }): OrbitState {\n    const {startRotatePos, startRotationX, startRotationOrbit} = this.getState();\n    const {width, height} = this.getViewportProps();\n\n    if (!startRotatePos || startRotationX === undefined || startRotationOrbit === undefined) {\n      return this;\n    }\n\n    let newRotation;\n    if (pos) {\n      let deltaScaleX = (pos[0] - startRotatePos[0]) / width;\n      const deltaScaleY = (pos[1] - startRotatePos[1]) / height;\n\n      if (startRotationX < -90 || startRotationX > 90) {\n        // When looking at the \"back\" side of the scene, invert horizontal drag\n        // so that the camera movement follows user input\n        deltaScaleX *= -1;\n      }\n      newRotation = {\n        rotationX: startRotationX + deltaScaleY * 180,\n        rotationOrbit: startRotationOrbit + deltaScaleX * 180\n      };\n    } else {\n      newRotation = {\n        rotationX: startRotationX + deltaAngleY,\n        rotationOrbit: startRotationOrbit + deltaAngleX\n      };\n    }\n\n    return this._getUpdatedState(newRotation);\n  }\n\n  /**\n   * End rotating\n   * Must call if `rotateStart()` was called\n   */\n  rotateEnd(): OrbitState {\n    return this._getUpdatedState({\n      startRotationX: null,\n      startRotationOrbit: null\n    });\n  }\n\n  // shortest path between two view states\n  shortestPathFrom(viewState: OrbitState): OrbitStateProps {\n    const fromProps = viewState.getViewportProps();\n    const props = {...this.getViewportProps()};\n    const {rotationOrbit} = props;\n\n    if (Math.abs(rotationOrbit - fromProps.rotationOrbit) > 180) {\n      props.rotationOrbit = rotationOrbit < 0 ? rotationOrbit + 360 : rotationOrbit - 360;\n    }\n\n    return props;\n  }\n\n  /**\n   * Start zooming\n   * @param {[Number, Number]} pos - position on screen where the pointer grabs\n   */\n  zoomStart({pos}: {pos: [number, number]}): OrbitState {\n    return this._getUpdatedState({\n      startZoomPosition: this._unproject(pos),\n      startZoom: this.getViewportProps().zoom\n    });\n  }\n\n  /**\n   * Zoom\n   * @param {[Number, Number]} pos - position on screen where the current target is\n   * @param {[Number, Number]} startPos - the target position at\n   *   the start of the operation. Must be supplied of `zoomStart()` was not called\n   * @param {Number} scale - a number between [0, 1] specifying the accumulated\n   *   relative scale.\n   */\n  zoom({\n    pos,\n    startPos,\n    scale\n  }: {\n    pos: [number, number];\n    startPos?: [number, number];\n    scale: number;\n  }): OrbitState {\n    let {startZoom, startZoomPosition} = this.getState();\n    if (!startZoomPosition) {\n      // We have two modes of zoom:\n      // scroll zoom that are discrete events (transform from the current zoom level),\n      // and pinch zoom that are continuous events (transform from the zoom level when\n      // pinch started).\n      // If startZoom state is defined, then use the startZoom state;\n      // otherwise assume discrete zooming\n      startZoom = this.getViewportProps().zoom;\n      startZoomPosition = this._unproject(startPos) || this._unproject(pos);\n    }\n    if (!startZoomPosition) {\n      return this;\n    }\n    const newZoom = this._calculateNewZoom({scale, startZoom});\n    const zoomedViewport = this.makeViewport({...this.getViewportProps(), zoom: newZoom});\n\n    return this._getUpdatedState({\n      zoom: newZoom,\n      ...zoomedViewport.panByPosition(startZoomPosition, pos)\n    });\n  }\n\n  /**\n   * End zooming\n   * Must call if `zoomStart()` was called\n   */\n  zoomEnd(): OrbitState {\n    return this._getUpdatedState({\n      startZoomPosition: null,\n      startZoom: null\n    });\n  }\n\n  zoomIn(speed: number = 2): OrbitState {\n    return this._getUpdatedState({\n      zoom: this._calculateNewZoom({scale: speed})\n    });\n  }\n\n  zoomOut(speed: number = 2): OrbitState {\n    return this._getUpdatedState({\n      zoom: this._calculateNewZoom({scale: 1 / speed})\n    });\n  }\n\n  moveLeft(speed: number = 50): OrbitState {\n    return this._panFromCenter([-speed, 0]);\n  }\n\n  moveRight(speed: number = 50): OrbitState {\n    return this._panFromCenter([speed, 0]);\n  }\n\n  moveUp(speed: number = 50): OrbitState {\n    return this._panFromCenter([0, -speed]);\n  }\n\n  moveDown(speed: number = 50): OrbitState {\n    return this._panFromCenter([0, speed]);\n  }\n\n  rotateLeft(speed: number = 15): OrbitState {\n    return this._getUpdatedState({\n      rotationOrbit: this.getViewportProps().rotationOrbit - speed\n    });\n  }\n\n  rotateRight(speed: number = 15): OrbitState {\n    return this._getUpdatedState({\n      rotationOrbit: this.getViewportProps().rotationOrbit + speed\n    });\n  }\n\n  rotateUp(speed: number = 10): OrbitState {\n    return this._getUpdatedState({\n      rotationX: this.getViewportProps().rotationX - speed\n    });\n  }\n\n  rotateDown(speed: number = 10): OrbitState {\n    return this._getUpdatedState({\n      rotationX: this.getViewportProps().rotationX + speed\n    });\n  }\n\n  /* Private methods */\n\n  _unproject(pos?: number[]): number[] | undefined {\n    const viewport = this.makeViewport(this.getViewportProps());\n    // @ts-ignore\n    return pos && viewport.unproject(pos);\n  }\n\n  // Calculates new zoom\n  _calculateNewZoom({\n    scale,\n    startZoom\n  }: {\n    scale: number;\n    startZoom?: number | number[];\n  }): number | number[] {\n    const {maxZoom, minZoom} = this.getViewportProps();\n    if (startZoom === undefined) {\n      startZoom = this.getViewportProps().zoom;\n    }\n    const zoom = (startZoom as number) + Math.log2(scale);\n    return clamp(zoom, minZoom, maxZoom);\n  }\n\n  _panFromCenter(offset) {\n    const {width, height, target} = this.getViewportProps();\n    return this.pan({\n      startPosition: target,\n      pos: [width / 2 + offset[0], height / 2 + offset[1]]\n    });\n  }\n\n  _getUpdatedState(newProps): OrbitState {\n    // @ts-ignore\n    return new this.constructor({\n      makeViewport: this.makeViewport,\n      ...this.getViewportProps(),\n      ...this.getState(),\n      ...newProps\n    });\n  }\n\n  // Apply any constraints (mathematical or defined by _viewportProps) to map state\n  applyConstraints(props: Required<OrbitStateProps>): Required<OrbitStateProps> {\n    // Ensure zoom is within specified range\n    const {maxZoom, minZoom, zoom, maxRotationX, minRotationX, rotationOrbit} = props;\n\n    props.zoom = Array.isArray(zoom)\n      ? [clamp(zoom[0], minZoom, maxZoom), clamp(zoom[1], minZoom, maxZoom)]\n      : clamp(zoom, minZoom, maxZoom);\n\n    props.rotationX = clamp(props.rotationX, minRotationX, maxRotationX);\n    if (rotationOrbit < -180 || rotationOrbit > 180) {\n      props.rotationOrbit = mod(rotationOrbit + 180, 360) - 180;\n    }\n\n    return props;\n  }\n}\n\nexport default class OrbitController extends Controller<OrbitState> {\n  ControllerState = OrbitState;\n\n  transition = {\n    transitionDuration: 300,\n    transitionInterpolator: new LinearInterpolator({\n      transitionProps: {\n        compare: ['target', 'zoom', 'rotationX', 'rotationOrbit'],\n        required: ['target', 'zoom']\n      }\n    })\n  };\n}\n","import View, {CommonViewState} from './view';\nimport OrbitViewport from '../viewports/orbit-viewport';\nimport OrbitController from '../controllers/orbit-controller';\n\nexport type OrbitViewState = {\n  /** The world position at the center of the viewport. Default `[0, 0, 0]`. */\n  target: [number, number, number];\n  /** The zoom level of the viewport. `zoom: 0` maps one unit distance to one pixel on screen, and increasing `zoom` by `1` scales the same object to twice as large. Default `0`. */\n  zoom: number;\n  /** Rotating angle around orbit axis. Default `0`. */\n  rotationOrbit?: number;\n  /** Rotating angle around orbit axis. Default `0`. */\n  rotationX?: number;\n  /** The min zoom level of the viewport. Default `-Infinity`. */\n  minZoom?: number;\n  /** The max zoom level of the viewport. Default `Infinity`. */\n  maxZoom?: number;\n  /** The min rotating angle around X axis. Default `-90`. */\n  minRotationX?: number;\n  /** The max rotating angle around X axis. Default `90`. */\n  maxRotationX?: number;\n} & CommonViewState;\n\ntype OrbitViewProps = {\n  /** Axis with 360 degrees rotating freedom, either `'Y'` or `'Z'`, default to `'Z'`. */\n  orbitAxis?: 'Y' | 'Z';\n  /** Custom projection matrix */\n  projectionMatrix?: number[];\n  /** Field of view covered by camera, in the perspective case. In degrees. Default `50`. */\n  fovy?: number;\n  /** Distance of near clipping plane. Default `0.1`. */\n  near?: number;\n  /** Distance of far clipping plane. Default `1000`. */\n  far?: number;\n  /** Whether to create an orthographic or perspective projection matrix. Default is `false` (perspective projection). */\n  orthographic?: boolean;\n};\n\nexport default class OrbitView extends View<OrbitViewState, OrbitViewProps> {\n  static displayName = 'OrbitView';\n\n  constructor(props: OrbitViewProps = {}) {\n    super(props);\n    this.props.orbitAxis = props.orbitAxis || 'Z';\n  }\n\n  get ViewportType() {\n    return OrbitViewport;\n  }\n\n  get ControllerType() {\n    return OrbitController;\n  }\n}\n","import {clamp} from '@math.gl/core';\nimport Controller from './controller';\nimport {OrbitState} from './orbit-controller';\nimport LinearInterpolator from '../transitions/linear-interpolator';\n\nclass OrthographicState extends OrbitState {\n  zoomAxis: 'X' | 'Y' | 'all';\n\n  constructor(props) {\n    super(props);\n\n    this.zoomAxis = props.zoomAxis || 'all';\n  }\n\n  _calculateNewZoom({scale, startZoom}) {\n    const {maxZoom, minZoom} = this.getViewportProps();\n    if (startZoom === undefined) {\n      startZoom = this.getViewportProps().zoom;\n    }\n    let deltaZoom = Math.log2(scale);\n    if (Array.isArray(startZoom)) {\n      let [newZoomX, newZoomY] = startZoom;\n      switch (this.zoomAxis) {\n        case 'X':\n          // Scale x only\n          newZoomX = clamp(newZoomX + deltaZoom, minZoom, maxZoom);\n          break;\n        case 'Y':\n          // Scale y only\n          newZoomY = clamp(newZoomY + deltaZoom, minZoom, maxZoom);\n          break;\n        default:\n          // Lock aspect ratio\n          let z = Math.min(newZoomX + deltaZoom, newZoomY + deltaZoom);\n          if (z < minZoom) {\n            deltaZoom += minZoom - z;\n          }\n          z = Math.max(newZoomX + deltaZoom, newZoomY + deltaZoom);\n          if (z > maxZoom) {\n            deltaZoom += maxZoom - z;\n          }\n          newZoomX += deltaZoom;\n          newZoomY += deltaZoom;\n      }\n      return [newZoomX, newZoomY];\n    }\n    // Ignore `zoomAxis`\n    // `LinearTransitionInterpolator` does not support interpolation between a number and an array\n    // So if zoom is a number (legacy use case), new zoom still has to be a number\n    return clamp(startZoom + deltaZoom, minZoom, maxZoom);\n  }\n}\n\nexport default class OrthographicController extends Controller<OrbitState> {\n  ControllerState = OrthographicState;\n  transition = {\n    transitionDuration: 300,\n    transitionInterpolator: new LinearInterpolator(['target', 'zoom'])\n  };\n  dragMode: 'pan' | 'rotate' = 'pan';\n\n  _onPanRotate() {\n    // No rotation in orthographic view\n    return false;\n  }\n}\n","import View, {CommonViewState} from './view';\nimport OrthographicViewport from '../viewports/orthographic-viewport';\nimport OrthographicController from '../controllers/orthographic-controller';\n\nexport type OrthographicViewState = {\n  /** The world position at the center of the viewport. Default `[0, 0, 0]`. */\n  target?: [number, number, number] | [number, number];\n  /**  The zoom level of the viewport. `zoom: 0` maps one unit distance to one pixel on screen, and increasing `zoom` by `1` scales the same object to twice as large.\n   *   To apply independent zoom levels to the X and Y axes, supply an array `[zoomX, zoomY]`. Default `0`. */\n  zoom?: number | [number, number];\n  /** The min zoom level of the viewport. Default `-Infinity`. */\n  minZoom?: number;\n  /** The max zoom level of the viewport. Default `Infinity`. */\n  maxZoom?: number;\n} & CommonViewState;\n\ntype OrthographicViewProps = {\n  /** Distance of near clipping plane. Default `0.1`. */\n  near?: number;\n  /** Distance of far clipping plane. Default `1000`. */\n  far?: number;\n  /** Whether to use top-left coordinates (`true`) or bottom-left coordinates (`false`). Default `true`. */\n  flipY?: boolean;\n};\n\nexport default class OrthographicView extends View<OrthographicViewState, OrthographicViewProps> {\n  static displayName = 'OrthographicView';\n\n  get ViewportType() {\n    return OrthographicViewport;\n  }\n\n  get ControllerType() {\n    return OrthographicController;\n  }\n}\n","import {clamp} from '@math.gl/core';\nimport Controller, {ControllerProps} from './controller';\n\nimport {MapState, MapStateProps} from './map-controller';\nimport {mod} from '../utils/math-utils';\nimport LinearInterpolator from '../transitions/linear-interpolator';\n\nclass GlobeState extends MapState {\n  // Apply any constraints (mathematical or defined by _viewportProps) to map state\n  applyConstraints(props: Required<MapStateProps>): Required<MapStateProps> {\n    // Ensure zoom is within specified range\n    const {maxZoom, minZoom, zoom} = props;\n    props.zoom = clamp(zoom, minZoom, maxZoom);\n\n    const {longitude, latitude} = props;\n    if (longitude < -180 || longitude > 180) {\n      props.longitude = mod(longitude + 180, 360) - 180;\n    }\n    props.latitude = clamp(latitude, -89, 89);\n\n    return props;\n  }\n}\n\nexport default class GlobeController extends Controller<MapState> {\n  ControllerState = GlobeState;\n\n  transition = {\n    transitionDuration: 300,\n    transitionInterpolator: new LinearInterpolator(['longitude', 'latitude', 'zoom'])\n  };\n\n  dragMode: 'pan' | 'rotate' = 'pan';\n\n  setProps(props: ControllerProps) {\n    super.setProps(props);\n\n    // TODO - support pitching?\n    this.dragRotate = false;\n    this.touchRotate = false;\n  }\n}\n","import View, {CommonViewState} from './view';\nimport GlobeViewport from '../viewports/globe-viewport';\nimport GlobeController from '../controllers/globe-controller';\n\nexport type GlobeViewState = {\n  /** Longitude of the map center */\n  longitude: number;\n  /** Latitude of the map center */\n  latitude: number;\n  /** Zoom level */\n  zoom: number;\n  /** Min zoom, default `0` */\n  minZoom?: number;\n  /** Max zoom, default `20` */\n  maxZoom?: number;\n} & CommonViewState;\n\ntype GlobeViewProps = {\n  /** The resolution at which to turn flat features into 3D meshes, in degrees. Smaller numbers will generate more detailed mesh. Default `10`. */\n  resolution?: number;\n  /** Scaler for the near plane, 1 unit equals to the height of the viewport. Default to `0.1`. Overwrites the `near` parameter. */\n  nearZMultiplier?: number;\n  /** Scaler for the far plane, 1 unit equals to the distance from the camera to the top edge of the screen. Default to `1.01`. Overwrites the `far` parameter. */\n  farZMultiplier?: number;\n  /** Distance of the camera relative to viewport height. Default `1.5`. */\n  altitude?: number;\n};\n\nexport default class GlobeView extends View<GlobeViewState, GlobeViewProps> {\n  static displayName = 'GlobeView';\n\n  get ViewportType() {\n    return GlobeViewport;\n  }\n\n  get ControllerType() {\n    return GlobeController;\n  }\n}\n","/* global document */\nimport GL from '@luma.gl/constants';\nimport {Texture2D, copyToTexture} from '@luma.gl/core';\nimport {load} from '@loaders.gl/core';\nimport {createIterable} from '@deck.gl/core';\n\nimport type {AccessorFunction} from '@deck.gl/core';\n\nconst DEFAULT_CANVAS_WIDTH = 1024;\nconst DEFAULT_BUFFER = 4;\n\nconst noop = () => {};\n\nconst DEFAULT_TEXTURE_PARAMETERS = {\n  [GL.TEXTURE_MIN_FILTER]: GL.LINEAR_MIPMAP_LINEAR,\n  // GL.LINEAR is the default value but explicitly set it here\n  [GL.TEXTURE_MAG_FILTER]: GL.LINEAR,\n  // for texture boundary artifact\n  [GL.TEXTURE_WRAP_S]: GL.CLAMP_TO_EDGE,\n  [GL.TEXTURE_WRAP_T]: GL.CLAMP_TO_EDGE\n};\n\ntype IconDef = {\n  /** Width of the icon */\n  width: number;\n  /** Height of the icon */\n  height: number;\n  /** Horizontal position of icon anchor. Default: half width. */\n  anchorX?: number;\n  /** Vertical position of icon anchor. Default: half height. */\n  anchorY?: number;\n  /**\n   * Whether the icon is treated as a transparency mask.\n   * If `true`, color defined by `getColor` is applied.\n   * If `false`, pixel color from the icon image is applied.\n   * @default false\n   */\n  mask?: boolean;\n};\n\nexport type UnpackedIcon = {\n  /** Url to fetch the icon */\n  url: string;\n  /** Unique identifier of the icon. Icons of the same id are only fetched once. Fallback to `url` if not specified. */\n  id?: string;\n} & IconDef;\n\ntype PrepackedIcon = {\n  /** Left position of the icon on the atlas */\n  x: number;\n  /** Top position of the icon on the atlas */\n  y: number;\n} & IconDef;\n\nexport type IconMapping = Record<string, PrepackedIcon>;\n\nexport type LoadIconErrorContext = {\n  error: Error;\n  /** The URL that was trying to fetch */\n  url: string;\n  /** The original data object that requested this icon */\n  source: any;\n  /** The index of the original data object that requested this icon */\n  sourceIndex: number;\n  /** The load options used for the fetch */\n  loadOptions: any;\n};\n\nfunction nextPowOfTwo(number: number): number {\n  return Math.pow(2, Math.ceil(Math.log2(number)));\n}\n\n// update comment to create a new texture and copy original data.\nfunction resizeImage(\n  ctx: CanvasRenderingContext2D,\n  imageData: HTMLImageElement | ImageBitmap,\n  maxWidth: number,\n  maxHeight: number\n): {\n  data: HTMLImageElement | HTMLCanvasElement | ImageBitmap;\n  width: number;\n  height: number;\n} {\n  const resizeRatio = Math.min(maxWidth / imageData.width, maxHeight / imageData.height);\n  const width = Math.floor(imageData.width * resizeRatio);\n  const height = Math.floor(imageData.height * resizeRatio);\n\n  if (resizeRatio === 1) {\n    // No resizing required\n    return {data: imageData, width, height};\n  }\n\n  ctx.canvas.height = height;\n  ctx.canvas.width = width;\n\n  ctx.clearRect(0, 0, width, height);\n\n  // image, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight\n  ctx.drawImage(imageData, 0, 0, imageData.width, imageData.height, 0, 0, width, height);\n  return {data: ctx.canvas, width, height};\n}\n\nfunction getIconId(icon: UnpackedIcon): string {\n  return icon && (icon.id || icon.url);\n}\n\n// resize texture without losing original data\nfunction resizeTexture(\n  texture: Texture2D,\n  width: number,\n  height: number,\n  parameters: any\n): Texture2D {\n  const oldWidth = texture.width;\n  const oldHeight = texture.height;\n\n  const newTexture = new Texture2D(texture.gl, {width, height, parameters});\n  copyToTexture(texture, newTexture, {\n    targetY: 0,\n    width: oldWidth,\n    height: oldHeight\n  });\n\n  texture.delete();\n  return newTexture;\n}\n\n// traverse icons in a row of icon atlas\n// extend each icon with left-top coordinates\nfunction buildRowMapping(\n  mapping: IconMapping,\n  columns: {\n    icon: UnpackedIcon;\n    xOffset: number;\n  }[],\n  yOffset: number\n): void {\n  for (let i = 0; i < columns.length; i++) {\n    const {icon, xOffset} = columns[i];\n    const id = getIconId(icon);\n    mapping[id] = {\n      ...icon,\n      x: xOffset,\n      y: yOffset\n    };\n  }\n}\n\n/**\n * Generate coordinate mapping to retrieve icon left-top position from an icon atlas\n */\nexport function buildMapping({\n  icons,\n  buffer,\n  mapping = {},\n  xOffset = 0,\n  yOffset = 0,\n  rowHeight = 0,\n  canvasWidth\n}: {\n  /** list of icon definitions */\n  icons: UnpackedIcon[];\n  /** add bleeding buffer to the right and bottom side of the image */\n  buffer: number;\n  /** right position of last icon in old mapping */\n  xOffset: number;\n  /** top position in last icon in old mapping */\n  yOffset: number;\n  /** height of the last icon's row */\n  rowHeight: number;\n  /** max width of canvas */\n  canvasWidth: number;\n  mapping: IconMapping;\n}): {\n  mapping: IconMapping;\n  rowHeight: number;\n  xOffset: number;\n  yOffset: number;\n  canvasWidth: number;\n  canvasHeight: number;\n} {\n  let columns: {\n    icon: UnpackedIcon;\n    xOffset: number;\n  }[] = [];\n  // Strategy to layout all the icons into a texture:\n  // traverse the icons sequentially, layout the icons from left to right, top to bottom\n  // when the sum of the icons width is equal or larger than canvasWidth,\n  // move to next row starting from total height so far plus max height of the icons in previous row\n  // row width is equal to canvasWidth\n  // row height is decided by the max height of the icons in that row\n  // mapping coordinates of each icon is its left-top position in the texture\n  for (let i = 0; i < icons.length; i++) {\n    const icon = icons[i];\n    const id = getIconId(icon);\n\n    if (!mapping[id]) {\n      const {height, width} = icon;\n\n      // fill one row\n      if (xOffset + width + buffer > canvasWidth) {\n        buildRowMapping(mapping, columns, yOffset);\n\n        xOffset = 0;\n        yOffset = rowHeight + yOffset + buffer;\n        rowHeight = 0;\n        columns = [];\n      }\n\n      columns.push({\n        icon,\n        xOffset\n      });\n\n      xOffset = xOffset + width + buffer;\n      rowHeight = Math.max(rowHeight, height);\n    }\n  }\n\n  if (columns.length > 0) {\n    buildRowMapping(mapping, columns, yOffset);\n  }\n\n  return {\n    mapping,\n    rowHeight,\n    xOffset,\n    yOffset,\n    canvasWidth,\n    canvasHeight: nextPowOfTwo(rowHeight + yOffset + buffer)\n  };\n}\n\n// extract icons from data\n// return icons should be unique, and not cached or cached but url changed\nexport function getDiffIcons(\n  data: any,\n  getIcon: AccessorFunction<any, UnpackedIcon> | null,\n  cachedIcons: Record<string, PrepackedIcon & {url?: string}>\n): Record<\n  string,\n  UnpackedIcon & {\n    source: any;\n    sourceIndex: number;\n  }\n> | null {\n  if (!data || !getIcon) {\n    return null;\n  }\n\n  cachedIcons = cachedIcons || {};\n  const icons = {};\n  const {iterable, objectInfo} = createIterable(data);\n  for (const object of iterable) {\n    objectInfo.index++;\n    const icon = getIcon(object, objectInfo);\n    const id = getIconId(icon);\n\n    if (!icon) {\n      throw new Error('Icon is missing.');\n    }\n\n    if (!icon.url) {\n      throw new Error('Icon url is missing.');\n    }\n\n    if (!icons[id] && (!cachedIcons[id] || icon.url !== cachedIcons[id].url)) {\n      icons[id] = {...icon, source: object, sourceIndex: objectInfo.index};\n    }\n  }\n  return icons;\n}\n\nexport default class IconManager {\n  gl: WebGLRenderingContext;\n\n  private onUpdate: () => void;\n  private onError: (context: LoadIconErrorContext) => void;\n  private _loadOptions: any = null;\n  private _texture: Texture2D | null = null;\n  private _externalTexture: Texture2D | null = null;\n  private _mapping: IconMapping = {};\n  private _textureParameters: Record<number, number> | null = null;\n\n  /** count of pending requests to fetch icons */\n  private _pendingCount: number = 0;\n\n  private _autoPacking: boolean = false;\n\n  // / internal state used for autoPacking\n\n  private _xOffset: number = 0;\n  private _yOffset: number = 0;\n  private _rowHeight: number = 0;\n  private _buffer: number = DEFAULT_BUFFER;\n  private _canvasWidth: number = DEFAULT_CANVAS_WIDTH;\n  private _canvasHeight: number = 0;\n  private _canvas: HTMLCanvasElement | null = null;\n\n  constructor(\n    gl: WebGLRenderingContext,\n    {\n      onUpdate = noop,\n      onError = noop\n    }: {\n      /** Callback when the texture updates */\n      onUpdate: () => void;\n      /** Callback when an error is encountered */\n      onError: (context: LoadIconErrorContext) => void;\n    }\n  ) {\n    this.gl = gl;\n    this.onUpdate = onUpdate;\n    this.onError = onError;\n  }\n\n  finalize(): void {\n    this._texture?.delete();\n  }\n\n  getTexture(): Texture2D | null {\n    return this._texture || this._externalTexture;\n  }\n\n  getIconMapping(icon: string | UnpackedIcon): PrepackedIcon {\n    const id = this._autoPacking ? getIconId(icon as UnpackedIcon) : (icon as string);\n    return this._mapping[id] || {};\n  }\n\n  setProps({\n    loadOptions,\n    autoPacking,\n    iconAtlas,\n    iconMapping,\n    textureParameters\n  }: {\n    loadOptions?: any;\n    autoPacking?: boolean;\n    iconAtlas?: Texture2D | null;\n    iconMapping?: IconMapping | null;\n    textureParameters?: Record<number, number> | null;\n  }) {\n    if (loadOptions) {\n      this._loadOptions = loadOptions;\n    }\n\n    if (autoPacking !== undefined) {\n      this._autoPacking = autoPacking;\n    }\n\n    if (iconMapping) {\n      this._mapping = iconMapping;\n    }\n\n    if (iconAtlas) {\n      this._texture?.delete();\n      this._texture = null;\n      this._externalTexture = iconAtlas;\n    }\n\n    if (textureParameters) {\n      this._textureParameters = textureParameters;\n    }\n  }\n\n  get isLoaded(): boolean {\n    return this._pendingCount === 0;\n  }\n\n  packIcons(data: any, getIcon: AccessorFunction<any, UnpackedIcon>): void {\n    if (!this._autoPacking || typeof document === 'undefined') {\n      return;\n    }\n\n    const icons = Object.values(getDiffIcons(data, getIcon, this._mapping) || {});\n\n    if (icons.length > 0) {\n      // generate icon mapping\n      const {mapping, xOffset, yOffset, rowHeight, canvasHeight} = buildMapping({\n        icons,\n        buffer: this._buffer,\n        canvasWidth: this._canvasWidth,\n        mapping: this._mapping,\n        rowHeight: this._rowHeight,\n        xOffset: this._xOffset,\n        yOffset: this._yOffset\n      });\n\n      this._rowHeight = rowHeight;\n      this._mapping = mapping;\n      this._xOffset = xOffset;\n      this._yOffset = yOffset;\n      this._canvasHeight = canvasHeight;\n\n      // create new texture\n      if (!this._texture) {\n        this._texture = new Texture2D(this.gl, {\n          width: this._canvasWidth,\n          height: this._canvasHeight,\n          parameters: this._textureParameters || DEFAULT_TEXTURE_PARAMETERS\n        });\n      }\n\n      if (this._texture.height !== this._canvasHeight) {\n        this._texture = resizeTexture(\n          this._texture,\n          this._canvasWidth,\n          this._canvasHeight,\n          this._textureParameters || DEFAULT_TEXTURE_PARAMETERS\n        );\n      }\n\n      this.onUpdate();\n\n      // load images\n      this._canvas = this._canvas || document.createElement('canvas');\n      this._loadIcons(icons);\n    }\n  }\n\n  private _loadIcons(\n    icons: (UnpackedIcon & {\n      source: any;\n      sourceIndex: number;\n    })[]\n  ): void {\n    // This method is only called in the auto packing case, where _canvas is defined\n    const ctx = this._canvas!.getContext('2d', {\n      willReadFrequently: true\n    }) as CanvasRenderingContext2D;\n\n    for (const icon of icons) {\n      this._pendingCount++;\n      load(icon.url, this._loadOptions)\n        .then(imageData => {\n          const id = getIconId(icon);\n\n          const iconDef = this._mapping[id];\n          const {x, y, width: maxWidth, height: maxHeight} = iconDef;\n\n          const {data, width, height} = resizeImage(ctx, imageData, maxWidth, maxHeight);\n\n          this._texture.setSubImageData({\n            data,\n            x: x + (maxWidth - width) / 2,\n            y: y + (maxHeight - height) / 2,\n            width,\n            height\n          });\n          iconDef.width = width;\n          iconDef.height = height;\n\n          // Call to regenerate mipmaps after modifying texture(s)\n          this._texture.generateMipmap();\n\n          this.onUpdate();\n        })\n        .catch(error => {\n          this.onError({\n            url: icon.url,\n            source: icon.source,\n            sourceIndex: icon.sourceIndex,\n            loadOptions: this._loadOptions,\n            error\n          });\n        })\n        .finally(() => {\n          this._pendingCount--;\n        });\n    }\n  }\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport {Layer, project32, picking, log, UNIT} from '@deck.gl/core';\nimport GL from '@luma.gl/constants';\nimport {Model, Geometry} from '@luma.gl/core';\n\nimport vs from './icon-layer-vertex.glsl';\nimport fs from './icon-layer-fragment.glsl';\nimport IconManager from './icon-manager';\n\nimport type {\n  LayerProps,\n  LayerDataSource,\n  Accessor,\n  AccessorFunction,\n  Position,\n  Color,\n  Texture,\n  Unit,\n  UpdateParameters,\n  LayerContext,\n  DefaultProps\n} from '@deck.gl/core';\nimport type {UnpackedIcon, IconMapping, LoadIconErrorContext} from './icon-manager';\n\ntype _IconLayerProps<DataT> = {\n  data: LayerDataSource<DataT>;\n  /** A prepacked image that contains all icons. */\n  iconAtlas?: string | Texture;\n  /** Icon names mapped to icon definitions, or a URL to load such mapping from a JSON file. */\n  iconMapping?: string | IconMapping;\n\n  /** Icon size multiplier.\n   * @default 1\n   */\n  sizeScale?: number;\n  /**\n   * The units of the icon size, one of `meters`, `common`, and `pixels`.\n   *\n   * @default 'pixels'\n   */\n  sizeUnits?: Unit;\n  /**\n   * The minimum size in pixels. When using non-pixel `sizeUnits`, this prop can be used to prevent the icon from getting too small when zoomed out.\n   */\n  sizeMinPixels?: number;\n  /**\n   * The maximum size in pixels. When using non-pixel `sizeUnits`, this prop can be used to prevent the icon from getting too big when zoomed in.\n   */\n  sizeMaxPixels?: number;\n  /** If `true`, the icon always faces camera. Otherwise the icon faces up (z)\n   * @default true\n   */\n  billboard?: boolean;\n  /**\n   * Discard pixels whose opacity is below this threshold.\n   * A discarded pixel would create a \"hole\" in the icon that is not considered part of the object.\n   * @default 0.05\n   */\n  alphaCutoff?: number;\n\n  /** Anchor position accessor. */\n  getPosition?: Accessor<DataT, Position>;\n  /** Icon definition accessor.\n   * Should return the icon id if using pre-packed icons (`iconAtlas` + `iconMapping`).\n   * Return an object that defines the icon if using auto-packing.\n   */\n  getIcon?: AccessorFunction<DataT, string> | AccessorFunction<DataT, UnpackedIcon>;\n  /** Icon color accessor.\n   * @default [0, 0, 0, 255]\n   */\n  getColor?: Accessor<DataT, Color>;\n  /** Icon size accessor.\n   * @default 1\n   */\n  getSize?: Accessor<DataT, number>;\n  /** Icon rotation accessor, in degrees.\n   * @default 0\n   */\n  getAngle?: Accessor<DataT, number>;\n  /**\n   * Icon offsest accessor, in pixels.\n   * @default [0, 0]\n   */\n  getPixelOffset?: Accessor<DataT, [number, number]>;\n  /**\n   * Callback called if the attempt to fetch an icon returned by `getIcon` fails.\n   */\n  onIconError?: ((context: LoadIconErrorContext) => void) | null;\n\n  /** Customize the [texture parameters](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/texParameter). */\n  textureParameters?: Record<number, number> | null;\n};\n\nexport type IconLayerProps<DataT = any> = _IconLayerProps<DataT> & LayerProps;\n\nconst DEFAULT_COLOR: [number, number, number, number] = [0, 0, 0, 255];\n\nconst defaultProps: DefaultProps<IconLayerProps> = {\n  iconAtlas: {type: 'image', value: null, async: true},\n  iconMapping: {type: 'object', value: {}, async: true},\n  sizeScale: {type: 'number', value: 1, min: 0},\n  billboard: true,\n  sizeUnits: 'pixels',\n  sizeMinPixels: {type: 'number', min: 0, value: 0}, //  min point radius in pixels\n  sizeMaxPixels: {type: 'number', min: 0, value: Number.MAX_SAFE_INTEGER}, // max point radius in pixels\n  alphaCutoff: {type: 'number', value: 0.05, min: 0, max: 1},\n\n  getPosition: {type: 'accessor', value: x => x.position},\n  getIcon: {type: 'accessor', value: x => x.icon},\n  getColor: {type: 'accessor', value: DEFAULT_COLOR},\n  getSize: {type: 'accessor', value: 1},\n  getAngle: {type: 'accessor', value: 0},\n  getPixelOffset: {type: 'accessor', value: [0, 0]},\n\n  onIconError: {type: 'function', value: null, optional: true},\n\n  textureParameters: {type: 'object', ignore: true}\n};\n\n/** Render raster icons at given coordinates. */\nexport default class IconLayer<DataT = any, ExtraPropsT extends {} = {}> extends Layer<\n  ExtraPropsT & Required<_IconLayerProps<DataT>>\n> {\n  static defaultProps = defaultProps;\n  static layerName = 'IconLayer';\n\n  state!: {\n    model?: Model;\n    iconManager: IconManager;\n  };\n\n  getShaders() {\n    return super.getShaders({vs, fs, modules: [project32, picking]});\n  }\n\n  initializeState() {\n    this.state = {\n      iconManager: new IconManager(this.context.gl, {\n        onUpdate: this._onUpdate.bind(this),\n        onError: this._onError.bind(this)\n      })\n    };\n\n    const attributeManager = this.getAttributeManager();\n    /* eslint-disable max-len */\n    attributeManager!.addInstanced({\n      instancePositions: {\n        size: 3,\n        type: GL.DOUBLE,\n        fp64: this.use64bitPositions(),\n        transition: true,\n        accessor: 'getPosition'\n      },\n      instanceSizes: {\n        size: 1,\n        transition: true,\n        accessor: 'getSize',\n        defaultValue: 1\n      },\n      instanceOffsets: {\n        size: 2,\n        accessor: 'getIcon',\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        transform: this.getInstanceOffset\n      },\n      instanceIconFrames: {\n        size: 4,\n        accessor: 'getIcon',\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        transform: this.getInstanceIconFrame\n      },\n      instanceColorModes: {\n        size: 1,\n        type: GL.UNSIGNED_BYTE,\n        accessor: 'getIcon',\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        transform: this.getInstanceColorMode\n      },\n      instanceColors: {\n        size: this.props.colorFormat.length,\n        type: GL.UNSIGNED_BYTE,\n        normalized: true,\n        transition: true,\n        accessor: 'getColor',\n        defaultValue: DEFAULT_COLOR\n      },\n      instanceAngles: {\n        size: 1,\n        transition: true,\n        accessor: 'getAngle'\n      },\n      instancePixelOffset: {\n        size: 2,\n        transition: true,\n        accessor: 'getPixelOffset'\n      }\n    });\n    /* eslint-enable max-len */\n  }\n\n  /* eslint-disable max-statements, complexity */\n  updateState(params: UpdateParameters<this>) {\n    super.updateState(params);\n    const {props, oldProps, changeFlags} = params;\n\n    const attributeManager = this.getAttributeManager();\n    const {iconAtlas, iconMapping, data, getIcon, textureParameters} = props;\n    const {iconManager} = this.state;\n\n    // internalState is always defined during updateState\n    const prePacked = iconAtlas || this.internalState!.isAsyncPropLoading('iconAtlas');\n    iconManager.setProps({\n      loadOptions: props.loadOptions,\n      autoPacking: !prePacked,\n      iconAtlas,\n      iconMapping: prePacked ? (iconMapping as IconMapping) : null,\n      textureParameters\n    });\n\n    // prepacked iconAtlas from user\n    if (prePacked) {\n      if (oldProps.iconMapping !== props.iconMapping) {\n        attributeManager!.invalidate('getIcon');\n      }\n    } else if (\n      changeFlags.dataChanged ||\n      (changeFlags.updateTriggersChanged &&\n        (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getIcon))\n    ) {\n      // Auto packing - getIcon is expected to return an object\n      iconManager.packIcons(data, getIcon as AccessorFunction<any, UnpackedIcon>);\n    }\n\n    if (changeFlags.extensionsChanged) {\n      const {gl} = this.context;\n      this.state.model?.delete();\n      this.state.model = this._getModel(gl);\n      attributeManager!.invalidateAll();\n    }\n  }\n  /* eslint-enable max-statements, complexity */\n\n  get isLoaded(): boolean {\n    return super.isLoaded && this.state.iconManager.isLoaded;\n  }\n\n  finalizeState(context: LayerContext): void {\n    super.finalizeState(context);\n    // Release resources held by the icon manager\n    this.state.iconManager.finalize();\n  }\n\n  draw({uniforms}): void {\n    const {sizeScale, sizeMinPixels, sizeMaxPixels, sizeUnits, billboard, alphaCutoff} = this.props;\n    const {iconManager} = this.state;\n\n    const iconsTexture = iconManager.getTexture();\n    if (iconsTexture) {\n      this.state.model\n        .setUniforms(uniforms)\n        .setUniforms({\n          iconsTexture,\n          iconsTextureDim: [iconsTexture.width, iconsTexture.height],\n          sizeUnits: UNIT[sizeUnits],\n          sizeScale,\n          sizeMinPixels,\n          sizeMaxPixels,\n          billboard,\n          alphaCutoff\n        })\n        .draw();\n    }\n  }\n\n  protected _getModel(gl: WebGLRenderingContext): Model {\n    // The icon-layer vertex shader uses 2d positions\n    // specifed via: attribute vec2 positions;\n    const positions = [-1, -1, -1, 1, 1, 1, 1, -1];\n\n    return new Model(gl, {\n      ...this.getShaders(),\n      id: this.props.id,\n      geometry: new Geometry({\n        drawMode: GL.TRIANGLE_FAN,\n        attributes: {\n          // The size must be explicitly passed here otherwise luma.gl\n          // will default to assuming that positions are 3D (x,y,z)\n          positions: {\n            size: 2,\n            value: new Float32Array(positions)\n          }\n        }\n      }),\n      isInstanced: true\n    });\n  }\n\n  private _onUpdate(): void {\n    this.setNeedsRedraw();\n  }\n\n  private _onError(evt: LoadIconErrorContext): void {\n    const onIconError = this.getCurrentLayer()?.props.onIconError;\n    if (onIconError) {\n      onIconError(evt);\n    } else {\n      log.error(evt.error.message)();\n    }\n  }\n\n  protected getInstanceOffset(icon: string): number[] {\n    const {\n      width,\n      height,\n      anchorX = width / 2,\n      anchorY = height / 2\n    } = this.state.iconManager.getIconMapping(icon);\n    return [width / 2 - anchorX, height / 2 - anchorY];\n  }\n\n  protected getInstanceColorMode(icon: string): number {\n    const mapping = this.state.iconManager.getIconMapping(icon);\n    return mapping.mask ? 1 : 0;\n  }\n\n  protected getInstanceIconFrame(icon: string): number[] {\n    const {x, y, width, height} = this.state.iconManager.getIconMapping(icon);\n    return [x, y, width, height];\n  }\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nexport default `\\\n#define SHADER_NAME icon-layer-vertex-shader\n\nattribute vec2 positions;\n\nattribute vec3 instancePositions;\nattribute vec3 instancePositions64Low;\nattribute float instanceSizes;\nattribute float instanceAngles;\nattribute vec4 instanceColors;\nattribute vec3 instancePickingColors;\nattribute vec4 instanceIconFrames;\nattribute float instanceColorModes;\nattribute vec2 instanceOffsets;\nattribute vec2 instancePixelOffset;\n\nuniform float sizeScale;\nuniform vec2 iconsTextureDim;\nuniform float sizeMinPixels;\nuniform float sizeMaxPixels;\nuniform bool billboard;\nuniform int sizeUnits;\n\nvarying float vColorMode;\nvarying vec4 vColor;\nvarying vec2 vTextureCoords;\nvarying vec2 uv;\n\nvec2 rotate_by_angle(vec2 vertex, float angle) {\n  float angle_radian = angle * PI / 180.0;\n  float cos_angle = cos(angle_radian);\n  float sin_angle = sin(angle_radian);\n  mat2 rotationMatrix = mat2(cos_angle, -sin_angle, sin_angle, cos_angle);\n  return rotationMatrix * vertex;\n}\n\nvoid main(void) {\n  geometry.worldPosition = instancePositions;\n  geometry.uv = positions;\n  geometry.pickingColor = instancePickingColors;\n  uv = positions;\n\n  vec2 iconSize = instanceIconFrames.zw;\n  // convert size in meters to pixels, then scaled and clamp\n \n  // project meters to pixels and clamp to limits \n  float sizePixels = clamp(\n    project_size_to_pixel(instanceSizes * sizeScale, sizeUnits), \n    sizeMinPixels, sizeMaxPixels\n  );\n\n  // scale icon height to match instanceSize\n  float instanceScale = iconSize.y == 0.0 ? 0.0 : sizePixels / iconSize.y;\n\n  // scale and rotate vertex in \"pixel\" value and convert back to fraction in clipspace\n  vec2 pixelOffset = positions / 2.0 * iconSize + instanceOffsets;\n  pixelOffset = rotate_by_angle(pixelOffset, instanceAngles) * instanceScale;\n  pixelOffset += instancePixelOffset;\n  pixelOffset.y *= -1.0;\n\n  if (billboard)  {\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, vec3(0.0), geometry.position);\n    DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n    vec3 offset = vec3(pixelOffset, 0.0);\n    DECKGL_FILTER_SIZE(offset, geometry);\n    gl_Position.xy += project_pixel_size_to_clipspace(offset.xy);\n\n  } else {\n    vec3 offset_common = vec3(project_pixel_size(pixelOffset), 0.0);\n    DECKGL_FILTER_SIZE(offset_common, geometry);\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, offset_common, geometry.position); \n    DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n  }\n\n  vTextureCoords = mix(\n    instanceIconFrames.xy,\n    instanceIconFrames.xy + iconSize,\n    (positions.xy + 1.0) / 2.0\n  ) / iconsTextureDim;\n\n  vColor = instanceColors;\n  DECKGL_FILTER_COLOR(vColor, geometry);\n\n  vColorMode = instanceColorModes;\n}\n`;\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nexport default `\\\n#define SHADER_NAME icon-layer-fragment-shader\n\nprecision highp float;\n\nuniform float opacity;\nuniform sampler2D iconsTexture;\nuniform float alphaCutoff;\n\nvarying float vColorMode;\nvarying vec4 vColor;\nvarying vec2 vTextureCoords;\nvarying vec2 uv;\n\nvoid main(void) {\n  geometry.uv = uv;\n\n  vec4 texColor = texture2D(iconsTexture, vTextureCoords);\n\n  // if colorMode == 0, use pixel color from the texture\n  // if colorMode == 1 or rendering picking buffer, use texture as transparency mask\n  vec3 color = mix(texColor.rgb, vColor.rgb, vColorMode);\n  // Take the global opacity and the alpha from vColor into account for the alpha component\n  float a = texColor.a * opacity * vColor.a;\n\n  if (a < alphaCutoff) {\n    discard;\n  }\n\n  gl_FragColor = vec4(color, a);\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n`;\n","// Copyright (c) 2015-2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport {COORDINATE_SYSTEM, PROJECTION_MODE} from '../../lib/constants';\nimport project from '../project/project';\nimport {Vector3, Matrix4} from '@math.gl/core';\nimport memoize from '../../utils/memoize';\nimport {pixelsToWorld} from '@math.gl/web-mercator';\n\nimport type {Texture2D} from '@luma.gl/webgl';\nimport type {ShaderModule, NumericArray} from '../../types/types';\nimport type Viewport from '../../viewports/viewport';\nimport type {ProjectUniforms} from '../project/viewport-uniforms';\n\nconst vs = `\nconst int max_lights = 2;\nuniform mat4 shadow_uViewProjectionMatrices[max_lights];\nuniform vec4 shadow_uProjectCenters[max_lights];\nuniform bool shadow_uDrawShadowMap;\nuniform bool shadow_uUseShadowMap;\nuniform int shadow_uLightId;\nuniform float shadow_uLightCount;\n\nvarying vec3 shadow_vPosition[max_lights];\n\nvec4 shadow_setVertexPosition(vec4 position_commonspace) {\n  if (shadow_uDrawShadowMap) {\n    return project_common_position_to_clipspace(position_commonspace, shadow_uViewProjectionMatrices[shadow_uLightId], shadow_uProjectCenters[shadow_uLightId]);\n  }\n  if (shadow_uUseShadowMap) {\n    for (int i = 0; i < max_lights; i++) {\n      if(i < int(shadow_uLightCount)) {\n        vec4 shadowMap_position = project_common_position_to_clipspace(position_commonspace, shadow_uViewProjectionMatrices[i], shadow_uProjectCenters[i]);\n        shadow_vPosition[i] = (shadowMap_position.xyz / shadowMap_position.w + 1.0) / 2.0;\n      }\n    }\n  }\n  return gl_Position;\n}\n`;\n\nconst fs = `\nconst int max_lights = 2;\nuniform bool shadow_uDrawShadowMap;\nuniform bool shadow_uUseShadowMap;\nuniform sampler2D shadow_uShadowMap0;\nuniform sampler2D shadow_uShadowMap1;\nuniform vec4 shadow_uColor;\nuniform float shadow_uLightCount;\n\nvarying vec3 shadow_vPosition[max_lights];\n\nconst vec4 bitPackShift = vec4(1.0, 255.0, 65025.0, 16581375.0);\nconst vec4 bitUnpackShift = 1.0 / bitPackShift;\nconst vec4 bitMask = vec4(1.0 / 255.0, 1.0 / 255.0, 1.0 / 255.0,  0.0);\n\nfloat shadow_getShadowWeight(vec3 position, sampler2D shadowMap) {\n  vec4 rgbaDepth = texture2D(shadowMap, position.xy);\n\n  float z = dot(rgbaDepth, bitUnpackShift);\n  return smoothstep(0.001, 0.01, position.z - z);\n}\n\nvec4 shadow_filterShadowColor(vec4 color) {\n  if (shadow_uDrawShadowMap) {\n    vec4 rgbaDepth = fract(gl_FragCoord.z * bitPackShift);\n    rgbaDepth -= rgbaDepth.gbaa * bitMask;\n    return rgbaDepth;\n  }\n  if (shadow_uUseShadowMap) {\n    float shadowAlpha = 0.0;\n    shadowAlpha += shadow_getShadowWeight(shadow_vPosition[0], shadow_uShadowMap0);\n    if(shadow_uLightCount > 1.0) {\n      shadowAlpha += shadow_getShadowWeight(shadow_vPosition[1], shadow_uShadowMap1);\n    }\n    shadowAlpha *= shadow_uColor.a / shadow_uLightCount;\n    float blendedAlpha = shadowAlpha + color.a * (1.0 - shadowAlpha);\n\n    return vec4(\n      mix(color.rgb, shadow_uColor.rgb, shadowAlpha / blendedAlpha),\n      blendedAlpha\n    );\n  }\n  return color;\n}\n`;\n\nconst getMemoizedViewportCenterPosition = memoize(getViewportCenterPosition);\nconst getMemoizedViewProjectionMatrices = memoize(getViewProjectionMatrices);\n\nconst DEFAULT_SHADOW_COLOR = [0, 0, 0, 1.0];\nconst VECTOR_TO_POINT_MATRIX = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0];\n\ntype ShadowModuleSettings = {\n  viewport: Viewport;\n  shadowEnabled?: boolean;\n  drawToShadowMap?: boolean;\n  shadowMaps?: Texture2D[];\n  dummyShadowMap?: Texture2D;\n  shadowColor?: number[];\n  shadowMatrices?: Matrix4[];\n  shadowLightId?: number;\n};\n\nfunction screenToCommonSpace(xyz: number[], pixelUnprojectionMatrix: number[]): number[] {\n  const [x, y, z] = xyz;\n  const coord = pixelsToWorld([x, y, z], pixelUnprojectionMatrix);\n\n  if (Number.isFinite(z)) {\n    return coord;\n  }\n  return [coord[0], coord[1], 0];\n}\n\nfunction getViewportCenterPosition({\n  viewport,\n  center\n}: {\n  viewport: Viewport;\n  center: NumericArray;\n}): NumericArray {\n  return new Matrix4(viewport.viewProjectionMatrix).invert().transform(center);\n}\n\nfunction getViewProjectionMatrices({\n  viewport,\n  shadowMatrices\n}: {\n  viewport: Viewport;\n  shadowMatrices: Matrix4[];\n}): Matrix4[] {\n  const projectionMatrices: Matrix4[] = [];\n  const pixelUnprojectionMatrix = viewport.pixelUnprojectionMatrix;\n  const farZ = viewport.isGeospatial ? undefined : 1;\n  const corners = [\n    [0, 0, farZ], // top left ground\n    [viewport.width, 0, farZ], // top right ground\n    [0, viewport.height, farZ], // bottom left ground\n    [viewport.width, viewport.height, farZ], // bottom right ground\n    [0, 0, -1], // top left near\n    [viewport.width, 0, -1], // top right near\n    [0, viewport.height, -1], // bottom left near\n    [viewport.width, viewport.height, -1] // bottom right near\n  ].map(pixel =>\n    // @ts-expect-error z may be undefined\n    screenToCommonSpace(pixel, pixelUnprojectionMatrix)\n  );\n\n  for (const shadowMatrix of shadowMatrices) {\n    const viewMatrix = shadowMatrix.clone().translate(new Vector3(viewport.center).negate());\n    const positions = corners.map(corner => viewMatrix.transform(corner));\n    const projectionMatrix = new Matrix4().ortho({\n      left: Math.min(...positions.map(position => position[0])),\n      right: Math.max(...positions.map(position => position[0])),\n      bottom: Math.min(...positions.map(position => position[1])),\n      top: Math.max(...positions.map(position => position[1])),\n      near: Math.min(...positions.map(position => -position[2])),\n      far: Math.max(...positions.map(position => -position[2]))\n    });\n    projectionMatrices.push(projectionMatrix.multiplyRight(shadowMatrix));\n  }\n  return projectionMatrices;\n}\n\n/* eslint-disable camelcase */\n\n// eslint-disable-next-line complexity\nfunction createShadowUniforms(\n  opts: ShadowModuleSettings,\n  context: ProjectUniforms\n): Record<string, any> {\n  const {shadowEnabled = true} = opts;\n  if (!shadowEnabled || !opts.shadowMatrices || !opts.shadowMatrices.length) {\n    return {\n      shadow_uDrawShadowMap: false,\n      shadow_uUseShadowMap: false\n    };\n  }\n  const uniforms = {\n    shadow_uDrawShadowMap: Boolean(opts.drawToShadowMap),\n    shadow_uUseShadowMap: opts.shadowMaps ? opts.shadowMaps.length > 0 : false,\n    shadow_uColor: opts.shadowColor || DEFAULT_SHADOW_COLOR,\n    shadow_uLightId: opts.shadowLightId || 0,\n    shadow_uLightCount: opts.shadowMatrices.length\n  };\n\n  const center = getMemoizedViewportCenterPosition({\n    viewport: opts.viewport,\n    center: context.project_uCenter\n  });\n\n  const projectCenters: NumericArray[] = [];\n  const viewProjectionMatrices = getMemoizedViewProjectionMatrices({\n    shadowMatrices: opts.shadowMatrices,\n    viewport: opts.viewport\n  }).slice();\n\n  for (let i = 0; i < opts.shadowMatrices.length; i++) {\n    const viewProjectionMatrix = viewProjectionMatrices[i];\n    const viewProjectionMatrixCentered = viewProjectionMatrix\n      .clone()\n      .translate(new Vector3(opts.viewport.center).negate());\n\n    if (\n      context.project_uCoordinateSystem === COORDINATE_SYSTEM.LNGLAT &&\n      context.project_uProjectionMode === PROJECTION_MODE.WEB_MERCATOR\n    ) {\n      viewProjectionMatrices[i] = viewProjectionMatrixCentered;\n      projectCenters[i] = center;\n    } else {\n      viewProjectionMatrices[i] = viewProjectionMatrix\n        .clone()\n        .multiplyRight(VECTOR_TO_POINT_MATRIX);\n      projectCenters[i] = viewProjectionMatrixCentered.transform(center);\n    }\n  }\n\n  for (let i = 0; i < viewProjectionMatrices.length; i++) {\n    uniforms[`shadow_uViewProjectionMatrices[${i}]`] = viewProjectionMatrices[i];\n    uniforms[`shadow_uProjectCenters[${i}]`] = projectCenters[i];\n\n    if (opts.shadowMaps && opts.shadowMaps.length > 0) {\n      uniforms[`shadow_uShadowMap${i}`] = opts.shadowMaps[i];\n    } else {\n      uniforms[`shadow_uShadowMap${i}`] = opts.dummyShadowMap;\n    }\n  }\n  return uniforms;\n}\n\nexport default {\n  name: 'shadow',\n  dependencies: [project],\n  vs,\n  fs,\n  inject: {\n    'vs:DECKGL_FILTER_GL_POSITION': `\n    position = shadow_setVertexPosition(geometry.position);\n    `,\n    'fs:DECKGL_FILTER_COLOR': `\n    color = shadow_filterShadowColor(color);\n    `\n  },\n  getUniforms: (opts = {}, context = {}) => {\n    if (\n      'viewport' in opts &&\n      (opts.drawToShadowMap || (opts.shadowMaps && opts.shadowMaps.length > 0))\n    ) {\n      // @ts-expect-error if opts.viewport is defined, context should contain the project module's uniforms\n      return createShadowUniforms(opts, context);\n    }\n    return {};\n  }\n} as ShaderModule<ShadowModuleSettings>;\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n/* eslint-disable complexity, camelcase */\n\nimport * as mat4 from 'gl-matrix/mat4';\nimport * as vec4 from 'gl-matrix/vec4';\n\nimport {COORDINATE_SYSTEM, PROJECTION_MODE} from '../../lib/constants';\n\nimport memoize from '../../utils/memoize';\n\nimport type Viewport from '../../viewports/viewport';\nimport type {CoordinateSystem} from '../../lib/constants';\nimport type {NumericArray} from '../../types/types';\n\ntype Vec3 = [number, number, number];\ntype Vec4 = [number, number, number, number];\n\n// To quickly set a vector to zero\nconst ZERO_VECTOR: Vec4 = [0, 0, 0, 0];\n// 4x4 matrix that drops 4th component of vector\nconst VECTOR_TO_POINT_MATRIX = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0];\nconst IDENTITY_MATRIX = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\nconst DEFAULT_PIXELS_PER_UNIT2: Vec3 = [0, 0, 0];\nconst DEFAULT_COORDINATE_ORIGIN: Vec3 = [0, 0, 0];\n\nconst getMemoizedViewportUniforms = memoize(calculateViewportUniforms);\n\nexport function getOffsetOrigin(\n  viewport: Viewport,\n  coordinateSystem: CoordinateSystem,\n  coordinateOrigin: Vec3 = DEFAULT_COORDINATE_ORIGIN\n): {\n  geospatialOrigin: Vec3 | null;\n  shaderCoordinateOrigin: Vec3;\n  offsetMode: boolean;\n} {\n  if (coordinateOrigin.length < 3) {\n    coordinateOrigin = [coordinateOrigin[0], coordinateOrigin[1], 0];\n  }\n\n  let shaderCoordinateOrigin = coordinateOrigin;\n  let geospatialOrigin: Vec3 | null;\n  let offsetMode = true;\n\n  if (\n    coordinateSystem === COORDINATE_SYSTEM.LNGLAT_OFFSETS ||\n    coordinateSystem === COORDINATE_SYSTEM.METER_OFFSETS\n  ) {\n    geospatialOrigin = coordinateOrigin;\n  } else {\n    geospatialOrigin = viewport.isGeospatial\n      ? // @ts-expect-error longitude and latitude are not defined on the base Viewport, but is expected on geospatial viewports\n        [Math.fround(viewport.longitude), Math.fround(viewport.latitude), 0]\n      : null;\n  }\n\n  switch (viewport.projectionMode) {\n    case PROJECTION_MODE.WEB_MERCATOR:\n      if (\n        coordinateSystem === COORDINATE_SYSTEM.LNGLAT ||\n        coordinateSystem === COORDINATE_SYSTEM.CARTESIAN\n      ) {\n        geospatialOrigin = [0, 0, 0];\n        offsetMode = false;\n      }\n      break;\n\n    case PROJECTION_MODE.WEB_MERCATOR_AUTO_OFFSET:\n      if (coordinateSystem === COORDINATE_SYSTEM.LNGLAT) {\n        // viewport center in world space\n        // @ts-expect-error when using LNGLAT coordinates, we expect the viewport to be geospatial, in which case geospatialOrigin is defined\n        shaderCoordinateOrigin = geospatialOrigin;\n      } else if (coordinateSystem === COORDINATE_SYSTEM.CARTESIAN) {\n        // viewport center in common space\n        shaderCoordinateOrigin = [\n          Math.fround(viewport.center[0]),\n          Math.fround(viewport.center[1]),\n          0\n        ];\n        // Geospatial origin (wgs84) must match shaderCoordinateOrigin (common)\n        geospatialOrigin = viewport.unprojectPosition(shaderCoordinateOrigin);\n        shaderCoordinateOrigin[0] -= coordinateOrigin[0];\n        shaderCoordinateOrigin[1] -= coordinateOrigin[1];\n        shaderCoordinateOrigin[2] -= coordinateOrigin[2];\n      }\n      break;\n\n    case PROJECTION_MODE.IDENTITY:\n      shaderCoordinateOrigin = viewport.position.map(Math.fround) as Vec3;\n      shaderCoordinateOrigin[2] = shaderCoordinateOrigin[2] || 0;\n      break;\n\n    case PROJECTION_MODE.GLOBE:\n      offsetMode = false;\n      geospatialOrigin = null;\n      break;\n\n    default:\n      // Unknown projection mode\n      offsetMode = false;\n  }\n\n  return {geospatialOrigin, shaderCoordinateOrigin, offsetMode};\n}\n\n// The code that utilizes Matrix4 does the same calculation as their mat4 counterparts,\n// has lower performance but provides error checking.\nfunction calculateMatrixAndOffset(\n  viewport: Viewport,\n  coordinateSystem: CoordinateSystem,\n  coordinateOrigin: Vec3\n): {\n  viewMatrix: NumericArray;\n  viewProjectionMatrix: NumericArray;\n  projectionCenter: Vec4;\n  originCommon: Vec4;\n  cameraPosCommon: Vec3;\n  shaderCoordinateOrigin: Vec3;\n  geospatialOrigin: Vec3 | null;\n} {\n  const {viewMatrixUncentered, projectionMatrix} = viewport;\n  let {viewMatrix, viewProjectionMatrix} = viewport;\n\n  let projectionCenter = ZERO_VECTOR;\n  let originCommon: Vec4 = ZERO_VECTOR;\n  let cameraPosCommon: Vec3 = viewport.cameraPosition as Vec3;\n  const {geospatialOrigin, shaderCoordinateOrigin, offsetMode} = getOffsetOrigin(\n    viewport,\n    coordinateSystem,\n    coordinateOrigin\n  );\n\n  if (offsetMode) {\n    // Calculate transformed projectionCenter (using 64 bit precision JS)\n    // This is the key to offset mode precision\n    // (avoids doing this addition in 32 bit precision in GLSL)\n    // @ts-expect-error the 4th component is assigned below\n    originCommon = viewport.projectPosition(geospatialOrigin || shaderCoordinateOrigin);\n\n    cameraPosCommon = [\n      cameraPosCommon[0] - originCommon[0],\n      cameraPosCommon[1] - originCommon[1],\n      cameraPosCommon[2] - originCommon[2]\n    ];\n\n    originCommon[3] = 1;\n\n    // projectionCenter = new Matrix4(viewProjectionMatrix)\n    //   .transformVector([positionPixels[0], positionPixels[1], 0.0, 1.0]);\n    projectionCenter = vec4.transformMat4([], originCommon, viewProjectionMatrix);\n\n    // Always apply uncentered projection matrix if available (shader adds center)\n    viewMatrix = viewMatrixUncentered || viewMatrix;\n\n    // Zero out 4th coordinate (\"after\" model matrix) - avoids further translations\n    // viewMatrix = new Matrix4(viewMatrixUncentered || viewMatrix)\n    //   .multiplyRight(VECTOR_TO_POINT_MATRIX);\n    viewProjectionMatrix = mat4.multiply([], projectionMatrix, viewMatrix);\n    viewProjectionMatrix = mat4.multiply([], viewProjectionMatrix, VECTOR_TO_POINT_MATRIX);\n  }\n\n  return {\n    viewMatrix,\n    viewProjectionMatrix,\n    projectionCenter,\n    originCommon,\n    cameraPosCommon,\n    shaderCoordinateOrigin,\n    geospatialOrigin\n  };\n}\n\nexport type ProjectUniforms = {\n  project_uCoordinateSystem: number;\n  project_uProjectionMode: number;\n  project_uCoordinateOrigin: Vec3;\n  project_uCommonOrigin: Vec3;\n  project_uCenter: Vec4;\n  // Backward compatibility\n  // TODO: remove in v9\n  project_uPseudoMeters: boolean;\n\n  // Screen size\n  project_uViewportSize: [number, number];\n  project_uDevicePixelRatio: number;\n\n  project_uFocalDistance: number;\n  project_uCommonUnitsPerMeter: Vec3;\n  project_uCommonUnitsPerWorldUnit: Vec3;\n  project_uCommonUnitsPerWorldUnit2: Vec3;\n  /** 2^zoom */\n  project_uScale: number;\n  project_uWrapLongitude: boolean;\n\n  project_uViewProjectionMatrix: NumericArray;\n  project_uModelMatrix: NumericArray;\n\n  // This is for lighting calculations\n  project_uCameraPosition: Vec3;\n};\n\nexport type ProjectModuleSettings = {\n  viewport: Viewport;\n  devicePixelRatio?: number;\n  modelMatrix?: NumericArray | null;\n  coordinateSystem?: CoordinateSystem;\n  coordinateOrigin?: Vec3;\n  autoWrapLongitude?: boolean;\n};\n\n/**\n * Returns uniforms for shaders based on current projection\n * includes: projection matrix suitable for shaders\n *\n * TODO - Ensure this works with any viewport, not just WebMercatorViewports\n *\n * @param {WebMercatorViewport} viewport -\n * @return {Float32Array} - 4x4 projection matrix that can be used in shaders\n */\nexport function getUniformsFromViewport({\n  viewport,\n  devicePixelRatio = 1,\n  modelMatrix = null,\n  // Match Layer.defaultProps\n  coordinateSystem = COORDINATE_SYSTEM.DEFAULT,\n  coordinateOrigin = DEFAULT_COORDINATE_ORIGIN,\n  autoWrapLongitude = false\n}: ProjectModuleSettings): ProjectUniforms {\n  if (coordinateSystem === COORDINATE_SYSTEM.DEFAULT) {\n    coordinateSystem = viewport.isGeospatial\n      ? COORDINATE_SYSTEM.LNGLAT\n      : COORDINATE_SYSTEM.CARTESIAN;\n  }\n\n  const uniforms = getMemoizedViewportUniforms({\n    viewport,\n    devicePixelRatio,\n    coordinateSystem,\n    coordinateOrigin\n  });\n\n  uniforms.project_uWrapLongitude = autoWrapLongitude;\n  uniforms.project_uModelMatrix = modelMatrix || IDENTITY_MATRIX;\n\n  return uniforms;\n}\n\nfunction calculateViewportUniforms({\n  viewport,\n  devicePixelRatio,\n  coordinateSystem,\n  coordinateOrigin\n}: {\n  viewport: Viewport;\n  devicePixelRatio: number;\n  coordinateSystem: CoordinateSystem;\n  coordinateOrigin: Vec3;\n}): ProjectUniforms {\n  const {\n    projectionCenter,\n    viewProjectionMatrix,\n    originCommon,\n    cameraPosCommon,\n    shaderCoordinateOrigin,\n    geospatialOrigin\n  } = calculateMatrixAndOffset(viewport, coordinateSystem, coordinateOrigin);\n\n  // Calculate projection pixels per unit\n  const distanceScales = viewport.getDistanceScales();\n\n  const viewportSize: [number, number] = [\n    viewport.width * devicePixelRatio,\n    viewport.height * devicePixelRatio\n  ];\n\n  // Distance at which screen pixels are projected.\n  // Used to scale sizes in clipspace to match screen pixels.\n  // When using Viewport class's default projection matrix, this yields 1 for orthographic\n  // and `viewport.focalDistance` for perspective views\n  const focalDistance =\n    vec4.transformMat4([], [0, 0, -viewport.focalDistance, 1], viewport.projectionMatrix)[3] || 1;\n\n  const uniforms: ProjectUniforms = {\n    // Projection mode values\n    project_uCoordinateSystem: coordinateSystem,\n    project_uProjectionMode: viewport.projectionMode,\n    project_uCoordinateOrigin: shaderCoordinateOrigin,\n    project_uCommonOrigin: originCommon.slice(0, 3) as Vec3,\n    project_uCenter: projectionCenter,\n\n    // Backward compatibility\n    // TODO: remove in v9\n    // @ts-expect-error _pseudoMeters is only defined on WebMercator viewport\n    project_uPseudoMeters: Boolean(viewport._pseudoMeters),\n\n    // Screen size\n    project_uViewportSize: viewportSize,\n    project_uDevicePixelRatio: devicePixelRatio,\n\n    project_uFocalDistance: focalDistance,\n    project_uCommonUnitsPerMeter: distanceScales.unitsPerMeter as Vec3,\n    project_uCommonUnitsPerWorldUnit: distanceScales.unitsPerMeter as Vec3,\n    project_uCommonUnitsPerWorldUnit2: DEFAULT_PIXELS_PER_UNIT2,\n    project_uScale: viewport.scale, // This is the mercator scale (2 ** zoom)\n    project_uWrapLongitude: false,\n\n    project_uViewProjectionMatrix: viewProjectionMatrix,\n    project_uModelMatrix: IDENTITY_MATRIX,\n\n    // This is for lighting calculations\n    project_uCameraPosition: cameraPosCommon\n  };\n\n  if (geospatialOrigin) {\n    // Get high-precision DistanceScales from geospatial viewport\n    // TODO: stricter types in Viewport classes\n    const distanceScalesAtOrigin = viewport.getDistanceScales(geospatialOrigin) as {\n      unitsPerMeter: Vec3;\n      metersPerUnit: Vec3;\n      unitsPerMeter2: Vec3;\n      unitsPerDegree: Vec3;\n      degreesPerUnit: Vec3;\n      unitsPerDegree2: Vec3;\n    };\n    switch (coordinateSystem) {\n      case COORDINATE_SYSTEM.METER_OFFSETS:\n        uniforms.project_uCommonUnitsPerWorldUnit = distanceScalesAtOrigin.unitsPerMeter;\n        uniforms.project_uCommonUnitsPerWorldUnit2 = distanceScalesAtOrigin.unitsPerMeter2;\n        break;\n\n      case COORDINATE_SYSTEM.LNGLAT:\n      case COORDINATE_SYSTEM.LNGLAT_OFFSETS:\n        // @ts-expect-error _pseudoMeters only exists on WebMercatorView\n        if (!viewport._pseudoMeters) {\n          uniforms.project_uCommonUnitsPerMeter = distanceScalesAtOrigin.unitsPerMeter;\n        }\n        uniforms.project_uCommonUnitsPerWorldUnit = distanceScalesAtOrigin.unitsPerDegree;\n        uniforms.project_uCommonUnitsPerWorldUnit2 = distanceScalesAtOrigin.unitsPerDegree2;\n        break;\n\n      // a.k.a \"preprojected\" positions\n      case COORDINATE_SYSTEM.CARTESIAN:\n        uniforms.project_uCommonUnitsPerWorldUnit = [1, 1, distanceScalesAtOrigin.unitsPerMeter[2]];\n        uniforms.project_uCommonUnitsPerWorldUnit2 = [\n          0,\n          0,\n          distanceScalesAtOrigin.unitsPerMeter2[2]\n        ];\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  return uniforms;\n}\n","var objectWithoutPropertiesLoose = require(\"./objectWithoutPropertiesLoose.js\");\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutProperties;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","import type Viewport from '../viewports/viewport';\n\nexport default abstract class ViewState<T, Props, State> implements IViewState<T> {\n  private _viewportProps: Required<Props>;\n  private _state: State;\n\n  constructor(props: Required<Props>, state: State) {\n    this._viewportProps = this.applyConstraints(props);\n    this._state = state;\n  }\n\n  getViewportProps(): Required<Props> {\n    return this._viewportProps;\n  }\n\n  getState(): State {\n    return this._state;\n  }\n\n  abstract applyConstraints(props: Required<Props>): Required<Props>;\n\n  abstract shortestPathFrom(viewState: T): Props;\n\n  abstract panStart(params: {pos: [number, number]}): T;\n  abstract pan({pos, startPos}: {pos: [number, number]; startPos?: [number, number]}): T;\n  abstract panEnd(): T;\n\n  abstract rotateStart(params: {pos: [number, number]}): T;\n  abstract rotate(params: {pos?: [number, number]; deltaAngleX?: number; deltaAngleY: number}): T;\n  abstract rotateEnd(): T;\n\n  abstract zoomStart({pos}: {pos: [number, number]}): T;\n  abstract zoom({\n    pos,\n    startPos,\n    scale\n  }: {\n    pos: [number, number];\n    startPos?: [number, number];\n    scale: number;\n  }): T;\n  abstract zoomEnd(): T;\n\n  abstract zoomIn(speed?: number): T;\n  abstract zoomOut(speed?: number): T;\n\n  abstract moveLeft(speed?: number): T;\n  abstract moveRight(speed?: number): T;\n  abstract moveUp(speed?: number): T;\n  abstract moveDown(speed?: number): T;\n\n  abstract rotateLeft(speed?: number): T;\n  abstract rotateRight(speed?: number): T;\n  abstract rotateUp(speed?: number): T;\n  abstract rotateDown(speed?: number): T;\n}\n\nexport interface IViewState<T> {\n  makeViewport?: (props: Record<string, any>) => Viewport;\n\n  getViewportProps(): Record<string, any>;\n\n  getState(): Record<string, any>;\n\n  shortestPathFrom(viewState: T): Record<string, any>;\n\n  panStart(params: {pos: [number, number]}): T;\n  pan({pos, startPos}: {pos: [number, number]; startPos?: [number, number]}): T;\n  panEnd(): T;\n\n  rotateStart(params: {pos: [number, number]}): T;\n  rotate(params: {pos?: [number, number]; deltaAngleX?: number; deltaAngleY?: number}): T;\n  rotateEnd(): T;\n\n  zoomStart({pos}: {pos: [number, number]}): T;\n  zoom({\n    pos,\n    startPos,\n    scale\n  }: {\n    pos: [number, number];\n    startPos?: [number, number];\n    scale: number;\n  }): T;\n  zoomEnd(): T;\n\n  zoomIn(speed?: number): T;\n  zoomOut(speed?: number): T;\n\n  moveLeft(speed?: number): T;\n  moveRight(speed?: number): T;\n  moveUp(speed?: number): T;\n  moveDown(speed?: number): T;\n\n  rotateLeft(speed?: number): T;\n  rotateRight(speed?: number): T;\n  rotateUp(speed?: number): T;\n  rotateDown(speed?: number): T;\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n// Note: The numeric values here are matched by shader code in the\n// \"project\" and \"project64\" shader modules. Both places need to be\n// updated.\nimport log from '../utils/log';\n\n/**\n * The coordinate system that positions/dimensions are defined in.\n */\nexport const COORDINATE_SYSTEM = {\n  /**\n   * `LNGLAT` if rendering into a geospatial viewport, `CARTESIAN` otherwise\n   */\n  DEFAULT: -1,\n  /**\n   * Positions are interpreted as [longitude, latitude, elevation]\n   * longitude/latitude are in degrees, elevation is in meters.\n   * Dimensions are in meters.\n   */\n  LNGLAT: 1,\n\n  /**\n   * Positions are interpreted as [x, y, z] in meter offsets from the coordinate origin.\n   * Dimensions are in meters.\n   */\n  METER_OFFSETS: 2,\n\n  /**\n   * Positions are interpreted as [deltaLng, deltaLat, elevation] from the coordinate origin.\n   * deltaLng/deltaLat are in degrees, elevation is in meters.\n   * Dimensions are in meters.\n   */\n  LNGLAT_OFFSETS: 3,\n\n  /**\n   * Positions and dimensions are in the common units of the viewport.\n   */\n  CARTESIAN: 0\n} as const;\n\n// Enums cannot be directly exported as they are not transpiled correctly into ES5, see https://github.com/visgl/deck.gl/issues/7130\nexport type CoordinateSystem = -1 | 0 | 1 | 2 | 3;\n\n// Deprecated\n/* eslint-disable accessor-pairs */\nObject.defineProperty(COORDINATE_SYSTEM, 'IDENTITY', {\n  get: () => {\n    log.deprecated('COORDINATE_SYSTEM.IDENTITY', 'COORDINATE_SYSTEM.CARTESIAN')();\n    return 0;\n  }\n});\n/* eslint-enable accessor-pairs */\n\n/**\n * How coordinates are transformed from the world space into the common space.\n */\nexport const PROJECTION_MODE = {\n  /**\n   * Render geospatial data in Web Mercator projection\n   */\n  WEB_MERCATOR: 1,\n  /**\n   * Render geospatial data as a 3D globe\n   */\n  GLOBE: 2,\n\n  /**\n   * (Internal use only) Web Mercator projection at high zoom\n   */\n  WEB_MERCATOR_AUTO_OFFSET: 4,\n\n  /**\n   * No transformation\n   */\n  IDENTITY: 0\n} as const;\n\nexport const UNIT = {\n  common: 0,\n  meters: 1,\n  pixels: 2\n} as const;\n\nexport const EVENTS = {\n  click: {handler: 'onClick'},\n  panstart: {handler: 'onDragStart'},\n  panmove: {handler: 'onDrag'},\n  panend: {handler: 'onDragEnd'}\n} as const;\n\n/**\n * @deprecated Use string constants directly\n */\nexport const OPERATION = {\n  DRAW: 'draw',\n  MASK: 'mask',\n  TERRAIN: 'terrain'\n} as const;\n","import _typeof from \"@babel/runtime/helpers/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","/* eslint-disable camelcase */\nimport {NumericArray} from '@math.gl/types';\n// vec2 additions\n\nexport function vec2_transformMat4AsVector<T extends NumericArray>(\n  out: T,\n  a: Readonly<NumericArray>,\n  m: Readonly<NumericArray>\n): T {\n  const x = a[0];\n  const y = a[1];\n  const w = m[3] * x + m[7] * y || 1.0;\n  out[0] = (m[0] * x + m[4] * y) / w;\n  out[1] = (m[1] * x + m[5] * y) / w;\n  return out;\n}\n\n// vec3 additions\n\n// Transform as vector, only uses 3x3 minor matrix\nexport function vec3_transformMat4AsVector<T extends NumericArray>(\n  out: T,\n  a: Readonly<NumericArray>,\n  m: Readonly<NumericArray>\n): T {\n  const x = a[0];\n  const y = a[1];\n  const z = a[2];\n  const w = m[3] * x + m[7] * y + m[11] * z || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z) / w;\n  return out;\n}\n\nexport function vec3_transformMat2<T extends NumericArray>(\n  out: T,\n  a: Readonly<NumericArray>,\n  m: Readonly<NumericArray>\n): T {\n  const x = a[0];\n  const y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  out[2] = a[2];\n  return out;\n}\n\n// vec4 additions\n\nexport function vec4_transformMat2<T extends NumericArray>(\n  out: T,\n  a: Readonly<NumericArray>,\n  m: Readonly<NumericArray>\n): T {\n  const x = a[0];\n  const y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\nexport function vec4_transformMat3<T extends NumericArray>(\n  out: T,\n  a: Readonly<NumericArray>,\n  m: Readonly<NumericArray>\n): T {\n  const x = a[0];\n  const y = a[1];\n  const z = a[2];\n  out[0] = m[0] * x + m[3] * y + m[6] * z;\n  out[1] = m[1] * x + m[4] * y + m[7] * z;\n  out[2] = m[2] * x + m[5] * y + m[8] * z;\n  out[3] = a[3];\n  return out;\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport Layer, {UpdateParameters} from './layer';\nimport debug from '../debug';\nimport {flatten} from '../utils/flatten';\n\nimport type AttributeManager from './attribute/attribute-manager';\nimport type {PickingInfo, GetPickingInfoParams} from './picking/pick-info';\nimport type {FilterContext} from '../passes/layers-pass';\nimport type {LayersList, LayerContext} from './layer-manager';\nimport type {CompositeLayerProps, Accessor, AccessorContext} from '../types/layer-props';\nimport {ConstructorOf} from '../types/types';\nimport {PROP_TYPES_SYMBOL} from '../lifecycle/constants';\n\nconst TRACE_RENDER_LAYERS = 'compositeLayer.renderLayers';\n\nexport default abstract class CompositeLayer<PropsT extends {} = {}> extends Layer<\n  PropsT & Required<CompositeLayerProps>\n> {\n  static layerName: string = 'CompositeLayer';\n\n  /** `true` if this layer renders other layers */\n  get isComposite(): boolean {\n    return true;\n  }\n\n  /** Returns true if all async resources are loaded */\n  get isLoaded(): boolean {\n    return super.isLoaded && this.getSubLayers().every(layer => layer.isLoaded);\n  }\n\n  /** Return last rendered sub layers */\n  getSubLayers(): Layer[] {\n    return (this.internalState && this.internalState.subLayers) || [];\n  }\n\n  // initializeState is usually not needed for composite layers\n  // Provide empty definition to disable check for missing definition\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  initializeState(context: LayerContext): void {}\n\n  /** Updates selected state members and marks the composite layer to need rerender */\n  setState(updateObject: any): void {\n    super.setState(updateObject);\n    // Trigger a layer update\n    // Although conceptually layer.draw and compositeLayer.renderLayers are equivalent,\n    // they are executed during different lifecycles.\n    // draw can be called without calling updateState (e.g. most viewport changes),\n    // while renderLayers can only be called during a recursive layer update.\n    this.setNeedsUpdate();\n  }\n\n  /** called to augment the info object that is bubbled up from a sublayer\n      override Layer.getPickingInfo() because decoding / setting uniform do\n      not apply to a composite layer. */\n  getPickingInfo({info}: GetPickingInfoParams): PickingInfo {\n    const {object} = info;\n    const isDataWrapped =\n      object && object.__source && object.__source.parent && object.__source.parent.id === this.id;\n\n    if (!isDataWrapped) {\n      return info;\n    }\n\n    // override object with picked data\n    info.object = object.__source.object;\n    info.index = object.__source.index;\n\n    return info;\n  }\n\n  // Implement to generate subLayers\n  abstract renderLayers(): Layer | null | LayersList;\n\n  /**\n   * Filters sub layers at draw time. Return true if the sub layer should be drawn.\n   */\n  filterSubLayer(context: FilterContext): boolean {\n    return true;\n  }\n\n  /** Returns true if sub layer needs to be rendered */\n  protected shouldRenderSubLayer(subLayerId: string, data: any): boolean {\n    return data && data.length;\n  }\n\n  /** Returns sub layer class for a specific sublayer */\n  protected getSubLayerClass<T extends Layer>(\n    subLayerId: string,\n    DefaultLayerClass: ConstructorOf<T>\n  ): ConstructorOf<T> {\n    const {_subLayerProps: overridingProps} = this.props;\n\n    return (\n      (overridingProps &&\n        overridingProps[subLayerId] &&\n        (overridingProps[subLayerId].type as ConstructorOf<T>)) ||\n      DefaultLayerClass\n    );\n  }\n\n  /** When casting user data into another format to pass to sublayers,\n      add reference to the original object and object index */\n  protected getSubLayerRow<T>(row: T, sourceObject: any, sourceObjectIndex: number): T {\n    // @ts-ignore (TS2339) adding undefined property\n    row.__source = {\n      parent: this,\n      object: sourceObject,\n      index: sourceObjectIndex\n    };\n    return row;\n  }\n\n  /** Some composite layers cast user data into another format before passing to sublayers\n    We need to unwrap them before calling the accessor so that they see the original data\n    objects */\n  protected getSubLayerAccessor<In, Out>(accessor: Accessor<In, Out>): Accessor<In, Out> {\n    if (typeof accessor === 'function') {\n      const objectInfo: AccessorContext<In> = {\n        index: -1,\n        // @ts-ignore accessing resolved data\n        data: this.props.data,\n        target: []\n      };\n      return (x: any, i: AccessorContext<In>) => {\n        if (x && x.__source) {\n          objectInfo.index = x.__source.index;\n          // @ts-ignore (TS2349) Out is never a function\n          return accessor(x.__source.object as In, objectInfo);\n        }\n        // @ts-ignore (TS2349) Out is never a function\n        return accessor(x as In, i);\n      };\n    }\n    return accessor;\n  }\n\n  /** Returns sub layer props for a specific sublayer */\n  // eslint-disable-next-line complexity\n  protected getSubLayerProps(\n    sublayerProps: {\n      id?: string;\n      updateTriggers?: Record<string, any>;\n      [propName: string]: any;\n    } = {}\n  ): any {\n    const {\n      opacity,\n      pickable,\n      visible,\n      parameters,\n      getPolygonOffset,\n      highlightedObjectIndex,\n      autoHighlight,\n      highlightColor,\n      coordinateSystem,\n      coordinateOrigin,\n      wrapLongitude,\n      positionFormat,\n      modelMatrix,\n      extensions,\n      fetch,\n      operation,\n      _subLayerProps: overridingProps\n    } = this.props;\n    const newProps = {\n      id: '',\n      updateTriggers: {},\n      opacity,\n      pickable,\n      visible,\n      parameters,\n      getPolygonOffset,\n      highlightedObjectIndex,\n      autoHighlight,\n      highlightColor,\n      coordinateSystem,\n      coordinateOrigin,\n      wrapLongitude,\n      positionFormat,\n      modelMatrix,\n      extensions,\n      fetch,\n      operation\n    };\n\n    const overridingSublayerProps =\n      overridingProps && sublayerProps.id && overridingProps[sublayerProps.id];\n    const overridingSublayerTriggers =\n      overridingSublayerProps && overridingSublayerProps.updateTriggers;\n    const sublayerId = sublayerProps.id || 'sublayer';\n\n    if (overridingSublayerProps) {\n      const propTypes = this.props[PROP_TYPES_SYMBOL];\n      const subLayerPropTypes = sublayerProps.type ? sublayerProps.type._propTypes : {};\n      for (const key in overridingSublayerProps) {\n        const propType = subLayerPropTypes[key] || propTypes[key];\n        // eslint-disable-next-line\n        if (propType && propType.type === 'accessor') {\n          overridingSublayerProps[key] = this.getSubLayerAccessor(overridingSublayerProps[key]);\n        }\n      }\n    }\n\n    Object.assign(\n      newProps,\n      sublayerProps,\n      // experimental feature that allows users to override sublayer props via parent layer prop\n      overridingSublayerProps\n    );\n    newProps.id = `${this.props.id}-${sublayerId}`;\n    newProps.updateTriggers = {\n      all: this.props.updateTriggers?.all,\n      ...sublayerProps.updateTriggers,\n      ...overridingSublayerTriggers\n    };\n\n    // Pass through extension props\n    // @ts-ignore (TS2532) extensions is always defined after merging with default props\n    for (const extension of extensions) {\n      const passThroughProps = extension.getSubLayerProps.call(this, extension);\n      if (passThroughProps) {\n        Object.assign(newProps, passThroughProps, {\n          updateTriggers: Object.assign(newProps.updateTriggers, passThroughProps.updateTriggers)\n        });\n      }\n    }\n\n    return newProps;\n  }\n\n  /** Update sub layers to highlight the hovered object */\n  protected _updateAutoHighlight(info: PickingInfo): void {\n    for (const layer of this.getSubLayers()) {\n      layer.updateAutoHighlight(info);\n    }\n  }\n\n  /** Override base Layer method */\n  protected _getAttributeManager(): AttributeManager | null {\n    return null;\n  }\n\n  /** (Internal) Called after an update to rerender sub layers */\n  protected _postUpdate(updateParams: UpdateParameters<this>, forceUpdate: boolean) {\n    // @ts-ignore (TS2531) this method is only called internally when internalState is defined\n    let subLayers = this.internalState.subLayers as Layer[];\n    const shouldUpdate = !subLayers || this.needsUpdate();\n    if (shouldUpdate) {\n      const subLayersList = this.renderLayers();\n      // Flatten the returned array, removing any null, undefined or false\n      // this allows layers to render sublayers conditionally\n      // (see CompositeLayer.renderLayers docs)\n      subLayers = flatten(subLayersList, Boolean) as Layer[];\n      // @ts-ignore (TS2531) this method is only called internally when internalState is defined\n      this.internalState.subLayers = subLayers;\n    }\n    debug(TRACE_RENDER_LAYERS, this, shouldUpdate, subLayers);\n\n    // populate reference to parent layer (this layer)\n    // NOTE: needs to be done even when reusing layers as the parent may have changed\n    for (const layer of subLayers) {\n      layer.parent = this;\n    }\n  }\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {log} from '@deck.gl/core';\n\n// a scale function wrapper just like d3-scales\nexport function getScale(domain, range, scaleFunction) {\n  const scale = scaleFunction;\n  scale.domain = () => domain;\n  scale.range = () => range;\n\n  return scale;\n}\n\n// Quantize scale is similar to linear scales,\n// except it uses a discrete rather than continuous range\n// return a quantize scale function\nexport function getQuantizeScale(domain, range) {\n  const scaleFunction = value => quantizeScale(domain, range, value);\n\n  return getScale(domain, range, scaleFunction);\n}\n\n// return a linear scale function\nexport function getLinearScale(domain, range) {\n  const scaleFunction = value => linearScale(domain, range, value);\n\n  return getScale(domain, range, scaleFunction);\n}\n\nexport function getQuantileScale(domain, range) {\n  // calculate threshold\n  const sortedDomain = domain.sort(ascending);\n  let i = 0;\n  const n = Math.max(1, range.length);\n  const thresholds = new Array(n - 1);\n  while (++i < n) {\n    thresholds[i - 1] = threshold(sortedDomain, i / n);\n  }\n\n  const scaleFunction = value => thresholdsScale(thresholds, range, value);\n  scaleFunction.thresholds = () => thresholds;\n\n  return getScale(domain, range, scaleFunction);\n}\n\nfunction ascending(a, b) {\n  return a - b;\n}\n\nfunction threshold(domain, fraction) {\n  const domainLength = domain.length;\n  if (fraction <= 0 || domainLength < 2) {\n    return domain[0];\n  }\n  if (fraction >= 1) {\n    return domain[domainLength - 1];\n  }\n\n  const domainFraction = (domainLength - 1) * fraction;\n  const lowIndex = Math.floor(domainFraction);\n  const low = domain[lowIndex];\n  const high = domain[lowIndex + 1];\n  return low + (high - low) * (domainFraction - lowIndex);\n}\n\nfunction bisectRight(a, x) {\n  let lo = 0;\n  let hi = a.length;\n  while (lo < hi) {\n    const mid = (lo + hi) >>> 1;\n    if (ascending(a[mid], x) > 0) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  return lo;\n}\n\n// return a quantize scale function\nfunction thresholdsScale(thresholds, range, value) {\n  return range[bisectRight(thresholds, value)];\n}\n\n// ordinal Scale\nfunction ordinalScale(domain, domainMap, range, value) {\n  const key = `${value}`;\n  let d = domainMap.get(key);\n  if (d === undefined) {\n    // update the domain\n    d = domain.push(value);\n    domainMap.set(key, d);\n  }\n  return range[(d - 1) % range.length];\n}\n\nexport function getOrdinalScale(domain, range) {\n  const domainMap = new Map();\n  const uniqueDomain = [];\n  for (const d of domain) {\n    const key = `${d}`;\n    if (!domainMap.has(key)) {\n      domainMap.set(key, uniqueDomain.push(d));\n    }\n  }\n\n  const scaleFunction = value => ordinalScale(uniqueDomain, domainMap, range, value);\n\n  return getScale(domain, range, scaleFunction);\n}\n\n// Quantize scale is similar to linear scales,\n// except it uses a discrete rather than continuous range\nexport function quantizeScale(domain, range, value) {\n  const domainRange = domain[1] - domain[0];\n  if (domainRange <= 0) {\n    log.warn('quantizeScale: invalid domain, returning range[0]')();\n    return range[0];\n  }\n  const step = domainRange / range.length;\n  const idx = Math.floor((value - domain[0]) / step);\n  const clampIdx = Math.max(Math.min(idx, range.length - 1), 0);\n\n  return range[clampIdx];\n}\n\n// Linear scale maps continuous domain to continuous range\nexport function linearScale(domain, range, value) {\n  return ((value - domain[0]) / (domain[1] - domain[0])) * (range[1] - range[0]) + range[0];\n}\n\n// get scale domains\nfunction notNullOrUndefined(d) {\n  return d !== undefined && d !== null;\n}\n\nexport function unique(values) {\n  const results = [];\n  values.forEach(v => {\n    if (!results.includes(v) && notNullOrUndefined(v)) {\n      results.push(v);\n    }\n  });\n\n  return results;\n}\n\nfunction getTruthyValues(data, valueAccessor) {\n  const values = typeof valueAccessor === 'function' ? data.map(valueAccessor) : data;\n  return values.filter(notNullOrUndefined);\n}\n\nexport function getLinearDomain(data, valueAccessor) {\n  const sorted = getTruthyValues(data, valueAccessor).sort();\n  return sorted.length ? [sorted[0], sorted[sorted.length - 1]] : [0, 0];\n}\n\nexport function getQuantileDomain(data, valueAccessor) {\n  return getTruthyValues(data, valueAccessor);\n}\n\nexport function getOrdinalDomain(data, valueAccessor) {\n  return unique(getTruthyValues(data, valueAccessor));\n}\n\nexport function getScaleDomain(scaleType, data, valueAccessor) {\n  switch (scaleType) {\n    case 'quantize':\n    case 'linear':\n      return getLinearDomain(data, valueAccessor);\n\n    case 'quantile':\n      return getQuantileDomain(data, valueAccessor);\n\n    case 'ordinal':\n      return getOrdinalDomain(data, valueAccessor);\n\n    default:\n      return getLinearDomain(data, valueAccessor);\n  }\n}\n\nexport function clamp(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\n\nexport function getScaleFunctionByScaleType(scaleType) {\n  switch (scaleType) {\n    case 'quantize':\n      return getQuantizeScale;\n    case 'linear':\n      return getLinearScale;\n    case 'quantile':\n      return getQuantileScale;\n    case 'ordinal':\n      return getOrdinalScale;\n\n    default:\n      return getQuantizeScale;\n  }\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {\n  Accessor,\n  AccessorFunction,\n  Color,\n  CompositeLayer,\n  CompositeLayerProps,\n  createIterable,\n  Layer,\n  LayerDataSource,\n  LayersList,\n  log,\n  Unit,\n  Material,\n  UpdateParameters,\n  DefaultProps\n} from '@deck.gl/core';\nimport SolidPolygonLayer from '../solid-polygon-layer/solid-polygon-layer';\nimport PathLayer from '../path-layer/path-layer';\nimport * as Polygon from '../solid-polygon-layer/polygon';\nimport {replaceInRange} from '../utils';\n\n/**\n * All properties supported by `PolygonLayer`.\n */\nexport type PolygonLayerProps<DataT = any> = _PolygonLayerProps<DataT> & CompositeLayerProps;\n\n/**\n * Properties added by `PolygonLayer`.\n */\ntype _PolygonLayerProps<DataT = any> = {\n  data: LayerDataSource<DataT>;\n  /**\n   * Whether to draw an outline around the polygon (solid fill).\n   *\n   * Note that both the outer polygon as well the outlines of any holes will be drawn.\n   *\n   * @default true\n   */\n  stroked?: boolean;\n\n  /**\n   * Whether to draw a filled polygon (solid fill).\n   *\n   * Note that only the area between the outer polygon and any holes will be filled.\n   *\n   * @default true\n   */\n  filled?: boolean;\n\n  /**\n   * Whether to extrude the polygons.\n   *\n   * Based on the elevations provided by the `getElevation` accessor.\n   *\n   * If set to `false`, all polygons will be flat, this generates less geometry and is faster\n   * than simply returning 0 from getElevation.\n   *\n   * @default false\n   */\n  extruded?: boolean;\n\n  /**\n   * Elevation multiplier.\n   *\n   * The final elevation is calculated by `elevationScale * getElevation(d)`.\n   * `elevationScale` is a handy property to scale all elevation without updating the data.\n   *\n   * @default 1\n   */\n  elevationScale?: number;\n\n  /**\n   * Whether to generate a line wireframe of the hexagon.\n   *\n   * The outline will have \"horizontal\" lines closing the top and bottom polygons and a vertical\n   * line (a \"strut\") for each vertex on the polygon.\n   *\n   * @default false\n   */\n  wireframe?: boolean;\n\n  /**\n   * The units of the line width, one of `meters`, `common`, and `pixels`.\n   *\n   * @default 'meters'\n   * @see Unit.\n   */\n  lineWidthUnits?: Unit;\n\n  /**\n   * The line width multiplier that multiplied to all outlines of `Polygon` and `MultiPolygon`\n   * features if the stroked attribute is true.\n   *\n   * @default 1\n   */\n  lineWidthScale?: number;\n\n  /**\n   * The minimum line width in pixels.\n   *\n   * @default 0\n   */\n  lineWidthMinPixels?: number;\n\n  /**\n   * The maximum line width in pixels\n   *\n   * @default Number.MAX_SAFE_INTEGER\n   */\n  lineWidthMaxPixels?: number;\n\n  /**\n   * Type of joint. If `true`, draw round joints. Otherwise draw miter joints.\n   *\n   * @default false\n   */\n  lineJointRounded?: boolean;\n\n  /**\n   * The maximum extent of a joint in ratio to the stroke width.\n   *\n   * Only works if `lineJointRounded` is false.\n   *\n   * @default 4\n   */\n  lineMiterLimit?: number;\n\n  lineDashJustified?: boolean;\n\n  /** Called on each object in the data stream to retrieve its corresponding polygon. */\n  getPolygon?: AccessorFunction<DataT, any>;\n\n  /**\n   * Fill collor value or accessor.\n   *\n   * @default [0, 0, 0, 255]\n   */\n  getFillColor?: Accessor<DataT, Color>;\n\n  /**\n   * Line color value or accessor.\n   *\n   * @default [0, 0, 0, 255]\n   */\n  getLineColor?: Accessor<DataT, Color>;\n\n  /**\n   * Line width value or accessor.\n   *\n   * @default [0, 0, 0, 255]\n   */\n  getLineWidth?: Accessor<DataT, number>;\n\n  /**\n   * Elevation valur or accessor.\n   *\n   * Only used if `extruded: true`.\n   *\n   * @default 1000\n   */\n  getElevation?: Accessor<DataT, number>;\n\n  /**\n   * This property has been moved to `PathStyleExtension`.\n   *\n   * @deprecated\n   */\n  getLineDashArray?: Accessor<DataT, number> | null;\n\n  /**\n   * If `false`, will skip normalizing the coordinates returned by `getPolygon`.\n   *\n   * **Note**: This prop is experimental\n   *\n   * @default true\n   */\n  _normalize?: boolean;\n\n  /**\n   * Specifies the winding order of rings in the polygon data.\n   *\n   * **Note**: This prop is experimental\n   *\n   * @default 'CW'\n   */\n  _windingOrder?: 'CW' | 'CCW';\n\n  /**\n   * Material settings for lighting effect. Applies if `extruded: true`.\n   *\n   * @default true\n   * @see https://deck.gl/docs/developer-guide/using-lighting\n   */\n  material?: Material;\n};\n\nconst defaultLineColor: [number, number, number, number] = [0, 0, 0, 255];\nconst defaultFillColor: [number, number, number, number] = [0, 0, 0, 255];\n\nconst defaultProps: DefaultProps<PolygonLayerProps> = {\n  stroked: true,\n  filled: true,\n  extruded: false,\n  elevationScale: 1,\n  wireframe: false,\n  _normalize: true,\n  _windingOrder: 'CW',\n\n  lineWidthUnits: 'meters',\n  lineWidthScale: 1,\n  lineWidthMinPixels: 0,\n  lineWidthMaxPixels: Number.MAX_SAFE_INTEGER,\n  lineJointRounded: false,\n  lineMiterLimit: 4,\n\n  getPolygon: {type: 'accessor', value: f => f.polygon},\n  // Polygon fill color\n  getFillColor: {type: 'accessor', value: defaultFillColor},\n  // Point, line and polygon outline color\n  getLineColor: {type: 'accessor', value: defaultLineColor},\n  // Line and polygon outline accessors\n  getLineWidth: {type: 'accessor', value: 1},\n  // Polygon extrusion accessor\n  getElevation: {type: 'accessor', value: 1000},\n\n  // Optional material for 'lighting' shader module\n  material: true\n};\n\n/** A composite layer that renders filled, stroked and/or extruded polygons. */\nexport default class PolygonLayer<DataT = any, ExtraProps extends {} = {}> extends CompositeLayer<\n  Required<_PolygonLayerProps<DataT>> & ExtraProps\n> {\n  static layerName = 'PolygonLayer';\n  static defaultProps = defaultProps;\n\n  initializeState(): void {\n    this.state = {\n      paths: []\n    };\n\n    if (this.props.getLineDashArray) {\n      log.removed('getLineDashArray', 'PathStyleExtension')();\n    }\n  }\n\n  updateState({changeFlags}: UpdateParameters<this>) {\n    const geometryChanged =\n      changeFlags.dataChanged ||\n      (changeFlags.updateTriggersChanged &&\n        (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getPolygon));\n\n    if (geometryChanged && Array.isArray(changeFlags.dataChanged)) {\n      const paths = this.state.paths.slice();\n      const pathsDiff = changeFlags.dataChanged.map(dataRange =>\n        replaceInRange({\n          data: paths,\n          getIndex: p => p.__source.index,\n          dataRange,\n          replace: this._getPaths(dataRange)\n        })\n      );\n      this.setState({paths, pathsDiff});\n    } else if (geometryChanged) {\n      this.setState({\n        paths: this._getPaths(),\n        pathsDiff: null\n      });\n    }\n  }\n\n  private _getPaths(dataRange: {startRow?: number; endRow?: number} = {}): {path: number[]}[] {\n    const {data, getPolygon, positionFormat, _normalize} = this.props;\n    const paths: {path: number[]}[] = [];\n    const positionSize = positionFormat === 'XY' ? 2 : 3;\n    const {startRow, endRow} = dataRange;\n\n    const {iterable, objectInfo} = createIterable(data, startRow, endRow);\n    for (const object of iterable) {\n      objectInfo.index++;\n      let polygon = getPolygon(object, objectInfo);\n      if (_normalize) {\n        polygon = Polygon.normalize(polygon, positionSize);\n      }\n      const {holeIndices} = polygon;\n      const positions = polygon.positions || polygon;\n\n      if (holeIndices) {\n        // split the positions array into `holeIndices.length + 1` rings\n        // holeIndices[-1] falls back to 0\n        // holeIndices[holeIndices.length] falls back to positions.length\n        for (let i = 0; i <= holeIndices.length; i++) {\n          const path = positions.slice(holeIndices[i - 1] || 0, holeIndices[i] || positions.length);\n          paths.push(this.getSubLayerRow({path}, object, objectInfo.index));\n        }\n      } else {\n        paths.push(this.getSubLayerRow({path: positions}, object, objectInfo.index));\n      }\n    }\n    return paths;\n  }\n\n  /* eslint-disable complexity */\n  renderLayers(): Layer | null | LayersList {\n    // Layer composition props\n    const {\n      data,\n      _dataDiff,\n      stroked,\n      filled,\n      extruded,\n      wireframe,\n      _normalize,\n      _windingOrder,\n      elevationScale,\n      transitions,\n      positionFormat\n    } = this.props;\n\n    // Rendering props underlying layer\n    const {\n      lineWidthUnits,\n      lineWidthScale,\n      lineWidthMinPixels,\n      lineWidthMaxPixels,\n      lineJointRounded,\n      lineMiterLimit,\n      lineDashJustified\n    } = this.props;\n\n    // Accessor props for underlying layers\n    const {\n      getFillColor,\n      getLineColor,\n      getLineWidth,\n      getLineDashArray,\n      getElevation,\n      getPolygon,\n      updateTriggers,\n      material\n    } = this.props;\n\n    const {paths, pathsDiff} = this.state;\n\n    const FillLayer = this.getSubLayerClass('fill', SolidPolygonLayer);\n    const StrokeLayer = this.getSubLayerClass('stroke', PathLayer);\n\n    // Filled Polygon Layer\n    const polygonLayer =\n      this.shouldRenderSubLayer('fill', paths) &&\n      new FillLayer(\n        {\n          _dataDiff,\n          extruded,\n          elevationScale,\n\n          filled,\n          wireframe,\n          _normalize,\n          _windingOrder,\n\n          getElevation,\n          getFillColor,\n          getLineColor: extruded && wireframe ? getLineColor : defaultLineColor,\n\n          material,\n          transitions\n        },\n        this.getSubLayerProps({\n          id: 'fill',\n          updateTriggers: updateTriggers && {\n            getPolygon: updateTriggers.getPolygon,\n            getElevation: updateTriggers.getElevation,\n            getFillColor: updateTriggers.getFillColor,\n            // using a legacy API to invalid lineColor attributes\n            // if (extruded && wireframe) has changed\n            lineColors: extruded && wireframe,\n            getLineColor: updateTriggers.getLineColor\n          }\n        }),\n        {\n          data,\n          positionFormat,\n          getPolygon\n        }\n      );\n\n    // Polygon line layer\n    const polygonLineLayer =\n      !extruded &&\n      stroked &&\n      this.shouldRenderSubLayer('stroke', paths) &&\n      new StrokeLayer(\n        {\n          _dataDiff: pathsDiff && (() => pathsDiff),\n          widthUnits: lineWidthUnits,\n          widthScale: lineWidthScale,\n          widthMinPixels: lineWidthMinPixels,\n          widthMaxPixels: lineWidthMaxPixels,\n          jointRounded: lineJointRounded,\n          miterLimit: lineMiterLimit,\n          dashJustified: lineDashJustified,\n\n          // Already normalized\n          _pathType: 'loop',\n\n          transitions: transitions && {\n            getWidth: transitions.getLineWidth,\n            getColor: transitions.getLineColor,\n            getPath: transitions.getPolygon\n          },\n\n          getColor: this.getSubLayerAccessor(getLineColor),\n          getWidth: this.getSubLayerAccessor(getLineWidth),\n          getDashArray: this.getSubLayerAccessor(getLineDashArray)\n        },\n        this.getSubLayerProps({\n          id: 'stroke',\n          updateTriggers: updateTriggers && {\n            getWidth: updateTriggers.getLineWidth,\n            getColor: updateTriggers.getLineColor,\n            getDashArray: updateTriggers.getLineDashArray\n          }\n        }),\n        {\n          data: paths,\n          positionFormat,\n          getPath: x => x.path\n        }\n      );\n\n    return [\n      // If not extruded: flat fill layer is drawn below outlines\n      !extruded && polygonLayer,\n      polygonLineLayer,\n      // If extruded: draw fill layer last for correct blending behavior\n      extruded && polygonLayer\n    ];\n  }\n  /* eslint-enable complexity */\n}\n","import {COORDINATE_SYSTEM, createIterable} from '@deck.gl/core';\n\n/* eslint-disable max-statements, complexity, camelcase */\nconst RADIAN_PER_DEGREE = Math.PI / 180;\nconst modelMatrix = new Float32Array(16);\nconst valueArray = new Float32Array(12);\n\nfunction calculateTransformMatrix(targetMatrix, orientation, scale) {\n  const pitch = orientation[0] * RADIAN_PER_DEGREE;\n  const yaw = orientation[1] * RADIAN_PER_DEGREE;\n  const roll = orientation[2] * RADIAN_PER_DEGREE;\n\n  const sr = Math.sin(roll);\n  const sp = Math.sin(pitch);\n  const sw = Math.sin(yaw);\n\n  const cr = Math.cos(roll);\n  const cp = Math.cos(pitch);\n  const cw = Math.cos(yaw);\n\n  const scx = scale[0];\n  const scy = scale[1];\n  const scz = scale[2];\n\n  targetMatrix[0] = scx * cw * cp; // 0,0\n  targetMatrix[1] = scx * sw * cp; // 1,0\n  targetMatrix[2] = scx * -sp; // 2,0\n  targetMatrix[3] = scy * (-sw * cr + cw * sp * sr); // 0,1\n  targetMatrix[4] = scy * (cw * cr + sw * sp * sr); // 1,1\n  targetMatrix[5] = scy * cp * sr; // 2,1\n  targetMatrix[6] = scz * (sw * sr + cw * sp * cr); // 0,2\n  targetMatrix[7] = scz * (-cw * sr + sw * sp * cr); // 1,2\n  targetMatrix[8] = scz * cp * cr; // 2,2\n}\n\nfunction getExtendedMat3FromMat4(mat4) {\n  mat4[0] = mat4[0];\n  mat4[1] = mat4[1];\n  mat4[2] = mat4[2];\n  mat4[3] = mat4[4];\n  mat4[4] = mat4[5];\n  mat4[5] = mat4[6];\n  mat4[6] = mat4[8];\n  mat4[7] = mat4[9];\n  mat4[8] = mat4[10];\n  mat4[9] = mat4[12];\n  mat4[10] = mat4[13];\n  mat4[11] = mat4[14];\n\n  return mat4.subarray(0, 12);\n}\n\nexport const MATRIX_ATTRIBUTES = {\n  size: 12,\n  accessor: ['getOrientation', 'getScale', 'getTranslation', 'getTransformMatrix'],\n  shaderAttributes: {\n    instanceModelMatrix__LOCATION_0: {\n      size: 3,\n      elementOffset: 0\n    },\n    instanceModelMatrix__LOCATION_1: {\n      size: 3,\n      elementOffset: 3\n    },\n    instanceModelMatrix__LOCATION_2: {\n      size: 3,\n      elementOffset: 6\n    },\n    instanceTranslation: {\n      size: 3,\n      elementOffset: 9\n    }\n  } as const,\n\n  update(attribute, {startRow, endRow}) {\n    // @ts-expect-error: \"this\" will be bound to a layer when this function is called\n    const {data, getOrientation, getScale, getTranslation, getTransformMatrix} = this.props;\n\n    const arrayMatrix = Array.isArray(getTransformMatrix);\n    const constantMatrix = arrayMatrix && getTransformMatrix.length === 16;\n    const constantScale = Array.isArray(getScale);\n    const constantOrientation = Array.isArray(getOrientation);\n    const constantTranslation = Array.isArray(getTranslation);\n\n    const hasMatrix = constantMatrix || (!arrayMatrix && Boolean(getTransformMatrix(data[0])));\n\n    if (hasMatrix) {\n      attribute.constant = constantMatrix;\n    } else {\n      attribute.constant = constantOrientation && constantScale && constantTranslation;\n    }\n\n    const instanceModelMatrixData = attribute.value;\n\n    if (attribute.constant) {\n      let matrix;\n\n      if (hasMatrix) {\n        modelMatrix.set(getTransformMatrix);\n        matrix = getExtendedMat3FromMat4(modelMatrix);\n      } else {\n        matrix = valueArray;\n\n        const orientation = getOrientation;\n        const scale = getScale;\n\n        calculateTransformMatrix(matrix, orientation, scale);\n        matrix.set(getTranslation, 9);\n      }\n\n      attribute.value = new Float32Array(matrix);\n    } else {\n      let i = startRow * attribute.size;\n      const {iterable, objectInfo} = createIterable(data, startRow, endRow);\n      for (const object of iterable) {\n        objectInfo.index++;\n        let matrix;\n\n        if (hasMatrix) {\n          modelMatrix.set(\n            constantMatrix ? getTransformMatrix : getTransformMatrix(object, objectInfo)\n          );\n          matrix = getExtendedMat3FromMat4(modelMatrix);\n        } else {\n          matrix = valueArray;\n\n          const orientation = constantOrientation\n            ? getOrientation\n            : getOrientation(object, objectInfo);\n          const scale = constantScale ? getScale : getScale(object, objectInfo);\n\n          calculateTransformMatrix(matrix, orientation, scale);\n          matrix.set(constantTranslation ? getTranslation : getTranslation(object, objectInfo), 9);\n        }\n\n        instanceModelMatrixData[i++] = matrix[0];\n        instanceModelMatrixData[i++] = matrix[1];\n        instanceModelMatrixData[i++] = matrix[2];\n        instanceModelMatrixData[i++] = matrix[3];\n        instanceModelMatrixData[i++] = matrix[4];\n        instanceModelMatrixData[i++] = matrix[5];\n        instanceModelMatrixData[i++] = matrix[6];\n        instanceModelMatrixData[i++] = matrix[7];\n        instanceModelMatrixData[i++] = matrix[8];\n        instanceModelMatrixData[i++] = matrix[9];\n        instanceModelMatrixData[i++] = matrix[10];\n        instanceModelMatrixData[i++] = matrix[11];\n      }\n    }\n  }\n};\n\n// only apply composeModelMatrix when in cartesian or meter_offsets coordinate system\n// with `composeModelMatrix` enabled, the rotation part of the layer's modelMatrix will be composed to instance's transformations\n// since rotating latitude and longitude can not provide meaningful results, hence `composeModelMatrix` is disabled\n// when in LNGLAT and LNGLAT_OFFSET coordinates.\nexport function shouldComposeModelMatrix(viewport, coordinateSystem) {\n  return (\n    coordinateSystem === COORDINATE_SYSTEM.CARTESIAN ||\n    coordinateSystem === COORDINATE_SYSTEM.METER_OFFSETS ||\n    (coordinateSystem === COORDINATE_SYSTEM.DEFAULT && !viewport.isGeospatial)\n  );\n}\n","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","/**\n * Common utilities\n * @module glMatrix\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import {Viewport, WebMercatorViewport, _GlobeViewport} from '@deck.gl/core';\n\nimport {\n  CullingVolume,\n  Plane,\n  AxisAlignedBoundingBox,\n  makeOrientedBoundingBoxFromPoints\n} from '@math.gl/culling';\nimport {lngLatToWorld} from '@math.gl/web-mercator';\nimport {Bounds, TileIndex, ZRange} from './types';\nimport {osmTile2lngLat} from './utils';\n\nconst TILE_SIZE = 512;\n// number of world copies to check\nconst MAX_MAPS = 3;\n// for calculating bounding volume of a tile in a non-web-mercator viewport\nconst REF_POINTS_5 = [\n  [0.5, 0.5],\n  [0, 0],\n  [0, 1],\n  [1, 0],\n  [1, 1]\n]; // 4 corners and center\nconst REF_POINTS_9 = REF_POINTS_5.concat([\n  [0, 0.5],\n  [0.5, 0],\n  [1, 0.5],\n  [0.5, 1]\n]); // 4 corners, center and 4 mid points\nconst REF_POINTS_11 = REF_POINTS_9.concat([\n  [0.25, 0.5],\n  [0.75, 0.5]\n]); // 2 additional points on equator for top tile\n\nclass OSMNode {\n  x: number;\n  y: number;\n  z: number;\n\n  private childVisible?: boolean;\n  private selected?: boolean;\n\n  private _children?: OSMNode[];\n\n  constructor(x, y, z) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n  }\n\n  get children() {\n    if (!this._children) {\n      const x = this.x * 2;\n      const y = this.y * 2;\n      const z = this.z + 1;\n      this._children = [\n        new OSMNode(x, y, z),\n        new OSMNode(x, y + 1, z),\n        new OSMNode(x + 1, y, z),\n        new OSMNode(x + 1, y + 1, z)\n      ];\n    }\n    return this._children;\n  }\n\n  // eslint-disable-next-line complexity\n  update(params: {\n    viewport: Viewport;\n    project: ((xyz: number[]) => number[]) | null;\n    cullingVolume: CullingVolume;\n    elevationBounds: ZRange;\n    minZ: number;\n    maxZ: number;\n    bounds?: Bounds;\n    offset: number;\n  }) {\n    const {viewport, cullingVolume, elevationBounds, minZ, maxZ, bounds, offset, project} = params;\n    const boundingVolume = this.getBoundingVolume(elevationBounds, offset, project);\n\n    // First, check if this tile is visible\n    if (bounds && !this.insideBounds(bounds)) {\n      return false;\n    }\n\n    const isInside = cullingVolume.computeVisibility(boundingVolume);\n    if (isInside < 0) {\n      return false;\n    }\n\n    // Avoid loading overlapping tiles - if a descendant is requested, do not request the ancester\n    if (!this.childVisible) {\n      let {z} = this;\n      if (z < maxZ && z >= minZ) {\n        // Adjust LOD\n        // If the tile is far enough from the camera, accept a lower zoom level\n        const distance =\n          (boundingVolume.distanceTo(viewport.cameraPosition) * viewport.scale) / viewport.height;\n        z += Math.floor(Math.log2(distance));\n      }\n      if (z >= maxZ) {\n        // LOD is acceptable\n        this.selected = true;\n        return true;\n      }\n    }\n\n    // LOD is not enough, recursively test child tiles\n    this.selected = false;\n    this.childVisible = true;\n    for (const child of this.children) {\n      child.update(params);\n    }\n    return true;\n  }\n\n  getSelected(result: OSMNode[] = []): OSMNode[] {\n    if (this.selected) {\n      result.push(this);\n    }\n    if (this._children) {\n      for (const node of this._children) {\n        node.getSelected(result);\n      }\n    }\n    return result;\n  }\n\n  insideBounds([minX, minY, maxX, maxY]: Bounds): boolean {\n    const scale = Math.pow(2, this.z);\n    const extent = TILE_SIZE / scale;\n\n    return (\n      this.x * extent < maxX &&\n      this.y * extent < maxY &&\n      (this.x + 1) * extent > minX &&\n      (this.y + 1) * extent > minY\n    );\n  }\n\n  getBoundingVolume(\n    zRange: ZRange,\n    worldOffset: number,\n    project: ((xyz: number[]) => number[]) | null\n  ) {\n    if (project) {\n      // Custom projection\n      // Estimate bounding box from sample points\n      // At low zoom level we need more samples to calculate the bounding volume correctly\n      const refPoints = this.z < 1 ? REF_POINTS_11 : this.z < 2 ? REF_POINTS_9 : REF_POINTS_5;\n\n      // Convert from tile-relative coordinates to common space\n      const refPointPositions: number[][] = [];\n      for (const p of refPoints) {\n        const lngLat: number[] = osmTile2lngLat(this.x + p[0], this.y + p[1], this.z);\n        lngLat[2] = zRange[0];\n        refPointPositions.push(project(lngLat));\n\n        if (zRange[0] !== zRange[1]) {\n          // Account for the elevation volume\n          lngLat[2] = zRange[1];\n          refPointPositions.push(project(lngLat));\n        }\n      }\n\n      return makeOrientedBoundingBoxFromPoints(refPointPositions);\n    }\n\n    // Use WebMercator projection\n    const scale = Math.pow(2, this.z);\n    const extent = TILE_SIZE / scale;\n    const originX = this.x * extent + worldOffset * TILE_SIZE;\n    // deck's common space is y-flipped\n    const originY = TILE_SIZE - (this.y + 1) * extent;\n\n    return new AxisAlignedBoundingBox(\n      [originX, originY, zRange[0]],\n      [originX + extent, originY + extent, zRange[1]]\n    );\n  }\n}\n\n// eslint-disable-next-line complexity\nexport function getOSMTileIndices(\n  viewport: Viewport,\n  maxZ: number,\n  zRange: ZRange | undefined,\n  bounds?: Bounds\n): TileIndex[] {\n  const project: ((xyz: number[]) => number[]) | null =\n    viewport instanceof _GlobeViewport && viewport.resolution\n      ? // eslint-disable-next-line @typescript-eslint/unbound-method\n        viewport.projectPosition\n      : null;\n\n  // Get the culling volume of the current camera\n  const planes: Plane[] = Object.values(viewport.getFrustumPlanes()).map(\n    ({normal, distance}) => new Plane(normal.clone().negate(), distance)\n  );\n  const cullingVolume = new CullingVolume(planes);\n\n  // Project zRange from meters to common space\n  const unitsPerMeter = viewport.distanceScales.unitsPerMeter[2];\n  const elevationMin = (zRange && zRange[0] * unitsPerMeter) || 0;\n  const elevationMax = (zRange && zRange[1] * unitsPerMeter) || 0;\n\n  // Always load at the current zoom level if pitch is small\n  const minZ = viewport instanceof WebMercatorViewport && viewport.pitch <= 60 ? maxZ : 0;\n\n  // Map extent to OSM position\n  if (bounds) {\n    const [minLng, minLat, maxLng, maxLat] = bounds;\n    const topLeft = lngLatToWorld([minLng, maxLat]);\n    const bottomRight = lngLatToWorld([maxLng, minLat]);\n    bounds = [topLeft[0], TILE_SIZE - topLeft[1], bottomRight[0], TILE_SIZE - bottomRight[1]];\n  }\n\n  const root = new OSMNode(0, 0, 0);\n  const traversalParams = {\n    viewport,\n    project,\n    cullingVolume,\n    elevationBounds: [elevationMin, elevationMax] as ZRange,\n    minZ,\n    maxZ,\n    bounds,\n    // num. of worlds from the center. For repeated maps\n    offset: 0\n  };\n\n  root.update(traversalParams);\n\n  if (\n    viewport instanceof WebMercatorViewport &&\n    viewport.subViewports &&\n    viewport.subViewports.length > 1\n  ) {\n    // Check worlds in repeated maps\n    traversalParams.offset = -1;\n    while (root.update(traversalParams)) {\n      if (--traversalParams.offset < -MAX_MAPS) {\n        break;\n      }\n    }\n    traversalParams.offset = 1;\n    while (root.update(traversalParams)) {\n      if (++traversalParams.offset > MAX_MAPS) {\n        break;\n      }\n    }\n  }\n\n  return root.getSelected();\n}\n","import {Viewport} from '@deck.gl/core';\nimport {Matrix4} from '@math.gl/core';\nimport {getOSMTileIndices} from './tile-2d-traversal';\nimport {Bounds, GeoBoundingBox, TileBoundingBox, TileIndex, ZRange} from './types';\n\nconst TILE_SIZE = 512;\nconst DEFAULT_EXTENT: Bounds = [-Infinity, -Infinity, Infinity, Infinity];\n\nexport type URLTemplate = string | string[] | null;\n\nexport const urlType = {\n  type: 'object' as const,\n  value: null as URLTemplate,\n  validate: (value, propType) =>\n    (propType.optional && value === null) ||\n    typeof value === 'string' ||\n    (Array.isArray(value) && value.every(url => typeof url === 'string')),\n  equal: (value1, value2) => {\n    if (value1 === value2) {\n      return true;\n    }\n    if (!Array.isArray(value1) || !Array.isArray(value2)) {\n      return false;\n    }\n    const len = value1.length;\n    if (len !== value2.length) {\n      return false;\n    }\n    for (let i = 0; i < len; i++) {\n      if (value1[i] !== value2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n};\n\nfunction transformBox(bbox: Bounds, modelMatrix: Matrix4): Bounds {\n  const transformedCoords = [\n    // top-left\n    modelMatrix.transformAsPoint([bbox[0], bbox[1]]),\n    // top-right\n    modelMatrix.transformAsPoint([bbox[2], bbox[1]]),\n    // bottom-left\n    modelMatrix.transformAsPoint([bbox[0], bbox[3]]),\n    // bottom-right\n    modelMatrix.transformAsPoint([bbox[2], bbox[3]])\n  ];\n  const transformedBox: Bounds = [\n    // Minimum x coord\n    Math.min(...transformedCoords.map(i => i[0])),\n    // Minimum y coord\n    Math.min(...transformedCoords.map(i => i[1])),\n    // Max x coord\n    Math.max(...transformedCoords.map(i => i[0])),\n    // Max y coord\n    Math.max(...transformedCoords.map(i => i[1]))\n  ];\n  return transformedBox;\n}\n\nfunction stringHash(s: string): number {\n  return Math.abs(s.split('').reduce((a, b) => ((a << 5) - a + b.charCodeAt(0)) | 0, 0));\n}\n\nexport function getURLFromTemplate(\n  template: URLTemplate,\n  tile: {\n    index: TileIndex;\n    id: string;\n  }\n): string | null {\n  if (!template || !template.length) {\n    return null;\n  }\n  const {index, id} = tile;\n\n  if (Array.isArray(template)) {\n    const i = stringHash(id) % template.length;\n    template = template[i];\n  }\n\n  let url = template;\n  for (const key of Object.keys(index)) {\n    const regex = new RegExp(`{${key}}`, 'g');\n    url = url.replace(regex, String(index[key]));\n  }\n\n  // Back-compatible support for {-y}\n  if (Number.isInteger(index.y) && Number.isInteger(index.z)) {\n    url = url.replace(/\\{-y\\}/g, String(Math.pow(2, index.z) - index.y - 1));\n  }\n  return url;\n}\n\n/**\n * gets the bounding box of a viewport\n */\nfunction getBoundingBox(viewport: Viewport, zRange: number[] | null, extent: Bounds): Bounds {\n  let bounds;\n  if (zRange && zRange.length === 2) {\n    const [minZ, maxZ] = zRange;\n    const bounds0 = viewport.getBounds({z: minZ});\n    const bounds1 = viewport.getBounds({z: maxZ});\n    bounds = [\n      Math.min(bounds0[0], bounds1[0]),\n      Math.min(bounds0[1], bounds1[1]),\n      Math.max(bounds0[2], bounds1[2]),\n      Math.max(bounds0[3], bounds1[3])\n    ];\n  } else {\n    bounds = viewport.getBounds();\n  }\n  if (!viewport.isGeospatial) {\n    return [\n      // Top corner should not be more then bottom corner in either direction\n      Math.max(Math.min(bounds[0], extent[2]), extent[0]),\n      Math.max(Math.min(bounds[1], extent[3]), extent[1]),\n      // Bottom corner should not be less then top corner in either direction\n      Math.min(Math.max(bounds[2], extent[0]), extent[2]),\n      Math.min(Math.max(bounds[3], extent[1]), extent[3])\n    ];\n  }\n  return [\n    Math.max(bounds[0], extent[0]),\n    Math.max(bounds[1], extent[1]),\n    Math.min(bounds[2], extent[2]),\n    Math.min(bounds[3], extent[3])\n  ];\n}\n\n/** Get culling bounds in world space */\nexport function getCullBounds({\n  viewport,\n  z = 0,\n  cullRect\n}: {\n  /** Current viewport */\n  viewport: Viewport;\n  /** Current z range */\n  z: ZRange | number | undefined;\n  /** Culling rectangle in screen space */\n  cullRect: {x: number; y: number; width: number; height: number};\n}): [number, number, number, number][] {\n  const subViewports = viewport.subViewports || [viewport];\n  return subViewports.map(v => getCullBoundsInViewport(v, z, cullRect));\n}\n\nfunction getCullBoundsInViewport(\n  /** Current viewport */\n  viewport: Viewport,\n  /** At altitude */\n  z: ZRange | number,\n  /** Culling rectangle in screen space */\n  cullRect: {x: number; y: number; width: number; height: number}\n): [number, number, number, number] {\n  if (!Array.isArray(z)) {\n    const x = cullRect.x - viewport.x;\n    const y = cullRect.y - viewport.y;\n    const {width, height} = cullRect;\n\n    const unprojectOption = {targetZ: z};\n\n    const topLeft = viewport.unproject([x, y], unprojectOption);\n    const topRight = viewport.unproject([x + width, y], unprojectOption);\n    const bottomLeft = viewport.unproject([x, y + height], unprojectOption);\n    const bottomRight = viewport.unproject([x + width, y + height], unprojectOption);\n\n    return [\n      Math.min(topLeft[0], topRight[0], bottomLeft[0], bottomRight[0]),\n      Math.min(topLeft[1], topRight[1], bottomLeft[1], bottomRight[1]),\n      Math.max(topLeft[0], topRight[0], bottomLeft[0], bottomRight[0]),\n      Math.max(topLeft[1], topRight[1], bottomLeft[1], bottomRight[1])\n    ];\n  }\n\n  const bounds0 = getCullBoundsInViewport(viewport, z[0], cullRect);\n  const bounds1 = getCullBoundsInViewport(viewport, z[1], cullRect);\n\n  return [\n    Math.min(bounds0[0], bounds1[0]),\n    Math.min(bounds0[1], bounds1[1]),\n    Math.max(bounds0[2], bounds1[2]),\n    Math.max(bounds0[3], bounds1[3])\n  ];\n}\n\nfunction getIndexingCoords(bbox: Bounds, scale: number, modelMatrixInverse?: Matrix4): Bounds {\n  if (modelMatrixInverse) {\n    const transformedTileIndex = transformBox(bbox, modelMatrixInverse).map(\n      i => (i * scale) / TILE_SIZE\n    );\n    return transformedTileIndex as Bounds;\n  }\n  return bbox.map(i => (i * scale) / TILE_SIZE) as Bounds;\n}\n\nfunction getScale(z: number, tileSize: number): number {\n  return (Math.pow(2, z) * TILE_SIZE) / tileSize;\n}\n\n// https://wiki.openstreetmap.org/wiki/Slippy_map_tilenames#Lon..2Flat._to_tile_numbers_2\nexport function osmTile2lngLat(x: number, y: number, z: number): [number, number] {\n  const scale = getScale(z, TILE_SIZE);\n  const lng = (x / scale) * 360 - 180;\n  const n = Math.PI - (2 * Math.PI * y) / scale;\n  const lat = (180 / Math.PI) * Math.atan(0.5 * (Math.exp(n) - Math.exp(-n)));\n  return [lng, lat];\n}\n\nfunction tile2XY(x: number, y: number, z: number, tileSize: number): [number, number] {\n  const scale = getScale(z, tileSize);\n  return [(x / scale) * TILE_SIZE, (y / scale) * TILE_SIZE];\n}\nexport function tileToBoundingBox(\n  viewport: Viewport,\n  x: number,\n  y: number,\n  z: number,\n  tileSize: number = TILE_SIZE\n): TileBoundingBox {\n  if (viewport.isGeospatial) {\n    const [west, north] = osmTile2lngLat(x, y, z);\n    const [east, south] = osmTile2lngLat(x + 1, y + 1, z);\n    return {west, north, east, south};\n  }\n  const [left, top] = tile2XY(x, y, z, tileSize);\n  const [right, bottom] = tile2XY(x + 1, y + 1, z, tileSize);\n  return {left, top, right, bottom};\n}\n\nfunction getIdentityTileIndices(\n  viewport: Viewport,\n  z: number,\n  tileSize: number,\n  extent: Bounds,\n  modelMatrixInverse?: Matrix4\n) {\n  const bbox = getBoundingBox(viewport, null, extent);\n  const scale = getScale(z, tileSize);\n  const [minX, minY, maxX, maxY] = getIndexingCoords(bbox, scale, modelMatrixInverse);\n  const indices: TileIndex[] = [];\n\n  /*\n      |  TILE  |  TILE  |  TILE  |\n        |(minX)            |(maxX)\n   */\n  for (let x = Math.floor(minX); x < maxX; x++) {\n    for (let y = Math.floor(minY); y < maxY; y++) {\n      indices.push({x, y, z});\n    }\n  }\n  return indices;\n}\n\n/**\n * Returns all tile indices in the current viewport. If the current zoom level is smaller\n * than minZoom, return an empty array. If the current zoom level is greater than maxZoom,\n * return tiles that are on maxZoom.\n */\n// eslint-disable-next-line complexity\nexport function getTileIndices({\n  viewport,\n  maxZoom,\n  minZoom,\n  zRange,\n  extent,\n  tileSize = TILE_SIZE,\n  modelMatrix,\n  modelMatrixInverse,\n  zoomOffset = 0\n}: {\n  viewport: Viewport;\n  maxZoom?: number;\n  minZoom?: number;\n  zRange: ZRange | undefined;\n  extent?: Bounds;\n  tileSize?: number;\n  modelMatrix?: Matrix4;\n  modelMatrixInverse?: Matrix4;\n  zoomOffset?: number;\n}) {\n  let z = viewport.isGeospatial\n    ? Math.round(viewport.zoom + Math.log2(TILE_SIZE / tileSize)) + zoomOffset\n    : Math.ceil(viewport.zoom) + zoomOffset;\n  if (typeof minZoom === 'number' && Number.isFinite(minZoom) && z < minZoom) {\n    if (!extent) {\n      return [];\n    }\n    z = minZoom;\n  }\n  if (typeof maxZoom === 'number' && Number.isFinite(maxZoom) && z > maxZoom) {\n    z = maxZoom;\n  }\n  let transformedExtent = extent;\n  if (modelMatrix && modelMatrixInverse && extent && !viewport.isGeospatial) {\n    transformedExtent = transformBox(extent, modelMatrix);\n  }\n  return viewport.isGeospatial\n    ? getOSMTileIndices(viewport, z, zRange, extent)\n    : getIdentityTileIndices(\n        viewport,\n        z,\n        tileSize,\n        transformedExtent || DEFAULT_EXTENT,\n        modelMatrixInverse\n      );\n}\n\n/**\n * Returns true if s is a valid URL template\n */\nexport function isURLTemplate(s: string): boolean {\n  return /(?=.*{z})(?=.*{x})(?=.*({y}|{-y}))/.test(s);\n}\n\nexport function isGeoBoundingBox(v: any): v is GeoBoundingBox {\n  return (\n    Number.isFinite(v.west) &&\n    Number.isFinite(v.north) &&\n    Number.isFinite(v.east) &&\n    Number.isFinite(v.south)\n  );\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n/* eslint-disable max-len */\n\nexport {default as SimpleMeshLayer} from './simple-mesh-layer/simple-mesh-layer';\nexport {default as ScenegraphLayer} from './scenegraph-layer/scenegraph-layer';\n\nexport type {ScenegraphLayerProps} from './scenegraph-layer/scenegraph-layer';\nexport type {SimpleMeshLayerProps} from './simple-mesh-layer/simple-mesh-layer';\n","import {lngLatToWorld} from '@math.gl/web-mercator';\n\n// https://epsg.io/3857\n// +proj=merc +a=6378137 +b=6378137 +lat_ts=0 +lon_0=0 +x_0=0 +y_0=0 +k=1 +units=m +nadgrids=@null +wktext +no_defs +type=crs\nconst HALF_EARTH_CIRCUMFERENCE = 6378137 * Math.PI;\n\n/** Projects EPSG:4326 to EPSG:3857\n * This is a lightweight replacement of proj4. Use tests to ensure conformance.\n */\nexport function WGS84ToPseudoMercator(coord: [number, number]): [number, number] {\n  const mercator = lngLatToWorld(coord);\n  mercator[0] = (mercator[0] / 256 - 1) * HALF_EARTH_CIRCUMFERENCE;\n  mercator[1] = (mercator[1] / 256 - 1) * HALF_EARTH_CIRCUMFERENCE;\n  return mercator;\n}\n","// deck.gl, MIT license\n// Attributions:\n// Copyright 2022 Foursquare Labs, Inc.\n\n/* eslint-disable camelcase */ // Some WMS parameters are not in camel case\n/* global setTimeout, clearTimeout */\n\nimport {\n  Layer,\n  CompositeLayer,\n  CompositeLayerProps,\n  UpdateParameters,\n  DefaultProps,\n  Viewport,\n  COORDINATE_SYSTEM,\n  _deepEqual as deepEqual\n} from '@deck.gl/core';\nimport {BitmapLayer} from '@deck.gl/layers';\nimport type {ImageSourceMetadata, ImageType, ImageServiceType} from '@loaders.gl/wms';\nimport {ImageSource, createImageSource} from '@loaders.gl/wms';\nimport {WGS84ToPseudoMercator} from './utils';\n\n/** All props supported by the TileLayer */\nexport type WMSLayerProps = CompositeLayerProps & _WMSLayerProps;\n\n/** Props added by the TileLayer */\ntype _WMSLayerProps = {\n  data: string | ImageSource;\n  serviceType?: ImageServiceType | 'auto';\n  layers?: string[];\n  srs?: 'EPSG:4326' | 'EPSG:3857' | 'auto';\n  onMetadataLoad?: (metadata: ImageSourceMetadata) => void;\n  onMetadataLoadError?: (error: Error) => void;\n  onImageLoadStart?: (requestId: unknown) => void;\n  onImageLoad?: (requestId: unknown) => void;\n  onImageLoadError?: (requestId: unknown, error: Error) => void;\n};\n\nconst defaultProps: DefaultProps<WMSLayerProps> = {\n  id: 'imagery-layer',\n  data: '',\n  serviceType: 'auto',\n  srs: 'auto',\n  layers: {type: 'array', compare: true, value: []},\n  onMetadataLoad: {type: 'function', value: () => {}},\n  // eslint-disable-next-line\n  onMetadataLoadError: {type: 'function', value: console.error},\n  onImageLoadStart: {type: 'function', value: () => {}},\n  onImageLoad: {type: 'function', value: () => {}},\n  onImageLoadError: {\n    type: 'function',\n    compare: false,\n    // eslint-disable-next-line\n    value: (requestId: unknown, error: Error) => console.error(error, requestId)\n  }\n};\n\n/**\n * The layer is used in Hex Tile layer in order to properly discard invisible elements during animation\n */\nexport class WMSLayer<ExtraPropsT extends {} = {}> extends CompositeLayer<\n  ExtraPropsT & Required<_WMSLayerProps>\n> {\n  static layerName = 'WMSLayer';\n  static defaultProps: DefaultProps = defaultProps;\n\n  state!: {\n    imageSource: ImageSource;\n    image: ImageType;\n    bounds: [number, number, number, number];\n    lastRequestParameters: {\n      bbox: [number, number, number, number];\n      layers: string[];\n      srs: 'EPSG:4326' | 'EPSG:3857';\n      width: number;\n      height: number;\n    };\n    lastRequestId: number;\n    _nextRequestId: number;\n    /** TODO: Change any => setTimeout return type. Different between Node and browser... */\n    _timeoutId: any;\n    loadCounter: number;\n  };\n\n  /** Returns true if all async resources are loaded */\n  get isLoaded(): boolean {\n    // Track the explicit loading done by this layer\n    return Boolean(this.state) && this.state.loadCounter === 0 && super.isLoaded;\n  }\n\n  /** Lets deck.gl know that we want viewport change events */\n  override shouldUpdateState(): boolean {\n    return true;\n  }\n\n  override initializeState(): void {\n    // intentionally empty, initialization is done in updateState\n    this.state._nextRequestId = 0;\n    this.state.lastRequestId = -1;\n    this.state.loadCounter = 0;\n  }\n\n  override updateState({changeFlags, props, oldProps}: UpdateParameters<this>): void {\n    const {viewport} = this.context;\n\n    // Check if data source has changed\n    if (changeFlags.dataChanged || props.serviceType !== oldProps.serviceType) {\n      this.state.imageSource = this._createImageSource(props);\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this._loadMetadata();\n      this.debounce(() => this.loadImage(viewport, 'image source changed'), 0);\n    } else if (!deepEqual(props.layers, oldProps.layers, 1)) {\n      this.debounce(() => this.loadImage(viewport, 'layers changed'), 0);\n    } else if (changeFlags.viewportChanged) {\n      this.debounce(() => this.loadImage(viewport, 'viewport changed'));\n    }\n  }\n\n  override finalizeState(): void {\n    // TODO - we could cancel outstanding requests\n  }\n\n  override renderLayers(): Layer {\n    // TODO - which bitmap layer is rendered should depend on the current viewport\n    // Currently Studio only uses one viewport\n    const {bounds, image, lastRequestParameters} = this.state;\n\n    return (\n      image &&\n      new BitmapLayer({\n        ...this.getSubLayerProps({id: 'bitmap'}),\n        _imageCoordinateSystem:\n          lastRequestParameters.srs === 'EPSG:4326'\n            ? COORDINATE_SYSTEM.LNGLAT\n            : COORDINATE_SYSTEM.CARTESIAN,\n        bounds,\n        image\n      })\n    );\n  }\n\n  async getFeatureInfoText(x: number, y: number): Promise<string | null> {\n    const {lastRequestParameters} = this.state;\n    if (lastRequestParameters) {\n      // @ts-expect-error Undocumented method\n      const featureInfo = await this.state.imageSource.getFeatureInfoText?.({\n        ...lastRequestParameters,\n        query_layers: lastRequestParameters.layers,\n        x,\n        y,\n        info_format: 'application/vnd.ogc.gml'\n      });\n      return featureInfo;\n    }\n    return '';\n  }\n\n  _createImageSource(props: WMSLayerProps): ImageSource {\n    if (props.data instanceof ImageSource) {\n      return props.data;\n    }\n\n    if (typeof props.data === 'string') {\n      return createImageSource({\n        url: props.data,\n        loadOptions: props.loadOptions,\n        type: props.serviceType\n      });\n    }\n\n    throw new Error('invalid image source in props.data');\n  }\n\n  /** Run a getMetadata on the image service */\n  async _loadMetadata(): Promise<void> {\n    const {imageSource} = this.state;\n    try {\n      this.state.loadCounter++;\n      const metadata = await imageSource.getMetadata();\n\n      // If a request takes a long time, it may no longer be expected\n      if (this.state.imageSource === imageSource) {\n        this.getCurrentLayer()?.props.onMetadataLoad(metadata);\n      }\n    } catch (error) {\n      this.getCurrentLayer()?.props.onMetadataLoadError(error as Error);\n    } finally {\n      this.state.loadCounter--;\n    }\n  }\n\n  /** Load an image */\n  async loadImage(viewport: Viewport, reason: string): Promise<void> {\n    const {layers, serviceType} = this.props;\n\n    // TODO - move to ImageSource?\n    if (serviceType === 'wms' && layers.length === 0) {\n      return;\n    }\n\n    const bounds = viewport.getBounds();\n    const {width, height} = viewport;\n    const requestId = this.getRequestId();\n    let {srs} = this.props;\n    if (srs === 'auto') {\n      // BitmapLayer only supports LNGLAT or CARTESIAN (Web-Mercator)\n      srs = viewport.resolution ? 'EPSG:4326' : 'EPSG:3857';\n    }\n    const requestParams = {\n      width,\n      height,\n      bbox: bounds,\n      layers,\n      srs\n    };\n    if (srs === 'EPSG:3857') {\n      const [minX, minY] = WGS84ToPseudoMercator([bounds[0], bounds[1]]);\n      const [maxX, maxY] = WGS84ToPseudoMercator([bounds[2], bounds[3]]);\n      requestParams.bbox = [minX, minY, maxX, maxY];\n    }\n\n    try {\n      this.state.loadCounter++;\n      this.props.onImageLoadStart(requestId);\n\n      const image = await this.state.imageSource.getImage(requestParams);\n\n      // If a request takes a long time, later requests may have already loaded.\n      if (this.state.lastRequestId < requestId) {\n        this.getCurrentLayer()?.props.onImageLoad(requestId);\n        // Not type safe...\n        this.setState({\n          image,\n          bounds,\n          lastRequestParameters: requestParams,\n          lastRequestId: requestId\n        });\n      }\n    } catch (error) {\n      this.raiseError(error as Error, 'Load image');\n      this.getCurrentLayer()?.props.onImageLoadError(requestId, error as Error);\n    } finally {\n      this.state.loadCounter--;\n    }\n  }\n\n  // HELPERS\n\n  /** Global counter for issuing unique request ids */\n  private getRequestId(): number {\n    return this.state._nextRequestId++;\n  }\n\n  /** Runs an action in the future, cancels it if the new action is issued before it executes */\n  private debounce(fn: Function, ms = 500): void {\n    clearTimeout(this.state._timeoutId);\n    this.state._timeoutId = setTimeout(() => fn(), ms);\n  }\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport {DefaultProps} from '@deck.gl/core';\nimport {ArcLayer, ArcLayerProps} from '@deck.gl/layers';\n\nconst defaultProps: DefaultProps<ArcLayerProps> = {\n  getHeight: {type: 'accessor', value: 0},\n  greatCircle: true\n};\n\n/** All properties supported by GreatCircleLayer. */\nexport type GreatCircleLayerProps<DataT = any> = ArcLayerProps<DataT>;\n\n// This layer has been merged into the core ArcLayer\n// Keeping for backward-compatibility\n/** @deprecated Use ArcLayer with `greatCircle: true` instead */\nexport default class GreatCircleLayer<DataT = any, ExtraProps extends {} = {}> extends ArcLayer<\n  DataT,\n  ExtraProps\n> {\n  static layerName = 'GreatCircleLayer';\n  static defaultProps = defaultProps;\n}\n","import {worldToLngLat} from '@math.gl/web-mercator';\n\nconst TILE_SIZE = 512;\n\nexport function quadkeyToWorldBounds(quadkey: string, coverage: number): [number[], number[]] {\n  let x = 0;\n  let y = 0;\n  let mask = 1 << quadkey.length;\n  const scale = mask / TILE_SIZE;\n\n  for (let i = 0; i < quadkey.length; i++) {\n    mask >>= 1;\n    const q = parseInt(quadkey[i]);\n    if (q % 2) x |= mask;\n    if (q > 1) y |= mask;\n  }\n  return [\n    [x / scale, TILE_SIZE - y / scale],\n    [(x + coverage) / scale, TILE_SIZE - (y + coverage) / scale]\n  ];\n}\n\nexport function getQuadkeyPolygon(quadkey: string, coverage = 1): number[] {\n  const [topLeft, bottomRight] = quadkeyToWorldBounds(quadkey, coverage);\n  const [w, n] = worldToLngLat(topLeft);\n  const [e, s] = worldToLngLat(bottomRight);\n  return [e, n, e, s, w, s, w, n, e, n];\n}\n","import {AccessorFunction, DefaultProps} from '@deck.gl/core';\nimport GeoCellLayer, {GeoCellLayerProps} from '../geo-cell-layer/GeoCellLayer';\nimport {getQuadkeyPolygon} from './quadkey-utils';\n\nconst defaultProps: DefaultProps<QuadkeyLayerProps> = {\n  getQuadkey: {type: 'accessor', value: d => d.quadkey}\n};\n\n/** All properties supported by QuadkeyLayer. */\nexport type QuadkeyLayerProps<DataT = any> = _QuadkeyLayerProps<DataT> & GeoCellLayerProps<DataT>;\n\n/** Properties added by QuadkeyLayer. */\ntype _QuadkeyLayerProps<DataT> = {\n  /**\n   * Called for each data object to retrieve the quadkey string identifier.\n   *\n   * By default, it reads `quadkey` property of data object.\n   */\n  getQuadkey?: AccessorFunction<DataT, string>;\n};\n\n/** Render filled and/or stroked polygons based on the [Quadkey](https://towardsdatascience.com/geospatial-indexing-with-quadkeys-d933dff01496) geospatial indexing system. */\nexport default class QuadkeyLayer<DataT = any, ExtraProps extends {} = {}> extends GeoCellLayer<\n  DataT,\n  Required<_QuadkeyLayerProps<DataT>> & ExtraProps\n> {\n  static layerName = 'QuadkeyLayer';\n  static defaultProps = defaultProps;\n\n  indexToBounds(): Partial<GeoCellLayer['props']> | null {\n    const {data, extruded, getQuadkey} = this.props;\n    // To avoid z-fighting reduce polygon footprint when extruding\n    const coverage = extruded ? 0.99 : 1;\n\n    return {\n      data,\n      _normalize: false,\n      positionFormat: 'XY',\n\n      getPolygon: (x: DataT, objectInfo) => getQuadkeyPolygon(getQuadkey(x, objectInfo), coverage),\n      updateTriggers: {getPolygon: coverage}\n    };\n  }\n}\n","import {h3SetToMultiPolygon, H3IndexInput} from 'h3-js';\n\nimport {AccessorFunction, createIterable, UpdateParameters, DefaultProps} from '@deck.gl/core';\nimport {default as H3HexagonLayer} from './h3-hexagon-layer';\nimport GeoCellLayer, {GeoCellLayerProps} from '../geo-cell-layer/GeoCellLayer';\n\nconst defaultProps: DefaultProps<H3ClusterLayerProps> = {\n  getHexagons: {type: 'accessor', value: d => d.hexagons}\n};\n\n/** All properties supported by H3ClusterLayer. */\nexport type H3ClusterLayerProps<DataT = any> = _H3ClusterLayerProps<DataT> &\n  GeoCellLayerProps<DataT>;\n\n/** Properties added by H3ClusterLayer. */\ntype _H3ClusterLayerProps<DataT> = {\n  /**\n   * Called for each data object to retrieve the hexagon identifiers.\n   *\n   * By default, it reads `hexagons` property of data object.\n   */\n  getHexagons?: AccessorFunction<DataT, H3IndexInput[]>;\n};\n\nexport default class H3ClusterLayer<DataT = any, ExtraProps extends {} = {}> extends GeoCellLayer<\n  DataT,\n  Required<_H3ClusterLayerProps<DataT>> & ExtraProps\n> {\n  static layerName = 'H3ClusterLayer';\n  static defaultProps = defaultProps;\n\n  initializeState(): void {\n    H3HexagonLayer._checkH3Lib();\n  }\n\n  updateState({props, changeFlags}: UpdateParameters<this>): void {\n    if (\n      changeFlags.dataChanged ||\n      (changeFlags.updateTriggersChanged && changeFlags.updateTriggersChanged.getHexagons)\n    ) {\n      const {data, getHexagons} = props;\n      const polygons: {polygon: number[][][]}[] = [];\n\n      const {iterable, objectInfo} = createIterable(data);\n      for (const object of iterable) {\n        objectInfo.index++;\n        const hexagons = getHexagons(object, objectInfo);\n        const multiPolygon = h3SetToMultiPolygon(hexagons, true);\n\n        for (const polygon of multiPolygon) {\n          polygons.push(this.getSubLayerRow({polygon}, object, objectInfo.index));\n        }\n      }\n\n      this.setState({polygons});\n    }\n  }\n\n  indexToBounds(): Partial<GeoCellLayer['props']> {\n    const {getElevation, getFillColor, getLineColor, getLineWidth} = this.props;\n\n    return {\n      data: this.state.polygons,\n      getPolygon: d => d.polygon,\n\n      getElevation: this.getSubLayerAccessor(getElevation),\n      getFillColor: this.getSubLayerAccessor(getFillColor),\n      getLineColor: this.getSubLayerAccessor(getLineColor),\n      getLineWidth: this.getSubLayerAccessor(getLineWidth)\n    };\n  }\n}\n","import type {NumericArray} from '@math.gl/core';\nimport {GLTFMaterialParser} from '@luma.gl/experimental';\nimport {Model, pbr} from '@luma.gl/core';\nimport GL from '@luma.gl/constants';\nimport type {MeshAttribute, MeshAttributes} from '@loaders.gl/schema';\nimport type {UpdateParameters, DefaultProps, LayerContext} from '@deck.gl/core';\nimport {SimpleMeshLayer, SimpleMeshLayerProps} from '@deck.gl/mesh-layers';\n\nimport vs from './mesh-layer-vertex.glsl';\nimport fs from './mesh-layer-fragment.glsl';\n\nexport type Mesh = {\n  attributes: MeshAttributes;\n  indices?: MeshAttribute;\n};\n\nfunction validateGeometryAttributes(attributes) {\n  const hasColorAttribute = attributes.COLOR_0 || attributes.colors;\n  if (!hasColorAttribute) {\n    attributes.colors = {constant: true, value: new Float32Array([1, 1, 1])};\n  }\n}\n\nconst defaultProps: DefaultProps<MeshLayerProps> = {\n  pbrMaterial: {type: 'object', value: null},\n  featureIds: {type: 'array', value: null, optional: true}\n};\n\n/** All properties supported by MeshLayer. */\nexport type MeshLayerProps<DataT = any> = _MeshLayerProps & SimpleMeshLayerProps<DataT>;\n\n/** Properties added by MeshLayer. */\ntype _MeshLayerProps = {\n  /**\n   * PBR material object. _lighting must be pbr for this to work\n   */\n  pbrMaterial?: any; // TODO add type when converting Tile3DLayer\n\n  /**\n   * List of feature ids.\n   */\n  featureIds?: NumericArray | null;\n};\n\nexport default class MeshLayer<DataT = any, ExtraProps extends {} = {}> extends SimpleMeshLayer<\n  DataT,\n  Required<_MeshLayerProps> & ExtraProps\n> {\n  static layerName = 'MeshLayer';\n  static defaultProps = defaultProps;\n\n  getShaders() {\n    const shaders = super.getShaders();\n    const modules = shaders.modules;\n    modules.push(pbr);\n    return {...shaders, vs, fs};\n  }\n\n  initializeState() {\n    const {featureIds} = this.props;\n    super.initializeState();\n\n    const attributeManager = this.getAttributeManager();\n    if (featureIds) {\n      // attributeManager is always defined in a primitive layer\n      attributeManager!.add({\n        featureIdsPickingColors: {\n          type: GL.UNSIGNED_BYTE,\n          size: 3,\n          noAlloc: true,\n          // eslint-disable-next-line @typescript-eslint/unbound-method\n          update: this.calculateFeatureIdsPickingColors\n        }\n      });\n    }\n  }\n\n  updateState(params: UpdateParameters<this>) {\n    super.updateState(params);\n\n    const {props, oldProps} = params;\n    if (props.pbrMaterial !== oldProps.pbrMaterial) {\n      this.updatePbrMaterialUniforms(props.pbrMaterial);\n    }\n  }\n\n  draw(opts) {\n    const {featureIds} = this.props;\n    if (!this.state.model) {\n      return;\n    }\n    this.state.model.setUniforms({\n      // Needed for PBR (TODO: find better way to get it)\n      // eslint-disable-next-line camelcase\n      u_Camera: this.state.model.getUniforms().project_uCameraPosition,\n      pickFeatureIds: Boolean(featureIds)\n    });\n\n    super.draw(opts);\n  }\n\n  protected getModel(mesh: Mesh): Model {\n    const {id, pbrMaterial} = this.props;\n    const materialParser = this.parseMaterial(pbrMaterial, mesh);\n    // Keep material parser to explicitly remove textures\n    this.setState({materialParser});\n    const shaders = this.getShaders();\n    validateGeometryAttributes(mesh.attributes);\n    const model = new Model(this.context.gl, {\n      ...this.getShaders(),\n      id,\n      geometry: mesh,\n      defines: {\n        ...shaders.defines,\n        ...materialParser?.defines,\n        HAS_UV_REGIONS: mesh.attributes.uvRegions\n      },\n      parameters: materialParser?.parameters,\n      isInstanced: true\n    });\n\n    return model;\n  }\n\n  updatePbrMaterialUniforms(pbrMaterial) {\n    const {model} = this.state;\n    if (model) {\n      const {mesh} = this.props;\n      const materialParser = this.parseMaterial(pbrMaterial, mesh);\n      // Keep material parser to explicitly remove textures\n      this.setState({materialParser});\n      model.setUniforms(materialParser.uniforms);\n    }\n  }\n\n  parseMaterial(pbrMaterial, mesh) {\n    const unlit = Boolean(\n      pbrMaterial.pbrMetallicRoughness && pbrMaterial.pbrMetallicRoughness.baseColorTexture\n    );\n\n    this.state.materialParser?.delete();\n\n    return new GLTFMaterialParser(this.context.gl, {\n      attributes: {NORMAL: mesh.attributes.normals, TEXCOORD_0: mesh.attributes.texCoords},\n      material: {unlit, ...pbrMaterial},\n      pbrDebug: false,\n      imageBasedLightingEnvironment: null,\n      lights: true,\n      useTangents: false\n    });\n  }\n\n  calculateFeatureIdsPickingColors(attribute) {\n    // This updater is only called if featureIds is not null\n    const featureIds = this.props.featureIds!;\n    const value = new Uint8ClampedArray(featureIds.length * attribute.size);\n\n    const pickingColor = [];\n    for (let index = 0; index < featureIds.length; index++) {\n      this.encodePickingColor(featureIds[index], pickingColor);\n\n      value[index * 3] = pickingColor[0];\n      value[index * 3 + 1] = pickingColor[1];\n      value[index * 3 + 2] = pickingColor[2];\n    }\n\n    attribute.value = value;\n  }\n\n  finalizeState(context: LayerContext) {\n    super.finalizeState(context);\n    this.state.materialParser?.delete();\n    this.setState({materialParser: null});\n  }\n}\n","export default `#version 300 es\n#define SHADER_NAME simple-mesh-layer-vs\n\n// Scale the model\nuniform float sizeScale;\nuniform bool composeModelMatrix;\nuniform bool pickFeatureIds;\n\n// Primitive attributes\nin vec3 positions;\nin vec3 normals;\nin vec3 colors;\nin vec2 texCoords;\nin vec4 uvRegions;\nin vec3 featureIdsPickingColors;\n\n// Instance attributes\nin vec4 instanceColors;\nin vec3 instancePickingColors;\nin mat3 instanceModelMatrix;\n\n// Outputs to fragment shader\nout vec2 vTexCoord;\nout vec3 cameraPosition;\nout vec3 normals_commonspace;\nout vec4 position_commonspace;\nout vec4 vColor;\n\nvec2 applyUVRegion(vec2 uv) {\n  #ifdef HAS_UV_REGIONS\n    // https://github.com/Esri/i3s-spec/blob/master/docs/1.7/geometryUVRegion.cmn.md\n    return fract(uv) * (uvRegions.zw - uvRegions.xy) + uvRegions.xy;\n  #else\n    return uv;\n  #endif\n}\n\nvoid main(void) {\n  vec2 uv = applyUVRegion(texCoords);\n  geometry.uv = uv;\n\n  if (pickFeatureIds) {\n    geometry.pickingColor = featureIdsPickingColors;\n  } else {\n    geometry.pickingColor = instancePickingColors;\n  }\n\n  vTexCoord = uv;\n  cameraPosition = project_uCameraPosition;\n  vColor = vec4(colors * instanceColors.rgb, instanceColors.a);\n\n  vec3 pos = (instanceModelMatrix * positions) * sizeScale;\n  vec3 projectedPosition = project_position(positions);\n  position_commonspace = vec4(projectedPosition, 1.0);\n  gl_Position = project_common_position_to_clipspace(position_commonspace);\n\n  geometry.position = position_commonspace;\n  normals_commonspace = project_normal(instanceModelMatrix * normals);\n  geometry.normal = normals_commonspace;\n\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n\n  #ifdef MODULE_PBR\n    // set PBR data\n    pbr_vPosition = geometry.position.xyz;\n    #ifdef HAS_NORMALS\n      pbr_vNormal = geometry.normal;\n    #endif\n\n    #ifdef HAS_UV\n      pbr_vUV = uv;\n    #else\n      pbr_vUV = vec2(0., 0.);\n    #endif\n    geometry.uv = pbr_vUV;\n  #endif\n\n  DECKGL_FILTER_COLOR(vColor, geometry);\n}\n`;\n","export default `#version 300 es\n#define SHADER_NAME simple-mesh-layer-fs\n\nprecision highp float;\n\nuniform bool hasTexture;\nuniform sampler2D sampler;\nuniform bool flatShading;\nuniform float opacity;\n\nin vec2 vTexCoord;\nin vec3 cameraPosition;\nin vec3 normals_commonspace;\nin vec4 position_commonspace;\nin vec4 vColor;\n\nout vec4 fragColor;\n\nvoid main(void) {\n  \n#ifdef MODULE_PBR\n\n  fragColor = vColor * pbr_filterColor(vec4(0));\n  geometry.uv = pbr_vUV;\n  fragColor.a *= opacity;\n\n#else\n\n  geometry.uv = vTexCoord;\n\n  vec3 normal;\n  if (flatShading) {\n\n// NOTE(Tarek): This is necessary because\n// headless.gl reports the extension as\n// available but does not support it in\n// the shader.\n#ifdef DERIVATIVES_AVAILABLE\n    normal = normalize(cross(dFdx(position_commonspace.xyz), dFdy(position_commonspace.xyz)));\n#else\n    normal = vec3(0.0, 0.0, 1.0);\n#endif\n  } else {\n    normal = normals_commonspace;\n  }\n\n  vec4 color = hasTexture ? texture(sampler, vTexCoord) : vColor;\n  vec3 lightColor = lighting_getLightColor(color.rgb, cameraPosition, position_commonspace.xyz, normal);\n  fragColor = vec4(lightColor, color.a * opacity);\n\n#endif\n\n  DECKGL_FILTER_COLOR(fragColor, geometry);\n}\n`;\n","import GL from '@luma.gl/constants';\nimport {Geometry} from '@luma.gl/core';\n\nimport {\n  Accessor,\n  Color,\n  CompositeLayer,\n  CompositeLayerProps,\n  COORDINATE_SYSTEM,\n  FilterContext,\n  GetPickingInfoParams,\n  Layer,\n  LayersList,\n  log,\n  PickingInfo,\n  UpdateParameters,\n  Viewport,\n  DefaultProps\n} from '@deck.gl/core';\nimport {PointCloudLayer} from '@deck.gl/layers';\nimport {ScenegraphLayer} from '@deck.gl/mesh-layers';\nimport {default as MeshLayer} from '../mesh-layer/mesh-layer';\n\nimport {load} from '@loaders.gl/core';\nimport {MeshAttributes} from '@loaders.gl/schema';\nimport {Tileset3D, Tile3D, TILE_TYPE} from '@loaders.gl/tiles';\nimport {Tiles3DLoader} from '@loaders.gl/3d-tiles';\n\nconst SINGLE_DATA = [0];\n\nconst defaultProps: DefaultProps<Tile3DLayerProps> = {\n  getPointColor: {type: 'accessor', value: [0, 0, 0, 255]},\n  pointSize: 1.0,\n\n  // Disable async data loading (handling it in _loadTileSet)\n  data: '',\n  loader: Tiles3DLoader,\n\n  onTilesetLoad: {type: 'function', value: tileset3d => {}},\n  onTileLoad: {type: 'function', value: tileHeader => {}},\n  onTileUnload: {type: 'function', value: tileHeader => {}},\n  onTileError: {type: 'function', value: (tile, message, url) => {}},\n  _getMeshColor: {type: 'function', value: tileHeader => [255, 255, 255]}\n};\n\n/** All properties supported by Tile3DLayer */\nexport type Tile3DLayerProps<DataT = any> = _Tile3DLayerProps<DataT> & CompositeLayerProps;\n\n/** Props added by the Tile3DLayer */\ntype _Tile3DLayerProps<DataT> = {\n  data: string;\n  /** Color Accessor for point clouds. **/\n  getPointColor?: Accessor<DataT, Color>;\n\n  /** Global radius of all points in pixels. **/\n  pointSize?: number;\n\n  /** A loader which is used to decode the fetched tiles.\n   * @deprecated Use `loaders` instead\n   */\n  loader?: typeof Tiles3DLoader;\n\n  /** Called when Tileset JSON file is loaded. **/\n  onTilesetLoad?: (tile: Tileset3D) => void;\n\n  /** Called when a tile in the tileset hierarchy is loaded. **/\n  onTileLoad?: (tile: Tile3D) => void;\n\n  /** Called when a tile is unloaded. **/\n  onTileUnload?: (tile: Tile3D) => void;\n\n  /** Called when a tile fails to load. **/\n  onTileError?: (tile: Tile3D, url: string, message: string) => void;\n\n  /** (Experimental) Accessor to change color of mesh based on properties. **/\n  _getMeshColor?: (tile: Tile3D) => Color;\n};\n\n/** Render 3d tiles data formatted according to the [3D Tiles Specification](https://www.opengeospatial.org/standards/3DTiles) and [`ESRI I3S`](https://github.com/Esri/i3s-spec) */\nexport default class Tile3DLayer<DataT = any, ExtraPropsT extends {} = {}> extends CompositeLayer<\n  ExtraPropsT & Required<_Tile3DLayerProps<DataT>>\n> {\n  static defaultProps = defaultProps;\n  static layerName = 'Tile3DLayer';\n\n  state!: {\n    activeViewports: {};\n    frameNumber?: number;\n    lastUpdatedViewports: {[viewportId: string]: Viewport} | null;\n    layerMap: {[layerId: string]: any};\n    tileset3d: Tileset3D | null;\n  };\n\n  initializeState() {\n    if ('onTileLoadFail' in this.props) {\n      log.removed('onTileLoadFail', 'onTileError')();\n    }\n    // prop verification\n    this.state = {\n      layerMap: {},\n      tileset3d: null,\n      activeViewports: {},\n      lastUpdatedViewports: null\n    };\n  }\n\n  get isLoaded(): boolean {\n    const {tileset3d} = this.state;\n    return tileset3d !== null && tileset3d.isLoaded();\n  }\n\n  shouldUpdateState({changeFlags}: UpdateParameters<this>): boolean {\n    return changeFlags.somethingChanged;\n  }\n\n  updateState({props, oldProps, changeFlags}: UpdateParameters<this>): void {\n    if (props.data && props.data !== oldProps.data) {\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this._loadTileset(props.data);\n    }\n\n    if (changeFlags.viewportChanged) {\n      const {activeViewports} = this.state;\n      const viewportsNumber = Object.keys(activeViewports).length;\n      if (viewportsNumber) {\n        this._updateTileset(activeViewports);\n        this.state.lastUpdatedViewports = activeViewports;\n        this.state.activeViewports = {};\n      }\n    }\n    if (changeFlags.propsChanged) {\n      const {layerMap} = this.state;\n      for (const key in layerMap) {\n        layerMap[key].needsUpdate = true;\n      }\n    }\n  }\n\n  activateViewport(viewport: Viewport): void {\n    const {activeViewports, lastUpdatedViewports} = this.state;\n    this.internalState!.viewport = viewport;\n\n    activeViewports[viewport.id] = viewport;\n    const lastViewport = lastUpdatedViewports?.[viewport.id];\n    if (!lastViewport || !viewport.equals(lastViewport)) {\n      this.setChangeFlags({viewportChanged: true});\n      this.setNeedsUpdate();\n    }\n  }\n\n  getPickingInfo({info, sourceLayer}: GetPickingInfoParams) {\n    const sourceTile = sourceLayer && (sourceLayer.props as any).tile;\n    if (info.picked) {\n      info.object = sourceTile;\n    }\n    (info as any).sourceTile = sourceTile;\n\n    return info;\n  }\n\n  filterSubLayer({layer, viewport}: FilterContext): boolean {\n    // All sublayers will have a tile prop\n    const {tile} = layer.props as unknown as {tile: Tile3D};\n    const {id: viewportId} = viewport;\n    return tile.selected && tile.viewportIds.includes(viewportId);\n  }\n\n  protected _updateAutoHighlight(info: PickingInfo): void {\n    const sourceTile = (info as any).sourceTile;\n    const layerCache = this.state.layerMap[sourceTile?.id];\n    if (layerCache && layerCache.layer) {\n      layerCache.layer.updateAutoHighlight(info);\n    }\n  }\n\n  private async _loadTileset(tilesetUrl) {\n    const {loadOptions = {}} = this.props;\n\n    // TODO: deprecate `loader` in v9.0\n    // @ts-ignore\n    let loader = this.props.loader || this.props.loaders;\n    if (Array.isArray(loader)) {\n      loader = loader[0];\n    }\n\n    const options = {loadOptions: {...loadOptions}};\n    let actualTilesetUrl = tilesetUrl;\n    if (loader.preload) {\n      const preloadOptions = await loader.preload(tilesetUrl, loadOptions);\n      if (preloadOptions.url) {\n        actualTilesetUrl = preloadOptions.url;\n      }\n\n      if (preloadOptions.headers) {\n        options.loadOptions.fetch = {\n          ...options.loadOptions.fetch,\n          headers: preloadOptions.headers\n        };\n      }\n      Object.assign(options, preloadOptions);\n    }\n    const tilesetJson = await load(actualTilesetUrl, loader, options.loadOptions);\n\n    const tileset3d = new Tileset3D(tilesetJson, {\n      onTileLoad: this._onTileLoad.bind(this),\n      onTileUnload: this._onTileUnload.bind(this),\n      onTileError: this.props.onTileError,\n      ...options\n    });\n\n    this.setState({\n      tileset3d,\n      layerMap: {}\n    });\n\n    this._updateTileset(this.state.activeViewports);\n    this.props.onTilesetLoad(tileset3d);\n  }\n\n  private _onTileLoad(tileHeader: Tile3D): void {\n    const {lastUpdatedViewports} = this.state;\n    this.props.onTileLoad(tileHeader);\n    this._updateTileset(lastUpdatedViewports);\n    this.setNeedsUpdate();\n  }\n\n  private _onTileUnload(tileHeader: Tile3D): void {\n    // Was cleaned up from tileset cache. We no longer need to track it.\n    delete this.state.layerMap[tileHeader.id];\n    this.props.onTileUnload(tileHeader);\n  }\n\n  private _updateTileset(viewports: {[viewportId: string]: Viewport} | null): void {\n    if (!viewports) {\n      return;\n    }\n    const {tileset3d} = this.state;\n    const {timeline} = this.context;\n    const viewportsNumber = Object.keys(viewports).length;\n    if (!timeline || !viewportsNumber || !tileset3d) {\n      return;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    tileset3d.selectTiles(Object.values(viewports)).then(frameNumber => {\n      const tilesetChanged = this.state.frameNumber !== frameNumber;\n      if (tilesetChanged) {\n        this.setState({frameNumber});\n      }\n    });\n  }\n\n  private _getSubLayer(\n    tileHeader: Tile3D,\n    oldLayer?: Layer\n  ): MeshLayer<DataT> | PointCloudLayer<DataT> | ScenegraphLayer<DataT> | null {\n    if (!tileHeader.content) {\n      return null;\n    }\n\n    switch (tileHeader.type) {\n      case TILE_TYPE.POINTCLOUD:\n        return this._makePointCloudLayer(tileHeader, oldLayer as PointCloudLayer<DataT>);\n      case TILE_TYPE.SCENEGRAPH:\n        return this._make3DModelLayer(tileHeader);\n      case TILE_TYPE.MESH:\n        return this._makeSimpleMeshLayer(tileHeader, oldLayer as MeshLayer<DataT>);\n      default:\n        throw new Error(`Tile3DLayer: Failed to render layer of type ${tileHeader.content.type}`);\n    }\n  }\n\n  private _makePointCloudLayer(\n    tileHeader: Tile3D,\n    oldLayer?: PointCloudLayer<DataT>\n  ): PointCloudLayer<DataT> | null {\n    const {attributes, pointCount, constantRGBA, cartographicOrigin, modelMatrix} =\n      tileHeader.content;\n    const {positions, normals, colors} = attributes;\n\n    if (!positions) {\n      return null;\n    }\n    const data = (oldLayer && oldLayer.props.data) || {\n      header: {\n        vertexCount: pointCount\n      },\n      attributes: {\n        POSITION: positions,\n        NORMAL: normals,\n        COLOR_0: colors\n      }\n    };\n\n    const {pointSize, getPointColor} = this.props;\n    const SubLayerClass = this.getSubLayerClass('pointcloud', PointCloudLayer);\n    return new SubLayerClass(\n      {\n        pointSize\n      },\n      this.getSubLayerProps({\n        id: 'pointcloud'\n      }),\n      {\n        id: `${this.id}-pointcloud-${tileHeader.id}`,\n        tile: tileHeader,\n        data,\n        coordinateSystem: COORDINATE_SYSTEM.METER_OFFSETS,\n        coordinateOrigin: cartographicOrigin,\n        modelMatrix,\n        getColor: constantRGBA || getPointColor,\n        _offset: 0\n      }\n    );\n  }\n\n  private _make3DModelLayer(tileHeader: Tile3D): ScenegraphLayer<DataT> {\n    const {gltf, instances, cartographicOrigin, modelMatrix} = tileHeader.content;\n\n    const SubLayerClass = this.getSubLayerClass('scenegraph', ScenegraphLayer);\n\n    return new SubLayerClass(\n      {\n        _lighting: 'pbr'\n      },\n      this.getSubLayerProps({\n        id: 'scenegraph'\n      }),\n      {\n        id: `${this.id}-scenegraph-${tileHeader.id}`,\n        tile: tileHeader,\n        data: instances || SINGLE_DATA,\n        scenegraph: gltf,\n\n        coordinateSystem: COORDINATE_SYSTEM.METER_OFFSETS,\n        coordinateOrigin: cartographicOrigin,\n        modelMatrix,\n        getTransformMatrix: instance => instance.modelMatrix,\n        getPosition: [0, 0, 0],\n        _offset: 0\n      }\n    );\n  }\n\n  private _makeSimpleMeshLayer(tileHeader: Tile3D, oldLayer?: MeshLayer<DataT>): MeshLayer<DataT> {\n    const content = tileHeader.content;\n    const {\n      attributes,\n      indices,\n      modelMatrix,\n      cartographicOrigin,\n      coordinateSystem = COORDINATE_SYSTEM.METER_OFFSETS,\n      material,\n      featureIds\n    } = content;\n    const {_getMeshColor} = this.props;\n\n    const geometry =\n      (oldLayer && oldLayer.props.mesh) ||\n      new Geometry({\n        drawMode: GL.TRIANGLES,\n        attributes: getMeshGeometry(attributes),\n        indices\n      });\n\n    const SubLayerClass = this.getSubLayerClass('mesh', MeshLayer);\n\n    return new SubLayerClass(\n      this.getSubLayerProps({\n        id: 'mesh'\n      }),\n      {\n        id: `${this.id}-mesh-${tileHeader.id}`,\n        tile: tileHeader,\n        mesh: geometry,\n        data: SINGLE_DATA,\n        getColor: _getMeshColor(tileHeader),\n        pbrMaterial: material,\n        modelMatrix,\n        coordinateOrigin: cartographicOrigin,\n        coordinateSystem,\n        featureIds,\n        _offset: 0\n      }\n    );\n  }\n\n  renderLayers(): Layer | null | LayersList {\n    const {tileset3d, layerMap} = this.state;\n    if (!tileset3d) {\n      return null;\n    }\n\n    // loaders.gl doesn't provide a type for tileset3d.tiles\n    return (tileset3d.tiles as Tile3D[])\n      .map(tile => {\n        const layerCache = (layerMap[tile.id] = layerMap[tile.id] || {tile});\n        let {layer} = layerCache;\n        if (tile.selected) {\n          // render selected tiles\n          if (!layer) {\n            // create layer\n            layer = this._getSubLayer(tile);\n          } else if (layerCache.needsUpdate) {\n            // props have changed, rerender layer\n            layer = this._getSubLayer(tile, layer);\n            layerCache.needsUpdate = false;\n          }\n        }\n        layerCache.layer = layer;\n        return layer;\n      })\n      .filter(Boolean);\n  }\n}\n\nfunction getMeshGeometry(contentAttributes: MeshAttributes): MeshAttributes {\n  const attributes: MeshAttributes = {};\n  attributes.positions = {\n    ...contentAttributes.positions,\n    value: new Float32Array(contentAttributes.positions.value)\n  };\n  if (contentAttributes.normals) {\n    attributes.normals = contentAttributes.normals;\n  }\n  if (contentAttributes.texCoords) {\n    attributes.texCoords = contentAttributes.texCoords;\n  }\n  if (contentAttributes.colors) {\n    attributes.colors = contentAttributes.colors;\n  }\n  if (contentAttributes.uvRegions) {\n    attributes.uvRegions = contentAttributes.uvRegions;\n  }\n  return attributes;\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {\n  Color,\n  CompositeLayer,\n  CompositeLayerProps,\n  DefaultProps,\n  Layer,\n  LayersList,\n  log,\n  Material,\n  Texture,\n  UpdateParameters\n} from '@deck.gl/core';\nimport {SimpleMeshLayer} from '@deck.gl/mesh-layers';\nimport {COORDINATE_SYSTEM} from '@deck.gl/core';\nimport type {MeshAttributes} from '@loaders.gl/schema';\nimport {TerrainWorkerLoader} from '@loaders.gl/terrain';\nimport TileLayer, {TileLayerProps} from '../tile-layer/tile-layer';\nimport type {Bounds, GeoBoundingBox, TileBoundingBox, TileLoadProps, ZRange} from '../tileset-2d';\nimport {Tile2DHeader, urlType, getURLFromTemplate, URLTemplate} from '../tileset-2d';\n\nconst DUMMY_DATA = [1];\n\nconst defaultProps: DefaultProps<TerrainLayerProps> = {\n  ...TileLayer.defaultProps,\n  // Image url that encodes height data\n  elevationData: urlType,\n  // Image url to use as texture\n  texture: {...urlType, optional: true},\n  // Martini error tolerance in meters, smaller number -> more detailed mesh\n  meshMaxError: {type: 'number', value: 4.0},\n  // Bounding box of the terrain image, [minX, minY, maxX, maxY] in world coordinates\n  bounds: {type: 'array', value: null, optional: true, compare: true},\n  // Color to use if texture is unavailable\n  color: {type: 'color', value: [255, 255, 255]},\n  // Object to decode height data, from (r, g, b) to height in meters\n  elevationDecoder: {\n    type: 'object',\n    value: {\n      rScaler: 1,\n      gScaler: 0,\n      bScaler: 0,\n      offset: 0\n    }\n  },\n  // Supply url to local terrain worker bundle. Only required if running offline and cannot access CDN.\n  workerUrl: '',\n  // Same as SimpleMeshLayer wireframe\n  wireframe: false,\n  material: true,\n\n  loaders: [TerrainWorkerLoader]\n};\n\n// Turns array of templates into a single string to work around shallow change\nfunction urlTemplateToUpdateTrigger(template: URLTemplate): string {\n  if (Array.isArray(template)) {\n    return template.join(';');\n  }\n  return template || '';\n}\n\ntype ElevationDecoder = {rScaler: number; gScaler: number; bScaler: number; offset: number};\ntype TerrainLoadProps = {\n  bounds: Bounds;\n  elevationData: string | null;\n  elevationDecoder: ElevationDecoder;\n  meshMaxError: number;\n  signal?: AbortSignal;\n};\n\ntype MeshAndTexture = [MeshAttributes | null, Texture | null];\n\n/** All properties supported by TerrainLayer */\nexport type TerrainLayerProps = _TerrainLayerProps &\n  TileLayerProps<MeshAndTexture> &\n  CompositeLayerProps;\n\n/** Props added by the TerrainLayer */\ntype _TerrainLayerProps = {\n  /** Image url that encodes height data. **/\n  elevationData: URLTemplate;\n\n  /** Image url to use as texture. **/\n  texture?: URLTemplate;\n\n  /** Martini error tolerance in meters, smaller number -> more detailed mesh. **/\n  meshMaxError?: number;\n\n  /** Bounding box of the terrain image, [minX, minY, maxX, maxY] in world coordinates. **/\n  bounds?: Bounds | null;\n\n  /** Color to use if texture is unavailable. **/\n  color?: Color;\n\n  /** Object to decode height data, from (r, g, b) to height in meters. **/\n  elevationDecoder?: ElevationDecoder;\n\n  /** Whether to render the mesh in wireframe mode. **/\n  wireframe?: boolean;\n\n  /** Material props for lighting effect. **/\n  material?: Material;\n\n  /**\n   * @deprecated Use `loadOptions.terrain.workerUrl` instead\n   */\n  workerUrl?: string;\n};\n\n/** Render mesh surfaces from height map images. */\nexport default class TerrainLayer<ExtraPropsT extends {} = {}> extends CompositeLayer<\n  ExtraPropsT & Required<_TerrainLayerProps & Required<TileLayerProps<MeshAndTexture>>>\n> {\n  static defaultProps = defaultProps;\n  static layerName = 'TerrainLayer';\n\n  state!: {\n    isTiled?: boolean;\n    terrain: MeshAttributes;\n    zRange?: ZRange | null;\n  };\n\n  updateState({props, oldProps}: UpdateParameters<this>): void {\n    const elevationDataChanged = props.elevationData !== oldProps.elevationData;\n    if (elevationDataChanged) {\n      const {elevationData} = props;\n      const isTiled =\n        elevationData &&\n        (Array.isArray(elevationData) ||\n          (elevationData.includes('{x}') && elevationData.includes('{y}')));\n      this.setState({isTiled});\n    }\n\n    // Reloading for single terrain mesh\n    const shouldReload =\n      elevationDataChanged ||\n      props.meshMaxError !== oldProps.meshMaxError ||\n      props.elevationDecoder !== oldProps.elevationDecoder ||\n      props.bounds !== oldProps.bounds;\n\n    if (!this.state.isTiled && shouldReload) {\n      // When state.isTiled, elevationData cannot be an array\n      const terrain = this.loadTerrain(props as TerrainLoadProps);\n      this.setState({terrain});\n    }\n\n    // TODO - remove in v9\n    // @ts-ignore\n    if (props.workerUrl) {\n      log.removed('workerUrl', 'loadOptions.terrain.workerUrl')();\n    }\n  }\n\n  loadTerrain({\n    elevationData,\n    bounds,\n    elevationDecoder,\n    meshMaxError,\n    signal\n  }: TerrainLoadProps): Promise<MeshAttributes> | null {\n    if (!elevationData) {\n      return null;\n    }\n    let loadOptions = this.getLoadOptions();\n    loadOptions = {\n      ...loadOptions,\n      terrain: {\n        skirtHeight: this.state.isTiled ? meshMaxError * 2 : 0,\n        ...loadOptions?.terrain,\n        bounds,\n        meshMaxError,\n        elevationDecoder\n      }\n    };\n    const {fetch} = this.props;\n    return fetch(elevationData, {propName: 'elevationData', layer: this, loadOptions, signal});\n  }\n\n  getTiledTerrainData(tile: TileLoadProps): Promise<MeshAndTexture> {\n    const {elevationData, fetch, texture, elevationDecoder, meshMaxError} = this.props;\n    const {viewport} = this.context;\n    const dataUrl = getURLFromTemplate(elevationData, tile);\n    const textureUrl = texture && getURLFromTemplate(texture, tile);\n\n    const {signal} = tile;\n    let bottomLeft = [0, 0] as [number, number];\n    let topRight = [0, 0] as [number, number];\n    if (viewport.isGeospatial) {\n      const bbox = tile.bbox as GeoBoundingBox;\n      bottomLeft = viewport.projectFlat([bbox.west, bbox.south]);\n      topRight = viewport.projectFlat([bbox.east, bbox.north]);\n    } else {\n      const bbox = tile.bbox as Exclude<TileBoundingBox, GeoBoundingBox>;\n      bottomLeft = [bbox.left, bbox.bottom];\n      topRight = [bbox.right, bbox.top];\n    }\n    const bounds: Bounds = [bottomLeft[0], bottomLeft[1], topRight[0], topRight[1]];\n\n    const terrain = this.loadTerrain({\n      elevationData: dataUrl,\n      bounds,\n      elevationDecoder,\n      meshMaxError,\n      signal\n    });\n    const surface = textureUrl\n      ? // If surface image fails to load, the tile should still be displayed\n        fetch(textureUrl, {propName: 'texture', layer: this, loaders: [], signal}).catch(_ => null)\n      : Promise.resolve(null);\n\n    return Promise.all([terrain, surface]);\n  }\n\n  renderSubLayers(\n    props: TileLayerProps<MeshAndTexture> & {\n      id: string;\n      data: MeshAndTexture;\n      tile: Tile2DHeader<MeshAndTexture>;\n    }\n  ) {\n    const SubLayerClass = this.getSubLayerClass('mesh', SimpleMeshLayer);\n\n    const {color, wireframe, material} = this.props;\n    const {data} = props;\n\n    if (!data) {\n      return null;\n    }\n\n    const [mesh, texture] = data;\n\n    return new SubLayerClass(props, {\n      data: DUMMY_DATA,\n      mesh,\n      texture,\n      _instanced: false,\n      coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n      getPosition: d => [0, 0, 0],\n      getColor: color,\n      wireframe,\n      material\n    });\n  }\n\n  // Update zRange of viewport\n  onViewportLoad(tiles?: Tile2DHeader<MeshAndTexture>[]): void {\n    if (!tiles) {\n      return;\n    }\n\n    const {zRange} = this.state;\n    const ranges = tiles\n      .map(tile => tile.content)\n      .filter(Boolean)\n      .map(arr => {\n        // @ts-ignore\n        const bounds = arr[0].header.boundingBox;\n        return bounds.map(bound => bound[2]);\n      });\n    if (ranges.length === 0) {\n      return;\n    }\n    const minZ = Math.min(...ranges.map(x => x[0]));\n    const maxZ = Math.max(...ranges.map(x => x[1]));\n\n    if (!zRange || minZ < zRange[0] || maxZ > zRange[1]) {\n      this.setState({zRange: [minZ, maxZ]});\n    }\n  }\n\n  renderLayers(): Layer | null | LayersList {\n    const {\n      color,\n      material,\n      elevationData,\n      texture,\n      wireframe,\n      meshMaxError,\n      elevationDecoder,\n      tileSize,\n      maxZoom,\n      minZoom,\n      extent,\n      maxRequests,\n      onTileLoad,\n      onTileUnload,\n      onTileError,\n      maxCacheSize,\n      maxCacheByteSize,\n      refinementStrategy\n    } = this.props;\n\n    if (this.state.isTiled) {\n      return new TileLayer<MeshAndTexture>(\n        this.getSubLayerProps({\n          id: 'tiles'\n        }),\n        {\n          getTileData: this.getTiledTerrainData.bind(this),\n          renderSubLayers: this.renderSubLayers.bind(this),\n          updateTriggers: {\n            getTileData: {\n              elevationData: urlTemplateToUpdateTrigger(elevationData),\n              texture: urlTemplateToUpdateTrigger(texture),\n              meshMaxError,\n              elevationDecoder\n            }\n          },\n          onViewportLoad: this.onViewportLoad.bind(this),\n          zRange: this.state.zRange || null,\n          tileSize,\n          maxZoom,\n          minZoom,\n          extent,\n          maxRequests,\n          onTileLoad,\n          onTileUnload,\n          onTileError,\n          maxCacheSize,\n          maxCacheByteSize,\n          refinementStrategy\n        }\n      );\n    }\n\n    const SubLayerClass = this.getSubLayerClass('mesh', SimpleMeshLayer);\n    return new SubLayerClass(\n      this.getSubLayerProps({\n        id: 'mesh'\n      }),\n      {\n        data: DUMMY_DATA,\n        mesh: this.state.terrain,\n        texture,\n        _instanced: false,\n        getPosition: d => [0, 0, 0],\n        getColor: color,\n        material,\n        wireframe\n      }\n    );\n  }\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {LayerExtension, _ShaderModule as ShaderModule} from '@deck.gl/core';\n\nimport type {Layer} from '@deck.gl/core';\n\nconst defaultProps = {\n  clipBounds: [0, 0, 1, 1],\n  clipByInstance: undefined\n};\n\nexport type ClipExtensionProps = {\n  /** Rectangular bounds to be used for clipping the rendered region, in `[left, bottom, right, top]`.\n   * @default [0, 0, 1, 1]\n   */\n  clipBounds?: [number, number, number, number];\n  /**\n   * Controls whether an object is clipped by its anchor (e.g. icon, point) or by its geometry (e.g. path, polygon).\n   * If not specified, it is automatically deduced from the layer.\n   */\n  clipByInstance?: boolean;\n};\n\nconst shaderFunction = `\nuniform vec4 clip_bounds;\n\nbool clip_isInBounds(vec2 position) {\n  return position.x >= clip_bounds[0] && position.y >= clip_bounds[1] && position.x < clip_bounds[2] && position.y < clip_bounds[3];\n}\n`;\n\n/*\n * The vertex-shader version clips geometries by their anchor position\n * e.g. ScatterplotLayer - show if the center of a circle is within bounds\n */\nconst shaderModuleVs: ShaderModule = {\n  name: 'clip-vs',\n  vs: shaderFunction\n};\n\nconst injectionVs = {\n  'vs:#decl': `\nvarying float clip_isVisible;\n`,\n  'vs:DECKGL_FILTER_GL_POSITION': `\n  clip_isVisible = float(clip_isInBounds(geometry.worldPosition.xy));\n`,\n  'fs:#decl': `\nvarying float clip_isVisible;\n`,\n  'fs:DECKGL_FILTER_COLOR': `\n  if (clip_isVisible < 0.5) discard;\n`\n};\n\n/*\n * The fragment-shader version clips pixels at the bounds\n * e.g. PolygonLayer - show the part of the polygon that intersect with the bounds\n */\nconst shaderModuleFs: ShaderModule = {\n  name: 'clip-fs',\n  fs: shaderFunction\n};\n\nconst injectionFs = {\n  'vs:#decl': `\nvarying vec2 clip_commonPosition;\n`,\n  'vs:DECKGL_FILTER_GL_POSITION': `\n  clip_commonPosition = geometry.position.xy;\n`,\n  'fs:#decl': `\nvarying vec2 clip_commonPosition;\n`,\n  'fs:DECKGL_FILTER_COLOR': `\n  if (!clip_isInBounds(clip_commonPosition)) discard;\n`\n};\n\n/** Adds support for clipping rendered layers by rectangular bounds. */\nexport default class ClipExtension extends LayerExtension {\n  static defaultProps = defaultProps;\n  static extensionName = 'ClipExtension';\n\n  getShaders(this: Layer<ClipExtensionProps>) {\n    // If `clipByInstance: true`, the entire object is shown/hidden based on its anchor position (done by vertex shader)\n    // Otherwise, the object is trimmed by the clip bounds (done by fragment shader)\n\n    // Default behavior: consider a layer instanced if it has attribute `instancePositions`\n    // @ts-expect-error attributeManager is always defined for primitive layers\n    let clipByInstance = 'instancePositions' in this.getAttributeManager().attributes;\n    // Users can override by setting the `clipByInstance` prop\n    if (this.props.clipByInstance !== undefined) {\n      clipByInstance = Boolean(this.props.clipByInstance);\n    }\n    this.state.clipByInstance = clipByInstance;\n\n    return clipByInstance\n      ? {\n          modules: [shaderModuleVs],\n          inject: injectionVs\n        }\n      : {\n          modules: [shaderModuleFs],\n          inject: injectionFs\n        };\n  }\n\n  /* eslint-disable camelcase */\n  draw(this: Layer<Required<ClipExtensionProps>>, {uniforms}: any): void {\n    const {clipBounds} = this.props;\n    if (this.state.clipByInstance) {\n      uniforms.clip_bounds = clipBounds;\n    } else {\n      const corner0 = this.projectPosition([clipBounds[0], clipBounds[1], 0]);\n      const corner1 = this.projectPosition([clipBounds[2], clipBounds[3], 0]);\n\n      uniforms.clip_bounds = [\n        Math.min(corner0[0], corner1[0]),\n        Math.min(corner0[1], corner1[1]),\n        Math.max(corner0[0], corner1[0]),\n        Math.max(corner0[1], corner1[1])\n      ];\n    }\n  }\n}\n","import type {\n  BinaryGeometry,\n  BinaryFeatures,\n  BinaryGeometryType,\n  BinaryPointFeatures,\n  BinaryLineFeatures,\n  BinaryPolygonFeatures,\n  BinaryAttribute\n} from '@loaders.gl/schema';\nimport type {Feature, Geometry, Position, GeoJsonProperties} from '@loaders.gl/schema';\nimport type {\n  Point,\n  MultiPoint,\n  LineString,\n  MultiLineString,\n  Polygon,\n  MultiPolygon\n} from '@loaders.gl/schema';\n\n// Note:L We do not handle GeometryCollection, define a limited Geometry type that always has coordinates.\n// type FeatureGeometry = Point | MultiPoint | LineString | MultiLineString | Polygon | MultiPolygon;\n\ntype BinaryToGeoJsonOptions = {\n  type?: BinaryGeometryType;\n  globalFeatureId?: number;\n};\n\n/**\n * Convert binary geometry representation to GeoJSON\n * @param data   geometry data in binary representation\n * @param options\n * @param options.type  Input data type: Point, LineString, or Polygon\n * @param options.featureId  Global feature id. If specified, only a single feature is extracted\n * @return GeoJSON objects\n */\nexport function binaryToGeojson(\n  data: BinaryFeatures,\n  options?: BinaryToGeoJsonOptions\n): Feature[] | Feature {\n  const globalFeatureId = options?.globalFeatureId;\n  if (globalFeatureId !== undefined) {\n    return getSingleFeature(data, globalFeatureId);\n  }\n  return parseFeatures(data, options?.type);\n}\n\n/** @deprecated use `binaryToGeojson` or `binaryToGeometry` instead */\nexport function binaryToGeoJson(\n  data: BinaryGeometry | BinaryFeatures,\n  type?: BinaryGeometryType,\n  format: 'feature' | 'geometry' = 'feature'\n): Geometry | Feature[] {\n  switch (format) {\n    case 'feature':\n      return parseFeatures(data as BinaryFeatures, type);\n    case 'geometry':\n      return binaryToGeometry(data as BinaryGeometry);\n    default:\n      throw new Error(format);\n  }\n}\n\n/**\n * Return a single feature from a binary geometry representation as GeoJSON\n * @param data   geometry data in binary representation\n * @return GeoJSON feature\n */\nfunction getSingleFeature(data: BinaryFeatures, globalFeatureId: number): Feature {\n  const dataArray = normalizeInput(data);\n  for (const data of dataArray) {\n    let lastIndex = 0;\n    let lastValue = data.featureIds.value[0];\n\n    // Scan through data until we find matching feature\n    for (let i = 0; i < data.featureIds.value.length; i++) {\n      const currValue = data.featureIds.value[i];\n      if (currValue === lastValue) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n      if (globalFeatureId === data.globalFeatureIds.value[lastIndex]) {\n        return parseFeature(data, lastIndex, i);\n      }\n      lastIndex = i;\n      lastValue = currValue;\n    }\n\n    if (globalFeatureId === data.globalFeatureIds.value[lastIndex]) {\n      return parseFeature(data, lastIndex, data.featureIds.value.length);\n    }\n  }\n\n  throw new Error(`featureId:${globalFeatureId} not found`);\n}\n\nfunction parseFeatures(data: BinaryFeatures, type?: BinaryGeometryType): Feature[] {\n  const dataArray = normalizeInput(data, type);\n  return parseFeatureCollection(dataArray);\n}\n\n/** Parse input binary data and return a valid GeoJSON geometry object */\nexport function binaryToGeometry(\n  data: BinaryGeometry,\n  startIndex?: number,\n  endIndex?: number\n): Geometry {\n  switch (data.type) {\n    case 'Point':\n      return pointToGeoJson(data, startIndex, endIndex);\n    case 'LineString':\n      return lineStringToGeoJson(data, startIndex, endIndex);\n    case 'Polygon':\n      return polygonToGeoJson(data, startIndex, endIndex);\n    default:\n      const unexpectedInput: never = data;\n      throw new Error(`Unsupported geometry type: ${(unexpectedInput as any)?.type}`);\n  }\n}\n\ntype BinaryFeature = BinaryPointFeatures | BinaryLineFeatures | BinaryPolygonFeatures;\ntype BinaryFeaturesArray = BinaryFeature[];\n\n// Normalize features\n// Return an array of data objects, each of which have a type key\nfunction normalizeInput(data: BinaryFeatures, type?: BinaryGeometryType): BinaryFeaturesArray {\n  const isHeterogeneousType = Boolean(data.points || data.lines || data.polygons);\n\n  if (!isHeterogeneousType) {\n    // @ts-expect-error This is a legacy check which allowed `data` to be an instance of the values\n    // here. Aka the new data.points, data.lines, or data.polygons.\n    data.type = type || parseType(data);\n    return [data] as BinaryFeaturesArray;\n  }\n\n  const features: BinaryFeaturesArray = [];\n  if (data.points) {\n    data.points.type = 'Point';\n    features.push(data.points);\n  }\n  if (data.lines) {\n    data.lines.type = 'LineString';\n    features.push(data.lines);\n  }\n  if (data.polygons) {\n    data.polygons.type = 'Polygon';\n    features.push(data.polygons);\n  }\n\n  return features;\n}\n\n/** Parse input binary data and return an array of GeoJSON Features */\nfunction parseFeatureCollection(dataArray): Feature[] {\n  const features: Feature[] = [];\n  for (const data of dataArray) {\n    if (data.featureIds.value.length === 0) {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n    let lastIndex = 0;\n    let lastValue = data.featureIds.value[0];\n\n    // Need to deduce start, end indices of each feature\n    for (let i = 0; i < data.featureIds.value.length; i++) {\n      const currValue = data.featureIds.value[i];\n      if (currValue === lastValue) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      features.push(parseFeature(data, lastIndex, i));\n      lastIndex = i;\n      lastValue = currValue;\n    }\n\n    // Last feature\n    features.push(parseFeature(data, lastIndex, data.featureIds.value.length));\n  }\n  return features;\n}\n\n/** Parse input binary data and return a single GeoJSON Feature */\nfunction parseFeature(data, startIndex?: number, endIndex?: number): Feature {\n  const geometry = binaryToGeometry(data, startIndex, endIndex);\n  const properties = parseProperties(data, startIndex, endIndex);\n  const fields = parseFields(data, startIndex, endIndex);\n  return {type: 'Feature', geometry, properties, ...fields};\n}\n\n/** Parse input binary data and return an object of fields */\nfunction parseFields(data, startIndex: number = 0, endIndex?: number): GeoJsonProperties {\n  return data.fields && data.fields[data.featureIds.value[startIndex]];\n}\n\n/** Parse input binary data and return an object of properties */\nfunction parseProperties(data, startIndex: number = 0, endIndex?: number): GeoJsonProperties {\n  const properties = Object.assign({}, data.properties[data.featureIds.value[startIndex]]);\n  for (const key in data.numericProps) {\n    properties[key] = data.numericProps[key].value[startIndex];\n  }\n  return properties;\n}\n\n/** Parse binary data of type Polygon */\nfunction polygonToGeoJson(\n  data,\n  startIndex: number = -Infinity,\n  endIndex: number = Infinity\n): Polygon | MultiPolygon {\n  const {positions} = data;\n  const polygonIndices = data.polygonIndices.value.filter((x) => x >= startIndex && x <= endIndex);\n  const primitivePolygonIndices = data.primitivePolygonIndices.value.filter(\n    (x) => x >= startIndex && x <= endIndex\n  );\n  const multi = polygonIndices.length > 2;\n\n  // Polygon\n  if (!multi) {\n    const coordinates: Position[][] = [];\n    for (let i = 0; i < primitivePolygonIndices.length - 1; i++) {\n      const startRingIndex = primitivePolygonIndices[i];\n      const endRingIndex = primitivePolygonIndices[i + 1];\n      const ringCoordinates = ringToGeoJson(positions, startRingIndex, endRingIndex);\n      coordinates.push(ringCoordinates);\n    }\n\n    return {type: 'Polygon', coordinates};\n  }\n\n  // MultiPolygon\n  const coordinates: Position[][][] = [];\n  for (let i = 0; i < polygonIndices.length - 1; i++) {\n    const startPolygonIndex = polygonIndices[i];\n    const endPolygonIndex = polygonIndices[i + 1];\n    const polygonCoordinates = polygonToGeoJson(\n      data,\n      startPolygonIndex,\n      endPolygonIndex\n    ).coordinates;\n    coordinates.push(polygonCoordinates as Position[][]);\n  }\n\n  return {type: 'MultiPolygon', coordinates};\n}\n\n/** Parse binary data of type LineString */\nfunction lineStringToGeoJson(\n  data,\n  startIndex: number = -Infinity,\n  endIndex: number = Infinity\n): LineString | MultiLineString {\n  const {positions} = data;\n  const pathIndices = data.pathIndices.value.filter((x) => x >= startIndex && x <= endIndex);\n  const multi = pathIndices.length > 2;\n\n  if (!multi) {\n    const coordinates = ringToGeoJson(positions, pathIndices[0], pathIndices[1]);\n    return {type: 'LineString', coordinates};\n  }\n\n  const coordinates: Position[][] = [];\n  for (let i = 0; i < pathIndices.length - 1; i++) {\n    const ringCoordinates = ringToGeoJson(positions, pathIndices[i], pathIndices[i + 1]);\n    coordinates.push(ringCoordinates);\n  }\n\n  return {type: 'MultiLineString', coordinates};\n}\n\n/** Parse binary data of type Point */\nfunction pointToGeoJson(data, startIndex, endIndex): Point | MultiPoint {\n  const {positions} = data;\n  const coordinates = ringToGeoJson(positions, startIndex, endIndex);\n  const multi = coordinates.length > 1;\n\n  if (multi) {\n    return {type: 'MultiPoint', coordinates};\n  }\n\n  return {type: 'Point', coordinates: coordinates[0]};\n}\n\n/**\n * Parse a linear ring of positions to a GeoJSON linear ring\n *\n * @param positions Positions TypedArray\n * @param startIndex Start index to include in ring\n * @param endIndex End index to include in ring\n * @returns GeoJSON ring\n */\nfunction ringToGeoJson(\n  positions: BinaryAttribute,\n  startIndex?: number,\n  endIndex?: number\n): Position[] {\n  startIndex = startIndex || 0;\n  endIndex = endIndex || positions.value.length / positions.size;\n\n  const ringCoordinates: Position[] = [];\n  for (let j = startIndex; j < endIndex; j++) {\n    const coord = Array<number>();\n    for (let k = j * positions.size; k < (j + 1) * positions.size; k++) {\n      coord.push(Number(positions.value[k]));\n    }\n    ringCoordinates.push(coord);\n  }\n  return ringCoordinates;\n}\n\n// Deduce geometry type of data object\nfunction parseType(data) {\n  if (data.pathIndices) {\n    return 'LineString';\n  }\n\n  if (data.polygonIndices) {\n    return 'Polygon';\n  }\n\n  return 'Point';\n}\n","import {Viewport} from '@deck.gl/core';\nimport {lerp} from '@math.gl/core';\nimport {GeoBoundingBox} from '../tileset-2d';\n\nconst availableTransformations = {\n  Point,\n  MultiPoint,\n  LineString,\n  MultiLineString,\n  Polygon,\n  MultiPolygon\n};\n\nfunction Point([pointX, pointY]: [number, number], [nw, se]: number[][], viewport: Viewport) {\n  const x = lerp(nw[0], se[0], pointX);\n  const y = lerp(nw[1], se[1], pointY);\n\n  return viewport.unprojectFlat([x, y]);\n}\n\nfunction getPoints(geometry, bbox: number[][], viewport: Viewport) {\n  return geometry.map(g => Point(g, bbox, viewport));\n}\n\nfunction MultiPoint(multiPoint, bbox: number[][], viewport: Viewport) {\n  return getPoints(multiPoint, bbox, viewport);\n}\n\nfunction LineString(line, bbox: number[][], viewport: Viewport) {\n  return getPoints(line, bbox, viewport);\n}\n\nfunction MultiLineString(multiLineString, bbox: number[][], viewport: Viewport) {\n  return multiLineString.map(lineString => LineString(lineString, bbox, viewport));\n}\n\nfunction Polygon(polygon, bbox: number[][], viewport: Viewport) {\n  return polygon.map(polygonRing => getPoints(polygonRing, bbox, viewport));\n}\n\nfunction MultiPolygon(multiPolygon, bbox: number[][], viewport: Viewport) {\n  return multiPolygon.map(polygon => Polygon(polygon, bbox, viewport));\n}\n\nexport function transform(geometry, bbox: GeoBoundingBox, viewport: Viewport) {\n  const nw = viewport.projectFlat([bbox.west, bbox.north]);\n  const se = viewport.projectFlat([bbox.east, bbox.south]);\n  const projectedBbox = [nw, se];\n\n  return {\n    ...geometry,\n    coordinates: availableTransformations[geometry.type](\n      geometry.coordinates,\n      projectedBbox,\n      viewport\n    )\n  };\n}\n","import type {\n  BinaryFeatures,\n  BinaryLineFeatures,\n  BinaryPointFeatures,\n  BinaryPolygonFeatures\n} from '@loaders.gl/schema';\n\ntype FeatureTypes = BinaryPointFeatures | BinaryLineFeatures | BinaryPolygonFeatures;\n\nconst GEOM_TYPES = ['points', 'lines', 'polygons'];\n/**\n * Return the index of feature (numericProps or featureIds) for given feature id\n * Example: findIndexBinary(data, 'id', 33) will return the index in the array of numericProps\n * of the feature 33.\n * @param {Object} data - The data in binary format\n * @param {String} uniqueIdProperty - Name of the unique id property\n * @param {Number|String} featureId - feature id to find\n * @param {String} layerName - the layer to search in\n */\nexport default function findIndexBinary(\n  data: BinaryFeatures,\n  uniqueIdProperty: string,\n  featureId: string | number,\n  layerName: string\n): number {\n  for (const gt of GEOM_TYPES) {\n    const index = data[gt] && findIndexByType(data[gt], uniqueIdProperty, featureId, layerName);\n    if (index >= 0) {\n      return index;\n    }\n  }\n\n  return -1;\n}\n\nfunction findIndexByType(\n  geomData: FeatureTypes,\n  uniqueIdProperty: string,\n  featureId: string | number,\n  layerName: string\n): number {\n  const featureIds = geomData.featureIds.value;\n\n  if (!featureIds.length) {\n    return -1;\n  }\n\n  let startFeatureIndex = 0;\n  let endFeatureIndex = featureIds[featureIds.length - 1] + 1;\n  if (layerName) {\n    const layerRange = getLayerRange(geomData, layerName);\n    if (layerRange) {\n      startFeatureIndex = layerRange[0];\n      endFeatureIndex = layerRange[1] + 1;\n    } else {\n      return -1;\n    }\n  }\n\n  // Look for the uniqueIdProperty\n  let featureIndex = -1;\n  if (uniqueIdProperty in geomData.numericProps) {\n    const vertexIndex = geomData.numericProps[uniqueIdProperty].value.findIndex(\n      (x, i) =>\n        x === featureId && featureIds[i] >= startFeatureIndex && featureIds[i] < endFeatureIndex\n    );\n    return vertexIndex >= 0 ? geomData.globalFeatureIds.value[vertexIndex] : -1;\n  } else if (uniqueIdProperty) {\n    featureIndex = findIndex(\n      geomData.properties,\n      elem => elem[uniqueIdProperty] === featureId,\n      startFeatureIndex,\n      endFeatureIndex\n    );\n  } else if (geomData.fields) {\n    featureIndex = findIndex(\n      geomData.fields,\n      (elem: any) => elem.id === featureId,\n      startFeatureIndex,\n      endFeatureIndex\n    );\n  }\n  return featureIndex >= 0 ? getGlobalFeatureId(geomData, featureIndex) : -1;\n}\n\ntype LayerRange = [firstFeatureIndex: number, lastFeatureIndex: number];\n\n// Returns [firstFeatureIndex, lastFeatureIndex]\n// MVTLoader parses tiles layer-by-layer, so each layer is a continuous range\nfunction getLayerRange(\n  geomData: FeatureTypes & {\n    __layers?: Record<string, LayerRange>;\n  },\n  layerName: string\n): LayerRange | undefined {\n  if (!geomData.__layers) {\n    // Cache a map from properties.layerName to index ranges\n    const layerNames: Record<string, LayerRange> = {};\n    const {properties} = geomData;\n    for (let i = 0; i < properties.length; i++) {\n      const {layerName: key} = properties[i] as Record<string, any>;\n      if (!key) {\n        // ignore\n      } else if (layerNames[key]) {\n        layerNames[key][1] = i;\n      } else {\n        layerNames[key] = [i, i];\n      }\n    }\n    geomData.__layers = layerNames;\n  }\n  return geomData.__layers[layerName];\n}\n\n// Returns global feature id\nfunction getGlobalFeatureId(geomData, featureIndex: number) {\n  if (!geomData.__ids) {\n    // Cache a map from featureId to globalFeatureId\n    const result: string[] = [];\n    const featureIds = geomData.featureIds.value;\n    const globalFeatureIds = geomData.globalFeatureIds.value;\n    for (let i = 0; i < featureIds.length; i++) {\n      result[featureIds[i]] = globalFeatureIds[i];\n    }\n    geomData.__ids = result;\n  }\n  return geomData.__ids[featureIndex];\n}\n\n// Like array.findIndex, but only search within a range\nfunction findIndex<T>(\n  array: T[],\n  predicate: (v: T, index: number) => boolean,\n  startIndex: number,\n  endIndex: number\n): number {\n  for (let i = startIndex; i < endIndex; i++) {\n    if (predicate(array[i], i)) {\n      return i;\n    }\n  }\n  return -1;\n}\n","import {\n  Layer,\n  LayersList,\n  log,\n  PickingInfo,\n  UpdateParameters,\n  GetPickingInfoParams,\n  Viewport,\n  COORDINATE_SYSTEM,\n  DefaultProps\n} from '@deck.gl/core';\nimport {GeoJsonLayer, GeoJsonLayerProps} from '@deck.gl/layers';\nimport {ClipExtension} from '@deck.gl/extensions';\n\nimport {Matrix4} from '@math.gl/core';\nimport {MVTWorkerLoader} from '@loaders.gl/mvt';\nimport {binaryToGeojson} from '@loaders.gl/gis';\n\nimport type {Loader} from '@loaders.gl/loader-utils';\nimport type {BinaryFeatures} from '@loaders.gl/schema';\nimport type {Feature} from 'geojson';\n\nimport {transform} from './coordinate-transform';\nimport findIndexBinary from './find-index-binary';\n\nimport TileLayer, {TiledPickingInfo, TileLayerProps} from '../tile-layer/tile-layer';\n\nimport type {Tileset2DProps, TileLoadProps, GeoBoundingBox} from '../tileset-2d';\nimport {\n  urlType,\n  Tileset2D,\n  Tile2DHeader,\n  getURLFromTemplate,\n  isGeoBoundingBox,\n  isURLTemplate\n} from '../tileset-2d';\n\nconst WORLD_SIZE = 512;\n\nconst defaultProps: DefaultProps<MVTLayerProps> = {\n  ...GeoJsonLayer.defaultProps,\n  data: urlType,\n  onDataLoad: {type: 'function', value: null, optional: true, compare: false},\n  uniqueIdProperty: '',\n  highlightedFeatureId: null,\n  loaders: [MVTWorkerLoader],\n  binary: true\n};\n\nexport type TileJson = {\n  tilejson: string;\n  tiles: string[];\n  // eslint-disable-next-line camelcase\n  vector_layers: any[];\n  attribution?: string;\n  scheme?: string;\n  maxzoom?: number;\n  minzoom?: number;\n  version?: string;\n};\n\ntype ParsedMvtTile = Feature[] | BinaryFeatures;\n\n/** All props supported by the MVTLayer */\nexport type MVTLayerProps = _MVTLayerProps &\n  Omit<GeoJsonLayerProps, 'data'> &\n  TileLayerProps<ParsedMvtTile>;\n\n/** Props added by the MVTLayer  */\nexport type _MVTLayerProps = {\n  /** Called if `data` is a TileJSON URL when it is successfully fetched. */\n  onDataLoad?: ((tilejson: TileJson | null) => void) | null;\n\n  /** Needed for highlighting a feature split across two or more tiles. */\n  uniqueIdProperty?: string;\n\n  /** A feature with ID corresponding to the supplied value will be highlighted. */\n  highlightedFeatureId?: string | number | null;\n\n  /**\n   * Use tile data in binary format.\n   *\n   * @default true\n   */\n  binary?: boolean;\n\n  /**\n   * Loaders used to transform tiles into `data` property passed to `renderSubLayers`.\n   *\n   * @default [MVTWorkerLoader] from `@loaders.gl/mvt`\n   */\n  loaders?: Loader[];\n};\n\ntype ContentWGS84Cache = {_contentWGS84?: Feature[]};\n\n/** Render data formatted as [Mapbox Vector Tiles](https://docs.mapbox.com/vector-tiles/specification/). */\nexport default class MVTLayer<ExtraProps extends {} = {}> extends TileLayer<\n  ParsedMvtTile,\n  Required<_MVTLayerProps> & ExtraProps\n> {\n  static layerName = 'MVTLayer';\n  static defaultProps = defaultProps;\n\n  initializeState(): void {\n    super.initializeState();\n    // GlobeView doesn't work well with binary data\n    const binary = this.context.viewport.resolution !== undefined ? false : this.props.binary;\n    this.setState({\n      binary,\n      data: null,\n      tileJSON: null\n    });\n  }\n\n  get isLoaded(): boolean {\n    return this.state && this.state.data && this.state.tileset && super.isLoaded;\n  }\n\n  updateState({props, oldProps, context, changeFlags}: UpdateParameters<this>) {\n    if (changeFlags.dataChanged) {\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this._updateTileData();\n    }\n\n    if (this.state?.data) {\n      super.updateState({props, oldProps, context, changeFlags});\n      this._setWGS84PropertyForTiles();\n    }\n    const {highlightColor} = props;\n    if (highlightColor !== oldProps.highlightColor && Array.isArray(highlightColor)) {\n      this.setState({highlightColor});\n    }\n  }\n\n  /* eslint-disable complexity */\n  private async _updateTileData(): Promise<void> {\n    let data: any = this.props.data;\n    let tileJSON: any = null;\n\n    if (typeof data === 'string' && !isURLTemplate(data)) {\n      const {onDataLoad, fetch} = this.props;\n      this.setState({data: null, tileJSON: null});\n      try {\n        tileJSON = await fetch(data, {propName: 'data', layer: this, loaders: []});\n      } catch (error: any) {\n        this.raiseError(error, 'loading TileJSON');\n        data = null;\n      }\n\n      if (onDataLoad) {\n        onDataLoad(tileJSON, {propName: 'data', layer: this});\n      }\n    } else if (data.tilejson) {\n      tileJSON = data;\n    }\n\n    if (tileJSON) {\n      data = tileJSON.tiles;\n    }\n\n    this.setState({data, tileJSON});\n  }\n\n  _getTilesetOptions(): Tileset2DProps {\n    const opts = super._getTilesetOptions();\n    const tileJSON: TileJson | null | undefined = this.state.tileJSON;\n    const {minZoom, maxZoom} = this.props;\n\n    if (tileJSON) {\n      if (Number.isFinite(tileJSON.minzoom) && (tileJSON.minzoom as number) > (minZoom as number)) {\n        opts.minZoom = tileJSON.minzoom as number;\n      }\n\n      if (\n        Number.isFinite(tileJSON.maxzoom) &&\n        (!Number.isFinite(maxZoom) || (tileJSON.maxzoom as number) < (maxZoom as number))\n      ) {\n        opts.maxZoom = tileJSON.maxzoom as number;\n      }\n    }\n    return opts;\n  }\n\n  /* eslint-disable complexity */\n\n  renderLayers(): Layer | null | LayersList {\n    if (!this.state?.data) return null;\n    return super.renderLayers();\n  }\n\n  getTileData(loadProps: TileLoadProps): Promise<ParsedMvtTile> {\n    const {data, binary} = this.state;\n    const {index, signal} = loadProps;\n\n    const url = getURLFromTemplate(data, loadProps);\n    if (!url) {\n      return Promise.reject('Invalid URL');\n    }\n    let loadOptions = this.getLoadOptions();\n    const {fetch} = this.props;\n    loadOptions = {\n      ...loadOptions,\n      mimeType: 'application/x-protobuf',\n      mvt: {\n        ...loadOptions?.mvt,\n        coordinates: this.context.viewport.resolution ? 'wgs84' : 'local',\n        tileIndex: index\n        // Local worker debug\n        // workerUrl: `modules/mvt/dist/mvt-loader.worker.js`\n        // Set worker to null to skip web workers\n        // workerUrl: null\n      },\n      gis: binary ? {format: 'binary'} : {}\n    };\n    return fetch(url, {propName: 'data', layer: this, loadOptions, signal});\n  }\n\n  renderSubLayers(\n    props: TileLayer['props'] & {\n      id: string;\n      data: ParsedMvtTile;\n      _offset: number;\n      tile: Tile2DHeader<ParsedMvtTile>;\n    }\n  ): Layer | null | LayersList {\n    const {x, y, z} = props.tile.index;\n    const worldScale = Math.pow(2, z);\n\n    const xScale = WORLD_SIZE / worldScale;\n    const yScale = -xScale;\n\n    const xOffset = (WORLD_SIZE * x) / worldScale;\n    const yOffset = WORLD_SIZE * (1 - y / worldScale);\n\n    const modelMatrix = new Matrix4().scale([xScale, yScale, 1]);\n\n    props.autoHighlight = false;\n\n    if (!this.context.viewport.resolution) {\n      props.modelMatrix = modelMatrix;\n      props.coordinateOrigin = [xOffset, yOffset, 0];\n      props.coordinateSystem = COORDINATE_SYSTEM.CARTESIAN;\n      props.extensions = [...(props.extensions || []), new ClipExtension()];\n    }\n\n    const subLayers = super.renderSubLayers(props);\n\n    if (this.state.binary && !(subLayers instanceof GeoJsonLayer)) {\n      log.warn('renderSubLayers() must return GeoJsonLayer when using binary:true')();\n    }\n\n    return subLayers;\n  }\n\n  protected _updateAutoHighlight(info: PickingInfo): void {\n    const {uniqueIdProperty} = this.props;\n\n    const {hoveredFeatureId, hoveredFeatureLayerName} = this.state;\n    const hoveredFeature = info.object;\n    let newHoveredFeatureId;\n    let newHoveredFeatureLayerName;\n\n    if (hoveredFeature) {\n      newHoveredFeatureId = getFeatureUniqueId(hoveredFeature, uniqueIdProperty);\n      newHoveredFeatureLayerName = getFeatureLayerName(hoveredFeature);\n    }\n    let {highlightColor} = this.props;\n    if (typeof highlightColor === 'function') {\n      highlightColor = highlightColor(info);\n    }\n\n    if (\n      hoveredFeatureId !== newHoveredFeatureId ||\n      hoveredFeatureLayerName !== newHoveredFeatureLayerName\n    ) {\n      this.setState({\n        highlightColor,\n        hoveredFeatureId: newHoveredFeatureId,\n        hoveredFeatureLayerName: newHoveredFeatureLayerName\n      });\n    }\n  }\n\n  getPickingInfo(params: GetPickingInfoParams): TiledPickingInfo {\n    const info = super.getPickingInfo(params);\n\n    const isWGS84 = Boolean(this.context.viewport.resolution);\n\n    if (this.state.binary && info.index !== -1) {\n      const {data} = params.sourceLayer!.props;\n      info.object = binaryToGeojson(data as BinaryFeatures, {\n        globalFeatureId: info.index\n      }) as Feature;\n    }\n    if (info.object && !isWGS84) {\n      info.object = transformTileCoordsToWGS84(\n        info.object,\n        info.tile!.bbox as GeoBoundingBox, // eslint-disable-line\n        this.context.viewport\n      );\n    }\n\n    return info;\n  }\n\n  getSubLayerPropsByTile(tile: Tile2DHeader<ParsedMvtTile>): Record<string, any> {\n    return {\n      highlightedObjectIndex: this.getHighlightedObjectIndex(tile),\n      highlightColor: this.state.highlightColor\n    };\n  }\n\n  private getHighlightedObjectIndex(tile: Tile2DHeader<ParsedMvtTile>): number {\n    const {hoveredFeatureId, hoveredFeatureLayerName, binary} = this.state;\n    const {uniqueIdProperty, highlightedFeatureId} = this.props;\n    const data = tile.content;\n\n    const isHighlighted = isFeatureIdDefined(highlightedFeatureId);\n    const isFeatureIdPresent = isFeatureIdDefined(hoveredFeatureId) || isHighlighted;\n\n    if (!isFeatureIdPresent) {\n      return -1;\n    }\n\n    const featureIdToHighlight = isHighlighted ? highlightedFeatureId : hoveredFeatureId;\n\n    // Iterable data\n    if (Array.isArray(data)) {\n      return data.findIndex(feature => {\n        const isMatchingId = getFeatureUniqueId(feature, uniqueIdProperty) === featureIdToHighlight;\n        const isMatchingLayer =\n          isHighlighted || getFeatureLayerName(feature) === hoveredFeatureLayerName;\n        return isMatchingId && isMatchingLayer;\n      });\n\n      // Non-iterable data\n    } else if (data && binary) {\n      // Get the feature index of the selected item to highlight\n      return findIndexBinary(\n        data,\n        uniqueIdProperty,\n        featureIdToHighlight,\n        isHighlighted ? '' : hoveredFeatureLayerName\n      );\n    }\n\n    return -1;\n  }\n\n  private _pickObjects(maxObjects: number | null): PickingInfo[] {\n    const {deck, viewport} = this.context;\n    const width = viewport.width;\n    const height = viewport.height;\n    const x = viewport.x;\n    const y = viewport.y;\n    const layerIds = [this.id];\n    return deck!.pickObjects({x, y, width, height, layerIds, maxObjects});\n  }\n\n  /** Get the rendered features in the current viewport. */\n  getRenderedFeatures(maxFeatures: number | null = null): Feature[] {\n    const features = this._pickObjects(maxFeatures);\n    const featureCache = new Set();\n    const renderedFeatures: Feature[] = [];\n\n    for (const f of features) {\n      const featureId = getFeatureUniqueId(f.object, this.props.uniqueIdProperty);\n\n      if (featureId === undefined) {\n        // we have no id for the feature, we just add to the list\n        renderedFeatures.push(f.object as Feature);\n      } else if (!featureCache.has(featureId)) {\n        // Add removing duplicates\n        featureCache.add(featureId);\n        renderedFeatures.push(f.object as Feature);\n      }\n    }\n\n    return renderedFeatures;\n  }\n\n  private _setWGS84PropertyForTiles(): void {\n    const propName = 'dataInWGS84';\n    const tileset: Tileset2D = this.state.tileset;\n\n    // @ts-expect-error selectedTiles are always initialized when tile is being processed\n    tileset.selectedTiles.forEach((tile: Tile2DHeader & ContentWGS84Cache) => {\n      if (!tile.hasOwnProperty(propName)) {\n        // eslint-disable-next-line accessor-pairs\n        Object.defineProperty(tile, propName, {\n          get: () => {\n            // Still loading or encountered an error\n            if (!tile.content) {\n              return null;\n            }\n\n            if (this.state.binary && Array.isArray(tile.content) && !tile.content.length) {\n              // TODO: @loaders.gl/mvt returns [] when no content. It should return a valid empty binary.\n              // https://github.com/visgl/loaders.gl/pull/1137\n              return [];\n            }\n\n            const {bbox} = tile;\n            if (tile._contentWGS84 === undefined && isGeoBoundingBox(bbox)) {\n              // Create a cache to transform only once\n\n              const content = this.state.binary ? binaryToGeojson(tile.content) : tile.content;\n              tile._contentWGS84 = content.map(feature =>\n                transformTileCoordsToWGS84(feature, bbox, this.context.viewport)\n              );\n            }\n            return tile._contentWGS84;\n          }\n        });\n      }\n    });\n  }\n}\n\nfunction getFeatureUniqueId(feature: Feature, uniqueIdProperty: string | undefined) {\n  if (feature.properties && uniqueIdProperty) {\n    return feature.properties[uniqueIdProperty];\n  }\n\n  if ('id' in feature) {\n    return feature.id;\n  }\n\n  return undefined;\n}\n\nfunction getFeatureLayerName(feature: Feature): string | null {\n  return feature.properties?.layerName || null;\n}\n\nfunction isFeatureIdDefined(value: unknown): boolean {\n  return value !== undefined && value !== null && value !== '';\n}\n\nfunction transformTileCoordsToWGS84(\n  object: Feature,\n  bbox: GeoBoundingBox,\n  viewport: Viewport\n): Feature {\n  const feature = {\n    ...object,\n    geometry: {\n      type: object.geometry.type\n    }\n  };\n\n  // eslint-disable-next-line accessor-pairs\n  Object.defineProperty(feature.geometry, 'coordinates', {\n    get: () => {\n      const wgs84Geom = transform(object.geometry, bbox, viewport);\n      return wgs84Geom.coordinates;\n    }\n  });\n\n  return feature as Feature;\n}\n","const BASE32_CODES = '0123456789bcdefghjkmnpqrstuvwxyz';\nconst BASE32_CODES_DICT = {};\nfor (let i = 0; i < BASE32_CODES.length; i++) {\n  BASE32_CODES_DICT[BASE32_CODES.charAt(i)] = i;\n}\n\nconst MIN_LAT = -90;\nconst MAX_LAT = 90;\nconst MIN_LON = -180;\nconst MAX_LON = 180;\n\n// Adapted from ngeohash decode_bbox\nexport function getGeohashBounds(geohash: string): number[] {\n  let isLon = true;\n  let maxLat = MAX_LAT;\n  let minLat = MIN_LAT;\n  let maxLon = MAX_LON;\n  let minLon = MIN_LON;\n  let mid: number;\n\n  let hashValue = 0;\n  for (let i = 0, l = geohash.length; i < l; i++) {\n    const code = geohash[i].toLowerCase();\n    hashValue = BASE32_CODES_DICT[code];\n\n    for (let bits = 4; bits >= 0; bits--) {\n      const bit = (hashValue >> bits) & 1;\n      if (isLon) {\n        mid = (maxLon + minLon) / 2;\n        if (bit === 1) {\n          minLon = mid;\n        } else {\n          maxLon = mid;\n        }\n      } else {\n        mid = (maxLat + minLat) / 2;\n        if (bit === 1) {\n          minLat = mid;\n        } else {\n          maxLat = mid;\n        }\n      }\n      isLon = !isLon;\n    }\n  }\n\n  return [minLat, minLon, maxLat, maxLon];\n}\n\nexport function getGeohashPolygon(geohash: string): number[] {\n  const [s, w, n, e] = getGeohashBounds(geohash);\n\n  return [e, n, e, s, w, s, w, n, e, n];\n}\n","import {AccessorFunction, DefaultProps} from '@deck.gl/core';\nimport GeoCellLayer from '../geo-cell-layer/GeoCellLayer';\nimport {getGeohashPolygon} from './geohash-utils';\n\nconst defaultProps: DefaultProps<GeohashLayerProps> = {\n  getGeohash: {type: 'accessor', value: d => d.geohash}\n};\n\n/**\n * Properties of `GeohashLayer`.\n */\ntype GeohashLayerProps<DataT = any> = {\n  /**\n   * Called for each data object to retrieve the geohash string identifier.\n   *\n   * By default, it reads `geohash` property of data object.\n   */\n  getGeohash?: AccessorFunction<DataT, string>;\n};\n\n/** Render filled and/or stroked polygons based on the [Geohash](https://en.wikipedia.org/wiki/Geohash) geospatial indexing system. */\nexport default class GeohashLayer<DataT = any, ExtraProps extends {} = {}> extends GeoCellLayer<\n  DataT,\n  Required<GeohashLayerProps> & ExtraProps\n> {\n  static layerName = 'GeohashLayer';\n  static defaultProps = defaultProps;\n\n  indexToBounds(): Partial<GeoCellLayer['props']> | null {\n    const {data, getGeohash} = this.props;\n\n    return {\n      data,\n      _normalize: false,\n      positionFormat: 'XY',\n      getPolygon: (x: DataT, objectInfo) => getGeohashPolygon(getGeohash(x, objectInfo))\n    };\n  }\n}\n","// From https://github.com/streamich/react-use/blob/master/src/useIsomorphicLayoutEffect.ts\n// useLayoutEffect but does not trigger warning in server-side rendering\nimport {useEffect, useLayoutEffect} from 'react';\n\nconst useIsomorphicLayoutEffect = typeof window !== 'undefined' ? useLayoutEffect : useEffect;\n\nexport default useIsomorphicLayoutEffect;\n","// Check if one JavaScript class inherits from another\nexport function inheritsFrom<T>(Type: any, ParentType: T): Type is T {\n  while (Type) {\n    if (Type === ParentType) {\n      return true;\n    }\n    Type = Object.getPrototypeOf(Type);\n  }\n  return false;\n}\n","import * as React from 'react';\nimport {cloneElement} from 'react';\n\nconst MAP_STYLE = {position: 'absolute', zIndex: -1};\n\nexport default function evaluateChildren(\n  children: React.ReactNode | Function,\n  childProps: any\n): React.ReactNode {\n  if (typeof children === 'function') {\n    return children(childProps);\n  }\n  if (Array.isArray(children)) {\n    return children.map(child => evaluateChildren(child, childProps));\n  }\n  if (isComponent(children)) {\n    // Special treatment for react-map-gl's Map component\n    // to support shorthand use case <DeckGL><StaticMap /></DeckGL>\n    if (isReactMap(children)) {\n      // Place map under the canvas\n      childProps.style = MAP_STYLE;\n      return cloneElement(children, childProps);\n    }\n    if (needsDeckGLViewProps(children)) {\n      return cloneElement(children, childProps);\n    }\n  }\n\n  return children;\n}\n\nexport function isComponent(child: React.ReactNode): child is React.ReactElement {\n  return (child && typeof child === 'object' && 'type' in child) || false;\n}\n\nfunction isReactMap(child: React.ReactElement): boolean {\n  return child.props?.mapStyle;\n}\n\nfunction needsDeckGLViewProps(child: React.ReactElement): boolean {\n  const componentClass = child.type;\n  // @ts-expect-error deckGLViewProps is a custom hack defined on the constructor (nebula.gl)\n  return componentClass && componentClass.deckGLViewProps;\n}\n","import * as React from 'react';\nimport {createElement} from 'react';\nimport {inheritsFrom} from './inherits-from';\nimport {Layer, View} from '@deck.gl/core';\nimport {isComponent} from './evaluate-children';\nimport type {LayersList, Viewport} from '@deck.gl/core';\n\nexport type DeckGLRenderCallbackArgs = {\n  /**\n   * the left offset of the current view, in pixels\n   */\n  x: number;\n  /**\n   * the top offset of the current view, in pixels\n   */\n  y: number;\n  /**\n   * the width of the current view, in pixels\n   */\n  width: number;\n  /**\n   * the height of the current view, in pixels\n   */\n  height: number;\n  /**\n   * the view state of the current view\n   */\n  viewState: any;\n  /**\n   * the `Viewport` instance of the current view\n   */\n  viewport: Viewport;\n};\n\nexport type DeckGLRenderCallback = (args: DeckGLRenderCallbackArgs) => React.ReactNode;\n\n// recursively wrap render callbacks in `View`\nfunction wrapInView(node: React.ReactNode | DeckGLRenderCallback): React.ReactNode {\n  if (typeof node === 'function') {\n    // React.Children does not traverse functions.\n    // All render callbacks must be protected under a <View>\n    // @ts-expect-error View is not a ReactJSXElement constructor. Only used as a temporary wrapper and will be removed in extractJSXLayers\n    return createElement(View, {}, node);\n  }\n  if (Array.isArray(node)) {\n    return node.map(wrapInView);\n  }\n  if (isComponent(node)) {\n    if (node.type === React.Fragment) {\n      return wrapInView(node.props.children);\n    }\n    if (inheritsFrom(node.type, View)) {\n      return node;\n    }\n  }\n  return node;\n}\n\n// extracts any deck.gl layers masquerading as react elements from props.children\nexport default function extractJSXLayers({\n  children,\n  layers = [],\n  views = null\n}: {\n  children?: React.ReactNode | DeckGLRenderCallback;\n  layers?: LayersList;\n  views?: View | View[] | null;\n}): {\n  children: React.ReactNode[];\n  layers: LayersList;\n  views: View | View[] | null;\n} {\n  const reactChildren: React.ReactNode[] = []; // extract real react elements (i.e. not deck.gl layers)\n  const jsxLayers: LayersList = []; // extracted layer from react children, will add to deck.gl layer array\n  const jsxViews: Record<string, View> = {};\n\n  // React.children\n  React.Children.forEach(wrapInView(children), reactElement => {\n    if (isComponent(reactElement)) {\n      // For some reason Children.forEach doesn't filter out `null`s\n      const ElementType = reactElement.type;\n      if (inheritsFrom(ElementType, Layer)) {\n        const layer = createLayer(ElementType, reactElement.props);\n        jsxLayers.push(layer);\n      } else {\n        reactChildren.push(reactElement);\n      }\n\n      // empty id => default view\n      if (inheritsFrom(ElementType, View) && ElementType !== View && reactElement.props.id) {\n        // @ts-ignore Cannot instantiate an abstract class (View)\n        const view = new ElementType(reactElement.props);\n        jsxViews[view.id] = view;\n      }\n    } else if (reactElement) {\n      reactChildren.push(reactElement);\n    }\n  });\n\n  // Avoid modifying views if no JSX views were found\n  if (Object.keys(jsxViews).length > 0) {\n    // If a view is specified in both views prop and JSX, use the one in views\n    if (Array.isArray(views)) {\n      views.forEach(view => {\n        jsxViews[view.id] = view;\n      });\n    } else if (views) {\n      jsxViews[views.id] = views;\n    }\n    views = Object.values(jsxViews);\n  }\n\n  // Avoid modifying layers array if no JSX layers were found\n  layers = jsxLayers.length > 0 ? [...jsxLayers, ...layers] : layers;\n\n  return {layers, children: reactChildren, views};\n}\n\nfunction createLayer(LayerType: typeof Layer, reactProps: any): Layer {\n  const props = {};\n  // Layer.defaultProps is treated as ReactElement.defaultProps and merged into react props\n  // Remove them\n  const defaultProps = LayerType.defaultProps || {};\n  for (const key in reactProps) {\n    if (defaultProps[key] !== reactProps[key]) {\n      props[key] = reactProps[key];\n    }\n  }\n  // @ts-ignore Cannot instantiate an abstract class (Layer)\n  return new LayerType(props);\n}\n","import * as React from 'react';\n\nconst CANVAS_ONLY_STYLES = {\n  mixBlendMode: null\n};\n\nexport default function extractStyles({\n  width,\n  height,\n  style\n}: {\n  width?: string | number;\n  height?: string | number;\n  style?: Partial<CSSStyleDeclaration> | null;\n}): {\n  containerStyle: React.CSSProperties;\n  canvasStyle: React.CSSProperties;\n} {\n  // This styling is enforced for correct positioning with children\n  const containerStyle: React.CSSProperties = {\n    position: 'absolute',\n    zIndex: 0,\n    left: 0,\n    top: 0,\n    width,\n    height\n  };\n\n  // Fill the container\n  const canvasStyle: React.CSSProperties = {\n    left: 0,\n    top: 0\n  };\n\n  if (style) {\n    for (const key in style) {\n      if (key in CANVAS_ONLY_STYLES) {\n        // apply style to the canvas, but not deck's children, e.g. mix-blend-mode\n        canvasStyle[key] = style[key];\n      } else {\n        // apply style to the container, e.g. position/flow settings\n        containerStyle[key] = style[key];\n      }\n    }\n  }\n\n  return {containerStyle, canvasStyle};\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport * as React from 'react';\nimport {\n  createElement,\n  useRef,\n  useState,\n  useMemo,\n  useEffect,\n  useImperativeHandle,\n  forwardRef\n} from 'react';\nimport {Deck} from '@deck.gl/core';\nimport useIsomorphicLayoutEffect from './utils/use-isomorphic-layout-effect';\n\nimport extractJSXLayers, {DeckGLRenderCallback} from './utils/extract-jsx-layers';\nimport positionChildrenUnderViews from './utils/position-children-under-views';\nimport extractStyles from './utils/extract-styles';\n\nimport type {DeckGLContextValue} from './utils/position-children-under-views';\nimport type {DeckProps, Viewport} from '@deck.gl/core';\n\n/* eslint-disable max-statements, accessor-pairs */\ntype DeckInstanceRef = {\n  deck?: Deck;\n  redrawReason?: string | null;\n  lastRenderedViewports?: Viewport[];\n  viewStateUpdateRequested?: any;\n  interactionStateUpdateRequested?: any;\n  forceUpdate: () => void;\n  version: number;\n  control: React.ReactHTMLElement<HTMLElement> | null;\n};\n\n// Remove prop types in the base Deck class that support externally supplied canvas/WebGLContext\n/** DeckGL React component props */\nexport type DeckGLProps = Omit<\n  DeckProps,\n  'width' | 'height' | 'gl' | 'parent' | 'canvas' | '_customRender'\n> & {\n  Deck?: typeof Deck;\n  width?: string | number;\n  height?: string | number;\n  children?: React.ReactNode | DeckGLRenderCallback;\n  ContextProvider?: React.Context<DeckGLContextValue>['Provider'];\n};\n\nexport type DeckGLRef = {\n  deck?: Deck;\n  pickObject: Deck['pickObject'];\n  pickObjects: Deck['pickObjects'];\n  pickMultipleObjects: Deck['pickMultipleObjects'];\n};\n\nfunction getRefHandles(thisRef: DeckInstanceRef): DeckGLRef {\n  return {\n    get deck() {\n      return thisRef.deck;\n    },\n    // The following method can only be called after ref is available, by which point deck is defined in useEffect\n    pickObject: opts => thisRef.deck!.pickObject(opts),\n    pickMultipleObjects: opts => thisRef.deck!.pickMultipleObjects(opts),\n    pickObjects: opts => thisRef.deck!.pickObjects(opts)\n  };\n}\n\nfunction redrawDeck(thisRef: DeckInstanceRef) {\n  if (thisRef.redrawReason) {\n    // Only redraw if we have received a dirty flag\n    // @ts-expect-error accessing protected method\n    thisRef.deck._drawLayers(thisRef.redrawReason);\n    thisRef.redrawReason = null;\n  }\n}\n\nfunction createDeckInstance(\n  thisRef: DeckInstanceRef,\n  DeckClass: typeof Deck,\n  props: DeckProps\n): Deck {\n  const deck = new DeckClass({\n    ...props,\n    // The Deck's animation loop is independent from React's render cycle, causing potential\n    // synchronization issues. We provide this custom render function to make sure that React\n    // and Deck update on the same schedule.\n    _customRender: redrawReason => {\n      // Save the dirty flag for later\n      thisRef.redrawReason = redrawReason;\n\n      // Viewport/view state is passed to child components as props.\n      // If they have changed, we need to trigger a React rerender to update children props.\n      const viewports = deck.getViewports();\n      if (thisRef.lastRenderedViewports !== viewports) {\n        // Viewports have changed, update children props first.\n        // This will delay the Deck canvas redraw till after React update (in useLayoutEffect)\n        // so that the canvas does not get rendered before the child components update.\n        thisRef.forceUpdate();\n      } else {\n        redrawDeck(thisRef);\n      }\n    }\n  });\n  return deck;\n}\n\nconst DeckGL = forwardRef<DeckGLRef, DeckGLProps>((props, ref) => {\n  // A mechanism to force redraw\n  const [version, setVersion] = useState(0);\n  // A reference to persistent states\n  const _thisRef = useRef<DeckInstanceRef>({\n    control: null,\n    version,\n    forceUpdate: () => setVersion(v => v + 1)\n  });\n  const thisRef = _thisRef.current;\n  // DOM refs\n  const containerRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  // extract any deck.gl layers masquerading as react elements from props.children\n  const jsxProps = useMemo(\n    () => extractJSXLayers(props),\n    [props.layers, props.views, props.children]\n  );\n\n  // Callbacks\n  let inRender = true;\n\n  const handleViewStateChange: DeckProps['onViewStateChange'] = params => {\n    if (inRender && props.viewState) {\n      // Callback may invoke a state update. Defer callback to after render() to avoid React error\n      // In React StrictMode, render is executed twice and useEffect/useLayoutEffect is executed once\n      // Store deferred parameters in ref so that we can access it in another render\n      thisRef.viewStateUpdateRequested = params;\n      return null;\n    }\n    thisRef.viewStateUpdateRequested = null;\n    return props.onViewStateChange?.(params);\n  };\n\n  const handleInteractionStateChange: DeckProps['onInteractionStateChange'] = params => {\n    if (inRender) {\n      // Callback may invoke a state update. Defer callback to after render() to avoid React error\n      // In React StrictMode, render is executed twice and useEffect/useLayoutEffect is executed once\n      // Store deferred parameters in ref so that we can access it in another render\n      thisRef.interactionStateUpdateRequested = params;\n    } else {\n      thisRef.interactionStateUpdateRequested = null;\n      props.onInteractionStateChange?.(params);\n    }\n  };\n\n  // Update Deck's props. If Deck needs redraw, this will trigger a call to `_customRender` in\n  // the next animation frame.\n  // Needs to be called both from initial mount, and when new props are received\n  const deckProps = useMemo(() => {\n    const forwardProps: DeckProps = {\n      ...props,\n      // Override user styling props. We will set the canvas style in render()\n      style: null,\n      width: '100%',\n      height: '100%',\n      parent: containerRef.current,\n      canvas: canvasRef.current,\n      layers: jsxProps.layers,\n      views: jsxProps.views,\n      onViewStateChange: handleViewStateChange,\n      onInteractionStateChange: handleInteractionStateChange\n    };\n\n    // The defaultValue for _customRender is null, which would overwrite the definition\n    // of _customRender. Remove to avoid frequently redeclaring the method here.\n    delete forwardProps._customRender;\n\n    if (thisRef.deck) {\n      thisRef.deck.setProps(forwardProps);\n    }\n\n    return forwardProps;\n  }, [props]);\n\n  useEffect(() => {\n    const DeckClass = props.Deck || Deck;\n\n    thisRef.deck = createDeckInstance(thisRef, DeckClass, {\n      ...deckProps,\n      parent: containerRef.current,\n      canvas: canvasRef.current\n    });\n\n    return () => thisRef.deck?.finalize();\n  }, []);\n\n  useIsomorphicLayoutEffect(() => {\n    // render has just been called. The children are positioned based on the current view state.\n    // Redraw Deck canvas immediately, if necessary, using the current view state, so that it\n    // matches the child components.\n    redrawDeck(thisRef);\n\n    // Execute deferred callbacks\n    const {viewStateUpdateRequested, interactionStateUpdateRequested} = thisRef;\n    if (viewStateUpdateRequested) {\n      handleViewStateChange(viewStateUpdateRequested);\n    }\n    if (interactionStateUpdateRequested) {\n      handleInteractionStateChange(interactionStateUpdateRequested);\n    }\n  });\n\n  useImperativeHandle(ref, () => getRefHandles(thisRef), []);\n\n  const currentViewports =\n    thisRef.deck && thisRef.deck.isInitialized ? thisRef.deck.getViewports() : undefined;\n\n  const {ContextProvider, width, height, id, style} = props;\n\n  const {containerStyle, canvasStyle} = useMemo(\n    () => extractStyles({width, height, style}),\n    [width, height, style]\n  );\n\n  // Props changes may lead to 3 types of updates:\n  // 1. Only the WebGL canvas - updated in Deck's render cycle (next animation frame)\n  // 2. Only the DOM - updated in React's lifecycle (now)\n  // 3. Both the WebGL canvas and the DOM - defer React rerender to next animation frame just\n  //    before Deck redraw to ensure perfect synchronization & avoid excessive redraw\n  //    This is because multiple changes may happen to Deck between two frames e.g. transition\n  if (\n    (!thisRef.viewStateUpdateRequested && thisRef.lastRenderedViewports === currentViewports) || // case 2\n    thisRef.version !== version // case 3 just before deck redraws\n  ) {\n    thisRef.lastRenderedViewports = currentViewports;\n    thisRef.version = version;\n\n    // Render the background elements (typically react-map-gl instances)\n    // using the view descriptors\n    const childrenUnderViews = positionChildrenUnderViews({\n      children: jsxProps.children,\n      deck: thisRef.deck,\n      ContextProvider\n    });\n\n    const canvas = createElement('canvas', {\n      key: 'canvas',\n      id: id || 'deckgl-overlay',\n      ref: canvasRef,\n      style: canvasStyle\n    });\n\n    // Render deck.gl as the last child\n    thisRef.control = createElement(\n      'div',\n      {id: `${id || 'deckgl'}-wrapper`, ref: containerRef, style: containerStyle},\n      [canvas, childrenUnderViews]\n    );\n  }\n\n  inRender = false;\n  return thisRef.control;\n});\n\nDeckGL.defaultProps = Deck.defaultProps;\n\nexport default DeckGL;\n","import * as React from 'react';\nimport {createElement} from 'react';\nimport {View} from '@deck.gl/core';\nimport {inheritsFrom} from './inherits-from';\nimport evaluateChildren, {isComponent} from './evaluate-children';\n\nimport type {Deck, DeckProps, Viewport} from '@deck.gl/core';\nimport type {EventManager} from 'mjolnir.js';\n\nexport type DeckGLContextValue = {\n  viewport: Viewport;\n  container: HTMLElement;\n  eventManager: EventManager;\n  onViewStateChange: DeckProps['onViewStateChange'];\n};\n\n// Iterate over views and reposition children associated with views\n// TODO - Can we supply a similar function for the non-React case?\nexport default function positionChildrenUnderViews({\n  children,\n  deck,\n  ContextProvider\n}: {\n  children: React.ReactNode[];\n  deck?: Deck;\n  ContextProvider?: React.Context<DeckGLContextValue>['Provider'];\n}): React.ReactNode[] {\n  // @ts-expect-error accessing protected property\n  const {viewManager} = deck || {};\n\n  if (!viewManager || !viewManager.views.length) {\n    return [];\n  }\n\n  const views: Record<\n    string,\n    {\n      viewport: Viewport;\n      children: React.ReactNode[];\n    }\n  > = {};\n  const defaultViewId = (viewManager.views[0] as View).id;\n\n  // Sort children by view id\n  for (const child of children) {\n    // Unless child is a View, position / render as part of the default view\n    let viewId = defaultViewId;\n    let viewChildren = child;\n\n    if (isComponent(child) && inheritsFrom(child.type, View)) {\n      viewId = child.props.id || defaultViewId;\n      viewChildren = child.props.children;\n    }\n\n    const viewport = viewManager.getViewport(viewId) as Viewport;\n    const viewState = viewManager.getViewState(viewId);\n\n    // Drop (auto-hide) elements with viewId that are not matched by any current view\n    if (viewport) {\n      viewState.padding = viewport.padding;\n      const {x, y, width, height} = viewport;\n      // Resolve potentially relative dimensions using the deck.gl container size\n      viewChildren = evaluateChildren(viewChildren, {\n        x,\n        y,\n        width,\n        height,\n        viewport,\n        viewState\n      });\n\n      if (!views[viewId]) {\n        views[viewId] = {\n          viewport,\n          children: []\n        };\n      }\n      views[viewId].children.push(viewChildren);\n    }\n  }\n\n  // Render views\n  return Object.keys(views).map(viewId => {\n    const {viewport, children: viewChildren} = views[viewId];\n    const {x, y, width, height} = viewport;\n    const style = {\n      position: 'absolute',\n      left: x,\n      top: y,\n      width,\n      height\n    };\n\n    const key = `view-${viewId}`;\n    // If children is passed as an array, React will throw the \"each element in a list needs\n    // a key\" warning. Sending each child as separate arguments removes this requirement.\n    const viewElement = createElement('div', {key, id: key, style}, ...viewChildren);\n\n    if (ContextProvider) {\n      const contextValue: DeckGLContextValue = {\n        viewport,\n        // @ts-expect-error accessing protected property\n        container: deck.canvas.offsetParent,\n        // @ts-expect-error accessing protected property\n        eventManager: deck.eventManager,\n        onViewStateChange: params => {\n          params.viewId = viewId;\n          // @ts-expect-error accessing protected method\n          deck._onViewStateChange(params);\n        }\n      };\n      return createElement(ContextProvider, {key, value: contextValue}, viewElement);\n    }\n\n    return viewElement;\n  });\n}\n","import type {Modifier} from '@dnd-kit/core';\n\nexport function createSnapModifier(gridSize: number): Modifier {\n  return ({transform}) => ({\n    ...transform,\n    x: Math.ceil(transform.x / gridSize) * gridSize,\n    y: Math.ceil(transform.y / gridSize) * gridSize,\n  });\n}\n","import type {Modifier} from '@dnd-kit/core';\n\nexport const restrictToHorizontalAxis: Modifier = ({transform}) => {\n  return {\n    ...transform,\n    y: 0,\n  };\n};\n","import type {ClientRect} from '@dnd-kit/core';\nimport type {Transform} from '@dnd-kit/utilities';\n\nexport function restrictToBoundingRect(\n  transform: Transform,\n  rect: ClientRect,\n  boundingRect: ClientRect\n): Transform {\n  const value = {\n    ...transform,\n  };\n\n  if (rect.top + transform.y <= boundingRect.top) {\n    value.y = boundingRect.top - rect.top;\n  } else if (\n    rect.bottom + transform.y >=\n    boundingRect.top + boundingRect.height\n  ) {\n    value.y = boundingRect.top + boundingRect.height - rect.bottom;\n  }\n\n  if (rect.left + transform.x <= boundingRect.left) {\n    value.x = boundingRect.left - rect.left;\n  } else if (\n    rect.right + transform.x >=\n    boundingRect.left + boundingRect.width\n  ) {\n    value.x = boundingRect.left + boundingRect.width - rect.right;\n  }\n\n  return value;\n}\n","import type {Modifier} from '@dnd-kit/core';\nimport {restrictToBoundingRect} from './utilities';\n\nexport const restrictToParentElement: Modifier = ({\n  containerNodeRect,\n  draggingNodeRect,\n  transform,\n}) => {\n  if (!draggingNodeRect || !containerNodeRect) {\n    return transform;\n  }\n\n  return restrictToBoundingRect(transform, draggingNodeRect, containerNodeRect);\n};\n","import type {Modifier} from '@dnd-kit/core';\nimport {restrictToBoundingRect} from './utilities';\n\nexport const restrictToFirstScrollableAncestor: Modifier = ({\n  draggingNodeRect,\n  transform,\n  scrollableAncestorRects,\n}) => {\n  const firstScrollableAncestorRect = scrollableAncestorRects[0];\n\n  if (!draggingNodeRect || !firstScrollableAncestorRect) {\n    return transform;\n  }\n\n  return restrictToBoundingRect(\n    transform,\n    draggingNodeRect,\n    firstScrollableAncestorRect\n  );\n};\n","import type {Modifier} from '@dnd-kit/core';\n\nexport const restrictToVerticalAxis: Modifier = ({transform}) => {\n  return {\n    ...transform,\n    x: 0,\n  };\n};\n","import type {Modifier} from '@dnd-kit/core';\n\nimport {restrictToBoundingRect} from './utilities';\n\nexport const restrictToWindowEdges: Modifier = ({\n  transform,\n  draggingNodeRect,\n  windowRect,\n}) => {\n  if (!draggingNodeRect || !windowRect) {\n    return transform;\n  }\n\n  return restrictToBoundingRect(transform, draggingNodeRect, windowRect);\n};\n","import type {Modifier} from '@dnd-kit/core';\nimport {getEventCoordinates} from '@dnd-kit/utilities';\n\nexport const snapCenterToCursor: Modifier = ({\n  activatorEvent,\n  draggingNodeRect,\n  transform,\n}) => {\n  if (draggingNodeRect && activatorEvent) {\n    const activatorCoordinates = getEventCoordinates(activatorEvent);\n\n    if (!activatorCoordinates) {\n      return transform;\n    }\n\n    const offsetX = activatorCoordinates.x - draggingNodeRect.left;\n    const offsetY = activatorCoordinates.y - draggingNodeRect.top;\n\n    return {\n      ...transform,\n      x: transform.x + offsetX - draggingNodeRect.width / 2,\n      y: transform.y + offsetY - draggingNodeRect.height / 2,\n    };\n  }\n\n  return transform;\n};\n","import {PROP_TYPES_SYMBOL} from './constants';\n\nexport function validateProps(props) {\n  const propTypes = props[PROP_TYPES_SYMBOL];\n\n  for (const propName in propTypes) {\n    const propType = propTypes[propName];\n    const {validate} = propType;\n    if (validate && !validate(props[propName], propType)) {\n      throw new Error(`Invalid prop ${propName}: ${props[propName]}`);\n    }\n  }\n}\n\n// Returns an object with \"change flags\", either false or strings indicating reason for change\nexport function diffProps(\n  props,\n  oldProps\n): {\n  dataChanged: string | false | {startRow: number; endRow?: number}[];\n  propsChanged: string | false;\n  updateTriggersChanged: Record<string, true> | false;\n  extensionsChanged: boolean;\n  transitionsChanged: Record<string, true> | false;\n} {\n  // First check if any props have changed (ignore props that will be examined separately)\n  const propsChangedReason = compareProps({\n    newProps: props,\n    oldProps,\n    propTypes: props[PROP_TYPES_SYMBOL],\n    ignoreProps: {data: null, updateTriggers: null, extensions: null, transitions: null}\n  });\n\n  // Now check if any data related props have changed\n  const dataChangedReason = diffDataProps(props, oldProps);\n\n  // Check update triggers to determine if any attributes need regeneration\n  // Note - if data has changed, all attributes will need regeneration, so skip this step\n  let updateTriggersChangedReason: false | string | Record<string, true> = false;\n  if (!dataChangedReason) {\n    updateTriggersChangedReason = diffUpdateTriggers(props, oldProps);\n  }\n\n  return {\n    dataChanged: dataChangedReason,\n    propsChanged: propsChangedReason,\n    updateTriggersChanged: updateTriggersChangedReason,\n    extensionsChanged: diffExtensions(props, oldProps),\n    transitionsChanged: diffTransitions(props, oldProps)\n  };\n}\n\nfunction diffTransitions(props, oldProps): false | Record<string, true> {\n  if (!props.transitions) {\n    return false;\n  }\n  const result: Record<string, true> = {};\n  const propTypes = props[PROP_TYPES_SYMBOL];\n  let changed = false;\n\n  for (const key in props.transitions) {\n    const propType = propTypes[key];\n    const type = propType && propType.type;\n    const isTransitionable = type === 'number' || type === 'color' || type === 'array';\n    if (isTransitionable && comparePropValues(props[key], oldProps[key], propType)) {\n      result[key] = true;\n      changed = true;\n    }\n  }\n  return changed ? result : false;\n}\n\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * @param {Object} opt.oldProps - object with old key/value pairs\n * @param {Object} opt.newProps - object with new key/value pairs\n * @param {Object} opt.ignoreProps={} - object, keys that should not be compared\n * @returns {null|String} - null when values of all keys are strictly equal.\n *   if unequal, returns a string explaining what changed.\n */\n/* eslint-disable max-statements, max-depth, complexity */\n/*\n * Note: for better performance, this function assumes that both oldProps and newProps\n   inherit the same prototype (defaultProps). That is, if neither object contains own\n   property <key>, assume `oldProps.<key>` and `newProps.<key>` are equal.\n */\nexport function compareProps({\n  newProps,\n  oldProps,\n  ignoreProps = {},\n  propTypes = {},\n  triggerName = 'props'\n}): string | false {\n  // shallow equality => deep equality\n  if (oldProps === newProps) {\n    return false;\n  }\n\n  // TODO - do we need these checks? Should never happen...\n  if (typeof newProps !== 'object' || newProps === null) {\n    return `${triggerName} changed shallowly`;\n  }\n\n  if (typeof oldProps !== 'object' || oldProps === null) {\n    return `${triggerName} changed shallowly`;\n  }\n\n  // Compare explicitly defined new props against old/default values\n  for (const key of Object.keys(newProps)) {\n    if (!(key in ignoreProps)) {\n      if (!(key in oldProps)) {\n        return `${triggerName}.${key} added`;\n      }\n      const changed = comparePropValues(newProps[key], oldProps[key], propTypes[key]);\n      if (changed) {\n        return `${triggerName}.${key} ${changed}`;\n      }\n    }\n  }\n\n  // Test if any old props have been dropped\n  for (const key of Object.keys(oldProps)) {\n    if (!(key in ignoreProps)) {\n      if (!(key in newProps)) {\n        return `${triggerName}.${key} dropped`;\n      }\n      if (!Object.hasOwnProperty.call(newProps, key)) {\n        // Compare dropped old prop against default value\n        const changed = comparePropValues(newProps[key], oldProps[key], propTypes[key]);\n        if (changed) {\n          return `${triggerName}.${key} ${changed}`;\n        }\n      }\n    }\n  }\n\n  return false;\n}\n/* eslint-enable max-statements, max-depth, complexity */\n\n// HELPERS\nfunction comparePropValues(newProp, oldProp, propType) {\n  // If prop type has an equal function, invoke it\n  let equal = propType && propType.equal;\n  if (equal && !equal(newProp, oldProp, propType)) {\n    return 'changed deeply';\n  }\n\n  if (!equal) {\n    // If object has an equals function, invoke it\n    equal = newProp && oldProp && newProp.equals;\n    if (equal && !equal.call(newProp, oldProp)) {\n      return 'changed deeply';\n    }\n  }\n\n  if (!equal && oldProp !== newProp) {\n    return 'changed shallowly';\n  }\n\n  return null;\n}\n\n// The comparison of the data prop requires special handling\n// the dataComparator should be used if supplied\nfunction diffDataProps(props, oldProps): string | false | {startRow: number; endRow?: number}[] {\n  if (oldProps === null) {\n    return 'oldProps is null, initial diff';\n  }\n\n  let dataChanged: string | false | {startRow: number; endRow?: number}[] = false;\n  // Support optional app defined comparison of data\n  const {dataComparator, _dataDiff} = props;\n  if (dataComparator) {\n    if (!dataComparator(props.data, oldProps.data)) {\n      dataChanged = 'Data comparator detected a change';\n    }\n    // Otherwise, do a shallow equal on props\n  } else if (props.data !== oldProps.data) {\n    dataChanged = 'A new data container was supplied';\n  }\n  if (dataChanged && _dataDiff) {\n    dataChanged = _dataDiff(props.data, oldProps.data) || dataChanged;\n  }\n\n  return dataChanged;\n}\n\n// Checks if any update triggers have changed\n// also calls callback to invalidate attributes accordingly.\nfunction diffUpdateTriggers(props, oldProps): Record<string, true> | false {\n  if (oldProps === null) {\n    return {all: true};\n  }\n\n  // If the 'all' updateTrigger fires, ignore testing others\n  if ('all' in props.updateTriggers) {\n    const diffReason = diffUpdateTrigger(props, oldProps, 'all');\n    if (diffReason) {\n      return {all: true};\n    }\n  }\n\n  const reason: Record<string, true> = {};\n  let changed = false;\n  // If the 'all' updateTrigger didn't fire, need to check all others\n  for (const triggerName in props.updateTriggers) {\n    if (triggerName !== 'all') {\n      const diffReason = diffUpdateTrigger(props, oldProps, triggerName);\n      if (diffReason) {\n        reason[triggerName] = true;\n        changed = true;\n      }\n    }\n  }\n\n  return changed ? reason : false;\n}\n\n// Returns true if any extensions have changed\nfunction diffExtensions(props, oldProps): boolean {\n  if (oldProps === null) {\n    return true;\n  }\n\n  const oldExtensions = oldProps.extensions;\n  const {extensions} = props;\n\n  if (extensions === oldExtensions) {\n    return false;\n  }\n  if (!oldExtensions || !extensions) {\n    return true;\n  }\n  if (extensions.length !== oldExtensions.length) {\n    return true;\n  }\n  for (let i = 0; i < extensions.length; i++) {\n    if (!extensions[i].equals(oldExtensions[i])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction diffUpdateTrigger(props, oldProps, triggerName) {\n  let newTriggers = props.updateTriggers[triggerName];\n  newTriggers = newTriggers === undefined || newTriggers === null ? {} : newTriggers;\n  let oldTriggers = oldProps.updateTriggers[triggerName];\n  oldTriggers = oldTriggers === undefined || oldTriggers === null ? {} : oldTriggers;\n  const diffReason = compareProps({\n    oldProps: oldTriggers,\n    newProps: newTriggers,\n    triggerName\n  });\n  return diffReason;\n}\n","import View, {CommonViewState} from './view';\nimport WebMercatorViewport from '../viewports/web-mercator-viewport';\nimport MapController from '../controllers/map-controller';\n\nimport type {NumericArray} from '../types/types';\n\nexport type MapViewState = {\n  /** Longitude of the map center */\n  longitude: number;\n  /** Latitude of the map center */\n  latitude: number;\n  /** Zoom level */\n  zoom: number;\n  /** Pitch (tilt) of the map, in degrees. `0` looks top down */\n  pitch?: number;\n  /** Bearing (rotation) of the map, in degrees. `0` is north up */\n  bearing?: number;\n  /** Min zoom, default `0` */\n  minZoom?: number;\n  /** Max zoom, default `20` */\n  maxZoom?: number;\n  /** Min pitch, default `0` */\n  minPitch?: number;\n  /** Max pitch, default `60` */\n  maxPitch?: number;\n  /** Viewport center offsets from lng, lat in meters */\n  position?: number[];\n} & CommonViewState;\n\ntype MapViewProps = {\n  /** Whether to render multiple copies of the map at low zoom levels. Default `false`. */\n  repeat?: boolean;\n  /** Scaler for the near plane, 1 unit equals to the height of the viewport. Default to `0.1`. Overwrites the `near` parameter. */\n  nearZMultiplier?: number;\n  /** Scaler for the far plane, 1 unit equals to the distance from the camera to the top edge of the screen. Default to `1.01`. Overwrites the `far` parameter. */\n  farZMultiplier?: number;\n  /** Custom projection matrix */\n  projectionMatrix?: NumericArray;\n  /** Field of view covered by the camera, in the perspective case. In degrees. If not supplied, will be calculated from `altitude`. */\n  fovy?: number;\n  /** Distance of the camera relative to viewport height. Default `1.5`. */\n  altitude?: number;\n  /** Whether to create an orthographic or perspective projection matrix. Default is `false` (perspective projection). */\n  orthographic?: boolean;\n};\n\nexport default class MapView extends View<MapViewState, MapViewProps> {\n  static displayName = 'MapView';\n\n  get ViewportType() {\n    return WebMercatorViewport;\n  }\n\n  get ControllerType() {\n    return MapController;\n  }\n}\n","import {log, BinaryAttribute} from '@deck.gl/core';\nimport {Geometry, uid} from '@luma.gl/core';\nimport {modifyPolygonWindingDirection, WINDING} from '@math.gl/polygon';\n\ntype ColumnGeometryProps = {\n  id?: string;\n  radius: number;\n  height?: number;\n  nradial?: number;\n  vertices?: number[];\n};\n\nexport default class ColumnGeometry extends Geometry {\n  constructor(props: ColumnGeometryProps) {\n    const {id = uid('column-geometry')} = props;\n    const {indices, attributes} = tesselateColumn(props);\n    super({\n      ...props,\n      id,\n      indices,\n      attributes\n    });\n  }\n}\n\n/* eslint-disable max-statements, complexity */\nfunction tesselateColumn(props: ColumnGeometryProps): {\n  indices: Uint16Array;\n  attributes: Record<string, BinaryAttribute>;\n} {\n  const {radius, height = 1, nradial = 10} = props;\n  let {vertices} = props;\n\n  if (vertices) {\n    log.assert(vertices.length >= nradial); // `vertices` must contain at least `diskResolution` points\n    vertices = vertices.flatMap(v => [v[0], v[1]]);\n    modifyPolygonWindingDirection(vertices, WINDING.COUNTER_CLOCKWISE);\n  }\n\n  const isExtruded = height > 0;\n  const vertsAroundEdge = nradial + 1; // loop\n  const numVertices = isExtruded\n    ? vertsAroundEdge * 3 + 1 // top, side top edge, side bottom edge, one additional degenerage vertex\n    : nradial; // top\n\n  const stepAngle = (Math.PI * 2) / nradial;\n\n  // Used for wireframe\n  const indices = new Uint16Array(isExtruded ? nradial * 3 * 2 : 0); // top loop, side vertical, bottom loop\n\n  const positions = new Float32Array(numVertices * 3);\n  const normals = new Float32Array(numVertices * 3);\n\n  let i = 0;\n\n  // side tesselation: 0, 1, 2, 3, 4, 5, ...\n  //\n  // 0 - 2 - 4  ... top\n  // | / | / |\n  // 1 - 3 - 5  ... bottom\n  //\n  if (isExtruded) {\n    for (let j = 0; j < vertsAroundEdge; j++) {\n      const a = j * stepAngle;\n      const vertexIndex = j % nradial;\n      const sin = Math.sin(a);\n      const cos = Math.cos(a);\n\n      for (let k = 0; k < 2; k++) {\n        positions[i + 0] = vertices ? vertices[vertexIndex * 2] : cos * radius;\n        positions[i + 1] = vertices ? vertices[vertexIndex * 2 + 1] : sin * radius;\n        positions[i + 2] = (1 / 2 - k) * height;\n\n        normals[i + 0] = vertices ? vertices[vertexIndex * 2] : cos;\n        normals[i + 1] = vertices ? vertices[vertexIndex * 2 + 1] : sin;\n\n        i += 3;\n      }\n    }\n\n    // duplicate the last vertex to create proper degenerate triangle.\n    positions[i + 0] = positions[i - 3];\n    positions[i + 1] = positions[i - 2];\n    positions[i + 2] = positions[i - 1];\n    i += 3;\n  }\n\n  // The column geometry is rendered as a triangle strip, so\n  // in order to render sides and top in one go we need to use degenerate triangles.\n  // Duplicate last vertex of side trinagles and first vertex of the top cap to preserve winding order.\n\n  // top tesselation: 0, -1, 1, -2, 2, -3, 3, ...\n  //\n  //    0 -- 1\n  //   /      \\\n  // -1        2\n  //  |        |\n  // -2        3\n  //   \\      /\n  //   -3 -- 4\n  //\n  for (let j = isExtruded ? 0 : 1; j < vertsAroundEdge; j++) {\n    const v = Math.floor(j / 2) * Math.sign(0.5 - (j % 2));\n    const a = v * stepAngle;\n    const vertexIndex = (v + nradial) % nradial;\n    const sin = Math.sin(a);\n    const cos = Math.cos(a);\n\n    positions[i + 0] = vertices ? vertices[vertexIndex * 2] : cos * radius;\n    positions[i + 1] = vertices ? vertices[vertexIndex * 2 + 1] : sin * radius;\n    positions[i + 2] = height / 2;\n\n    normals[i + 2] = 1;\n\n    i += 3;\n  }\n\n  if (isExtruded) {\n    let index = 0;\n    for (let j = 0; j < nradial; j++) {\n      // top loop\n      indices[index++] = j * 2 + 0;\n      indices[index++] = j * 2 + 2;\n      // side vertical\n      indices[index++] = j * 2 + 0;\n      indices[index++] = j * 2 + 1;\n      // bottom loop\n      indices[index++] = j * 2 + 1;\n      indices[index++] = j * 2 + 3;\n    }\n  }\n\n  return {\n    indices,\n    attributes: {\n      POSITION: {size: 3, value: positions},\n      NORMAL: {size: 3, value: normals}\n    }\n  };\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {\n  Layer,\n  project32,\n  gouraudLighting,\n  phongLighting,\n  picking,\n  UNIT,\n  LayerProps,\n  LayerDataSource,\n  UpdateParameters,\n  Unit,\n  AccessorFunction,\n  Position,\n  Accessor,\n  Color,\n  Material,\n  DefaultProps\n} from '@deck.gl/core';\nimport GL from '@luma.gl/constants';\nimport {Model, isWebGL2, hasFeature, FEATURES} from '@luma.gl/core';\nimport ColumnGeometry from './column-geometry';\n\nimport vs from './column-layer-vertex.glsl';\nimport fs from './column-layer-fragment.glsl';\n\nconst DEFAULT_COLOR: [number, number, number, number] = [0, 0, 0, 255];\n\nconst defaultProps: DefaultProps<ColumnLayerProps> = {\n  diskResolution: {type: 'number', min: 4, value: 20},\n  vertices: null,\n  radius: {type: 'number', min: 0, value: 1000},\n  angle: {type: 'number', value: 0},\n  offset: {type: 'array', value: [0, 0]},\n  coverage: {type: 'number', min: 0, max: 1, value: 1},\n  elevationScale: {type: 'number', min: 0, value: 1},\n  radiusUnits: 'meters',\n  lineWidthUnits: 'meters',\n  lineWidthScale: 1,\n  lineWidthMinPixels: 0,\n  lineWidthMaxPixels: Number.MAX_SAFE_INTEGER,\n\n  extruded: true,\n  wireframe: false,\n  filled: true,\n  stroked: false,\n\n  getPosition: {type: 'accessor', value: x => x.position},\n  getFillColor: {type: 'accessor', value: DEFAULT_COLOR},\n  getLineColor: {type: 'accessor', value: DEFAULT_COLOR},\n  getLineWidth: {type: 'accessor', value: 1},\n  getElevation: {type: 'accessor', value: 1000},\n  material: true,\n  getColor: {deprecatedFor: ['getFillColor', 'getLineColor']}\n};\n\n/** All properties supported by ColumnLayer. */\nexport type ColumnLayerProps<DataT = any> = _ColumnLayerProps<DataT> & LayerProps;\n\n/** Properties added by ColumnLayer. */\ntype _ColumnLayerProps<DataT> = {\n  data: LayerDataSource<DataT>;\n  /**\n   * The number of sides to render the disk as.\n   * @default 20\n   */\n  diskResolution?: number;\n\n  /**\n   * isk size in units specified by `radiusUnits`.\n   * @default 1000\n   */\n  radius?: number;\n\n  /**\n   * Disk rotation, counter-clockwise in degrees.\n   * @default 0\n   */\n  angle?: number;\n\n  /**\n   * Replace the default geometry (regular polygon that fits inside the unit circle) with a custom one.\n   * @default null\n   */\n  vertices: Position[] | null;\n\n  /**\n   * Disk offset from the position, relative to the radius.\n   * @default [0,0]\n   */\n  offset?: [number, number];\n\n  /**\n   * Radius multiplier, between 0 - 1\n   * @default 1\n   */\n  coverage?: number;\n\n  /**\n   * Column elevation multiplier.\n   * @default 1\n   */\n  elevationScale?: number;\n\n  /**\n   * Whether to draw a filled column (solid fill).\n   * @default true\n   */\n  filled?: boolean;\n\n  /**\n   * Whether to draw an outline around the disks.\n   * @default false\n   */\n  stroked?: boolean;\n\n  /**\n   * Whether to extrude the columns. If set to `false`, all columns will be rendered as flat polygons.\n   * @default true\n   */\n  extruded?: boolean;\n\n  /**\n   * Whether to generate a line wireframe of the column.\n   * @default false\n   */\n  wireframe?: boolean;\n\n  /**\n   * If `true`, the vertical surfaces of the columns use [flat shading](https://en.wikipedia.org/wiki/Shading#Flat_vs._smooth_shading).\n   * @default false\n   */\n  flatShading?: boolean;\n\n  /**\n   * The units of the radius.\n   * @default 'meters'\n   */\n  radiusUnits?: Unit;\n\n  /**\n   * The units of the line width.\n   * @default 'meters'\n   */\n  lineWidthUnits?: Unit;\n\n  /**\n   * The line width multiplier that multiplied to all outlines.\n   * @default 1\n   */\n  lineWidthScale?: number;\n\n  /**\n   * The minimum outline width in pixels.\n   * @default 0\n   */\n  lineWidthMinPixels?: number;\n\n  /**\n   * The maximum outline width in pixels.\n   * @default Number.MAX_SAFE_INTEGER\n   */\n  lineWidthMaxPixels?: number;\n\n  /**\n   * Material settings for lighting effect. Applies if `extruded: true`.\n   *\n   * @default true\n   * @see https://deck.gl/docs/developer-guide/using-lighting\n   */\n  material?: Material;\n\n  /**\n   * Method called to retrieve the position of each column.\n   * @default object => object.position\n   */\n  getPosition?: AccessorFunction<DataT, Position>;\n\n  /**\n   * @deprecated Use getFilledColor and getLineColor instead\n   */\n  getColor?: Accessor<DataT, Color>;\n\n  /**\n   * Fill collor value or accessor.\n   * @default [0, 0, 0, 255]\n   */\n  getFillColor?: Accessor<DataT, Color>;\n\n  /**\n   * Line color value or accessor.\n   *\n   * @default [0, 0, 0, 255]\n   */\n  getLineColor?: Accessor<DataT, Color>;\n\n  /**\n   * The elevation of each cell in meters.\n   * @default 1000\n   */\n  getElevation?: Accessor<DataT, number>;\n\n  /**\n   * The width of the outline of the column, in units specified by `lineWidthUnits`.\n   *\n   * @default 1\n   */\n  getLineWidth?: Accessor<DataT, number>;\n};\n\n/** Render extruded cylinders (tessellated regular polygons) at given coordinates. */\nexport default class ColumnLayer<DataT = any, ExtraPropsT extends {} = {}> extends Layer<\n  ExtraPropsT & Required<_ColumnLayerProps<DataT>>\n> {\n  static layerName = 'ColumnLayer';\n  static defaultProps = defaultProps;\n\n  getShaders() {\n    const {gl} = this.context;\n    const transpileToGLSL100 = !isWebGL2(gl);\n    const defines: Record<string, any> = {};\n\n    const useDerivatives = this.props.flatShading && hasFeature(gl, FEATURES.GLSL_DERIVATIVES);\n    if (useDerivatives) {\n      defines.FLAT_SHADING = 1;\n    }\n    return super.getShaders({\n      vs,\n      fs,\n      defines,\n      transpileToGLSL100,\n      modules: [project32, useDerivatives ? phongLighting : gouraudLighting, picking]\n    });\n  }\n\n  /**\n   * DeckGL calls initializeState when GL context is available\n   * Essentially a deferred constructor\n   */\n  initializeState() {\n    const attributeManager = this.getAttributeManager()!;\n    /* eslint-disable max-len */\n    attributeManager.addInstanced({\n      instancePositions: {\n        size: 3,\n        type: GL.DOUBLE,\n        fp64: this.use64bitPositions(),\n        transition: true,\n        accessor: 'getPosition'\n      },\n      instanceElevations: {\n        size: 1,\n        transition: true,\n        accessor: 'getElevation'\n      },\n      instanceFillColors: {\n        size: this.props.colorFormat.length,\n        type: GL.UNSIGNED_BYTE,\n        normalized: true,\n        transition: true,\n        accessor: 'getFillColor',\n        defaultValue: DEFAULT_COLOR\n      },\n      instanceLineColors: {\n        size: this.props.colorFormat.length,\n        type: GL.UNSIGNED_BYTE,\n        normalized: true,\n        transition: true,\n        accessor: 'getLineColor',\n        defaultValue: DEFAULT_COLOR\n      },\n      instanceStrokeWidths: {\n        size: 1,\n        accessor: 'getLineWidth',\n        transition: true\n      }\n    });\n    /* eslint-enable max-len */\n  }\n\n  updateState(params: UpdateParameters<this>): void {\n    super.updateState(params);\n\n    const {props, oldProps, changeFlags} = params;\n    const regenerateModels =\n      changeFlags.extensionsChanged || props.flatShading !== oldProps.flatShading;\n\n    if (regenerateModels) {\n      const {gl} = this.context;\n      this.state.model?.delete();\n      this.state.model = this._getModel(gl);\n      this.getAttributeManager()!.invalidateAll();\n    }\n\n    if (\n      regenerateModels ||\n      props.diskResolution !== oldProps.diskResolution ||\n      props.vertices !== oldProps.vertices ||\n      (props.extruded || props.stroked) !== (oldProps.extruded || oldProps.stroked)\n    ) {\n      this._updateGeometry(props);\n    }\n  }\n\n  getGeometry(diskResolution: number, vertices: number[] | undefined, hasThinkness: boolean) {\n    const geometry = new ColumnGeometry({\n      radius: 1,\n      height: hasThinkness ? 2 : 0,\n      vertices,\n      nradial: diskResolution\n    });\n\n    let meanVertexDistance = 0;\n    if (vertices) {\n      for (let i = 0; i < diskResolution; i++) {\n        const p = vertices[i];\n        const d = Math.sqrt(p[0] * p[0] + p[1] * p[1]);\n        meanVertexDistance += d / diskResolution;\n      }\n    } else {\n      meanVertexDistance = 1;\n    }\n    this.setState({\n      edgeDistance: Math.cos(Math.PI / diskResolution) * meanVertexDistance\n    });\n\n    return geometry;\n  }\n\n  protected _getModel(gl: WebGLRenderingContext): Model {\n    return new Model(gl, {\n      ...this.getShaders(),\n      id: this.props.id,\n      isInstanced: true\n    });\n  }\n\n  protected _updateGeometry({diskResolution, vertices, extruded, stroked}) {\n    const geometry: any = this.getGeometry(diskResolution, vertices, extruded || stroked);\n\n    this.setState({\n      fillVertexCount: geometry.attributes.POSITION.value.length / 3,\n      wireframeVertexCount: geometry.indices.value.length\n    });\n\n    this.state.model.setProps({geometry});\n  }\n\n  draw({uniforms}) {\n    const {\n      lineWidthUnits,\n      lineWidthScale,\n      lineWidthMinPixels,\n      lineWidthMaxPixels,\n      radiusUnits,\n      elevationScale,\n      extruded,\n      filled,\n      stroked,\n      wireframe,\n      offset,\n      coverage,\n      radius,\n      angle\n    } = this.props;\n    const {model, fillVertexCount, wireframeVertexCount, edgeDistance} = this.state;\n\n    model.setUniforms(uniforms).setUniforms({\n      radius,\n      angle: (angle / 180) * Math.PI,\n      offset,\n      extruded,\n      stroked,\n      coverage,\n      elevationScale,\n      edgeDistance,\n      radiusUnits: UNIT[radiusUnits],\n      widthUnits: UNIT[lineWidthUnits],\n      widthScale: lineWidthScale,\n      widthMinPixels: lineWidthMinPixels,\n      widthMaxPixels: lineWidthMaxPixels\n    });\n\n    // When drawing 3d: draw wireframe first so it doesn't get occluded by depth test\n    if (extruded && wireframe) {\n      model.setProps({isIndexed: true});\n      model\n        .setVertexCount(wireframeVertexCount)\n        .setDrawMode(GL.LINES)\n        .setUniforms({isStroke: true})\n        .draw();\n    }\n    if (filled) {\n      model.setProps({isIndexed: false});\n      model\n        .setVertexCount(fillVertexCount)\n        .setDrawMode(GL.TRIANGLE_STRIP)\n        .setUniforms({isStroke: false})\n        .draw();\n    }\n    // When drawing 2d: draw fill before stroke so that the outline is always on top\n    if (!extruded && stroked) {\n      model.setProps({isIndexed: false});\n      // The width of the stroke is achieved by flattening the side of the cylinder.\n      // Skip the last 1/3 of the vertices which is the top.\n      model\n        .setVertexCount((fillVertexCount * 2) / 3)\n        .setDrawMode(GL.TRIANGLE_STRIP)\n        .setUniforms({isStroke: true})\n        .draw();\n    }\n  }\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nexport default `#version 300 es\n\n#define SHADER_NAME column-layer-vertex-shader\n\nin vec3 positions;\nin vec3 normals;\n\nin vec3 instancePositions;\nin float instanceElevations;\nin vec3 instancePositions64Low;\nin vec4 instanceFillColors;\nin vec4 instanceLineColors;\nin float instanceStrokeWidths;\n\nin vec3 instancePickingColors;\n\n// Custom uniforms\nuniform float opacity;\nuniform float radius;\nuniform float angle;\nuniform vec2 offset;\nuniform bool extruded;\nuniform bool stroked;\nuniform bool isStroke;\nuniform float coverage;\nuniform float elevationScale;\nuniform float edgeDistance;\nuniform float widthScale;\nuniform float widthMinPixels;\nuniform float widthMaxPixels;\nuniform int radiusUnits;\nuniform int widthUnits;\n\n// Result\nout vec4 vColor;\n#ifdef FLAT_SHADING\nout vec4 position_commonspace;\n#endif\n\nvoid main(void) {\n  geometry.worldPosition = instancePositions;\n\n  vec4 color = isStroke ? instanceLineColors : instanceFillColors;\n  // rotate primitive position and normal\n  mat2 rotationMatrix = mat2(cos(angle), sin(angle), -sin(angle), cos(angle));\n\n  // calculate elevation, if 3d not enabled set to 0\n  // cylindar gemoetry height are between -1.0 to 1.0, transform it to between 0, 1\n  float elevation = 0.0;\n  // calculate stroke offset\n  float strokeOffsetRatio = 1.0;\n\n  if (extruded) {\n    elevation = instanceElevations * (positions.z + 1.0) / 2.0 * elevationScale;\n  } else if (stroked) {\n    float widthPixels = clamp(\n      project_size_to_pixel(instanceStrokeWidths * widthScale, widthUnits),\n      widthMinPixels, widthMaxPixels) / 2.0;\n    float halfOffset = project_pixel_size(widthPixels) / project_size(edgeDistance * coverage * radius);\n    if (isStroke) {\n      strokeOffsetRatio -= sign(positions.z) * halfOffset;\n    } else {\n      strokeOffsetRatio -= halfOffset;\n    }\n  }\n\n  // if alpha == 0.0 or z < 0.0, do not render element\n  float shouldRender = float(color.a > 0.0 && instanceElevations >= 0.0);\n  float dotRadius = radius * coverage * shouldRender;\n\n  geometry.pickingColor = instancePickingColors;\n\n  // project center of column\n  vec3 centroidPosition = vec3(instancePositions.xy, instancePositions.z + elevation);\n  vec3 centroidPosition64Low = instancePositions64Low;\n  vec2 offset = (rotationMatrix * positions.xy * strokeOffsetRatio + offset) * dotRadius;\n  if (radiusUnits == UNIT_METERS) {\n    offset = project_size(offset);\n  }\n  vec3 pos = vec3(offset, 0.);\n  DECKGL_FILTER_SIZE(pos, geometry);\n\n  gl_Position = project_position_to_clipspace(centroidPosition, centroidPosition64Low, pos, geometry.position);\n  geometry.normal = project_normal(vec3(rotationMatrix * normals.xy, normals.z));\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n\n  // Light calculations\n  if (extruded && !isStroke) {\n#ifdef FLAT_SHADING\n    position_commonspace = geometry.position;\n    vColor = vec4(color.rgb, color.a * opacity);\n#else\n    vec3 lightColor = lighting_getLightColor(color.rgb, project_uCameraPosition, geometry.position.xyz, geometry.normal);\n    vColor = vec4(lightColor, color.a * opacity);\n#endif\n  } else {\n    vColor = vec4(color.rgb, color.a * opacity);\n  }\n  DECKGL_FILTER_COLOR(vColor, geometry);\n}\n`;\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nexport default `#version 300 es\n#define SHADER_NAME column-layer-fragment-shader\n\nprecision highp float;\n\nuniform vec3 project_uCameraPosition;\nuniform bool extruded;\nuniform bool isStroke;\n\nout vec4 fragColor;\n\nin vec4 vColor;\n#ifdef FLAT_SHADING\nin vec4 position_commonspace;\n#endif\n\nvoid main(void) {\n  fragColor = vColor;\n#ifdef FLAT_SHADING\n  if (extruded && !isStroke && !picking_uActive) {\n    vec3 normal = normalize(cross(dFdx(position_commonspace.xyz), dFdy(position_commonspace.xyz)));\n    fragColor.rgb = lighting_getLightColor(vColor.rgb, project_uCameraPosition, position_commonspace.xyz, normal);\n  }\n#endif\n  DECKGL_FILTER_COLOR(fragColor, geometry);\n}\n`;\n","import {default as LayersPass} from './layers-pass';\nimport {\n  Framebuffer,\n  Texture2D,\n  Renderbuffer,\n  withParameters,\n  cssToDeviceRatio\n} from '@luma.gl/core';\n\nexport default class ShadowPass extends LayersPass {\n  shadowMap: Texture2D;\n  depthBuffer: Renderbuffer;\n  fbo: Framebuffer;\n\n  constructor(\n    gl: WebGLRenderingContext,\n    props?: {\n      id;\n    }\n  ) {\n    super(gl, props);\n\n    // The shadowMap texture\n    this.shadowMap = new Texture2D(gl, {\n      width: 1,\n      height: 1,\n      parameters: {\n        [gl.TEXTURE_MIN_FILTER]: gl.LINEAR,\n        [gl.TEXTURE_MAG_FILTER]: gl.LINEAR,\n        [gl.TEXTURE_WRAP_S]: gl.CLAMP_TO_EDGE,\n        [gl.TEXTURE_WRAP_T]: gl.CLAMP_TO_EDGE\n      }\n    });\n\n    this.depthBuffer = new Renderbuffer(gl, {\n      format: gl.DEPTH_COMPONENT16,\n      width: 1,\n      height: 1\n    });\n\n    this.fbo = new Framebuffer(gl, {\n      id: 'shadowmap',\n      width: 1,\n      height: 1,\n      attachments: {\n        [gl.COLOR_ATTACHMENT0]: this.shadowMap,\n        // Depth attachment has to be specified for depth test to work\n        [gl.DEPTH_ATTACHMENT]: this.depthBuffer\n      }\n    });\n  }\n\n  render(params) {\n    const target = this.fbo;\n\n    withParameters(\n      this.gl,\n      {\n        depthRange: [0, 1],\n        depthTest: true,\n        blend: false,\n        clearColor: [1, 1, 1, 1]\n      },\n      () => {\n        const viewport = params.viewports[0];\n        const pixelRatio = cssToDeviceRatio(this.gl);\n        const width = viewport.width * pixelRatio;\n        const height = viewport.height * pixelRatio;\n        if (width !== target.width || height !== target.height) {\n          target.resize({width, height});\n        }\n\n        super.render({...params, target, pass: 'shadow'});\n      }\n    );\n  }\n\n  shouldDrawLayer(layer) {\n    return layer.props.shadowEnabled !== false;\n  }\n\n  getModuleParameters() {\n    return {\n      drawToShadowMap: true\n    };\n  }\n\n  delete() {\n    if (this.fbo) {\n      this.fbo.delete();\n      this.fbo = null;\n    }\n\n    if (this.shadowMap) {\n      this.shadowMap.delete();\n      this.shadowMap = null;\n    }\n\n    if (this.depthBuffer) {\n      this.depthBuffer.delete();\n      this.depthBuffer = null;\n    }\n  }\n}\n","import {Texture2D, ProgramManager} from '@luma.gl/core';\nimport {AmbientLight} from './ambient-light';\nimport {DirectionalLight} from './directional-light';\nimport {PointLight} from './point-light';\nimport {Matrix4, Vector3} from '@math.gl/core';\nimport ShadowPass from '../../passes/shadow-pass';\nimport shadow from '../../shaderlib/shadow/shadow';\n\nimport type Layer from '../../lib/layer';\nimport type {Effect, PreRenderOptions} from '../../lib/effect';\n\nconst DEFAULT_AMBIENT_LIGHT_PROPS = {color: [255, 255, 255], intensity: 1.0};\nconst DEFAULT_DIRECTIONAL_LIGHT_PROPS = [\n  {\n    color: [255, 255, 255],\n    intensity: 1.0,\n    direction: [-1, 3, -1]\n  },\n  {\n    color: [255, 255, 255],\n    intensity: 0.9,\n    direction: [1, -8, -2.5]\n  }\n];\nconst DEFAULT_SHADOW_COLOR = [0, 0, 0, 200 / 255];\n\ntype LightingEffectProps = Record<string, PointLight | DirectionalLight | AmbientLight>;\n\n// Class to manage ambient, point and directional light sources in deck\nexport default class LightingEffect implements Effect {\n  id = 'lighting-effect';\n  props!: LightingEffectProps;\n  shadowColor: number[] = DEFAULT_SHADOW_COLOR;\n\n  private shadow!: boolean;\n  private ambientLight!: AmbientLight | null;\n  private directionalLights!: DirectionalLight[];\n  private pointLights!: PointLight[];\n  private shadowPasses: ShadowPass[] = [];\n  private shadowMaps: Texture2D[] = [];\n  private dummyShadowMap: Texture2D | null = null;\n  private programManager?: ProgramManager;\n  private shadowMatrices?: Matrix4[];\n\n  constructor(props: LightingEffectProps = {}) {\n    this.setProps(props);\n  }\n\n  setProps(props: LightingEffectProps) {\n    this.ambientLight = null;\n    this.directionalLights = [];\n    this.pointLights = [];\n\n    for (const key in props) {\n      const lightSource = props[key];\n\n      switch (lightSource.type) {\n        case 'ambient':\n          this.ambientLight = lightSource;\n          break;\n\n        case 'directional':\n          this.directionalLights.push(lightSource as DirectionalLight);\n          break;\n\n        case 'point':\n          this.pointLights.push(lightSource as PointLight);\n          break;\n        default:\n      }\n    }\n    this._applyDefaultLights();\n\n    this.shadow = this.directionalLights.some(light => light.shadow);\n    this.props = props;\n  }\n\n  preRender(\n    gl: WebGLRenderingContext,\n    {layers, layerFilter, viewports, onViewportActive, views}: PreRenderOptions\n  ) {\n    if (!this.shadow) return;\n\n    // create light matrix every frame to make sure always updated from light source\n    this.shadowMatrices = this._calculateMatrices();\n\n    if (this.shadowPasses.length === 0) {\n      this._createShadowPasses(gl);\n    }\n    if (!this.programManager) {\n      // TODO - support multiple contexts\n      this.programManager = ProgramManager.getDefaultProgramManager(gl);\n      if (shadow) {\n        this.programManager.addDefaultModule(shadow);\n      }\n    }\n\n    if (!this.dummyShadowMap) {\n      this.dummyShadowMap = new Texture2D(gl, {\n        width: 1,\n        height: 1\n      });\n    }\n\n    for (let i = 0; i < this.shadowPasses.length; i++) {\n      const shadowPass = this.shadowPasses[i];\n      shadowPass.render({\n        layers,\n        layerFilter,\n        viewports,\n        onViewportActive,\n        views,\n        moduleParameters: {\n          shadowLightId: i,\n          dummyShadowMap: this.dummyShadowMap,\n          shadowMatrices: this.shadowMatrices\n        }\n      });\n    }\n  }\n\n  getModuleParameters(layer: Layer) {\n    const parameters: {\n      lightSources?: {\n        ambientLight: AmbientLight | null;\n        directionalLights: DirectionalLight[];\n        pointLights: PointLight[];\n      };\n      shadowMaps?: Texture2D[];\n      dummyShadowMap?: Texture2D;\n      shadowColor?: number[];\n      shadowMatrices?: Matrix4[];\n    } = this.shadow\n      ? {\n          shadowMaps: this.shadowMaps,\n          dummyShadowMap: this.dummyShadowMap,\n          shadowColor: this.shadowColor,\n          shadowMatrices: this.shadowMatrices\n        }\n      : {};\n\n    // when not rendering to screen, turn off lighting by adding empty light source object\n    // lights shader module relies on the `lightSources` to turn on/off lighting\n    parameters.lightSources = {\n      ambientLight: this.ambientLight,\n      directionalLights: this.directionalLights.map(directionalLight =>\n        directionalLight.getProjectedLight({layer})\n      ),\n      pointLights: this.pointLights.map(pointLight => pointLight.getProjectedLight({layer}))\n    };\n\n    return parameters;\n  }\n\n  cleanup(): void {\n    for (const shadowPass of this.shadowPasses) {\n      shadowPass.delete();\n    }\n    this.shadowPasses.length = 0;\n    this.shadowMaps.length = 0;\n\n    if (this.dummyShadowMap) {\n      this.dummyShadowMap.delete();\n      this.dummyShadowMap = null;\n    }\n\n    if (this.shadow && this.programManager) {\n      this.programManager.removeDefaultModule(shadow);\n      this.programManager = null;\n    }\n  }\n\n  private _calculateMatrices(): Matrix4[] {\n    const lightMatrices: Matrix4[] = [];\n    for (const light of this.directionalLights) {\n      const viewMatrix = new Matrix4().lookAt({\n        eye: new Vector3(light.direction).negate()\n      });\n\n      lightMatrices.push(viewMatrix);\n    }\n    return lightMatrices;\n  }\n\n  private _createShadowPasses(gl: WebGLRenderingContext): void {\n    for (let i = 0; i < this.directionalLights.length; i++) {\n      const shadowPass = new ShadowPass(gl);\n      this.shadowPasses[i] = shadowPass;\n      this.shadowMaps[i] = shadowPass.shadowMap;\n    }\n  }\n\n  private _applyDefaultLights(): void {\n    const {ambientLight, pointLights, directionalLights} = this;\n    if (!ambientLight && pointLights.length === 0 && directionalLights.length === 0) {\n      this.ambientLight = new AmbientLight(DEFAULT_AMBIENT_LIGHT_PROPS);\n      this.directionalLights.push(\n        new DirectionalLight(DEFAULT_DIRECTIONAL_LIGHT_PROPS[0]),\n        new DirectionalLight(DEFAULT_DIRECTIONAL_LIGHT_PROPS[1])\n      );\n    }\n  }\n}\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","export default function assert(condition: unknown, message?: string): void {\n  if (!condition) {\n    throw new Error(`math.gl assertion ${message}`);\n  }\n}\n","/**\n * Projection utils\n * TODO: move to Viewport class?\n */\nimport {COORDINATE_SYSTEM} from '../../lib/constants';\nimport {getOffsetOrigin} from './viewport-uniforms';\nimport WebMercatorViewport from '../../viewports/web-mercator-viewport';\n\nimport * as vec4 from 'gl-matrix/vec4';\nimport * as vec3 from 'gl-matrix/vec3';\nimport {addMetersToLngLat} from '@math.gl/web-mercator';\n\nimport type {CoordinateSystem} from '../../lib/constants';\nimport type Viewport from '../../viewports/viewport';\nimport type {NumericArray} from '../../types/types';\n\nconst DEFAULT_COORDINATE_ORIGIN = [0, 0, 0];\n\n// In project.glsl, offset modes calculate z differently from LNG_LAT mode.\n// offset modes apply the y adjustment (unitsPerMeter2) when projecting z\n// LNG_LAT mode only use the linear scale.\nfunction lngLatZToWorldPosition(\n  lngLatZ: [number, number, number],\n  viewport: Viewport,\n  offsetMode: boolean = false\n): [number, number, number] {\n  const p = viewport.projectPosition(lngLatZ);\n\n  // TODO - avoid using instanceof\n  if (offsetMode && viewport instanceof WebMercatorViewport) {\n    const [longitude, latitude, z = 0] = lngLatZ;\n    const distanceScales = viewport.getDistanceScales([longitude, latitude]);\n    p[2] = z * distanceScales.unitsPerMeter[2];\n  }\n  return p;\n}\n\nfunction normalizeParameters(opts: {\n  viewport: Viewport;\n  coordinateSystem: CoordinateSystem;\n  coordinateOrigin: [number, number, number];\n  modelMatrix?: NumericArray | null;\n  fromCoordinateSystem?: CoordinateSystem;\n  fromCoordinateOrigin?: [number, number, number];\n}): {\n  viewport: Viewport;\n  coordinateSystem: CoordinateSystem;\n  coordinateOrigin: [number, number, number];\n  modelMatrix?: NumericArray | null;\n  fromCoordinateSystem: CoordinateSystem;\n  fromCoordinateOrigin: [number, number, number];\n} {\n  const {viewport, modelMatrix, coordinateOrigin} = opts;\n  let {coordinateSystem, fromCoordinateSystem, fromCoordinateOrigin} = opts;\n\n  if (coordinateSystem === COORDINATE_SYSTEM.DEFAULT) {\n    coordinateSystem = viewport.isGeospatial\n      ? COORDINATE_SYSTEM.LNGLAT\n      : COORDINATE_SYSTEM.CARTESIAN;\n  }\n\n  if (fromCoordinateSystem === undefined) {\n    fromCoordinateSystem = coordinateSystem;\n  }\n  if (fromCoordinateOrigin === undefined) {\n    fromCoordinateOrigin = coordinateOrigin;\n  }\n\n  return {\n    viewport,\n    coordinateSystem,\n    coordinateOrigin,\n    modelMatrix,\n    fromCoordinateSystem,\n    fromCoordinateOrigin\n  };\n}\n\n/** Get the common space position from world coordinates in the given coordinate system */\nexport function getWorldPosition(\n  position: number[],\n  {\n    viewport,\n    modelMatrix,\n    coordinateSystem,\n    coordinateOrigin,\n    offsetMode\n  }: {\n    viewport: Viewport;\n    modelMatrix?: NumericArray | null;\n    coordinateSystem: CoordinateSystem;\n    coordinateOrigin: [number, number, number];\n    offsetMode?: boolean;\n  }\n): [number, number, number] {\n  let [x, y, z = 0] = position;\n\n  if (modelMatrix) {\n    [x, y, z] = vec4.transformMat4([], [x, y, z, 1.0], modelMatrix);\n  }\n\n  switch (coordinateSystem) {\n    case COORDINATE_SYSTEM.LNGLAT:\n      return lngLatZToWorldPosition([x, y, z], viewport, offsetMode);\n\n    case COORDINATE_SYSTEM.LNGLAT_OFFSETS:\n      return lngLatZToWorldPosition(\n        [x + coordinateOrigin[0], y + coordinateOrigin[1], z + (coordinateOrigin[2] || 0)],\n        viewport,\n        offsetMode\n      );\n\n    case COORDINATE_SYSTEM.METER_OFFSETS:\n      return lngLatZToWorldPosition(\n        addMetersToLngLat(coordinateOrigin, [x, y, z]) as [number, number, number],\n        viewport,\n        offsetMode\n      );\n\n    case COORDINATE_SYSTEM.CARTESIAN:\n    default:\n      return viewport.isGeospatial\n        ? [x + coordinateOrigin[0], y + coordinateOrigin[1], z + coordinateOrigin[2]]\n        : viewport.projectPosition([x, y, z]);\n  }\n}\n\n/**\n * Equivalent to project_position in project.glsl\n * projects a user supplied position to world position directly with or without\n * a reference coordinate system\n */\nexport function projectPosition(\n  position: number[],\n  params: {\n    /** The current viewport */\n    viewport: Viewport;\n    /** The reference coordinate system used to align world position */\n    coordinateSystem: CoordinateSystem;\n    /** The reference coordinate origin used to align world position */\n    coordinateOrigin: [number, number, number];\n    /** The model matrix of the supplied position */\n    modelMatrix?: NumericArray | null;\n    /** The coordinate system that the supplied position is in. Default to the same as `coordinateSystem`. */\n    fromCoordinateSystem?: CoordinateSystem;\n    /** The coordinate origin that the supplied position is in. Default to the same as `coordinateOrigin`. */\n    fromCoordinateOrigin?: [number, number, number];\n    /** Whether to apply offset mode automatically as does the project shader module.\n     * Offset mode places the origin of the common space at the given viewport's center. It is used in some use cases\n     * to improve precision in the vertex shader due to the fp32 float limitation.\n     * Use `autoOffset:false` if the returned position should not be dependent on the current viewport.\n     * Default `true` */\n    autoOffset?: boolean;\n  }\n): [number, number, number] {\n  const {\n    viewport,\n    coordinateSystem,\n    coordinateOrigin,\n    modelMatrix,\n    fromCoordinateSystem,\n    fromCoordinateOrigin\n  } = normalizeParameters(params);\n  const {autoOffset = true} = params;\n\n  const {\n    geospatialOrigin = DEFAULT_COORDINATE_ORIGIN,\n    shaderCoordinateOrigin = DEFAULT_COORDINATE_ORIGIN,\n    offsetMode = false\n  } = autoOffset ? getOffsetOrigin(viewport, coordinateSystem, coordinateOrigin) : {};\n\n  const worldPosition = getWorldPosition(position, {\n    viewport,\n    modelMatrix,\n    coordinateSystem: fromCoordinateSystem,\n    coordinateOrigin: fromCoordinateOrigin,\n    offsetMode\n  });\n\n  if (offsetMode) {\n    const positionCommonSpace = viewport.projectPosition(\n      geospatialOrigin || shaderCoordinateOrigin\n    );\n    vec3.sub(worldPosition, worldPosition, positionCommonSpace);\n  }\n\n  return worldPosition;\n}\n","function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}\n\nmodule.exports = _taggedTemplateLiteral;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","const sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSideAxis(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  return {\n    ...rect,\n    top: rect.y,\n    left: rect.x,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  };\n}\n\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\n","import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain positioning strategy.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n      continue;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    ...rects.floating,\n    x,\n    y\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements,\n      middlewareData\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. To ensure `shift()` continues to take action,\n    // a single reset is performed when this is true.\n    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center != offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n    return {\n      [axis]: coords[axis] + alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset - alignmentOffset,\n        ...(shouldAddOffset && {\n          alignmentOffset\n        })\n      },\n      reset: shouldAddOffset\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$arrow, _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n\n      // If a reset by the arrow was caused due to an alignment offset being\n      // added, we should skip any logic now since `flip()` has already done its\n      // work.\n      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      const side = getSide(placement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      if (!specifiedFallbackPlacements && fallbackAxisSideDirection !== 'none') {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$map$so;\n                const placement = (_overflowsData$map$so = overflowsData.map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$map$so[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: 0,\n    crossAxis: 0,\n    alignmentAxis: null,\n    ...rawValue\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: diffCoords\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const overflowAvailableHeight = height - overflow[heightSide];\n      const overflowAvailableWidth = width - overflow[widthSide];\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if (isYAxis) {\n        const maximumClippingWidth = width - overflow.left - overflow.right;\n        availableWidth = alignment || noShift ? min(overflowAvailableWidth, maximumClippingWidth) : maximumClippingWidth;\n      } else {\n        const maximumClippingHeight = height - overflow.top - overflow.bottom;\n        availableHeight = alignment || noShift ? min(overflowAvailableHeight, maximumClippingHeight) : maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\n","function getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null ? void 0 : (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  // Browsers without `ShadowRoot` support.\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  const webkit = isWebKit();\n  const css = getComputedStyle(element);\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = getParentNode(currentNode);\n    }\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list, traverseIframes) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  if (traverseIframes === void 0) {\n    traverseIframes = true;\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], win.frameElement && traverseIframes ? getOverflowAncestors(win.frameElement) : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n}\n\nexport { getComputedStyle, getContainingBlock, getDocumentElement, getNearestOverflowAncestor, getNodeName, getNodeScroll, getOverflowAncestors, getParentNode, getWindow, isContainingBlock, isElement, isHTMLElement, isLastTraversableNode, isNode, isOverflowElement, isShadowRoot, isTableElement, isWebKit };\n","import { rectToClientRect, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { arrow, autoPlacement, detectOverflow, flip, hide, inline, limitShift, offset, shift, size } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getDocumentElement, getNodeName, isOverflowElement, getNodeScroll, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentIFrame = win.frameElement;\n    while (currentIFrame && offsetParent && offsetWin !== win) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentIFrame = getWindow(currentIFrame).frameElement;\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  if (offsetParent === documentElement) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      ...clippingAncestor,\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  return getCssDimensions(element);\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  return element.offsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const window = getWindow(element);\n  if (!isHTMLElement(element)) {\n    return window;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n  return offsetParent || getContainingBlock(element) || window;\n}\n\nconst getElementRects = async function (_ref) {\n  let {\n    reference,\n    floating,\n    strategy\n  } = _ref;\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  return {\n    reference: getRectRelativeToOffsetParent(reference, await getOffsetParentFn(floating), strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      ...(await getDimensionsFn(floating))\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    clearTimeout(timeoutId);\n    io && io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = element.getBoundingClientRect();\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 100);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          resizeObserver && resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo && cleanupIo();\n    resizeObserver && resizeObserver.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain CSS positioning\n * strategy.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { autoUpdate, computePosition, platform };\n","import { arrow as arrow$1, computePosition } from '@floating-ui/dom';\nexport { autoPlacement, autoUpdate, computePosition, detectOverflow, flip, getOverflowAncestors, hide, inline, limitShift, offset, platform, shift, size } from '@floating-ui/dom';\nimport * as React from 'react';\nimport { useLayoutEffect, useEffect } from 'react';\nimport * as ReactDOM from 'react-dom';\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * This wraps the core `arrow` middleware to allow React refs as the element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => {\n  function isRef(value) {\n    return {}.hasOwnProperty.call(value, 'current');\n  }\n  return {\n    name: 'arrow',\n    options,\n    fn(state) {\n      const {\n        element,\n        padding\n      } = typeof options === 'function' ? options(state) : options;\n      if (element && isRef(element)) {\n        if (element.current != null) {\n          return arrow$1({\n            element: element.current,\n            padding\n          }).fn(state);\n        }\n        return {};\n      } else if (element) {\n        return arrow$1({\n          element,\n          padding\n        }).fn(state);\n      }\n      return {};\n    }\n  };\n};\n\nvar index = typeof document !== 'undefined' ? useLayoutEffect : useEffect;\n\n// Fork of `fast-deep-equal` that only does the comparisons we need and compares\n// functions\nfunction deepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (typeof a === 'function' && a.toString() === b.toString()) {\n    return true;\n  }\n  let length, i, keys;\n  if (a && b && typeof a == 'object') {\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;) {\n        if (!deepEqual(a[i], b[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) {\n      return false;\n    }\n    for (i = length; i-- !== 0;) {\n      if (!{}.hasOwnProperty.call(b, keys[i])) {\n        return false;\n      }\n    }\n    for (i = length; i-- !== 0;) {\n      const key = keys[i];\n      if (key === '_owner' && a.$$typeof) {\n        continue;\n      }\n      if (!deepEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return a !== a && b !== b;\n}\n\nfunction getDPR(element) {\n  if (typeof window === 'undefined') {\n    return 1;\n  }\n  const win = element.ownerDocument.defaultView || window;\n  return win.devicePixelRatio || 1;\n}\n\nfunction roundByDPR(element, value) {\n  const dpr = getDPR(element);\n  return Math.round(value * dpr) / dpr;\n}\n\nfunction useLatestRef(value) {\n  const ref = React.useRef(value);\n  index(() => {\n    ref.current = value;\n  });\n  return ref;\n}\n\n/**\n * Provides data to position a floating element.\n * @see https://floating-ui.com/docs/react\n */\nfunction useFloating(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform,\n    elements: {\n      reference: externalReference,\n      floating: externalFloating\n    } = {},\n    transform = true,\n    whileElementsMounted,\n    open\n  } = options;\n  const [data, setData] = React.useState({\n    x: 0,\n    y: 0,\n    strategy,\n    placement,\n    middlewareData: {},\n    isPositioned: false\n  });\n  const [latestMiddleware, setLatestMiddleware] = React.useState(middleware);\n  if (!deepEqual(latestMiddleware, middleware)) {\n    setLatestMiddleware(middleware);\n  }\n  const [_reference, _setReference] = React.useState(null);\n  const [_floating, _setFloating] = React.useState(null);\n  const setReference = React.useCallback(node => {\n    if (node != referenceRef.current) {\n      referenceRef.current = node;\n      _setReference(node);\n    }\n  }, [_setReference]);\n  const setFloating = React.useCallback(node => {\n    if (node !== floatingRef.current) {\n      floatingRef.current = node;\n      _setFloating(node);\n    }\n  }, [_setFloating]);\n  const referenceEl = externalReference || _reference;\n  const floatingEl = externalFloating || _floating;\n  const referenceRef = React.useRef(null);\n  const floatingRef = React.useRef(null);\n  const dataRef = React.useRef(data);\n  const whileElementsMountedRef = useLatestRef(whileElementsMounted);\n  const platformRef = useLatestRef(platform);\n  const update = React.useCallback(() => {\n    if (!referenceRef.current || !floatingRef.current) {\n      return;\n    }\n    const config = {\n      placement,\n      strategy,\n      middleware: latestMiddleware\n    };\n    if (platformRef.current) {\n      config.platform = platformRef.current;\n    }\n    computePosition(referenceRef.current, floatingRef.current, config).then(data => {\n      const fullData = {\n        ...data,\n        isPositioned: true\n      };\n      if (isMountedRef.current && !deepEqual(dataRef.current, fullData)) {\n        dataRef.current = fullData;\n        ReactDOM.flushSync(() => {\n          setData(fullData);\n        });\n      }\n    });\n  }, [latestMiddleware, placement, strategy, platformRef]);\n  index(() => {\n    if (open === false && dataRef.current.isPositioned) {\n      dataRef.current.isPositioned = false;\n      setData(data => ({\n        ...data,\n        isPositioned: false\n      }));\n    }\n  }, [open]);\n  const isMountedRef = React.useRef(false);\n  index(() => {\n    isMountedRef.current = true;\n    return () => {\n      isMountedRef.current = false;\n    };\n  }, []);\n  index(() => {\n    if (referenceEl) referenceRef.current = referenceEl;\n    if (floatingEl) floatingRef.current = floatingEl;\n    if (referenceEl && floatingEl) {\n      if (whileElementsMountedRef.current) {\n        return whileElementsMountedRef.current(referenceEl, floatingEl, update);\n      } else {\n        update();\n      }\n    }\n  }, [referenceEl, floatingEl, update, whileElementsMountedRef]);\n  const refs = React.useMemo(() => ({\n    reference: referenceRef,\n    floating: floatingRef,\n    setReference,\n    setFloating\n  }), [setReference, setFloating]);\n  const elements = React.useMemo(() => ({\n    reference: referenceEl,\n    floating: floatingEl\n  }), [referenceEl, floatingEl]);\n  const floatingStyles = React.useMemo(() => {\n    const initialStyles = {\n      position: strategy,\n      left: 0,\n      top: 0\n    };\n    if (!elements.floating) {\n      return initialStyles;\n    }\n    const x = roundByDPR(elements.floating, data.x);\n    const y = roundByDPR(elements.floating, data.y);\n    if (transform) {\n      return {\n        ...initialStyles,\n        transform: \"translate(\" + x + \"px, \" + y + \"px)\",\n        ...(getDPR(elements.floating) >= 1.5 && {\n          willChange: 'transform'\n        })\n      };\n    }\n    return {\n      position: strategy,\n      left: x,\n      top: y\n    };\n  }, [strategy, transform, elements.floating, data.x, data.y]);\n  return React.useMemo(() => ({\n    ...data,\n    update,\n    refs,\n    elements,\n    floatingStyles\n  }), [data, update, refs, elements, floatingStyles]);\n}\n\nexport { arrow, useFloating };\n","import { isShadowRoot, isHTMLElement } from '@floating-ui/utils/dom';\n\nfunction activeElement(doc) {\n  let activeElement = doc.activeElement;\n  while (((_activeElement = activeElement) == null ? void 0 : (_activeElement$shadow = _activeElement.shadowRoot) == null ? void 0 : _activeElement$shadow.activeElement) != null) {\n    var _activeElement, _activeElement$shadow;\n    activeElement = activeElement.shadowRoot.activeElement;\n  }\n  return activeElement;\n}\nfunction contains(parent, child) {\n  if (!parent || !child) {\n    return false;\n  }\n  const rootNode = child.getRootNode && child.getRootNode();\n\n  // First, attempt with faster native method\n  if (parent.contains(child)) {\n    return true;\n  }\n\n  // then fallback to custom implementation with Shadow DOM support\n  if (rootNode && isShadowRoot(rootNode)) {\n    let next = child;\n    while (next) {\n      if (parent === next) {\n        return true;\n      }\n      // @ts-ignore\n      next = next.parentNode || next.host;\n    }\n  }\n\n  // Give up, the result is false\n  return false;\n}\n// Avoid Chrome DevTools blue warning.\nfunction getPlatform() {\n  const uaData = navigator.userAgentData;\n  if (uaData != null && uaData.platform) {\n    return uaData.platform;\n  }\n  return navigator.platform;\n}\nfunction getUserAgent() {\n  const uaData = navigator.userAgentData;\n  if (uaData && Array.isArray(uaData.brands)) {\n    return uaData.brands.map(_ref => {\n      let {\n        brand,\n        version\n      } = _ref;\n      return brand + \"/\" + version;\n    }).join(' ');\n  }\n  return navigator.userAgent;\n}\n\n// License: https://github.com/adobe/react-spectrum/blob/b35d5c02fe900badccd0cf1a8f23bb593419f238/packages/@react-aria/utils/src/isVirtualEvent.ts\nfunction isVirtualClick(event) {\n  if (event.mozInputSource === 0 && event.isTrusted) {\n    return true;\n  }\n  const androidRe = /Android/i;\n  if ((androidRe.test(getPlatform()) || androidRe.test(getUserAgent())) && event.pointerType) {\n    return event.type === 'click' && event.buttons === 1;\n  }\n  return event.detail === 0 && !event.pointerType;\n}\nfunction isVirtualPointerEvent(event) {\n  return event.width === 0 && event.height === 0 || event.width === 1 && event.height === 1 && event.pressure === 0 && event.detail === 0 && event.pointerType !== 'mouse' ||\n  // iOS VoiceOver returns 0.333• for width/height.\n  event.width < 1 && event.height < 1 && event.pressure === 0 && event.detail === 0;\n}\nfunction isSafari() {\n  // Chrome DevTools does not complain about navigator.vendor\n  return /apple/i.test(navigator.vendor);\n}\nfunction isMac() {\n  return getPlatform().toLowerCase().startsWith('mac') && !navigator.maxTouchPoints;\n}\nfunction isMouseLikePointerType(pointerType, strict) {\n  // On some Linux machines with Chromium, mouse inputs return a `pointerType`\n  // of \"pen\": https://github.com/floating-ui/floating-ui/issues/2015\n  const values = ['mouse', 'pen'];\n  if (!strict) {\n    values.push('', undefined);\n  }\n  return values.includes(pointerType);\n}\nfunction isReactEvent(event) {\n  return 'nativeEvent' in event;\n}\nfunction isRootElement(element) {\n  return element.matches('html,body');\n}\nfunction getDocument(node) {\n  return (node == null ? void 0 : node.ownerDocument) || document;\n}\nfunction isEventTargetWithin(event, node) {\n  if (node == null) {\n    return false;\n  }\n  if ('composedPath' in event) {\n    return event.composedPath().includes(node);\n  }\n\n  // TS thinks `event` is of type never as it assumes all browsers support composedPath, but browsers without shadow dom don't\n  const e = event;\n  return e.target != null && node.contains(e.target);\n}\nfunction getTarget(event) {\n  if ('composedPath' in event) {\n    return event.composedPath()[0];\n  }\n\n  // TS thinks `event` is of type never as it assumes all browsers support\n  // `composedPath()`, but browsers without shadow DOM don't.\n  return event.target;\n}\nconst TYPEABLE_SELECTOR = \"input:not([type='hidden']):not([disabled]),\" + \"[contenteditable]:not([contenteditable='false']),textarea:not([disabled])\";\nfunction isTypeableElement(element) {\n  return isHTMLElement(element) && element.matches(TYPEABLE_SELECTOR);\n}\nfunction stopEvent(event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\n\nexport { TYPEABLE_SELECTOR, activeElement, contains, getDocument, getPlatform, getTarget, getUserAgent, isEventTargetWithin, isMac, isMouseLikePointerType, isReactEvent, isRootElement, isSafari, isTypeableElement, isVirtualClick, isVirtualPointerEvent, stopEvent };\n","import { platform, getOverflowAncestors, useFloating as useFloating$1, offset, detectOverflow } from '@floating-ui/react-dom';\nexport { arrow, autoPlacement, autoUpdate, computePosition, detectOverflow, flip, getOverflowAncestors, hide, inline, limitShift, offset, platform, shift, size } from '@floating-ui/react-dom';\nimport * as React from 'react';\nimport { useLayoutEffect, useEffect, useRef } from 'react';\nimport { isElement, isHTMLElement, getWindow, isLastTraversableNode, getParentNode, getComputedStyle } from '@floating-ui/utils/dom';\nimport { getDocument, isMouseLikePointerType, contains, activeElement, isSafari, isTypeableElement, stopEvent, getTarget, getPlatform, isReactEvent, isRootElement, isEventTargetWithin, isVirtualClick, isVirtualPointerEvent, isMac, getUserAgent } from '@floating-ui/utils/react';\nimport { tabbable } from 'tabbable';\nimport { createPortal, flushSync } from 'react-dom';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nvar index = typeof document !== 'undefined' ? useLayoutEffect : useEffect;\n\nlet serverHandoffComplete = false;\nlet count = 0;\nconst genId = () => \"floating-ui-\" + count++;\nfunction useFloatingId() {\n  const [id, setId] = React.useState(() => serverHandoffComplete ? genId() : undefined);\n  index(() => {\n    if (id == null) {\n      setId(genId());\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  React.useEffect(() => {\n    if (!serverHandoffComplete) {\n      serverHandoffComplete = true;\n    }\n  }, []);\n  return id;\n}\n\n// `toString()` prevents bundlers from trying to `import { useId } from 'react'`\nconst useReactId = React[/*#__PURE__*/'useId'.toString()];\n\n/**\n * Uses React 18's built-in `useId()` when available, or falls back to a\n * slightly less performant (requiring a double render) implementation for\n * earlier React versions.\n * @see https://floating-ui.com/docs/useId\n */\nconst useId = useReactId || useFloatingId;\n\n/**\n * Renders a pointing arrow triangle.\n * @see https://floating-ui.com/docs/FloatingArrow\n */\nconst FloatingArrow = /*#__PURE__*/React.forwardRef(function FloatingArrow(_ref, ref) {\n  let {\n    context: {\n      placement,\n      elements: {\n        floating\n      },\n      middlewareData: {\n        arrow\n      }\n    },\n    width = 14,\n    height = 7,\n    tipRadius = 0,\n    strokeWidth = 0,\n    staticOffset,\n    stroke,\n    d,\n    style: {\n      transform,\n      ...restStyle\n    } = {},\n    ...rest\n  } = _ref;\n  if (process.env.NODE_ENV !== \"production\") {\n    if (!ref) {\n      console.warn('Floating UI: The `ref` prop is required for the `FloatingArrow`', 'component.');\n    }\n  }\n  const clipPathId = useId();\n  if (!floating) {\n    return null;\n  }\n\n  // Strokes must be double the border width, this ensures the stroke's width\n  // works as you'd expect.\n  strokeWidth *= 2;\n  const halfStrokeWidth = strokeWidth / 2;\n  const svgX = width / 2 * (tipRadius / -8 + 1);\n  const svgY = height / 2 * tipRadius / 4;\n  const [side, alignment] = placement.split('-');\n  const isRTL = platform.isRTL(floating);\n  const isCustomShape = !!d;\n  const isVerticalSide = side === 'top' || side === 'bottom';\n  const yOffsetProp = staticOffset && alignment === 'end' ? 'bottom' : 'top';\n  let xOffsetProp = staticOffset && alignment === 'end' ? 'right' : 'left';\n  if (staticOffset && isRTL) {\n    xOffsetProp = alignment === 'end' ? 'left' : 'right';\n  }\n  const arrowX = (arrow == null ? void 0 : arrow.x) != null ? staticOffset || arrow.x : '';\n  const arrowY = (arrow == null ? void 0 : arrow.y) != null ? staticOffset || arrow.y : '';\n  const dValue = d || 'M0,0' + (\" H\" + width) + (\" L\" + (width - svgX) + \",\" + (height - svgY)) + (\" Q\" + width / 2 + \",\" + height + \" \" + svgX + \",\" + (height - svgY)) + ' Z';\n  const rotation = {\n    top: isCustomShape ? 'rotate(180deg)' : '',\n    left: isCustomShape ? 'rotate(90deg)' : 'rotate(-90deg)',\n    bottom: isCustomShape ? '' : 'rotate(180deg)',\n    right: isCustomShape ? 'rotate(-90deg)' : 'rotate(90deg)'\n  }[side];\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({}, rest, {\n    \"aria-hidden\": true,\n    ref: ref,\n    width: isCustomShape ? width : width + strokeWidth,\n    height: width,\n    viewBox: \"0 0 \" + width + \" \" + (height > width ? height : width),\n    style: {\n      position: 'absolute',\n      pointerEvents: 'none',\n      [xOffsetProp]: arrowX,\n      [yOffsetProp]: arrowY,\n      [side]: isVerticalSide || isCustomShape ? '100%' : \"calc(100% - \" + strokeWidth / 2 + \"px)\",\n      transform: \"\" + rotation + (transform != null ? transform : ''),\n      ...restStyle\n    }\n  }), strokeWidth > 0 && /*#__PURE__*/React.createElement(\"path\", {\n    clipPath: \"url(#\" + clipPathId + \")\",\n    fill: \"none\",\n    stroke: stroke\n    // Account for the stroke on the fill path rendered below.\n    ,\n    strokeWidth: strokeWidth + (d ? 0 : 1),\n    d: dValue\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: strokeWidth && !d ? rest.fill : 'none',\n    d: dValue\n  }), /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: clipPathId\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    x: -halfStrokeWidth,\n    y: halfStrokeWidth * (isCustomShape ? -1 : 1),\n    width: width + strokeWidth,\n    height: width\n  })));\n});\n\nfunction createPubSub() {\n  const map = new Map();\n  return {\n    emit(event, data) {\n      var _map$get;\n      (_map$get = map.get(event)) == null ? void 0 : _map$get.forEach(handler => handler(data));\n    },\n    on(event, listener) {\n      map.set(event, [...(map.get(event) || []), listener]);\n    },\n    off(event, listener) {\n      var _map$get2;\n      map.set(event, ((_map$get2 = map.get(event)) == null ? void 0 : _map$get2.filter(l => l !== listener)) || []);\n    }\n  };\n}\n\nconst FloatingNodeContext = /*#__PURE__*/React.createContext(null);\nconst FloatingTreeContext = /*#__PURE__*/React.createContext(null);\nconst useFloatingParentNodeId = () => {\n  var _React$useContext;\n  return ((_React$useContext = React.useContext(FloatingNodeContext)) == null ? void 0 : _React$useContext.id) || null;\n};\nconst useFloatingTree = () => React.useContext(FloatingTreeContext);\n\n/**\n * Registers a node into the floating tree, returning its id.\n */\nfunction useFloatingNodeId(customParentId) {\n  const id = useId();\n  const tree = useFloatingTree();\n  const reactParentId = useFloatingParentNodeId();\n  const parentId = customParentId || reactParentId;\n  index(() => {\n    const node = {\n      id,\n      parentId\n    };\n    tree == null ? void 0 : tree.addNode(node);\n    return () => {\n      tree == null ? void 0 : tree.removeNode(node);\n    };\n  }, [tree, id, parentId]);\n  return id;\n}\n\n/**\n * Provides parent node context for nested floating elements.\n * @see https://floating-ui.com/docs/FloatingTree\n */\nfunction FloatingNode(_ref) {\n  let {\n    children,\n    id\n  } = _ref;\n  const parentId = useFloatingParentNodeId();\n  return /*#__PURE__*/React.createElement(FloatingNodeContext.Provider, {\n    value: React.useMemo(() => ({\n      id,\n      parentId\n    }), [id, parentId])\n  }, children);\n}\n\n/**\n * Provides context for nested floating elements when they are not children of\n * each other on the DOM (i.e. portalled to a common node, rather than their\n * respective parent).\n * @see https://floating-ui.com/docs/FloatingTree\n */\nfunction FloatingTree(_ref2) {\n  let {\n    children\n  } = _ref2;\n  const nodesRef = React.useRef([]);\n  const addNode = React.useCallback(node => {\n    nodesRef.current = [...nodesRef.current, node];\n  }, []);\n  const removeNode = React.useCallback(node => {\n    nodesRef.current = nodesRef.current.filter(n => n !== node);\n  }, []);\n  const events = React.useState(() => createPubSub())[0];\n  return /*#__PURE__*/React.createElement(FloatingTreeContext.Provider, {\n    value: React.useMemo(() => ({\n      nodesRef,\n      addNode,\n      removeNode,\n      events\n    }), [nodesRef, addNode, removeNode, events])\n  }, children);\n}\n\nfunction createAttribute(name) {\n  return \"data-floating-ui-\" + name;\n}\n\nfunction useLatestRef(value) {\n  const ref = useRef(value);\n  index(() => {\n    ref.current = value;\n  });\n  return ref;\n}\n\nconst safePolygonIdentifier = /*#__PURE__*/createAttribute('safe-polygon');\nfunction getDelay(value, prop, pointerType) {\n  if (pointerType && !isMouseLikePointerType(pointerType)) {\n    return 0;\n  }\n  if (typeof value === 'number') {\n    return value;\n  }\n  return value == null ? void 0 : value[prop];\n}\n/**\n * Opens the floating element while hovering over the reference element, like\n * CSS `:hover`.\n * @see https://floating-ui.com/docs/useHover\n */\nfunction useHover(context, props) {\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    open,\n    onOpenChange,\n    dataRef,\n    events,\n    elements: {\n      domReference,\n      floating\n    },\n    refs\n  } = context;\n  const {\n    enabled = true,\n    delay = 0,\n    handleClose = null,\n    mouseOnly = false,\n    restMs = 0,\n    move = true\n  } = props;\n  const tree = useFloatingTree();\n  const parentId = useFloatingParentNodeId();\n  const handleCloseRef = useLatestRef(handleClose);\n  const delayRef = useLatestRef(delay);\n  const pointerTypeRef = React.useRef();\n  const timeoutRef = React.useRef();\n  const handlerRef = React.useRef();\n  const restTimeoutRef = React.useRef();\n  const blockMouseMoveRef = React.useRef(true);\n  const performedPointerEventsMutationRef = React.useRef(false);\n  const unbindMouseMoveRef = React.useRef(() => {});\n  const isHoverOpen = React.useCallback(() => {\n    var _dataRef$current$open;\n    const type = (_dataRef$current$open = dataRef.current.openEvent) == null ? void 0 : _dataRef$current$open.type;\n    return (type == null ? void 0 : type.includes('mouse')) && type !== 'mousedown';\n  }, [dataRef]);\n\n  // When dismissing before opening, clear the delay timeouts to cancel it\n  // from showing.\n  React.useEffect(() => {\n    if (!enabled) {\n      return;\n    }\n    function onDismiss() {\n      clearTimeout(timeoutRef.current);\n      clearTimeout(restTimeoutRef.current);\n      blockMouseMoveRef.current = true;\n    }\n    events.on('dismiss', onDismiss);\n    return () => {\n      events.off('dismiss', onDismiss);\n    };\n  }, [enabled, events]);\n  React.useEffect(() => {\n    if (!enabled || !handleCloseRef.current || !open) {\n      return;\n    }\n    function onLeave(event) {\n      if (isHoverOpen()) {\n        onOpenChange(false, event);\n      }\n    }\n    const html = getDocument(floating).documentElement;\n    html.addEventListener('mouseleave', onLeave);\n    return () => {\n      html.removeEventListener('mouseleave', onLeave);\n    };\n  }, [floating, open, onOpenChange, enabled, handleCloseRef, dataRef, isHoverOpen]);\n  const closeWithDelay = React.useCallback(function (event, runElseBranch) {\n    if (runElseBranch === void 0) {\n      runElseBranch = true;\n    }\n    const closeDelay = getDelay(delayRef.current, 'close', pointerTypeRef.current);\n    if (closeDelay && !handlerRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = setTimeout(() => onOpenChange(false, event), closeDelay);\n    } else if (runElseBranch) {\n      clearTimeout(timeoutRef.current);\n      onOpenChange(false, event);\n    }\n  }, [delayRef, onOpenChange]);\n  const cleanupMouseMoveHandler = React.useCallback(() => {\n    unbindMouseMoveRef.current();\n    handlerRef.current = undefined;\n  }, []);\n  const clearPointerEvents = React.useCallback(() => {\n    if (performedPointerEventsMutationRef.current) {\n      const body = getDocument(refs.floating.current).body;\n      body.style.pointerEvents = '';\n      body.removeAttribute(safePolygonIdentifier);\n      performedPointerEventsMutationRef.current = false;\n    }\n  }, [refs]);\n\n  // Registering the mouse events on the reference directly to bypass React's\n  // delegation system. If the cursor was on a disabled element and then entered\n  // the reference (no gap), `mouseenter` doesn't fire in the delegation system.\n  React.useEffect(() => {\n    if (!enabled) {\n      return;\n    }\n    function isClickLikeOpenEvent() {\n      return dataRef.current.openEvent ? ['click', 'mousedown'].includes(dataRef.current.openEvent.type) : false;\n    }\n    function onMouseEnter(event) {\n      clearTimeout(timeoutRef.current);\n      blockMouseMoveRef.current = false;\n      if (mouseOnly && !isMouseLikePointerType(pointerTypeRef.current) || restMs > 0 && getDelay(delayRef.current, 'open') === 0) {\n        return;\n      }\n      const openDelay = getDelay(delayRef.current, 'open', pointerTypeRef.current);\n      if (openDelay) {\n        timeoutRef.current = setTimeout(() => {\n          onOpenChange(true, event);\n        }, openDelay);\n      } else {\n        onOpenChange(true, event);\n      }\n    }\n    function onMouseLeave(event) {\n      if (isClickLikeOpenEvent()) {\n        return;\n      }\n      unbindMouseMoveRef.current();\n      const doc = getDocument(floating);\n      clearTimeout(restTimeoutRef.current);\n      if (handleCloseRef.current) {\n        // Prevent clearing `onScrollMouseLeave` timeout.\n        if (!open) {\n          clearTimeout(timeoutRef.current);\n        }\n        handlerRef.current = handleCloseRef.current({\n          ...context,\n          tree,\n          x: event.clientX,\n          y: event.clientY,\n          onClose() {\n            clearPointerEvents();\n            cleanupMouseMoveHandler();\n            // Should the event expose that it was closed by `safePolygon`?\n            closeWithDelay(event);\n          }\n        });\n        const handler = handlerRef.current;\n        doc.addEventListener('mousemove', handler);\n        unbindMouseMoveRef.current = () => {\n          doc.removeEventListener('mousemove', handler);\n        };\n        return;\n      }\n\n      // Allow interactivity without `safePolygon` on touch devices. With a\n      // pointer, a short close delay is an alternative, so it should work\n      // consistently.\n      const shouldClose = pointerTypeRef.current === 'touch' ? !contains(floating, event.relatedTarget) : true;\n      if (shouldClose) {\n        closeWithDelay(event);\n      }\n    }\n\n    // Ensure the floating element closes after scrolling even if the pointer\n    // did not move.\n    // https://github.com/floating-ui/floating-ui/discussions/1692\n    function onScrollMouseLeave(event) {\n      if (isClickLikeOpenEvent()) {\n        return;\n      }\n      handleCloseRef.current == null ? void 0 : handleCloseRef.current({\n        ...context,\n        tree,\n        x: event.clientX,\n        y: event.clientY,\n        onClose() {\n          clearPointerEvents();\n          cleanupMouseMoveHandler();\n          closeWithDelay(event);\n        }\n      })(event);\n    }\n    if (isElement(domReference)) {\n      const ref = domReference;\n      open && ref.addEventListener('mouseleave', onScrollMouseLeave);\n      floating == null ? void 0 : floating.addEventListener('mouseleave', onScrollMouseLeave);\n      move && ref.addEventListener('mousemove', onMouseEnter, {\n        once: true\n      });\n      ref.addEventListener('mouseenter', onMouseEnter);\n      ref.addEventListener('mouseleave', onMouseLeave);\n      return () => {\n        open && ref.removeEventListener('mouseleave', onScrollMouseLeave);\n        floating == null ? void 0 : floating.removeEventListener('mouseleave', onScrollMouseLeave);\n        move && ref.removeEventListener('mousemove', onMouseEnter);\n        ref.removeEventListener('mouseenter', onMouseEnter);\n        ref.removeEventListener('mouseleave', onMouseLeave);\n      };\n    }\n  }, [domReference, floating, enabled, context, mouseOnly, restMs, move, closeWithDelay, cleanupMouseMoveHandler, clearPointerEvents, onOpenChange, open, tree, delayRef, handleCloseRef, dataRef]);\n\n  // Block pointer-events of every element other than the reference and floating\n  // while the floating element is open and has a `handleClose` handler. Also\n  // handles nested floating elements.\n  // https://github.com/floating-ui/floating-ui/issues/1722\n  index(() => {\n    var _handleCloseRef$curre;\n    if (!enabled) {\n      return;\n    }\n    if (open && (_handleCloseRef$curre = handleCloseRef.current) != null && _handleCloseRef$curre.__options.blockPointerEvents && isHoverOpen()) {\n      const body = getDocument(floating).body;\n      body.setAttribute(safePolygonIdentifier, '');\n      body.style.pointerEvents = 'none';\n      performedPointerEventsMutationRef.current = true;\n      if (isElement(domReference) && floating) {\n        var _tree$nodesRef$curren, _tree$nodesRef$curren2;\n        const ref = domReference;\n        const parentFloating = tree == null ? void 0 : (_tree$nodesRef$curren = tree.nodesRef.current.find(node => node.id === parentId)) == null ? void 0 : (_tree$nodesRef$curren2 = _tree$nodesRef$curren.context) == null ? void 0 : _tree$nodesRef$curren2.elements.floating;\n        if (parentFloating) {\n          parentFloating.style.pointerEvents = '';\n        }\n        ref.style.pointerEvents = 'auto';\n        floating.style.pointerEvents = 'auto';\n        return () => {\n          ref.style.pointerEvents = '';\n          floating.style.pointerEvents = '';\n        };\n      }\n    }\n  }, [enabled, open, parentId, floating, domReference, tree, handleCloseRef, dataRef, isHoverOpen]);\n  index(() => {\n    if (!open) {\n      pointerTypeRef.current = undefined;\n      cleanupMouseMoveHandler();\n      clearPointerEvents();\n    }\n  }, [open, cleanupMouseMoveHandler, clearPointerEvents]);\n  React.useEffect(() => {\n    return () => {\n      cleanupMouseMoveHandler();\n      clearTimeout(timeoutRef.current);\n      clearTimeout(restTimeoutRef.current);\n      clearPointerEvents();\n    };\n  }, [enabled, domReference, cleanupMouseMoveHandler, clearPointerEvents]);\n  return React.useMemo(() => {\n    if (!enabled) {\n      return {};\n    }\n    function setPointerRef(event) {\n      pointerTypeRef.current = event.pointerType;\n    }\n    return {\n      reference: {\n        onPointerDown: setPointerRef,\n        onPointerEnter: setPointerRef,\n        onMouseMove(event) {\n          if (open || restMs === 0) {\n            return;\n          }\n          clearTimeout(restTimeoutRef.current);\n          restTimeoutRef.current = setTimeout(() => {\n            if (!blockMouseMoveRef.current) {\n              onOpenChange(true, event.nativeEvent);\n            }\n          }, restMs);\n        }\n      },\n      floating: {\n        onMouseEnter() {\n          clearTimeout(timeoutRef.current);\n        },\n        onMouseLeave(event) {\n          events.emit('dismiss', {\n            type: 'mouseLeave',\n            data: {\n              returnFocus: false\n            }\n          });\n          closeWithDelay(event.nativeEvent, false);\n        }\n      }\n    };\n  }, [events, enabled, restMs, open, onOpenChange, closeWithDelay]);\n}\n\nconst FloatingDelayGroupContext = /*#__PURE__*/React.createContext({\n  delay: 0,\n  initialDelay: 0,\n  timeoutMs: 0,\n  currentId: null,\n  setCurrentId: () => {},\n  setState: () => {},\n  isInstantPhase: false\n});\nconst useDelayGroupContext = () => React.useContext(FloatingDelayGroupContext);\n/**\n * Provides context for a group of floating elements that should share a\n * `delay`.\n * @see https://floating-ui.com/docs/FloatingDelayGroup\n */\nconst FloatingDelayGroup = _ref => {\n  let {\n    children,\n    delay,\n    timeoutMs = 0\n  } = _ref;\n  const [state, setState] = React.useReducer((prev, next) => ({\n    ...prev,\n    ...next\n  }), {\n    delay,\n    timeoutMs,\n    initialDelay: delay,\n    currentId: null,\n    isInstantPhase: false\n  });\n  const initialCurrentIdRef = React.useRef(null);\n  const setCurrentId = React.useCallback(currentId => {\n    setState({\n      currentId\n    });\n  }, []);\n  index(() => {\n    if (state.currentId) {\n      if (initialCurrentIdRef.current === null) {\n        initialCurrentIdRef.current = state.currentId;\n      } else {\n        setState({\n          isInstantPhase: true\n        });\n      }\n    } else {\n      setState({\n        isInstantPhase: false\n      });\n      initialCurrentIdRef.current = null;\n    }\n  }, [state.currentId]);\n  return /*#__PURE__*/React.createElement(FloatingDelayGroupContext.Provider, {\n    value: React.useMemo(() => ({\n      ...state,\n      setState,\n      setCurrentId\n    }), [state, setState, setCurrentId])\n  }, children);\n};\nconst useDelayGroup = (_ref2, _ref3) => {\n  let {\n    open,\n    onOpenChange\n  } = _ref2;\n  let {\n    id\n  } = _ref3;\n  const {\n    currentId,\n    setCurrentId,\n    initialDelay,\n    setState,\n    timeoutMs\n  } = useDelayGroupContext();\n  index(() => {\n    if (currentId) {\n      setState({\n        delay: {\n          open: 1,\n          close: getDelay(initialDelay, 'close')\n        }\n      });\n      if (currentId !== id) {\n        onOpenChange(false);\n      }\n    }\n  }, [id, onOpenChange, setState, currentId, initialDelay]);\n  index(() => {\n    function unset() {\n      onOpenChange(false);\n      setState({\n        delay: initialDelay,\n        currentId: null\n      });\n    }\n    if (!open && currentId === id) {\n      if (timeoutMs) {\n        const timeout = window.setTimeout(unset, timeoutMs);\n        return () => {\n          clearTimeout(timeout);\n        };\n      } else {\n        unset();\n      }\n    }\n  }, [open, setState, currentId, id, onOpenChange, initialDelay, timeoutMs]);\n  index(() => {\n    if (open) {\n      setCurrentId(id);\n    }\n  }, [open, setCurrentId, id]);\n};\n\nlet rafId = 0;\nfunction enqueueFocus(el, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    preventScroll = false,\n    cancelPrevious = true,\n    sync = false\n  } = options;\n  cancelPrevious && cancelAnimationFrame(rafId);\n  const exec = () => el == null ? void 0 : el.focus({\n    preventScroll\n  });\n  if (sync) {\n    exec();\n  } else {\n    rafId = requestAnimationFrame(exec);\n  }\n}\n\nfunction getAncestors(nodes, id) {\n  var _nodes$find;\n  let allAncestors = [];\n  let currentParentId = (_nodes$find = nodes.find(node => node.id === id)) == null ? void 0 : _nodes$find.parentId;\n  while (currentParentId) {\n    const currentNode = nodes.find(node => node.id === currentParentId);\n    currentParentId = currentNode == null ? void 0 : currentNode.parentId;\n    if (currentNode) {\n      allAncestors = allAncestors.concat(currentNode);\n    }\n  }\n  return allAncestors;\n}\n\nfunction getChildren(nodes, id) {\n  let allChildren = nodes.filter(node => {\n    var _node$context;\n    return node.parentId === id && ((_node$context = node.context) == null ? void 0 : _node$context.open);\n  });\n  let currentChildren = allChildren;\n  while (currentChildren.length) {\n    currentChildren = nodes.filter(node => {\n      var _currentChildren;\n      return (_currentChildren = currentChildren) == null ? void 0 : _currentChildren.some(n => {\n        var _node$context2;\n        return node.parentId === n.id && ((_node$context2 = node.context) == null ? void 0 : _node$context2.open);\n      });\n    });\n    allChildren = allChildren.concat(currentChildren);\n  }\n  return allChildren;\n}\n\n// Modified to add conditional `aria-hidden` support:\n// https://github.com/theKashey/aria-hidden/blob/9220c8f4a4fd35f63bee5510a9f41a37264382d4/src/index.ts\nlet counterMap = /*#__PURE__*/new WeakMap();\nlet uncontrolledElementsSet = /*#__PURE__*/new WeakSet();\nlet markerMap = {};\nlet lockCount = 0;\nconst supportsInert = () => typeof HTMLElement !== 'undefined' && 'inert' in HTMLElement.prototype;\nconst unwrapHost = node => node && (node.host || unwrapHost(node.parentNode));\nconst correctElements = (parent, targets) => targets.map(target => {\n  if (parent.contains(target)) {\n    return target;\n  }\n  const correctedTarget = unwrapHost(target);\n  if (parent.contains(correctedTarget)) {\n    return correctedTarget;\n  }\n  return null;\n}).filter(x => x != null);\nfunction applyAttributeToOthers(uncorrectedAvoidElements, body, ariaHidden, inert) {\n  const markerName = 'data-floating-ui-inert';\n  const controlAttribute = inert ? 'inert' : ariaHidden ? 'aria-hidden' : null;\n  const avoidElements = correctElements(body, uncorrectedAvoidElements);\n  const elementsToKeep = new Set();\n  const elementsToStop = new Set(avoidElements);\n  const hiddenElements = [];\n  if (!markerMap[markerName]) {\n    markerMap[markerName] = new WeakMap();\n  }\n  const markerCounter = markerMap[markerName];\n  avoidElements.forEach(keep);\n  deep(body);\n  elementsToKeep.clear();\n  function keep(el) {\n    if (!el || elementsToKeep.has(el)) {\n      return;\n    }\n    elementsToKeep.add(el);\n    el.parentNode && keep(el.parentNode);\n  }\n  function deep(parent) {\n    if (!parent || elementsToStop.has(parent)) {\n      return;\n    }\n    Array.prototype.forEach.call(parent.children, node => {\n      if (elementsToKeep.has(node)) {\n        deep(node);\n      } else {\n        const attr = controlAttribute ? node.getAttribute(controlAttribute) : null;\n        const alreadyHidden = attr !== null && attr !== 'false';\n        const counterValue = (counterMap.get(node) || 0) + 1;\n        const markerValue = (markerCounter.get(node) || 0) + 1;\n        counterMap.set(node, counterValue);\n        markerCounter.set(node, markerValue);\n        hiddenElements.push(node);\n        if (counterValue === 1 && alreadyHidden) {\n          uncontrolledElementsSet.add(node);\n        }\n        if (markerValue === 1) {\n          node.setAttribute(markerName, '');\n        }\n        if (!alreadyHidden && controlAttribute) {\n          node.setAttribute(controlAttribute, 'true');\n        }\n      }\n    });\n  }\n  lockCount++;\n  return () => {\n    hiddenElements.forEach(element => {\n      const counterValue = (counterMap.get(element) || 0) - 1;\n      const markerValue = (markerCounter.get(element) || 0) - 1;\n      counterMap.set(element, counterValue);\n      markerCounter.set(element, markerValue);\n      if (!counterValue) {\n        if (!uncontrolledElementsSet.has(element) && controlAttribute) {\n          element.removeAttribute(controlAttribute);\n        }\n        uncontrolledElementsSet.delete(element);\n      }\n      if (!markerValue) {\n        element.removeAttribute(markerName);\n      }\n    });\n    lockCount--;\n    if (!lockCount) {\n      counterMap = new WeakMap();\n      counterMap = new WeakMap();\n      uncontrolledElementsSet = new WeakSet();\n      markerMap = {};\n    }\n  };\n}\nfunction markOthers(avoidElements, ariaHidden, inert) {\n  if (ariaHidden === void 0) {\n    ariaHidden = false;\n  }\n  if (inert === void 0) {\n    inert = false;\n  }\n  const body = getDocument(avoidElements[0]).body;\n  return applyAttributeToOthers(avoidElements.concat(Array.from(body.querySelectorAll('[aria-live]'))), body, ariaHidden, inert);\n}\n\nconst getTabbableOptions = () => ({\n  getShadowRoot: true,\n  displayCheck:\n  // JSDOM does not support the `tabbable` library. To solve this we can\n  // check if `ResizeObserver` is a real function (not polyfilled), which\n  // determines if the current environment is JSDOM-like.\n  typeof ResizeObserver === 'function' && ResizeObserver.toString().includes('[native code]') ? 'full' : 'none'\n});\nfunction getTabbableIn(container, direction) {\n  const allTabbable = tabbable(container, getTabbableOptions());\n  if (direction === 'prev') {\n    allTabbable.reverse();\n  }\n  const activeIndex = allTabbable.indexOf(activeElement(getDocument(container)));\n  const nextTabbableElements = allTabbable.slice(activeIndex + 1);\n  return nextTabbableElements[0];\n}\nfunction getNextTabbable() {\n  return getTabbableIn(document.body, 'next');\n}\nfunction getPreviousTabbable() {\n  return getTabbableIn(document.body, 'prev');\n}\nfunction isOutsideEvent(event, container) {\n  const containerElement = container || event.currentTarget;\n  const relatedTarget = event.relatedTarget;\n  return !relatedTarget || !contains(containerElement, relatedTarget);\n}\nfunction disableFocusInside(container) {\n  const tabbableElements = tabbable(container, getTabbableOptions());\n  tabbableElements.forEach(element => {\n    element.dataset.tabindex = element.getAttribute('tabindex') || '';\n    element.setAttribute('tabindex', '-1');\n  });\n}\nfunction enableFocusInside(container) {\n  const elements = container.querySelectorAll('[data-tabindex]');\n  elements.forEach(element => {\n    const tabindex = element.dataset.tabindex;\n    delete element.dataset.tabindex;\n    if (tabindex) {\n      element.setAttribute('tabindex', tabindex);\n    } else {\n      element.removeAttribute('tabindex');\n    }\n  });\n}\n\n// See Diego Haz's Sandbox for making this logic work well on Safari/iOS:\n// https://codesandbox.io/s/tabbable-portal-f4tng?file=/src/FocusTrap.tsx\n\nconst HIDDEN_STYLES = {\n  border: 0,\n  clip: 'rect(0 0 0 0)',\n  height: '1px',\n  margin: '-1px',\n  overflow: 'hidden',\n  padding: 0,\n  position: 'fixed',\n  whiteSpace: 'nowrap',\n  width: '1px',\n  top: 0,\n  left: 0\n};\nlet timeoutId;\nfunction setActiveElementOnTab(event) {\n  if (event.key === 'Tab') {\n    event.target;\n    clearTimeout(timeoutId);\n  }\n}\nconst FocusGuard = /*#__PURE__*/React.forwardRef(function FocusGuard(props, ref) {\n  const [role, setRole] = React.useState();\n  index(() => {\n    if (isSafari()) {\n      // Unlike other screen readers such as NVDA and JAWS, the virtual cursor\n      // on VoiceOver does trigger the onFocus event, so we can use the focus\n      // trap element. On Safari, only buttons trigger the onFocus event.\n      // NB: \"group\" role in the Sandbox no longer appears to work, must be a\n      // button role.\n      setRole('button');\n    }\n    document.addEventListener('keydown', setActiveElementOnTab);\n    return () => {\n      document.removeEventListener('keydown', setActiveElementOnTab);\n    };\n  }, []);\n  const restProps = {\n    ref,\n    tabIndex: 0,\n    // Role is only for VoiceOver\n    role,\n    'aria-hidden': role ? undefined : true,\n    [createAttribute('focus-guard')]: '',\n    style: HIDDEN_STYLES\n  };\n  return /*#__PURE__*/React.createElement(\"span\", _extends({}, props, restProps));\n});\n\nconst PortalContext = /*#__PURE__*/React.createContext(null);\nfunction useFloatingPortalNode(_temp) {\n  let {\n    id,\n    root\n  } = _temp === void 0 ? {} : _temp;\n  const [portalNode, setPortalNode] = React.useState(null);\n  const uniqueId = useId();\n  const portalContext = usePortalContext();\n  const data = React.useMemo(() => ({\n    id,\n    root,\n    portalContext,\n    uniqueId\n  }), [id, root, portalContext, uniqueId]);\n  const dataRef = React.useRef();\n  index(() => {\n    return () => {\n      portalNode == null ? void 0 : portalNode.remove();\n    };\n  }, [portalNode, data]);\n  index(() => {\n    if (dataRef.current === data) return;\n    dataRef.current = data;\n    const {\n      id,\n      root,\n      portalContext,\n      uniqueId\n    } = data;\n    const existingIdRoot = id ? document.getElementById(id) : null;\n    const attr = createAttribute('portal');\n    if (existingIdRoot) {\n      const subRoot = document.createElement('div');\n      subRoot.id = uniqueId;\n      subRoot.setAttribute(attr, '');\n      existingIdRoot.appendChild(subRoot);\n      setPortalNode(subRoot);\n    } else {\n      let container = root || (portalContext == null ? void 0 : portalContext.portalNode);\n      if (container && !isElement(container)) container = container.current;\n      container = container || document.body;\n      let idWrapper = null;\n      if (id) {\n        idWrapper = document.createElement('div');\n        idWrapper.id = id;\n        container.appendChild(idWrapper);\n      }\n      const subRoot = document.createElement('div');\n      subRoot.id = uniqueId;\n      subRoot.setAttribute(attr, '');\n      container = idWrapper || container;\n      container.appendChild(subRoot);\n      setPortalNode(subRoot);\n    }\n  }, [data]);\n  return portalNode;\n}\n/**\n * Portals the floating element into a given container element — by default,\n * outside of the app root and into the body.\n * @see https://floating-ui.com/docs/FloatingPortal\n */\nfunction FloatingPortal(_ref) {\n  let {\n    children,\n    id,\n    root = null,\n    preserveTabOrder = true\n  } = _ref;\n  const portalNode = useFloatingPortalNode({\n    id,\n    root\n  });\n  const [focusManagerState, setFocusManagerState] = React.useState(null);\n  const beforeOutsideRef = React.useRef(null);\n  const afterOutsideRef = React.useRef(null);\n  const beforeInsideRef = React.useRef(null);\n  const afterInsideRef = React.useRef(null);\n  const shouldRenderGuards =\n  // The FocusManager and therefore floating element are currently open/\n  // rendered.\n  !!focusManagerState &&\n  // Guards are only for non-modal focus management.\n  !focusManagerState.modal &&\n  // Don't render if unmount is transitioning.\n  focusManagerState.open && preserveTabOrder && !!(root || portalNode);\n\n  // https://codesandbox.io/s/tabbable-portal-f4tng?file=/src/TabbablePortal.tsx\n  React.useEffect(() => {\n    if (!portalNode || !preserveTabOrder || focusManagerState != null && focusManagerState.modal) {\n      return;\n    }\n\n    // Make sure elements inside the portal element are tabbable only when the\n    // portal has already been focused, either by tabbing into a focus trap\n    // element outside or using the mouse.\n    function onFocus(event) {\n      if (portalNode && isOutsideEvent(event)) {\n        const focusing = event.type === 'focusin';\n        const manageFocus = focusing ? enableFocusInside : disableFocusInside;\n        manageFocus(portalNode);\n      }\n    }\n    // Listen to the event on the capture phase so they run before the focus\n    // trap elements onFocus prop is called.\n    portalNode.addEventListener('focusin', onFocus, true);\n    portalNode.addEventListener('focusout', onFocus, true);\n    return () => {\n      portalNode.removeEventListener('focusin', onFocus, true);\n      portalNode.removeEventListener('focusout', onFocus, true);\n    };\n  }, [portalNode, preserveTabOrder, focusManagerState == null ? void 0 : focusManagerState.modal]);\n  return /*#__PURE__*/React.createElement(PortalContext.Provider, {\n    value: React.useMemo(() => ({\n      preserveTabOrder,\n      beforeOutsideRef,\n      afterOutsideRef,\n      beforeInsideRef,\n      afterInsideRef,\n      portalNode,\n      setFocusManagerState\n    }), [preserveTabOrder, portalNode])\n  }, shouldRenderGuards && portalNode && /*#__PURE__*/React.createElement(FocusGuard, {\n    \"data-type\": \"outside\",\n    ref: beforeOutsideRef,\n    onFocus: event => {\n      if (isOutsideEvent(event, portalNode)) {\n        var _beforeInsideRef$curr;\n        (_beforeInsideRef$curr = beforeInsideRef.current) == null ? void 0 : _beforeInsideRef$curr.focus();\n      } else {\n        const prevTabbable = getPreviousTabbable() || (focusManagerState == null ? void 0 : focusManagerState.refs.domReference.current);\n        prevTabbable == null ? void 0 : prevTabbable.focus();\n      }\n    }\n  }), shouldRenderGuards && portalNode && /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-owns\": portalNode.id,\n    style: HIDDEN_STYLES\n  }), portalNode && /*#__PURE__*/createPortal(children, portalNode), shouldRenderGuards && portalNode && /*#__PURE__*/React.createElement(FocusGuard, {\n    \"data-type\": \"outside\",\n    ref: afterOutsideRef,\n    onFocus: event => {\n      if (isOutsideEvent(event, portalNode)) {\n        var _afterInsideRef$curre;\n        (_afterInsideRef$curre = afterInsideRef.current) == null ? void 0 : _afterInsideRef$curre.focus();\n      } else {\n        const nextTabbable = getNextTabbable() || (focusManagerState == null ? void 0 : focusManagerState.refs.domReference.current);\n        nextTabbable == null ? void 0 : nextTabbable.focus();\n        (focusManagerState == null ? void 0 : focusManagerState.closeOnFocusOut) && (focusManagerState == null ? void 0 : focusManagerState.onOpenChange(false, event.nativeEvent));\n      }\n    }\n  }));\n}\nconst usePortalContext = () => React.useContext(PortalContext);\n\nconst VisuallyHiddenDismiss = /*#__PURE__*/React.forwardRef(function VisuallyHiddenDismiss(props, ref) {\n  return /*#__PURE__*/React.createElement(\"button\", _extends({}, props, {\n    type: \"button\",\n    ref: ref,\n    tabIndex: -1,\n    style: HIDDEN_STYLES\n  }));\n});\n/**\n * Provides focus management for the floating element.\n * @see https://floating-ui.com/docs/FloatingFocusManager\n */\nfunction FloatingFocusManager(props) {\n  const {\n    context,\n    children,\n    disabled = false,\n    order = ['content'],\n    guards: _guards = true,\n    initialFocus = 0,\n    returnFocus = true,\n    modal = true,\n    visuallyHiddenDismiss = false,\n    closeOnFocusOut = true\n  } = props;\n  const {\n    open,\n    refs,\n    nodeId,\n    onOpenChange,\n    events,\n    dataRef,\n    elements: {\n      domReference,\n      floating\n    }\n  } = context;\n\n  // Force the guards to be rendered if the `inert` attribute is not supported.\n  const guards = supportsInert() ? _guards : true;\n  const orderRef = useLatestRef(order);\n  const initialFocusRef = useLatestRef(initialFocus);\n  const returnFocusRef = useLatestRef(returnFocus);\n  const tree = useFloatingTree();\n  const portalContext = usePortalContext();\n\n  // Controlled by `useListNavigation`.\n  const ignoreInitialFocus = typeof initialFocus === 'number' && initialFocus < 0;\n  const startDismissButtonRef = React.useRef(null);\n  const endDismissButtonRef = React.useRef(null);\n  const preventReturnFocusRef = React.useRef(false);\n  const previouslyFocusedElementRef = React.useRef(null);\n  const isPointerDownRef = React.useRef(false);\n  const isInsidePortal = portalContext != null;\n\n  // If the reference is a combobox and is typeable (e.g. input/textarea),\n  // there are different focus semantics. The guards should not be rendered, but\n  // aria-hidden should be applied to all nodes still. Further, the visually\n  // hidden dismiss button should only appear at the end of the list, not the\n  // start.\n  const isTypeableCombobox = domReference && domReference.getAttribute('role') === 'combobox' && isTypeableElement(domReference);\n  const getTabbableContent = React.useCallback(function (container) {\n    if (container === void 0) {\n      container = floating;\n    }\n    return container ? tabbable(container, getTabbableOptions()) : [];\n  }, [floating]);\n  const getTabbableElements = React.useCallback(container => {\n    const content = getTabbableContent(container);\n    return orderRef.current.map(type => {\n      if (domReference && type === 'reference') {\n        return domReference;\n      }\n      if (floating && type === 'floating') {\n        return floating;\n      }\n      return content;\n    }).filter(Boolean).flat();\n  }, [domReference, floating, orderRef, getTabbableContent]);\n  React.useEffect(() => {\n    if (disabled || !modal) return;\n    function onKeyDown(event) {\n      if (event.key === 'Tab') {\n        // The focus guards have nothing to focus, so we need to stop the event.\n        if (contains(floating, activeElement(getDocument(floating))) && getTabbableContent().length === 0 && !isTypeableCombobox) {\n          stopEvent(event);\n        }\n        const els = getTabbableElements();\n        const target = getTarget(event);\n        if (orderRef.current[0] === 'reference' && target === domReference) {\n          stopEvent(event);\n          if (event.shiftKey) {\n            enqueueFocus(els[els.length - 1]);\n          } else {\n            enqueueFocus(els[1]);\n          }\n        }\n        if (orderRef.current[1] === 'floating' && target === floating && event.shiftKey) {\n          stopEvent(event);\n          enqueueFocus(els[0]);\n        }\n      }\n    }\n    const doc = getDocument(floating);\n    doc.addEventListener('keydown', onKeyDown);\n    return () => {\n      doc.removeEventListener('keydown', onKeyDown);\n    };\n  }, [disabled, domReference, floating, modal, orderRef, refs, isTypeableCombobox, getTabbableContent, getTabbableElements]);\n  React.useEffect(() => {\n    if (disabled || !closeOnFocusOut) return;\n\n    // In Safari, buttons lose focus when pressing them.\n    function handlePointerDown() {\n      isPointerDownRef.current = true;\n      setTimeout(() => {\n        isPointerDownRef.current = false;\n      });\n    }\n    function handleFocusOutside(event) {\n      const relatedTarget = event.relatedTarget;\n      queueMicrotask(() => {\n        const movedToUnrelatedNode = !(contains(domReference, relatedTarget) || contains(floating, relatedTarget) || contains(relatedTarget, floating) || contains(portalContext == null ? void 0 : portalContext.portalNode, relatedTarget) || relatedTarget != null && relatedTarget.hasAttribute(createAttribute('focus-guard')) || tree && (getChildren(tree.nodesRef.current, nodeId).find(node => {\n          var _node$context, _node$context2;\n          return contains((_node$context = node.context) == null ? void 0 : _node$context.elements.floating, relatedTarget) || contains((_node$context2 = node.context) == null ? void 0 : _node$context2.elements.domReference, relatedTarget);\n        }) || getAncestors(tree.nodesRef.current, nodeId).find(node => {\n          var _node$context3, _node$context4;\n          return ((_node$context3 = node.context) == null ? void 0 : _node$context3.elements.floating) === relatedTarget || ((_node$context4 = node.context) == null ? void 0 : _node$context4.elements.domReference) === relatedTarget;\n        })));\n\n        // Focus did not move inside the floating tree, and there are no tabbable\n        // portal guards to handle closing.\n        if (relatedTarget && movedToUnrelatedNode && !isPointerDownRef.current &&\n        // Fix React 18 Strict Mode returnFocus due to double rendering.\n        relatedTarget !== previouslyFocusedElementRef.current) {\n          preventReturnFocusRef.current = true;\n          onOpenChange(false, event);\n        }\n      });\n    }\n    if (floating && isHTMLElement(domReference)) {\n      domReference.addEventListener('focusout', handleFocusOutside);\n      domReference.addEventListener('pointerdown', handlePointerDown);\n      !modal && floating.addEventListener('focusout', handleFocusOutside);\n      return () => {\n        domReference.removeEventListener('focusout', handleFocusOutside);\n        domReference.removeEventListener('pointerdown', handlePointerDown);\n        !modal && floating.removeEventListener('focusout', handleFocusOutside);\n      };\n    }\n  }, [disabled, domReference, floating, modal, nodeId, tree, portalContext, onOpenChange, closeOnFocusOut]);\n  React.useEffect(() => {\n    var _portalContext$portal;\n    if (disabled) return;\n\n    // Don't hide portals nested within the parent portal.\n    const portalNodes = Array.from((portalContext == null ? void 0 : (_portalContext$portal = portalContext.portalNode) == null ? void 0 : _portalContext$portal.querySelectorAll(\"[\" + createAttribute('portal') + \"]\")) || []);\n    if (floating) {\n      const insideElements = [floating, ...portalNodes, startDismissButtonRef.current, endDismissButtonRef.current, orderRef.current.includes('reference') || isTypeableCombobox ? domReference : null].filter(x => x != null);\n      const cleanup = modal ? markOthers(insideElements, guards, !guards) : markOthers(insideElements);\n      return () => {\n        cleanup();\n      };\n    }\n  }, [disabled, domReference, floating, modal, orderRef, portalContext, isTypeableCombobox, guards]);\n  index(() => {\n    if (disabled || !floating) return;\n    const doc = getDocument(floating);\n    const previouslyFocusedElement = activeElement(doc);\n\n    // Wait for any layout effect state setters to execute to set `tabIndex`.\n    queueMicrotask(() => {\n      const focusableElements = getTabbableElements(floating);\n      const initialFocusValue = initialFocusRef.current;\n      const elToFocus = (typeof initialFocusValue === 'number' ? focusableElements[initialFocusValue] : initialFocusValue.current) || floating;\n      const focusAlreadyInsideFloatingEl = contains(floating, previouslyFocusedElement);\n      if (!ignoreInitialFocus && !focusAlreadyInsideFloatingEl && open) {\n        enqueueFocus(elToFocus, {\n          preventScroll: elToFocus === floating\n        });\n      }\n    });\n  }, [disabled, open, floating, ignoreInitialFocus, getTabbableElements, initialFocusRef]);\n  index(() => {\n    if (disabled || !floating) return;\n    let preventReturnFocusScroll = false;\n    const doc = getDocument(floating);\n    const previouslyFocusedElement = activeElement(doc);\n    const contextData = dataRef.current;\n    previouslyFocusedElementRef.current = previouslyFocusedElement;\n\n    // Dismissing via outside press should always ignore `returnFocus` to\n    // prevent unwanted scrolling.\n    function onDismiss(payload) {\n      if (payload.type === 'escapeKey' && refs.domReference.current) {\n        previouslyFocusedElementRef.current = refs.domReference.current;\n      }\n      if (['referencePress', 'escapeKey'].includes(payload.type)) {\n        return;\n      }\n      const returnFocus = payload.data.returnFocus;\n      if (typeof returnFocus === 'object') {\n        preventReturnFocusRef.current = false;\n        preventReturnFocusScroll = returnFocus.preventScroll;\n      } else {\n        preventReturnFocusRef.current = !returnFocus;\n      }\n    }\n    events.on('dismiss', onDismiss);\n    return () => {\n      events.off('dismiss', onDismiss);\n      const activeEl = activeElement(doc);\n      const shouldFocusReference = contains(floating, activeEl) || tree && getChildren(tree.nodesRef.current, nodeId).some(node => {\n        var _node$context5;\n        return contains((_node$context5 = node.context) == null ? void 0 : _node$context5.elements.floating, activeEl);\n      }) || contextData.openEvent && ['click', 'mousedown'].includes(contextData.openEvent.type);\n      if (shouldFocusReference && refs.domReference.current) {\n        previouslyFocusedElementRef.current = refs.domReference.current;\n      }\n      if (\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      returnFocusRef.current && isHTMLElement(previouslyFocusedElementRef.current) && !preventReturnFocusRef.current) {\n        enqueueFocus(previouslyFocusedElementRef.current, {\n          // When dismissing nested floating elements, by the time the rAF has\n          // executed, the menus will all have been unmounted. When they try\n          // to get focused, the calls get ignored — leaving the root\n          // reference focused as desired.\n          cancelPrevious: false,\n          preventScroll: preventReturnFocusScroll\n        });\n      }\n    };\n  }, [disabled, floating, returnFocusRef, dataRef, refs, events, tree, nodeId]);\n\n  // Synchronize the `context` & `modal` value to the FloatingPortal context.\n  // It will decide whether or not it needs to render its own guards.\n  index(() => {\n    if (disabled || !portalContext) return;\n    portalContext.setFocusManagerState({\n      modal,\n      closeOnFocusOut,\n      open,\n      onOpenChange,\n      refs\n    });\n    return () => {\n      portalContext.setFocusManagerState(null);\n    };\n  }, [disabled, portalContext, modal, open, onOpenChange, refs, closeOnFocusOut]);\n  index(() => {\n    if (disabled) return;\n    if (floating && typeof MutationObserver === 'function') {\n      const handleMutation = () => {\n        const tabIndex = floating.getAttribute('tabindex');\n        if (orderRef.current.includes('floating') || activeElement(getDocument(floating)) !== refs.domReference.current && getTabbableContent().length === 0) {\n          if (tabIndex !== '0') {\n            floating.setAttribute('tabindex', '0');\n          }\n        } else if (tabIndex !== '-1') {\n          floating.setAttribute('tabindex', '-1');\n        }\n      };\n      handleMutation();\n      const observer = new MutationObserver(handleMutation);\n      observer.observe(floating, {\n        childList: true,\n        subtree: true,\n        attributes: true\n      });\n      return () => {\n        observer.disconnect();\n      };\n    }\n  }, [disabled, floating, refs, orderRef, getTabbableContent]);\n  function renderDismissButton(location) {\n    if (disabled || !visuallyHiddenDismiss || !modal) {\n      return null;\n    }\n    return /*#__PURE__*/React.createElement(VisuallyHiddenDismiss, {\n      ref: location === 'start' ? startDismissButtonRef : endDismissButtonRef,\n      onClick: event => onOpenChange(false, event.nativeEvent)\n    }, typeof visuallyHiddenDismiss === 'string' ? visuallyHiddenDismiss : 'Dismiss');\n  }\n  const shouldRenderGuards = !disabled && guards && !isTypeableCombobox && (isInsidePortal || modal);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, shouldRenderGuards && /*#__PURE__*/React.createElement(FocusGuard, {\n    \"data-type\": \"inside\",\n    ref: portalContext == null ? void 0 : portalContext.beforeInsideRef,\n    onFocus: event => {\n      if (modal) {\n        const els = getTabbableElements();\n        enqueueFocus(order[0] === 'reference' ? els[0] : els[els.length - 1]);\n      } else if (portalContext != null && portalContext.preserveTabOrder && portalContext.portalNode) {\n        preventReturnFocusRef.current = false;\n        if (isOutsideEvent(event, portalContext.portalNode)) {\n          const nextTabbable = getNextTabbable() || domReference;\n          nextTabbable == null ? void 0 : nextTabbable.focus();\n        } else {\n          var _portalContext$before;\n          (_portalContext$before = portalContext.beforeOutsideRef.current) == null ? void 0 : _portalContext$before.focus();\n        }\n      }\n    }\n  }), !isTypeableCombobox && renderDismissButton('start'), children, renderDismissButton('end'), shouldRenderGuards && /*#__PURE__*/React.createElement(FocusGuard, {\n    \"data-type\": \"inside\",\n    ref: portalContext == null ? void 0 : portalContext.afterInsideRef,\n    onFocus: event => {\n      if (modal) {\n        enqueueFocus(getTabbableElements()[0]);\n      } else if (portalContext != null && portalContext.preserveTabOrder && portalContext.portalNode) {\n        if (closeOnFocusOut) {\n          preventReturnFocusRef.current = true;\n        }\n        if (isOutsideEvent(event, portalContext.portalNode)) {\n          const prevTabbable = getPreviousTabbable() || domReference;\n          prevTabbable == null ? void 0 : prevTabbable.focus();\n        } else {\n          var _portalContext$afterO;\n          (_portalContext$afterO = portalContext.afterOutsideRef.current) == null ? void 0 : _portalContext$afterO.focus();\n        }\n      }\n    }\n  }));\n}\n\nfunction sortByDocumentPosition(a, b) {\n  const position = a.compareDocumentPosition(b);\n  if (position & Node.DOCUMENT_POSITION_FOLLOWING || position & Node.DOCUMENT_POSITION_CONTAINED_BY) {\n    return -1;\n  }\n  if (position & Node.DOCUMENT_POSITION_PRECEDING || position & Node.DOCUMENT_POSITION_CONTAINS) {\n    return 1;\n  }\n  return 0;\n}\nfunction areMapsEqual(map1, map2) {\n  if (map1.size !== map2.size) {\n    return false;\n  }\n  for (const [key, value] of map1.entries()) {\n    if (value !== map2.get(key)) {\n      return false;\n    }\n  }\n  return true;\n}\nconst FloatingListContext = /*#__PURE__*/React.createContext({\n  register: () => {},\n  unregister: () => {},\n  map: /*#__PURE__*/new Map(),\n  elementsRef: {\n    current: []\n  }\n});\n/**\n * Provides context for a list of items within the floating element.\n * @see https://floating-ui.com/docs/FloatingList\n */\nfunction FloatingList(_ref) {\n  let {\n    children,\n    elementsRef,\n    labelsRef\n  } = _ref;\n  const [map, setMap] = React.useState(() => new Map());\n  const register = React.useCallback(node => {\n    setMap(prevMap => new Map(prevMap).set(node, null));\n  }, []);\n  const unregister = React.useCallback(node => {\n    setMap(prevMap => {\n      const map = new Map(prevMap);\n      map.delete(node);\n      return map;\n    });\n  }, []);\n  index(() => {\n    const newMap = new Map(map);\n    const nodes = Array.from(newMap.keys()).sort(sortByDocumentPosition);\n    nodes.forEach((node, index) => {\n      newMap.set(node, index);\n    });\n    if (!areMapsEqual(map, newMap)) {\n      setMap(newMap);\n    }\n  }, [map]);\n  return /*#__PURE__*/React.createElement(FloatingListContext.Provider, {\n    value: React.useMemo(() => ({\n      register,\n      unregister,\n      map,\n      elementsRef,\n      labelsRef\n    }), [register, unregister, map, elementsRef, labelsRef])\n  }, children);\n}\nfunction useListItem(_temp) {\n  let {\n    label\n  } = _temp === void 0 ? {} : _temp;\n  const [index$1, setIndex] = React.useState(null);\n  const componentRef = React.useRef(null);\n  const {\n    register,\n    unregister,\n    map,\n    elementsRef,\n    labelsRef\n  } = React.useContext(FloatingListContext);\n  const ref = React.useCallback(node => {\n    componentRef.current = node;\n    if (index$1 !== null) {\n      elementsRef.current[index$1] = node;\n      if (labelsRef) {\n        var _node$textContent;\n        const isLabelDefined = label !== undefined;\n        labelsRef.current[index$1] = isLabelDefined ? label : (_node$textContent = node == null ? void 0 : node.textContent) != null ? _node$textContent : null;\n      }\n    }\n  }, [index$1, elementsRef, labelsRef, label]);\n  index(() => {\n    const node = componentRef.current;\n    if (node) {\n      register(node);\n      return () => {\n        unregister(node);\n      };\n    }\n  }, [register, unregister]);\n  index(() => {\n    const index = componentRef.current ? map.get(componentRef.current) : null;\n    if (index != null) {\n      setIndex(index);\n    }\n  }, [map]);\n  return React.useMemo(() => ({\n    ref,\n    index: index$1 == null ? -1 : index$1\n  }), [index$1, ref]);\n}\n\nconst identifier = /*#__PURE__*/createAttribute('scroll-lock');\n\n/**\n * Provides base styling for a fixed overlay element to dim content or block\n * pointer events behind a floating element.\n * It's a regular `<div>`, so it can be styled via any CSS solution you prefer.\n * @see https://floating-ui.com/docs/FloatingOverlay\n */\nconst FloatingOverlay = /*#__PURE__*/React.forwardRef(function FloatingOverlay(_ref, ref) {\n  let {\n    lockScroll = false,\n    ...rest\n  } = _ref;\n  index(() => {\n    var _window$visualViewpor, _window$visualViewpor2;\n    if (!lockScroll) {\n      return;\n    }\n    const alreadyLocked = document.body.hasAttribute(identifier);\n    if (alreadyLocked) {\n      return;\n    }\n    document.body.setAttribute(identifier, '');\n\n    // RTL <body> scrollbar\n    const scrollbarX = Math.round(document.documentElement.getBoundingClientRect().left) + document.documentElement.scrollLeft;\n    const paddingProp = scrollbarX ? 'paddingLeft' : 'paddingRight';\n    const scrollbarWidth = window.innerWidth - document.documentElement.clientWidth;\n\n    // Only iOS doesn't respect `overflow: hidden` on document.body, and this\n    // technique has fewer side effects.\n    if (!/iP(hone|ad|od)|iOS/.test(getPlatform())) {\n      Object.assign(document.body.style, {\n        overflow: 'hidden',\n        [paddingProp]: scrollbarWidth + \"px\"\n      });\n      return () => {\n        document.body.removeAttribute(identifier);\n        Object.assign(document.body.style, {\n          overflow: '',\n          [paddingProp]: ''\n        });\n      };\n    }\n\n    // iOS 12 does not support `visualViewport`.\n    const offsetLeft = ((_window$visualViewpor = window.visualViewport) == null ? void 0 : _window$visualViewpor.offsetLeft) || 0;\n    const offsetTop = ((_window$visualViewpor2 = window.visualViewport) == null ? void 0 : _window$visualViewpor2.offsetTop) || 0;\n    const scrollX = window.pageXOffset;\n    const scrollY = window.pageYOffset;\n    Object.assign(document.body.style, {\n      position: 'fixed',\n      overflow: 'hidden',\n      top: -(scrollY - Math.floor(offsetTop)) + \"px\",\n      left: -(scrollX - Math.floor(offsetLeft)) + \"px\",\n      right: '0',\n      [paddingProp]: scrollbarWidth + \"px\"\n    });\n    return () => {\n      Object.assign(document.body.style, {\n        position: '',\n        overflow: '',\n        top: '',\n        left: '',\n        right: '',\n        [paddingProp]: ''\n      });\n      document.body.removeAttribute(identifier);\n      window.scrollTo(scrollX, scrollY);\n    };\n  }, [lockScroll]);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref\n  }, rest, {\n    style: {\n      position: 'fixed',\n      overflow: 'auto',\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      ...rest.style\n    }\n  }));\n});\n\nfunction isButtonTarget(event) {\n  return isHTMLElement(event.target) && event.target.tagName === 'BUTTON';\n}\nfunction isSpaceIgnored(element) {\n  return isTypeableElement(element);\n}\n/**\n * Opens or closes the floating element when clicking the reference element.\n * @see https://floating-ui.com/docs/useClick\n */\nfunction useClick(context, props) {\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    open,\n    onOpenChange,\n    dataRef,\n    elements: {\n      domReference\n    }\n  } = context;\n  const {\n    enabled = true,\n    event: eventOption = 'click',\n    toggle = true,\n    ignoreMouse = false,\n    keyboardHandlers = true\n  } = props;\n  const pointerTypeRef = React.useRef();\n  const didKeyDownRef = React.useRef(false);\n  return React.useMemo(() => {\n    if (!enabled) return {};\n    return {\n      reference: {\n        onPointerDown(event) {\n          pointerTypeRef.current = event.pointerType;\n        },\n        onMouseDown(event) {\n          // Ignore all buttons except for the \"main\" button.\n          // https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button\n          if (event.button !== 0) {\n            return;\n          }\n          if (isMouseLikePointerType(pointerTypeRef.current, true) && ignoreMouse) {\n            return;\n          }\n          if (eventOption === 'click') {\n            return;\n          }\n          if (open && toggle && (dataRef.current.openEvent ? dataRef.current.openEvent.type === 'mousedown' : true)) {\n            onOpenChange(false, event.nativeEvent);\n          } else {\n            // Prevent stealing focus from the floating element\n            event.preventDefault();\n            onOpenChange(true, event.nativeEvent);\n          }\n        },\n        onClick(event) {\n          if (eventOption === 'mousedown' && pointerTypeRef.current) {\n            pointerTypeRef.current = undefined;\n            return;\n          }\n          if (isMouseLikePointerType(pointerTypeRef.current, true) && ignoreMouse) {\n            return;\n          }\n          if (open && toggle && (dataRef.current.openEvent ? dataRef.current.openEvent.type === 'click' : true)) {\n            onOpenChange(false, event.nativeEvent);\n          } else {\n            onOpenChange(true, event.nativeEvent);\n          }\n        },\n        onKeyDown(event) {\n          pointerTypeRef.current = undefined;\n          if (event.defaultPrevented || !keyboardHandlers || isButtonTarget(event)) {\n            return;\n          }\n          if (event.key === ' ' && !isSpaceIgnored(domReference)) {\n            // Prevent scrolling\n            event.preventDefault();\n            didKeyDownRef.current = true;\n          }\n          if (event.key === 'Enter') {\n            if (open && toggle) {\n              onOpenChange(false, event.nativeEvent);\n            } else {\n              onOpenChange(true, event.nativeEvent);\n            }\n          }\n        },\n        onKeyUp(event) {\n          if (event.defaultPrevented || !keyboardHandlers || isButtonTarget(event) || isSpaceIgnored(domReference)) {\n            return;\n          }\n          if (event.key === ' ' && didKeyDownRef.current) {\n            didKeyDownRef.current = false;\n            if (open && toggle) {\n              onOpenChange(false, event.nativeEvent);\n            } else {\n              onOpenChange(true, event.nativeEvent);\n            }\n          }\n        }\n      }\n    };\n  }, [enabled, dataRef, eventOption, ignoreMouse, keyboardHandlers, domReference, toggle, open, onOpenChange]);\n}\n\n// `toString()` prevents bundlers from trying to `import { useInsertionEffect } from 'react'`\nconst useInsertionEffect = React[/*#__PURE__*/'useInsertionEffect'.toString()];\nconst useSafeInsertionEffect = useInsertionEffect || (fn => fn());\nfunction useEffectEvent(callback) {\n  const ref = React.useRef(() => {\n    if (process.env.NODE_ENV !== \"production\") {\n      throw new Error('Cannot call an event handler while rendering.');\n    }\n  });\n  useSafeInsertionEffect(() => {\n    ref.current = callback;\n  });\n  return React.useCallback(function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return ref.current == null ? void 0 : ref.current(...args);\n  }, []);\n}\n\nfunction createVirtualElement(domRef, data) {\n  let offsetX = null;\n  let offsetY = null;\n  let isAutoUpdateEvent = false;\n  return {\n    contextElement: domRef.current || undefined,\n    getBoundingClientRect() {\n      var _domRef$current, _data$dataRef$current;\n      const domRect = ((_domRef$current = domRef.current) == null ? void 0 : _domRef$current.getBoundingClientRect()) || {\n        width: 0,\n        height: 0,\n        x: 0,\n        y: 0\n      };\n      const isXAxis = data.axis === 'x' || data.axis === 'both';\n      const isYAxis = data.axis === 'y' || data.axis === 'both';\n      const canTrackCursorOnAutoUpdate = ['mouseenter', 'mousemove'].includes(((_data$dataRef$current = data.dataRef.current.openEvent) == null ? void 0 : _data$dataRef$current.type) || '') && data.pointerType !== 'touch';\n      let width = domRect.width;\n      let height = domRect.height;\n      let x = domRect.x;\n      let y = domRect.y;\n      if (offsetX == null && data.x && isXAxis) {\n        offsetX = domRect.x - data.x;\n      }\n      if (offsetY == null && data.y && isYAxis) {\n        offsetY = domRect.y - data.y;\n      }\n      x -= offsetX || 0;\n      y -= offsetY || 0;\n      width = 0;\n      height = 0;\n      if (!isAutoUpdateEvent || canTrackCursorOnAutoUpdate) {\n        width = data.axis === 'y' ? domRect.width : 0;\n        height = data.axis === 'x' ? domRect.height : 0;\n        x = isXAxis && data.x != null ? data.x : x;\n        y = isYAxis && data.y != null ? data.y : y;\n      } else if (isAutoUpdateEvent && !canTrackCursorOnAutoUpdate) {\n        height = data.axis === 'x' ? domRect.height : height;\n        width = data.axis === 'y' ? domRect.width : width;\n      }\n      isAutoUpdateEvent = true;\n      return {\n        width,\n        height,\n        x,\n        y,\n        top: y,\n        right: x + width,\n        bottom: y + height,\n        left: x\n      };\n    }\n  };\n}\nfunction isMouseBasedEvent(event) {\n  return event != null && event.clientX != null;\n}\n/**\n * Positions the floating element relative to a client point (in the viewport),\n * such as the mouse position. By default, it follows the mouse cursor.\n * @see https://floating-ui.com/docs/useClientPoint\n */\nfunction useClientPoint(context, props) {\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    open,\n    refs,\n    dataRef,\n    elements: {\n      floating\n    }\n  } = context;\n  const {\n    enabled = true,\n    axis = 'both',\n    x = null,\n    y = null\n  } = props;\n  const initialRef = React.useRef(false);\n  const cleanupListenerRef = React.useRef(null);\n  const [pointerType, setPointerType] = React.useState();\n  const [reactive, setReactive] = React.useState([]);\n  const setReference = useEffectEvent((x, y) => {\n    if (initialRef.current) return;\n\n    // Prevent setting if the open event was not a mouse-like one\n    // (e.g. focus to open, then hover over the reference element).\n    // Only apply if the event exists.\n    if (dataRef.current.openEvent && !isMouseBasedEvent(dataRef.current.openEvent)) {\n      return;\n    }\n    refs.setPositionReference(createVirtualElement(refs.domReference, {\n      x,\n      y,\n      axis,\n      dataRef,\n      pointerType\n    }));\n  });\n  const handleReferenceEnterOrMove = useEffectEvent(event => {\n    if (x != null || y != null) return;\n    if (!open) {\n      setReference(event.clientX, event.clientY);\n    } else if (!cleanupListenerRef.current) {\n      // If there's no cleanup, there's no listener, but we want to ensure\n      // we add the listener if the cursor landed on the floating element and\n      // then back on the reference (i.e. it's interactive).\n      setReactive([]);\n    }\n  });\n\n  // If the pointer is a mouse-like pointer, we want to continue following the\n  // mouse even if the floating element is transitioning out. On touch\n  // devices, this is undesirable because the floating element will move to\n  // the dismissal touch point.\n  const openCheck = isMouseLikePointerType(pointerType) ? floating : open;\n  const addListener = React.useCallback(() => {\n    // Explicitly specified `x`/`y` coordinates shouldn't add a listener.\n    if (!openCheck || !enabled || x != null || y != null) return;\n    const win = getWindow(refs.floating.current);\n    function handleMouseMove(event) {\n      const target = getTarget(event);\n      if (!contains(refs.floating.current, target)) {\n        setReference(event.clientX, event.clientY);\n      } else {\n        win.removeEventListener('mousemove', handleMouseMove);\n        cleanupListenerRef.current = null;\n      }\n    }\n    if (!dataRef.current.openEvent || isMouseBasedEvent(dataRef.current.openEvent)) {\n      win.addEventListener('mousemove', handleMouseMove);\n      const cleanup = () => {\n        win.removeEventListener('mousemove', handleMouseMove);\n        cleanupListenerRef.current = null;\n      };\n      cleanupListenerRef.current = cleanup;\n      return cleanup;\n    }\n    refs.setPositionReference(refs.domReference.current);\n  }, [dataRef, enabled, openCheck, refs, setReference, x, y]);\n  React.useEffect(() => {\n    return addListener();\n  }, [addListener, reactive]);\n  React.useEffect(() => {\n    if (enabled && !floating) {\n      initialRef.current = false;\n    }\n  }, [enabled, floating]);\n  React.useEffect(() => {\n    if (!enabled && open) {\n      initialRef.current = true;\n    }\n  }, [enabled, open]);\n  index(() => {\n    if (enabled && (x != null || y != null)) {\n      initialRef.current = false;\n      setReference(x, y);\n    }\n  }, [enabled, x, y, setReference]);\n  return React.useMemo(() => {\n    if (!enabled) return {};\n    function setPointerTypeRef(_ref) {\n      let {\n        pointerType\n      } = _ref;\n      setPointerType(pointerType);\n    }\n    return {\n      reference: {\n        onPointerDown: setPointerTypeRef,\n        onPointerEnter: setPointerTypeRef,\n        onMouseMove: handleReferenceEnterOrMove,\n        onMouseEnter: handleReferenceEnterOrMove\n      }\n    };\n  }, [enabled, handleReferenceEnterOrMove]);\n}\n\nconst bubbleHandlerKeys = {\n  pointerdown: 'onPointerDown',\n  mousedown: 'onMouseDown',\n  click: 'onClick'\n};\nconst captureHandlerKeys = {\n  pointerdown: 'onPointerDownCapture',\n  mousedown: 'onMouseDownCapture',\n  click: 'onClickCapture'\n};\nconst normalizeBubblesProp = bubbles => {\n  var _bubbles$escapeKey, _bubbles$outsidePress;\n  return {\n    escapeKeyBubbles: typeof bubbles === 'boolean' ? bubbles : (_bubbles$escapeKey = bubbles == null ? void 0 : bubbles.escapeKey) != null ? _bubbles$escapeKey : false,\n    outsidePressBubbles: typeof bubbles === 'boolean' ? bubbles : (_bubbles$outsidePress = bubbles == null ? void 0 : bubbles.outsidePress) != null ? _bubbles$outsidePress : true\n  };\n};\n/**\n * Closes the floating element when a dismissal is requested — by default, when\n * the user presses the `escape` key or outside of the floating element.\n * @see https://floating-ui.com/docs/useDismiss\n */\nfunction useDismiss(context, props) {\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    open,\n    onOpenChange,\n    events,\n    nodeId,\n    elements: {\n      reference,\n      domReference,\n      floating\n    },\n    dataRef\n  } = context;\n  const {\n    enabled = true,\n    escapeKey = true,\n    outsidePress: unstable_outsidePress = true,\n    outsidePressEvent = 'pointerdown',\n    referencePress = false,\n    referencePressEvent = 'pointerdown',\n    ancestorScroll = false,\n    bubbles\n  } = props;\n  const tree = useFloatingTree();\n  const nested = useFloatingParentNodeId() != null;\n  const outsidePressFn = useEffectEvent(typeof unstable_outsidePress === 'function' ? unstable_outsidePress : () => false);\n  const outsidePress = typeof unstable_outsidePress === 'function' ? outsidePressFn : unstable_outsidePress;\n  const insideReactTreeRef = React.useRef(false);\n  const {\n    escapeKeyBubbles,\n    outsidePressBubbles\n  } = normalizeBubblesProp(bubbles);\n  const closeOnEscapeKeyDown = useEffectEvent(event => {\n    if (!open || !enabled || !escapeKey || event.key !== 'Escape') {\n      return;\n    }\n    const children = tree ? getChildren(tree.nodesRef.current, nodeId) : [];\n    if (!escapeKeyBubbles) {\n      event.stopPropagation();\n      if (children.length > 0) {\n        let shouldDismiss = true;\n        children.forEach(child => {\n          var _child$context;\n          if ((_child$context = child.context) != null && _child$context.open && !child.context.dataRef.current.__escapeKeyBubbles) {\n            shouldDismiss = false;\n            return;\n          }\n        });\n        if (!shouldDismiss) {\n          return;\n        }\n      }\n    }\n    events.emit('dismiss', {\n      type: 'escapeKey',\n      data: {\n        returnFocus: {\n          preventScroll: false\n        }\n      }\n    });\n    onOpenChange(false, isReactEvent(event) ? event.nativeEvent : event);\n  });\n  const closeOnPressOutside = useEffectEvent(event => {\n    // Given developers can stop the propagation of the synthetic event,\n    // we can only be confident with a positive value.\n    const insideReactTree = insideReactTreeRef.current;\n    insideReactTreeRef.current = false;\n    if (insideReactTree) {\n      return;\n    }\n    if (typeof outsidePress === 'function' && !outsidePress(event)) {\n      return;\n    }\n    const target = getTarget(event);\n    const inertSelector = \"[\" + createAttribute('inert') + \"]\";\n    const markers = getDocument(floating).querySelectorAll(inertSelector);\n    let targetRootAncestor = isElement(target) ? target : null;\n    while (targetRootAncestor && !isLastTraversableNode(targetRootAncestor)) {\n      const nextParent = getParentNode(targetRootAncestor);\n      if (nextParent === getDocument(floating).body || !isElement(nextParent)) {\n        break;\n      } else {\n        targetRootAncestor = nextParent;\n      }\n    }\n\n    // Check if the click occurred on a third-party element injected after the\n    // floating element rendered.\n    if (markers.length && isElement(target) && !isRootElement(target) &&\n    // Clicked on a direct ancestor (e.g. FloatingOverlay).\n    !contains(target, floating) &&\n    // If the target root element contains none of the markers, then the\n    // element was injected after the floating element rendered.\n    Array.from(markers).every(marker => !contains(targetRootAncestor, marker))) {\n      return;\n    }\n\n    // Check if the click occurred on the scrollbar\n    if (isHTMLElement(target) && floating) {\n      // In Firefox, `target.scrollWidth > target.clientWidth` for inline\n      // elements.\n      const canScrollX = target.clientWidth > 0 && target.scrollWidth > target.clientWidth;\n      const canScrollY = target.clientHeight > 0 && target.scrollHeight > target.clientHeight;\n      let xCond = canScrollY && event.offsetX > target.clientWidth;\n\n      // In some browsers it is possible to change the <body> (or window)\n      // scrollbar to the left side, but is very rare and is difficult to\n      // check for. Plus, for modal dialogs with backdrops, it is more\n      // important that the backdrop is checked but not so much the window.\n      if (canScrollY) {\n        const isRTL = getComputedStyle(target).direction === 'rtl';\n        if (isRTL) {\n          xCond = event.offsetX <= target.offsetWidth - target.clientWidth;\n        }\n      }\n      if (xCond || canScrollX && event.offsetY > target.clientHeight) {\n        return;\n      }\n    }\n    const targetIsInsideChildren = tree && getChildren(tree.nodesRef.current, nodeId).some(node => {\n      var _node$context;\n      return isEventTargetWithin(event, (_node$context = node.context) == null ? void 0 : _node$context.elements.floating);\n    });\n    if (isEventTargetWithin(event, floating) || isEventTargetWithin(event, domReference) || targetIsInsideChildren) {\n      return;\n    }\n    const children = tree ? getChildren(tree.nodesRef.current, nodeId) : [];\n    if (children.length > 0) {\n      let shouldDismiss = true;\n      children.forEach(child => {\n        var _child$context2;\n        if ((_child$context2 = child.context) != null && _child$context2.open && !child.context.dataRef.current.__outsidePressBubbles) {\n          shouldDismiss = false;\n          return;\n        }\n      });\n      if (!shouldDismiss) {\n        return;\n      }\n    }\n    events.emit('dismiss', {\n      type: 'outsidePress',\n      data: {\n        returnFocus: nested ? {\n          preventScroll: true\n        } : isVirtualClick(event) || isVirtualPointerEvent(event)\n      }\n    });\n    onOpenChange(false, event);\n  });\n  React.useEffect(() => {\n    if (!open || !enabled) {\n      return;\n    }\n    dataRef.current.__escapeKeyBubbles = escapeKeyBubbles;\n    dataRef.current.__outsidePressBubbles = outsidePressBubbles;\n    function onScroll(event) {\n      onOpenChange(false, event);\n    }\n    const doc = getDocument(floating);\n    escapeKey && doc.addEventListener('keydown', closeOnEscapeKeyDown);\n    outsidePress && doc.addEventListener(outsidePressEvent, closeOnPressOutside);\n    let ancestors = [];\n    if (ancestorScroll) {\n      if (isElement(domReference)) {\n        ancestors = getOverflowAncestors(domReference);\n      }\n      if (isElement(floating)) {\n        ancestors = ancestors.concat(getOverflowAncestors(floating));\n      }\n      if (!isElement(reference) && reference && reference.contextElement) {\n        ancestors = ancestors.concat(getOverflowAncestors(reference.contextElement));\n      }\n    }\n\n    // Ignore the visual viewport for scrolling dismissal (allow pinch-zoom)\n    ancestors = ancestors.filter(ancestor => {\n      var _doc$defaultView;\n      return ancestor !== ((_doc$defaultView = doc.defaultView) == null ? void 0 : _doc$defaultView.visualViewport);\n    });\n    ancestors.forEach(ancestor => {\n      ancestor.addEventListener('scroll', onScroll, {\n        passive: true\n      });\n    });\n    return () => {\n      escapeKey && doc.removeEventListener('keydown', closeOnEscapeKeyDown);\n      outsidePress && doc.removeEventListener(outsidePressEvent, closeOnPressOutside);\n      ancestors.forEach(ancestor => {\n        ancestor.removeEventListener('scroll', onScroll);\n      });\n    };\n  }, [dataRef, floating, domReference, reference, escapeKey, outsidePress, outsidePressEvent, open, onOpenChange, ancestorScroll, enabled, escapeKeyBubbles, outsidePressBubbles, closeOnEscapeKeyDown, closeOnPressOutside]);\n  React.useEffect(() => {\n    insideReactTreeRef.current = false;\n  }, [outsidePress, outsidePressEvent]);\n  return React.useMemo(() => {\n    if (!enabled) {\n      return {};\n    }\n    return {\n      reference: {\n        onKeyDown: closeOnEscapeKeyDown,\n        [bubbleHandlerKeys[referencePressEvent]]: event => {\n          if (referencePress) {\n            events.emit('dismiss', {\n              type: 'referencePress',\n              data: {\n                returnFocus: false\n              }\n            });\n            onOpenChange(false, event.nativeEvent);\n          }\n        }\n      },\n      floating: {\n        onKeyDown: closeOnEscapeKeyDown,\n        [captureHandlerKeys[outsidePressEvent]]: () => {\n          insideReactTreeRef.current = true;\n        }\n      }\n    };\n  }, [enabled, events, referencePress, outsidePressEvent, referencePressEvent, onOpenChange, closeOnEscapeKeyDown]);\n}\n\nlet devMessageSet;\nif (process.env.NODE_ENV !== \"production\") {\n  devMessageSet = /*#__PURE__*/new Set();\n}\n\n/**\n * Provides data to position a floating element and context to add interactions.\n * @see https://floating-ui.com/docs/react\n */\nfunction useFloating(options) {\n  var _options$elements2;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    open = false,\n    onOpenChange: unstable_onOpenChange,\n    nodeId\n  } = options;\n  if (process.env.NODE_ENV !== \"production\") {\n    var _options$elements;\n    const err = 'Floating UI: Cannot pass a virtual element to the ' + '`elements.reference` option, as it must be a real DOM element. ' + 'Use `refs.setPositionReference` instead.';\n    if ((_options$elements = options.elements) != null && _options$elements.reference && !isElement(options.elements.reference)) {\n      var _devMessageSet;\n      if (!((_devMessageSet = devMessageSet) != null && _devMessageSet.has(err))) {\n        var _devMessageSet2;\n        (_devMessageSet2 = devMessageSet) == null ? void 0 : _devMessageSet2.add(err);\n        console.error(err);\n      }\n    }\n  }\n  const [_domReference, setDomReference] = React.useState(null);\n  const domReference = ((_options$elements2 = options.elements) == null ? void 0 : _options$elements2.reference) || _domReference;\n  const position = useFloating$1(options);\n  const tree = useFloatingTree();\n  const onOpenChange = useEffectEvent((open, event) => {\n    if (open) {\n      dataRef.current.openEvent = event;\n    }\n    unstable_onOpenChange == null ? void 0 : unstable_onOpenChange(open, event);\n  });\n  const domReferenceRef = React.useRef(null);\n  const dataRef = React.useRef({});\n  const events = React.useState(() => createPubSub())[0];\n  const floatingId = useId();\n  const setPositionReference = React.useCallback(node => {\n    const positionReference = isElement(node) ? {\n      getBoundingClientRect: () => node.getBoundingClientRect(),\n      contextElement: node\n    } : node;\n    position.refs.setReference(positionReference);\n  }, [position.refs]);\n  const setReference = React.useCallback(node => {\n    if (isElement(node) || node === null) {\n      domReferenceRef.current = node;\n      setDomReference(node);\n    }\n\n    // Backwards-compatibility for passing a virtual element to `reference`\n    // after it has set the DOM reference.\n    if (isElement(position.refs.reference.current) || position.refs.reference.current === null ||\n    // Don't allow setting virtual elements using the old technique back to\n    // `null` to support `positionReference` + an unstable `reference`\n    // callback ref.\n    node !== null && !isElement(node)) {\n      position.refs.setReference(node);\n    }\n  }, [position.refs]);\n  const refs = React.useMemo(() => ({\n    ...position.refs,\n    setReference,\n    setPositionReference,\n    domReference: domReferenceRef\n  }), [position.refs, setReference, setPositionReference]);\n  const elements = React.useMemo(() => ({\n    ...position.elements,\n    domReference: domReference\n  }), [position.elements, domReference]);\n  const context = React.useMemo(() => ({\n    ...position,\n    refs,\n    elements,\n    dataRef,\n    nodeId,\n    floatingId,\n    events,\n    open,\n    onOpenChange\n  }), [position, nodeId, floatingId, events, open, onOpenChange, refs, elements]);\n  index(() => {\n    const node = tree == null ? void 0 : tree.nodesRef.current.find(node => node.id === nodeId);\n    if (node) {\n      node.context = context;\n    }\n  });\n  return React.useMemo(() => ({\n    ...position,\n    context,\n    refs,\n    elements\n  }), [position, refs, elements, context]);\n}\n\n/**\n * Opens the floating element while the reference element has focus, like CSS\n * `:focus`.\n * @see https://floating-ui.com/docs/useFocus\n */\nfunction useFocus(context, props) {\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    open,\n    onOpenChange,\n    dataRef,\n    events,\n    refs,\n    elements: {\n      floating,\n      domReference\n    }\n  } = context;\n  const {\n    enabled = true,\n    keyboardOnly = true\n  } = props;\n  const pointerTypeRef = React.useRef('');\n  const blockFocusRef = React.useRef(false);\n  const timeoutRef = React.useRef();\n  React.useEffect(() => {\n    if (!enabled) {\n      return;\n    }\n    const doc = getDocument(floating);\n    const win = doc.defaultView || window;\n\n    // If the reference was focused and the user left the tab/window, and the\n    // floating element was not open, the focus should be blocked when they\n    // return to the tab/window.\n    function onBlur() {\n      if (!open && isHTMLElement(domReference) && domReference === activeElement(getDocument(domReference))) {\n        blockFocusRef.current = true;\n      }\n    }\n    win.addEventListener('blur', onBlur);\n    return () => {\n      win.removeEventListener('blur', onBlur);\n    };\n  }, [floating, domReference, open, enabled]);\n  React.useEffect(() => {\n    if (!enabled) {\n      return;\n    }\n    function onDismiss(payload) {\n      if (payload.type === 'referencePress' || payload.type === 'escapeKey') {\n        blockFocusRef.current = true;\n      }\n    }\n    events.on('dismiss', onDismiss);\n    return () => {\n      events.off('dismiss', onDismiss);\n    };\n  }, [events, enabled]);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(timeoutRef.current);\n    };\n  }, []);\n  return React.useMemo(() => {\n    if (!enabled) {\n      return {};\n    }\n    return {\n      reference: {\n        onPointerDown(_ref) {\n          let {\n            pointerType\n          } = _ref;\n          pointerTypeRef.current = pointerType;\n          blockFocusRef.current = !!(pointerType && keyboardOnly);\n        },\n        onMouseLeave() {\n          blockFocusRef.current = false;\n        },\n        onFocus(event) {\n          var _dataRef$current$open;\n          if (blockFocusRef.current) {\n            return;\n          }\n\n          // Dismiss with click should ignore the subsequent `focus` trigger,\n          // but only if the click originated inside the reference element.\n          if (event.type === 'focus' && ((_dataRef$current$open = dataRef.current.openEvent) == null ? void 0 : _dataRef$current$open.type) === 'mousedown' && isEventTargetWithin(dataRef.current.openEvent, domReference)) {\n            return;\n          }\n          onOpenChange(true, event.nativeEvent);\n        },\n        onBlur(event) {\n          blockFocusRef.current = false;\n          const relatedTarget = event.relatedTarget;\n\n          // Hit the non-modal focus management portal guard. Focus will be\n          // moved into the floating element immediately after.\n          const movedToFocusGuard = isElement(relatedTarget) && relatedTarget.hasAttribute(createAttribute('focus-guard')) && relatedTarget.getAttribute('data-type') === 'outside';\n\n          // Wait for the window blur listener to fire.\n          timeoutRef.current = setTimeout(() => {\n            // When focusing the reference element (e.g. regular click), then\n            // clicking into the floating element, prevent it from hiding.\n            // Note: it must be focusable, e.g. `tabindex=\"-1\"`.\n            if (contains(refs.floating.current, relatedTarget) || contains(domReference, relatedTarget) || movedToFocusGuard) {\n              return;\n            }\n            onOpenChange(false, event.nativeEvent);\n          });\n        }\n      }\n    };\n  }, [enabled, keyboardOnly, domReference, refs, dataRef, onOpenChange]);\n}\n\nfunction mergeProps(userProps, propsList, elementKey) {\n  const map = new Map();\n  return {\n    ...(elementKey === 'floating' && {\n      tabIndex: -1\n    }),\n    ...userProps,\n    ...propsList.map(value => value ? value[elementKey] : null).concat(userProps).reduce((acc, props) => {\n      if (!props) {\n        return acc;\n      }\n      Object.entries(props).forEach(_ref => {\n        let [key, value] = _ref;\n        if (key.indexOf('on') === 0) {\n          if (!map.has(key)) {\n            map.set(key, []);\n          }\n          if (typeof value === 'function') {\n            var _map$get;\n            (_map$get = map.get(key)) == null ? void 0 : _map$get.push(value);\n            acc[key] = function () {\n              var _map$get2;\n              for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n                args[_key] = arguments[_key];\n              }\n              return (_map$get2 = map.get(key)) == null ? void 0 : _map$get2.map(fn => fn(...args)).find(val => val !== undefined);\n            };\n          }\n        } else {\n          acc[key] = value;\n        }\n      });\n      return acc;\n    }, {})\n  };\n}\n\n/**\n * Merges an array of interaction hooks' props into prop getters, allowing\n * event handler functions to be composed together without overwriting one\n * another.\n * @see https://floating-ui.com/docs/react#interaction-hooks\n */\nfunction useInteractions(propsList) {\n  if (propsList === void 0) {\n    propsList = [];\n  }\n  // The dependencies are a dynamic array, so we can't use the linter's\n  // suggestion to add it to the deps array.\n  const deps = propsList;\n  const getReferenceProps = React.useCallback(userProps => mergeProps(userProps, propsList, 'reference'),\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  deps);\n  const getFloatingProps = React.useCallback(userProps => mergeProps(userProps, propsList, 'floating'),\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  deps);\n  const getItemProps = React.useCallback(userProps => mergeProps(userProps, propsList, 'item'),\n  // Granularly check for `item` changes, because the `getItemProps` getter\n  // should be as referentially stable as possible since it may be passed as\n  // a prop to many components. All `item` key values must therefore be\n  // memoized.\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  propsList.map(key => key == null ? void 0 : key.item));\n  return React.useMemo(() => ({\n    getReferenceProps,\n    getFloatingProps,\n    getItemProps\n  }), [getReferenceProps, getFloatingProps, getItemProps]);\n}\n\nlet isPreventScrollSupported = false;\nconst ARROW_UP = 'ArrowUp';\nconst ARROW_DOWN = 'ArrowDown';\nconst ARROW_LEFT = 'ArrowLeft';\nconst ARROW_RIGHT = 'ArrowRight';\nfunction isDifferentRow(index, cols, prevRow) {\n  return Math.floor(index / cols) !== prevRow;\n}\nfunction isIndexOutOfBounds(listRef, index) {\n  return index < 0 || index >= listRef.current.length;\n}\nfunction findNonDisabledIndex(listRef, _temp) {\n  let {\n    startingIndex = -1,\n    decrement = false,\n    disabledIndices,\n    amount = 1\n  } = _temp === void 0 ? {} : _temp;\n  const list = listRef.current;\n  let index = startingIndex;\n  do {\n    var _list$index, _list$index2;\n    index = index + (decrement ? -amount : amount);\n  } while (index >= 0 && index <= list.length - 1 && (disabledIndices ? disabledIndices.includes(index) : list[index] == null || ((_list$index = list[index]) == null ? void 0 : _list$index.hasAttribute('disabled')) || ((_list$index2 = list[index]) == null ? void 0 : _list$index2.getAttribute('aria-disabled')) === 'true'));\n  return index;\n}\nfunction doSwitch(orientation, vertical, horizontal) {\n  switch (orientation) {\n    case 'vertical':\n      return vertical;\n    case 'horizontal':\n      return horizontal;\n    default:\n      return vertical || horizontal;\n  }\n}\nfunction isMainOrientationKey(key, orientation) {\n  const vertical = key === ARROW_UP || key === ARROW_DOWN;\n  const horizontal = key === ARROW_LEFT || key === ARROW_RIGHT;\n  return doSwitch(orientation, vertical, horizontal);\n}\nfunction isMainOrientationToEndKey(key, orientation, rtl) {\n  const vertical = key === ARROW_DOWN;\n  const horizontal = rtl ? key === ARROW_LEFT : key === ARROW_RIGHT;\n  return doSwitch(orientation, vertical, horizontal) || key === 'Enter' || key == ' ' || key === '';\n}\nfunction isCrossOrientationOpenKey(key, orientation, rtl) {\n  const vertical = rtl ? key === ARROW_LEFT : key === ARROW_RIGHT;\n  const horizontal = key === ARROW_DOWN;\n  return doSwitch(orientation, vertical, horizontal);\n}\nfunction isCrossOrientationCloseKey(key, orientation, rtl) {\n  const vertical = rtl ? key === ARROW_RIGHT : key === ARROW_LEFT;\n  const horizontal = key === ARROW_UP;\n  return doSwitch(orientation, vertical, horizontal);\n}\nfunction getMinIndex(listRef, disabledIndices) {\n  return findNonDisabledIndex(listRef, {\n    disabledIndices\n  });\n}\nfunction getMaxIndex(listRef, disabledIndices) {\n  return findNonDisabledIndex(listRef, {\n    decrement: true,\n    startingIndex: listRef.current.length,\n    disabledIndices\n  });\n}\n/**\n * Adds arrow key-based navigation of a list of items, either using real DOM\n * focus or virtual focus.\n * @see https://floating-ui.com/docs/useListNavigation\n */\nfunction useListNavigation(context, props) {\n  const {\n    open,\n    onOpenChange,\n    refs,\n    elements: {\n      domReference,\n      floating\n    }\n  } = context;\n  const {\n    listRef,\n    activeIndex,\n    onNavigate: unstable_onNavigate = () => {},\n    enabled = true,\n    selectedIndex = null,\n    allowEscape = false,\n    loop = false,\n    nested = false,\n    rtl = false,\n    virtual = false,\n    focusItemOnOpen = 'auto',\n    focusItemOnHover = true,\n    openOnArrowKeyDown = true,\n    disabledIndices = undefined,\n    orientation = 'vertical',\n    cols = 1,\n    scrollItemIntoView = true\n  } = props;\n  if (process.env.NODE_ENV !== \"production\") {\n    if (allowEscape) {\n      if (!loop) {\n        console.warn(['Floating UI: `useListNavigation` looping must be enabled to allow', 'escaping.'].join(' '));\n      }\n      if (!virtual) {\n        console.warn(['Floating UI: `useListNavigation` must be virtual to allow', 'escaping.'].join(' '));\n      }\n    }\n    if (orientation === 'vertical' && cols > 1) {\n      console.warn(['Floating UI: In grid list navigation mode (`cols` > 1), the', '`orientation` should be either \"horizontal\" or \"both\".'].join(' '));\n    }\n  }\n  const parentId = useFloatingParentNodeId();\n  const tree = useFloatingTree();\n  const onNavigate = useEffectEvent(unstable_onNavigate);\n  const focusItemOnOpenRef = React.useRef(focusItemOnOpen);\n  const indexRef = React.useRef(selectedIndex != null ? selectedIndex : -1);\n  const keyRef = React.useRef(null);\n  const isPointerModalityRef = React.useRef(true);\n  const previousOnNavigateRef = React.useRef(onNavigate);\n  const previousMountedRef = React.useRef(!!floating);\n  const forceSyncFocus = React.useRef(false);\n  const forceScrollIntoViewRef = React.useRef(false);\n  const disabledIndicesRef = useLatestRef(disabledIndices);\n  const latestOpenRef = useLatestRef(open);\n  const scrollItemIntoViewRef = useLatestRef(scrollItemIntoView);\n  const [activeId, setActiveId] = React.useState();\n  const focusItem = useEffectEvent(function (listRef, indexRef, forceScrollIntoView) {\n    if (forceScrollIntoView === void 0) {\n      forceScrollIntoView = false;\n    }\n    const item = listRef.current[indexRef.current];\n    if (!item) return;\n    if (virtual) {\n      setActiveId(item.id);\n    } else {\n      enqueueFocus(item, {\n        preventScroll: true,\n        // Mac Safari does not move the virtual cursor unless the focus call\n        // is sync. However, for the very first focus call, we need to wait\n        // for the position to be ready in order to prevent unwanted\n        // scrolling. This means the virtual cursor will not move to the first\n        // item when first opening the floating element, but will on\n        // subsequent calls. `preventScroll` is supported in modern Safari,\n        // so we can use that instead.\n        // iOS Safari must be async or the first item will not be focused.\n        sync: isMac() && isSafari() ? isPreventScrollSupported || forceSyncFocus.current : false\n      });\n    }\n    requestAnimationFrame(() => {\n      const scrollIntoViewOptions = scrollItemIntoViewRef.current;\n      const shouldScrollIntoView = scrollIntoViewOptions && item && (forceScrollIntoView || !isPointerModalityRef.current);\n      if (shouldScrollIntoView) {\n        // JSDOM doesn't support `.scrollIntoView()` but it's widely supported\n        // by all browsers.\n        item.scrollIntoView == null ? void 0 : item.scrollIntoView(typeof scrollIntoViewOptions === 'boolean' ? {\n          block: 'nearest',\n          inline: 'nearest'\n        } : scrollIntoViewOptions);\n      }\n    });\n  });\n  index(() => {\n    document.createElement('div').focus({\n      get preventScroll() {\n        isPreventScrollSupported = true;\n        return false;\n      }\n    });\n  }, []);\n\n  // Sync `selectedIndex` to be the `activeIndex` upon opening the floating\n  // element. Also, reset `activeIndex` upon closing the floating element.\n  index(() => {\n    if (!enabled) {\n      return;\n    }\n    if (open && floating) {\n      if (focusItemOnOpenRef.current && selectedIndex != null) {\n        // Regardless of the pointer modality, we want to ensure the selected\n        // item comes into view when the floating element is opened.\n        forceScrollIntoViewRef.current = true;\n        onNavigate(selectedIndex);\n      }\n    } else if (previousMountedRef.current) {\n      // Since the user can specify `onNavigate` conditionally\n      // (onNavigate: open ? setActiveIndex : setSelectedIndex),\n      // we store and call the previous function.\n      indexRef.current = -1;\n      previousOnNavigateRef.current(null);\n    }\n  }, [enabled, open, floating, selectedIndex, onNavigate]);\n\n  // Sync `activeIndex` to be the focused item while the floating element is\n  // open.\n  index(() => {\n    if (!enabled) {\n      return;\n    }\n    if (open && floating) {\n      if (activeIndex == null) {\n        forceSyncFocus.current = false;\n        if (selectedIndex != null) {\n          return;\n        }\n\n        // Reset while the floating element was open (e.g. the list changed).\n        if (previousMountedRef.current) {\n          indexRef.current = -1;\n          focusItem(listRef, indexRef);\n        }\n\n        // Initial sync.\n        if (!previousMountedRef.current && focusItemOnOpenRef.current && (keyRef.current != null || focusItemOnOpenRef.current === true && keyRef.current == null)) {\n          let runs = 0;\n          const waitForListPopulated = () => {\n            if (listRef.current[0] == null) {\n              // Avoid letting the browser paint if possible on the first try,\n              // otherwise use rAF. Don't try more than twice, since something\n              // is wrong otherwise.\n              if (runs < 2) {\n                const scheduler = runs ? requestAnimationFrame : queueMicrotask;\n                scheduler(waitForListPopulated);\n              }\n              runs++;\n            } else {\n              indexRef.current = keyRef.current == null || isMainOrientationToEndKey(keyRef.current, orientation, rtl) || nested ? getMinIndex(listRef, disabledIndicesRef.current) : getMaxIndex(listRef, disabledIndicesRef.current);\n              keyRef.current = null;\n              onNavigate(indexRef.current);\n            }\n          };\n          waitForListPopulated();\n        }\n      } else if (!isIndexOutOfBounds(listRef, activeIndex)) {\n        indexRef.current = activeIndex;\n        focusItem(listRef, indexRef, forceScrollIntoViewRef.current);\n        forceScrollIntoViewRef.current = false;\n      }\n    }\n  }, [enabled, open, floating, activeIndex, selectedIndex, nested, listRef, orientation, rtl, onNavigate, focusItem, disabledIndicesRef]);\n\n  // Ensure the parent floating element has focus when a nested child closes\n  // to allow arrow key navigation to work after the pointer leaves the child.\n  index(() => {\n    if (!enabled) {\n      return;\n    }\n    if (previousMountedRef.current && !floating && tree) {\n      var _nodes$find, _nodes$find$context;\n      const nodes = tree.nodesRef.current;\n      const parent = (_nodes$find = nodes.find(node => node.id === parentId)) == null ? void 0 : (_nodes$find$context = _nodes$find.context) == null ? void 0 : _nodes$find$context.elements.floating;\n      const activeEl = activeElement(getDocument(floating));\n      const treeContainsActiveEl = nodes.some(node => node.context && contains(node.context.elements.floating, activeEl));\n      if (parent && !treeContainsActiveEl) {\n        parent.focus({\n          preventScroll: true\n        });\n      }\n    }\n  }, [enabled, floating, tree, parentId]);\n  index(() => {\n    previousOnNavigateRef.current = onNavigate;\n    previousMountedRef.current = !!floating;\n  });\n  index(() => {\n    if (!open) {\n      keyRef.current = null;\n    }\n  }, [open]);\n  const hasActiveIndex = activeIndex != null;\n  const item = React.useMemo(() => {\n    function syncCurrentTarget(currentTarget) {\n      if (!open) return;\n      const index = listRef.current.indexOf(currentTarget);\n      if (index !== -1) {\n        onNavigate(index);\n      }\n    }\n    const props = {\n      onFocus(_ref) {\n        let {\n          currentTarget\n        } = _ref;\n        syncCurrentTarget(currentTarget);\n      },\n      onClick: _ref2 => {\n        let {\n          currentTarget\n        } = _ref2;\n        return currentTarget.focus({\n          preventScroll: true\n        });\n      },\n      // Safari\n      ...(focusItemOnHover && {\n        onMouseMove(_ref3) {\n          let {\n            currentTarget\n          } = _ref3;\n          syncCurrentTarget(currentTarget);\n        },\n        onPointerLeave(_ref4) {\n          let {\n            pointerType\n          } = _ref4;\n          if (!isPointerModalityRef.current || pointerType === 'touch') {\n            return;\n          }\n          indexRef.current = -1;\n          focusItem(listRef, indexRef);\n          onNavigate(null);\n          if (!virtual) {\n            enqueueFocus(refs.floating.current, {\n              preventScroll: true\n            });\n          }\n        }\n      })\n    };\n    return props;\n  }, [open, refs, focusItem, focusItemOnHover, listRef, onNavigate, virtual]);\n  return React.useMemo(() => {\n    if (!enabled) {\n      return {};\n    }\n    const disabledIndices = disabledIndicesRef.current;\n    function onKeyDown(event) {\n      isPointerModalityRef.current = false;\n      forceSyncFocus.current = true;\n\n      // If the floating element is animating out, ignore navigation. Otherwise,\n      // the `activeIndex` gets set to 0 despite not being open so the next time\n      // the user ArrowDowns, the first item won't be focused.\n      if (!latestOpenRef.current && event.currentTarget === refs.floating.current) {\n        return;\n      }\n      if (nested && isCrossOrientationCloseKey(event.key, orientation, rtl)) {\n        stopEvent(event);\n        onOpenChange(false, event.nativeEvent);\n        if (isHTMLElement(domReference)) {\n          domReference.focus();\n        }\n        return;\n      }\n      const currentIndex = indexRef.current;\n      const minIndex = getMinIndex(listRef, disabledIndices);\n      const maxIndex = getMaxIndex(listRef, disabledIndices);\n      if (event.key === 'Home') {\n        stopEvent(event);\n        indexRef.current = minIndex;\n        onNavigate(indexRef.current);\n      }\n      if (event.key === 'End') {\n        stopEvent(event);\n        indexRef.current = maxIndex;\n        onNavigate(indexRef.current);\n      }\n\n      // Grid navigation.\n      if (cols > 1) {\n        const prevIndex = indexRef.current;\n        if (event.key === ARROW_UP) {\n          stopEvent(event);\n          if (prevIndex === -1) {\n            indexRef.current = maxIndex;\n          } else {\n            indexRef.current = findNonDisabledIndex(listRef, {\n              startingIndex: prevIndex,\n              amount: cols,\n              decrement: true,\n              disabledIndices\n            });\n            if (loop && (prevIndex - cols < minIndex || indexRef.current < 0)) {\n              const col = prevIndex % cols;\n              const maxCol = maxIndex % cols;\n              const offset = maxIndex - (maxCol - col);\n              if (maxCol === col) {\n                indexRef.current = maxIndex;\n              } else {\n                indexRef.current = maxCol > col ? offset : offset - cols;\n              }\n            }\n          }\n          if (isIndexOutOfBounds(listRef, indexRef.current)) {\n            indexRef.current = prevIndex;\n          }\n          onNavigate(indexRef.current);\n        }\n        if (event.key === ARROW_DOWN) {\n          stopEvent(event);\n          if (prevIndex === -1) {\n            indexRef.current = minIndex;\n          } else {\n            indexRef.current = findNonDisabledIndex(listRef, {\n              startingIndex: prevIndex,\n              amount: cols,\n              disabledIndices\n            });\n            if (loop && prevIndex + cols > maxIndex) {\n              indexRef.current = findNonDisabledIndex(listRef, {\n                startingIndex: prevIndex % cols - cols,\n                amount: cols,\n                disabledIndices\n              });\n            }\n          }\n          if (isIndexOutOfBounds(listRef, indexRef.current)) {\n            indexRef.current = prevIndex;\n          }\n          onNavigate(indexRef.current);\n        }\n\n        // Remains on the same row/column.\n        if (orientation === 'both') {\n          const prevRow = Math.floor(prevIndex / cols);\n          if (event.key === ARROW_RIGHT) {\n            stopEvent(event);\n            if (prevIndex % cols !== cols - 1) {\n              indexRef.current = findNonDisabledIndex(listRef, {\n                startingIndex: prevIndex,\n                disabledIndices\n              });\n              if (loop && isDifferentRow(indexRef.current, cols, prevRow)) {\n                indexRef.current = findNonDisabledIndex(listRef, {\n                  startingIndex: prevIndex - prevIndex % cols - 1,\n                  disabledIndices\n                });\n              }\n            } else if (loop) {\n              indexRef.current = findNonDisabledIndex(listRef, {\n                startingIndex: prevIndex - prevIndex % cols - 1,\n                disabledIndices\n              });\n            }\n            if (isDifferentRow(indexRef.current, cols, prevRow)) {\n              indexRef.current = prevIndex;\n            }\n          }\n          if (event.key === ARROW_LEFT) {\n            stopEvent(event);\n            if (prevIndex % cols !== 0) {\n              indexRef.current = findNonDisabledIndex(listRef, {\n                startingIndex: prevIndex,\n                disabledIndices,\n                decrement: true\n              });\n              if (loop && isDifferentRow(indexRef.current, cols, prevRow)) {\n                indexRef.current = findNonDisabledIndex(listRef, {\n                  startingIndex: prevIndex + (cols - prevIndex % cols),\n                  decrement: true,\n                  disabledIndices\n                });\n              }\n            } else if (loop) {\n              indexRef.current = findNonDisabledIndex(listRef, {\n                startingIndex: prevIndex + (cols - prevIndex % cols),\n                decrement: true,\n                disabledIndices\n              });\n            }\n            if (isDifferentRow(indexRef.current, cols, prevRow)) {\n              indexRef.current = prevIndex;\n            }\n          }\n          const lastRow = Math.floor(maxIndex / cols) === prevRow;\n          if (isIndexOutOfBounds(listRef, indexRef.current)) {\n            if (loop && lastRow) {\n              indexRef.current = event.key === ARROW_LEFT ? maxIndex : findNonDisabledIndex(listRef, {\n                startingIndex: prevIndex - prevIndex % cols - 1,\n                disabledIndices\n              });\n            } else {\n              indexRef.current = prevIndex;\n            }\n          }\n          onNavigate(indexRef.current);\n          return;\n        }\n      }\n      if (isMainOrientationKey(event.key, orientation)) {\n        stopEvent(event);\n\n        // Reset the index if no item is focused.\n        if (open && !virtual && activeElement(event.currentTarget.ownerDocument) === event.currentTarget) {\n          indexRef.current = isMainOrientationToEndKey(event.key, orientation, rtl) ? minIndex : maxIndex;\n          onNavigate(indexRef.current);\n          return;\n        }\n        if (isMainOrientationToEndKey(event.key, orientation, rtl)) {\n          if (loop) {\n            indexRef.current = currentIndex >= maxIndex ? allowEscape && currentIndex !== listRef.current.length ? -1 : minIndex : findNonDisabledIndex(listRef, {\n              startingIndex: currentIndex,\n              disabledIndices\n            });\n          } else {\n            indexRef.current = Math.min(maxIndex, findNonDisabledIndex(listRef, {\n              startingIndex: currentIndex,\n              disabledIndices\n            }));\n          }\n        } else {\n          if (loop) {\n            indexRef.current = currentIndex <= minIndex ? allowEscape && currentIndex !== -1 ? listRef.current.length : maxIndex : findNonDisabledIndex(listRef, {\n              startingIndex: currentIndex,\n              decrement: true,\n              disabledIndices\n            });\n          } else {\n            indexRef.current = Math.max(minIndex, findNonDisabledIndex(listRef, {\n              startingIndex: currentIndex,\n              decrement: true,\n              disabledIndices\n            }));\n          }\n        }\n        if (isIndexOutOfBounds(listRef, indexRef.current)) {\n          onNavigate(null);\n        } else {\n          onNavigate(indexRef.current);\n        }\n      }\n    }\n    function checkVirtualMouse(event) {\n      if (focusItemOnOpen === 'auto' && isVirtualClick(event.nativeEvent)) {\n        focusItemOnOpenRef.current = true;\n      }\n    }\n    function checkVirtualPointer(event) {\n      // `pointerdown` fires first, reset the state then perform the checks.\n      focusItemOnOpenRef.current = focusItemOnOpen;\n      if (focusItemOnOpen === 'auto' && isVirtualPointerEvent(event.nativeEvent)) {\n        focusItemOnOpenRef.current = true;\n      }\n    }\n    const ariaActiveDescendantProp = virtual && open && hasActiveIndex && {\n      'aria-activedescendant': activeId\n    };\n    return {\n      reference: {\n        ...ariaActiveDescendantProp,\n        onKeyDown(event) {\n          isPointerModalityRef.current = false;\n          const isArrowKey = event.key.indexOf('Arrow') === 0;\n          if (virtual && open) {\n            return onKeyDown(event);\n          }\n\n          // If a floating element should not open on arrow key down, avoid\n          // setting `activeIndex` while it's closed.\n          if (!open && !openOnArrowKeyDown && isArrowKey) {\n            return;\n          }\n          const isNavigationKey = isArrowKey || event.key === 'Enter' || event.key.trim() === '';\n          const isMainKey = isMainOrientationKey(event.key, orientation);\n          const isCrossKey = isCrossOrientationOpenKey(event.key, orientation, rtl);\n          if (isNavigationKey) {\n            keyRef.current = nested && isMainKey ? null : event.key;\n          }\n          if (nested) {\n            if (isCrossKey) {\n              stopEvent(event);\n              if (open) {\n                indexRef.current = getMinIndex(listRef, disabledIndices);\n                onNavigate(indexRef.current);\n              } else {\n                onOpenChange(true, event.nativeEvent);\n              }\n            }\n            return;\n          }\n          if (isMainKey) {\n            if (selectedIndex != null) {\n              indexRef.current = selectedIndex;\n            }\n            stopEvent(event);\n            if (!open && openOnArrowKeyDown) {\n              onOpenChange(true, event.nativeEvent);\n            } else {\n              onKeyDown(event);\n            }\n            if (open) {\n              onNavigate(indexRef.current);\n            }\n          }\n        },\n        onFocus() {\n          if (open) {\n            onNavigate(null);\n          }\n        },\n        onPointerDown: checkVirtualPointer,\n        onMouseDown: checkVirtualMouse,\n        onClick: checkVirtualMouse\n      },\n      floating: {\n        'aria-orientation': orientation === 'both' ? undefined : orientation,\n        ...ariaActiveDescendantProp,\n        onKeyDown,\n        onPointerMove() {\n          isPointerModalityRef.current = true;\n        }\n      },\n      item\n    };\n  }, [domReference, refs, activeId, disabledIndicesRef, latestOpenRef, listRef, enabled, orientation, rtl, virtual, open, hasActiveIndex, nested, selectedIndex, openOnArrowKeyDown, allowEscape, cols, loop, focusItemOnOpen, onNavigate, onOpenChange, item]);\n}\n\n/**\n * Merges an array of refs into a single memoized callback ref or `null`.\n * @see https://floating-ui.com/docs/useMergeRefs\n */\nfunction useMergeRefs(refs) {\n  return React.useMemo(() => {\n    if (refs.every(ref => ref == null)) {\n      return null;\n    }\n    return value => {\n      refs.forEach(ref => {\n        if (typeof ref === 'function') {\n          ref(value);\n        } else if (ref != null) {\n          ref.current = value;\n        }\n      });\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, refs);\n}\n\n/**\n * Adds base screen reader props to the reference and floating elements for a\n * given floating element `role`.\n * @see https://floating-ui.com/docs/useRole\n */\nfunction useRole(context, props) {\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    open,\n    floatingId\n  } = context;\n  const {\n    enabled = true,\n    role = 'dialog'\n  } = props;\n  const referenceId = useId();\n  return React.useMemo(() => {\n    const floatingProps = {\n      id: floatingId,\n      role\n    };\n    if (!enabled) {\n      return {};\n    }\n    if (role === 'tooltip') {\n      return {\n        reference: {\n          'aria-describedby': open ? floatingId : undefined\n        },\n        floating: floatingProps\n      };\n    }\n    return {\n      reference: {\n        'aria-expanded': open ? 'true' : 'false',\n        'aria-haspopup': role === 'alertdialog' ? 'dialog' : role,\n        'aria-controls': open ? floatingId : undefined,\n        ...(role === 'listbox' && {\n          role: 'combobox'\n        }),\n        ...(role === 'menu' && {\n          id: referenceId\n        })\n      },\n      floating: {\n        ...floatingProps,\n        ...(role === 'menu' && {\n          'aria-labelledby': referenceId\n        })\n      }\n    };\n  }, [enabled, role, open, floatingId, referenceId]);\n}\n\n// Converts a JS style key like `backgroundColor` to a CSS transition-property\n// like `background-color`.\nconst camelCaseToKebabCase = str => str.replace(/[A-Z]+(?![a-z])|[A-Z]/g, ($, ofs) => (ofs ? '-' : '') + $.toLowerCase());\nfunction execWithArgsOrReturn(valueOrFn, args) {\n  return typeof valueOrFn === 'function' ? valueOrFn(args) : valueOrFn;\n}\nfunction useDelayUnmount(open, durationMs) {\n  const [isMounted, setIsMounted] = React.useState(open);\n  if (open && !isMounted) {\n    setIsMounted(true);\n  }\n  React.useEffect(() => {\n    if (!open) {\n      const timeout = setTimeout(() => setIsMounted(false), durationMs);\n      return () => clearTimeout(timeout);\n    }\n  }, [open, durationMs]);\n  return isMounted;\n}\n/**\n * Provides a status string to apply CSS transitions to a floating element,\n * correctly handling placement-aware transitions.\n * @see https://floating-ui.com/docs/useTransition#usetransitionstatus\n */\nfunction useTransitionStatus(context, props) {\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    open,\n    elements: {\n      floating\n    }\n  } = context;\n  const {\n    duration = 250\n  } = props;\n  const isNumberDuration = typeof duration === 'number';\n  const closeDuration = (isNumberDuration ? duration : duration.close) || 0;\n  const [initiated, setInitiated] = React.useState(false);\n  const [status, setStatus] = React.useState('unmounted');\n  const isMounted = useDelayUnmount(open, closeDuration);\n\n  // `initiated` check prevents this `setState` call from breaking\n  // <FloatingPortal />. This call is necessary to ensure subsequent opens\n  // after the initial one allows the correct side animation to play when the\n  // placement has changed.\n  index(() => {\n    if (initiated && !isMounted) {\n      setStatus('unmounted');\n    }\n  }, [initiated, isMounted]);\n  index(() => {\n    if (!floating) return;\n    if (open) {\n      setStatus('initial');\n      const frame = requestAnimationFrame(() => {\n        setStatus('open');\n      });\n      return () => {\n        cancelAnimationFrame(frame);\n      };\n    } else {\n      setInitiated(true);\n      setStatus('close');\n    }\n  }, [open, floating]);\n  return {\n    isMounted,\n    status\n  };\n}\n/**\n * Provides styles to apply CSS transitions to a floating element, correctly\n * handling placement-aware transitions. Wrapper around `useTransitionStatus`.\n * @see https://floating-ui.com/docs/useTransition#usetransitionstyles\n */\nfunction useTransitionStyles(context, props) {\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    initial: unstable_initial = {\n      opacity: 0\n    },\n    open: unstable_open,\n    close: unstable_close,\n    common: unstable_common,\n    duration = 250\n  } = props;\n  const placement = context.placement;\n  const side = placement.split('-')[0];\n  const fnArgs = React.useMemo(() => ({\n    side,\n    placement\n  }), [side, placement]);\n  const isNumberDuration = typeof duration === 'number';\n  const openDuration = (isNumberDuration ? duration : duration.open) || 0;\n  const closeDuration = (isNumberDuration ? duration : duration.close) || 0;\n  const [styles, setStyles] = React.useState(() => ({\n    ...execWithArgsOrReturn(unstable_common, fnArgs),\n    ...execWithArgsOrReturn(unstable_initial, fnArgs)\n  }));\n  const {\n    isMounted,\n    status\n  } = useTransitionStatus(context, {\n    duration\n  });\n  const initialRef = useLatestRef(unstable_initial);\n  const openRef = useLatestRef(unstable_open);\n  const closeRef = useLatestRef(unstable_close);\n  const commonRef = useLatestRef(unstable_common);\n  index(() => {\n    const initialStyles = execWithArgsOrReturn(initialRef.current, fnArgs);\n    const closeStyles = execWithArgsOrReturn(closeRef.current, fnArgs);\n    const commonStyles = execWithArgsOrReturn(commonRef.current, fnArgs);\n    const openStyles = execWithArgsOrReturn(openRef.current, fnArgs) || Object.keys(initialStyles).reduce((acc, key) => {\n      acc[key] = '';\n      return acc;\n    }, {});\n    if (status === 'initial') {\n      setStyles(styles => ({\n        transitionProperty: styles.transitionProperty,\n        ...commonStyles,\n        ...initialStyles\n      }));\n    }\n    if (status === 'open') {\n      setStyles({\n        transitionProperty: Object.keys(openStyles).map(camelCaseToKebabCase).join(','),\n        transitionDuration: openDuration + \"ms\",\n        ...commonStyles,\n        ...openStyles\n      });\n    }\n    if (status === 'close') {\n      const styles = closeStyles || initialStyles;\n      setStyles({\n        transitionProperty: Object.keys(styles).map(camelCaseToKebabCase).join(','),\n        transitionDuration: closeDuration + \"ms\",\n        ...commonStyles,\n        ...styles\n      });\n    }\n  }, [closeDuration, closeRef, initialRef, openRef, commonRef, openDuration, status, fnArgs]);\n  return {\n    isMounted,\n    styles\n  };\n}\n\n/**\n * Provides a matching callback that can be used to focus an item as the user\n * types, often used in tandem with `useListNavigation()`.\n * @see https://floating-ui.com/docs/useTypeahead\n */\nfunction useTypeahead(context, props) {\n  var _ref;\n  const {\n    open,\n    dataRef\n  } = context;\n  const {\n    listRef,\n    activeIndex,\n    onMatch: unstable_onMatch,\n    onTypingChange: unstable_onTypingChange,\n    enabled = true,\n    findMatch = null,\n    resetMs = 750,\n    ignoreKeys = [],\n    selectedIndex = null\n  } = props;\n  const timeoutIdRef = React.useRef();\n  const stringRef = React.useRef('');\n  const prevIndexRef = React.useRef((_ref = selectedIndex != null ? selectedIndex : activeIndex) != null ? _ref : -1);\n  const matchIndexRef = React.useRef(null);\n  const onMatch = useEffectEvent(unstable_onMatch);\n  const onTypingChange = useEffectEvent(unstable_onTypingChange);\n  const findMatchRef = useLatestRef(findMatch);\n  const ignoreKeysRef = useLatestRef(ignoreKeys);\n  index(() => {\n    if (open) {\n      clearTimeout(timeoutIdRef.current);\n      matchIndexRef.current = null;\n      stringRef.current = '';\n    }\n  }, [open]);\n  index(() => {\n    // Sync arrow key navigation but not typeahead navigation.\n    if (open && stringRef.current === '') {\n      var _ref2;\n      prevIndexRef.current = (_ref2 = selectedIndex != null ? selectedIndex : activeIndex) != null ? _ref2 : -1;\n    }\n  }, [open, selectedIndex, activeIndex]);\n  return React.useMemo(() => {\n    if (!enabled) {\n      return {};\n    }\n    function setTypingChange(value) {\n      if (value) {\n        if (!dataRef.current.typing) {\n          dataRef.current.typing = value;\n          onTypingChange(value);\n        }\n      } else {\n        if (dataRef.current.typing) {\n          dataRef.current.typing = value;\n          onTypingChange(value);\n        }\n      }\n    }\n    function getMatchingIndex(list, orderedList, string) {\n      const str = findMatchRef.current ? findMatchRef.current(orderedList, string) : orderedList.find(text => (text == null ? void 0 : text.toLocaleLowerCase().indexOf(string.toLocaleLowerCase())) === 0);\n      return str ? list.indexOf(str) : -1;\n    }\n    function onKeyDown(event) {\n      const listContent = listRef.current;\n      if (stringRef.current.length > 0 && stringRef.current[0] !== ' ') {\n        if (getMatchingIndex(listContent, listContent, stringRef.current) === -1) {\n          setTypingChange(false);\n        } else if (event.key === ' ') {\n          stopEvent(event);\n        }\n      }\n      if (listContent == null || ignoreKeysRef.current.includes(event.key) ||\n      // Character key.\n      event.key.length !== 1 ||\n      // Modifier key.\n      event.ctrlKey || event.metaKey || event.altKey) {\n        return;\n      }\n      if (open && event.key !== ' ') {\n        stopEvent(event);\n        setTypingChange(true);\n      }\n\n      // Bail out if the list contains a word like \"llama\" or \"aaron\". TODO:\n      // allow it in this case, too.\n      const allowRapidSuccessionOfFirstLetter = listContent.every(text => {\n        var _text$, _text$2;\n        return text ? ((_text$ = text[0]) == null ? void 0 : _text$.toLocaleLowerCase()) !== ((_text$2 = text[1]) == null ? void 0 : _text$2.toLocaleLowerCase()) : true;\n      });\n\n      // Allows the user to cycle through items that start with the same letter\n      // in rapid succession.\n      if (allowRapidSuccessionOfFirstLetter && stringRef.current === event.key) {\n        stringRef.current = '';\n        prevIndexRef.current = matchIndexRef.current;\n      }\n      stringRef.current += event.key;\n      clearTimeout(timeoutIdRef.current);\n      timeoutIdRef.current = setTimeout(() => {\n        stringRef.current = '';\n        prevIndexRef.current = matchIndexRef.current;\n        setTypingChange(false);\n      }, resetMs);\n      const prevIndex = prevIndexRef.current;\n      const index = getMatchingIndex(listContent, [...listContent.slice((prevIndex || 0) + 1), ...listContent.slice(0, (prevIndex || 0) + 1)], stringRef.current);\n      if (index !== -1) {\n        onMatch(index);\n        matchIndexRef.current = index;\n      } else if (event.key !== ' ') {\n        stringRef.current = '';\n        setTypingChange(false);\n      }\n    }\n    return {\n      reference: {\n        onKeyDown\n      },\n      floating: {\n        onKeyDown,\n        onKeyUp(event) {\n          if (event.key === ' ') {\n            setTypingChange(false);\n          }\n        }\n      }\n    };\n  }, [enabled, open, dataRef, listRef, resetMs, ignoreKeysRef, findMatchRef, onMatch, onTypingChange]);\n}\n\nfunction getArgsWithCustomFloatingHeight(state, height) {\n  return {\n    ...state,\n    rects: {\n      ...state.rects,\n      floating: {\n        ...state.rects.floating,\n        height\n      }\n    }\n  };\n}\n/**\n * Positions the floating element such that an inner element inside\n * of it is anchored to the reference element.\n * @see https://floating-ui.com/docs/inner\n */\nconst inner = props => ({\n  name: 'inner',\n  options: props,\n  async fn(state) {\n    const {\n      listRef,\n      overflowRef,\n      onFallbackChange,\n      offset: innerOffset = 0,\n      index = 0,\n      minItemsVisible = 4,\n      referenceOverflowThreshold = 0,\n      scrollRef,\n      ...detectOverflowOptions\n    } = props;\n    const {\n      rects,\n      elements: {\n        floating\n      }\n    } = state;\n    const item = listRef.current[index];\n    if (process.env.NODE_ENV !== \"production\") {\n      if (!state.placement.startsWith('bottom')) {\n        console.warn(['Floating UI: `placement` side must be \"bottom\" when using the', '`inner` middleware.'].join(' '));\n      }\n    }\n    if (!item) {\n      return {};\n    }\n    const nextArgs = {\n      ...state,\n      ...(await offset(-item.offsetTop - floating.clientTop - rects.reference.height / 2 - item.offsetHeight / 2 - innerOffset).fn(state))\n    };\n    const el = (scrollRef == null ? void 0 : scrollRef.current) || floating;\n    const overflow = await detectOverflow(getArgsWithCustomFloatingHeight(nextArgs, el.scrollHeight), detectOverflowOptions);\n    const refOverflow = await detectOverflow(nextArgs, {\n      ...detectOverflowOptions,\n      elementContext: 'reference'\n    });\n    const diffY = Math.max(0, overflow.top);\n    const nextY = nextArgs.y + diffY;\n    const maxHeight = Math.max(0, el.scrollHeight - diffY - Math.max(0, overflow.bottom));\n    el.style.maxHeight = maxHeight + \"px\";\n    el.scrollTop = diffY;\n\n    // There is not enough space, fallback to standard anchored positioning\n    if (onFallbackChange) {\n      if (el.offsetHeight < item.offsetHeight * Math.min(minItemsVisible, listRef.current.length - 1) - 1 || refOverflow.top >= -referenceOverflowThreshold || refOverflow.bottom >= -referenceOverflowThreshold) {\n        flushSync(() => onFallbackChange(true));\n      } else {\n        flushSync(() => onFallbackChange(false));\n      }\n    }\n    if (overflowRef) {\n      overflowRef.current = await detectOverflow(getArgsWithCustomFloatingHeight({\n        ...nextArgs,\n        y: nextY\n      }, el.offsetHeight), detectOverflowOptions);\n    }\n    return {\n      y: nextY\n    };\n  }\n});\n/**\n * Changes the `inner` middleware's `offset` upon a `wheel` event to\n * expand the floating element's height, revealing more list items.\n * @see https://floating-ui.com/docs/inner\n */\nfunction useInnerOffset(context, props) {\n  const {\n    open,\n    elements\n  } = context;\n  const {\n    enabled = true,\n    overflowRef,\n    scrollRef,\n    onChange: unstable_onChange\n  } = props;\n  const onChange = useEffectEvent(unstable_onChange);\n  const controlledScrollingRef = React.useRef(false);\n  const prevScrollTopRef = React.useRef(null);\n  const initialOverflowRef = React.useRef(null);\n  React.useEffect(() => {\n    if (!enabled) {\n      return;\n    }\n    function onWheel(e) {\n      if (e.ctrlKey || !el || overflowRef.current == null) {\n        return;\n      }\n      const dY = e.deltaY;\n      const isAtTop = overflowRef.current.top >= -0.5;\n      const isAtBottom = overflowRef.current.bottom >= -0.5;\n      const remainingScroll = el.scrollHeight - el.clientHeight;\n      const sign = dY < 0 ? -1 : 1;\n      const method = dY < 0 ? 'max' : 'min';\n      if (el.scrollHeight <= el.clientHeight) {\n        return;\n      }\n      if (!isAtTop && dY > 0 || !isAtBottom && dY < 0) {\n        e.preventDefault();\n        flushSync(() => {\n          onChange(d => d + Math[method](dY, remainingScroll * sign));\n        });\n      } else if (/firefox/i.test(getUserAgent())) {\n        // Needed to propagate scrolling during momentum scrolling phase once\n        // it gets limited by the boundary. UX improvement, not critical.\n        el.scrollTop += dY;\n      }\n    }\n    const el = (scrollRef == null ? void 0 : scrollRef.current) || elements.floating;\n    if (open && el) {\n      el.addEventListener('wheel', onWheel);\n\n      // Wait for the position to be ready.\n      requestAnimationFrame(() => {\n        prevScrollTopRef.current = el.scrollTop;\n        if (overflowRef.current != null) {\n          initialOverflowRef.current = {\n            ...overflowRef.current\n          };\n        }\n      });\n      return () => {\n        prevScrollTopRef.current = null;\n        initialOverflowRef.current = null;\n        el.removeEventListener('wheel', onWheel);\n      };\n    }\n  }, [enabled, open, elements.floating, overflowRef, scrollRef, onChange]);\n  return React.useMemo(() => {\n    if (!enabled) {\n      return {};\n    }\n    return {\n      floating: {\n        onKeyDown() {\n          controlledScrollingRef.current = true;\n        },\n        onWheel() {\n          controlledScrollingRef.current = false;\n        },\n        onPointerMove() {\n          controlledScrollingRef.current = false;\n        },\n        onScroll() {\n          const el = (scrollRef == null ? void 0 : scrollRef.current) || elements.floating;\n          if (!overflowRef.current || !el || !controlledScrollingRef.current) {\n            return;\n          }\n          if (prevScrollTopRef.current !== null) {\n            const scrollDiff = el.scrollTop - prevScrollTopRef.current;\n            if (overflowRef.current.bottom < -0.5 && scrollDiff < -1 || overflowRef.current.top < -0.5 && scrollDiff > 1) {\n              flushSync(() => onChange(d => d + scrollDiff));\n            }\n          }\n\n          // [Firefox] Wait for the height change to have been applied.\n          requestAnimationFrame(() => {\n            prevScrollTopRef.current = el.scrollTop;\n          });\n        }\n      }\n    };\n  }, [enabled, overflowRef, elements.floating, scrollRef, onChange]);\n}\n\nfunction isPointInPolygon(point, polygon) {\n  const [x, y] = point;\n  let isInside = false;\n  const length = polygon.length;\n  for (let i = 0, j = length - 1; i < length; j = i++) {\n    const [xi, yi] = polygon[i] || [0, 0];\n    const [xj, yj] = polygon[j] || [0, 0];\n    const intersect = yi >= y !== yj >= y && x <= (xj - xi) * (y - yi) / (yj - yi) + xi;\n    if (intersect) {\n      isInside = !isInside;\n    }\n  }\n  return isInside;\n}\nfunction isInside(point, rect) {\n  return point[0] >= rect.x && point[0] <= rect.x + rect.width && point[1] >= rect.y && point[1] <= rect.y + rect.height;\n}\n/**\n * Generates a safe polygon area that the user can traverse without closing the\n * floating element once leaving the reference element.\n * @see https://floating-ui.com/docs/useHover#safePolygon\n */\nfunction safePolygon(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    buffer = 0.5,\n    blockPointerEvents = false,\n    requireIntent = true\n  } = options;\n  let timeoutId;\n  let hasLanded = false;\n  let lastX = null;\n  let lastY = null;\n  let lastCursorTime = performance.now();\n  function getCursorSpeed(x, y) {\n    const currentTime = performance.now();\n    const elapsedTime = currentTime - lastCursorTime;\n    if (lastX === null || lastY === null || elapsedTime === 0) {\n      lastX = x;\n      lastY = y;\n      lastCursorTime = currentTime;\n      return null;\n    }\n    const deltaX = x - lastX;\n    const deltaY = y - lastY;\n    const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n    const speed = distance / elapsedTime; // px / ms\n\n    lastX = x;\n    lastY = y;\n    lastCursorTime = currentTime;\n    return speed;\n  }\n  const fn = _ref => {\n    let {\n      x,\n      y,\n      placement,\n      elements,\n      onClose,\n      nodeId,\n      tree\n    } = _ref;\n    return function onMouseMove(event) {\n      function close() {\n        clearTimeout(timeoutId);\n        onClose();\n      }\n      clearTimeout(timeoutId);\n      if (!elements.domReference || !elements.floating || placement == null || x == null || y == null) {\n        return;\n      }\n      const {\n        clientX,\n        clientY\n      } = event;\n      const clientPoint = [clientX, clientY];\n      const target = getTarget(event);\n      const isLeave = event.type === 'mouseleave';\n      const isOverFloatingEl = contains(elements.floating, target);\n      const isOverReferenceEl = contains(elements.domReference, target);\n      const refRect = elements.domReference.getBoundingClientRect();\n      const rect = elements.floating.getBoundingClientRect();\n      const side = placement.split('-')[0];\n      const cursorLeaveFromRight = x > rect.right - rect.width / 2;\n      const cursorLeaveFromBottom = y > rect.bottom - rect.height / 2;\n      const isOverReferenceRect = isInside(clientPoint, refRect);\n      const isFloatingWider = rect.width > refRect.width;\n      const isFloatingTaller = rect.height > refRect.height;\n      const left = (isFloatingWider ? refRect : rect).left;\n      const right = (isFloatingWider ? refRect : rect).right;\n      const top = (isFloatingTaller ? refRect : rect).top;\n      const bottom = (isFloatingTaller ? refRect : rect).bottom;\n      if (isOverFloatingEl) {\n        hasLanded = true;\n        if (!isLeave) {\n          return;\n        }\n      }\n      if (isOverReferenceEl) {\n        hasLanded = false;\n      }\n      if (isOverReferenceEl && !isLeave) {\n        hasLanded = true;\n        return;\n      }\n\n      // Prevent overlapping floating element from being stuck in an open-close\n      // loop: https://github.com/floating-ui/floating-ui/issues/1910\n      if (isLeave && isElement(event.relatedTarget) && contains(elements.floating, event.relatedTarget)) {\n        return;\n      }\n\n      // If any nested child is open, abort.\n      if (tree && getChildren(tree.nodesRef.current, nodeId).some(_ref2 => {\n        let {\n          context\n        } = _ref2;\n        return context == null ? void 0 : context.open;\n      })) {\n        return;\n      }\n\n      // If the pointer is leaving from the opposite side, the \"buffer\" logic\n      // creates a point where the floating element remains open, but should be\n      // ignored.\n      // A constant of 1 handles floating point rounding errors.\n      if (side === 'top' && y >= refRect.bottom - 1 || side === 'bottom' && y <= refRect.top + 1 || side === 'left' && x >= refRect.right - 1 || side === 'right' && x <= refRect.left + 1) {\n        return close();\n      }\n\n      // Ignore when the cursor is within the rectangular trough between the\n      // two elements. Since the triangle is created from the cursor point,\n      // which can start beyond the ref element's edge, traversing back and\n      // forth from the ref to the floating element can cause it to close. This\n      // ensures it always remains open in that case.\n      let rectPoly = [];\n      switch (side) {\n        case 'top':\n          rectPoly = [[left, refRect.top + 1], [left, rect.bottom - 1], [right, rect.bottom - 1], [right, refRect.top + 1]];\n          break;\n        case 'bottom':\n          rectPoly = [[left, rect.top + 1], [left, refRect.bottom - 1], [right, refRect.bottom - 1], [right, rect.top + 1]];\n          break;\n        case 'left':\n          rectPoly = [[rect.right - 1, bottom], [rect.right - 1, top], [refRect.left + 1, top], [refRect.left + 1, bottom]];\n          break;\n        case 'right':\n          rectPoly = [[refRect.right - 1, bottom], [refRect.right - 1, top], [rect.left + 1, top], [rect.left + 1, bottom]];\n          break;\n      }\n      function getPolygon(_ref3) {\n        let [x, y] = _ref3;\n        switch (side) {\n          case 'top':\n            {\n              const cursorPointOne = [isFloatingWider ? x + buffer / 2 : cursorLeaveFromRight ? x + buffer * 4 : x - buffer * 4, y + buffer + 1];\n              const cursorPointTwo = [isFloatingWider ? x - buffer / 2 : cursorLeaveFromRight ? x + buffer * 4 : x - buffer * 4, y + buffer + 1];\n              const commonPoints = [[rect.left, cursorLeaveFromRight ? rect.bottom - buffer : isFloatingWider ? rect.bottom - buffer : rect.top], [rect.right, cursorLeaveFromRight ? isFloatingWider ? rect.bottom - buffer : rect.top : rect.bottom - buffer]];\n              return [cursorPointOne, cursorPointTwo, ...commonPoints];\n            }\n          case 'bottom':\n            {\n              const cursorPointOne = [isFloatingWider ? x + buffer / 2 : cursorLeaveFromRight ? x + buffer * 4 : x - buffer * 4, y - buffer];\n              const cursorPointTwo = [isFloatingWider ? x - buffer / 2 : cursorLeaveFromRight ? x + buffer * 4 : x - buffer * 4, y - buffer];\n              const commonPoints = [[rect.left, cursorLeaveFromRight ? rect.top + buffer : isFloatingWider ? rect.top + buffer : rect.bottom], [rect.right, cursorLeaveFromRight ? isFloatingWider ? rect.top + buffer : rect.bottom : rect.top + buffer]];\n              return [cursorPointOne, cursorPointTwo, ...commonPoints];\n            }\n          case 'left':\n            {\n              const cursorPointOne = [x + buffer + 1, isFloatingTaller ? y + buffer / 2 : cursorLeaveFromBottom ? y + buffer * 4 : y - buffer * 4];\n              const cursorPointTwo = [x + buffer + 1, isFloatingTaller ? y - buffer / 2 : cursorLeaveFromBottom ? y + buffer * 4 : y - buffer * 4];\n              const commonPoints = [[cursorLeaveFromBottom ? rect.right - buffer : isFloatingTaller ? rect.right - buffer : rect.left, rect.top], [cursorLeaveFromBottom ? isFloatingTaller ? rect.right - buffer : rect.left : rect.right - buffer, rect.bottom]];\n              return [...commonPoints, cursorPointOne, cursorPointTwo];\n            }\n          case 'right':\n            {\n              const cursorPointOne = [x - buffer, isFloatingTaller ? y + buffer / 2 : cursorLeaveFromBottom ? y + buffer * 4 : y - buffer * 4];\n              const cursorPointTwo = [x - buffer, isFloatingTaller ? y - buffer / 2 : cursorLeaveFromBottom ? y + buffer * 4 : y - buffer * 4];\n              const commonPoints = [[cursorLeaveFromBottom ? rect.left + buffer : isFloatingTaller ? rect.left + buffer : rect.right, rect.top], [cursorLeaveFromBottom ? isFloatingTaller ? rect.left + buffer : rect.right : rect.left + buffer, rect.bottom]];\n              return [cursorPointOne, cursorPointTwo, ...commonPoints];\n            }\n        }\n      }\n      if (isPointInPolygon([clientX, clientY], rectPoly)) {\n        return;\n      } else if (hasLanded && !isOverReferenceRect) {\n        return close();\n      }\n      if (!isLeave && requireIntent) {\n        const cursorSpeed = getCursorSpeed(event.clientX, event.clientY);\n        const cursorSpeedThreshold = 0.1;\n        if (cursorSpeed !== null && cursorSpeed < cursorSpeedThreshold) {\n          return close();\n        }\n      }\n      if (!isPointInPolygon([clientX, clientY], getPolygon([x, y]))) {\n        close();\n      } else if (!hasLanded && requireIntent) {\n        timeoutId = window.setTimeout(close, 40);\n      }\n    };\n  };\n  fn.__options = {\n    blockPointerEvents\n  };\n  return fn;\n}\n\nexport { FloatingArrow, FloatingDelayGroup, FloatingFocusManager, FloatingList, FloatingNode, FloatingOverlay, FloatingPortal, FloatingTree, inner, safePolygon, useClick, useClientPoint, useDelayGroup, useDelayGroupContext, useDismiss, useFloating, useFloatingNodeId, useFloatingParentNodeId, useFloatingPortalNode, useFloatingTree, useFocus, useHover, useId, useInnerOffset, useInteractions, useListItem, useListNavigation, useMergeRefs, useRole, useTransitionStatus, useTransitionStyles, useTypeahead };\n","var AwaitValue = require(\"./AwaitValue.js\");\n\nfunction _awaitAsyncGenerator(value) {\n  return new AwaitValue(value);\n}\n\nmodule.exports = _awaitAsyncGenerator;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var superPropBase = require(\"./superPropBase.js\");\n\nfunction _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    module.exports = _get = Reflect.get;\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  } else {\n    module.exports = _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  }\n\n  return _get(target, property, receiver || target);\n}\n\nmodule.exports = _get;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","export const LIFECYCLE = {\n  NO_STATE: 'Awaiting state',\n  MATCHED: 'Matched. State transferred from previous layer',\n  INITIALIZED: 'Initialized',\n  AWAITING_GC: 'Discarded. Awaiting garbage collection',\n  AWAITING_FINALIZATION: 'No longer matched. Awaiting garbage collection',\n  FINALIZED: 'Finalized! Awaiting garbage collection'\n} as const;\n\nexport type Lifecycle = typeof LIFECYCLE[keyof typeof LIFECYCLE];\n\n/* Secret props keys */\n// Symbols are non-enumerable by default, does not show in for...in or Object.keys\n// but are copied with Object.assign ¯\\_(ツ)_/¯\n// Supported everywhere except IE11, can be polyfilled with core-js\nexport const COMPONENT_SYMBOL: unique symbol = Symbol.for('component');\nexport const PROP_TYPES_SYMBOL: unique symbol = Symbol.for('propTypes');\nexport const DEPRECATED_PROPS_SYMBOL: unique symbol = Symbol.for('deprecatedProps');\nexport const ASYNC_DEFAULTS_SYMBOL: unique symbol = Symbol.for('asyncPropDefaults');\nexport const ASYNC_ORIGINAL_SYMBOL: unique symbol = Symbol.for('asyncPropOriginal');\nexport const ASYNC_RESOLVED_SYMBOL: unique symbol = Symbol.for('asyncPropResolved');\n","const DEFAULT_LIGHT_COLOR = [255, 255, 255];\nconst DEFAULT_LIGHT_INTENSITY = 1.0;\n\nlet idCount = 0;\n\nexport type AmbientLightOptions = {\n  id?: string;\n  /** Light color, [r, g, b] in the 0-255 range\n   * @default [255, 255, 255]\n   */\n  color?: number[];\n  /** Light intensity, higher number is brighter\n   * @default 1.0\n   */\n  intensity?: number;\n};\n\nexport class AmbientLight {\n  id: string;\n  color: number[];\n  intensity: number;\n  type = 'ambient';\n\n  constructor(props: AmbientLightOptions = {}) {\n    const {color = DEFAULT_LIGHT_COLOR} = props;\n    const {intensity = DEFAULT_LIGHT_INTENSITY} = props;\n\n    this.id = props.id || `ambient-${idCount++}`;\n    this.color = color;\n    this.intensity = intensity;\n  }\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nconst ERR_NOT_OBJECT = 'count(): argument not an object';\nconst ERR_NOT_CONTAINER = 'count(): argument not a container';\n\n/**\n * Deduces numer of elements in a JavaScript container.\n * - Auto-deduction for ES6 containers that define a count() method\n * - Auto-deduction for ES6 containers that define a size member\n * - Auto-deduction for Classic Arrays via the built-in length attribute\n * - Also handles objects, although note that this an O(N) operation\n */\nexport function count(container: any): number {\n  if (!isObject(container)) {\n    throw new Error(ERR_NOT_OBJECT);\n  }\n\n  // Check if ES6 collection \"count\" function is available\n  if (typeof container.count === 'function') {\n    return container.count();\n  }\n\n  // Check if ES6 collection \"size\" attribute is set\n  if (Number.isFinite(container.size)) {\n    return container.size;\n  }\n\n  // Check if array length attribute is set\n  // Note: checking this last since some ES6 collections (Immutable.js)\n  // emit profuse warnings when trying to access `length` attribute\n  if (Number.isFinite(container.length)) {\n    return container.length;\n  }\n\n  // Note that getting the count of an object is O(N)\n  if (isPlainObject(container)) {\n    return Object.keys(container).length;\n  }\n\n  throw new Error(ERR_NOT_CONTAINER);\n}\n\n/**\n * Checks if argument is a plain object (not a class or array etc)\n * @param {*} value - JavaScript value to be tested\n * @return {Boolean} - true if argument is a plain JavaScript object\n */\nfunction isPlainObject(value) {\n  return value !== null && typeof value === 'object' && value.constructor === Object;\n}\n\n/**\n * Checks if argument is an indexable object (not a primitive value, nor null)\n * @param {*} value - JavaScript value to be tested\n * @return {Boolean} - true if argument is a JavaScript object\n */\nfunction isObject(value) {\n  return value !== null && typeof value === 'object';\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n// Merge two luma.gl shader descriptors\nexport function mergeShaders(target, source) {\n  if (!source) {\n    return target;\n  }\n  const result = {...target, ...source};\n\n  if ('defines' in source) {\n    result.defines = {...target.defines, ...source.defines};\n  }\n  if ('modules' in source) {\n    result.modules = (target.modules || []).concat(source.modules);\n\n    // Hack: prject32 and project64 cannot co-exist\n    if (source.modules.some(module => module.name === 'project64')) {\n      const index = result.modules.findIndex(module => module.name === 'project32');\n      if (index >= 0) {\n        result.modules.splice(index, 1);\n      }\n    }\n  }\n  if ('inject' in source) {\n    if (!target.inject) {\n      result.inject = source.inject;\n    } else {\n      const mergedInjection = {...target.inject};\n      for (const key in source.inject) {\n        mergedInjection[key] = (mergedInjection[key] || '') + source.inject[key];\n      }\n      result.inject = mergedInjection;\n    }\n  }\n  return result;\n}\n","import {Matrix4} from '@math.gl/core';\nimport Viewport from './viewport';\nimport {PROJECTION_MODE} from '../lib/constants';\n\nimport * as vec3 from 'gl-matrix/vec3';\nimport * as vec4 from 'gl-matrix/vec4';\n\nconst DEGREES_TO_RADIANS = Math.PI / 180;\nconst RADIANS_TO_DEGREES = 180 / Math.PI;\nconst EARTH_RADIUS = 6370972;\nconst GLOBE_RADIUS = 256;\n\nfunction getDistanceScales() {\n  const unitsPerMeter = GLOBE_RADIUS / EARTH_RADIUS;\n  const unitsPerDegree = (Math.PI / 180) * GLOBE_RADIUS;\n\n  return {\n    unitsPerMeter: [unitsPerMeter, unitsPerMeter, unitsPerMeter],\n    unitsPerMeter2: [0, 0, 0],\n    metersPerUnit: [1 / unitsPerMeter, 1 / unitsPerMeter, 1 / unitsPerMeter],\n    unitsPerDegree: [unitsPerDegree, unitsPerDegree, unitsPerMeter],\n    unitsPerDegree2: [0, 0, 0],\n    degreesPerUnit: [1 / unitsPerDegree, 1 / unitsPerDegree, 1 / unitsPerMeter]\n  };\n}\n\nexport type GlobeViewportOptions = {\n  /** Name of the viewport */\n  id?: string;\n  /** Left offset from the canvas edge, in pixels */\n  x?: number;\n  /** Top offset from the canvas edge, in pixels */\n  y?: number;\n  /** Viewport width in pixels */\n  width?: number;\n  /** Viewport height in pixels */\n  height?: number;\n  /** Longitude in degrees */\n  longitude?: number;\n  /** Latitude in degrees */\n  latitude?: number;\n  /** Camera altitude relative to the viewport height, used to control the FOV. Default `1.5` */\n  altitude?: number;\n  /* Meter offsets of the viewport center from lng, lat */\n  position?: number[];\n  /** Zoom level */\n  zoom?: number;\n  /** Use orthographic projection */\n  orthographic?: boolean;\n  /** Scaler for the near plane, 1 unit equals to the height of the viewport. Default `0.1` */\n  nearZMultiplier?: number;\n  /** Scaler for the far plane, 1 unit equals to the distance from the camera to the edge of the screen. Default `2` */\n  farZMultiplier?: number;\n  /** The resolution at which to turn flat features into 3D meshes, in degrees. Smaller numbers will generate more detailed mesh. Default `10` */\n  resolution?: number;\n};\n\nexport default class GlobeViewport extends Viewport {\n  // @ts-ignore\n  longitude: number;\n  // @ts-ignore\n  latitude: number;\n  resolution: number;\n\n  constructor(opts: GlobeViewportOptions = {}) {\n    const {\n      latitude = 0,\n      longitude = 0,\n      zoom = 0,\n      nearZMultiplier = 0.1,\n      farZMultiplier = 2,\n      resolution = 10\n    } = opts;\n\n    let {height, altitude = 1.5} = opts;\n\n    height = height || 1;\n    altitude = Math.max(0.75, altitude);\n\n    // Calculate view matrix\n    const viewMatrix = new Matrix4().lookAt({eye: [0, -altitude, 0], up: [0, 0, 1]});\n    const scale = Math.pow(2, zoom);\n    viewMatrix.rotateX(latitude * DEGREES_TO_RADIANS);\n    viewMatrix.rotateZ(-longitude * DEGREES_TO_RADIANS);\n    viewMatrix.scale(scale / height);\n\n    const halfFov = Math.atan(0.5 / altitude);\n    const relativeScale = (GLOBE_RADIUS * 2 * scale) / height;\n\n    super({\n      ...opts,\n      // x, y, width,\n      height,\n\n      // view matrix\n      viewMatrix,\n      longitude,\n      latitude,\n      zoom,\n\n      // projection matrix parameters\n      distanceScales: getDistanceScales(),\n      fovyRadians: halfFov * 2,\n      focalDistance: altitude,\n      near: nearZMultiplier,\n      far: Math.min(2, 1 / relativeScale + 1) * altitude * farZMultiplier\n    });\n\n    this.latitude = latitude;\n    this.longitude = longitude;\n    this.resolution = resolution;\n  }\n\n  get projectionMode() {\n    return PROJECTION_MODE.GLOBE;\n  }\n\n  getDistanceScales() {\n    return this.distanceScales;\n  }\n\n  getBounds(options: {z?: number} = {}): [number, number, number, number] {\n    const unprojectOption = {targetZ: options.z || 0};\n\n    const left = this.unproject([0, this.height / 2], unprojectOption);\n    const top = this.unproject([this.width / 2, 0], unprojectOption);\n    const right = this.unproject([this.width, this.height / 2], unprojectOption);\n    const bottom = this.unproject([this.width / 2, this.height], unprojectOption);\n\n    if (right[0] < this.longitude) right[0] += 360;\n    if (left[0] > this.longitude) left[0] -= 360;\n\n    return [\n      Math.min(left[0], right[0], top[0], bottom[0]),\n      Math.min(left[1], right[1], top[1], bottom[1]),\n      Math.max(left[0], right[0], top[0], bottom[0]),\n      Math.max(left[1], right[1], top[1], bottom[1])\n    ];\n  }\n\n  unproject(\n    xyz: number[],\n    {topLeft = true, targetZ}: {topLeft?: boolean; targetZ?: number} = {}\n  ): number[] {\n    const [x, y, z] = xyz;\n\n    const y2 = topLeft ? y : this.height - y;\n    const {pixelUnprojectionMatrix} = this;\n\n    let coord;\n    if (Number.isFinite(z)) {\n      // Has depth component\n      coord = transformVector(pixelUnprojectionMatrix, [x, y2, z, 1]);\n    } else {\n      // since we don't know the correct projected z value for the point,\n      // unproject two points to get a line and then find the point on that line that intersects with the sphere\n      const coord0 = transformVector(pixelUnprojectionMatrix, [x, y2, -1, 1]);\n      const coord1 = transformVector(pixelUnprojectionMatrix, [x, y2, 1, 1]);\n\n      const lt = ((targetZ || 0) / EARTH_RADIUS + 1) * GLOBE_RADIUS;\n      const lSqr = vec3.sqrLen(vec3.sub([], coord0, coord1));\n      const l0Sqr = vec3.sqrLen(coord0);\n      const l1Sqr = vec3.sqrLen(coord1);\n      const sSqr = (4 * l0Sqr * l1Sqr - (lSqr - l0Sqr - l1Sqr) ** 2) / 16;\n      const dSqr = (4 * sSqr) / lSqr;\n      const r0 = Math.sqrt(l0Sqr - dSqr);\n      const dr = Math.sqrt(Math.max(0, lt * lt - dSqr));\n      const t = (r0 - dr) / Math.sqrt(lSqr);\n\n      coord = vec3.lerp([], coord0, coord1, t);\n    }\n    const [X, Y, Z] = this.unprojectPosition(coord);\n\n    if (Number.isFinite(z)) {\n      return [X, Y, Z];\n    }\n    return Number.isFinite(targetZ) ? [X, Y, targetZ as number] : [X, Y];\n  }\n\n  projectPosition(xyz: number[]): [number, number, number] {\n    const [lng, lat, Z = 0] = xyz;\n    const lambda = lng * DEGREES_TO_RADIANS;\n    const phi = lat * DEGREES_TO_RADIANS;\n    const cosPhi = Math.cos(phi);\n    const D = (Z / EARTH_RADIUS + 1) * GLOBE_RADIUS;\n\n    return [Math.sin(lambda) * cosPhi * D, -Math.cos(lambda) * cosPhi * D, Math.sin(phi) * D];\n  }\n\n  unprojectPosition(xyz: number[]): [number, number, number] {\n    const [x, y, z] = xyz;\n    const D = vec3.len(xyz);\n    const phi = Math.asin(z / D);\n    const lambda = Math.atan2(x, -y);\n\n    const lng = lambda * RADIANS_TO_DEGREES;\n    const lat = phi * RADIANS_TO_DEGREES;\n    const Z = (D / GLOBE_RADIUS - 1) * EARTH_RADIUS;\n    return [lng, lat, Z];\n  }\n\n  projectFlat(xyz: number[]): [number, number] {\n    return xyz as [number, number];\n  }\n\n  unprojectFlat(xyz: number[]): [number, number] {\n    return xyz as [number, number];\n  }\n\n  panByPosition(coords: number[], pixel: number[]): GlobeViewportOptions {\n    const fromPosition = this.unproject(pixel);\n    return {\n      longitude: coords[0] - fromPosition[0] + this.longitude,\n      latitude: coords[1] - fromPosition[1] + this.latitude\n    };\n  }\n}\n\nfunction transformVector(matrix: number[], vector: number[]): number[] {\n  const result = vec4.transformMat4([], vector, matrix);\n  vec4.scale(result, result, 1 / result[3]);\n  return result;\n}\n","import {\n  h3ToGeoBoundary,\n  h3GetResolution,\n  h3ToGeo,\n  geoToH3,\n  h3IsPentagon,\n  h3Distance,\n  edgeLength,\n  H3Index\n} from 'h3-js';\nimport {lerp} from '@math.gl/core';\nimport {\n  AccessorFunction,\n  CompositeLayer,\n  createIterable,\n  Layer,\n  LayersList,\n  UpdateParameters,\n  WebMercatorViewport,\n  DefaultProps\n} from '@deck.gl/core';\nimport {ColumnLayer, PolygonLayer, PolygonLayerProps} from '@deck.gl/layers';\n\n// There is a cost to updating the instanced geometries when using highPrecision: false\n// This constant defines the distance between two hexagons that leads to \"significant\n// distortion.\" Smaller value makes the column layer more sensitive to viewport change.\nconst UPDATE_THRESHOLD_KM = 10;\n\n// normalize longitudes w.r.t center (refLng), when not provided first vertex\nexport function normalizeLongitudes(vertices: number[][], refLng?: number): void {\n  refLng = refLng === undefined ? vertices[0][0] : refLng;\n  for (const pt of vertices) {\n    const deltaLng = pt[0] - refLng;\n    if (deltaLng > 180) {\n      pt[0] -= 360;\n    } else if (deltaLng < -180) {\n      pt[0] += 360;\n    }\n  }\n}\n\n// scale polygon vertices w.r.t center (hexId)\nexport function scalePolygon(hexId: H3Index, vertices: number[][], factor: number): void {\n  const [lat, lng] = h3ToGeo(hexId);\n  const actualCount = vertices.length;\n\n  // normalize with respect to center\n  normalizeLongitudes(vertices, lng);\n\n  // `h3ToGeoBoundary` returns same array object for first and last vertex (closed polygon),\n  // if so skip scaling the last vertex\n  const vertexCount = vertices[0] === vertices[actualCount - 1] ? actualCount - 1 : actualCount;\n  for (let i = 0; i < vertexCount; i++) {\n    vertices[i][0] = lerp(lng, vertices[i][0], factor);\n    vertices[i][1] = lerp(lat, vertices[i][1], factor);\n  }\n}\n\nfunction getHexagonCentroid(getHexagon, object, objectInfo) {\n  const hexagonId = getHexagon(object, objectInfo);\n  const [lat, lng] = h3ToGeo(hexagonId);\n  return [lng, lat];\n}\n\nfunction h3ToPolygon(hexId: H3Index, coverage: number = 1): number[][] {\n  const vertices = h3ToGeoBoundary(hexId, true);\n\n  if (coverage !== 1) {\n    // scale and normalize vertices w.r.t to center\n    scalePolygon(hexId, vertices, coverage);\n  } else {\n    // normalize w.r.t to start vertex\n    normalizeLongitudes(vertices);\n  }\n\n  return vertices;\n}\n\nfunction flattenPolygon(vertices: number[][]): Float64Array {\n  const positions = new Float64Array(vertices.length * 2);\n  let i = 0;\n  for (const pt of vertices) {\n    positions[i++] = pt[0];\n    positions[i++] = pt[1];\n  }\n  return positions;\n}\n\nfunction mergeTriggers(getHexagon, coverage) {\n  let trigger;\n  if (getHexagon === undefined || getHexagon === null) {\n    trigger = coverage;\n  } else if (typeof getHexagon === 'object') {\n    trigger = {...getHexagon, coverage};\n  } else {\n    trigger = {getHexagon, coverage};\n  }\n  return trigger;\n}\n\nconst defaultProps: DefaultProps<H3HexagonLayerProps> = {\n  ...PolygonLayer.defaultProps,\n  highPrecision: 'auto',\n  coverage: {type: 'number', min: 0, max: 1, value: 1},\n  centerHexagon: null,\n  getHexagon: {type: 'accessor', value: x => x.hexagon},\n  extruded: true\n};\n\n/** All properties supported by H3HexagonLayer */\nexport type H3HexagonLayerProps<DataT = any> = _H3HexagonLayerProps<DataT> &\n  PolygonLayerProps<DataT>;\n\n/** Props added by the H3HexagonLayer */\ntype _H3HexagonLayerProps<DataT> = {\n  /**\n   * Whether or not draw hexagons with high precision.\n   * @default 'auto'\n   */\n  highPrecision?: boolean | 'auto';\n  /**\n   * Coverage of hexagon in cell.\n   * @default 1\n   */\n  coverage?: number;\n  /**\n   * Center hexagon that best represents the shape of the set. If not specified, the hexagon closest to the center of the viewport is used.\n   */\n  centerHexagon?: H3Index | null;\n  /**\n   * Called for each data object to retrieve the quadkey string identifier.\n   *\n   * By default, it reads `hexagon` property of data object.\n   */\n  getHexagon?: AccessorFunction<DataT, string>;\n  /**\n   * Whether to extrude polygons.\n   * @default true\n   */\n  extruded?: boolean;\n};\n\n/**\n * Render hexagons from the [H3](https://h3geo.org/) geospatial indexing system.\n */\nexport default class H3HexagonLayer<\n  DataT = any,\n  ExtraPropsT extends {} = {}\n> extends CompositeLayer<ExtraPropsT & Required<H3HexagonLayerProps<DataT>>> {\n  static defaultProps = defaultProps;\n  static layerName = 'H3HexagonLayer';\n\n  // See `main/bundle.ts`\n  static _checkH3Lib = () => {};\n\n  initializeState() {\n    H3HexagonLayer._checkH3Lib();\n    this.state = {\n      edgeLengthKM: 0,\n      resolution: -1\n    };\n  }\n\n  state!: {\n    centerHex?: H3Index;\n    edgeLengthKM: number;\n    hasMultipleRes?: boolean;\n    hasPentagon?: boolean;\n    resolution: number;\n    vertices?: number[][];\n  };\n\n  shouldUpdateState({changeFlags}: UpdateParameters<this>): boolean {\n    return this._shouldUseHighPrecision()\n      ? changeFlags.propsOrDataChanged\n      : changeFlags.somethingChanged;\n  }\n\n  updateState({props, changeFlags}: UpdateParameters<this>): void {\n    if (\n      props.highPrecision !== true &&\n      (changeFlags.dataChanged ||\n        (changeFlags.updateTriggersChanged && changeFlags.updateTriggersChanged.getHexagon))\n    ) {\n      const dataProps = this._calculateH3DataProps();\n      this.setState(dataProps);\n    }\n\n    this._updateVertices(this.context.viewport as WebMercatorViewport);\n  }\n\n  private _calculateH3DataProps() {\n    let resolution = -1;\n    let hasPentagon = false;\n    let hasMultipleRes = false;\n\n    const {iterable, objectInfo} = createIterable(this.props.data);\n    for (const object of iterable) {\n      objectInfo.index++;\n      const hexId = this.props.getHexagon(object, objectInfo);\n      // Take the resolution of the first hex\n      const hexResolution = h3GetResolution(hexId);\n      if (resolution < 0) {\n        resolution = hexResolution;\n        if (!this.props.highPrecision) break;\n      } else if (resolution !== hexResolution) {\n        hasMultipleRes = true;\n        break;\n      }\n      if (h3IsPentagon(hexId)) {\n        hasPentagon = true;\n        break;\n      }\n    }\n\n    return {\n      resolution,\n      edgeLengthKM: resolution >= 0 ? edgeLength(resolution, 'km') : 0,\n      hasMultipleRes,\n      hasPentagon\n    };\n  }\n\n  private _shouldUseHighPrecision(): boolean {\n    if (this.props.highPrecision === 'auto') {\n      const {resolution, hasPentagon, hasMultipleRes} = this.state;\n      const {viewport} = this.context;\n      return (\n        Boolean(viewport?.resolution) ||\n        hasMultipleRes ||\n        hasPentagon ||\n        (resolution >= 0 && resolution <= 5)\n      );\n    }\n\n    return this.props.highPrecision;\n  }\n\n  private _updateVertices(viewport: WebMercatorViewport): void {\n    if (this._shouldUseHighPrecision()) {\n      return;\n    }\n    const {resolution, edgeLengthKM, centerHex} = this.state;\n    if (resolution < 0) {\n      return;\n    }\n    const hex =\n      this.props.centerHexagon || geoToH3(viewport.latitude, viewport.longitude, resolution);\n    if (centerHex === hex) {\n      return;\n    }\n    if (centerHex) {\n      const distance = h3Distance(centerHex, hex);\n      // h3Distance returns a negative number if the distance could not be computed\n      // due to the two indexes very far apart or on opposite sides of a pentagon.\n      if (distance >= 0 && distance * edgeLengthKM < UPDATE_THRESHOLD_KM) {\n        return;\n      }\n    }\n\n    const {unitsPerMeter} = viewport.distanceScales;\n\n    let vertices = h3ToPolygon(hex);\n    const [centerLat, centerLng] = h3ToGeo(hex);\n\n    const [centerX, centerY] = viewport.projectFlat([centerLng, centerLat]);\n    vertices = vertices.map(p => {\n      const worldPosition = viewport.projectFlat(p);\n      return [\n        (worldPosition[0] - centerX) / unitsPerMeter[0],\n        (worldPosition[1] - centerY) / unitsPerMeter[1]\n      ];\n    });\n\n    this.setState({centerHex: hex, vertices});\n  }\n\n  renderLayers(): Layer | null | LayersList {\n    return this._shouldUseHighPrecision() ? this._renderPolygonLayer() : this._renderColumnLayer();\n  }\n\n  private _getForwardProps() {\n    const {\n      elevationScale,\n      material,\n      coverage,\n      extruded,\n      wireframe,\n      stroked,\n      filled,\n      lineWidthUnits,\n      lineWidthScale,\n      lineWidthMinPixels,\n      lineWidthMaxPixels,\n      getFillColor,\n      getElevation,\n      getLineColor,\n      getLineWidth,\n      transitions,\n      updateTriggers\n    } = this.props;\n\n    return {\n      elevationScale,\n      extruded,\n      coverage,\n      wireframe,\n      stroked,\n      filled,\n      lineWidthUnits,\n      lineWidthScale,\n      lineWidthMinPixels,\n      lineWidthMaxPixels,\n      material,\n      getElevation,\n      getFillColor,\n      getLineColor,\n      getLineWidth,\n      transitions,\n      updateTriggers: {\n        getFillColor: updateTriggers.getFillColor,\n        getElevation: updateTriggers.getElevation,\n        getLineColor: updateTriggers.getLineColor,\n        getLineWidth: updateTriggers.getLineWidth\n      } as {\n        getFillColor: any;\n        getElevation: any;\n        getLineColor: any;\n        getLineWidth: any;\n        getPolygon?: any;\n        getPosition?: any;\n      }\n    };\n  }\n\n  private _renderPolygonLayer(): PolygonLayer {\n    const {data, getHexagon, updateTriggers, coverage} = this.props;\n\n    const SubLayerClass = this.getSubLayerClass('hexagon-cell-hifi', PolygonLayer);\n    const forwardProps = this._getForwardProps();\n    forwardProps.updateTriggers.getPolygon = mergeTriggers(updateTriggers.getHexagon, coverage);\n\n    return new SubLayerClass(\n      forwardProps,\n      this.getSubLayerProps({\n        id: 'hexagon-cell-hifi',\n        updateTriggers: forwardProps.updateTriggers\n      }),\n      {\n        data,\n        _normalize: false,\n        _windingOrder: 'CCW',\n        positionFormat: 'XY',\n        getPolygon: (object, objectInfo) => {\n          const hexagonId = getHexagon(object, objectInfo);\n          return flattenPolygon(h3ToPolygon(hexagonId, coverage));\n        }\n      }\n    );\n  }\n\n  private _renderColumnLayer(): ColumnLayer {\n    const {data, getHexagon, updateTriggers} = this.props;\n\n    const SubLayerClass = this.getSubLayerClass('hexagon-cell', ColumnLayer);\n    const forwardProps = this._getForwardProps();\n    forwardProps.updateTriggers.getPosition = updateTriggers.getHexagon;\n\n    return new SubLayerClass(\n      forwardProps,\n      this.getSubLayerProps({\n        id: 'hexagon-cell',\n        flatShading: true,\n        updateTriggers: forwardProps.updateTriggers\n      }),\n      {\n        data,\n        diskResolution: 6, // generate an extruded hexagon as the base geometry\n        radius: 1,\n        vertices: this.state.vertices,\n        getPosition: getHexagonCentroid.bind(null, getHexagon)\n      }\n    );\n  }\n}\n","import Transition, {TransitionSettings as BaseTransitionSettings} from '../transitions/transition';\nimport TransitionInterpolator from '../transitions/transition-interpolator';\nimport type {IViewState} from './view-state';\n\nimport type {Timeline} from '@luma.gl/core';\nimport type {InteractionState} from './controller';\n\nconst noop = () => {};\n\n// Enums cannot be directly exported as they are not transpiled correctly into ES5, see https://github.com/visgl/deck.gl/issues/7130\nexport const TRANSITION_EVENTS = {\n  BREAK: 1,\n  SNAP_TO_END: 2,\n  IGNORE: 3\n} as const;\n\ntype TransitionEvent = 1 | 2 | 3;\n\nexport type TransitionProps = {\n  /** Transition duration in milliseconds, default value 0, implies no transition. When using `FlyToInterpolator`, it can also be set to `'auto'`. */\n  transitionDuration?: number | 'auto';\n  /** An interpolator object that defines the transition behavior between two viewports. */\n  transitionInterpolator?: TransitionInterpolator;\n  /** Easing function that can be used to achieve effects like \"Ease-In-Cubic\", \"Ease-Out-Cubic\", etc. Default value performs Linear easing. */\n  transitionEasing?: (t: number) => number;\n  /** Controls how to process a new view state change that occurs during an existing transition. */\n  transitionInterruption?: TransitionEvent;\n  /** Callback fired when requested transition starts. */\n  onTransitionStart?: (transition: Transition) => void;\n  /** Callback fired when requested transition is interrupted. */\n  onTransitionInterrupt?: (transition: Transition) => void;\n  /** Callback fired when requested transition ends. */\n  onTransitionEnd?: (transition: Transition) => void;\n};\n\nconst DEFAULT_EASING = t => t;\nconst DEFAULT_INTERRUPTION = TRANSITION_EVENTS.BREAK;\n\ntype TransitionSettings = BaseTransitionSettings & {\n  interpolator: TransitionInterpolator;\n  easing: (t: number) => number;\n  interruption: TransitionEvent;\n  startProps: Record<string, any>;\n  endProps: Record<string, any>;\n};\n\nexport default class TransitionManager<ControllerState extends IViewState<ControllerState>> {\n  getControllerState: (props: any) => ControllerState;\n  props?: TransitionProps;\n  propsInTransition: Record<string, any> | null;\n  transition: Transition;\n  onViewStateChange: (params: {\n    viewState: Record<string, any>;\n    oldViewState: Record<string, any>;\n  }) => void;\n  onStateChange: (state: InteractionState) => void;\n\n  constructor(opts: {\n    timeline: Timeline;\n    getControllerState: (props: any) => ControllerState;\n    onViewStateChange?: (params: {\n      viewState: Record<string, any>;\n      oldViewState: Record<string, any>;\n    }) => void;\n    onStateChange?: (state: InteractionState) => void;\n  }) {\n    this.getControllerState = opts.getControllerState;\n    this.propsInTransition = null;\n    this.transition = new Transition(opts.timeline);\n\n    this.onViewStateChange = opts.onViewStateChange || noop;\n    this.onStateChange = opts.onStateChange || noop;\n  }\n\n  finalize(): void {\n    this.transition.cancel();\n  }\n\n  // Returns current transitioned viewport.\n  getViewportInTransition(): Record<string, any> | null {\n    return this.propsInTransition;\n  }\n\n  // Process the vewiport change, either ignore or trigger a new transition.\n  // Return true if a new transition is triggered, false otherwise.\n  processViewStateChange(nextProps: TransitionProps) {\n    let transitionTriggered = false;\n    const currentProps = this.props;\n    // Set this.props here as '_triggerTransition' calls '_updateViewport' that uses this.props.\n    this.props = nextProps;\n\n    // NOTE: Be cautious re-ordering statements in this function.\n    if (!currentProps || this._shouldIgnoreViewportChange(currentProps, nextProps)) {\n      return false;\n    }\n\n    if (this._isTransitionEnabled(nextProps)) {\n      let startProps = currentProps;\n      if (this.transition.inProgress) {\n        const {interruption, endProps} = this.transition.settings as TransitionSettings;\n        startProps = {\n          ...currentProps,\n          ...(interruption === TRANSITION_EVENTS.SNAP_TO_END\n            ? endProps\n            : this.propsInTransition || currentProps)\n        };\n      }\n\n      this._triggerTransition(startProps, nextProps);\n\n      transitionTriggered = true;\n    } else {\n      this.transition.cancel();\n    }\n\n    return transitionTriggered;\n  }\n\n  updateTransition() {\n    this.transition.update();\n  }\n\n  // Helper methods\n\n  _isTransitionEnabled(props: TransitionProps): boolean {\n    const {transitionDuration, transitionInterpolator} = props;\n    return (\n      ((transitionDuration as number) > 0 || transitionDuration === 'auto') &&\n      Boolean(transitionInterpolator)\n    );\n  }\n\n  _isUpdateDueToCurrentTransition(props: TransitionProps): boolean {\n    if (this.transition.inProgress && this.propsInTransition) {\n      return (this.transition.settings as TransitionSettings).interpolator.arePropsEqual(\n        props,\n        this.propsInTransition\n      );\n    }\n    return false;\n  }\n\n  _shouldIgnoreViewportChange(currentProps: TransitionProps, nextProps: TransitionProps): boolean {\n    if (this.transition.inProgress) {\n      // Ignore update if it is requested to be ignored\n      return (\n        (this.transition.settings as TransitionSettings).interruption ===\n          TRANSITION_EVENTS.IGNORE ||\n        // Ignore update if it is due to current active transition.\n        this._isUpdateDueToCurrentTransition(nextProps)\n      );\n    }\n    if (this._isTransitionEnabled(nextProps)) {\n      // Ignore if none of the viewport props changed.\n      return (nextProps.transitionInterpolator as TransitionInterpolator).arePropsEqual(\n        currentProps,\n        nextProps\n      );\n    }\n    return true;\n  }\n\n  _triggerTransition(startProps: TransitionProps, endProps: TransitionProps): void {\n    const startViewstate = this.getControllerState(startProps);\n    const endViewStateProps = this.getControllerState(endProps).shortestPathFrom(startViewstate);\n\n    // update transitionDuration for 'auto' mode\n    const transitionInterpolator = endProps.transitionInterpolator as TransitionInterpolator;\n    const duration = transitionInterpolator.getDuration\n      ? transitionInterpolator.getDuration(startProps, endProps)\n      : (endProps.transitionDuration as number);\n\n    if (duration === 0) {\n      return;\n    }\n\n    const initialProps = transitionInterpolator.initializeProps(startProps, endViewStateProps);\n\n    this.propsInTransition = {};\n    const transitionSettings: TransitionSettings = {\n      duration,\n      easing: endProps.transitionEasing || DEFAULT_EASING,\n      interpolator: transitionInterpolator,\n      interruption: endProps.transitionInterruption || DEFAULT_INTERRUPTION,\n\n      startProps: initialProps.start,\n      endProps: initialProps.end,\n\n      onStart: endProps.onTransitionStart,\n      onUpdate: this._onTransitionUpdate,\n      onInterrupt: this._onTransitionEnd(endProps.onTransitionInterrupt),\n      onEnd: this._onTransitionEnd(endProps.onTransitionEnd)\n    };\n    this.transition.start(transitionSettings);\n\n    this.onStateChange({inTransition: true});\n\n    this.updateTransition();\n  }\n\n  _onTransitionEnd(callback?: (transition: Transition) => void) {\n    return transition => {\n      this.propsInTransition = null;\n\n      this.onStateChange({\n        inTransition: false,\n        isZooming: false,\n        isPanning: false,\n        isRotating: false\n      });\n\n      callback?.(transition);\n    };\n  }\n\n  _onTransitionUpdate = transition => {\n    // NOTE: Be cautious re-ordering statements in this function.\n    const {\n      time,\n      settings: {interpolator, startProps, endProps, duration, easing}\n    } = transition;\n    const t = easing(time / duration);\n    const viewport = interpolator.interpolateProps(startProps, endProps, t);\n\n    // This gurantees all props (e.g. bearing, longitude) are normalized\n    // So when viewports are compared they are in same range.\n    this.propsInTransition = this.getControllerState({\n      ...this.props,\n      ...viewport\n    }).getViewportProps();\n\n    this.onViewStateChange({\n      viewState: this.propsInTransition,\n      oldViewState: this.props as TransitionProps\n    });\n  };\n}\n","import {Log} from '@probe.gl/log';\n\nexport default new Log({id: 'deck'});\n","// Copyright (c) 2017 Uber Technologies, Inc.\n// MIT License\nimport {NumericArray} from '@math.gl/types';\nimport assert from './assert';\n\nimport type MathArray from '../classes/base/math-array';\n\nexport type ConfigurationOptions = {\n  EPSILON: number;\n  debug?: boolean;\n  precision: number;\n  printTypes?: boolean;\n  printDegrees?: boolean;\n  printRowMajor?: boolean;\n  _cartographicRadians?: boolean;\n};\n\nconst RADIANS_TO_DEGREES = (1 / Math.PI) * 180;\nconst DEGREES_TO_RADIANS = (1 / 180) * Math.PI;\n\n// TODO - remove\nexport const config: ConfigurationOptions = {\n  EPSILON: 1e-12,\n  debug: false,\n  precision: 4,\n  printTypes: false,\n  printDegrees: false,\n  printRowMajor: true\n};\n\nexport function configure(options?: Partial<ConfigurationOptions>): ConfigurationOptions {\n  // Only copy existing keys\n  for (const key in options) {\n    assert(key in config);\n    config[key] = options[key];\n  }\n  return config;\n}\n\n/**\n * Formats a value into a string\n * @param value\n * @param param1\n * @returns\n */\nexport function formatValue(\n  value: number,\n  {precision = config.precision}: {precision?: number} = {}\n): string {\n  value = round(value);\n  // get rid of trailing zeros\n  return `${parseFloat(value.toPrecision(precision))}`;\n}\n\n/**\n * Check if value is an \"array\"\n * Returns `true` if value is either an array or a typed array\n *\n * Note: returns `false` for `ArrayBuffer` and `DataView` instances\n */\nexport function isArray(value: unknown): boolean {\n  return Array.isArray(value) || (ArrayBuffer.isView(value) && !(value instanceof DataView));\n}\n\nexport function clone(array: NumericArray | MathArray): NumericArray {\n  return 'clone' in array ? array.clone() : array.slice();\n}\n\nexport function toRadians(degrees: number): number;\nexport function toRadians(degrees: NumericArray): NumericArray;\n\nexport function toRadians(degrees: number | NumericArray): number | NumericArray {\n  return radians(degrees as NumericArray);\n}\n\nexport function toDegrees(degrees: number): number;\nexport function toDegrees(degrees: NumericArray): NumericArray;\n\nexport function toDegrees(radians: number | NumericArray): number | NumericArray {\n  return degrees(radians as NumericArray);\n}\n\n// GLSL math function equivalents - Works on both single values and vectors\n\n/**\n * \"GLSL equivalent\" radians: Works on single values and vectors\n */\nexport function radians(degrees: number): number;\nexport function radians(degrees: NumericArray, result?: NumericArray): NumericArray;\n\nexport function radians(\n  degrees: number | NumericArray,\n  result?: NumericArray\n): number | NumericArray {\n  return map(degrees, (degrees) => degrees * DEGREES_TO_RADIANS, result);\n}\n\n/**\n * \"GLSL equivalent\" degrees: Works on single values and vectors\n */\nexport function degrees(radians: number): number;\nexport function degrees(radians: NumericArray, result?: NumericArray): NumericArray;\n\nexport function degrees(\n  radians: number | NumericArray,\n  result?: NumericArray\n): number | NumericArray {\n  return map(radians, (radians) => radians * RADIANS_TO_DEGREES, result);\n}\n\n/**\n * \"GLSL equivalent\" of `Math.sin`: Works on single values and vectors\n * @deprecated\n */\nexport function sin(radians: number | NumericArray, result?: NumericArray): number | NumericArray {\n  return map(radians, (angle) => Math.sin(angle), result);\n}\n\n/**\n * \"GLSL equivalent\" of `Math.cos`: Works on single values and vectors\n * @deprecated\n */\nexport function cos(radians: number | NumericArray, result?: NumericArray): number | NumericArray {\n  return map(radians, (angle) => Math.cos(angle), result);\n}\n\n/**\n * \"GLSL equivalent\" of `Math.tan`: Works on single values and vectors\n * @deprecated\n */\nexport function tan(radians: number | NumericArray, result?: NumericArray): number | NumericArray {\n  return map(radians, (angle) => Math.tan(angle), result);\n}\n\n/**\n * \"GLSL equivalent\" of `Math.asin`: Works on single values and vectors\n * @deprecated\n */\nexport function asin(radians: number | NumericArray, result?: NumericArray): number | NumericArray {\n  return map(radians, (angle) => Math.asin(angle), result);\n}\n\n/**\n * \"GLSL equivalent\" of `Math.acos`: Works on single values and vectors\n * @deprecated\n */\nexport function acos(radians: number | NumericArray, result?: NumericArray): number | NumericArray {\n  return map(radians, (angle) => Math.acos(angle), result);\n}\n\n/**\n * \"GLSL equivalent\" of `Math.atan`: Works on single values and vectors\n * @deprecated\n */\nexport function atan(radians: number | NumericArray, result?: NumericArray): number | NumericArray {\n  return map(radians, (angle) => Math.atan(angle), result);\n}\n\n/**\n * GLSL style value clamping: Works on single values and vectors\n */\nexport function clamp(value: number, min: number, max: number): number;\nexport function clamp(value: NumericArray, min: number, max: number): NumericArray;\n\nexport function clamp(\n  value: number | NumericArray,\n  min: number,\n  max: number\n): number | NumericArray {\n  return map(value, (value) => Math.max(min, Math.min(max, value)));\n}\n\n/**\n * Interpolate between two numbers or two arrays\n */\nexport function lerp(a: number, b: number, t: number): number;\nexport function lerp(a: NumericArray, b: NumericArray, t: number): NumericArray;\n\nexport function lerp(\n  a: number | NumericArray,\n  b: number | NumericArray,\n  t: number\n): number | NumericArray {\n  if (isArray(a)) {\n    return (a as NumericArray).map((ai: number, i: number) => lerp(ai, (b as NumericArray)[i], t));\n  }\n  return t * (b as number) + (1 - t) * (a as number);\n}\n\n/* eslint-disable */\n\n/**\n * Compares any two math objects, using `equals` method if available.\n * @param a\n * @param b\n * @param epsilon\n * @returns\n */\nexport function equals(a: any, b: any, epsilon?: number): boolean {\n  const oldEpsilon = config.EPSILON;\n  if (epsilon) {\n    config.EPSILON = epsilon;\n  }\n  try {\n    if (a === b) {\n      return true;\n    }\n    if (isArray(a) && isArray(b)) {\n      if (a.length !== b.length) {\n        return false;\n      }\n      for (let i = 0; i < a.length; ++i) {\n        // eslint-disable-next-line max-depth\n        if (!equals(a[i], b[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a && a.equals) {\n      return a.equals(b);\n    }\n    if (b && b.equals) {\n      return b.equals(a);\n    }\n    if (typeof a === 'number' && typeof b === 'number') {\n      return Math.abs(a - b) <= config.EPSILON * Math.max(1, Math.abs(a), Math.abs(b));\n    }\n    return false;\n  } finally {\n    config.EPSILON = oldEpsilon;\n  }\n}\n\nexport function exactEquals(a: any, b: any): boolean {\n  if (a === b) {\n    return true;\n  }\n  if (a && typeof a === 'object' && b && typeof b === 'object') {\n    if (a.constructor !== b.constructor) {\n      return false;\n    }\n    if (a.exactEquals) {\n      return a.exactEquals(b);\n    }\n  }\n  if (isArray(a) && isArray(b)) {\n    if (a.length !== b.length) {\n      return false;\n    }\n    for (let i = 0; i < a.length; ++i) {\n      if (!exactEquals(a[i], b[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return false;\n}\n\n/* eslint-enable */\n\nexport function withEpsilon<T>(epsilon: number, func: () => T): T {\n  const oldPrecision = config.EPSILON;\n  config.EPSILON = epsilon;\n  let value: T;\n  try {\n    value = func();\n  } finally {\n    config.EPSILON = oldPrecision;\n  }\n  return value;\n}\n\n// HELPERS\n\nfunction round(value: number): number {\n  return Math.round(value / config.EPSILON) * config.EPSILON;\n}\n\n// If the array has a clone function, calls it, otherwise returns a copy\nfunction duplicateArray(array: NumericArray): NumericArray {\n  // @ts-expect-error We check for math.gl class methods\n  return array.clone ? array.clone() : (new Array(array.length) as number[]);\n}\n\n// If the argument value is an array, applies the func element wise,\n// otherwise applies func to the argument value\nfunction map(\n  value: number | NumericArray,\n  func: (x: number, index?: number, result?: NumericArray) => number,\n  result?: NumericArray\n): number | NumericArray {\n  if (isArray(value)) {\n    const array = value as NumericArray;\n    result = result || duplicateArray(array);\n    for (let i = 0; i < result.length && i < array.length; ++i) {\n      result[i] = func(value[i], i, result);\n    }\n    return result;\n  }\n  return func(value as number);\n}\n","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","import {lerp} from '@math.gl/core';\nimport Transition from './transition';\n\nexport default class CPUInterpolationTransition extends Transition {\n  get value() {\n    return this._value;\n  }\n\n  _onUpdate() {\n    const {\n      time,\n      settings: {fromValue, toValue, duration, easing}\n    } = this;\n    const t = easing(time / duration);\n    this._value = lerp(fromValue, toValue, t);\n  }\n}\n","import Transition from './transition';\n\nconst EPSILON = 1e-5;\n\n/*\n * Calculate the next value in the spring transition\n * @param prev {Number} - previous value\n * @param cur {Number} - current value\n * @param dest {Number} - destination value\n * @param damping {Number}\n * @param stiffness {Number}\n */\nfunction updateSpringElement(prev, cur, dest, damping, stiffness) {\n  const velocity = cur - prev;\n  const delta = dest - cur;\n  const spring = delta * stiffness;\n  const damper = -velocity * damping;\n  return spring + damper + velocity + cur;\n}\n\n/*\n * Calculate the next value in the spring transition\n * @param prev {Number|Array} - previous value\n * @param cur {Number|Array} - current value\n * @param dest {Number|Array} - destination value\n * @param damping {Number}\n * @param stiffness {Number}\n */\nfunction updateSpring(prev, cur, dest, damping, stiffness) {\n  if (Array.isArray(dest)) {\n    const next = [];\n    for (let i = 0; i < dest.length; i++) {\n      next[i] = updateSpringElement(prev[i], cur[i], dest[i], damping, stiffness);\n    }\n    return next;\n  }\n  return updateSpringElement(prev, cur, dest, damping, stiffness);\n}\n\n/*\n * Calculate the distance between two numbers or two vectors\n */\nfunction distance(value1, value2) {\n  if (Array.isArray(value1)) {\n    let distanceSquare = 0;\n    for (let i = 0; i < value1.length; i++) {\n      const d = value1[i] - value2[i];\n      distanceSquare += d * d;\n    }\n    return Math.sqrt(distanceSquare);\n  }\n  return Math.abs(value1 - value2);\n}\n\nexport default class CPUSpringTransition extends Transition {\n  get value() {\n    return this._currValue;\n  }\n\n  _onUpdate() {\n    // TODO - use timeline\n    // const {time} = this;\n\n    const {fromValue, toValue, damping, stiffness} = this.settings;\n    const {_prevValue = fromValue, _currValue = fromValue} = this;\n    let nextValue = updateSpring(_prevValue, _currValue, toValue, damping, stiffness);\n    const delta = distance(nextValue, toValue);\n    const velocity = distance(nextValue, _currValue);\n\n    if (delta < EPSILON && velocity < EPSILON) {\n      nextValue = toValue;\n      this.end();\n    }\n\n    this._prevValue = _currValue;\n    this._currValue = nextValue;\n  }\n}\n","import {normalizeTransitionSettings} from './attribute/attribute-transition-utils';\nimport CPUInterpolationTransition from '../transitions/cpu-interpolation-transition';\nimport CPUSpringTransition from '../transitions/cpu-spring-transition';\nimport log from '../utils/log';\n\nconst TRANSITION_TYPES = {\n  interpolation: CPUInterpolationTransition,\n  spring: CPUSpringTransition\n};\n\nexport default class UniformTransitionManager {\n  constructor(timeline) {\n    this.transitions = new Map();\n    this.timeline = timeline;\n  }\n\n  get active() {\n    return this.transitions.size > 0;\n  }\n\n  add(key, fromValue, toValue, settings) {\n    const {transitions} = this;\n    if (transitions.has(key)) {\n      const transition = transitions.get(key);\n      // value may not be available if `update()` has not been called. Fallback to `fromValue`\n      const {value = transition.settings.fromValue} = transition;\n      // start from interrupted position\n      fromValue = value;\n      this.remove(key);\n    }\n\n    settings = normalizeTransitionSettings(settings);\n    if (!settings) {\n      return;\n    }\n\n    const TransitionType = TRANSITION_TYPES[settings.type];\n    if (!TransitionType) {\n      log.error(`unsupported transition type '${settings.type}'`)();\n      return;\n    }\n    const transition = new TransitionType(this.timeline);\n    transition.start({\n      ...settings,\n      fromValue,\n      toValue\n    });\n    transitions.set(key, transition);\n  }\n\n  remove(key) {\n    const {transitions} = this;\n    if (transitions.has(key)) {\n      transitions.get(key).cancel();\n      transitions.delete(key);\n    }\n  }\n\n  update() {\n    const propsInTransition = {};\n\n    for (const [key, transition] of this.transitions) {\n      transition.update();\n      propsInTransition[key] = transition.value;\n      if (!transition.inProgress) {\n        // transition ended\n        this.remove(key);\n      }\n    }\n\n    return propsInTransition;\n  }\n\n  clear() {\n    for (const key of this.transitions.keys()) {\n      this.remove(key);\n    }\n  }\n}\n","import {Texture2D} from '@luma.gl/core';\nimport GL from '@luma.gl/constants';\n\nconst DEFAULT_TEXTURE_PARAMETERS: Record<number, number> = {\n  [GL.TEXTURE_MIN_FILTER]: GL.LINEAR_MIPMAP_LINEAR,\n  [GL.TEXTURE_MAG_FILTER]: GL.LINEAR,\n  [GL.TEXTURE_WRAP_S]: GL.CLAMP_TO_EDGE,\n  [GL.TEXTURE_WRAP_T]: GL.CLAMP_TO_EDGE\n};\n\n// Track the textures that are created by us. They need to be released when they are no longer used.\nconst internalTextures: Record<string, string> = {};\n\nexport function createTexture(\n  owner: string,\n  gl: WebGLRenderingContext,\n  image: any,\n  parameters: Record<number, number>\n): Texture2D | null {\n  // image could be one of:\n  //  - Texture2D\n  //  - Browser object: Image, ImageData, ImageData, HTMLCanvasElement, HTMLVideoElement, ImageBitmap\n  //  - Plain object: {width: <number>, height: <number>, data: <Uint8Array>}\n  if (image instanceof Texture2D) {\n    return image;\n  } else if (image.constructor && image.constructor.name !== 'Object') {\n    // Browser object\n    image = {data: image};\n  }\n\n  let specialTextureParameters: Record<number, number> | null = null;\n  if (image.compressed) {\n    specialTextureParameters = {\n      [GL.TEXTURE_MIN_FILTER]: image.data.length > 1 ? GL.LINEAR_MIPMAP_NEAREST : GL.LINEAR\n    };\n  }\n\n  const texture = new Texture2D(gl, {\n    ...image,\n    parameters: {\n      ...DEFAULT_TEXTURE_PARAMETERS,\n      ...specialTextureParameters,\n      ...parameters\n    }\n  });\n  // Track this texture\n  internalTextures[texture.id] = owner;\n  return texture;\n}\n\nexport function destroyTexture(owner: string, texture: Texture2D) {\n  if (!texture || !(texture instanceof Texture2D)) {\n    return;\n  }\n  // Only delete the texture if requested by the same layer that created it\n  if (internalTextures[texture.id] === owner) {\n    texture.delete();\n    delete internalTextures[texture.id];\n  }\n}\n","import {createTexture, destroyTexture} from '../utils/texture';\nimport {deepEqual} from '../utils/deep-equal';\n\nimport type Component from './component';\nimport type {Color, Texture} from '../types/layer-props';\nimport type Layer from '../lib/layer';\n\ntype BasePropType<ValueT> = {\n  value: ValueT;\n  async?: boolean;\n  validate?: (value: any, propType: PropType) => boolean;\n  equal?: (value1: ValueT, value2: ValueT, propType: PropType) => boolean;\n};\n\n/**\n * Normalized prop type definition\n */\nexport type PropType = BasePropType<any> & {\n  type: string;\n  name: string;\n  transform?: (value: any, propType: PropType, component: Component<any>) => any;\n  release?: (value: any, propType: PropType, component: Component<any>) => void;\n};\n\ntype DefaultProp<T> =\n  | T\n  | DeprecatedProp\n  | BooleanPropType\n  | NumberPropType\n  | ColorPropType\n  | ImagePropType\n  | DataPropType<T>\n  | ArrayPropType<T>\n  | ObjectPropType<T>\n  | AccessorPropType<T>\n  | FunctionPropType<T>;\n\nexport type DefaultProps<PropsT extends {} = {}> = {\n  [propName in keyof PropsT]?: DefaultProp<Required<PropsT>[propName]>;\n};\n\ntype BooleanPropType = BasePropType<boolean> & {\n  type: 'boolean';\n};\ntype NumberPropType = BasePropType<number> & {\n  type: 'number';\n  min?: number;\n  max?: number;\n};\ntype ColorPropType = BasePropType<Color | null> & {\n  type: 'color';\n  optional?: boolean;\n};\ntype ArrayPropType<T = any[]> = BasePropType<T> & {\n  type: 'array';\n  optional?: boolean;\n  /** Ignore change in the prop value.\n   * @default false\n   */\n  ignore?: boolean;\n  /** Deep-compare two prop values. Only used if `ignore: false`.\n   * When a number is supplied, used as the depth of deep-comparison. 0 is equivalent to shallow comparison, -1 is infinite depth\n   * When a boolean is supplied, `true` is equivalent to `1` (shallow compare all child fields)\n   * @default false\n   */\n  compare?: boolean | number;\n};\ntype AccessorPropType<T = any> = BasePropType<T> & {\n  type: 'accessor';\n};\ntype FunctionPropType<T = Function> = BasePropType<T> & {\n  type: 'function';\n  optional?: boolean;\n  /** @deprecated use `ignore` instead */\n  compare?: boolean;\n  /** Ignore change in the prop value.\n   * @default true\n   */\n  ignore?: boolean;\n};\ntype DataPropType<T = any> = BasePropType<T> & {\n  type: 'data';\n};\ntype ImagePropType = BasePropType<Texture | null> & {\n  type: 'image';\n  parameters?: Record<number, number>;\n};\ntype ObjectPropType<T = any> = BasePropType<T> & {\n  type: 'object';\n  optional?: boolean;\n  /** Ignore change in the prop value.\n   * @default false\n   */\n  ignore?: boolean;\n  /** Deep-compare two prop values. Only used if `ignore: false`.\n   * When a number is supplied, used as the depth of deep-comparison. 0 is equivalent to shallow comparison, -1 is infinite depth\n   * When a boolean is supplied, `true` is equivalent to `1` (shallow compare all child fields)\n   * @default false\n   */\n  compare?: boolean | number;\n};\ntype DeprecatedProp = {\n  deprecatedFor?: string | string[];\n};\ntype PropTypeDef =\n  | DeprecatedProp\n  | boolean\n  | BooleanPropType\n  | number\n  | NumberPropType\n  | string\n  | DataPropType\n  | number[]\n  | ColorPropType\n  | ArrayPropType\n  | AccessorPropType\n  | FunctionPropType\n  | ImagePropType\n  | ObjectPropType\n  | null;\n\nconst TYPE_DEFINITIONS = {\n  boolean: {\n    validate(value, propType: BooleanPropType) {\n      return true;\n    },\n    equal(value1, value2, propType: BooleanPropType) {\n      return Boolean(value1) === Boolean(value2);\n    }\n  },\n  number: {\n    validate(value, propType: NumberPropType) {\n      return (\n        Number.isFinite(value) &&\n        (!('max' in propType) || value <= propType.max!) &&\n        (!('min' in propType) || value >= propType.min!)\n      );\n    }\n  },\n  color: {\n    validate(value, propType: ColorPropType) {\n      return (\n        (propType.optional && !value) ||\n        (isArray(value) && (value.length === 3 || value.length === 4))\n      );\n    },\n    equal(value1, value2, propType: ColorPropType) {\n      return deepEqual(value1, value2, 1);\n    }\n  },\n  accessor: {\n    validate(value, propType: AccessorPropType) {\n      const valueType = getTypeOf(value);\n      return valueType === 'function' || valueType === getTypeOf(propType.value);\n    },\n    equal(value1, value2, propType: AccessorPropType) {\n      if (typeof value2 === 'function') {\n        return true;\n      }\n      return deepEqual(value1, value2, 1);\n    }\n  },\n  array: {\n    validate(value, propType: ArrayPropType) {\n      return (propType.optional && !value) || isArray(value);\n    },\n    equal(value1, value2, propType: ArrayPropType) {\n      const {compare} = propType;\n      const depth = Number.isInteger(compare as unknown) ? (compare as number) : compare ? 1 : 0;\n      return compare ? deepEqual(value1, value2, depth) : value1 === value2;\n    }\n  },\n  object: {\n    equal(value1, value2, propType: ObjectPropType) {\n      if (propType.ignore) {\n        return true;\n      }\n      const {compare} = propType;\n      const depth = Number.isInteger(compare as unknown) ? (compare as number) : compare ? 1 : 0;\n      return compare ? deepEqual(value1, value2, depth) : value1 === value2;\n    }\n  },\n  function: {\n    validate(value, propType: FunctionPropType) {\n      return (propType.optional && !value) || typeof value === 'function';\n    },\n    equal(value1, value2, propType: FunctionPropType) {\n      // Backward compatibility - {compare: true} and {ignore: false} are equivalent\n      const shouldIgnore = !propType.compare && propType.ignore !== false;\n      return shouldIgnore || value1 === value2;\n    }\n  },\n  data: {\n    transform: (value, propType: DataPropType, component) => {\n      const {dataTransform} = component.props;\n      return dataTransform && value ? dataTransform(value) : value;\n    }\n  },\n  image: {\n    transform: (value, propType: ImagePropType, component) => {\n      const context = (component as Layer).context;\n      if (!context || !context.gl) {\n        return null;\n      }\n      return createTexture(component.id, context.gl, value, {\n        ...propType.parameters,\n        ...component.props.textureParameters\n      });\n    },\n    release: (value, propType: ImagePropType, component) => {\n      destroyTexture(component.id, value);\n    }\n  }\n} as const;\n\nexport function parsePropTypes(propDefs: Record<string, PropTypeDef>): {\n  propTypes: Record<string, PropType>;\n  defaultProps: Record<string, any>;\n  deprecatedProps: Record<string, string[]>;\n} {\n  const propTypes = {};\n  const defaultProps = {};\n  const deprecatedProps = {};\n\n  for (const [propName, propDef] of Object.entries(propDefs)) {\n    const deprecated = (propDef as DeprecatedProp)?.deprecatedFor;\n    if (deprecated) {\n      deprecatedProps[propName] = Array.isArray(deprecated) ? deprecated : [deprecated];\n    } else {\n      const propType = parsePropType(propName, propDef);\n      propTypes[propName] = propType;\n      defaultProps[propName] = propType.value;\n    }\n  }\n  return {propTypes, defaultProps, deprecatedProps};\n}\n\n// Parses one property definition entry. Either contains:\n// * a valid prop type object ({type, ...})\n// * or just a default value, in which case type and name inference is used\nfunction parsePropType(name: string, propDef: PropTypeDef): PropType {\n  switch (getTypeOf(propDef)) {\n    case 'object':\n      return normalizePropDefinition(name, propDef);\n\n    case 'array':\n      return normalizePropDefinition(name, {type: 'array', value: propDef, compare: false});\n\n    case 'boolean':\n      return normalizePropDefinition(name, {type: 'boolean', value: propDef});\n\n    case 'number':\n      return normalizePropDefinition(name, {type: 'number', value: propDef});\n\n    case 'function':\n      // return guessFunctionType(name, propDef);\n      return normalizePropDefinition(name, {type: 'function', value: propDef, compare: true});\n\n    default:\n      return {name, type: 'unknown', value: propDef};\n  }\n}\n\nfunction normalizePropDefinition(name, propDef): PropType {\n  if (!('type' in propDef)) {\n    if (!('value' in propDef)) {\n      // If no type and value this object is likely the value\n      return {name, type: 'object', value: propDef};\n    }\n    return {name, type: getTypeOf(propDef.value), ...propDef};\n  }\n  return {name, ...TYPE_DEFINITIONS[propDef.type], ...propDef};\n}\n\nfunction isArray(value: any): boolean {\n  return Array.isArray(value) || ArrayBuffer.isView(value);\n}\n\n// improved version of javascript typeof that can distinguish arrays and null values\nfunction getTypeOf(value: any): string {\n  if (isArray(value)) {\n    return 'array';\n  }\n  if (value === null) {\n    return 'null';\n  }\n  return typeof value;\n}\n","import log from '../utils/log';\nimport {isAsyncIterable} from '../utils/iterable-utils';\nimport {parsePropTypes} from './prop-types';\nimport {\n  COMPONENT_SYMBOL,\n  PROP_TYPES_SYMBOL,\n  DEPRECATED_PROPS_SYMBOL,\n  ASYNC_ORIGINAL_SYMBOL,\n  ASYNC_RESOLVED_SYMBOL,\n  ASYNC_DEFAULTS_SYMBOL\n} from './constants';\nimport {StatefulComponentProps} from './component';\nimport type Component from './component';\n\n// Create a property object\nexport function createProps<PropsT extends {}>(\n  component: Component<PropsT>,\n  propObjects: Partial<PropsT>[]\n): StatefulComponentProps<PropsT> {\n  // Resolve extension value\n  let extensions: any[] | undefined;\n  for (let i = propObjects.length - 1; i >= 0; i--) {\n    const props = propObjects[i];\n    if ('extensions' in props) {\n      // @ts-expect-error TS(2339) extensions not defined\n      extensions = props.extensions;\n    }\n  }\n\n  // Create a new prop object with empty default props object\n  const propsPrototype = getPropsPrototype(component.constructor, extensions);\n  // The true default props object will be found later\n  const propsInstance = Object.create(propsPrototype);\n\n  // Props need a back pointer to the owning component\n  propsInstance[COMPONENT_SYMBOL] = component;\n  // The supplied (original) values for those async props that are set to url strings or Promises.\n  // In this case, the actual (i.e. resolved) values are looked up from component.internalState\n  propsInstance[ASYNC_ORIGINAL_SYMBOL] = {};\n  // Note: the actual (resolved) values for props that are NOT set to urls or Promises.\n  // in this case the values are served directly from this map\n  propsInstance[ASYNC_RESOLVED_SYMBOL] = {};\n\n  // \"Copy\" all sync props\n  for (let i = 0; i < propObjects.length; ++i) {\n    const props = propObjects[i];\n    // Do not use Object.assign here to avoid Symbols in props overwriting our private fields\n    // This might happen if one of the arguments is another props instance\n    for (const key in props) {\n      propsInstance[key] = props[key];\n    }\n  }\n\n  // Props must be immutable\n  Object.freeze(propsInstance);\n\n  return propsInstance;\n}\n\nconst MergedDefaultPropsCacheKey = '_mergedDefaultProps';\n\n// Return precalculated defaultProps and propType objects if available\n// build them if needed\nfunction getPropsPrototype(componentClass, extensions?: any[]) {\n  // A string that uniquely identifies the extensions involved\n  let cacheKey = MergedDefaultPropsCacheKey;\n  if (extensions) {\n    for (const extension of extensions) {\n      const ExtensionClass = extension.constructor;\n      if (ExtensionClass) {\n        cacheKey += `:${ExtensionClass.extensionName || ExtensionClass.name}`;\n      }\n    }\n  }\n\n  const defaultProps = getOwnProperty(componentClass, cacheKey);\n  if (!defaultProps) {\n    return (componentClass[cacheKey] = createPropsPrototypeAndTypes(\n      componentClass,\n      extensions || []\n    ));\n  }\n  return defaultProps;\n}\n\n// Build defaultProps and propType objects by walking component prototype chain\nfunction createPropsPrototypeAndTypes(\n  componentClass,\n  extensions: any[]\n): Record<string, any> | null {\n  const parent = componentClass.prototype;\n  if (!parent) {\n    return null;\n  }\n\n  const parentClass = Object.getPrototypeOf(componentClass);\n  const parentDefaultProps = getPropsPrototype(parentClass);\n\n  // Parse propTypes from Component.defaultProps\n  const componentDefaultProps = getOwnProperty(componentClass, 'defaultProps') || {};\n  const componentPropDefs = parsePropTypes(componentDefaultProps);\n\n  // Merged default props object. Order: parent, self, extensions\n  const defaultProps: any = Object.assign(\n    Object.create(null),\n    parentDefaultProps,\n    componentPropDefs.defaultProps\n  );\n  // Merged prop type definitions. Order: parent, self, extensions\n  const propTypes = Object.assign(\n    Object.create(null),\n    parentDefaultProps?.[PROP_TYPES_SYMBOL],\n    componentPropDefs.propTypes\n  );\n  // Merged deprecation list. Order: parent, self, extensions\n  const deprecatedProps = Object.assign(\n    Object.create(null),\n    parentDefaultProps?.[DEPRECATED_PROPS_SYMBOL],\n    componentPropDefs.deprecatedProps\n  );\n\n  for (const extension of extensions) {\n    const extensionDefaultProps = getPropsPrototype(extension.constructor);\n    if (extensionDefaultProps) {\n      Object.assign(defaultProps, extensionDefaultProps);\n      Object.assign(propTypes, extensionDefaultProps[PROP_TYPES_SYMBOL]);\n      Object.assign(deprecatedProps, extensionDefaultProps[DEPRECATED_PROPS_SYMBOL]);\n    }\n  }\n\n  // Create any necessary property descriptors and create the default prop object\n  // Assign merged default props\n  createPropsPrototype(defaultProps, componentClass);\n\n  // Add getters/setters for async props\n  addAsyncPropsToPropPrototype(defaultProps, propTypes);\n\n  // Add setters for deprecated props\n  addDeprecatedPropsToPropPrototype(defaultProps, deprecatedProps);\n\n  // Store the precalculated props\n  defaultProps[PROP_TYPES_SYMBOL] = propTypes;\n  defaultProps[DEPRECATED_PROPS_SYMBOL] = deprecatedProps;\n\n  // Backwards compatibility\n  // TODO: remove access of hidden property from the rest of the code base\n  if (extensions.length === 0 && !hasOwnProperty(componentClass, '_propTypes')) {\n    componentClass._propTypes = propTypes;\n  }\n  return defaultProps;\n}\n\n// Builds a pre-merged default props object that component props can inherit from\nfunction createPropsPrototype(defaultProps, componentClass) {\n  // Avoid freezing `id` prop\n  const id = getComponentName(componentClass);\n\n  Object.defineProperties(defaultProps, {\n    // `id` is treated specially because layer might need to override it\n    id: {\n      writable: true,\n      value: id\n    }\n  });\n}\n\nfunction addDeprecatedPropsToPropPrototype(defaultProps, deprecatedProps) {\n  for (const propName in deprecatedProps) {\n    /* eslint-disable accessor-pairs */\n    Object.defineProperty(defaultProps, propName, {\n      enumerable: false,\n      set(newValue) {\n        const nameStr = `${this.id}: ${propName}`;\n\n        for (const newPropName of deprecatedProps[propName]) {\n          if (!hasOwnProperty(this, newPropName)) {\n            this[newPropName] = newValue;\n          }\n        }\n\n        log.deprecated(nameStr, deprecatedProps[propName].join('/'))();\n      }\n    });\n    /* eslint-enable accessor-pairs */\n  }\n}\n\n// Create descriptors for overridable props\nfunction addAsyncPropsToPropPrototype(defaultProps, propTypes) {\n  const defaultValues = {};\n\n  const descriptors = {};\n\n  // Move async props into shadow values\n  for (const propName in propTypes) {\n    const propType = propTypes[propName];\n    const {name, value} = propType;\n\n    // Note: async is ES7 keyword, can't destructure\n    if (propType.async) {\n      defaultValues[name] = value;\n      descriptors[name] = getDescriptorForAsyncProp(name);\n    }\n  }\n\n  // Default \"resolved\" values for async props, returned if value not yet resolved/set.\n  defaultProps[ASYNC_DEFAULTS_SYMBOL] = defaultValues;\n  // Shadowed object, just to make sure \"early indexing\" into the instance does not fail\n  defaultProps[ASYNC_ORIGINAL_SYMBOL] = {};\n\n  Object.defineProperties(defaultProps, descriptors);\n}\n\n// Helper: Configures getter and setter for one async prop\nfunction getDescriptorForAsyncProp(name) {\n  return {\n    enumerable: true,\n    // Save the provided value for async props in a special map\n    set(newValue) {\n      if (\n        typeof newValue === 'string' ||\n        newValue instanceof Promise ||\n        isAsyncIterable(newValue)\n      ) {\n        this[ASYNC_ORIGINAL_SYMBOL][name] = newValue;\n      } else {\n        this[ASYNC_RESOLVED_SYMBOL][name] = newValue;\n      }\n    },\n    // Only the component's state knows the true value of async prop\n    get() {\n      if (this[ASYNC_RESOLVED_SYMBOL]) {\n        // Prop value isn't async, so just return it\n        if (name in this[ASYNC_RESOLVED_SYMBOL]) {\n          const value = this[ASYNC_RESOLVED_SYMBOL][name];\n\n          return value || this[ASYNC_DEFAULTS_SYMBOL][name];\n        }\n\n        if (name in this[ASYNC_ORIGINAL_SYMBOL]) {\n          // It's an async prop value: look into component state\n          const state = this[COMPONENT_SYMBOL] && this[COMPONENT_SYMBOL].internalState;\n          if (state && state.hasAsyncProp(name)) {\n            return state.getAsyncProp(name) || this[ASYNC_DEFAULTS_SYMBOL][name];\n          }\n        }\n      }\n\n      // the prop is not supplied, or\n      // component not yet initialized/matched, return the component's default value for the prop\n      return this[ASYNC_DEFAULTS_SYMBOL][name];\n    }\n  };\n}\n\n// HELPER METHODS\n\nfunction hasOwnProperty(object, prop) {\n  return Object.prototype.hasOwnProperty.call(object, prop);\n}\n\n// Constructors have their super class constructors as prototypes\nfunction getOwnProperty(object, prop) {\n  return hasOwnProperty(object, prop) && object[prop];\n}\n\nfunction getComponentName(componentClass) {\n  const componentName = componentClass.componentName;\n  if (!componentName) {\n    log.warn(`${componentClass.name}.componentName not specified`)();\n  }\n  return componentName || componentClass.name;\n}\n","import {\n  COMPONENT_SYMBOL,\n  PROP_TYPES_SYMBOL,\n  ASYNC_ORIGINAL_SYMBOL,\n  ASYNC_RESOLVED_SYMBOL,\n  ASYNC_DEFAULTS_SYMBOL\n} from './constants';\nimport {PropType} from './prop-types';\nimport {createProps} from './create-props';\n\nlet counter = 0;\n\nexport type StatefulComponentProps<PropsT extends {}> = PropsT & {\n  id: string;\n  [COMPONENT_SYMBOL]: Component<PropsT>;\n  [PROP_TYPES_SYMBOL]: Record<string, PropType>;\n  [ASYNC_DEFAULTS_SYMBOL]: Partial<PropsT>;\n  [ASYNC_ORIGINAL_SYMBOL]: Partial<PropsT>;\n  [ASYNC_RESOLVED_SYMBOL]: Partial<PropsT>;\n};\n\nexport default class Component<PropsT extends {} = {}> {\n  static componentName: string = 'Component';\n  static defaultProps: Readonly<{}> = {};\n\n  id: string;\n  props: StatefulComponentProps<PropsT>;\n  count: number;\n\n  constructor(...propObjects: Partial<PropsT>[]) {\n    // Merge supplied props with default props and freeze them.\n    /* eslint-disable prefer-spread */\n    this.props = createProps<PropsT>(this, propObjects);\n    /* eslint-enable prefer-spread */\n\n    this.id = this.props.id; // The layer's id, used for matching with layers from last render cycle\n    this.count = counter++; // Keep track of how many layer instances you are generating\n  }\n\n  // clone this layer with modified props\n  clone(newProps: Partial<PropsT>) {\n    const {props} = this;\n\n    // Async props cannot be copied with Object.assign, copy them separately\n    const asyncProps: Partial<PropsT> = {};\n\n    // See async props definition in create-props.js\n    for (const key in props[ASYNC_DEFAULTS_SYMBOL]) {\n      if (key in props[ASYNC_RESOLVED_SYMBOL]) {\n        asyncProps[key] = props[ASYNC_RESOLVED_SYMBOL][key];\n      } else if (key in props[ASYNC_ORIGINAL_SYMBOL]) {\n        asyncProps[key] = props[ASYNC_ORIGINAL_SYMBOL][key];\n      }\n    }\n\n    // Some custom layer implementation may not support multiple arguments in the constructor\n    // @ts-ignore\n    return new this.constructor({...props, ...asyncProps, ...newProps});\n  }\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {isAsyncIterable} from '../utils/iterable-utils';\nimport {\n  COMPONENT_SYMBOL,\n  PROP_TYPES_SYMBOL,\n  ASYNC_ORIGINAL_SYMBOL,\n  ASYNC_RESOLVED_SYMBOL,\n  ASYNC_DEFAULTS_SYMBOL\n} from './constants';\nimport type Component from './component';\nimport {PropType} from './prop-types';\n\nconst EMPTY_PROPS = Object.freeze({});\n\n/** Internal state of an async prop */\ntype AsyncPropState = {\n  /** The prop type definition from component.defaultProps, if exists */\n  type: PropType | null;\n  /** Supplied prop value (can be url/promise, not visible to the component) */\n  lastValue: any;\n  /** Resolved prop value (valid data, can be \"shown\" to the component) */\n  resolvedValue: any;\n  /** How many loads have been issued */\n  pendingLoadCount: number;\n  /** Latest resolved load, (earlier loads will be ignored) */\n  resolvedLoadCount: number;\n};\n\nexport default class ComponentState<ComponentT extends Component> {\n  /** The component that this state instance belongs to. `null` if this state has been finalized. */\n  component: ComponentT | null;\n  onAsyncPropUpdated: (propName: string, value: any) => void;\n\n  private asyncProps: Partial<Record<string, AsyncPropState>>;\n  private oldProps: ComponentT['props'] | null;\n  private oldAsyncProps: ComponentT['props'] | null;\n\n  constructor(component: ComponentT) {\n    this.component = component;\n    this.asyncProps = {}; // Prop values that the layer sees\n    this.onAsyncPropUpdated = () => {};\n    this.oldProps = null; // Last props before update\n    this.oldAsyncProps = null; // Last props before update, with async values copied.\n  }\n\n  finalize() {\n    for (const propName in this.asyncProps) {\n      const asyncProp = this.asyncProps[propName];\n      if (asyncProp && asyncProp.type && asyncProp.type.release) {\n        // Release any resources created by transforms\n        asyncProp.type.release(\n          asyncProp.resolvedValue,\n          asyncProp.type,\n          this.component as Component\n        );\n      }\n    }\n    this.asyncProps = {};\n    this.component = null;\n    this.resetOldProps();\n  }\n\n  /* Layer-facing props API */\n\n  getOldProps(): ComponentT['props'] | typeof EMPTY_PROPS {\n    return this.oldAsyncProps || this.oldProps || EMPTY_PROPS;\n  }\n\n  resetOldProps() {\n    this.oldAsyncProps = null;\n    this.oldProps = this.component ? this.component.props : null;\n  }\n\n  // Checks if a prop is overridden\n  hasAsyncProp(propName: string): boolean {\n    return propName in this.asyncProps;\n  }\n\n  // Returns value of an overriden prop\n  getAsyncProp(propName: string): any {\n    const asyncProp = this.asyncProps[propName];\n    return asyncProp && asyncProp.resolvedValue;\n  }\n\n  isAsyncPropLoading(propName?: string): boolean {\n    if (propName) {\n      const asyncProp = this.asyncProps[propName];\n      return Boolean(\n        asyncProp &&\n          asyncProp.pendingLoadCount > 0 &&\n          asyncProp.pendingLoadCount !== asyncProp.resolvedLoadCount\n      );\n    }\n    for (const key in this.asyncProps) {\n      if (this.isAsyncPropLoading(key)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // Without changing the original prop value, swap out the data resolution under the hood\n  reloadAsyncProp(propName: string, value: any) {\n    this._watchPromise(propName, Promise.resolve(value));\n  }\n\n  // Updates all async/overridden props (when new props come in)\n  // Checks if urls have changed, starts loading, or removes override\n  setAsyncProps(props: ComponentT['props']) {\n    this.component = (props[COMPONENT_SYMBOL] as ComponentT) || this.component;\n\n    // NOTE: prop param and default values are only support for testing\n    const resolvedValues = props[ASYNC_RESOLVED_SYMBOL] || {};\n    const originalValues = props[ASYNC_ORIGINAL_SYMBOL] || props;\n    const defaultValues = props[ASYNC_DEFAULTS_SYMBOL] || {};\n\n    // TODO - use async props from the layer's prop types\n    for (const propName in resolvedValues) {\n      const value = resolvedValues[propName];\n      this._createAsyncPropData(propName, defaultValues[propName]);\n      this._updateAsyncProp(propName, value);\n      // Use transformed value\n      resolvedValues[propName] = this.getAsyncProp(propName);\n    }\n\n    for (const propName in originalValues) {\n      const value = originalValues[propName];\n      // Makes sure a record exists for this prop\n      this._createAsyncPropData(propName, defaultValues[propName]);\n      this._updateAsyncProp(propName, value);\n    }\n  }\n\n  /* Placeholder methods for subclassing */\n\n  protected _fetch(propName: string, url: string): any {\n    return null;\n  }\n\n  protected _onResolve(propName: string, value: any) {} // eslint-disable-line @typescript-eslint/no-empty-function\n\n  protected _onError(propName: string, error: Error) {} // eslint-disable-line @typescript-eslint/no-empty-function\n\n  // Intercept strings (URLs) and Promises and activates loading and prop rewriting\n  private _updateAsyncProp(propName: string, value: any) {\n    if (!this._didAsyncInputValueChange(propName, value)) {\n      return;\n    }\n\n    // interpret value string as url and start a new load tracked by a promise\n    if (typeof value === 'string') {\n      value = this._fetch(propName, value);\n    }\n\n    // interprets promise and track the \"loading\"\n    if (value instanceof Promise) {\n      this._watchPromise(propName, value);\n      return;\n    }\n\n    if (isAsyncIterable(value)) {\n      this._resolveAsyncIterable(propName, value); // eslint-disable-line @typescript-eslint/no-floating-promises\n      return;\n    }\n\n    // else, normal, non-async value. Just store value for now\n    this._setPropValue(propName, value);\n  }\n\n  // Whenever async props are changing, we need to make a copy of oldProps\n  // otherwise the prop rewriting will affect the value both in props and oldProps.\n  // While the copy is relatively expensive, this only happens on load completion.\n  private _freezeAsyncOldProps() {\n    if (!this.oldAsyncProps && this.oldProps) {\n      // 1. inherit all synchronous props from oldProps\n      // 2. reconfigure the async prop descriptors to fixed values\n      this.oldAsyncProps = Object.create(this.oldProps);\n      for (const propName in this.asyncProps) {\n        Object.defineProperty(this.oldAsyncProps, propName, {\n          enumerable: true,\n          value: this.oldProps[propName]\n        });\n      }\n    }\n  }\n\n  // Checks if an input value actually changed (to avoid reloading/rewatching promises/urls)\n  private _didAsyncInputValueChange(propName: string, value: any): boolean {\n    // @ts-ignore\n    const asyncProp: AsyncPropState = this.asyncProps[propName];\n    if (value === asyncProp.resolvedValue || value === asyncProp.lastValue) {\n      return false;\n    }\n    asyncProp.lastValue = value;\n    return true;\n  }\n\n  // Set normal, non-async value\n  private _setPropValue(propName: string, value: any) {\n    // Save the current value before overwriting so that diffProps can access both\n    this._freezeAsyncOldProps();\n\n    const asyncProp = this.asyncProps[propName];\n    if (asyncProp) {\n      value = this._postProcessValue(asyncProp, value);\n      asyncProp.resolvedValue = value;\n      asyncProp.pendingLoadCount++;\n      asyncProp.resolvedLoadCount = asyncProp.pendingLoadCount;\n    }\n  }\n\n  // Set a just resolved async value, calling onAsyncPropUpdates if value changes asynchronously\n  private _setAsyncPropValue(propName: string, value: any, loadCount: number) {\n    // Only update if loadCount is larger or equal to resolvedLoadCount\n    // otherwise a more recent load has already completed\n    const asyncProp = this.asyncProps[propName];\n    if (asyncProp && loadCount >= asyncProp.resolvedLoadCount && value !== undefined) {\n      // Save the current value before overwriting so that diffProps can access both\n      this._freezeAsyncOldProps();\n\n      asyncProp.resolvedValue = value;\n      asyncProp.resolvedLoadCount = loadCount;\n\n      // Call callback to inform listener\n      this.onAsyncPropUpdated(propName, value);\n    }\n  }\n\n  // Tracks a promise, sets the prop when loaded, handles load count\n  private _watchPromise(propName: string, promise: Promise<any>) {\n    const asyncProp = this.asyncProps[propName];\n    if (asyncProp) {\n      asyncProp.pendingLoadCount++;\n      const loadCount = asyncProp.pendingLoadCount;\n      promise\n        .then(data => {\n          if (!this.component) {\n            // This component state has been finalized\n            return;\n          }\n          data = this._postProcessValue(asyncProp, data);\n          this._setAsyncPropValue(propName, data, loadCount);\n          this._onResolve(propName, data);\n        })\n        .catch(error => {\n          this._onError(propName, error);\n        });\n    }\n  }\n\n  private async _resolveAsyncIterable(\n    propName: string,\n    iterable: AsyncIterable<any>\n  ): Promise<void> {\n    if (propName !== 'data') {\n      // we only support data as async iterable\n      this._setPropValue(propName, iterable);\n      return;\n    }\n\n    const asyncProp = this.asyncProps[propName];\n    if (!asyncProp) {\n      return;\n    }\n\n    asyncProp.pendingLoadCount++;\n    const loadCount = asyncProp.pendingLoadCount;\n    let data: any[] = [];\n    let count = 0;\n\n    for await (const chunk of iterable) {\n      if (!this.component) {\n        // This component state has been finalized\n        return;\n      }\n\n      // @ts-expect-error (2339) dataTransform is not decared in base component props\n      const {dataTransform} = this.component.props;\n      if (dataTransform) {\n        data = dataTransform(chunk, data) as any[];\n      } else {\n        data = data.concat(chunk);\n      }\n\n      // Used by the default _dataDiff function\n      Object.defineProperty(data, '__diff', {\n        enumerable: false,\n        value: [{startRow: count, endRow: data.length}]\n      });\n\n      count = data.length;\n      this._setAsyncPropValue(propName, data, loadCount);\n    }\n\n    this._onResolve(propName, data);\n  }\n\n  // Give the app a chance to post process the loaded data\n  private _postProcessValue(asyncProp: AsyncPropState, value: any) {\n    const propType = asyncProp.type;\n    if (propType && this.component) {\n      if (propType.release) {\n        propType.release(asyncProp.resolvedValue, propType, this.component);\n      }\n      if (propType.transform) {\n        return propType.transform(value, propType, this.component);\n      }\n    }\n    return value;\n  }\n\n  // Creating an asyncProp record if needed\n  private _createAsyncPropData(propName: string, defaultValue: any) {\n    const asyncProp = this.asyncProps[propName];\n    if (!asyncProp) {\n      const propTypes = this.component && this.component.props[PROP_TYPES_SYMBOL];\n      // assert(defaultValue !== undefined);\n      this.asyncProps[propName] = {\n        type: propTypes && propTypes[propName],\n        lastValue: null,\n        resolvedValue: defaultValue,\n        pendingLoadCount: 0,\n        resolvedLoadCount: 0\n      };\n    }\n  }\n}\n","import ComponentState from '../lifecycle/component-state';\n\nimport type Layer from './layer';\nimport type AttributeManager from './attribute/attribute-manager';\nimport type Viewport from '../viewports/viewport';\nimport type UniformTransitionManager from './uniform-transition-manager';\n\nexport type ChangeFlags = {\n  // Primary changeFlags, can be strings stating reason for change\n  dataChanged: string | false | {startRow: number; endRow?: number}[];\n  propsChanged: string | false;\n  updateTriggersChanged: Record<string, true> | false;\n  extensionsChanged: boolean;\n  viewportChanged: boolean;\n  stateChanged: boolean;\n\n  // Derived changeFlags\n  propsOrDataChanged: boolean;\n  somethingChanged: boolean;\n};\n\nexport default class LayerState<LayerT extends Layer> extends ComponentState<LayerT> {\n  attributeManager: AttributeManager | null;\n  needsRedraw: boolean;\n  needsUpdate: boolean;\n  /**\n   * Sublayers rendered in a previous cycle\n   */\n  subLayers: Layer[] | null;\n  /**\n   * If the layer is using the shared instancedPickingColors buffer\n   */\n  usesPickingColorCache: boolean;\n  /**\n   * If the layer has picking buffer (pickingColors or instancePickingColors)\n   */\n  hasPickingBuffer?: boolean;\n  /**\n   * Dirty flags of the layer's props and state\n   */\n  changeFlags!: ChangeFlags;\n\n  /** The last viewport rendered by this layer */\n  viewport?: Viewport;\n\n  uniformTransitions!: UniformTransitionManager;\n  /** Populated during uniform transition to replace user-supplied values */\n  propsInTransition?: LayerT['props'];\n\n  constructor({\n    attributeManager,\n    layer\n  }: {\n    attributeManager: AttributeManager | null;\n    layer: LayerT;\n  }) {\n    super(layer);\n    this.attributeManager = attributeManager;\n    this.needsRedraw = true;\n    this.needsUpdate = true;\n    this.subLayers = null;\n    this.usesPickingColorCache = false;\n  }\n\n  get layer(): LayerT | null {\n    return this.component;\n  }\n\n  /* Override base Component methods with Layer-specific handling */\n\n  protected _fetch(propName, url: string) {\n    const layer = this.layer;\n    const fetch = layer?.props.fetch;\n    if (fetch) {\n      return fetch(url, {propName, layer});\n    }\n    return super._fetch(propName, url);\n  }\n\n  protected _onResolve(propName: string, value: any) {\n    const layer = this.layer;\n    if (layer) {\n      const onDataLoad = layer.props.onDataLoad;\n      if (propName === 'data' && onDataLoad) {\n        onDataLoad(value, {propName, layer});\n      }\n    }\n  }\n\n  protected _onError(propName: string, error: Error) {\n    const layer = this.layer;\n    if (layer) {\n      layer.raiseError(error, `loading ${propName} of ${this.layer}`);\n    }\n  }\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/* eslint-disable react/no-direct-mutation-state */\nimport {COORDINATE_SYSTEM} from './constants';\nimport AttributeManager from './attribute/attribute-manager';\nimport UniformTransitionManager from './uniform-transition-manager';\nimport {diffProps, validateProps} from '../lifecycle/props';\nimport {LIFECYCLE, Lifecycle} from '../lifecycle/constants';\nimport {count} from '../utils/count';\nimport log from '../utils/log';\nimport debug from '../debug';\nimport GL from '@luma.gl/constants';\nimport {withParameters, setParameters} from '@luma.gl/core';\nimport assert from '../utils/assert';\nimport memoize from '../utils/memoize';\nimport {mergeShaders} from '../utils/shader';\nimport {projectPosition, getWorldPosition} from '../shaderlib/project/project-functions';\nimport typedArrayManager from '../utils/typed-array-manager';\n\nimport Component from '../lifecycle/component';\nimport LayerState, {ChangeFlags} from './layer-state';\n\nimport {worldToPixels} from '@math.gl/web-mercator';\n\nimport {load} from '@loaders.gl/core';\n\nimport type {Loader} from '@loaders.gl/loader-utils';\nimport type {CoordinateSystem} from './constants';\nimport type Attribute from './attribute/attribute';\nimport type {Model} from '@luma.gl/engine';\nimport type {PickingInfo, GetPickingInfoParams} from './picking/pick-info';\nimport type Viewport from '../viewports/viewport';\nimport type {NumericArray} from '../types/types';\nimport type {DefaultProps} from '../lifecycle/prop-types';\nimport type {LayerData, LayerProps} from '../types/layer-props';\nimport type {LayerContext} from './layer-manager';\nimport type {BinaryAttribute} from './attribute/attribute';\n\nconst TRACE_CHANGE_FLAG = 'layer.changeFlag';\nconst TRACE_INITIALIZE = 'layer.initialize';\nconst TRACE_UPDATE = 'layer.update';\nconst TRACE_FINALIZE = 'layer.finalize';\nconst TRACE_MATCHED = 'layer.matched';\n\nconst MAX_PICKING_COLOR_CACHE_SIZE = 2 ** 24 - 1;\n\nconst EMPTY_ARRAY = Object.freeze([]);\n\n// Only compare the same two viewports once\nconst areViewportsEqual = memoize(\n  ({oldViewport, viewport}: {oldViewport: Viewport; viewport: Viewport}): boolean => {\n    return oldViewport.equals(viewport);\n  }\n);\n\nlet pickingColorCache = new Uint8ClampedArray(0);\n\nconst defaultProps: DefaultProps<LayerProps> = {\n  // data: Special handling for null, see below\n  data: {type: 'data', value: EMPTY_ARRAY, async: true},\n  dataComparator: {type: 'function', value: null, optional: true},\n  _dataDiff: {\n    type: 'function',\n    // @ts-ignore __diff is not defined on data\n    value: data => data && data.__diff,\n    optional: true\n  },\n  dataTransform: {type: 'function', value: null, optional: true},\n  onDataLoad: {type: 'function', value: null, optional: true},\n  onError: {type: 'function', value: null, optional: true},\n  fetch: {\n    type: 'function',\n    value: <LayerT extends Layer>(\n      url: string,\n      {\n        propName,\n        layer,\n        loaders,\n        loadOptions,\n        signal\n      }: {\n        propName: string;\n        layer: LayerT;\n        loaders?: Loader[];\n        loadOptions?: any;\n        signal?: AbortSignal;\n      }\n    ) => {\n      const {resourceManager} = layer.context;\n      loadOptions = loadOptions || layer.getLoadOptions();\n      loaders = loaders || layer.props.loaders;\n      if (signal) {\n        loadOptions = {\n          ...loadOptions,\n          fetch: {\n            ...loadOptions?.fetch,\n            signal\n          }\n        };\n      }\n\n      let inResourceManager = resourceManager.contains(url);\n\n      if (!inResourceManager && !loadOptions) {\n        // If there is no layer-specific load options, then attempt to cache this resource in the data manager\n        resourceManager.add({resourceId: url, data: load(url, loaders), persistent: false});\n        inResourceManager = true;\n      }\n      if (inResourceManager) {\n        return resourceManager.subscribe({\n          resourceId: url,\n          onChange: data => layer.internalState?.reloadAsyncProp(propName, data),\n          consumerId: layer.id,\n          requestId: propName\n        });\n      }\n\n      return load(url, loaders, loadOptions);\n    }\n  },\n  updateTriggers: {}, // Update triggers: a core change detection mechanism in deck.gl\n\n  visible: true,\n  pickable: false,\n  opacity: {type: 'number', min: 0, max: 1, value: 1},\n  operation: 'draw',\n\n  onHover: {type: 'function', value: null, optional: true},\n  onClick: {type: 'function', value: null, optional: true},\n  onDragStart: {type: 'function', value: null, optional: true},\n  onDrag: {type: 'function', value: null, optional: true},\n  onDragEnd: {type: 'function', value: null, optional: true},\n\n  coordinateSystem: COORDINATE_SYSTEM.DEFAULT,\n  coordinateOrigin: {type: 'array', value: [0, 0, 0], compare: true},\n  modelMatrix: {type: 'array', value: null, compare: true, optional: true},\n  wrapLongitude: false,\n  positionFormat: 'XYZ',\n  colorFormat: 'RGBA',\n\n  parameters: {type: 'object', value: {}, optional: true, compare: 2},\n  loadOptions: {type: 'object', value: null, optional: true, ignore: true},\n  transitions: null,\n  extensions: [],\n  loaders: {type: 'array', value: [], optional: true, ignore: true},\n\n  // Offset depth based on layer index to avoid z-fighting.\n  // Negative values pull layer towards the camera\n  // https://www.opengl.org/archives/resources/faq/technical/polygonoffset.htm\n  getPolygonOffset: {\n    type: 'function',\n    value: ({layerIndex}) => [0, -layerIndex * 100]\n  },\n\n  // Selection/Highlighting\n  highlightedObjectIndex: null,\n  autoHighlight: false,\n  highlightColor: {type: 'accessor', value: [0, 0, 128, 128]}\n};\n\nexport type UpdateParameters<LayerT extends Layer> = {\n  props: LayerT['props'];\n  oldProps: LayerT['props'];\n  context: LayerContext;\n  changeFlags: ChangeFlags;\n};\n\nexport default abstract class Layer<PropsT extends {} = {}> extends Component<\n  PropsT & Required<LayerProps>\n> {\n  static defaultProps: DefaultProps = defaultProps;\n  static layerName: string = 'Layer';\n\n  static override get componentName() {\n    return Object.prototype.hasOwnProperty.call(this, 'layerName') ? this.layerName : '';\n  }\n\n  internalState: LayerState<this> | null = null;\n  lifecycle: Lifecycle = LIFECYCLE.NO_STATE; // Helps track and debug the life cycle of the layers\n\n  // context and state can technically be null before a layer is initialized/matched.\n  // However, they are most extensively accessed in a layer's lifecycle methods, where they are always defined.\n  // Checking for null state constantly in layer implementation is unnecessarily verbose.\n  context!: LayerContext; // Will reference layer manager's context, contains state shared by layers\n  state!: Record<string, any>; // Will be set to the shared layer state object during layer matching\n\n  parent: Layer | null = null;\n\n  get root(): Layer {\n    // eslint-disable-next-line\n    let layer: Layer = this;\n    while (layer.parent) {\n      layer = layer.parent;\n    }\n    return layer;\n  }\n\n  toString(): string {\n    const className = (this.constructor as typeof Layer).layerName || this.constructor.name;\n    return `${className}({id: '${this.props.id}'})`;\n  }\n\n  // Public API for users\n\n  /** Projects a point with current view state from the current layer's coordinate system to screen */\n  project(xyz: number[]): number[] {\n    assert(this.internalState);\n    const viewport = this.internalState.viewport || this.context.viewport;\n\n    const worldPosition = getWorldPosition(xyz, {\n      viewport,\n      modelMatrix: this.props.modelMatrix,\n      coordinateOrigin: this.props.coordinateOrigin,\n      coordinateSystem: this.props.coordinateSystem\n    });\n    const [x, y, z] = worldToPixels(worldPosition, viewport.pixelProjectionMatrix);\n    return xyz.length === 2 ? [x, y] : [x, y, z];\n  }\n\n  /** Unprojects a screen pixel to the current view's default coordinate system\n      Note: this does not reverse `project`. */\n  unproject(xy: number[]): number[] {\n    assert(this.internalState);\n    const viewport = this.internalState.viewport || this.context.viewport;\n    return viewport.unproject(xy);\n  }\n\n  /** Projects a point with current view state from the current layer's coordinate system to the world space */\n  projectPosition(\n    xyz: number[],\n    params?: {\n      /** The viewport to use */\n      viewport?: Viewport;\n      /** The coordinate system that the supplied position is in. Default to the same as `coordinateSystem`. */\n      fromCoordinateSystem?: CoordinateSystem;\n      /** The coordinate origin that the supplied position is in. Default to the same as `coordinateOrigin`. */\n      fromCoordinateOrigin?: [number, number, number];\n      /** Whether to apply offset mode automatically as does the project shader module.\n       * Offset mode places the origin of the common space at the given viewport's center. It is used in some use cases\n       * to improve precision in the vertex shader due to the fp32 float limitation.\n       * Use `autoOffset:false` if the returned position should not be dependent on the current viewport.\n       * Default `true` */\n      autoOffset?: boolean;\n    }\n  ): [number, number, number] {\n    assert(this.internalState);\n    const viewport = this.internalState.viewport || this.context.viewport;\n\n    return projectPosition(xyz, {\n      viewport,\n      modelMatrix: this.props.modelMatrix,\n      coordinateOrigin: this.props.coordinateOrigin,\n      coordinateSystem: this.props.coordinateSystem,\n      ...params\n    });\n  }\n\n  // Public API for custom layer implementation\n\n  /** `true` if this layer renders other layers */\n  get isComposite(): boolean {\n    return false;\n  }\n\n  /** Updates selected state members and marks the layer for redraw */\n  setState(partialState: any): void {\n    this.setChangeFlags({stateChanged: true});\n    Object.assign(this.state, partialState);\n    this.setNeedsRedraw();\n  }\n\n  /** Sets the redraw flag for this layer, will trigger a redraw next animation frame */\n  setNeedsRedraw(): void {\n    if (this.internalState) {\n      this.internalState.needsRedraw = true;\n    }\n  }\n\n  /** Mark this layer as needs a deep update */\n  setNeedsUpdate() {\n    if (this.internalState) {\n      this.context.layerManager.setNeedsUpdate(String(this));\n      this.internalState.needsUpdate = true;\n    }\n  }\n\n  /** Returns true if all async resources are loaded */\n  get isLoaded(): boolean {\n    return this.internalState ? !this.internalState.isAsyncPropLoading() : false;\n  }\n\n  /** Returns true if using shader-based WGS84 longitude wrapping */\n  get wrapLongitude(): boolean {\n    return this.props.wrapLongitude;\n  }\n\n  /** @deprecated Returns true if the layer is visible in the picking pass */\n  isPickable(): boolean {\n    return this.props.pickable && this.props.visible;\n  }\n\n  /** Returns an array of models used by this layer, can be overriden by layer subclass */\n  getModels(): Model[] {\n    return (this.state && (this.state.models || (this.state.model && [this.state.model]))) || [];\n  }\n\n  /** Update shader module parameters */\n  setModuleParameters(moduleParameters: any): void {\n    for (const model of this.getModels()) {\n      model.updateModuleSettings(moduleParameters);\n    }\n  }\n\n  /** Returns the attribute manager of this layer */\n  getAttributeManager(): AttributeManager | null {\n    return this.internalState && this.internalState.attributeManager;\n  }\n\n  /** Returns the most recent layer that matched to this state\n    (When reacting to an async event, this layer may no longer be the latest) */\n  getCurrentLayer(): Layer<PropsT> | null {\n    return this.internalState && this.internalState.layer;\n  }\n\n  /** Returns the default parse options for async props */\n  getLoadOptions(): any {\n    return this.props.loadOptions;\n  }\n\n  use64bitPositions(): boolean {\n    const {coordinateSystem} = this.props;\n    return (\n      coordinateSystem === COORDINATE_SYSTEM.DEFAULT ||\n      coordinateSystem === COORDINATE_SYSTEM.LNGLAT ||\n      coordinateSystem === COORDINATE_SYSTEM.CARTESIAN\n    );\n  }\n\n  // Event handling\n  onHover(info: PickingInfo, pickingEvent): boolean {\n    if (this.props.onHover) {\n      return this.props.onHover(info, pickingEvent) || false;\n    }\n    return false;\n  }\n\n  onClick(info: PickingInfo, pickingEvent): boolean {\n    if (this.props.onClick) {\n      return this.props.onClick(info, pickingEvent) || false;\n    }\n    return false;\n  }\n\n  // Returns the picking color that doesn't match any subfeature\n  // Use if some graphics do not belong to any pickable subfeature\n  // @return {Array} - a black color\n  nullPickingColor() {\n    return [0, 0, 0];\n  }\n\n  // Returns the picking color that doesn't match any subfeature\n  // Use if some graphics do not belong to any pickable subfeature\n  encodePickingColor(i, target: number[] = []): number[] {\n    target[0] = (i + 1) & 255;\n    target[1] = ((i + 1) >> 8) & 255;\n    target[2] = (((i + 1) >> 8) >> 8) & 255;\n    return target;\n  }\n\n  // Returns the index corresponding to a picking color that doesn't match any subfeature\n  // @param {Uint8Array} color - color array to be decoded\n  // @return {Array} - the decoded picking color\n  decodePickingColor(color) {\n    assert(color instanceof Uint8Array);\n    const [i1, i2, i3] = color;\n    // 1 was added to seperate from no selection\n    const index = i1 + i2 * 256 + i3 * 65536 - 1;\n    return index;\n  }\n\n  /** Deduces number of instances. Intention is to support:\n    - Explicit setting of numInstances\n    - Auto-deduction for ES6 containers that define a size member\n    - Auto-deduction for Classic Arrays via the built-in length attribute\n    - Auto-deduction via arrays */\n  getNumInstances(): number {\n    // First Check if app has provided an explicit value\n    if (Number.isFinite(this.props.numInstances)) {\n      return this.props.numInstances as number;\n    }\n\n    // Second check if the layer has set its own value\n    if (this.state && this.state.numInstances !== undefined) {\n      return this.state.numInstances;\n    }\n\n    // Use container library to get a count for any ES6 container or object\n    return count(this.props.data);\n  }\n\n  /** Buffer layout describes how many attribute values are packed for each data object\n      The default (null) is one value each object.\n      Some data formats (e.g. paths, polygons) have various length. Their buffer layout\n      is in the form of [L0, L1, L2, ...] */\n  getStartIndices(): NumericArray | null {\n    // First Check if startIndices is provided as an explicit value\n    if (this.props.startIndices) {\n      return this.props.startIndices;\n    }\n\n    // Second check if the layer has set its own value\n    if (this.state && this.state.startIndices) {\n      return this.state.startIndices;\n    }\n\n    return null;\n  }\n\n  // Default implementation\n  getBounds(): [number[], number[]] | null {\n    return this.getAttributeManager()?.getBounds(['positions', 'instancePositions']);\n  }\n\n  // / LIFECYCLE METHODS - overridden by the layer subclasses\n\n  /** Called once to set up the initial state. Layers can create WebGL resources here. */\n  abstract initializeState(context: LayerContext): void;\n\n  getShaders(shaders: any): any {\n    for (const extension of this.props.extensions) {\n      shaders = mergeShaders(shaders, extension.getShaders.call(this, extension));\n    }\n    return shaders;\n  }\n\n  /** Controls if updateState should be called. By default returns true if any prop has changed */\n  shouldUpdateState(params: UpdateParameters<Layer<PropsT>>): boolean {\n    return params.changeFlags.propsOrDataChanged;\n  }\n\n  /** Default implementation, all attributes will be invalidated and updated when data changes */\n  // eslint-disable-next-line complexity\n  updateState(params: UpdateParameters<Layer<PropsT>>): void {\n    const attributeManager = this.getAttributeManager();\n    const {dataChanged} = params.changeFlags;\n    if (dataChanged && attributeManager) {\n      if (Array.isArray(dataChanged)) {\n        // is partial update\n        for (const dataRange of dataChanged) {\n          attributeManager.invalidateAll(dataRange);\n        }\n      } else {\n        attributeManager.invalidateAll();\n      }\n    }\n\n    // Enable/disable picking buffer\n    if (attributeManager) {\n      const {props} = params;\n      const hasPickingBuffer = this.internalState!.hasPickingBuffer;\n      const needsPickingBuffer =\n        Number.isInteger(props.highlightedObjectIndex) ||\n        props.pickable ||\n        props.extensions.some(extension => extension.getNeedsPickingBuffer.call(this, extension));\n\n      // Only generate picking buffer if needed\n      if (hasPickingBuffer !== needsPickingBuffer) {\n        this.internalState!.hasPickingBuffer = needsPickingBuffer;\n        const {pickingColors, instancePickingColors} = attributeManager.attributes;\n        const pickingColorsAttribute = pickingColors || instancePickingColors;\n        if (pickingColorsAttribute) {\n          if (needsPickingBuffer && pickingColorsAttribute.constant) {\n            pickingColorsAttribute.constant = false;\n            attributeManager.invalidate(pickingColorsAttribute.id);\n          }\n          if (!pickingColorsAttribute.value && !needsPickingBuffer) {\n            pickingColorsAttribute.constant = true;\n            pickingColorsAttribute.value = [0, 0, 0];\n          }\n        }\n      }\n    }\n  }\n\n  /** Called once when layer is no longer matched and state will be discarded. Layers can destroy WebGL resources here. */\n  finalizeState(context: LayerContext): void {\n    for (const model of this.getModels()) {\n      model.delete();\n    }\n    const attributeManager = this.getAttributeManager();\n    if (attributeManager) {\n      attributeManager.finalize();\n    }\n    if (this.context) {\n      this.context.resourceManager.unsubscribe({consumerId: this.id});\n    }\n    if (this.internalState) {\n      this.internalState.uniformTransitions.clear();\n      this.internalState.finalize();\n    }\n  }\n\n  // If state has a model, draw it with supplied uniforms\n  draw(opts) {\n    for (const model of this.getModels()) {\n      model.draw(opts);\n    }\n  }\n\n  // called to populate the info object that is passed to the event handler\n  // @return null to cancel event\n  getPickingInfo({info, mode, sourceLayer}: GetPickingInfoParams) {\n    const {index} = info;\n\n    if (index >= 0) {\n      // If props.data is an indexable array, get the object\n      if (Array.isArray(this.props.data)) {\n        info.object = this.props.data[index];\n      }\n    }\n\n    return info;\n  }\n\n  // END LIFECYCLE METHODS\n\n  // / INTERNAL METHODS - called by LayerManager, DeckRenderer and DeckPicker\n\n  /** (Internal) Propagate an error event through the system */\n  raiseError(error: Error, message: string): void {\n    if (message) {\n      // Duplicating error message for backward compatibility, see #7986\n      // TODO - revisit in v9\n      error = new Error(`${message}: ${error.message}`, {cause: error});\n    }\n    if (!this.props.onError?.(error)) {\n      this.context?.onError?.(error, this);\n    }\n  }\n\n  /** (Internal) Checks if this layer needs redraw */\n  getNeedsRedraw(\n    opts: {\n      /** Reset redraw flags to false after the check */\n      clearRedrawFlags: boolean;\n    } = {clearRedrawFlags: false}\n  ): string | false {\n    return this._getNeedsRedraw(opts);\n  }\n\n  /** (Internal) Checks if this layer needs a deep update */\n  needsUpdate(): boolean {\n    if (!this.internalState) {\n      return false;\n    }\n\n    // Call subclass lifecycle method\n    return (\n      this.internalState.needsUpdate ||\n      this.hasUniformTransition() ||\n      this.shouldUpdateState(this._getUpdateParams())\n    );\n    // End lifecycle method\n  }\n\n  /** Checks if this layer has ongoing uniform transition */\n  hasUniformTransition(): boolean {\n    return this.internalState?.uniformTransitions.active || false;\n  }\n\n  /** Called when this layer is rendered into the given viewport */\n  activateViewport(viewport: Viewport): void {\n    if (!this.internalState) {\n      return;\n    }\n\n    const oldViewport = this.internalState.viewport;\n    this.internalState.viewport = viewport;\n\n    if (!oldViewport || !areViewportsEqual({oldViewport, viewport})) {\n      this.setChangeFlags({viewportChanged: true});\n\n      if (this.isComposite) {\n        if (this.needsUpdate()) {\n          // Composite layers may add/remove sublayers on viewport change\n          // Because we cannot change the layers list during a draw cycle, we don't want to update sublayers right away\n          // This will not call update immediately, but mark the layerManager as needs update on the next frame\n          this.setNeedsUpdate();\n        }\n      } else {\n        this._update();\n      }\n    }\n  }\n\n  /** Default implementation of attribute invalidation, can be redefined */\n  protected invalidateAttribute(name = 'all'): void {\n    const attributeManager = this.getAttributeManager();\n    if (!attributeManager) {\n      return;\n    }\n\n    if (name === 'all') {\n      attributeManager.invalidateAll();\n    } else {\n      attributeManager.invalidate(name);\n    }\n  }\n\n  /** Send updated attributes to the WebGL model */\n  protected updateAttributes(changedAttributes: {[id: string]: Attribute}) {\n    for (const model of this.getModels()) {\n      this._setModelAttributes(model, changedAttributes);\n    }\n  }\n\n  /** Recalculate any attributes if needed */\n  protected _updateAttributes(): void {\n    const attributeManager = this.getAttributeManager();\n    if (!attributeManager) {\n      return;\n    }\n    const props = this.props;\n\n    // Figure out data length\n    const numInstances = this.getNumInstances();\n    const startIndices = this.getStartIndices();\n\n    attributeManager.update({\n      data: props.data,\n      numInstances,\n      startIndices,\n      props,\n      transitions: props.transitions,\n      // @ts-ignore (TS2339) property attribute is not present on some acceptable data types\n      buffers: props.data.attributes,\n      context: this\n    });\n\n    const changedAttributes = attributeManager.getChangedAttributes({clearChangedFlags: true});\n    this.updateAttributes(changedAttributes);\n  }\n\n  /** Update attribute transitions. This is called in drawLayer, no model updates required. */\n  private _updateAttributeTransition() {\n    const attributeManager = this.getAttributeManager();\n    if (attributeManager) {\n      attributeManager.updateTransition();\n    }\n  }\n\n  /** Update uniform (prop) transitions. This is called in updateState, may result in model updates. */\n  private _updateUniformTransition(): Layer<PropsT>['props'] {\n    // @ts-ignore (TS2339) internalState is alwasy defined when this method is called\n    const {uniformTransitions} = this.internalState;\n    if (uniformTransitions.active) {\n      // clone props\n      const propsInTransition = uniformTransitions.update();\n      const props = Object.create(this.props);\n      for (const key in propsInTransition) {\n        Object.defineProperty(props, key, {value: propsInTransition[key]});\n      }\n      return props;\n    }\n    return this.props;\n  }\n\n  /** Updater for the automatically populated instancePickingColors attribute */\n  protected calculateInstancePickingColors(\n    attribute: Attribute,\n    {numInstances}: {numInstances: number}\n  ) {\n    if (attribute.constant) {\n      return;\n    }\n\n    // calculateInstancePickingColors always generates the same sequence.\n    // pickingColorCache saves the largest generated sequence for reuse\n    const cacheSize = Math.floor(pickingColorCache.length / 3);\n\n    // Record when using the picking buffer cache, so that layers can always point at the most recently allocated cache\n    // @ts-ignore (TS2531) internalState is always defined when this method is called\n    this.internalState.usesPickingColorCache = true;\n\n    if (cacheSize < numInstances) {\n      if (numInstances > MAX_PICKING_COLOR_CACHE_SIZE) {\n        log.warn(\n          'Layer has too many data objects. Picking might not be able to distinguish all objects.'\n        )();\n      }\n\n      pickingColorCache = typedArrayManager.allocate(pickingColorCache, numInstances, {\n        size: 3,\n        copy: true,\n        maxCount: Math.max(numInstances, MAX_PICKING_COLOR_CACHE_SIZE)\n      });\n\n      // If the attribute is larger than the cache, resize the cache and populate the missing chunk\n      const newCacheSize = Math.floor(pickingColorCache.length / 3);\n      const pickingColor = [];\n      for (let i = cacheSize; i < newCacheSize; i++) {\n        this.encodePickingColor(i, pickingColor);\n        pickingColorCache[i * 3 + 0] = pickingColor[0];\n        pickingColorCache[i * 3 + 1] = pickingColor[1];\n        pickingColorCache[i * 3 + 2] = pickingColor[2];\n      }\n    }\n\n    attribute.value = pickingColorCache.subarray(0, numInstances * 3);\n  }\n\n  /** Apply changed attributes to  */\n  protected _setModelAttributes(\n    model: Model,\n    changedAttributes: {\n      [id: string]: Attribute;\n    }\n  ) {\n    const attributeManager = this.getAttributeManager();\n    // @ts-ignore luma.gl type issue\n    const excludeAttributes = model.userData.excludeAttributes || {};\n    // @ts-ignore (TS2531) this method is only called internally with attributeManager defined\n    const shaderAttributes = attributeManager.getShaderAttributes(\n      changedAttributes,\n      excludeAttributes\n    );\n\n    model.setAttributes(shaderAttributes);\n  }\n\n  /** (Internal) Sets the picking color at the specified index to null picking color. Used for multi-depth picking.\n     This method may be overriden by layer implementations */\n  disablePickingIndex(objectIndex: number) {\n    const data = this.props.data as LayerData<any>;\n    if (!('attributes' in data)) {\n      this._disablePickingIndex(objectIndex);\n      return;\n    }\n\n    // @ts-ignore (TS2531) this method is only called internally with attributeManager defined\n    const {pickingColors, instancePickingColors} = this.getAttributeManager().attributes;\n    const colors = pickingColors || instancePickingColors;\n    const externalColorAttribute =\n      colors && data.attributes && (data.attributes[colors.id] as BinaryAttribute);\n    if (externalColorAttribute && externalColorAttribute.value) {\n      const values = externalColorAttribute.value;\n      const objectColor = this.encodePickingColor(objectIndex);\n      for (let index = 0; index < data.length; index++) {\n        const i = colors.getVertexOffset(index);\n        if (\n          values[i] === objectColor[0] &&\n          values[i + 1] === objectColor[1] &&\n          values[i + 2] === objectColor[2]\n        ) {\n          this._disablePickingIndex(index);\n        }\n      }\n    } else {\n      this._disablePickingIndex(objectIndex);\n    }\n  }\n\n  // TODO - simplify subclassing interface\n  protected _disablePickingIndex(objectIndex: number): void {\n    // @ts-ignore (TS2531) this method is only called internally with attributeManager defined\n    const {pickingColors, instancePickingColors} = this.getAttributeManager().attributes;\n    const colors = pickingColors || instancePickingColors;\n    if (!colors) {\n      return;\n    }\n\n    const start = colors.getVertexOffset(objectIndex);\n    const end = colors.getVertexOffset(objectIndex + 1);\n\n    // Fill the sub buffer with 0s\n    colors.buffer.subData({\n      data: new Uint8Array(end - start),\n      offset: start // 1 byte per element\n    });\n  }\n\n  /** (Internal) Re-enable all picking indices after multi-depth picking */\n  restorePickingColors(): void {\n    // @ts-ignore (TS2531) this method is only called internally with attributeManager defined\n    const {pickingColors, instancePickingColors} = this.getAttributeManager().attributes;\n    const colors = pickingColors || instancePickingColors;\n    if (!colors) {\n      return;\n    }\n    // The picking color cache may have been freed and then reallocated. This ensures we read from the currently allocated cache.\n    if (\n      // @ts-ignore (TS2531) this method is only called internally with internalState defined\n      this.internalState.usesPickingColorCache &&\n      (colors.value as Uint8ClampedArray).buffer !== pickingColorCache.buffer\n    ) {\n      colors.value = pickingColorCache.subarray(0, (colors.value as Uint8ClampedArray).length);\n    }\n    colors.updateSubBuffer({startOffset: 0});\n  }\n\n  /* eslint-disable max-statements */\n  /* (Internal) Called by layer manager when a new layer is found */\n  _initialize() {\n    assert(!this.internalState); // finalized layer cannot be reused\n    assert(Number.isFinite(this.props.coordinateSystem)); // invalid coordinateSystem\n\n    debug(TRACE_INITIALIZE, this);\n\n    const attributeManager = this._getAttributeManager();\n\n    if (attributeManager) {\n      // All instanced layers get instancePickingColors attribute by default\n      // Their shaders can use it to render a picking scene\n      // TODO - this slightly slows down non instanced layers\n      attributeManager.addInstanced({\n        instancePickingColors: {\n          type: GL.UNSIGNED_BYTE,\n          size: 3,\n          noAlloc: true,\n          // Updaters are always called with `this` pointing to the layer\n          // eslint-disable-next-line @typescript-eslint/unbound-method\n          update: this.calculateInstancePickingColors\n        }\n      });\n    }\n\n    this.internalState = new LayerState<this>({\n      attributeManager,\n      layer: this\n    });\n    this._clearChangeFlags(); // populate this.internalState.changeFlags\n\n    this.state = {};\n    // for backwards compatibility with older layers\n    // TODO - remove in next release\n    /* eslint-disable accessor-pairs */\n    Object.defineProperty(this.state, 'attributeManager', {\n      get: () => {\n        log.deprecated('layer.state.attributeManager', 'layer.getAttributeManager()')();\n        return attributeManager;\n      }\n    });\n    /* eslint-enable accessor-pairs */\n\n    this.internalState.uniformTransitions = new UniformTransitionManager(this.context.timeline);\n    this.internalState.onAsyncPropUpdated = this._onAsyncPropUpdated.bind(this);\n\n    // Ensure any async props are updated\n    this.internalState.setAsyncProps(this.props);\n\n    // Call subclass lifecycle methods\n    this.initializeState(this.context);\n\n    // Initialize extensions\n    for (const extension of this.props.extensions) {\n      extension.initializeState.call(this, this.context, extension);\n    }\n    // End subclass lifecycle methods\n\n    // initializeState callback tends to clear state\n    this.setChangeFlags({\n      dataChanged: 'init',\n      propsChanged: 'init',\n      viewportChanged: true,\n      extensionsChanged: true\n    });\n\n    this._update();\n  }\n\n  /** (Internal) Called by layer manager to transfer state from an old layer */\n  _transferState(oldLayer: Layer<PropsT>): void {\n    debug(TRACE_MATCHED, this, this === oldLayer);\n\n    const {state, internalState} = oldLayer;\n\n    if (this === oldLayer) {\n      return;\n    }\n\n    // Move internalState\n    this.internalState = internalState as LayerState<this>;\n\n    // Move state\n    this.state = state;\n    // We keep the state ref on old layers to support async actions\n    // oldLayer.state = null;\n\n    // Ensure any async props are updated\n    this.internalState.setAsyncProps(this.props);\n\n    this._diffProps(this.props, this.internalState.getOldProps() as Layer<PropsT>['props']);\n  }\n\n  /** (Internal) Called by layer manager when a new layer is added or an existing layer is matched with a new instance */\n  _update(): void {\n    // Call subclass lifecycle method\n    const stateNeedsUpdate = this.needsUpdate();\n    // End lifecycle method\n    debug(TRACE_UPDATE, this, stateNeedsUpdate);\n\n    if (!stateNeedsUpdate) {\n      return;\n    }\n\n    const currentProps = this.props;\n    const context = this.context;\n    const internalState = this.internalState as LayerState<this>;\n\n    const currentViewport = context.viewport;\n    const propsInTransition = this._updateUniformTransition();\n    internalState.propsInTransition = propsInTransition;\n    // Overwrite this.context.viewport during update to use the last activated viewport on this layer\n    // In multi-view applications, a layer may only be drawn in one of the views\n    // Which would make the \"active\" viewport different from the shared context\n    context.viewport = internalState.viewport || currentViewport;\n    // Overwrite this.props during update to use in-transition prop values\n    this.props = propsInTransition;\n\n    try {\n      const updateParams = this._getUpdateParams();\n      const oldModels = this.getModels();\n\n      // Safely call subclass lifecycle methods\n      if (context.gl) {\n        this.updateState(updateParams);\n      } else {\n        try {\n          this.updateState(updateParams);\n        } catch (error) {\n          // ignore error if gl context is missing\n        }\n      }\n      // Execute extension updates\n      for (const extension of this.props.extensions) {\n        extension.updateState.call(this, updateParams, extension);\n      }\n\n      const modelChanged = this.getModels()[0] !== oldModels[0];\n      this._postUpdate(updateParams, modelChanged);\n      // End subclass lifecycle methods\n    } finally {\n      // Restore shared context\n      context.viewport = currentViewport;\n      this.props = currentProps;\n      this._clearChangeFlags();\n      internalState.needsUpdate = false;\n      internalState.resetOldProps();\n    }\n  }\n  /* eslint-enable max-statements */\n\n  /** (Internal) Called by manager when layer is about to be disposed \n      Note: not guaranteed to be called on application shutdown */\n  _finalize(): void {\n    debug(TRACE_FINALIZE, this);\n\n    // Call subclass lifecycle method\n    this.finalizeState(this.context);\n    // Finalize extensions\n    for (const extension of this.props.extensions) {\n      extension.finalizeState.call(this, this.context, extension);\n    }\n  }\n\n  // Calculates uniforms\n  _drawLayer({\n    moduleParameters = null,\n    uniforms = {},\n    parameters = {}\n  }: {\n    moduleParameters: any;\n    uniforms: any;\n    parameters: any;\n  }): void {\n    this._updateAttributeTransition();\n\n    const currentProps = this.props;\n    const context = this.context;\n    // Overwrite this.props during redraw to use in-transition prop values\n    // `internalState.propsInTransition` could be missing if `updateState` failed\n    // @ts-ignore (TS2339) internalState is alwasy defined when this method is called\n    this.props = this.internalState.propsInTransition || currentProps;\n\n    const opacity = this.props.opacity;\n    // apply gamma to opacity to make it visually \"linear\"\n    uniforms.opacity = Math.pow(opacity, 1 / 2.2);\n\n    try {\n      // TODO/ib - hack move to luma Model.draw\n      if (moduleParameters) {\n        this.setModuleParameters(moduleParameters);\n      }\n\n      // Apply polygon offset to avoid z-fighting\n      // TODO - move to draw-layers\n      const {getPolygonOffset} = this.props;\n      const offsets = (getPolygonOffset && getPolygonOffset(uniforms)) || [0, 0];\n\n      setParameters(context.gl, {polygonOffset: offsets});\n\n      // Call subclass lifecycle method\n      withParameters(context.gl, parameters, () => {\n        const opts = {moduleParameters, uniforms, parameters, context};\n\n        // extensions\n        for (const extension of this.props.extensions) {\n          extension.draw.call(this, opts, extension);\n        }\n\n        this.draw(opts);\n      });\n    } finally {\n      this.props = currentProps;\n    }\n\n    // End lifecycle method\n  }\n\n  // Helper methods\n  /** Returns the current change flags */\n  getChangeFlags(): ChangeFlags | undefined {\n    return this.internalState?.changeFlags;\n  }\n\n  /* eslint-disable complexity */\n  /** Dirty some change flags, will be handled by updateLayer */\n  setChangeFlags(flags: Partial<ChangeFlags>): void {\n    if (!this.internalState) {\n      return;\n    }\n    const {changeFlags} = this.internalState;\n\n    /* eslint-disable no-fallthrough, max-depth */\n    for (const key in flags) {\n      if (flags[key]) {\n        let flagChanged = false;\n        switch (key) {\n          case 'dataChanged':\n            // changeFlags.dataChanged may be `false`, a string (reason) or an array of ranges\n            const dataChangedReason = flags[key];\n            const prevDataChangedReason = changeFlags[key];\n            if (dataChangedReason && Array.isArray(prevDataChangedReason)) {\n              // Merge partial updates\n              changeFlags.dataChanged = Array.isArray(dataChangedReason)\n                ? prevDataChangedReason.concat(dataChangedReason)\n                : dataChangedReason;\n              flagChanged = true;\n            }\n\n          default:\n            if (!changeFlags[key]) {\n              changeFlags[key] = flags[key];\n              flagChanged = true;\n            }\n        }\n        if (flagChanged) {\n          debug(TRACE_CHANGE_FLAG, this, key, flags);\n        }\n      }\n    }\n    /* eslint-enable no-fallthrough, max-depth */\n\n    // Update composite flags\n    const propsOrDataChanged = Boolean(\n      changeFlags.dataChanged ||\n        changeFlags.updateTriggersChanged ||\n        changeFlags.propsChanged ||\n        changeFlags.extensionsChanged\n    );\n    changeFlags.propsOrDataChanged = propsOrDataChanged;\n    changeFlags.somethingChanged =\n      propsOrDataChanged || changeFlags.viewportChanged || changeFlags.stateChanged;\n  }\n  /* eslint-enable complexity */\n\n  /** Clear all changeFlags, typically after an update */\n  private _clearChangeFlags(): void {\n    // @ts-ignore TS2531 this method can only be called internally with internalState assigned\n    this.internalState.changeFlags = {\n      dataChanged: false,\n      propsChanged: false,\n      updateTriggersChanged: false,\n      viewportChanged: false,\n      stateChanged: false,\n      extensionsChanged: false,\n      propsOrDataChanged: false,\n      somethingChanged: false\n    };\n  }\n\n  /** Compares the layers props with old props from a matched older layer\n      and extracts change flags that describe what has change so that state\n      can be update correctly with minimal effort */\n  private _diffProps(newProps: Layer<PropsT>['props'], oldProps: Layer<PropsT>['props']) {\n    const changeFlags = diffProps(newProps, oldProps);\n\n    // iterate over changedTriggers\n    if (changeFlags.updateTriggersChanged) {\n      for (const key in changeFlags.updateTriggersChanged) {\n        if (changeFlags.updateTriggersChanged[key]) {\n          this.invalidateAttribute(key);\n        }\n      }\n    }\n\n    // trigger uniform transitions\n    if (changeFlags.transitionsChanged) {\n      for (const key in changeFlags.transitionsChanged) {\n        // prop changed and transition is enabled\n        // @ts-ignore (TS2531) internalState is always defined when this method is called\n        this.internalState.uniformTransitions.add(\n          key,\n          oldProps[key],\n          newProps[key],\n          newProps.transitions?.[key]\n        );\n      }\n    }\n\n    return this.setChangeFlags(changeFlags);\n  }\n\n  /** (Internal) called by layer manager to perform extra props validation (in development only) */\n  validateProps(): void {\n    validateProps(this.props);\n  }\n\n  /** (Internal) Called by deck picker when the hovered object changes to update the auto highlight */\n  updateAutoHighlight(info: PickingInfo): void {\n    if (this.props.autoHighlight && !Number.isInteger(this.props.highlightedObjectIndex)) {\n      this._updateAutoHighlight(info);\n    }\n  }\n\n  // May be overriden by subclasses\n\n  // TODO - simplify subclassing interface\n  /** Update picking module parameters to highlight the hovered object */\n  protected _updateAutoHighlight(info: PickingInfo): void {\n    const pickingModuleParameters: any = {\n      pickingSelectedColor: info.picked ? info.color : null\n    };\n    const {highlightColor} = this.props;\n    if (info.picked && typeof highlightColor === 'function') {\n      pickingModuleParameters.pickingHighlightColor = highlightColor(info);\n    }\n    this.setModuleParameters(pickingModuleParameters);\n    // setModuleParameters does not trigger redraw\n    this.setNeedsRedraw();\n  }\n\n  /** Create new attribute manager */\n  protected _getAttributeManager(): AttributeManager | null {\n    const context = this.context;\n    return new AttributeManager(context.gl, {\n      id: this.props.id,\n      stats: context.stats,\n      timeline: context.timeline\n    });\n  }\n\n  // Private methods\n\n  /** Called after updateState to perform common tasks */\n  protected _postUpdate(updateParams: UpdateParameters<Layer<PropsT>>, forceUpdate: boolean) {\n    const {props, oldProps} = updateParams;\n\n    this.setNeedsRedraw();\n    // Check if attributes need recalculation\n    this._updateAttributes();\n\n    // Note: Automatic instance count update only works for single layers\n    const {model} = this.state;\n    model?.setInstanceCount(this.getNumInstances());\n\n    // Set picking module parameters to match props\n    const {autoHighlight, highlightedObjectIndex, highlightColor} = props;\n    if (\n      forceUpdate ||\n      oldProps.autoHighlight !== autoHighlight ||\n      oldProps.highlightedObjectIndex !== highlightedObjectIndex ||\n      oldProps.highlightColor !== highlightColor\n    ) {\n      const parameters: any = {};\n      if (!autoHighlight) {\n        parameters.pickingSelectedColor = null;\n      }\n      if (Array.isArray(highlightColor)) {\n        parameters.pickingHighlightColor = highlightColor;\n      }\n\n      // highlightedObjectIndex will overwrite any settings from auto highlighting.\n      // Do not reset unless the value has changed.\n      if (forceUpdate || highlightedObjectIndex !== oldProps.highlightedObjectIndex) {\n        parameters.pickingSelectedColor =\n          Number.isFinite(highlightedObjectIndex) && (highlightedObjectIndex as number) >= 0\n            ? this.encodePickingColor(highlightedObjectIndex)\n            : null;\n      }\n\n      this.setModuleParameters(parameters);\n    }\n  }\n\n  private _getUpdateParams(): UpdateParameters<Layer<PropsT>> {\n    return {\n      props: this.props,\n      // @ts-ignore TS2531 this method can only be called internally with internalState assigned\n      oldProps: this.internalState.getOldProps() as PropsT,\n      context: this.context,\n      // @ts-ignore TS2531 this method can only be called internally with internalState assigned\n      changeFlags: this.internalState.changeFlags\n    };\n  }\n\n  /** Checks state of attributes and model */\n  private _getNeedsRedraw(opts: {clearRedrawFlags: boolean}): string | false {\n    // this method may be called by the render loop as soon a the layer\n    // has been created, so guard against uninitialized state\n    if (!this.internalState) {\n      return false;\n    }\n\n    let redraw: string | false = false;\n    redraw = redraw || (this.internalState.needsRedraw && this.id);\n\n    // TODO - is attribute manager needed? - Model should be enough.\n    const attributeManager = this.getAttributeManager();\n    const attributeManagerNeedsRedraw = attributeManager\n      ? attributeManager.getNeedsRedraw(opts)\n      : false;\n    redraw = redraw || attributeManagerNeedsRedraw;\n\n    if (redraw) {\n      for (const extension of this.props.extensions) {\n        extension.onNeedsRedraw.call(this, extension);\n      }\n    }\n\n    this.internalState.needsRedraw = this.internalState.needsRedraw && !opts.clearRedrawFlags;\n    return redraw;\n  }\n\n  /** Callback when asyn prop is loaded */\n  private _onAsyncPropUpdated(): void {\n    // @ts-ignore TS2531 this method can only be called internally with internalState assigned\n    this._diffProps(this.props, this.internalState.getOldProps());\n    this.setNeedsUpdate();\n  }\n}\n","/* eslint-disable complexity */\nimport type DataColumn from './data-column';\nimport type {BufferAccessor, ShaderAttributeOptions} from './data-column';\nimport type {Buffer} from '@luma.gl/webgl';\nimport type {NumericArray} from '../../types/types';\n\nexport interface IShaderAttribute {\n  value: NumericArray | null;\n  getValue(): [Buffer, BufferAccessor] | NumericArray | null;\n}\n\n/* This class creates a luma.gl-compatible \"view\" on top of a DataColumn instance */\nexport default class ShaderAttribute implements IShaderAttribute {\n  opts: ShaderAttributeOptions;\n  source: DataColumn<any, any>;\n\n  constructor(dataColumn: DataColumn<any, any>, opts: ShaderAttributeOptions) {\n    // Options that cannot be changed later\n    this.opts = opts;\n    this.source = dataColumn;\n  }\n\n  get value(): NumericArray | null {\n    return this.source.value;\n  }\n\n  getValue(): [Buffer, BufferAccessor] | NumericArray | null {\n    const buffer = this.source.getBuffer();\n    const accessor = this.getAccessor();\n    if (buffer) {\n      return [buffer, accessor];\n    }\n\n    const {value} = this.source;\n    const {size} = accessor;\n    let constantValue = value;\n\n    if (value && value.length !== size) {\n      constantValue = new Float32Array(size);\n      // initiate offset values\n      const index = accessor.elementOffset || 0; // element offset\n      for (let i = 0; i < size; ++i) {\n        constantValue[i] = value[index + i];\n      }\n    }\n\n    return constantValue;\n  }\n\n  getAccessor() {\n    return {\n      // source data accessor\n      ...this.source.getAccessor(),\n      // shader attribute overrides\n      ...this.opts\n    };\n  }\n}\n","/* eslint-disable complexity */\nimport GL from '@luma.gl/constants';\nimport {hasFeature, FEATURES, Buffer} from '@luma.gl/core';\nimport ShaderAttribute, {IShaderAttribute} from './shader-attribute';\nimport {glArrayFromType} from './gl-utils';\nimport typedArrayManager from '../../utils/typed-array-manager';\nimport {toDoublePrecisionArray} from '../../utils/math-utils';\nimport log from '../../utils/log';\n\nimport type {Buffer as LumaBuffer} from '@luma.gl/webgl';\nimport type {TypedArray, NumericArray, TypedArrayConstructor} from '../../types/types';\n\nexport type BufferAccessor = {\n  /** A WebGL data type, see [vertexAttribPointer](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttribPointer#parameters). */\n  type?: number;\n  /** The number of elements per vertex attribute. */\n  size?: number;\n  /** 1 if instanced. */\n  divisor?: number;\n  /** Offset of the first vertex attribute into the buffer, in bytes. */\n  offset?: number;\n  /** The offset between the beginning of consecutive vertex attributes, in bytes. */\n  stride?: number;\n  /** Whether data values should be normalized. Note that all color attributes in deck.gl layers are normalized by default. */\n  normalized?: boolean;\n  integer?: boolean;\n};\n\nexport type ShaderAttributeOptions = Partial<BufferAccessor> & {\n  offset: number;\n  stride: number;\n  vertexOffset?: number;\n  elementOffset?: number;\n};\n\nfunction getStride(accessor: DataColumnSettings<any>): number {\n  return accessor.stride || accessor.size * accessor.bytesPerElement;\n}\n\nfunction resolveShaderAttribute(\n  baseAccessor: DataColumnSettings<any>,\n  shaderAttributeOptions: Partial<ShaderAttributeOptions>\n): ShaderAttributeOptions {\n  if (shaderAttributeOptions.offset) {\n    log.removed('shaderAttribute.offset', 'vertexOffset, elementOffset')();\n  }\n\n  // All shader attributes share the parent's stride\n  const stride = getStride(baseAccessor);\n  // `vertexOffset` is used to access the neighboring vertex's value\n  // e.g. `nextPositions` in polygon\n  const vertexOffset =\n    shaderAttributeOptions.vertexOffset !== undefined\n      ? shaderAttributeOptions.vertexOffset\n      : baseAccessor.vertexOffset || 0;\n  // `elementOffset` is defined when shader attribute's size is smaller than the parent's\n  // e.g. `translations` in transform matrix\n  const elementOffset = shaderAttributeOptions.elementOffset || 0;\n  const offset =\n    // offsets defined by the attribute\n    vertexOffset * stride +\n    elementOffset * baseAccessor.bytesPerElement +\n    // offsets defined by external buffers if any\n    (baseAccessor.offset || 0);\n\n  return {\n    ...shaderAttributeOptions,\n    offset,\n    stride\n  };\n}\n\nfunction resolveDoublePrecisionShaderAttributes(\n  baseAccessor: DataColumnSettings<any>,\n  shaderAttributeOptions: Partial<ShaderAttributeOptions>\n): {\n  high: ShaderAttributeOptions;\n  low: ShaderAttributeOptions;\n} {\n  const resolvedOptions = resolveShaderAttribute(baseAccessor, shaderAttributeOptions);\n\n  return {\n    high: resolvedOptions,\n    low: {\n      ...resolvedOptions,\n      offset: resolvedOptions.offset + baseAccessor.size * 4\n    }\n  };\n}\n\nexport type DataColumnOptions<Options> = Options &\n  BufferAccessor & {\n    id?: string;\n    vertexOffset?: number;\n    fp64?: boolean;\n    logicalType?: number;\n    isIndexed?: boolean;\n    defaultValue?: number | number[];\n  };\n\ntype DataColumnSettings<Options> = DataColumnOptions<Options> & {\n  type: number;\n  size: number;\n  logicalType?: number;\n  bytesPerElement: number;\n  defaultValue: number[];\n  defaultType: TypedArrayConstructor;\n};\n\ntype DataColumnInternalState<Options, State> = State & {\n  externalBuffer: LumaBuffer | null;\n  bufferAccessor: DataColumnSettings<Options>;\n  allocatedValue: TypedArray | null;\n  numInstances: number;\n  bounds: [number[], number[]] | null;\n  constant: boolean;\n};\n\nexport default class DataColumn<Options, State> implements IShaderAttribute {\n  gl: WebGLRenderingContext;\n  id: string;\n  size: number;\n  settings: DataColumnSettings<Options>;\n  value: NumericArray | null;\n  doublePrecision: boolean;\n\n  protected _buffer: LumaBuffer | null;\n  protected state: DataColumnInternalState<Options, State>;\n\n  /* eslint-disable max-statements */\n  constructor(gl: WebGLRenderingContext, opts: DataColumnOptions<Options>, state: State) {\n    this.gl = gl;\n    this.id = opts.id || '';\n    this.size = opts.size || 1;\n\n    const logicalType = opts.logicalType || opts.type;\n    const doublePrecision = logicalType === GL.DOUBLE;\n\n    let {defaultValue} = opts;\n    defaultValue = Number.isFinite(defaultValue)\n      ? [defaultValue]\n      : defaultValue || new Array(this.size).fill(0);\n\n    let bufferType: number;\n    if (doublePrecision) {\n      bufferType = GL.FLOAT;\n    } else if (!logicalType && opts.isIndexed) {\n      bufferType =\n        gl && hasFeature(gl, FEATURES.ELEMENT_INDEX_UINT32) ? GL.UNSIGNED_INT : GL.UNSIGNED_SHORT;\n    } else {\n      bufferType = logicalType || GL.FLOAT;\n    }\n\n    // This is the attribute type defined by the layer\n    // If an external buffer is provided, this.type may be overwritten\n    // But we always want to use defaultType for allocation\n    let defaultType = glArrayFromType(logicalType || bufferType || GL.FLOAT);\n    this.doublePrecision = doublePrecision;\n\n    // `fp64: false` tells a double-precision attribute to allocate Float32Arrays\n    // by default when using auto-packing. This is more efficient in use cases where\n    // high precision is unnecessary, but the `64Low` attribute is still required\n    // by the shader.\n    if (doublePrecision && opts.fp64 === false) {\n      defaultType = Float32Array;\n    }\n\n    this.value = null;\n    this.settings = {\n      ...opts,\n      defaultType,\n      defaultValue: defaultValue as number[],\n      logicalType,\n      type: bufferType,\n      size: this.size,\n      bytesPerElement: defaultType.BYTES_PER_ELEMENT\n    };\n    this.state = {\n      ...state,\n      externalBuffer: null,\n      bufferAccessor: this.settings,\n      allocatedValue: null,\n      numInstances: 0,\n      bounds: null,\n      constant: false\n    };\n    this._buffer = null;\n  }\n  /* eslint-enable max-statements */\n\n  get isConstant(): boolean {\n    return this.state.constant;\n  }\n\n  get buffer(): LumaBuffer {\n    if (!this._buffer) {\n      const {isIndexed, type} = this.settings;\n      this._buffer = new Buffer(this.gl, {\n        id: this.id,\n        target: isIndexed ? GL.ELEMENT_ARRAY_BUFFER : GL.ARRAY_BUFFER,\n        accessor: {type}\n      }) as LumaBuffer;\n    }\n    return this._buffer;\n  }\n\n  get byteOffset(): number {\n    const accessor = this.getAccessor();\n    if (accessor.vertexOffset) {\n      return accessor.vertexOffset * getStride(accessor);\n    }\n    return 0;\n  }\n\n  get numInstances(): number {\n    return this.state.numInstances;\n  }\n\n  set numInstances(n: number) {\n    this.state.numInstances = n;\n  }\n\n  delete(): void {\n    if (this._buffer) {\n      this._buffer.delete();\n      this._buffer = null;\n    }\n    typedArrayManager.release(this.state.allocatedValue);\n  }\n\n  getShaderAttributes(\n    id: string,\n    options: Partial<ShaderAttributeOptions> | null\n  ): Record<string, IShaderAttribute> {\n    if (this.doublePrecision) {\n      const shaderAttributes = {};\n      const isBuffer64Bit = this.value instanceof Float64Array;\n\n      const doubleShaderAttributeDefs = resolveDoublePrecisionShaderAttributes(\n        this.getAccessor(),\n        options || {}\n      );\n\n      shaderAttributes[id] = new ShaderAttribute(this, doubleShaderAttributeDefs.high);\n      shaderAttributes[`${id}64Low`] = isBuffer64Bit\n        ? new ShaderAttribute(this, doubleShaderAttributeDefs.low)\n        : new Float32Array(this.size); // use constant for low part if buffer is 32-bit\n      return shaderAttributes;\n    }\n    if (options) {\n      const shaderAttributeDef = resolveShaderAttribute(this.getAccessor(), options);\n      return {[id]: new ShaderAttribute(this, shaderAttributeDef)};\n    }\n    return {[id]: this};\n  }\n\n  getBuffer(): LumaBuffer | null {\n    if (this.state.constant) {\n      return null;\n    }\n    return this.state.externalBuffer || this._buffer;\n  }\n\n  getValue(): [LumaBuffer, BufferAccessor] | NumericArray | null {\n    if (this.state.constant) {\n      return this.value;\n    }\n    return [this.getBuffer() as LumaBuffer, this.getAccessor() as BufferAccessor];\n  }\n\n  getAccessor(): DataColumnSettings<Options> {\n    return this.state.bufferAccessor;\n  }\n\n  // Returns [min: Array(size), max: Array(size)]\n  /* eslint-disable max-depth */\n  getBounds(): [number[], number[]] | null {\n    if (this.state.bounds) {\n      return this.state.bounds;\n    }\n    let result: [number[], number[]] | null = null;\n    if (this.state.constant && this.value) {\n      const min = Array.from(this.value);\n      result = [min, min];\n    } else {\n      const {value, numInstances, size} = this;\n      const len = numInstances * size;\n      if (value && len && value.length >= len) {\n        const min = new Array(size).fill(Infinity);\n        const max = new Array(size).fill(-Infinity);\n        for (let i = 0; i < len; ) {\n          for (let j = 0; j < size; j++) {\n            const v = value[i++];\n            if (v < min[j]) min[j] = v;\n            if (v > max[j]) max[j] = v;\n          }\n        }\n        result = [min, max];\n      }\n    }\n    this.state.bounds = result;\n    return result;\n  }\n\n  // returns true if success\n  // eslint-disable-next-line max-statements\n  setData(\n    data:\n      | TypedArray\n      | LumaBuffer\n      | ({\n          constant?: boolean;\n          value?: NumericArray;\n          buffer?: LumaBuffer;\n        } & Partial<BufferAccessor>)\n  ): boolean {\n    const {state} = this;\n\n    let opts: {\n      constant?: boolean;\n      value?: NumericArray;\n      buffer?: LumaBuffer;\n    } & Partial<BufferAccessor>;\n    if (ArrayBuffer.isView(data)) {\n      opts = {value: data};\n    } else if (data instanceof Buffer) {\n      opts = {buffer: data as LumaBuffer};\n    } else {\n      opts = data;\n    }\n\n    const accessor: DataColumnSettings<Options> = {...this.settings, ...opts};\n    state.bufferAccessor = accessor;\n    state.bounds = null; // clear cached bounds\n\n    if (opts.constant) {\n      // set constant\n      let value = opts.value as NumericArray;\n      value = this._normalizeValue(value, [], 0);\n      if (this.settings.normalized) {\n        value = this.normalizeConstant(value);\n      }\n      const hasChanged = !state.constant || !this._areValuesEqual(value, this.value);\n\n      if (!hasChanged) {\n        return false;\n      }\n      state.externalBuffer = null;\n      state.constant = true;\n      this.value = value;\n    } else if (opts.buffer) {\n      const buffer = opts.buffer;\n      state.externalBuffer = buffer;\n      state.constant = false;\n      this.value = opts.value || null;\n      const isBuffer64Bit = opts.value instanceof Float64Array;\n\n      // Copy the type of the buffer into the accessor\n      // @ts-ignore\n      accessor.type = opts.type || buffer.accessor.type;\n      // @ts-ignore\n      accessor.bytesPerElement = buffer.accessor.BYTES_PER_ELEMENT * (isBuffer64Bit ? 2 : 1);\n      accessor.stride = getStride(accessor);\n    } else if (opts.value) {\n      this._checkExternalBuffer(opts);\n\n      let value = opts.value as TypedArray;\n      state.externalBuffer = null;\n      state.constant = false;\n      this.value = value;\n\n      accessor.bytesPerElement = value.BYTES_PER_ELEMENT;\n      accessor.stride = getStride(accessor);\n\n      const {buffer, byteOffset} = this;\n\n      if (this.doublePrecision && value instanceof Float64Array) {\n        value = toDoublePrecisionArray(value, accessor);\n      }\n\n      // A small over allocation is used as safety margin\n      // Shader attributes may try to access this buffer with bigger offsets\n      const requiredBufferSize = value.byteLength + byteOffset + accessor.stride * 2;\n      if (buffer.byteLength < requiredBufferSize) {\n        buffer.reallocate(requiredBufferSize);\n      }\n      // Hack: force Buffer to infer data type\n      buffer.setAccessor(null);\n      buffer.subData({data: value, offset: byteOffset});\n      // @ts-ignore\n      accessor.type = opts.type || buffer.accessor.type;\n    }\n\n    return true;\n  }\n\n  updateSubBuffer(\n    opts: {\n      startOffset?: number;\n      endOffset?: number;\n    } = {}\n  ): void {\n    this.state.bounds = null; // clear cached bounds\n\n    const value = this.value as TypedArray;\n    const {startOffset = 0, endOffset} = opts;\n    this.buffer.subData({\n      data:\n        this.doublePrecision && value instanceof Float64Array\n          ? toDoublePrecisionArray(value, {\n              size: this.size,\n              startIndex: startOffset,\n              endIndex: endOffset\n            })\n          : value.subarray(startOffset, endOffset),\n      offset: startOffset * value.BYTES_PER_ELEMENT + this.byteOffset\n    });\n  }\n\n  allocate(numInstances: number, copy: boolean = false): boolean {\n    const {state} = this;\n    const oldValue = state.allocatedValue;\n\n    // Allocate at least one element to ensure a valid buffer\n    const value = typedArrayManager.allocate(oldValue, numInstances + 1, {\n      size: this.size,\n      type: this.settings.defaultType,\n      copy\n    });\n\n    this.value = value;\n\n    const {buffer, byteOffset} = this;\n\n    if (buffer.byteLength < value.byteLength + byteOffset) {\n      buffer.reallocate(value.byteLength + byteOffset);\n\n      if (copy && oldValue) {\n        // Upload the full existing attribute value to the GPU, so that updateBuffer\n        // can choose to only update a partial range.\n        // TODO - copy old buffer to new buffer on the GPU\n        buffer.subData({\n          data:\n            oldValue instanceof Float64Array ? toDoublePrecisionArray(oldValue, this) : oldValue,\n          offset: byteOffset\n        });\n      }\n    }\n\n    state.allocatedValue = value;\n    state.constant = false;\n    state.externalBuffer = null;\n    state.bufferAccessor = this.settings;\n    return true;\n  }\n\n  // PRIVATE HELPER METHODS\n  protected _checkExternalBuffer(opts: {value?: NumericArray; normalized?: boolean}): void {\n    const {value} = opts;\n    if (!ArrayBuffer.isView(value)) {\n      throw new Error(`Attribute ${this.id} value is not TypedArray`);\n    }\n    const ArrayType = this.settings.defaultType;\n\n    let illegalArrayType = false;\n    if (this.doublePrecision) {\n      // not 32bit or 64bit\n      illegalArrayType = value.BYTES_PER_ELEMENT < 4;\n    }\n    if (illegalArrayType) {\n      throw new Error(`Attribute ${this.id} does not support ${value.constructor.name}`);\n    }\n    if (!(value instanceof ArrayType) && this.settings.normalized && !('normalized' in opts)) {\n      log.warn(`Attribute ${this.id} is normalized`)();\n    }\n  }\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttribPointer\n  normalizeConstant(value: NumericArray): NumericArray {\n    switch (this.settings.type) {\n      case GL.BYTE:\n        // normalize [-128, 127] to [-1, 1]\n        return new Float32Array(value).map(x => ((x + 128) / 255) * 2 - 1);\n\n      case GL.SHORT:\n        // normalize [-32768, 32767] to [-1, 1]\n        return new Float32Array(value).map(x => ((x + 32768) / 65535) * 2 - 1);\n\n      case GL.UNSIGNED_BYTE:\n        // normalize [0, 255] to [0, 1]\n        return new Float32Array(value).map(x => x / 255);\n\n      case GL.UNSIGNED_SHORT:\n        // normalize [0, 65535] to [0, 1]\n        return new Float32Array(value).map(x => x / 65535);\n\n      default:\n        // No normalization for gl.FLOAT and gl.HALF_FLOAT\n        return value;\n    }\n  }\n\n  /* check user supplied values and apply fallback */\n  protected _normalizeValue(value: any, out: NumericArray, start: number): NumericArray {\n    const {defaultValue, size} = this.settings;\n\n    if (Number.isFinite(value)) {\n      out[start] = value;\n      return out;\n    }\n    if (!value) {\n      let i = size;\n      while (--i >= 0) {\n        out[start + i] = defaultValue[i];\n      }\n      return out;\n    }\n\n    // Important - switch cases are 5x more performant than a for loop!\n    /* eslint-disable no-fallthrough, default-case */\n    switch (size) {\n      case 4:\n        out[start + 3] = Number.isFinite(value[3]) ? value[3] : defaultValue[3];\n      case 3:\n        out[start + 2] = Number.isFinite(value[2]) ? value[2] : defaultValue[2];\n      case 2:\n        out[start + 1] = Number.isFinite(value[1]) ? value[1] : defaultValue[1];\n      case 1:\n        out[start + 0] = Number.isFinite(value[0]) ? value[0] : defaultValue[0];\n        break;\n\n      default:\n        // In the rare case where the attribute size > 4, do it the slow way\n        // This is used for e.g. transform matrices\n        let i = size;\n        while (--i >= 0) {\n          out[start + i] = Number.isFinite(value[i]) ? value[i] : defaultValue[i];\n        }\n    }\n\n    return out;\n  }\n\n  protected _areValuesEqual(value1: any, value2: any): boolean {\n    if (!value1 || !value2) {\n      return false;\n    }\n    const {size} = this;\n    for (let i = 0; i < size; i++) {\n      if (value1[i] !== value2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n","/*\n * range (Array)\n *   + start (Number) - the start index (incl.)\n *   + end (Number) - the end index (excl.)\n * rangeList (Array) - array of sorted, combined ranges\n */\nexport const EMPTY = [];\nexport const FULL = [[0, Infinity]];\n\n// Insert a range into a range collection\nexport function add(rangeList, range) {\n  // Noop if range collection already covers all\n  if (rangeList === FULL) {\n    return rangeList;\n  }\n\n  // Validate the input range\n  if (range[0] < 0) {\n    range[0] = 0;\n  }\n  if (range[0] >= range[1]) {\n    return rangeList;\n  }\n\n  // TODO - split off to tree-shakable Range class\n  const newRangeList: number[] = [];\n  const len = rangeList.length;\n  let insertPosition = 0;\n\n  for (let i = 0; i < len; i++) {\n    const range0 = rangeList[i];\n\n    if (range0[1] < range[0]) {\n      // the current range is to the left of the new range\n      newRangeList.push(range0);\n      insertPosition = i + 1;\n    } else if (range0[0] > range[1]) {\n      // the current range is to the right of the new range\n      newRangeList.push(range0);\n    } else {\n      range = [Math.min(range0[0], range[0]), Math.max(range0[1], range[1])];\n    }\n  }\n  newRangeList.splice(insertPosition, 0, range);\n  return newRangeList;\n}\n","/* eslint-disable complexity */\nimport DataColumn, {DataColumnOptions, ShaderAttributeOptions, BufferAccessor} from './data-column';\nimport {IShaderAttribute} from './shader-attribute';\nimport assert from '../../utils/assert';\nimport {createIterable, getAccessorFromBuffer} from '../../utils/iterable-utils';\nimport {fillArray} from '../../utils/flatten';\nimport * as range from '../../utils/range';\nimport {normalizeTransitionSettings, TransitionSettings} from './attribute-transition-utils';\nimport type {Buffer} from '@luma.gl/webgl';\n\nimport type {NumericArray, TypedArray} from '../../types/types';\n\nexport type Accessor<DataType, ReturnType> = (\n  object: DataType,\n  context: {\n    data: any;\n    index: number;\n    target: number[];\n  }\n) => ReturnType;\n\nexport type Updater = (\n  attribute: Attribute,\n  {\n    data,\n    startRow,\n    endRow,\n    props,\n    numInstances\n  }: {\n    data: any;\n    startRow: number;\n    endRow: number;\n    props: any;\n    numInstances: number;\n  }\n) => void;\n\nexport type AttributeOptions = DataColumnOptions<{\n  transition?: boolean | Partial<TransitionSettings>;\n  noAlloc?: boolean;\n  update?: Updater;\n  accessor?: Accessor<any, any> | string | string[];\n  transform?: (value: any) => any;\n  shaderAttributes?: Record<string, Partial<ShaderAttributeOptions>>;\n}>;\n\nexport type BinaryAttribute = Partial<BufferAccessor> & {value?: TypedArray; buffer?: Buffer};\n\ntype AttributeInternalState = {\n  startIndices: NumericArray | null;\n  /** Legacy: external binary supplied via attribute name */\n  lastExternalBuffer: TypedArray | Buffer | BinaryAttribute | null;\n  /** External binary supplied via accessor name */\n  binaryValue: TypedArray | Buffer | BinaryAttribute | null;\n  binaryAccessor: Accessor<any, any> | null;\n  needsUpdate: string | boolean;\n  needsRedraw: string | boolean;\n  updateRanges: number[][];\n};\n\nexport default class Attribute extends DataColumn<AttributeOptions, AttributeInternalState> {\n  /** Legacy approach to set attribute value - read `isConstant` instead for attribute state */\n  constant: boolean = false;\n\n  constructor(gl: WebGLRenderingContext, opts: AttributeOptions) {\n    super(gl, opts, {\n      startIndices: null,\n      lastExternalBuffer: null,\n      binaryValue: null,\n      binaryAccessor: null,\n      needsUpdate: true,\n      needsRedraw: false,\n      updateRanges: range.FULL\n    });\n\n    // eslint-disable-next-line\n    this.settings.update = opts.update || (opts.accessor ? this._autoUpdater : undefined);\n\n    Object.seal(this.settings);\n    Object.seal(this.state);\n\n    // Check all fields and generate helpful error messages\n    this._validateAttributeUpdaters();\n  }\n\n  get startIndices(): NumericArray | null {\n    return this.state.startIndices;\n  }\n\n  set startIndices(layout: NumericArray | null) {\n    this.state.startIndices = layout;\n  }\n\n  needsUpdate(): string | boolean {\n    return this.state.needsUpdate;\n  }\n\n  needsRedraw({clearChangedFlags = false}: {clearChangedFlags?: boolean} = {}): string | boolean {\n    const needsRedraw = this.state.needsRedraw;\n    this.state.needsRedraw = needsRedraw && !clearChangedFlags;\n    return needsRedraw;\n  }\n\n  getUpdateTriggers(): string[] {\n    const {accessor} = this.settings;\n\n    // Backards compatibility: allow attribute name to be used as update trigger key\n    return [this.id].concat((typeof accessor !== 'function' && accessor) || []);\n  }\n\n  supportsTransition(): boolean {\n    return Boolean(this.settings.transition);\n  }\n\n  // Resolve transition settings object if transition is enabled, otherwise `null`\n  getTransitionSetting(opts: Record<string, any>): TransitionSettings | null {\n    if (!opts || !this.supportsTransition()) {\n      return null;\n    }\n    const {accessor} = this.settings;\n    // TODO: have the layer resolve these transition settings itself?\n    const layerSettings = this.settings.transition;\n    // these are the transition settings passed in by the user\n    const userSettings = Array.isArray(accessor)\n      ? // @ts-ignore\n        opts[accessor.find(a => opts[a])]\n      : // @ts-ignore\n        opts[accessor];\n\n    // Shorthand: use duration instead of parameter object\n    return normalizeTransitionSettings(userSettings, layerSettings);\n  }\n\n  setNeedsUpdate(reason: string = this.id, dataRange?: {startRow?: number; endRow?: number}): void {\n    this.state.needsUpdate = this.state.needsUpdate || reason;\n    this.setNeedsRedraw(reason);\n    if (dataRange) {\n      const {startRow = 0, endRow = Infinity} = dataRange;\n      this.state.updateRanges = range.add(this.state.updateRanges, [startRow, endRow]);\n    } else {\n      this.state.updateRanges = range.FULL;\n    }\n  }\n\n  clearNeedsUpdate(): void {\n    this.state.needsUpdate = false;\n    this.state.updateRanges = range.EMPTY;\n  }\n\n  setNeedsRedraw(reason: string = this.id): void {\n    this.state.needsRedraw = this.state.needsRedraw || reason;\n  }\n\n  allocate(numInstances: number): boolean {\n    const {state, settings} = this;\n\n    if (settings.noAlloc) {\n      // Data is provided through a Buffer object.\n      return false;\n    }\n\n    if (settings.update) {\n      super.allocate(numInstances, state.updateRanges !== range.FULL);\n      return true;\n    }\n\n    return false;\n  }\n\n  updateBuffer({\n    numInstances,\n    data,\n    props,\n    context\n  }: {\n    numInstances: number;\n    data: any;\n    props: any;\n    context: any;\n  }): boolean {\n    if (!this.needsUpdate()) {\n      return false;\n    }\n\n    const {\n      state: {updateRanges},\n      settings: {update, noAlloc}\n    } = this;\n\n    let updated = true;\n    if (update) {\n      // Custom updater - typically for non-instanced layers\n      for (const [startRow, endRow] of updateRanges) {\n        update.call(context, this, {data, startRow, endRow, props, numInstances});\n      }\n      if (!this.value) {\n        // no value was assigned during update\n      } else if (\n        this.constant ||\n        this.buffer.byteLength < (this.value as TypedArray).byteLength + this.byteOffset\n      ) {\n        this.setData({\n          value: this.value,\n          constant: this.constant\n        });\n        // Setting attribute.constant in updater is a legacy approach that interferes with allocation in the next cycle\n        // Respect it here but reset after use\n        this.constant = false;\n      } else {\n        for (const [startRow, endRow] of updateRanges) {\n          const startOffset = Number.isFinite(startRow) ? this.getVertexOffset(startRow) : 0;\n          const endOffset = Number.isFinite(endRow)\n            ? this.getVertexOffset(endRow)\n            : noAlloc || !Number.isFinite(numInstances)\n            ? this.value.length\n            : numInstances * this.size;\n\n          super.updateSubBuffer({startOffset, endOffset});\n        }\n      }\n      this._checkAttributeArray();\n    } else {\n      updated = false;\n    }\n\n    this.clearNeedsUpdate();\n    this.setNeedsRedraw();\n\n    return updated;\n  }\n\n  // Use generic value\n  // Returns true if successful\n  setConstantValue(value?: NumericArray): boolean {\n    if (value === undefined || typeof value === 'function') {\n      return false;\n    }\n\n    const hasChanged = this.setData({constant: true, value});\n\n    if (hasChanged) {\n      this.setNeedsRedraw();\n    }\n    this.clearNeedsUpdate();\n    return true;\n  }\n\n  // Use external buffer\n  // Returns true if successful\n  // eslint-disable-next-line max-statements\n  setExternalBuffer(buffer?: TypedArray | Buffer | BinaryAttribute): boolean {\n    const {state} = this;\n\n    if (!buffer) {\n      state.lastExternalBuffer = null;\n      return false;\n    }\n\n    this.clearNeedsUpdate();\n\n    if (state.lastExternalBuffer === buffer) {\n      return true;\n    }\n    state.lastExternalBuffer = buffer;\n    this.setNeedsRedraw();\n    this.setData(buffer);\n    return true;\n  }\n\n  // Binary value is a typed array packed from mapping the source data with the accessor\n  // If the returned value from the accessor is the same as the attribute value, set it directly\n  // Otherwise use the auto updater for transform/normalization\n  setBinaryValue(\n    buffer?: TypedArray | Buffer | BinaryAttribute,\n    startIndices: NumericArray | null = null\n  ): boolean {\n    const {state, settings} = this;\n\n    if (!buffer) {\n      state.binaryValue = null;\n      state.binaryAccessor = null;\n      return false;\n    }\n\n    if (settings.noAlloc) {\n      // Let the layer handle this\n      return false;\n    }\n\n    if (state.binaryValue === buffer) {\n      this.clearNeedsUpdate();\n      return true;\n    }\n    state.binaryValue = buffer;\n    this.setNeedsRedraw();\n\n    const needsUpdate = settings.transform || startIndices !== this.startIndices;\n\n    if (needsUpdate) {\n      if (ArrayBuffer.isView(buffer)) {\n        buffer = {value: buffer};\n      }\n      const binaryValue = buffer as BinaryAttribute;\n      assert(ArrayBuffer.isView(binaryValue.value), `invalid ${settings.accessor}`);\n      const needsNormalize = Boolean(binaryValue.size) && binaryValue.size !== this.size;\n\n      state.binaryAccessor = getAccessorFromBuffer(binaryValue.value, {\n        size: binaryValue.size || this.size,\n        stride: binaryValue.stride,\n        offset: binaryValue.offset,\n        startIndices: startIndices as NumericArray,\n        nested: needsNormalize\n      });\n      // Fall through to auto updater\n      return false;\n    }\n\n    this.clearNeedsUpdate();\n    this.setData(buffer);\n    return true;\n  }\n\n  getVertexOffset(row: number): number {\n    const {startIndices} = this;\n    const vertexIndex = startIndices\n      ? row < startIndices.length\n        ? startIndices[row]\n        : this.numInstances\n      : row;\n    return vertexIndex * this.size;\n  }\n\n  getShaderAttributes(): Record<string, IShaderAttribute> {\n    const shaderAttributeDefs = this.settings.shaderAttributes || {[this.id]: null};\n    const shaderAttributes: Record<string, IShaderAttribute> = {};\n\n    for (const shaderAttributeName in shaderAttributeDefs) {\n      Object.assign(\n        shaderAttributes,\n        super.getShaderAttributes(shaderAttributeName, shaderAttributeDefs[shaderAttributeName])\n      );\n    }\n\n    return shaderAttributes;\n  }\n\n  /* eslint-disable max-depth, max-statements */\n  private _autoUpdater(\n    attribute: Attribute,\n    {\n      data,\n      startRow,\n      endRow,\n      props,\n      numInstances\n    }: {\n      data: any;\n      startRow: number;\n      endRow: number;\n      props: any;\n      numInstances: number;\n    }\n  ): void {\n    if (attribute.constant) {\n      return;\n    }\n    const {settings, state, value, size, startIndices} = attribute;\n\n    const {accessor, transform} = settings;\n    const accessorFunc: Accessor<any, any> =\n      state.binaryAccessor ||\n      // @ts-ignore\n      (typeof accessor === 'function' ? accessor : props[accessor]);\n\n    assert(typeof accessorFunc === 'function', `accessor \"${accessor}\" is not a function`);\n\n    let i = attribute.getVertexOffset(startRow);\n    const {iterable, objectInfo} = createIterable(data, startRow, endRow);\n    for (const object of iterable) {\n      objectInfo.index++;\n\n      let objectValue = accessorFunc(object, objectInfo);\n      if (transform) {\n        // transform callbacks could be bound to a particular layer instance.\n        // always point `this` to the current layer.\n        objectValue = transform.call(this, objectValue);\n      }\n\n      if (startIndices) {\n        const numVertices =\n          (objectInfo.index < startIndices.length - 1\n            ? startIndices[objectInfo.index + 1]\n            : numInstances) - startIndices[objectInfo.index];\n        if (objectValue && Array.isArray(objectValue[0])) {\n          let startIndex = i;\n          for (const item of objectValue) {\n            attribute._normalizeValue(item, value as TypedArray, startIndex);\n            startIndex += size;\n          }\n        } else if (objectValue && objectValue.length > size) {\n          (value as TypedArray).set(objectValue, i);\n        } else {\n          attribute._normalizeValue(objectValue, objectInfo.target, 0);\n          fillArray({\n            target: value,\n            source: objectInfo.target,\n            start: i,\n            count: numVertices\n          });\n        }\n        i += numVertices * size;\n      } else {\n        attribute._normalizeValue(objectValue, value as TypedArray, i);\n        i += size;\n      }\n    }\n  }\n  /* eslint-enable max-depth, max-statements */\n\n  // Validate deck.gl level fields\n  private _validateAttributeUpdaters() {\n    const {settings} = this;\n\n    // Check that 'update' is a valid function\n    const hasUpdater = settings.noAlloc || typeof settings.update === 'function';\n    if (!hasUpdater) {\n      throw new Error(`Attribute ${this.id} missing update or accessor`);\n    }\n  }\n\n  // check that the first few elements of the attribute are reasonable\n  /* eslint-disable no-fallthrough */\n  private _checkAttributeArray() {\n    const {value} = this;\n    const limit = Math.min(4, this.size);\n    if (value && value.length >= limit) {\n      let valid = true;\n      switch (limit) {\n        case 4:\n          valid = valid && Number.isFinite(value[3]);\n        case 3:\n          valid = valid && Number.isFinite(value[2]);\n        case 2:\n          valid = valid && Number.isFinite(value[1]);\n        case 1:\n          valid = valid && Number.isFinite(value[0]);\n          break;\n        default:\n          valid = false;\n      }\n\n      if (!valid) {\n        throw new Error(`Illegal attribute generated for ${this.id}`);\n      }\n    }\n  }\n  /* eslint-enable no-fallthrough */\n}\n","import GL from '@luma.gl/constants';\nimport type {TypedArrayConstructor} from '../../types/types';\n\n/* eslint-disable complexity */\nexport function glArrayFromType(glType: number): TypedArrayConstructor {\n  // Sorted in some order of likelihood to reduce amount of comparisons\n  switch (glType) {\n    case GL.FLOAT:\n      return Float32Array;\n    case GL.DOUBLE:\n      return Float64Array;\n    case GL.UNSIGNED_SHORT:\n    case GL.UNSIGNED_SHORT_5_6_5:\n    case GL.UNSIGNED_SHORT_4_4_4_4:\n    case GL.UNSIGNED_SHORT_5_5_5_1:\n      return Uint16Array;\n    case GL.UNSIGNED_INT:\n      return Uint32Array;\n    case GL.UNSIGNED_BYTE:\n      return Uint8ClampedArray;\n    case GL.BYTE:\n      return Int8Array;\n    case GL.SHORT:\n      return Int16Array;\n    case GL.INT:\n      return Int32Array;\n    default:\n      throw new Error('Unknown GL type');\n  }\n}\n/* eslint-enable complexity */\n","import {Transform} from '@luma.gl/core';\nimport GPUInterpolationTransition from '../../transitions/gpu-interpolation-transition';\nimport GPUSpringTransition from '../../transitions/gpu-spring-transition';\nimport log from '../../utils/log';\n\nimport type {TransitionSettings} from './attribute-transition-utils';\nimport type Attribute from './attribute';\nimport type {Timeline} from '@luma.gl/engine';\nimport type GPUTransition from '../../transitions/gpu-transition';\nimport type {ConstructorOf} from '../../types/types';\n\nconst TRANSITION_TYPES: Record<string, ConstructorOf<GPUTransition>> = {\n  interpolation: GPUInterpolationTransition,\n  spring: GPUSpringTransition\n};\n\nexport default class AttributeTransitionManager {\n  id: string;\n  isSupported: boolean;\n\n  private gl: WebGLRenderingContext;\n  private timeline?: Timeline;\n\n  private transitions: {[id: string]: GPUTransition};\n  private needsRedraw: boolean;\n  private numInstances: number;\n\n  constructor(\n    gl: WebGLRenderingContext,\n    {\n      id,\n      timeline\n    }: {\n      id: string;\n      timeline?: Timeline;\n    }\n  ) {\n    this.id = id;\n    this.gl = gl;\n    this.timeline = timeline;\n\n    this.transitions = {};\n    this.needsRedraw = false;\n    this.numInstances = 1;\n\n    this.isSupported = Transform.isSupported(gl);\n  }\n\n  finalize(): void {\n    for (const attributeName in this.transitions) {\n      this._removeTransition(attributeName);\n    }\n  }\n\n  /* Public methods */\n\n  // Called when attribute manager updates\n  // Check the latest attributes for updates.\n  update({\n    attributes,\n    transitions,\n    numInstances\n  }: {\n    attributes: {[id: string]: Attribute};\n    transitions: any;\n    numInstances: number;\n  }): void {\n    // Transform class will crash if elementCount is 0\n    this.numInstances = numInstances || 1;\n\n    for (const attributeName in attributes) {\n      const attribute = attributes[attributeName];\n      const settings = attribute.getTransitionSetting(transitions);\n\n      // this attribute might not support transitions?\n      if (!settings) continue; // eslint-disable-line no-continue\n      this._updateAttribute(attributeName, attribute, settings);\n    }\n\n    for (const attributeName in this.transitions) {\n      const attribute = attributes[attributeName];\n      if (!attribute || !attribute.getTransitionSetting(transitions)) {\n        // Animated attribute has been removed\n        this._removeTransition(attributeName);\n      }\n    }\n  }\n\n  // Returns `true` if attribute is transition-enabled\n  hasAttribute(attributeName: string): boolean {\n    const transition = this.transitions[attributeName];\n    return transition && transition.inProgress;\n  }\n\n  // Get all the animated attributes\n  getAttributes(): {[id: string]: Attribute} {\n    const animatedAttributes = {};\n\n    for (const attributeName in this.transitions) {\n      const transition = this.transitions[attributeName];\n      if (transition.inProgress) {\n        animatedAttributes[attributeName] = transition.attributeInTransition;\n      }\n    }\n\n    return animatedAttributes;\n  }\n\n  /* eslint-disable max-statements */\n  // Called every render cycle, run transform feedback\n  // Returns `true` if anything changes\n  run(): boolean {\n    if (!this.isSupported || this.numInstances === 0) {\n      return false;\n    }\n\n    for (const attributeName in this.transitions) {\n      const updated = this.transitions[attributeName].update();\n      if (updated) {\n        this.needsRedraw = true;\n      }\n    }\n\n    const needsRedraw = this.needsRedraw;\n    this.needsRedraw = false;\n    return needsRedraw;\n  }\n  /* eslint-enable max-statements */\n\n  /* Private methods */\n  private _removeTransition(attributeName: string): void {\n    this.transitions[attributeName].cancel();\n    delete this.transitions[attributeName];\n  }\n\n  // Check an attributes for updates\n  // Returns a transition object if a new transition is triggered.\n  private _updateAttribute(\n    attributeName: string,\n    attribute: Attribute,\n    settings: TransitionSettings\n  ): void {\n    const transition = this.transitions[attributeName];\n    // an attribute can change transition type when it updates\n    // let's remove the transition when that happens so we can create the new transition type\n    // TODO: when switching transition types, make sure to carry over the attribute's\n    // previous buffers, currentLength, startIndices, etc, to be used as the starting point\n    // for the next transition\n    let isNew = !transition || transition.type !== settings.type;\n    if (isNew) {\n      if (!this.isSupported) {\n        log.warn(\n          `WebGL2 not supported by this browser. Transition for ${attributeName} is disabled.`\n        )();\n        return;\n      }\n\n      if (transition) {\n        this._removeTransition(attributeName);\n      }\n\n      const TransitionType = TRANSITION_TYPES[settings.type];\n      if (TransitionType) {\n        this.transitions[attributeName] = new TransitionType({\n          attribute,\n          timeline: this.timeline,\n          gl: this.gl\n        });\n      } else {\n        log.error(`unsupported transition type '${settings.type}'`)();\n        isNew = false;\n      }\n    }\n\n    if (isNew || attribute.needsRedraw()) {\n      this.needsRedraw = true;\n      this.transitions[attributeName].start(settings, this.numInstances);\n    }\n  }\n}\n","import GL from '@luma.gl/constants';\nimport {Buffer, Transform} from '@luma.gl/core';\nimport Attribute from '../lib/attribute/attribute';\nimport {\n  padBuffer,\n  getAttributeTypeFromSize,\n  getSourceBufferAttribute,\n  getAttributeBufferLength,\n  cycleBuffers,\n  InterpolationTransitionSettings\n} from '../lib/attribute/attribute-transition-utils';\nimport Transition from './transition';\n\nimport type {Timeline, Transform as LumaTransform} from '@luma.gl/engine';\nimport type {Buffer as LumaBuffer} from '@luma.gl/webgl';\nimport type {NumericArray} from '../types/types';\nimport type GPUTransition from './gpu-transition';\n\nexport default class GPUInterpolationTransition implements GPUTransition {\n  gl: WebGLRenderingContext;\n  type = 'interpolation';\n  attributeInTransition: Attribute;\n\n  private settings?: InterpolationTransitionSettings;\n  private attribute: Attribute;\n  private transition: Transition;\n  private currentStartIndices: NumericArray | null;\n  private currentLength: number;\n  private transform: LumaTransform;\n  private buffers: LumaBuffer[];\n\n  constructor({\n    gl,\n    attribute,\n    timeline\n  }: {\n    gl: WebGLRenderingContext;\n    attribute: Attribute;\n    timeline: Timeline;\n  }) {\n    this.gl = gl;\n    this.transition = new Transition(timeline);\n    this.attribute = attribute;\n    // this is the attribute we return during the transition - note: if it is a constant\n    // attribute, it will be converted and returned as a regular attribute\n    // `attribute.userData` is the original options passed when constructing the attribute.\n    // This ensures that we set the proper `doublePrecision` flag and shader attributes.\n    this.attributeInTransition = new Attribute(gl, attribute.settings);\n    this.currentStartIndices = attribute.startIndices;\n    // storing currentLength because this.buffer may be larger than the actual length we want to use\n    // this is because we only reallocate buffers when they grow, not when they shrink,\n    // due to performance costs\n    this.currentLength = 0;\n    this.transform = getTransform(gl, attribute);\n    const bufferOpts = {\n      byteLength: 0,\n      usage: GL.DYNAMIC_COPY\n    };\n    this.buffers = [\n      new Buffer(gl, bufferOpts), // from\n      new Buffer(gl, bufferOpts) // current\n    ];\n  }\n\n  get inProgress(): boolean {\n    return this.transition.inProgress;\n  }\n\n  // this is called when an attribute's values have changed and\n  // we need to start animating towards the new values\n  // this also correctly resizes / pads the transform's buffers\n  // in case the attribute's buffer has changed in length or in\n  // startIndices\n  start(transitionSettings: InterpolationTransitionSettings, numInstances: number): void {\n    if (transitionSettings.duration <= 0) {\n      this.transition.cancel();\n      return;\n    }\n    this.settings = transitionSettings;\n\n    const {gl, buffers, attribute} = this;\n    // Alternate between two buffers when new transitions start.\n    // Last destination buffer is used as an attribute (from state),\n    // And the other buffer is now the current buffer.\n    cycleBuffers(buffers);\n\n    const padBufferOpts = {\n      numInstances,\n      attribute,\n      fromLength: this.currentLength,\n      fromStartIndices: this.currentStartIndices,\n      getData: transitionSettings.enter\n    };\n\n    for (const buffer of buffers) {\n      padBuffer({buffer, ...padBufferOpts});\n    }\n\n    this.currentStartIndices = attribute.startIndices;\n    this.currentLength = getAttributeBufferLength(attribute, numInstances);\n    this.attributeInTransition.setData({\n      buffer: buffers[1],\n      // Hack: Float64Array is required for double-precision attributes\n      // to generate correct shader attributes\n      value: attribute.value as NumericArray\n    });\n\n    this.transition.start(transitionSettings);\n\n    this.transform.update({\n      elementCount: Math.floor(this.currentLength / attribute.size),\n      sourceBuffers: {\n        aFrom: buffers[0],\n        aTo: getSourceBufferAttribute(gl, attribute)\n      },\n      feedbackBuffers: {\n        vCurrent: buffers[1]\n      }\n    });\n  }\n\n  update(): boolean {\n    const updated = this.transition.update();\n    if (updated) {\n      const {duration, easing} = this.settings as InterpolationTransitionSettings;\n      const {time} = this.transition;\n      let t = time / duration;\n      if (easing) {\n        t = easing(t);\n      }\n      this.transform.run({\n        uniforms: {time: t}\n      });\n    }\n    return updated;\n  }\n\n  cancel(): void {\n    this.transition.cancel();\n    this.transform.delete();\n    for (const buffer of this.buffers) {\n      buffer.delete();\n    }\n    this.buffers.length = 0;\n  }\n}\n\nconst vs = `\n#define SHADER_NAME interpolation-transition-vertex-shader\n\nuniform float time;\nattribute ATTRIBUTE_TYPE aFrom;\nattribute ATTRIBUTE_TYPE aTo;\nvarying ATTRIBUTE_TYPE vCurrent;\n\nvoid main(void) {\n  vCurrent = mix(aFrom, aTo, time);\n  gl_Position = vec4(0.0);\n}\n`;\n\nfunction getTransform(gl: WebGLRenderingContext, attribute: Attribute): LumaTransform {\n  const attributeType = getAttributeTypeFromSize(attribute.size);\n  return new Transform(gl, {\n    vs,\n    defines: {\n      ATTRIBUTE_TYPE: attributeType\n    },\n    varyings: ['vCurrent']\n  });\n}\n","/* eslint-disable complexity, max-statements, max-params */\nimport GL from '@luma.gl/constants';\nimport {Buffer, Transform, Framebuffer, Texture2D, readPixelsToArray} from '@luma.gl/core';\nimport {\n  padBuffer,\n  getAttributeTypeFromSize,\n  getSourceBufferAttribute,\n  getAttributeBufferLength,\n  cycleBuffers,\n  SpringTransitionSettings\n} from '../lib/attribute/attribute-transition-utils';\nimport Attribute from '../lib/attribute/attribute';\nimport Transition from './transition';\n\nimport type {Timeline, Transform as LumaTransform} from '@luma.gl/engine';\nimport type {\n  Buffer as LumaBuffer,\n  Framebuffer as LumaFramebuffer,\n  Texture2D as LumaTexture2D\n} from '@luma.gl/webgl';\nimport type {NumericArray} from '../types/types';\nimport type GPUTransition from './gpu-transition';\n\nexport default class GPUSpringTransition implements GPUTransition {\n  gl: WebGLRenderingContext;\n  type = 'spring';\n  attributeInTransition: Attribute;\n\n  private settings?: SpringTransitionSettings;\n  private attribute: Attribute;\n  private transition: Transition;\n  private currentStartIndices: NumericArray | null;\n  private currentLength: number;\n  private texture: LumaTexture2D;\n  private framebuffer: LumaFramebuffer;\n  private transform: LumaTransform;\n  private buffers: LumaBuffer[];\n\n  constructor({\n    gl,\n    attribute,\n    timeline\n  }: {\n    gl: WebGLRenderingContext;\n    attribute: Attribute;\n    timeline: Timeline;\n  }) {\n    this.gl = gl;\n    this.type = 'spring';\n    this.transition = new Transition(timeline);\n    this.attribute = attribute;\n    // this is the attribute we return during the transition - note: if it is a constant\n    // attribute, it will be converted and returned as a regular attribute\n    // `attribute.userData` is the original options passed when constructing the attribute.\n    // This ensures that we set the proper `doublePrecision` flag and shader attributes.\n    this.attributeInTransition = new Attribute(gl, {...attribute.settings, normalized: false});\n    this.currentStartIndices = attribute.startIndices;\n    // storing currentLength because this.buffer may be larger than the actual length we want to use\n    // this is because we only reallocate buffers when they grow, not when they shrink,\n    // due to performance costs\n    this.currentLength = 0;\n    this.texture = getTexture(gl);\n    this.framebuffer = getFramebuffer(gl, this.texture);\n    this.transform = getTransform(gl, attribute, this.framebuffer);\n    const bufferOpts = {\n      byteLength: 0,\n      usage: GL.DYNAMIC_COPY\n    };\n    this.buffers = [\n      new Buffer(gl, bufferOpts), // previous\n      new Buffer(gl, bufferOpts), // current\n      new Buffer(gl, bufferOpts) // next\n    ];\n  }\n\n  get inProgress(): boolean {\n    return this.transition.inProgress;\n  }\n\n  // this is called when an attribute's values have changed and\n  // we need to start animating towards the new values\n  // this also correctly resizes / pads the transform's buffers\n  // in case the attribute's buffer has changed in length or in\n  // startIndices\n  start(transitionSettings: SpringTransitionSettings, numInstances: number): void {\n    const {gl, buffers, attribute} = this;\n    const padBufferOpts = {\n      numInstances,\n      attribute,\n      fromLength: this.currentLength,\n      fromStartIndices: this.currentStartIndices,\n      getData: transitionSettings.enter\n    };\n\n    for (const buffer of buffers) {\n      padBuffer({buffer, ...padBufferOpts});\n    }\n\n    this.settings = transitionSettings;\n    this.currentStartIndices = attribute.startIndices;\n    this.currentLength = getAttributeBufferLength(attribute, numInstances);\n    this.attributeInTransition.setData({\n      buffer: buffers[1],\n      // Hack: Float64Array is required for double-precision attributes\n      // to generate correct shader attributes\n      value: attribute.value as NumericArray\n    });\n\n    // when an attribute changes values, a new transition is started. These\n    // are properties that we have to store on this.transition but can change\n    // when new transitions are started, so we have to keep them up-to-date.\n    // this.transition.start() takes the latest settings and updates them.\n    this.transition.start({...transitionSettings, duration: Infinity});\n\n    this.transform.update({\n      elementCount: Math.floor(this.currentLength / attribute.size),\n      sourceBuffers: {\n        aTo: getSourceBufferAttribute(gl, attribute)\n      }\n    });\n  }\n\n  update() {\n    const {buffers, transform, framebuffer, transition} = this;\n    const updated = transition.update();\n    if (!updated) {\n      return false;\n    }\n    const settings = this.settings as SpringTransitionSettings;\n\n    transform.update({\n      sourceBuffers: {\n        aPrev: buffers[0],\n        aCur: buffers[1]\n      },\n      feedbackBuffers: {\n        vNext: buffers[2]\n      }\n    });\n    transform.run({\n      framebuffer,\n      discard: false,\n      clearRenderTarget: true,\n      uniforms: {\n        stiffness: settings.stiffness,\n        damping: settings.damping\n      },\n      parameters: {\n        depthTest: false,\n        blend: true,\n        viewport: [0, 0, 1, 1],\n        blendFunc: [GL.ONE, GL.ONE],\n        blendEquation: [GL.MAX, GL.MAX]\n      }\n    });\n\n    cycleBuffers(buffers);\n    this.attributeInTransition.setData({\n      buffer: buffers[1],\n      // Hack: Float64Array is required for double-precision attributes\n      // to generate correct shader attributes\n      value: this.attribute.value as NumericArray\n    });\n\n    const isTransitioning = readPixelsToArray(framebuffer)[0] > 0;\n\n    if (!isTransitioning) {\n      transition.end();\n    }\n\n    return true;\n  }\n\n  cancel() {\n    this.transition.cancel();\n    this.transform.delete();\n    for (const buffer of this.buffers) {\n      buffer.delete();\n    }\n    this.buffers.length = 0;\n    this.texture.delete();\n    this.framebuffer.delete();\n  }\n}\n\nfunction getTransform(\n  gl: WebGLRenderingContext,\n  attribute: Attribute,\n  framebuffer: LumaFramebuffer\n): LumaTransform {\n  const attributeType = getAttributeTypeFromSize(attribute.size);\n  return new Transform(gl, {\n    framebuffer,\n    vs: `\n#define SHADER_NAME spring-transition-vertex-shader\n\n#define EPSILON 0.00001\n\nuniform float stiffness;\nuniform float damping;\nattribute ATTRIBUTE_TYPE aPrev;\nattribute ATTRIBUTE_TYPE aCur;\nattribute ATTRIBUTE_TYPE aTo;\nvarying ATTRIBUTE_TYPE vNext;\nvarying float vIsTransitioningFlag;\n\nATTRIBUTE_TYPE getNextValue(ATTRIBUTE_TYPE cur, ATTRIBUTE_TYPE prev, ATTRIBUTE_TYPE dest) {\n  ATTRIBUTE_TYPE velocity = cur - prev;\n  ATTRIBUTE_TYPE delta = dest - cur;\n  ATTRIBUTE_TYPE spring = delta * stiffness;\n  ATTRIBUTE_TYPE damper = velocity * -1.0 * damping;\n  return spring + damper + velocity + cur;\n}\n\nvoid main(void) {\n  bool isTransitioning = length(aCur - aPrev) > EPSILON || length(aTo - aCur) > EPSILON;\n  vIsTransitioningFlag = isTransitioning ? 1.0 : 0.0;\n\n  vNext = getNextValue(aCur, aPrev, aTo);\n  gl_Position = vec4(0, 0, 0, 1);\n  gl_PointSize = 100.0;\n}\n`,\n    fs: `\n#define SHADER_NAME spring-transition-is-transitioning-fragment-shader\n\nvarying float vIsTransitioningFlag;\n\nvoid main(void) {\n  if (vIsTransitioningFlag == 0.0) {\n    discard;\n  }\n  gl_FragColor = vec4(1.0);\n}`,\n    defines: {\n      ATTRIBUTE_TYPE: attributeType\n    },\n    varyings: ['vNext']\n  });\n}\n\nfunction getTexture(gl: WebGLRenderingContext): LumaTexture2D {\n  return new Texture2D(gl, {\n    data: new Uint8Array(4),\n    format: GL.RGBA,\n    type: GL.UNSIGNED_BYTE,\n    border: 0,\n    mipmaps: false,\n    dataFormat: GL.RGBA,\n    width: 1,\n    height: 1\n  });\n}\n\nfunction getFramebuffer(gl: WebGLRenderingContext, texture: LumaTexture2D): LumaFramebuffer {\n  return new Framebuffer(gl, {\n    id: 'spring-transition-is-transitioning-framebuffer',\n    width: 1,\n    height: 1,\n    attachments: {\n      [GL.COLOR_ATTACHMENT0]: texture\n    }\n  });\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/* eslint-disable guard-for-in */\nimport Attribute, {AttributeOptions} from './attribute';\nimport {IShaderAttribute} from './shader-attribute';\nimport log from '../../utils/log';\nimport memoize from '../../utils/memoize';\nimport {mergeBounds} from '../../utils/math-utils';\nimport debug from '../../debug';\nimport {NumericArray} from '../../types/types';\n\nimport AttributeTransitionManager from './attribute-transition-manager';\n\nimport type {Stats} from '@probe.gl/stats';\nimport type {Timeline} from '@luma.gl/engine';\n\nconst TRACE_INVALIDATE = 'attributeManager.invalidate';\nconst TRACE_UPDATE_START = 'attributeManager.updateStart';\nconst TRACE_UPDATE_END = 'attributeManager.updateEnd';\nconst TRACE_ATTRIBUTE_UPDATE_START = 'attribute.updateStart';\nconst TRACE_ATTRIBUTE_ALLOCATE = 'attribute.allocate';\nconst TRACE_ATTRIBUTE_UPDATE_END = 'attribute.updateEnd';\n\nexport default class AttributeManager {\n  /**\n   * @classdesc\n   * Automated attribute generation and management. Suitable when a set of\n   * vertex shader attributes are generated by iteration over a data array,\n   * and updates to these attributes are needed either when the data itself\n   * changes, or when other data relevant to the calculations change.\n   *\n   * - First the application registers descriptions of its dynamic vertex\n   *   attributes using AttributeManager.add().\n   * - Then, when any change that affects attributes is detected by the\n   *   application, the app will call AttributeManager.invalidate().\n   * - Finally before it renders, it calls AttributeManager.update() to\n   *   ensure that attributes are automatically rebuilt if anything has been\n   *   invalidated.\n   *\n   * The application provided update functions describe how attributes\n   * should be updated from a data array and are expected to traverse\n   * that data array (or iterable) and fill in the attribute's typed array.\n   *\n   * Note that the attribute manager intentionally does not do advanced\n   * change detection, but instead makes it easy to build such detection\n   * by offering the ability to \"invalidate\" each attribute separately.\n   */\n  id: string;\n  gl: WebGLRenderingContext;\n  attributes: Record<string, Attribute>;\n  updateTriggers: {[name: string]: string[]};\n  needsRedraw: string | boolean;\n  userData: any;\n\n  private stats?: Stats;\n  private attributeTransitionManager: AttributeTransitionManager;\n  private mergeBoundsMemoized: any = memoize(mergeBounds);\n\n  constructor(\n    gl: WebGLRenderingContext,\n    {\n      id = 'attribute-manager',\n      stats,\n      timeline\n    }: {\n      id?: string;\n      stats?: Stats;\n      timeline?: Timeline;\n    } = {}\n  ) {\n    this.id = id;\n    this.gl = gl;\n\n    this.attributes = {};\n\n    this.updateTriggers = {};\n    this.needsRedraw = true;\n\n    this.userData = {};\n    this.stats = stats;\n\n    this.attributeTransitionManager = new AttributeTransitionManager(gl, {\n      id: `${id}-transitions`,\n      timeline\n    });\n\n    // For debugging sanity, prevent uninitialized members\n    Object.seal(this);\n  }\n\n  finalize() {\n    for (const attributeName in this.attributes) {\n      this.attributes[attributeName].delete();\n    }\n    this.attributeTransitionManager.finalize();\n  }\n\n  // Returns the redraw flag, optionally clearing it.\n  // Redraw flag will be set if any attributes attributes changed since\n  // flag was last cleared.\n  //\n  // @param {String} [clearRedrawFlags=false] - whether to clear the flag\n  // @return {false|String} - reason a redraw is needed.\n  getNeedsRedraw(opts: {clearRedrawFlags?: boolean} = {clearRedrawFlags: false}): string | false {\n    const redraw = this.needsRedraw;\n    this.needsRedraw = this.needsRedraw && !opts.clearRedrawFlags;\n    return redraw && this.id;\n  }\n\n  // Sets the redraw flag.\n  // @param {Boolean} redraw=true\n  setNeedsRedraw() {\n    this.needsRedraw = true;\n  }\n\n  // Adds attributes\n  add(attributes: {[id: string]: AttributeOptions}) {\n    this._add(attributes);\n  }\n\n  // Adds attributes\n  addInstanced(attributes: {[id: string]: AttributeOptions}) {\n    this._add(attributes, {instanced: 1});\n  }\n\n  /**\n   * Removes attributes\n   * Takes an array of attribute names and delete them from\n   * the attribute map if they exists\n   *\n   * @example\n   * attributeManager.remove(['position']);\n   *\n   * @param {Object} attributeNameArray - attribute name array (see above)\n   */\n  remove(attributeNameArray: string[]) {\n    for (const name of attributeNameArray) {\n      if (this.attributes[name] !== undefined) {\n        this.attributes[name].delete();\n        delete this.attributes[name];\n      }\n    }\n  }\n\n  // Marks an attribute for update\n  invalidate(triggerName: string, dataRange?: {startRow?: number; endRow?: number}) {\n    const invalidatedAttributes = this._invalidateTrigger(triggerName, dataRange);\n    // For performance tuning\n    debug(TRACE_INVALIDATE, this, triggerName, invalidatedAttributes);\n  }\n\n  invalidateAll(dataRange?: {startRow?: number; endRow?: number}) {\n    for (const attributeName in this.attributes) {\n      this.attributes[attributeName].setNeedsUpdate(attributeName, dataRange);\n    }\n    // For performance tuning\n    debug(TRACE_INVALIDATE, this, 'all');\n  }\n\n  // Ensure all attribute buffers are updated from props or data.\n  // eslint-disable-next-line complexity\n  update({\n    data,\n    numInstances,\n    startIndices = null,\n    transitions,\n    props = {},\n    buffers = {},\n    context = {}\n  }: {\n    data: any;\n    numInstances: number;\n    startIndices?: NumericArray | null;\n    transitions: any;\n    props: any;\n    buffers: any;\n    context: any;\n  }) {\n    // keep track of whether some attributes are updated\n    let updated = false;\n\n    debug(TRACE_UPDATE_START, this);\n    if (this.stats) {\n      this.stats.get('Update Attributes').timeStart();\n    }\n\n    for (const attributeName in this.attributes) {\n      const attribute = this.attributes[attributeName];\n      const accessorName = attribute.settings.accessor;\n      attribute.startIndices = startIndices;\n      attribute.numInstances = numInstances;\n\n      if (props[attributeName]) {\n        log.removed(`props.${attributeName}`, `data.attributes.${attributeName}`)();\n      }\n\n      if (attribute.setExternalBuffer(buffers[attributeName])) {\n        // Step 1: try update attribute directly from external buffers\n      } else if (\n        attribute.setBinaryValue(\n          typeof accessorName === 'string' ? buffers[accessorName] : undefined,\n          data.startIndices\n        )\n      ) {\n        // Step 2: try set packed value from external typed array\n      } else if (\n        typeof accessorName === 'string' &&\n        !buffers[accessorName] &&\n        attribute.setConstantValue(props[accessorName])\n      ) {\n        // Step 3: try set constant value from props\n        // Note: if buffers[accessorName] is supplied, ignore props[accessorName]\n        // This may happen when setBinaryValue falls through to use the auto updater\n      } else if (attribute.needsUpdate()) {\n        // Step 4: update via updater callback\n        updated = true;\n        this._updateAttribute({\n          attribute,\n          numInstances,\n          data,\n          props,\n          context\n        });\n      }\n\n      this.needsRedraw = this.needsRedraw || attribute.needsRedraw();\n    }\n\n    if (updated) {\n      // Only initiate alloc/update (and logging) if actually needed\n      debug(TRACE_UPDATE_END, this, numInstances);\n    }\n\n    if (this.stats) {\n      this.stats.get('Update Attributes').timeEnd();\n    }\n\n    this.attributeTransitionManager.update({\n      attributes: this.attributes,\n      numInstances,\n      transitions\n    });\n  }\n\n  // Update attribute transition to the current timestamp\n  // Returns `true` if any transition is in progress\n  updateTransition() {\n    const {attributeTransitionManager} = this;\n    const transitionUpdated = attributeTransitionManager.run();\n    this.needsRedraw = this.needsRedraw || transitionUpdated;\n    return transitionUpdated;\n  }\n\n  /**\n   * Returns all attribute descriptors\n   * Note: Format matches luma.gl Model/Program.setAttributes()\n   * @return {Object} attributes - descriptors\n   */\n  getAttributes(): {[id: string]: Attribute} {\n    return this.attributes;\n  }\n\n  /**\n   * Computes the spatial bounds of a given set of attributes\n   */\n  getBounds(attributeNames: string[]) {\n    const bounds = attributeNames.map(attributeName => this.attributes[attributeName]?.getBounds());\n    return this.mergeBoundsMemoized(bounds);\n  }\n\n  /**\n   * Returns changed attribute descriptors\n   * This indicates which WebGLBuffers need to be updated\n   * @return {Object} attributes - descriptors\n   */\n  getChangedAttributes(opts: {clearChangedFlags?: boolean} = {clearChangedFlags: false}): {\n    [id: string]: Attribute;\n  } {\n    const {attributes, attributeTransitionManager} = this;\n\n    const changedAttributes = {...attributeTransitionManager.getAttributes()};\n\n    for (const attributeName in attributes) {\n      const attribute = attributes[attributeName];\n      if (attribute.needsRedraw(opts) && !attributeTransitionManager.hasAttribute(attributeName)) {\n        changedAttributes[attributeName] = attribute;\n      }\n    }\n\n    return changedAttributes;\n  }\n\n  // Returns shader attributes\n  getShaderAttributes(\n    attributes?: {[id: string]: Attribute},\n    excludeAttributes: Record<string, boolean> = {}\n  ): {[id: string]: IShaderAttribute} {\n    if (!attributes) {\n      attributes = this.getAttributes();\n    }\n    const shaderAttributes = {};\n    for (const attributeName in attributes) {\n      if (!excludeAttributes[attributeName]) {\n        Object.assign(shaderAttributes, attributes[attributeName].getShaderAttributes());\n      }\n    }\n    return shaderAttributes;\n  }\n\n  // PRIVATE METHODS\n\n  // Used to register an attribute\n  private _add(attributes: {[id: string]: AttributeOptions}, extraProps: any = {}) {\n    for (const attributeName in attributes) {\n      const attribute = attributes[attributeName];\n\n      // Initialize the attribute descriptor, with WebGL and metadata fields\n      this.attributes[attributeName] = this._createAttribute(attributeName, attribute, extraProps);\n    }\n\n    this._mapUpdateTriggersToAttributes();\n  }\n  /* eslint-enable max-statements */\n\n  private _createAttribute(name: string, attribute: AttributeOptions, extraProps: any) {\n    // For expected default values see:\n    // https://github.com/visgl/luma.gl/blob/1affe21352e289eeaccee2a876865138858a765c/modules/webgl/src/classes/accessor.js#L5-L13\n    // and https://deck.gl/docs/api-reference/core/attribute-manager#add\n    const props: AttributeOptions = {\n      ...attribute,\n      id: name,\n      size: (attribute.isIndexed && 1) || attribute.size || 1,\n      divisor: extraProps.instanced ? 1 : attribute.divisor || 0\n    };\n\n    return new Attribute(this.gl, props);\n  }\n\n  // build updateTrigger name to attribute name mapping\n  private _mapUpdateTriggersToAttributes() {\n    const triggers: {[name: string]: string[]} = {};\n\n    for (const attributeName in this.attributes) {\n      const attribute = this.attributes[attributeName];\n      attribute.getUpdateTriggers().forEach(triggerName => {\n        if (!triggers[triggerName]) {\n          triggers[triggerName] = [];\n        }\n        triggers[triggerName].push(attributeName);\n      });\n    }\n\n    this.updateTriggers = triggers;\n  }\n\n  private _invalidateTrigger(\n    triggerName: string,\n    dataRange?: {startRow?: number; endRow?: number}\n  ): string[] {\n    const {attributes, updateTriggers} = this;\n    const invalidatedAttributes = updateTriggers[triggerName];\n\n    if (invalidatedAttributes) {\n      invalidatedAttributes.forEach(name => {\n        const attribute = attributes[name];\n        if (attribute) {\n          attribute.setNeedsUpdate(attribute.id, dataRange);\n        }\n      });\n    }\n    return invalidatedAttributes;\n  }\n\n  private _updateAttribute(opts: {\n    attribute: Attribute;\n    numInstances: number;\n    data: any;\n    props: any;\n    context: any;\n  }) {\n    const {attribute, numInstances} = opts;\n    debug(TRACE_ATTRIBUTE_UPDATE_START, attribute);\n\n    if (attribute.constant) {\n      // The attribute is flagged as constant outside of an update cycle\n      // Skip allocation and updater call\n      attribute.setConstantValue(attribute.value as NumericArray);\n      return;\n    }\n\n    if (attribute.allocate(numInstances)) {\n      debug(TRACE_ATTRIBUTE_ALLOCATE, attribute, numInstances);\n    }\n\n    // Calls update on any buffers that need update\n    const updated = attribute.updateBuffer(opts);\n    if (updated) {\n      this.needsRedraw = true;\n      debug(TRACE_ATTRIBUTE_UPDATE_END, attribute, numInstances);\n    }\n  }\n}\n","/* eslint-disable max-statements, max-params, complexity, max-depth */\n// TODO merge with icon-layer/icon-manager\nimport {log} from '@deck.gl/core';\nimport type {NumericArray} from '@math.gl/core';\n\nconst MISSING_CHAR_WIDTH = 32;\nconst SINGLE_LINE = [];\n\nexport type Character = {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  layoutWidth: number;\n  layoutHeight: number;\n  layoutOffsetY?: number;\n};\n\nexport type CharacterMapping = Record<string, Character>;\n\nexport function nextPowOfTwo(number: number): number {\n  return Math.pow(2, Math.ceil(Math.log2(number)));\n}\n\n/**\n * Generate character mapping table or update from an existing mapping table\n */\nexport function buildMapping({\n  characterSet,\n  getFontWidth,\n  fontHeight,\n  buffer,\n  maxCanvasWidth,\n  mapping = {},\n  xOffset = 0,\n  yOffset = 0\n}: {\n  /** list of characters */\n  characterSet: Set<string>;\n  /** function to get width of each character */\n  getFontWidth: (char: string) => number;\n  /** height of font */\n  fontHeight: number;\n  /** bleeding buffer surround each character */\n  buffer: number;\n  /** max width of font atlas */\n  maxCanvasWidth: number;\n  /** cached mapping table */\n  mapping?: CharacterMapping;\n  /** x position of last character in the existing mapping table */\n  xOffset?: number;\n  /** y position of last character in the existing mapping table */\n  yOffset?: number;\n}): {\n  /** new mapping table */\n  mapping: CharacterMapping;\n  /** x position of last character in the new mapping table */\n  xOffset: number;\n  /** y position of last character in the new mapping table */\n  yOffset: number;\n  /** height of the font atlas canvas, power of 2 */\n  canvasHeight: number;\n} {\n  let row = 0;\n  // continue from x position of last character in the old mapping\n  let x = xOffset;\n  const rowHeight = fontHeight + buffer * 2;\n\n  for (const char of characterSet) {\n    if (!mapping[char]) {\n      // measure texts\n      // TODO - use Advanced text metrics when they are adopted:\n      // https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics\n      const width = getFontWidth(char);\n\n      if (x + width + buffer * 2 > maxCanvasWidth) {\n        x = 0;\n        row++;\n      }\n      mapping[char] = {\n        x: x + buffer,\n        y: yOffset + row * rowHeight + buffer,\n        width,\n        height: rowHeight,\n        layoutWidth: width,\n        layoutHeight: fontHeight\n      };\n      x += width + buffer * 2;\n    }\n  }\n\n  return {\n    mapping,\n    xOffset: x,\n    yOffset: yOffset + row * rowHeight,\n    canvasHeight: nextPowOfTwo(yOffset + (row + 1) * rowHeight)\n  };\n}\n\nfunction getTextWidth(\n  text: string[],\n  startIndex: number,\n  endIndex: number,\n  mapping: CharacterMapping\n): number {\n  let width = 0;\n  for (let i = startIndex; i < endIndex; i++) {\n    const character = text[i];\n    width += mapping[character]?.layoutWidth || 0;\n  }\n\n  return width;\n}\n\nfunction breakAll(\n  text: string[],\n  startIndex: number,\n  endIndex: number,\n  maxWidth: number,\n  iconMapping: CharacterMapping,\n  target: number[]\n): number {\n  let rowStartCharIndex = startIndex;\n  let rowOffsetLeft = 0;\n\n  for (let i = startIndex; i < endIndex; i++) {\n    // 2. figure out where to break lines\n    const textWidth = getTextWidth(text, i, i + 1, iconMapping);\n    if (rowOffsetLeft + textWidth > maxWidth) {\n      if (rowStartCharIndex < i) {\n        target.push(i);\n      }\n      rowStartCharIndex = i;\n      rowOffsetLeft = 0;\n    }\n    rowOffsetLeft += textWidth;\n  }\n\n  return rowOffsetLeft;\n}\n\nfunction breakWord(\n  text: string[],\n  startIndex: number,\n  endIndex: number,\n  maxWidth: number,\n  iconMapping: CharacterMapping,\n  target: number[]\n): number {\n  let rowStartCharIndex = startIndex;\n  let groupStartCharIndex = startIndex;\n  let groupEndCharIndex = startIndex;\n  let rowOffsetLeft = 0;\n\n  for (let i = startIndex; i < endIndex; i++) {\n    // 1. break text into word groups\n    //  - if current char is white space\n    //  - else if next char is white space\n    //  - else if reach last char\n    if (text[i] === ' ') {\n      groupEndCharIndex = i + 1;\n    } else if (text[i + 1] === ' ' || i + 1 === endIndex) {\n      groupEndCharIndex = i + 1;\n    }\n\n    if (groupEndCharIndex > groupStartCharIndex) {\n      // 2. break text into next row at maxWidth\n      let groupWidth = getTextWidth(text, groupStartCharIndex, groupEndCharIndex, iconMapping);\n      if (rowOffsetLeft + groupWidth > maxWidth) {\n        if (rowStartCharIndex < groupStartCharIndex) {\n          target.push(groupStartCharIndex);\n          rowStartCharIndex = groupStartCharIndex;\n          rowOffsetLeft = 0;\n        }\n\n        // if a single text group is bigger than maxWidth, then `break-all`\n        if (groupWidth > maxWidth) {\n          groupWidth = breakAll(\n            text,\n            groupStartCharIndex,\n            groupEndCharIndex,\n            maxWidth,\n            iconMapping,\n            target\n          );\n          // move reference to last row\n          rowStartCharIndex = target[target.length - 1];\n        }\n      }\n      groupStartCharIndex = groupEndCharIndex;\n      rowOffsetLeft += groupWidth;\n    }\n  }\n\n  return rowOffsetLeft;\n}\n\n/**\n * Wrap the given text so that each line does not exceed the given max width.\n * Returns a list of indices where line breaks should be inserted.\n */\nexport function autoWrapping(\n  text: string[],\n  wordBreak: 'break-all' | 'break-word',\n  maxWidth: number,\n  iconMapping: CharacterMapping,\n  startIndex: number = 0,\n  endIndex: number\n): number[] {\n  if (endIndex === undefined) {\n    endIndex = text.length;\n  }\n  const result = [];\n  if (wordBreak === 'break-all') {\n    breakAll(text, startIndex, endIndex, maxWidth, iconMapping, result);\n  } else {\n    breakWord(text, startIndex, endIndex, maxWidth, iconMapping, result);\n  }\n  return result;\n}\n\nfunction transformRow(\n  line: string[],\n  startIndex: number,\n  endIndex: number,\n  iconMapping: CharacterMapping,\n  leftOffsets: number[],\n  rowSize: [number, number]\n) {\n  let x = 0;\n  let rowHeight = 0;\n\n  for (let i = startIndex; i < endIndex; i++) {\n    const character = line[i];\n    const frame = iconMapping[character];\n    if (frame) {\n      if (!rowHeight) {\n        // frame.height should be a constant\n        rowHeight = frame.layoutHeight;\n      }\n      leftOffsets[i] = x + frame.layoutWidth / 2;\n      x += frame.layoutWidth;\n    } else {\n      log.warn(`Missing character: ${character} (${character.codePointAt(0)})`)();\n      leftOffsets[i] = x;\n      x += MISSING_CHAR_WIDTH;\n    }\n  }\n\n  rowSize[0] = x;\n  rowSize[1] = rowHeight;\n}\n\n/**\n * Transform a text paragraph to an array of characters, each character contains\n */\nexport function transformParagraph(\n  paragraph: string,\n  /** CSS line-height */\n  lineHeight: number,\n  /** CSS word-break option */\n  wordBreak: 'break-word' | 'break-all',\n  /** CSS max-width */\n  maxWidth: number,\n  /** character mapping table for retrieving a character from font atlas */\n  iconMapping: CharacterMapping\n): {\n  /** x position of each character */\n  x: number[];\n  /** y position of each character */\n  y: number[];\n  /** the current row width of each character */\n  rowWidth: number[];\n  /** the width and height of the paragraph */\n  size: [number, number];\n} {\n  // Break into an array of characters\n  // When dealing with double-length unicode characters, `str.length` or `str[i]` do not work\n  const characters = Array.from(paragraph);\n  const numCharacters = characters.length;\n  const x = new Array(numCharacters) as number[];\n  const y = new Array(numCharacters) as number[];\n  const rowWidth = new Array(numCharacters) as number[];\n  const autoWrappingEnabled =\n    (wordBreak === 'break-word' || wordBreak === 'break-all') && isFinite(maxWidth) && maxWidth > 0;\n\n  // maxWidth and height of the paragraph\n  const size: [number, number] = [0, 0];\n  const rowSize: [number, number] = [0, 0];\n  let rowOffsetTop = 0;\n  let lineStartIndex = 0;\n  let lineEndIndex = 0;\n\n  for (let i = 0; i <= numCharacters; i++) {\n    const char = characters[i];\n    if (char === '\\n' || i === numCharacters) {\n      lineEndIndex = i;\n    }\n\n    if (lineEndIndex > lineStartIndex) {\n      const rows = autoWrappingEnabled\n        ? autoWrapping(characters, wordBreak, maxWidth, iconMapping, lineStartIndex, lineEndIndex)\n        : SINGLE_LINE;\n\n      for (let rowIndex = 0; rowIndex <= rows.length; rowIndex++) {\n        const rowStart = rowIndex === 0 ? lineStartIndex : rows[rowIndex - 1];\n        const rowEnd = rowIndex < rows.length ? rows[rowIndex] : lineEndIndex;\n\n        transformRow(characters, rowStart, rowEnd, iconMapping, x, rowSize);\n        for (let j = rowStart; j < rowEnd; j++) {\n          const char = characters[j];\n          const layoutOffsetY = iconMapping[char]?.layoutOffsetY || 0;\n          y[j] = rowOffsetTop + rowSize[1] / 2 + layoutOffsetY;\n          rowWidth[j] = rowSize[0];\n        }\n\n        rowOffsetTop = rowOffsetTop + rowSize[1] * lineHeight;\n        size[0] = Math.max(size[0], rowSize[0]);\n      }\n      lineStartIndex = lineEndIndex;\n    }\n\n    if (char === '\\n') {\n      // Make sure result.length matches paragraph.length\n      x[lineStartIndex] = 0;\n      y[lineStartIndex] = 0;\n      rowWidth[lineStartIndex] = 0;\n      lineStartIndex++;\n    }\n  }\n\n  // last row\n  size[1] = rowOffsetTop;\n  return {x, y, rowWidth, size};\n}\n\nexport function getTextFromBuffer({\n  value,\n  length,\n  stride,\n  offset,\n  startIndices,\n  characterSet\n}: {\n  value: Uint8Array | Uint8ClampedArray | Uint16Array | Uint32Array;\n  length: number;\n  stride?: number;\n  offset?: number;\n  startIndices: NumericArray;\n  characterSet?: Set<string>;\n}): {\n  texts: string[];\n  characterCount: number;\n} {\n  const bytesPerElement = value.BYTES_PER_ELEMENT;\n  const elementStride = stride ? stride / bytesPerElement : 1;\n  const elementOffset = offset ? offset / bytesPerElement : 0;\n  const characterCount =\n    startIndices[length] || Math.ceil((value.length - elementOffset) / elementStride);\n  const autoCharacterSet = characterSet && new Set<number>();\n\n  const texts = new Array(length);\n\n  let codes = value;\n  if (elementStride > 1 || elementOffset > 0) {\n    const ArrayType = value.constructor as\n      | Uint8ArrayConstructor\n      | Uint8ClampedArrayConstructor\n      | Uint16ArrayConstructor\n      | Uint32ArrayConstructor;\n    codes = new ArrayType(characterCount);\n    for (let i = 0; i < characterCount; i++) {\n      codes[i] = value[i * elementStride + elementOffset];\n    }\n  }\n\n  for (let index = 0; index < length; index++) {\n    const startIndex = startIndices[index];\n    const endIndex = startIndices[index + 1] || characterCount;\n    const codesAtIndex = codes.subarray(startIndex, endIndex);\n    // @ts-ignore TS wants the argument to be number[] but typed array works too\n    texts[index] = String.fromCodePoint.apply(null, codesAtIndex);\n    if (autoCharacterSet) {\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      codesAtIndex.forEach(autoCharacterSet.add, autoCharacterSet);\n    }\n  }\n\n  if (autoCharacterSet) {\n    for (const charCode of autoCharacterSet) {\n      characterSet.add(String.fromCodePoint(charCode));\n    }\n  }\n\n  return {texts, characterCount};\n}\n","/**\n * LRU Cache class with limit\n *\n * Update order for each get/set operation\n * Delete oldest when reach given limit\n */\n\nexport default class LRUCache<ValueT> {\n  private limit: number;\n  private _cache: Record<string, ValueT> = {};\n  /** access/update order, first item is oldest, last item is newest */\n  private _order: string[] = [];\n\n  constructor(limit: number = 5) {\n    this.limit = limit;\n  }\n\n  get(key: string): ValueT {\n    const value = this._cache[key];\n    if (value) {\n      // update order\n      this._deleteOrder(key);\n      this._appendOrder(key);\n    }\n    return value;\n  }\n\n  set(key: string, value: ValueT): void {\n    if (!this._cache[key]) {\n      // if reach limit, delete the oldest\n      if (Object.keys(this._cache).length === this.limit) {\n        this.delete(this._order[0]);\n      }\n\n      this._cache[key] = value;\n      this._appendOrder(key);\n    } else {\n      // if found in cache, delete the old one, insert new one to the first of list\n      this.delete(key);\n\n      this._cache[key] = value;\n      this._appendOrder(key);\n    }\n  }\n\n  delete(key: string): void {\n    const value = this._cache[key];\n    if (value) {\n      delete this._cache[key];\n      this._deleteOrder(key);\n    }\n  }\n\n  private _deleteOrder(key: string): void {\n    const index = this._order.indexOf(key);\n    if (index >= 0) {\n      this._order.splice(index, 1);\n    }\n  }\n\n  private _appendOrder(key: string): void {\n    this._order.push(key);\n  }\n}\n","/* global document */\nimport TinySDF from '@mapbox/tiny-sdf';\n\nimport {log} from '@deck.gl/core';\n\nimport {buildMapping, CharacterMapping} from './utils';\nimport LRUCache from './lru-cache';\n\nimport type {Texture} from '@deck.gl/core';\n\nfunction getDefaultCharacterSet() {\n  const charSet: string[] = [];\n  for (let i = 32; i < 128; i++) {\n    charSet.push(String.fromCharCode(i));\n  }\n  return charSet;\n}\n\nexport type FontSettings = {\n  /** CSS font family\n   * @default 'Monaco, monospace'\n   */\n  fontFamily?: string;\n  /** CSS font weight\n   * @default 'normal'\n   */\n  fontWeight?: string | number;\n  /** Specifies a list of characters to include in the font.\n   * @default (ASCII characters 32-128)\n   */\n  characterSet?: Set<string> | string[] | string;\n  /** Font size in pixels. This option is only applied for generating `fontAtlas`, it does not impact the size of displayed text labels. Larger `fontSize` will give you a sharper look when rendering text labels with very large font sizes. But larger `fontSize` requires more time and space to generate the `fontAtlas`.\n   * @default 64\n   */\n  fontSize?: number;\n  /** Whitespace buffer around each side of the character. In general, bigger `fontSize` requires bigger `buffer`. Increase `buffer` will add more space between each character when layout `characterSet` in `fontAtlas`. This option could be tuned to provide sufficient space for drawing each character and avoiding overlapping of neighboring characters.\n   * @default 4\n   */\n  buffer?: number;\n  /** Flag to enable / disable `sdf`. [`sdf` (Signed Distance Fields)](http://cs.brown.edu/people/pfelzens/papers/dt-final.pdf) will provide a sharper look when rendering with very large or small font sizes. `TextLayer` integrates with [`TinySDF`](https://github.com/mapbox/tiny-sdf) which implements the `sdf` algorithm.\n   * @default false\n   */\n  sdf?: boolean;\n  /** How much of the radius (relative) is used for the inside part the glyph. Bigger `cutoff` makes character thinner. Smaller `cutoff` makes character look thicker. Only applies when `sdf: true`.\n   * @default 0.25\n   */\n  cutoff?: number;\n  /** How many pixels around the glyph shape to use for encoding distance. Bigger radius yields higher quality outcome. Only applies when `sdf: true`.\n   * @default 12\n   */\n  radius?: number;\n  /** How much smoothing to apply to the text edges. Only applies when `sdf: true`.\n   * @default 0.1\n   */\n  smoothing?: number;\n};\n\nexport const DEFAULT_FONT_SETTINGS: Required<FontSettings> = {\n  fontFamily: 'Monaco, monospace',\n  fontWeight: 'normal',\n  characterSet: getDefaultCharacterSet(),\n  fontSize: 64,\n  buffer: 4,\n  sdf: false,\n  cutoff: 0.25,\n  radius: 12,\n  smoothing: 0.1\n};\n\nconst MAX_CANVAS_WIDTH = 1024;\n\nconst BASELINE_SCALE = 0.9;\nconst HEIGHT_SCALE = 1.2;\n\n// only preserve latest three fontAtlas\nconst CACHE_LIMIT = 3;\n\ntype FontAtlas = {\n  /** x position of last character in mapping */\n  xOffset: number;\n  /** y position of last character in mapping */\n  yOffset: number;\n  /** bounding box of each character in the texture */\n  mapping: CharacterMapping;\n  /** packed texture */\n  data: HTMLCanvasElement;\n  /** texture width */\n  width: number;\n  /** texture height */\n  height: number;\n};\n\nlet cache = new LRUCache<FontAtlas>(CACHE_LIMIT);\n\n/**\n * get all the chars not in cache\n * @returns chars not in cache\n */\nfunction getNewChars(cacheKey: string, characterSet: Set<string> | string[] | string): Set<string> {\n  let newCharSet: Set<string>;\n  if (typeof characterSet === 'string') {\n    newCharSet = new Set(Array.from(characterSet));\n  } else {\n    newCharSet = new Set(characterSet);\n  }\n\n  const cachedFontAtlas = cache.get(cacheKey);\n  if (!cachedFontAtlas) {\n    return newCharSet;\n  }\n\n  for (const char in cachedFontAtlas.mapping) {\n    if (newCharSet.has(char)) {\n      newCharSet.delete(char);\n    }\n  }\n  return newCharSet;\n}\n\nfunction populateAlphaChannel(alphaChannel: Uint8ClampedArray, imageData: ImageData): void {\n  // populate distance value from tinySDF to image alpha channel\n  for (let i = 0; i < alphaChannel.length; i++) {\n    imageData.data[4 * i + 3] = alphaChannel[i];\n  }\n}\n\nfunction setTextStyle(\n  ctx: CanvasRenderingContext2D,\n  fontFamily: string,\n  fontSize: number,\n  fontWeight: string | number\n): void {\n  ctx.font = `${fontWeight} ${fontSize}px ${fontFamily}`;\n  ctx.fillStyle = '#000';\n  ctx.textBaseline = 'alphabetic';\n  ctx.textAlign = 'left';\n}\n\n/**\n * Sets the Font Atlas LRU Cache Limit\n * @param {number} limit LRU Cache limit\n */\nexport function setFontAtlasCacheLimit(limit: number): void {\n  log.assert(Number.isFinite(limit) && limit >= CACHE_LIMIT, 'Invalid cache limit');\n\n  cache = new LRUCache(limit);\n}\n\nexport default class FontAtlasManager {\n  /** Font settings */\n  props: Required<FontSettings> = {...DEFAULT_FONT_SETTINGS};\n\n  /** Cache key of the current font atlas */\n  private _key?: string;\n  /** The current font atlas */\n  private _atlas?: FontAtlas;\n\n  get texture(): Texture | undefined {\n    return this._atlas;\n  }\n\n  get mapping(): CharacterMapping | undefined {\n    return this._atlas && this._atlas.mapping;\n  }\n\n  get scale(): number {\n    const {fontSize, buffer} = this.props;\n    return (fontSize * HEIGHT_SCALE + buffer * 2) / fontSize;\n  }\n\n  setProps(props: FontSettings = {}) {\n    Object.assign(this.props, props);\n\n    // update cache key\n    this._key = this._getKey();\n\n    const charSet = getNewChars(this._key, this.props.characterSet);\n    const cachedFontAtlas = cache.get(this._key);\n\n    // if a fontAtlas associated with the new settings is cached and\n    // there are no new chars\n    if (cachedFontAtlas && charSet.size === 0) {\n      // update texture with cached fontAtlas\n      if (this._atlas !== cachedFontAtlas) {\n        this._atlas = cachedFontAtlas;\n      }\n      return;\n    }\n\n    // update fontAtlas with new settings\n    const fontAtlas = this._generateFontAtlas(charSet, cachedFontAtlas);\n    this._atlas = fontAtlas;\n\n    // update cache\n    cache.set(this._key, fontAtlas);\n  }\n\n  // eslint-disable-next-line max-statements\n  private _generateFontAtlas(characterSet: Set<string>, cachedFontAtlas?: FontAtlas): FontAtlas {\n    const {fontFamily, fontWeight, fontSize, buffer, sdf, radius, cutoff} = this.props;\n    let canvas = cachedFontAtlas && cachedFontAtlas.data;\n    if (!canvas) {\n      canvas = document.createElement('canvas');\n      canvas.width = MAX_CANVAS_WIDTH;\n    }\n    const ctx = canvas.getContext('2d', {willReadFrequently: true})!;\n\n    setTextStyle(ctx, fontFamily, fontSize, fontWeight);\n\n    // 1. build mapping\n    const {mapping, canvasHeight, xOffset, yOffset} = buildMapping({\n      getFontWidth: char => ctx.measureText(char).width,\n      fontHeight: fontSize * HEIGHT_SCALE,\n      buffer,\n      characterSet,\n      maxCanvasWidth: MAX_CANVAS_WIDTH,\n      ...(cachedFontAtlas && {\n        mapping: cachedFontAtlas.mapping,\n        xOffset: cachedFontAtlas.xOffset,\n        yOffset: cachedFontAtlas.yOffset\n      })\n    });\n\n    // 2. update canvas\n    // copy old canvas data to new canvas only when height changed\n    if (canvas.height !== canvasHeight) {\n      const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      canvas.height = canvasHeight;\n      ctx.putImageData(imageData, 0, 0);\n    }\n    setTextStyle(ctx, fontFamily, fontSize, fontWeight);\n\n    // 3. layout characters\n    if (sdf) {\n      const tinySDF = new TinySDF({\n        fontSize,\n        buffer,\n        radius,\n        cutoff,\n        fontFamily,\n        fontWeight: `${fontWeight}`\n      });\n\n      for (const char of characterSet) {\n        const {data, width, height, glyphTop} = tinySDF.draw(char);\n        mapping[char].width = width;\n        mapping[char].layoutOffsetY = fontSize * BASELINE_SCALE - glyphTop;\n\n        const imageData = ctx.createImageData(width, height);\n        populateAlphaChannel(data, imageData);\n        ctx.putImageData(imageData, mapping[char].x, mapping[char].y);\n      }\n    } else {\n      for (const char of characterSet) {\n        ctx.fillText(char, mapping[char].x, mapping[char].y + buffer + fontSize * BASELINE_SCALE);\n      }\n    }\n\n    return {\n      xOffset,\n      yOffset,\n      mapping,\n      data: canvas,\n      width: canvas.width,\n      height: canvas.height\n    };\n  }\n\n  private _getKey(): string {\n    const {fontFamily, fontWeight, fontSize, buffer, sdf, radius, cutoff} = this.props;\n    if (sdf) {\n      return `${fontFamily} ${fontWeight} ${fontSize} ${buffer} ${radius} ${cutoff}`;\n    }\n    return `${fontFamily} ${fontWeight} ${fontSize} ${buffer}`;\n  }\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {CompositeLayer, createIterable, log} from '@deck.gl/core';\nimport MultiIconLayer from './multi-icon-layer/multi-icon-layer';\nimport FontAtlasManager, {\n  DEFAULT_FONT_SETTINGS,\n  setFontAtlasCacheLimit\n} from './font-atlas-manager';\nimport {transformParagraph, getTextFromBuffer} from './utils';\n\nimport TextBackgroundLayer from './text-background-layer/text-background-layer';\n\nimport type {FontSettings} from './font-atlas-manager';\nimport type {\n  LayerProps,\n  LayerDataSource,\n  Accessor,\n  AccessorFunction,\n  AccessorContext,\n  Unit,\n  Position,\n  Color,\n  UpdateParameters,\n  GetPickingInfoParams,\n  PickingInfo,\n  DefaultProps\n} from '@deck.gl/core';\n\nconst TEXT_ANCHOR = {\n  start: 1,\n  middle: 0,\n  end: -1\n} as const;\n\nconst ALIGNMENT_BASELINE = {\n  top: 1,\n  center: 0,\n  bottom: -1\n} as const;\n\nconst DEFAULT_COLOR: [number, number, number, number] = [0, 0, 0, 255];\n\nconst DEFAULT_LINE_HEIGHT = 1.0;\n\ntype _TextLayerProps<DataT> = {\n  data: LayerDataSource<DataT>;\n  /** If `true`, the text always faces camera. Otherwise the text faces up (z).\n   * @default true\n   */\n  billboard?: boolean;\n  /**\n   * Text size multiplier.\n   * @default 1\n   */\n  sizeScale?: number;\n  /**\n   * The units of the size, one of `'meters'`, `'common'`, and `'pixels'`.\n   * @default 'pixels'\n   */\n  sizeUnits?: Unit;\n  /**\n   * The minimum size in pixels. When using non-pixel `sizeUnits`, this prop can be used to prevent the icon from getting too small when zoomed out.\n   * @default 0\n   */\n  sizeMinPixels?: number;\n  /**\n   * The maximum size in pixels. When using non-pixel `sizeUnits`, this prop can be used to prevent the icon from getting too big when zoomed in.\n   * @default Number.MAX_SAFE_INTEGER\n   */\n  sizeMaxPixels?: number;\n\n  /** Whether to render background for the text blocks.\n   * @default false\n   */\n  background?: boolean;\n  /** Background color accessor.\n   * @default [255, 255, 255, 255]\n   */\n  getBackgroundColor?: Accessor<DataT, Color>;\n  /** Border color accessor.\n   * @default [0, 0, 0, 255]\n   */\n  getBorderColor?: Accessor<DataT, Color>;\n  /** Border width accessor.\n   * @default 0\n   */\n  getBorderWidth?: Accessor<DataT, number>;\n  /**\n   * The padding of the background..\n   * If an array of 2 is supplied, it is interpreted as `[padding_x, padding_y]` in pixels.\n   * If an array of 4 is supplied, it is interpreted as `[padding_left, padding_top, padding_right, padding_bottom]` in pixels.\n   * @default [0, 0, 0, 0]\n   */\n  backgroundPadding?: [number, number] | [number, number, number, number];\n  /**\n   * Specifies a list of characters to include in the font. If set to 'auto', will be automatically generated from the data set.\n   * @default (ASCII characters 32-128)\n   */\n  characterSet?: FontSettings['characterSet'] | 'auto';\n  /** CSS font family\n   * @default 'Monaco, monospace'\n   */\n  fontFamily?: FontSettings['fontFamily'];\n  /** CSS font weight\n   * @default 'normal'\n   */\n  fontWeight?: FontSettings['fontWeight'];\n  /** A unitless number that will be multiplied with the current text size to set the line height.\n   * @default 'normal'\n   */\n  lineHeight?: number;\n  /**\n   * Width of outline around the text, relative to the text size. Only effective if `fontSettings.sdf` is `true`.\n   * @default 0\n   */\n  outlineWidth?: number;\n  /**\n   * Color of outline around the text, in `[r, g, b, [a]]`. Each channel is a number between 0-255 and `a` is 255 if not supplied.\n   * @default [0, 0, 0, 255]\n   */\n  outlineColor?: Color;\n  /**\n   * Advance options for fine tuning the appearance and performance of the generated shared `fontAtlas`.\n   */\n  fontSettings?: FontSettings;\n  /**\n   * Available options are `break-all` and `break-word`. A valid `maxWidth` has to be provided to use `wordBreak`.\n   * @default 'break-word'\n   */\n  wordBreak?: 'break-word' | 'break-all';\n  /**\n   * A unitless number that will be multiplied with the current text size to set the width limit of a string.\n   * If specified, when the text is longer than the width limit, it will be wrapped into multiple lines using\n   * the strategy of `wordBreak`.\n   * @default -1\n   */\n  maxWidth?: number;\n  /**\n   * Label text accessor\n   */\n  getText?: AccessorFunction<DataT, string>;\n  /**\n   * Anchor position accessor\n   */\n  getPosition?: Accessor<DataT, Position>;\n  /**\n   * Label color accessor\n   * @default [0, 0, 0, 255]\n   */\n  getColor?: Accessor<DataT, Color>;\n  /**\n   * Label size accessor\n   * @default 32\n   */\n  getSize?: Accessor<DataT, number>;\n  /**\n   * Label rotation accessor, in degrees\n   * @default 0\n   */\n  getAngle?: Accessor<DataT, number>;\n  /**\n   * Horizontal alignment accessor\n   * @default 'middle'\n   */\n  getTextAnchor?: Accessor<DataT, 'start' | 'middle' | 'end'>;\n  /**\n   * Vertical alignment accessor\n   * @default 'center'\n   */\n  getAlignmentBaseline?: Accessor<DataT, 'top' | 'center' | 'bottom'>;\n  /**\n   * Label offset from the anchor position, [x, y] in pixels\n   * @default [0, 0]\n   */\n  getPixelOffset?: Accessor<DataT, [number, number]>;\n  /**\n   * @deprecated Use `background` and `getBackgroundColor` instead\n   */\n  backgroundColor?: Color;\n};\n\nexport type TextLayerProps<DataT = any> = _TextLayerProps<DataT> & LayerProps;\n\nconst defaultProps: DefaultProps<TextLayerProps> = {\n  billboard: true,\n  sizeScale: 1,\n  sizeUnits: 'pixels',\n  sizeMinPixels: 0,\n  sizeMaxPixels: Number.MAX_SAFE_INTEGER,\n\n  background: false,\n  getBackgroundColor: {type: 'accessor', value: [255, 255, 255, 255]},\n  getBorderColor: {type: 'accessor', value: DEFAULT_COLOR},\n  getBorderWidth: {type: 'accessor', value: 0},\n  backgroundPadding: {type: 'array', value: [0, 0, 0, 0]},\n\n  characterSet: {type: 'object', value: DEFAULT_FONT_SETTINGS.characterSet},\n  fontFamily: DEFAULT_FONT_SETTINGS.fontFamily,\n  fontWeight: DEFAULT_FONT_SETTINGS.fontWeight,\n  lineHeight: DEFAULT_LINE_HEIGHT,\n  outlineWidth: {type: 'number', value: 0, min: 0},\n  outlineColor: {type: 'color', value: DEFAULT_COLOR},\n  fontSettings: {type: 'object', value: {}, compare: 1},\n\n  // auto wrapping options\n  wordBreak: 'break-word',\n  maxWidth: {type: 'number', value: -1},\n\n  getText: {type: 'accessor', value: x => x.text},\n  getPosition: {type: 'accessor', value: x => x.position},\n  getColor: {type: 'accessor', value: DEFAULT_COLOR},\n  getSize: {type: 'accessor', value: 32},\n  getAngle: {type: 'accessor', value: 0},\n  getTextAnchor: {type: 'accessor', value: 'middle'},\n  getAlignmentBaseline: {type: 'accessor', value: 'center'},\n  getPixelOffset: {type: 'accessor', value: [0, 0]},\n\n  // deprecated\n  backgroundColor: {deprecatedFor: ['background', 'getBackgroundColor']}\n};\n\n/** Render text labels at given coordinates. */\nexport default class TextLayer<DataT = any, ExtraPropsT extends {} = {}> extends CompositeLayer<\n  ExtraPropsT & Required<_TextLayerProps<DataT>>\n> {\n  static defaultProps = defaultProps;\n  static layerName = 'TextLayer';\n\n  state!: {\n    styleVersion: number;\n    fontAtlasManager: FontAtlasManager;\n    characterSet?: Set<string>;\n    startIndices?: number[];\n    numInstances?: number;\n    getText?: AccessorFunction<DataT, string>;\n  };\n\n  initializeState() {\n    this.state = {\n      styleVersion: 0,\n      fontAtlasManager: new FontAtlasManager()\n    };\n\n    // Breaking change in v8.9\n    if (this.props.maxWidth > 0) {\n      log.warn('v8.9 breaking change: TextLayer maxWidth is now relative to text size')();\n    }\n  }\n\n  // eslint-disable-next-line complexity\n  updateState(params: UpdateParameters<this>) {\n    const {props, oldProps, changeFlags} = params;\n    const textChanged =\n      changeFlags.dataChanged ||\n      (changeFlags.updateTriggersChanged &&\n        (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getText));\n\n    if (textChanged) {\n      this._updateText();\n    }\n\n    const fontChanged = this._updateFontAtlas();\n\n    const styleChanged =\n      fontChanged ||\n      props.lineHeight !== oldProps.lineHeight ||\n      props.wordBreak !== oldProps.wordBreak ||\n      props.maxWidth !== oldProps.maxWidth;\n\n    if (styleChanged) {\n      this.setState({\n        styleVersion: this.state.styleVersion + 1\n      });\n    }\n  }\n\n  getPickingInfo({info}: GetPickingInfoParams): PickingInfo {\n    // because `TextLayer` assign the same pickingInfoIndex for one text label,\n    // here info.index refers the index of text label in props.data\n    info.object = info.index >= 0 ? this.props.data[info.index] : null;\n    return info;\n  }\n\n  /** Returns true if font has changed */\n  private _updateFontAtlas(): boolean {\n    const {fontSettings, fontFamily, fontWeight} = this.props;\n    const {fontAtlasManager, characterSet} = this.state;\n\n    const fontProps = {\n      ...fontSettings,\n      characterSet,\n      fontFamily,\n      fontWeight\n    };\n\n    if (!fontAtlasManager.mapping) {\n      // This is the first update\n      fontAtlasManager.setProps(fontProps);\n      return true;\n    }\n\n    for (const key in fontProps) {\n      if (fontProps[key] !== fontAtlasManager.props[key]) {\n        fontAtlasManager.setProps(fontProps);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  // Text strings are variable width objects\n  // Count characters and start offsets\n  private _updateText() {\n    const {data, characterSet} = this.props;\n    const textBuffer = (data as any).attributes?.getText;\n    let {getText} = this.props;\n    let startIndices: number[] = (data as any).startIndices;\n    let numInstances: number;\n\n    const autoCharacterSet = characterSet === 'auto' && new Set();\n\n    if (textBuffer && startIndices) {\n      const {texts, characterCount} = getTextFromBuffer({\n        ...(ArrayBuffer.isView(textBuffer) ? {value: textBuffer} : textBuffer),\n        // @ts-ignore if data.attribute is defined then length is expected\n        length: data.length,\n        startIndices,\n        characterSet: autoCharacterSet\n      });\n      numInstances = characterCount;\n      getText = (_, {index}) => texts[index];\n    } else {\n      const {iterable, objectInfo} = createIterable(data);\n      startIndices = [0];\n      numInstances = 0;\n\n      for (const object of iterable) {\n        objectInfo.index++;\n        // Break into an array of characters\n        // When dealing with double-length unicode characters, `str.length` or `str[i]` do not work\n        const text = Array.from(getText(object, objectInfo) || '');\n        if (autoCharacterSet) {\n          // eslint-disable-next-line @typescript-eslint/unbound-method\n          text.forEach(autoCharacterSet.add, autoCharacterSet);\n        }\n        numInstances += text.length;\n        startIndices.push(numInstances);\n      }\n    }\n\n    this.setState({\n      getText,\n      startIndices,\n      numInstances,\n      characterSet: autoCharacterSet || characterSet\n    });\n  }\n\n  /** There are two size systems in this layer:\n\n    + Pixel size: user-specified text size, via getSize, sizeScale, sizeUnits etc.\n      The layer roughly matches the output of the layer to CSS pixels, e.g. getSize: 12, sizeScale: 2\n      in layer props is roughly equivalent to font-size: 24px in CSS.\n    + Texture size: internally, character positions in a text blob are calculated using the sizes of iconMapping,\n      which depends on how large each character is drawn into the font atlas. This is controlled by\n      fontSettings.fontSize (default 64) and most users do not set it manually.\n      These numbers are intended to be used in the vertex shader and never to be exposed to the end user.\n\n    All surfaces exposed to the user should either use the pixel size or a multiplier relative to the pixel size. */\n\n  /** Calculate the size and position of each character in a text string.\n   * Values are in texture size */\n  private transformParagraph(\n    object: DataT,\n    objectInfo: AccessorContext<DataT>\n  ): ReturnType<typeof transformParagraph> {\n    const {fontAtlasManager} = this.state;\n    const iconMapping = fontAtlasManager.mapping!;\n    const getText = this.state.getText!;\n    const {wordBreak, lineHeight, maxWidth} = this.props;\n\n    const paragraph = getText(object, objectInfo) || '';\n    return transformParagraph(\n      paragraph,\n      lineHeight,\n      wordBreak,\n      maxWidth * fontAtlasManager.props.fontSize,\n      iconMapping\n    );\n  }\n\n  /** Returns the x, y, width, height of each text string, relative to pixel size.\n   * Used to render the background.\n   */\n  private getBoundingRect: AccessorFunction<DataT, [number, number, number, number]> = (\n    object,\n    objectInfo\n  ) => {\n    let {\n      size: [width, height]\n    } = this.transformParagraph(object, objectInfo);\n    const {fontSize} = this.state.fontAtlasManager.props;\n    width /= fontSize;\n    height /= fontSize;\n\n    const {getTextAnchor, getAlignmentBaseline} = this.props;\n    const anchorX =\n      TEXT_ANCHOR[\n        typeof getTextAnchor === 'function' ? getTextAnchor(object, objectInfo) : getTextAnchor\n      ];\n    const anchorY =\n      ALIGNMENT_BASELINE[\n        typeof getAlignmentBaseline === 'function'\n          ? getAlignmentBaseline(object, objectInfo)\n          : getAlignmentBaseline\n      ];\n\n    return [((anchorX - 1) * width) / 2, ((anchorY - 1) * height) / 2, width, height];\n  };\n\n  /** Returns the x, y offsets of each character in a text string, in texture size.\n   * Used to layout characters in the vertex shader.\n   */\n  private getIconOffsets: AccessorFunction<DataT, number[]> = (object, objectInfo) => {\n    const {getTextAnchor, getAlignmentBaseline} = this.props;\n\n    const {\n      x,\n      y,\n      rowWidth,\n      size: [width, height]\n    } = this.transformParagraph(object, objectInfo);\n    const anchorX =\n      TEXT_ANCHOR[\n        typeof getTextAnchor === 'function' ? getTextAnchor(object, objectInfo) : getTextAnchor\n      ];\n    const anchorY =\n      ALIGNMENT_BASELINE[\n        typeof getAlignmentBaseline === 'function'\n          ? getAlignmentBaseline(object, objectInfo)\n          : getAlignmentBaseline\n      ];\n\n    const numCharacters = x.length;\n    const offsets = new Array(numCharacters * 2);\n    let index = 0;\n\n    for (let i = 0; i < numCharacters; i++) {\n      // For a multi-line object, offset in x-direction needs consider\n      // the row offset in the paragraph and the object offset in the row\n      const rowOffset = ((1 - anchorX) * (width - rowWidth[i])) / 2;\n      offsets[index++] = ((anchorX - 1) * width) / 2 + rowOffset + x[i];\n      offsets[index++] = ((anchorY - 1) * height) / 2 + y[i];\n    }\n    return offsets;\n  };\n\n  renderLayers() {\n    const {\n      startIndices,\n      numInstances,\n      getText,\n      fontAtlasManager: {scale, texture, mapping},\n      styleVersion\n    } = this.state;\n\n    const {\n      data,\n      _dataDiff,\n      getPosition,\n      getColor,\n      getSize,\n      getAngle,\n      getPixelOffset,\n      getBackgroundColor,\n      getBorderColor,\n      getBorderWidth,\n      backgroundPadding,\n      background,\n      billboard,\n      fontSettings,\n      outlineWidth,\n      outlineColor,\n      sizeScale,\n      sizeUnits,\n      sizeMinPixels,\n      sizeMaxPixels,\n      transitions,\n      updateTriggers\n    } = this.props;\n\n    const CharactersLayerClass = this.getSubLayerClass('characters', MultiIconLayer);\n    const BackgroundLayerClass = this.getSubLayerClass('background', TextBackgroundLayer);\n\n    return [\n      background &&\n        new BackgroundLayerClass(\n          {\n            // background props\n            getFillColor: getBackgroundColor,\n            getLineColor: getBorderColor,\n            getLineWidth: getBorderWidth,\n            padding: backgroundPadding,\n\n            // props shared with characters layer\n            getPosition,\n            getSize,\n            getAngle,\n            getPixelOffset,\n            billboard,\n            sizeScale,\n            sizeUnits,\n            sizeMinPixels,\n            sizeMaxPixels,\n\n            transitions: transitions && {\n              getPosition: transitions.getPosition,\n              getAngle: transitions.getAngle,\n              getSize: transitions.getSize,\n              getFillColor: transitions.getBackgroundColor,\n              getLineColor: transitions.getBorderColor,\n              getLineWidth: transitions.getBorderWidth,\n              getPixelOffset: transitions.getPixelOffset\n            }\n          },\n          this.getSubLayerProps({\n            id: 'background',\n            updateTriggers: {\n              getPosition: updateTriggers.getPosition,\n              getAngle: updateTriggers.getAngle,\n              getSize: updateTriggers.getSize,\n              getFillColor: updateTriggers.getBackgroundColor,\n              getLineColor: updateTriggers.getBorderColor,\n              getLineWidth: updateTriggers.getBorderWidth,\n              getPixelOffset: updateTriggers.getPixelOffset,\n              getBoundingRect: {\n                getText: updateTriggers.getText,\n                getTextAnchor: updateTriggers.getTextAnchor,\n                getAlignmentBaseline: updateTriggers.getAlignmentBaseline,\n                styleVersion\n              }\n            }\n          }),\n          {\n            data:\n              // @ts-ignore (2339) attribute is not defined on all data types\n              data.attributes && data.attributes.background\n                ? // @ts-ignore (2339) attribute is not defined on all data types\n                  {length: data.length, attributes: data.attributes.background}\n                : data,\n            _dataDiff,\n            // Maintain the same background behavior as <=8.3. Remove in v9?\n            autoHighlight: false,\n            getBoundingRect: this.getBoundingRect\n          }\n        ),\n      new CharactersLayerClass(\n        {\n          sdf: fontSettings.sdf,\n          smoothing: Number.isFinite(fontSettings.smoothing)\n            ? fontSettings.smoothing\n            : DEFAULT_FONT_SETTINGS.smoothing,\n          outlineWidth: outlineWidth / (fontSettings.radius || DEFAULT_FONT_SETTINGS.radius),\n          outlineColor,\n          iconAtlas: texture,\n          iconMapping: mapping,\n\n          getPosition,\n          getColor,\n          getSize,\n          getAngle,\n          getPixelOffset,\n\n          billboard,\n          sizeScale: sizeScale * scale,\n          sizeUnits,\n          sizeMinPixels: sizeMinPixels * scale,\n          sizeMaxPixels: sizeMaxPixels * scale,\n\n          transitions: transitions && {\n            getPosition: transitions.getPosition,\n            getAngle: transitions.getAngle,\n            getColor: transitions.getColor,\n            getSize: transitions.getSize,\n            getPixelOffset: transitions.getPixelOffset\n          }\n        },\n        this.getSubLayerProps({\n          id: 'characters',\n          updateTriggers: {\n            all: updateTriggers.getText,\n            getPosition: updateTriggers.getPosition,\n            getAngle: updateTriggers.getAngle,\n            getColor: updateTriggers.getColor,\n            getSize: updateTriggers.getSize,\n            getPixelOffset: updateTriggers.getPixelOffset,\n            getIconOffsets: {\n              getTextAnchor: updateTriggers.getTextAnchor,\n              getAlignmentBaseline: updateTriggers.getAlignmentBaseline,\n              styleVersion\n            }\n          }\n        }),\n        {\n          data,\n          _dataDiff,\n          startIndices,\n          numInstances,\n          getIconOffsets: this.getIconOffsets,\n          getIcon: getText\n        }\n      )\n    ];\n  }\n\n  static set fontAtlasCacheLimit(limit: number) {\n    setFontAtlasCacheLimit(limit);\n  }\n}\n","import {load} from '@loaders.gl/core';\n\nimport type {ResourceManagerContext} from './resource-manager';\n\nexport type ResourceSubscriber<T = any> = {\n  onChange: (data: T | Promise<T>) => void;\n};\n\nexport default class Resource<T = any> {\n  id: string;\n  context: ResourceManagerContext;\n  isLoaded!: boolean;\n  persistent?: boolean;\n\n  private _loadCount: number = 0;\n  private _subscribers = new Set<ResourceSubscriber<T>>();\n  private _data!: T | Promise<T> | string;\n  private _loader?: Promise<void>;\n  private _error?: Error;\n  private _content?: T;\n\n  constructor(id: string, data: T | Promise<T> | string, context: ResourceManagerContext) {\n    this.id = id;\n    this.context = context;\n\n    this.setData(data);\n  }\n\n  // consumer: {onChange: Function}\n  subscribe(consumer: ResourceSubscriber<T>): void {\n    this._subscribers.add(consumer);\n  }\n\n  unsubscribe(consumer: ResourceSubscriber<T>): void {\n    this._subscribers.delete(consumer);\n  }\n\n  inUse(): boolean {\n    return this._subscribers.size > 0;\n  }\n\n  delete(): void {\n    // Remove any resources created\n  }\n\n  getData(): T | Promise<T> {\n    return this.isLoaded\n      ? this._error\n        ? Promise.reject(this._error)\n        : this._content!\n      : this._loader!.then(() => this.getData());\n  }\n\n  setData(data: any, forceUpdate?: boolean) {\n    if (data === this._data && !forceUpdate) {\n      return;\n    }\n    this._data = data;\n    const loadCount = ++this._loadCount;\n\n    let loader = data;\n    if (typeof data === 'string') {\n      loader = load(data);\n    }\n    if (loader instanceof Promise) {\n      this.isLoaded = false;\n      this._loader = loader\n        .then(result => {\n          // check if source has changed\n          if (this._loadCount === loadCount) {\n            this.isLoaded = true;\n            this._error = undefined;\n            this._content = result;\n          }\n        })\n        .catch(error => {\n          if (this._loadCount === loadCount) {\n            this.isLoaded = true;\n            this._error = error || true;\n          }\n        });\n    } else {\n      this.isLoaded = true;\n      this._error = undefined;\n      this._content = data;\n    }\n\n    for (const subscriber of this._subscribers) {\n      subscriber.onChange(this.getData());\n    }\n  }\n}\n","/* global setTimeout */\nimport Resource from './resource';\nimport type {ResourceSubscriber} from './resource';\n\nexport type ResourceManagerContext = {\n  gl: WebGLRenderingContext;\n  resourceManager: ResourceManager;\n};\n\nexport default class ResourceManager {\n  protocol: string;\n\n  private _context: ResourceManagerContext;\n  private _resources: Record<string, Resource>;\n  private _consumers: Record<\n    string,\n    Record<\n      string,\n      ResourceSubscriber & {\n        resourceId: string;\n      }\n    >\n  >;\n  private _pruneRequest: number | null;\n\n  constructor({gl, protocol}) {\n    this.protocol = protocol || 'resource://';\n\n    this._context = {\n      gl,\n      resourceManager: this\n    };\n    this._resources = {};\n    this._consumers = {};\n\n    this._pruneRequest = null;\n  }\n\n  contains(resourceId: string): boolean {\n    if (resourceId.startsWith(this.protocol)) {\n      return true;\n    }\n    return resourceId in this._resources;\n  }\n\n  add({\n    resourceId,\n    data,\n    forceUpdate = false,\n    persistent = true\n  }: {\n    resourceId: string;\n    data: any;\n    forceUpdate?: boolean;\n    persistent?: boolean;\n  }) {\n    let res = this._resources[resourceId];\n\n    if (res) {\n      res.setData(data, forceUpdate);\n    } else {\n      res = new Resource(resourceId, data, this._context);\n      this._resources[resourceId] = res;\n    }\n    // persistent resources can only be removed by calling `remove`\n    // non-persistent resources may be released when there are no more consumers\n    res.persistent = persistent;\n  }\n\n  remove(resourceId: string): void {\n    const res = this._resources[resourceId];\n\n    if (res) {\n      res.delete();\n      delete this._resources[resourceId];\n    }\n  }\n\n  unsubscribe({consumerId}: {consumerId: string}): void {\n    const consumer = this._consumers[consumerId];\n    if (consumer) {\n      for (const requestId in consumer) {\n        const request = consumer[requestId];\n        const resource = this._resources[request.resourceId];\n        if (resource) {\n          resource.unsubscribe(request);\n        }\n      }\n      delete this._consumers[consumerId];\n      this.prune();\n    }\n  }\n\n  subscribe<T>({\n    resourceId,\n    onChange,\n    consumerId,\n    requestId = 'default'\n  }: {\n    resourceId: string;\n    onChange: (data: T | Promise<T>) => void;\n    consumerId: string;\n    requestId: string;\n  }): T | Promise<T> | undefined {\n    const {_resources: resources, protocol} = this;\n    if (resourceId.startsWith(protocol)) {\n      resourceId = resourceId.replace(protocol, '');\n      if (!resources[resourceId]) {\n        // Add placeholder. When this resource becomes available, the consumer will be notified.\n        this.add({resourceId, data: null, persistent: false});\n      }\n    }\n    const res: Resource<T> = resources[resourceId];\n    this._track(consumerId, requestId, res, onChange);\n    if (res) {\n      return res.getData();\n    }\n\n    return undefined;\n  }\n\n  prune(): void {\n    if (!this._pruneRequest) {\n      // prune() may be called multiple times in the same animation frame.\n      // Batch multiple requests together\n      // @ts-ignore setTimeout returns NodeJS.Timeout in node\n      this._pruneRequest = setTimeout(() => this._prune(), 0);\n    }\n  }\n\n  finalize(): void {\n    for (const key in this._resources) {\n      this._resources[key].delete();\n    }\n  }\n\n  private _track(\n    consumerId: string,\n    requestId: string,\n    resource: Resource,\n    onChange: (data: any) => void\n  ) {\n    const consumers = this._consumers;\n    const consumer = (consumers[consumerId] = consumers[consumerId] || {});\n    const request = consumer[requestId] || {};\n\n    const oldResource = request.resourceId && this._resources[request.resourceId];\n    if (oldResource) {\n      oldResource.unsubscribe(request);\n      this.prune();\n    }\n    if (resource) {\n      consumer[requestId] = request;\n      request.onChange = onChange;\n      request.resourceId = resource.id;\n      resource.subscribe(request);\n    }\n  }\n\n  private _prune(): void {\n    this._pruneRequest = null;\n\n    for (const key of Object.keys(this._resources)) {\n      const res = this._resources[key];\n      if (!res.persistent && !res.inUse()) {\n        res.delete();\n        delete this._resources[key];\n      }\n    }\n  }\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {Timeline} from '@luma.gl/core';\nimport {LIFECYCLE} from '../lifecycle/constants';\nimport log from '../utils/log';\nimport debug from '../debug';\nimport {flatten} from '../utils/flatten';\nimport {Stats} from '@probe.gl/stats';\nimport ResourceManager from './resource/resource-manager';\n\nimport Viewport from '../viewports/viewport';\nimport {createProgramManager} from '../shaderlib';\n\nimport type Layer from './layer';\nimport type CompositeLayer from './composite-layer';\nimport type Deck from './deck';\nimport type {ProgramManager} from '@luma.gl/engine';\n\nconst TRACE_SET_LAYERS = 'layerManager.setLayers';\nconst TRACE_ACTIVATE_VIEWPORT = 'layerManager.activateViewport';\n\nexport type LayerContext = {\n  layerManager: LayerManager;\n  resourceManager: ResourceManager;\n  deck?: Deck;\n  gl: WebGLRenderingContext;\n  programManager: ProgramManager;\n  stats: Stats;\n  viewport: Viewport;\n  timeline: Timeline;\n  mousePosition: {x: number; y: number} | null;\n  userData: any;\n  onError?: <PropsT>(error: Error, source: Layer<PropsT>) => void;\n};\n\nexport type LayersList = (Layer | undefined | false | null | LayersList)[];\n\nexport default class LayerManager {\n  layers: Layer[];\n  context: LayerContext;\n  resourceManager: ResourceManager;\n\n  private _lastRenderedLayers: LayersList = [];\n  private _needsRedraw: string | false = false;\n  private _needsUpdate: string | false = false;\n  private _nextLayers: LayersList | null = null;\n  private _debug: boolean = false;\n\n  // eslint-disable-next-line\n  constructor(\n    gl,\n    {\n      deck,\n      stats,\n      viewport,\n      timeline\n    }: {\n      deck?: Deck;\n      stats?: Stats;\n      viewport?: Viewport;\n      timeline?: Timeline;\n    } = {}\n  ) {\n    // Currently deck.gl expects the DeckGL.layers array to be different\n    // whenever React rerenders. If the same layers array is used, the\n    // LayerManager's diffing algorithm will generate a fatal error and\n    // break the rendering.\n\n    // `this._lastRenderedLayers` stores the UNFILTERED layers sent\n    // down to LayerManager, so that `layers` reference can be compared.\n    // If it's the same across two React render calls, the diffing logic\n    // will be skipped.\n    this.layers = [];\n    this.resourceManager = new ResourceManager({gl, protocol: 'deck://'});\n\n    this.context = {\n      mousePosition: null,\n      userData: {},\n      layerManager: this,\n      gl,\n      deck,\n      // Enabling luma.gl Program caching using private API (_cachePrograms)\n      programManager: gl && createProgramManager(gl),\n      stats: stats || new Stats({id: 'deck.gl'}),\n      // Make sure context.viewport is not empty on the first layer initialization\n      viewport: viewport || new Viewport({id: 'DEFAULT-INITIAL-VIEWPORT'}), // Current viewport, exposed to layers for project* function\n      timeline: timeline || new Timeline(),\n      resourceManager: this.resourceManager,\n      onError: undefined\n    };\n\n    Object.seal(this);\n  }\n\n  /** Method to call when the layer manager is not needed anymore. */\n  finalize() {\n    this.resourceManager.finalize();\n    // Finalize all layers\n    for (const layer of this.layers) {\n      this._finalizeLayer(layer);\n    }\n  }\n\n  /** Check if a redraw is needed */\n  needsRedraw(\n    opts: {\n      /** Reset redraw flags to false after the call */\n      clearRedrawFlags: boolean;\n    } = {clearRedrawFlags: false}\n  ): string | false {\n    let redraw = this._needsRedraw;\n    if (opts.clearRedrawFlags) {\n      this._needsRedraw = false;\n    }\n\n    // This layers list doesn't include sublayers, relying on composite layers\n    for (const layer of this.layers) {\n      // Call every layer to clear their flags\n      const layerNeedsRedraw = layer.getNeedsRedraw(opts);\n      redraw = redraw || layerNeedsRedraw;\n    }\n\n    return redraw;\n  }\n\n  /** Check if a deep update of all layers is needed */\n  needsUpdate(): string | false {\n    if (this._nextLayers && this._nextLayers !== this._lastRenderedLayers) {\n      // New layers array may be the same as the old one if `setProps` is called by React\n      return 'layers changed';\n    }\n    return this._needsUpdate;\n  }\n\n  /** Layers will be redrawn (in next animation frame) */\n  setNeedsRedraw(reason: string): void {\n    this._needsRedraw = this._needsRedraw || reason;\n  }\n\n  /** Layers will be updated deeply (in next animation frame)\n    Potentially regenerating attributes and sub layers */\n  setNeedsUpdate(reason: string): void {\n    this._needsUpdate = this._needsUpdate || reason;\n  }\n\n  /** Gets a list of currently rendered layers. Optionally filter by id. */\n  getLayers({layerIds}: {layerIds?: string[]} = {}): Layer[] {\n    // Filtering by layerId compares beginning of strings, so that sublayers will be included\n    // Dependes on the convention of adding suffixes to the parent's layer name\n    return layerIds\n      ? this.layers.filter(layer => layerIds.find(layerId => layer.id.indexOf(layerId) === 0))\n      : this.layers;\n  }\n\n  /** Set props needed for layer rendering and picking. */\n  setProps(props: any): void {\n    if ('debug' in props) {\n      this._debug = props.debug;\n    }\n\n    // A way for apps to add data to context that can be accessed in layers\n    if ('userData' in props) {\n      this.context.userData = props.userData;\n    }\n\n    // New layers will be processed in `updateLayers` in the next update cycle\n    if ('layers' in props) {\n      this._nextLayers = props.layers;\n    }\n\n    if ('onError' in props) {\n      this.context.onError = props.onError;\n    }\n  }\n\n  /** Supply a new layer list, initiating sublayer generation and layer matching */\n  setLayers(newLayers: LayersList, reason?: string): void {\n    debug(TRACE_SET_LAYERS, this, reason, newLayers);\n\n    this._lastRenderedLayers = newLayers;\n\n    const flatLayers = flatten(newLayers, Boolean) as Layer[];\n\n    for (const layer of flatLayers) {\n      layer.context = this.context;\n    }\n\n    this._updateLayers(this.layers, flatLayers);\n  }\n\n  /** Update layers from last cycle if `setNeedsUpdate()` has been called */\n  updateLayers(): void {\n    // NOTE: For now, even if only some layer has changed, we update all layers\n    // to ensure that layer id maps etc remain consistent even if different\n    // sublayers are rendered\n    const reason = this.needsUpdate();\n    if (reason) {\n      this.setNeedsRedraw(`updating layers: ${reason}`);\n      // Force a full update\n      this.setLayers(this._nextLayers || this._lastRenderedLayers, reason);\n    }\n    // Updated, clear the backlog\n    this._nextLayers = null;\n  }\n\n  //\n  // INTERNAL METHODS\n  //\n\n  /** Make a viewport \"current\" in layer context, updating viewportChanged flags */\n  activateViewport = (viewport: Viewport) => {\n    debug(TRACE_ACTIVATE_VIEWPORT, this, viewport);\n    if (viewport) {\n      this.context.viewport = viewport;\n    }\n  };\n\n  private _handleError(stage: string, error: Error, layer: Layer) {\n    layer.raiseError(error, `${stage} of ${layer}`);\n  }\n\n  // TODO - mark layers with exceptions as bad and remove from rendering cycle?\n  /** Match all layers, checking for caught errors\n    to avoid having an exception in one layer disrupt other layers */\n  private _updateLayers(oldLayers: Layer[], newLayers: Layer[]): void {\n    // Create old layer map\n    const oldLayerMap: {[layerId: string]: Layer | null} = {};\n    for (const oldLayer of oldLayers) {\n      if (oldLayerMap[oldLayer.id]) {\n        log.warn(`Multiple old layers with same id ${oldLayer.id}`)();\n      } else {\n        oldLayerMap[oldLayer.id] = oldLayer;\n      }\n    }\n\n    // Allocate array for generated layers\n    const generatedLayers: Layer[] = [];\n\n    // Match sublayers\n    this._updateSublayersRecursively(newLayers, oldLayerMap, generatedLayers);\n\n    // Finalize unmatched layers\n    this._finalizeOldLayers(oldLayerMap);\n\n    let needsUpdate: string | false = false;\n    for (const layer of generatedLayers) {\n      if (layer.hasUniformTransition()) {\n        needsUpdate = `Uniform transition in ${layer}`;\n        break;\n      }\n    }\n\n    this._needsUpdate = needsUpdate;\n    this.layers = generatedLayers;\n  }\n\n  /* eslint-disable complexity,max-statements */\n  // Note: adds generated layers to `generatedLayers` array parameter\n  private _updateSublayersRecursively(\n    newLayers: Layer[],\n    oldLayerMap: {[layerId: string]: Layer | null},\n    generatedLayers: Layer[]\n  ) {\n    for (const newLayer of newLayers) {\n      newLayer.context = this.context;\n\n      // Given a new coming layer, find its matching old layer (if any)\n      const oldLayer = oldLayerMap[newLayer.id];\n      if (oldLayer === null) {\n        // null, rather than undefined, means this id was originally there\n        log.warn(`Multiple new layers with same id ${newLayer.id}`)();\n      }\n      // Remove the old layer from candidates, as it has been matched with this layer\n      oldLayerMap[newLayer.id] = null;\n\n      let sublayers: Layer[] | null = null;\n\n      // We must not generate exceptions until after layer matching is complete\n      try {\n        if (this._debug && oldLayer !== newLayer) {\n          newLayer.validateProps();\n        }\n\n        if (!oldLayer) {\n          this._initializeLayer(newLayer);\n        } else {\n          this._transferLayerState(oldLayer, newLayer);\n          this._updateLayer(newLayer);\n        }\n        generatedLayers.push(newLayer);\n\n        // Call layer lifecycle method: render sublayers\n        sublayers = newLayer.isComposite ? (newLayer as CompositeLayer).getSubLayers() : null;\n        // End layer lifecycle method: render sublayers\n      } catch (err) {\n        this._handleError('matching', err as Error, newLayer); // Record first exception\n      }\n\n      if (sublayers) {\n        this._updateSublayersRecursively(sublayers, oldLayerMap, generatedLayers);\n      }\n    }\n  }\n  /* eslint-enable complexity,max-statements */\n\n  // Finalize any old layers that were not matched\n  private _finalizeOldLayers(oldLayerMap: {[layerId: string]: Layer | null}): void {\n    for (const layerId in oldLayerMap) {\n      const layer = oldLayerMap[layerId];\n      if (layer) {\n        this._finalizeLayer(layer);\n      }\n    }\n  }\n\n  // / EXCEPTION SAFE LAYER ACCESS\n\n  /** Safely initializes a single layer, calling layer methods */\n  private _initializeLayer(layer: Layer): void {\n    try {\n      layer._initialize();\n      layer.lifecycle = LIFECYCLE.INITIALIZED;\n    } catch (err) {\n      this._handleError('initialization', err as Error, layer);\n      // TODO - what should the lifecycle state be here? LIFECYCLE.INITIALIZATION_FAILED?\n    }\n  }\n\n  /** Transfer state from one layer to a newer version */\n  private _transferLayerState(oldLayer: Layer, newLayer: Layer): void {\n    newLayer._transferState(oldLayer);\n    newLayer.lifecycle = LIFECYCLE.MATCHED;\n\n    if (newLayer !== oldLayer) {\n      oldLayer.lifecycle = LIFECYCLE.AWAITING_GC;\n    }\n  }\n\n  /** Safely updates a single layer, cleaning all flags */\n  private _updateLayer(layer: Layer): void {\n    try {\n      layer._update();\n    } catch (err) {\n      this._handleError('update', err as Error, layer);\n    }\n  }\n\n  /** Safely finalizes a single layer, removing all resources */\n  private _finalizeLayer(layer: Layer): void {\n    this._needsRedraw = this._needsRedraw || `finalized ${layer}`;\n\n    layer.lifecycle = LIFECYCLE.AWAITING_FINALIZATION;\n\n    try {\n      layer._finalize();\n      layer.lifecycle = LIFECYCLE.FINALIZED;\n    } catch (err) {\n      this._handleError('finalization', err as Error, layer);\n    }\n  }\n}\n","import {Layer, project32, picking, UNIT} from '@deck.gl/core';\nimport GL from '@luma.gl/constants';\nimport {Model, Geometry} from '@luma.gl/core';\n\nimport vs from './text-background-layer-vertex.glsl';\nimport fs from './text-background-layer-fragment.glsl';\n\nimport type {\n  LayerProps,\n  LayerDataSource,\n  Accessor,\n  Unit,\n  Position,\n  Color,\n  UpdateParameters,\n  DefaultProps\n} from '@deck.gl/core';\n\ntype _TextBackgroundLayerProps<DataT> = {\n  data: LayerDataSource<DataT>;\n  billboard?: boolean;\n  sizeScale?: number;\n  sizeUnits?: Unit;\n  sizeMinPixels?: number;\n  sizeMaxPixels?: number;\n\n  padding?: [number, number] | [number, number, number, number];\n\n  getPosition?: Accessor<DataT, Position>;\n  getSize?: Accessor<DataT, number>;\n  getAngle?: Accessor<DataT, number>;\n  getPixelOffset?: Accessor<DataT, [number, number]>;\n  getBoundingRect?: Accessor<DataT, [number, number, number, number]>;\n  getFillColor?: Accessor<DataT, Color>;\n  getLineColor?: Accessor<DataT, Color>;\n  getLineWidth?: Accessor<DataT, number>;\n};\n\nexport type TextBackgroundLayerProps<DataT = any> = _TextBackgroundLayerProps<DataT> & LayerProps;\n\nconst defaultProps: DefaultProps<TextBackgroundLayerProps> = {\n  billboard: true,\n  sizeScale: 1,\n  sizeUnits: 'pixels',\n  sizeMinPixels: 0,\n  sizeMaxPixels: Number.MAX_SAFE_INTEGER,\n\n  padding: {type: 'array', value: [0, 0, 0, 0]},\n\n  getPosition: {type: 'accessor', value: x => x.position},\n  getSize: {type: 'accessor', value: 1},\n  getAngle: {type: 'accessor', value: 0},\n  getPixelOffset: {type: 'accessor', value: [0, 0]},\n  getBoundingRect: {type: 'accessor', value: [0, 0, 0, 0]},\n  getFillColor: {type: 'accessor', value: [0, 0, 0, 255]},\n  getLineColor: {type: 'accessor', value: [0, 0, 0, 255]},\n  getLineWidth: {type: 'accessor', value: 1}\n};\n\nexport default class TextBackgroundLayer<DataT = any, ExtraPropsT extends {} = {}> extends Layer<\n  ExtraPropsT & Required<_TextBackgroundLayerProps<DataT>>\n> {\n  static defaultProps = defaultProps;\n  static layerName = 'TextBackgroundLayer';\n\n  state!: {\n    model: Model;\n  };\n\n  getShaders() {\n    return super.getShaders({vs, fs, modules: [project32, picking]});\n  }\n\n  initializeState() {\n    this.getAttributeManager()!.addInstanced({\n      instancePositions: {\n        size: 3,\n        type: GL.DOUBLE,\n        fp64: this.use64bitPositions(),\n        transition: true,\n        accessor: 'getPosition'\n      },\n      instanceSizes: {\n        size: 1,\n        transition: true,\n        accessor: 'getSize',\n        defaultValue: 1\n      },\n      instanceAngles: {\n        size: 1,\n        transition: true,\n        accessor: 'getAngle'\n      },\n      instanceRects: {\n        size: 4,\n        accessor: 'getBoundingRect'\n      },\n      instancePixelOffsets: {\n        size: 2,\n        transition: true,\n        accessor: 'getPixelOffset'\n      },\n      instanceFillColors: {\n        size: 4,\n        transition: true,\n        normalized: true,\n        type: GL.UNSIGNED_BYTE,\n        accessor: 'getFillColor',\n        defaultValue: [0, 0, 0, 255]\n      },\n      instanceLineColors: {\n        size: 4,\n        transition: true,\n        normalized: true,\n        type: GL.UNSIGNED_BYTE,\n        accessor: 'getLineColor',\n        defaultValue: [0, 0, 0, 255]\n      },\n      instanceLineWidths: {\n        size: 1,\n        transition: true,\n        accessor: 'getLineWidth',\n        defaultValue: 1\n      }\n    });\n  }\n\n  updateState(params: UpdateParameters<this>) {\n    super.updateState(params);\n    const {changeFlags} = params;\n    if (changeFlags.extensionsChanged) {\n      const {gl} = this.context;\n      this.state.model?.delete();\n      this.state.model = this._getModel(gl);\n      this.getAttributeManager()!.invalidateAll();\n    }\n  }\n\n  draw({uniforms}) {\n    const {billboard, sizeScale, sizeUnits, sizeMinPixels, sizeMaxPixels, getLineWidth} =\n      this.props;\n    let {padding} = this.props;\n\n    if (padding.length < 4) {\n      padding = [padding[0], padding[1], padding[0], padding[1]];\n    }\n\n    this.state.model\n      .setUniforms(uniforms)\n      .setUniforms({\n        billboard,\n        stroked: Boolean(getLineWidth),\n        padding,\n        sizeUnits: UNIT[sizeUnits],\n        sizeScale,\n        sizeMinPixels,\n        sizeMaxPixels\n      })\n      .draw();\n  }\n\n  protected _getModel(gl: WebGLRenderingContext): Model {\n    // a square that minimally cover the unit circle\n    const positions = [0, 0, 1, 0, 1, 1, 0, 1];\n\n    return new Model(gl, {\n      ...this.getShaders(),\n      id: this.props.id,\n      geometry: new Geometry({\n        drawMode: GL.TRIANGLE_FAN,\n        vertexCount: 4,\n        attributes: {\n          positions: {size: 2, value: new Float32Array(positions)}\n        }\n      }),\n      isInstanced: true\n    });\n  }\n}\n","export default `\\\n#define SHADER_NAME text-background-layer-vertex-shader\n\nattribute vec2 positions;\n\nattribute vec3 instancePositions;\nattribute vec3 instancePositions64Low;\nattribute vec4 instanceRects;\nattribute float instanceSizes;\nattribute float instanceAngles;\nattribute vec2 instancePixelOffsets;\nattribute float instanceLineWidths;\nattribute vec4 instanceFillColors;\nattribute vec4 instanceLineColors;\nattribute vec3 instancePickingColors;\n\nuniform bool billboard;\nuniform float opacity;\nuniform float sizeScale;\nuniform float sizeMinPixels;\nuniform float sizeMaxPixels;\nuniform vec4 padding;\nuniform int sizeUnits;\n\nvarying vec4 vFillColor;\nvarying vec4 vLineColor;\nvarying float vLineWidth;\nvarying vec2 uv;\nvarying vec2 dimensions;\n\nvec2 rotate_by_angle(vec2 vertex, float angle) {\n  float angle_radian = radians(angle);\n  float cos_angle = cos(angle_radian);\n  float sin_angle = sin(angle_radian);\n  mat2 rotationMatrix = mat2(cos_angle, -sin_angle, sin_angle, cos_angle);\n  return rotationMatrix * vertex;\n}\n\nvoid main(void) {\n  geometry.worldPosition = instancePositions;\n  geometry.uv = positions;\n  geometry.pickingColor = instancePickingColors;\n  uv = positions;\n  vLineWidth = instanceLineWidths;\n\n  // convert size in meters to pixels, then scaled and clamp\n\n  // project meters to pixels and clamp to limits\n  float sizePixels = clamp(\n    project_size_to_pixel(instanceSizes * sizeScale, sizeUnits),\n    sizeMinPixels, sizeMaxPixels\n  );\n\n  dimensions = instanceRects.zw * sizePixels + padding.xy + padding.zw;\n\n  vec2 pixelOffset = (positions * instanceRects.zw + instanceRects.xy) * sizePixels + mix(-padding.xy, padding.zw, positions);\n  pixelOffset = rotate_by_angle(pixelOffset, instanceAngles);\n  pixelOffset += instancePixelOffsets;\n  pixelOffset.y *= -1.0;\n\n  if (billboard)  {\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, vec3(0.0), geometry.position);\n    DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n    vec3 offset = vec3(pixelOffset, 0.0);\n    DECKGL_FILTER_SIZE(offset, geometry);\n    gl_Position.xy += project_pixel_size_to_clipspace(offset.xy);\n  } else {\n    vec3 offset_common = vec3(project_pixel_size(pixelOffset), 0.0);\n    DECKGL_FILTER_SIZE(offset_common, geometry);\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, offset_common, geometry.position);\n    DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n  }\n\n  // Apply opacity to instance color, or return instance picking color\n  vFillColor = vec4(instanceFillColors.rgb, instanceFillColors.a * opacity);\n  DECKGL_FILTER_COLOR(vFillColor, geometry);\n  vLineColor = vec4(instanceLineColors.rgb, instanceLineColors.a * opacity);\n  DECKGL_FILTER_COLOR(vLineColor, geometry);\n}\n`;\n","export default `\\\n#define SHADER_NAME text-background-layer-fragment-shader\n\nprecision highp float;\n\nuniform bool stroked;\n\nvarying vec4 vFillColor;\nvarying vec4 vLineColor;\nvarying float vLineWidth;\nvarying vec2 uv;\nvarying vec2 dimensions;\n\nvoid main(void) {\n  geometry.uv = uv;\n\n  vec2 pixelPosition = uv * dimensions;\n  if (stroked) {\n    float distToEdge = min(\n      min(pixelPosition.x, dimensions.x - pixelPosition.x),\n      min(pixelPosition.y, dimensions.y - pixelPosition.y)\n    );\n    float isBorder = smoothedge(distToEdge, vLineWidth);\n    gl_FragColor = mix(vFillColor, vLineColor, isBorder);\n  } else {\n    gl_FragColor = vFillColor;\n  }\n\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n`;\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {Layer, project32, picking, UNIT} from '@deck.gl/core';\nimport GL from '@luma.gl/constants';\nimport {Model, Geometry} from '@luma.gl/core';\n\nimport vs from './scatterplot-layer-vertex.glsl';\nimport fs from './scatterplot-layer-fragment.glsl';\n\nimport type {\n  LayerProps,\n  LayerDataSource,\n  UpdateParameters,\n  Accessor,\n  Unit,\n  Position,\n  Color,\n  DefaultProps\n} from '@deck.gl/core';\n\nconst DEFAULT_COLOR: [number, number, number, number] = [0, 0, 0, 255];\n\n/** All props supported by the ScatterplotLayer */\nexport type ScatterplotLayerProps<DataT = any> = _ScatterplotLayerProps<DataT> & LayerProps;\n\n/** Props added by the ScatterplotLayer */\ntype _ScatterplotLayerProps<DataT> = {\n  data: LayerDataSource<DataT>;\n  /**\n   * The units of the radius, one of `'meters'`, `'common'`, and `'pixels'`.\n   * @default 'meters'\n   */\n  radiusUnits?: Unit;\n  /**\n   * Radius multiplier.\n   * @default 1\n   */\n  radiusScale?: number;\n  /**\n   * The minimum radius in pixels. This prop can be used to prevent the circle from getting too small when zoomed out.\n   * @default 0\n   */\n  radiusMinPixels?: number;\n  /**\n   * The maximum radius in pixels. This prop can be used to prevent the circle from getting too big when zoomed in.\n   * @default Number.MAX_SAFE_INTEGER\n   */\n  radiusMaxPixels?: number;\n\n  /**\n   * The units of the stroke width, one of `'meters'`, `'common'`, and `'pixels'`.\n   * @default 'meters'\n   */\n  lineWidthUnits?: Unit;\n  /**\n   * Stroke width multiplier.\n   * @default 1\n   */\n  lineWidthScale?: number;\n  /**\n   * The minimum stroke width in pixels. This prop can be used to prevent the line from getting too thin when zoomed out.\n   * @default 0\n   */\n  lineWidthMinPixels?: number;\n  /**\n   * The maximum stroke width in pixels. This prop can be used to prevent the circle from getting too thick when zoomed in.\n   * @default Number.MAX_SAFE_INTEGER\n   */\n  lineWidthMaxPixels?: number;\n\n  /**\n   * Draw the outline of points.\n   * @default false\n   */\n  stroked?: boolean;\n  /**\n   * Draw the filled area of points.\n   * @default true\n   */\n  filled?: boolean;\n  /**\n   * If `true`, rendered circles always face the camera. If `false` circles face up (i.e. are parallel with the ground plane).\n   * @default false\n   */\n  billboard?: boolean;\n  /**\n   * If `true`, circles are rendered with smoothed edges. If `false`, circles are rendered with rough edges. Antialiasing can cause artifacts on edges of overlapping circles.\n   * @default true\n   */\n  antialiasing?: boolean;\n\n  /**\n   * Center position accessor.\n   */\n  getPosition?: Accessor<DataT, Position>;\n  /**\n   * Radius accessor.\n   * @default 1\n   */\n  getRadius?: Accessor<DataT, number>;\n  /**\n   * Fill color accessor.\n   * @default [0, 0, 0, 255]\n   */\n  getFillColor?: Accessor<DataT, Color>;\n  /**\n   * Stroke color accessor.\n   * @default [0, 0, 0, 255]\n   */\n  getLineColor?: Accessor<DataT, Color>;\n  /**\n   * Stroke width accessor.\n   * @default 1\n   */\n  getLineWidth?: Accessor<DataT, number>;\n  /**\n   * @deprecated Use `getLineWidth` instead\n   */\n  strokeWidth?: number;\n  /**\n   * @deprecated Use `stroked` instead\n   */\n  outline?: boolean;\n  /**\n   * @deprecated Use `getFillColor` and `getLineColor` instead\n   */\n  getColor?: Accessor<DataT, Color>;\n};\n\nconst defaultProps: DefaultProps<ScatterplotLayerProps> = {\n  radiusUnits: 'meters',\n  radiusScale: {type: 'number', min: 0, value: 1},\n  radiusMinPixels: {type: 'number', min: 0, value: 0}, //  min point radius in pixels\n  radiusMaxPixels: {type: 'number', min: 0, value: Number.MAX_SAFE_INTEGER}, // max point radius in pixels\n\n  lineWidthUnits: 'meters',\n  lineWidthScale: {type: 'number', min: 0, value: 1},\n  lineWidthMinPixels: {type: 'number', min: 0, value: 0},\n  lineWidthMaxPixels: {type: 'number', min: 0, value: Number.MAX_SAFE_INTEGER},\n\n  stroked: false,\n  filled: true,\n  billboard: false,\n  antialiasing: true,\n\n  getPosition: {type: 'accessor', value: x => x.position},\n  getRadius: {type: 'accessor', value: 1},\n  getFillColor: {type: 'accessor', value: DEFAULT_COLOR},\n  getLineColor: {type: 'accessor', value: DEFAULT_COLOR},\n  getLineWidth: {type: 'accessor', value: 1},\n\n  // deprecated\n  strokeWidth: {deprecatedFor: 'getLineWidth'},\n  outline: {deprecatedFor: 'stroked'},\n  getColor: {deprecatedFor: ['getFillColor', 'getLineColor']}\n};\n\n/** Render circles at given coordinates. */\nexport default class ScatterplotLayer<DataT = any, ExtraPropsT extends {} = {}> extends Layer<\n  ExtraPropsT & Required<_ScatterplotLayerProps<DataT>>\n> {\n  static defaultProps = defaultProps;\n  static layerName: string = 'ScatterplotLayer';\n\n  getShaders() {\n    return super.getShaders({vs, fs, modules: [project32, picking]});\n  }\n\n  initializeState() {\n    this.getAttributeManager()!.addInstanced({\n      instancePositions: {\n        size: 3,\n        type: GL.DOUBLE,\n        fp64: this.use64bitPositions(),\n        transition: true,\n        accessor: 'getPosition'\n      },\n      instanceRadius: {\n        size: 1,\n        transition: true,\n        accessor: 'getRadius',\n        defaultValue: 1\n      },\n      instanceFillColors: {\n        size: this.props.colorFormat.length,\n        transition: true,\n        normalized: true,\n        type: GL.UNSIGNED_BYTE,\n        accessor: 'getFillColor',\n        defaultValue: [0, 0, 0, 255]\n      },\n      instanceLineColors: {\n        size: this.props.colorFormat.length,\n        transition: true,\n        normalized: true,\n        type: GL.UNSIGNED_BYTE,\n        accessor: 'getLineColor',\n        defaultValue: [0, 0, 0, 255]\n      },\n      instanceLineWidths: {\n        size: 1,\n        transition: true,\n        accessor: 'getLineWidth',\n        defaultValue: 1\n      }\n    });\n  }\n\n  updateState(params: UpdateParameters<this>) {\n    super.updateState(params);\n\n    if (params.changeFlags.extensionsChanged) {\n      const {gl} = this.context;\n      this.state.model?.delete();\n      this.state.model = this._getModel(gl);\n      this.getAttributeManager()!.invalidateAll();\n    }\n  }\n\n  draw({uniforms}) {\n    const {\n      radiusUnits,\n      radiusScale,\n      radiusMinPixels,\n      radiusMaxPixels,\n      stroked,\n      filled,\n      billboard,\n      antialiasing,\n      lineWidthUnits,\n      lineWidthScale,\n      lineWidthMinPixels,\n      lineWidthMaxPixels\n    } = this.props;\n\n    this.state.model\n      .setUniforms(uniforms)\n      .setUniforms({\n        stroked: stroked ? 1 : 0,\n        filled,\n        billboard,\n        antialiasing,\n        radiusUnits: UNIT[radiusUnits],\n        radiusScale,\n        radiusMinPixels,\n        radiusMaxPixels,\n        lineWidthUnits: UNIT[lineWidthUnits],\n        lineWidthScale,\n        lineWidthMinPixels,\n        lineWidthMaxPixels\n      })\n      .draw();\n  }\n\n  protected _getModel(gl) {\n    // a square that minimally cover the unit circle\n    const positions = [-1, -1, 0, 1, -1, 0, 1, 1, 0, -1, 1, 0];\n\n    return new Model(gl, {\n      ...this.getShaders(),\n      id: this.props.id,\n      geometry: new Geometry({\n        drawMode: GL.TRIANGLE_FAN,\n        vertexCount: 4,\n        attributes: {\n          positions: {size: 3, value: new Float32Array(positions)}\n        }\n      }),\n      isInstanced: true\n    });\n  }\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nexport default `\\\n#define SHADER_NAME scatterplot-layer-vertex-shader\n\nattribute vec3 positions;\n\nattribute vec3 instancePositions;\nattribute vec3 instancePositions64Low;\nattribute float instanceRadius;\nattribute float instanceLineWidths;\nattribute vec4 instanceFillColors;\nattribute vec4 instanceLineColors;\nattribute vec3 instancePickingColors;\n\nuniform float opacity;\nuniform float radiusScale;\nuniform float radiusMinPixels;\nuniform float radiusMaxPixels;\nuniform float lineWidthScale;\nuniform float lineWidthMinPixels;\nuniform float lineWidthMaxPixels;\nuniform float stroked;\nuniform bool filled;\nuniform bool antialiasing;\nuniform bool billboard;\nuniform int radiusUnits;\nuniform int lineWidthUnits;\n\nvarying vec4 vFillColor;\nvarying vec4 vLineColor;\nvarying vec2 unitPosition;\nvarying float innerUnitRadius;\nvarying float outerRadiusPixels;\n\n\nvoid main(void) {\n  geometry.worldPosition = instancePositions;\n\n  // Multiply out radius and clamp to limits\n  outerRadiusPixels = clamp(\n    project_size_to_pixel(radiusScale * instanceRadius, radiusUnits),\n    radiusMinPixels, radiusMaxPixels\n  );\n  \n  // Multiply out line width and clamp to limits\n  float lineWidthPixels = clamp(\n    project_size_to_pixel(lineWidthScale * instanceLineWidths, lineWidthUnits),\n    lineWidthMinPixels, lineWidthMaxPixels\n  );\n\n  // outer radius needs to offset by half stroke width\n  outerRadiusPixels += stroked * lineWidthPixels / 2.0;\n\n  // Expand geometry to accomodate edge smoothing\n  float edgePadding = antialiasing ? (outerRadiusPixels + SMOOTH_EDGE_RADIUS) / outerRadiusPixels : 1.0;\n\n  // position on the containing square in [-1, 1] space\n  unitPosition = edgePadding * positions.xy;\n  geometry.uv = unitPosition;\n  geometry.pickingColor = instancePickingColors;\n\n  innerUnitRadius = 1.0 - stroked * lineWidthPixels / outerRadiusPixels;\n  \n  if (billboard) {\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, vec3(0.0), geometry.position);\n    DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n    vec3 offset = edgePadding * positions * outerRadiusPixels;\n    DECKGL_FILTER_SIZE(offset, geometry);\n    gl_Position.xy += project_pixel_size_to_clipspace(offset.xy);\n  } else {\n    vec3 offset = edgePadding * positions * project_pixel_size(outerRadiusPixels);\n    DECKGL_FILTER_SIZE(offset, geometry);\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, offset, geometry.position);\n    DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n  }\n\n  // Apply opacity to instance color, or return instance picking color\n  vFillColor = vec4(instanceFillColors.rgb, instanceFillColors.a * opacity);\n  DECKGL_FILTER_COLOR(vFillColor, geometry);\n  vLineColor = vec4(instanceLineColors.rgb, instanceLineColors.a * opacity);\n  DECKGL_FILTER_COLOR(vLineColor, geometry);\n}\n`;\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nexport default `\\\n#define SHADER_NAME scatterplot-layer-fragment-shader\n\nprecision highp float;\n\nuniform bool filled;\nuniform float stroked;\nuniform bool antialiasing;\n\nvarying vec4 vFillColor;\nvarying vec4 vLineColor;\nvarying vec2 unitPosition;\nvarying float innerUnitRadius;\nvarying float outerRadiusPixels;\n\nvoid main(void) {\n  geometry.uv = unitPosition;\n\n  float distToCenter = length(unitPosition) * outerRadiusPixels;\n  float inCircle = antialiasing ? \n    smoothedge(distToCenter, outerRadiusPixels) : \n    step(distToCenter, outerRadiusPixels);\n\n  if (inCircle == 0.0) {\n    discard;\n  }\n\n  if (stroked > 0.5) {\n    float isLine = antialiasing ? \n      smoothedge(innerUnitRadius * outerRadiusPixels, distToCenter) :\n      step(innerUnitRadius * outerRadiusPixels, distToCenter);\n\n    if (filled) {\n      gl_FragColor = mix(vFillColor, vLineColor, isLine);\n    } else {\n      if (isLine == 0.0) {\n        discard;\n      }\n      gl_FragColor = vec4(vLineColor.rgb, vLineColor.a * isLine);\n    }\n  } else if (!filled) {\n    discard;\n  } else {\n    gl_FragColor = vFillColor;\n  }\n\n  gl_FragColor.a *= inCircle;\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n`;\n","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import type {Loader} from '@loaders.gl/loader-utils';\n\nfunction isJSON(text: string): boolean {\n  const firstChar = text[0];\n  const lastChar = text[text.length - 1];\n  return (firstChar === '{' && lastChar === '}') || (firstChar === '[' && lastChar === ']');\n}\n\n// A light weight version instead of @loaders.gl/json (stream processing etc.)\nexport default {\n  id: 'JSON',\n  name: 'JSON',\n  module: '',\n  version: '',\n  options: {},\n  extensions: ['json', 'geojson'],\n  mimeTypes: ['application/json', 'application/geo+json'],\n  testText: isJSON,\n  parseTextSync: JSON.parse\n} as Loader;\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {registerLoaders} from '@loaders.gl/core';\nimport {ImageLoader} from '@loaders.gl/images';\n\nimport log from '../utils/log';\nimport {register} from '../debug';\nimport jsonLoader from '../utils/json-loader';\n\ndeclare global {\n  const __VERSION__: string;\n}\n\nfunction checkVersion() {\n  // Version detection using babel plugin\n  // Fallback for tests and SSR since global variable is defined by Webpack.\n  const version =\n    typeof __VERSION__ !== 'undefined'\n      ? __VERSION__\n      : globalThis.DECK_VERSION || 'untranspiled source';\n\n  // Note: a `deck` object not created by deck.gl may exist in the global scope\n  const existingVersion = globalThis.deck && globalThis.deck.VERSION;\n\n  if (existingVersion && existingVersion !== version) {\n    throw new Error(`deck.gl - multiple versions detected: ${existingVersion} vs ${version}`);\n  }\n\n  if (!existingVersion) {\n    log.log(1, `deck.gl ${version}`)();\n\n    globalThis.deck = {\n      ...globalThis.deck,\n      VERSION: version,\n      version,\n      log,\n      // experimental\n      _registerLoggers: register\n    };\n\n    registerLoaders([\n      jsonLoader,\n      // @ts-expect-error non-standard Loader format\n      [ImageLoader, {imagebitmap: {premultiplyAlpha: 'none'}}]\n    ]);\n  }\n\n  return version;\n}\n\nexport const VERSION = checkVersion();\n","import LayersPass from './layers-pass';\n\nexport default class DrawLayersPass extends LayersPass {\n  shouldDrawLayer(layer) {\n    const {operation} = layer.props;\n    return operation.includes('draw') || operation.includes('terrain');\n  }\n}\n","import debug from '../debug';\nimport DrawLayersPass from '../passes/draw-layers-pass';\nimport PickLayersPass from '../passes/pick-layers-pass';\nimport {Framebuffer} from '@luma.gl/core';\n\nimport type Layer from './layer';\nimport type Viewport from '../viewports/viewport';\nimport type View from '../views/view';\nimport type {Effect} from './effect';\nimport type {LayersPassRenderOptions, FilterContext} from '../passes/layers-pass';\n\nconst TRACE_RENDER_LAYERS = 'deckRenderer.renderLayers';\n\ntype LayerFilter = ((context: FilterContext) => boolean) | null;\n\nexport default class DeckRenderer {\n  gl: WebGLRenderingContext;\n  layerFilter: LayerFilter;\n  drawPickingColors: boolean;\n  drawLayersPass: DrawLayersPass;\n  pickLayersPass: PickLayersPass;\n\n  private renderCount: number;\n  private _needsRedraw: string | false;\n  private renderBuffers: Framebuffer[];\n  private lastPostProcessEffect: string | null;\n\n  constructor(gl: WebGLRenderingContext) {\n    this.gl = gl;\n    this.layerFilter = null;\n    this.drawPickingColors = false;\n    this.drawLayersPass = new DrawLayersPass(gl);\n    this.pickLayersPass = new PickLayersPass(gl);\n    this.renderCount = 0;\n    this._needsRedraw = 'Initial render';\n    this.renderBuffers = [];\n    this.lastPostProcessEffect = null;\n  }\n\n  setProps(props: {layerFilter: LayerFilter; drawPickingColors: boolean}) {\n    if (this.layerFilter !== props.layerFilter) {\n      this.layerFilter = props.layerFilter;\n      this._needsRedraw = 'layerFilter changed';\n    }\n\n    if (this.drawPickingColors !== props.drawPickingColors) {\n      this.drawPickingColors = props.drawPickingColors;\n      this._needsRedraw = 'drawPickingColors changed';\n    }\n  }\n\n  renderLayers(opts: {\n    pass: string;\n    layers: Layer[];\n    viewports: Viewport[];\n    views: {[viewId: string]: View};\n    onViewportActive: (viewport: Viewport) => void;\n    effects: Effect[];\n    target?: Framebuffer;\n    layerFilter?: LayerFilter;\n    clearStack?: boolean;\n    clearCanvas?: boolean;\n  }) {\n    if (!opts.viewports.length) {\n      return;\n    }\n\n    const layerPass = this.drawPickingColors ? this.pickLayersPass : this.drawLayersPass;\n\n    const renderOpts: LayersPassRenderOptions = {\n      layerFilter: this.layerFilter,\n      isPicking: this.drawPickingColors,\n      ...opts,\n      target: opts.target || Framebuffer.getDefaultFramebuffer(this.gl)\n    };\n\n    if (renderOpts.effects) {\n      this._preRender(renderOpts.effects, renderOpts);\n    }\n\n    const outputBuffer = this.lastPostProcessEffect ? this.renderBuffers[0] : renderOpts.target;\n    const renderStats = layerPass.render({...renderOpts, target: outputBuffer});\n\n    if (renderOpts.effects) {\n      this._postRender(renderOpts.effects, renderOpts);\n    }\n\n    this.renderCount++;\n\n    debug(TRACE_RENDER_LAYERS, this, renderStats, opts);\n  }\n\n  needsRedraw(opts: {clearRedrawFlags: boolean} = {clearRedrawFlags: false}): string | false {\n    const redraw = this._needsRedraw;\n    if (opts.clearRedrawFlags) {\n      this._needsRedraw = false;\n    }\n    return redraw;\n  }\n\n  finalize() {\n    const {renderBuffers} = this;\n    for (const buffer of renderBuffers) {\n      buffer.delete();\n    }\n    renderBuffers.length = 0;\n  }\n\n  private _preRender(effects: Effect[], opts: LayersPassRenderOptions) {\n    this.lastPostProcessEffect = null;\n    opts.preRenderStats = opts.preRenderStats || {};\n\n    for (const effect of effects) {\n      opts.preRenderStats[effect.id] = effect.preRender(this.gl, opts);\n      if (effect.postRender) {\n        this.lastPostProcessEffect = effect.id;\n      }\n    }\n\n    if (this.lastPostProcessEffect) {\n      this._resizeRenderBuffers();\n    }\n  }\n\n  private _resizeRenderBuffers() {\n    const {renderBuffers} = this;\n    if (renderBuffers.length === 0) {\n      renderBuffers.push(new Framebuffer(this.gl), new Framebuffer(this.gl));\n    }\n    for (const buffer of renderBuffers) {\n      buffer.resize();\n    }\n  }\n\n  private _postRender(effects: Effect[], opts: LayersPassRenderOptions) {\n    const {renderBuffers} = this;\n    const params = {\n      ...opts,\n      inputBuffer: renderBuffers[0],\n      swapBuffer: renderBuffers[1],\n      target: null\n    };\n    for (const effect of effects) {\n      if (effect.postRender) {\n        if (effect.id === this.lastPostProcessEffect) {\n          params.target = opts.target;\n          effect.postRender(this.gl, params);\n          break;\n        }\n        const buffer = effect.postRender(this.gl, params);\n        params.inputBuffer = buffer;\n        params.swapBuffer = buffer === renderBuffers[0] ? renderBuffers[1] : renderBuffers[0];\n      }\n    }\n  }\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport GL from '@luma.gl/constants';\nimport {log} from '@deck.gl/core';\nimport IconLayer from '../../icon-layer/icon-layer';\n\nimport fs from './multi-icon-layer-fragment.glsl';\n\nimport type {IconLayerProps} from '../../icon-layer/icon-layer';\nimport type {Accessor, Color, UpdateParameters, DefaultProps} from '@deck.gl/core';\n\n// TODO expose as layer properties\nconst DEFAULT_BUFFER = 192.0 / 256;\nconst EMPTY_ARRAY = [];\n\ntype _MultiIconLayerProps<DataT> = {\n  getIconOffsets?: Accessor<DataT, number[]>;\n  sdf?: boolean;\n  smoothing?: number;\n  outlineWidth?: number;\n  outlineColor?: Color;\n};\n\nexport type MultiIconLayerProps<DataT = any> = _MultiIconLayerProps<DataT> & IconLayerProps<DataT>;\n\nconst defaultProps: DefaultProps<MultiIconLayerProps> = {\n  getIconOffsets: {type: 'accessor', value: x => x.offsets},\n  alphaCutoff: 0.001,\n  smoothing: 0.1,\n  outlineWidth: 0,\n  outlineColor: {type: 'color', value: [0, 0, 0, 255]}\n};\n\nexport default class MultiIconLayer<DataT, ExtraPropsT extends {} = {}> extends IconLayer<\n  DataT,\n  ExtraPropsT & Required<_MultiIconLayerProps<DataT>>\n> {\n  static defaultProps = defaultProps;\n  static layerName = 'MultiIconLayer';\n\n  state!: IconLayer['state'] & {\n    outlineColor: Color;\n  };\n\n  getShaders() {\n    return {...super.getShaders(), fs};\n  }\n\n  initializeState() {\n    super.initializeState();\n\n    const attributeManager = this.getAttributeManager();\n    attributeManager!.addInstanced({\n      instanceOffsets: {\n        size: 2,\n        accessor: 'getIconOffsets'\n      },\n      instancePickingColors: {\n        type: GL.UNSIGNED_BYTE,\n        size: 3,\n        accessor: (object, {index, target: value}) => this.encodePickingColor(index, value)\n      }\n    });\n  }\n\n  updateState(params: UpdateParameters<this>) {\n    super.updateState(params);\n    const {props, oldProps} = params;\n    let {outlineColor} = props;\n\n    if (outlineColor !== oldProps.outlineColor) {\n      outlineColor = outlineColor.map(x => x / 255) as Color;\n      outlineColor[3] = Number.isFinite(outlineColor[3]) ? outlineColor[3] : 1;\n\n      this.setState({\n        outlineColor\n      });\n    }\n    if (!props.sdf && props.outlineWidth) {\n      log.warn(`${this.id}: fontSettings.sdf is required to render outline`)();\n    }\n  }\n\n  draw(params) {\n    const {sdf, smoothing, outlineWidth} = this.props;\n    const {outlineColor} = this.state;\n    const outlineBuffer = outlineWidth\n      ? Math.max(smoothing, DEFAULT_BUFFER * (1 - outlineWidth))\n      : -1;\n\n    params.uniforms = {\n      ...params.uniforms,\n      // Refer the following doc about gamma and buffer\n      // https://blog.mapbox.com/drawing-text-with-signed-distance-fields-in-mapbox-gl-b0933af6f817\n      sdfBuffer: DEFAULT_BUFFER,\n      outlineBuffer,\n      gamma: smoothing,\n      sdf: Boolean(sdf),\n      outlineColor\n    };\n\n    super.draw(params);\n\n    // draw text without outline on top to ensure a thick outline won't occlude other characters\n    if (sdf && outlineWidth) {\n      const {iconManager} = this.state;\n      const iconsTexture = iconManager.getTexture();\n\n      if (iconsTexture) {\n        this.state.model.draw({uniforms: {outlineBuffer: DEFAULT_BUFFER}});\n      }\n    }\n  }\n\n  protected getInstanceOffset(icons: string): number[] {\n    return icons ? Array.from(icons).flatMap(icon => super.getInstanceOffset(icon)) : EMPTY_ARRAY;\n  }\n\n  getInstanceColorMode(icons: string): number {\n    return 1; // mask\n  }\n\n  getInstanceIconFrame(icons: string): number[] {\n    return icons\n      ? Array.from(icons).flatMap(icon => super.getInstanceIconFrame(icon))\n      : EMPTY_ARRAY;\n  }\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nexport default `\\\n#define SHADER_NAME multi-icon-layer-fragment-shader\n\nprecision highp float;\n\nuniform float opacity;\nuniform sampler2D iconsTexture;\nuniform float gamma;\nuniform bool sdf;\nuniform float alphaCutoff;\nuniform float sdfBuffer;\nuniform float outlineBuffer;\nuniform vec4 outlineColor;\n\nvarying vec4 vColor;\nvarying vec2 vTextureCoords;\nvarying vec2 uv;\n\nvoid main(void) {\n  geometry.uv = uv;\n\n  if (!picking_uActive) {\n    float alpha = texture2D(iconsTexture, vTextureCoords).a;\n    vec4 color = vColor;\n\n    // if enable sdf (signed distance fields)\n    if (sdf) {\n      float distance = alpha;\n      alpha = smoothstep(sdfBuffer - gamma, sdfBuffer + gamma, distance);\n\n      if (outlineBuffer > 0.0) {\n        float inFill = alpha;\n        float inBorder = smoothstep(outlineBuffer - gamma, outlineBuffer + gamma, distance);\n        color = mix(outlineColor, vColor, inFill);\n        alpha = inBorder;\n      }\n    }\n\n    // Take the global opacity and the alpha from color into account for the alpha component\n    float a = alpha * color.a;\n    \n    if (a < alphaCutoff) {\n      discard;\n    }\n\n    gl_FragColor = vec4(color.rgb, a * opacity);\n  }\n\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n`;\n","var arrayWithHoles = require(\"./arrayWithHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableRest = require(\"./nonIterableRest.js\");\n\nfunction _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}\n\nmodule.exports = _toArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","// math.gl, MIT License\nimport {NumericArray} from '@math.gl/types';\nimport {ConfigurationOptions, config, formatValue, equals, isArray} from '../../lib/common';\n\n/** Base class for vectors and matrices */\nexport default abstract class MathArray extends Array<number> {\n  /** Number of elements (values) in this array */\n  abstract get ELEMENTS(): number;\n\n  abstract copy(vector: Readonly<NumericArray>): this;\n\n  abstract fromObject(object: object): this;\n\n  // Common methods\n\n  /**\n   * Clone the current object\n   * @returns a new copy of this object\n   */\n  clone(): this {\n    // @ts-expect-error TS2351: Cannot use 'new' with an expression whose type lacks a call or construct signature.\n    return new this.constructor().copy(this); // eslint-disable-line\n  }\n\n  fromArray(array: Readonly<NumericArray>, offset: number = 0): this {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = array[i + offset];\n    }\n    return this.check();\n  }\n\n  toArray<TypedArray>(targetArray: TypedArray, offset?: number): TypedArray;\n  toArray(targetArray?: number[], offset?: number): NumericArray;\n\n  toArray(targetArray: NumericArray = [], offset: number = 0): NumericArray {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      targetArray[offset + i] = this[i];\n    }\n    return targetArray;\n  }\n\n  from(arrayOrObject: Readonly<NumericArray> | object): this {\n    return Array.isArray(arrayOrObject) ? this.copy(arrayOrObject) : this.fromObject(arrayOrObject);\n  }\n\n  to<T extends NumericArray | object>(arrayOrObject: T): T {\n    // @ts-ignore\n    if (arrayOrObject === this) {\n      return this;\n    }\n    // @ts-expect-error TS2339: Property 'toObject' does not exist on type 'MathArray'.\n    return isArray(arrayOrObject) ? this.toArray(arrayOrObject) : this.toObject(arrayOrObject);\n  }\n\n  toTarget(target: this): this {\n    return target ? this.to(target) : this;\n  }\n\n  /** @deprecated */\n  toFloat32Array(): Float32Array {\n    return new Float32Array(this);\n  }\n\n  toString(): string {\n    return this.formatString(config);\n  }\n\n  /** Formats string according to options */\n  formatString(opts: ConfigurationOptions): string {\n    let string = '';\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      string += (i > 0 ? ', ' : '') + formatValue(this[i], opts);\n    }\n    return `${opts.printTypes ? this.constructor.name : ''}[${string}]`;\n  }\n\n  equals(array: Readonly<NumericArray>): boolean {\n    if (!array || this.length !== array.length) {\n      return false;\n    }\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      if (!equals(this[i], array[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  exactEquals(array: Readonly<NumericArray>): boolean {\n    if (!array || this.length !== array.length) {\n      return false;\n    }\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      if (this[i] !== array[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  // Modifiers\n\n  /** Negates all values in this object */\n  negate(): this {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = -this[i];\n    }\n    return this.check();\n  }\n\n  /** Linearly interpolates between two values */\n  lerp(a: Readonly<NumericArray>, t: number): this;\n  lerp(a: Readonly<NumericArray>, b: Readonly<NumericArray>, t: number): this;\n\n  lerp(a: Readonly<NumericArray>, b: Readonly<NumericArray> | number, t?: number): this {\n    if (t === undefined) {\n      return this.lerp(this, a, b as number);\n    }\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      const ai = a[i];\n      this[i] = ai + t * (b[i] - ai);\n    }\n    return this.check();\n  }\n\n  /** Minimal */\n  min(vector: Readonly<NumericArray>): this {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = Math.min(vector[i], this[i]);\n    }\n    return this.check();\n  }\n\n  /** Maximal */\n  max(vector: Readonly<NumericArray>): this {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = Math.max(vector[i], this[i]);\n    }\n    return this.check();\n  }\n\n  clamp(minVector: Readonly<NumericArray>, maxVector: Readonly<NumericArray>): this {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = Math.min(Math.max(this[i], minVector[i]), maxVector[i]);\n    }\n    return this.check();\n  }\n\n  add(...vectors: Readonly<NumericArray>[]): this {\n    for (const vector of vectors) {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] += vector[i];\n      }\n    }\n    return this.check();\n  }\n\n  subtract(...vectors: Readonly<NumericArray>[]): this {\n    for (const vector of vectors) {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] -= vector[i];\n      }\n    }\n    return this.check();\n  }\n\n  scale(scale: number | Readonly<NumericArray>): this {\n    if (typeof scale === 'number') {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] *= scale;\n      }\n    } else {\n      for (let i = 0; i < this.ELEMENTS && i < scale.length; ++i) {\n        this[i] *= scale[i];\n      }\n    }\n    return this.check();\n  }\n\n  /**\n   * Multiplies all elements by `scale`\n   * Note: `Matrix4.multiplyByScalar` only scales its 3x3 \"minor\"\n   */\n  multiplyByScalar(scalar: number): this {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] *= scalar;\n    }\n    return this.check();\n  }\n\n  // Debug checks\n\n  /** Throws an error if array length is incorrect or contains illegal values */\n  check(): this {\n    if (config.debug && !this.validate()) {\n      throw new Error(`math.gl: ${this.constructor.name} some fields set to invalid numbers'`);\n    }\n    return this;\n  }\n\n  /** Returns false if the array length is incorrect or contains illegal values */\n  validate(): boolean {\n    let valid = this.length === this.ELEMENTS;\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      valid = valid && Number.isFinite(this[i]);\n    }\n    return valid;\n  }\n\n  // three.js compatibility\n\n  /** @deprecated */\n  sub(a: Readonly<NumericArray>): this {\n    return this.subtract(a);\n  }\n\n  /** @deprecated */\n  setScalar(a: number): this {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = a;\n    }\n    return this.check();\n  }\n\n  /** @deprecated */\n  addScalar(a: number): this {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] += a;\n    }\n    return this.check();\n  }\n\n  /** @deprecated */\n  subScalar(a: number): this {\n    return this.addScalar(-a);\n  }\n\n  /** @deprecated */\n  multiplyScalar(scalar: number): this {\n    // Multiplies all elements\n    // `Matrix4.scale` only scales its 3x3 \"minor\"\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] *= scalar;\n    }\n    return this.check();\n  }\n\n  /** @deprecated */\n  divideScalar(a: number): this {\n    return this.multiplyByScalar(1 / a);\n  }\n\n  /** @deprecated */\n  clampScalar(min: number, max: number): this {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = Math.min(Math.max(this[i], min), max);\n    }\n    return this.check();\n  }\n\n  /** @deprecated */\n  get elements(): NumericArray {\n    return this;\n  }\n}\n","export default class Pass {\n  id: string;\n  gl: WebGLRenderingContext;\n  props: any;\n\n  constructor(gl: WebGLRenderingContext, props: {id: string} = {id: 'pass'}) {\n    const {id} = props;\n    this.id = id; // id of this pass\n    this.gl = gl;\n    this.props = {...props};\n  }\n\n  setProps(props): void {\n    Object.assign(this.props, props);\n  }\n\n  render(params): void {} // eslint-disable-line @typescript-eslint/no-empty-function\n\n  cleanup() {} // eslint-disable-line @typescript-eslint/no-empty-function\n}\n","// Assume data array is sorted by <accessor>\n// Replaces the specified range with a new subarray\n// Mutates the data array\n// Returns {startRow, endRow} of the inserted items\nexport function replaceInRange({\n  data,\n  getIndex,\n  dataRange,\n  replace\n}: {\n  data: any[];\n  getIndex: (d: any) => number;\n  dataRange: {startRow?: number; endRow?: number};\n  replace: any[];\n}): {startRow: Number; endRow: number} {\n  const {startRow = 0, endRow = Infinity} = dataRange;\n  const count = data.length;\n  let replaceStart = count;\n  let replaceEnd = count;\n  for (let i = 0; i < count; i++) {\n    const row = getIndex(data[i]);\n    if (replaceStart > i && row >= startRow) {\n      replaceStart = i;\n    }\n    if (row >= endRow) {\n      replaceEnd = i;\n      break;\n    }\n  }\n  let index = replaceStart;\n  const dataLengthChanged = replaceEnd - replaceStart !== replace.length;\n  // Save the items after replaceEnd before we overwrite data\n  const endChunk = dataLengthChanged ? data.slice(replaceEnd) : undefined;\n  // Insert new items\n  for (let i = 0; i < replace.length; i++) {\n    data[index++] = replace[i];\n  }\n  if (endChunk) {\n    // Append items after replaceEnd\n    for (let i = 0; i < endChunk.length; i++) {\n      data[index++] = endChunk[i];\n    }\n    // Trim additional items\n    data.length = index;\n  }\n\n  return {\n    startRow: replaceStart,\n    endRow: replaceStart + replace.length\n  };\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nexport const defaultColorRange: [number, number, number][] = [\n  [255, 255, 178],\n  [254, 217, 118],\n  [254, 178, 76],\n  [253, 141, 60],\n  [240, 59, 32],\n  [189, 0, 38]\n];\n\n// Converts a colorRange array to a flat array with 4 components per color\nexport function colorRangeToFlatArray(colorRange, normalize = false, ArrayType = Float32Array) {\n  let flatArray;\n\n  if (Number.isFinite(colorRange[0])) {\n    // its already a flat array.\n    flatArray = new ArrayType(colorRange);\n  } else {\n    // flatten it\n    flatArray = new ArrayType(colorRange.length * 4);\n    let index = 0;\n\n    for (let i = 0; i < colorRange.length; i++) {\n      const color = colorRange[i];\n      flatArray[index++] = color[0];\n      flatArray[index++] = color[1];\n      flatArray[index++] = color[2];\n      flatArray[index++] = Number.isFinite(color[3]) ? color[3] : 255;\n    }\n  }\n\n  if (normalize) {\n    for (let i = 0; i < flatArray.length; i++) {\n      flatArray[i] /= 255;\n    }\n  }\n  return flatArray;\n}\n","// Copyright (c) 2015 - 2018 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport BinSorter from './bin-sorter';\nimport {getScaleFunctionByScaleType} from './scale-utils';\nimport {getValueFunc, wrapGetValueFunc} from './aggregation-operation-utils';\n\nfunction nop() {}\n\nconst dimensionSteps = ['getBins', 'getDomain', 'getScaleFunc'];\nconst defaultDimensions = [\n  {\n    key: 'fillColor',\n    accessor: 'getFillColor',\n    pickingInfo: 'colorValue',\n    getBins: {\n      triggers: {\n        value: {\n          prop: 'getColorValue',\n          updateTrigger: 'getColorValue'\n        },\n        weight: {\n          prop: 'getColorWeight',\n          updateTrigger: 'getColorWeight'\n        },\n        aggregation: {\n          prop: 'colorAggregation'\n        },\n        filterData: {\n          prop: '_filterData',\n          updateTrigger: '_filterData'\n        }\n      }\n    },\n    getDomain: {\n      triggers: {\n        lowerPercentile: {\n          prop: 'lowerPercentile'\n        },\n        upperPercentile: {\n          prop: 'upperPercentile'\n        },\n        scaleType: {\n          prop: 'colorScaleType'\n        }\n      }\n    },\n    getScaleFunc: {\n      triggers: {\n        domain: {prop: 'colorDomain'},\n        range: {prop: 'colorRange'}\n      },\n      onSet: {\n        props: 'onSetColorDomain'\n      }\n    },\n    nullValue: [0, 0, 0, 0]\n  },\n  {\n    key: 'elevation',\n    accessor: 'getElevation',\n    pickingInfo: 'elevationValue',\n    getBins: {\n      triggers: {\n        value: {\n          prop: 'getElevationValue',\n          updateTrigger: 'getElevationValue'\n        },\n        weight: {\n          prop: 'getElevationWeight',\n          updateTrigger: 'getElevationWeight'\n        },\n        aggregation: {\n          prop: 'elevationAggregation'\n        },\n        filterData: {\n          prop: '_filterData',\n          updateTrigger: '_filterData'\n        }\n      }\n    },\n    getDomain: {\n      triggers: {\n        lowerPercentile: {\n          prop: 'elevationLowerPercentile'\n        },\n        upperPercentile: {\n          prop: 'elevationUpperPercentile'\n        },\n        scaleType: {\n          prop: 'elevationScaleType'\n        }\n      }\n    },\n    getScaleFunc: {\n      triggers: {\n        domain: {prop: 'elevationDomain'},\n        range: {prop: 'elevationRange'}\n      },\n      onSet: {\n        props: 'onSetElevationDomain'\n      }\n    },\n    nullValue: -1\n  }\n];\nconst defaultGetCellSize = props => props.cellSize;\nexport default class CPUAggregator {\n  constructor(opts) {\n    this.state = {\n      layerData: {},\n      dimensions: {\n        // color: {\n        //   getValue: null,\n        //   domain: null,\n        //   sortedBins: null,\n        //   scaleFunc: nop\n        // },\n        // elevation: {\n        //   getValue: null,\n        //   domain: null,\n        //   sortedBins: null,\n        //   scaleFunc: nop\n        // }\n      }\n    };\n    this.changeFlags = {};\n    this.dimensionUpdaters = {};\n\n    this._getCellSize = opts.getCellSize || defaultGetCellSize;\n    this._getAggregator = opts.getAggregator;\n    this._addDimension(opts.dimensions || defaultDimensions);\n  }\n\n  static defaultDimensions() {\n    return defaultDimensions;\n  }\n\n  updateState(opts, aggregationParams) {\n    const {oldProps, props, changeFlags} = opts;\n    this.updateGetValueFuncs(oldProps, props, changeFlags);\n    const reprojectNeeded = this.needsReProjectPoints(oldProps, props, changeFlags);\n    let aggregationDirty = false;\n    if (changeFlags.dataChanged || reprojectNeeded) {\n      // project data into bin and aggregate wegiths per bin\n      this.getAggregatedData(props, aggregationParams);\n      aggregationDirty = true;\n    } else {\n      const dimensionChanges = this.getDimensionChanges(oldProps, props, changeFlags) || [];\n      // this here is layer\n      dimensionChanges.forEach(f => typeof f === 'function' && f());\n      aggregationDirty = true;\n    }\n    this.setState({aggregationDirty});\n\n    return this.state;\n  }\n\n  // Update private state\n  setState(updateObject) {\n    this.state = {...this.state, ...updateObject};\n  }\n\n  // Update private state.dimensions\n  setDimensionState(key, updateObject) {\n    this.setState({\n      dimensions: {\n        ...this.state.dimensions,\n        [key]: {...this.state.dimensions[key], ...updateObject}\n      }\n    });\n  }\n\n  normalizeResult(result = {}) {\n    // support previous hexagonAggregator API\n    if (result.hexagons) {\n      return {data: result.hexagons, ...result};\n    } else if (result.layerData) {\n      return {data: result.layerData, ...result};\n    }\n\n    return result;\n  }\n\n  getAggregatedData(props, aggregationParams) {\n    const aggregator = this._getAggregator(props);\n\n    const result = aggregator(props, aggregationParams);\n    this.setState({\n      layerData: this.normalizeResult(result)\n    });\n    this.changeFlags = {\n      layerData: true\n    };\n    this.getSortedBins(props);\n  }\n\n  updateGetValueFuncs(oldProps, props, changeFlags) {\n    for (const key in this.dimensionUpdaters) {\n      const {value, weight, aggregation} = this.dimensionUpdaters[key].getBins.triggers;\n      let getValue = props[value.prop];\n      const getValueChanged = this.needUpdateDimensionStep(\n        this.dimensionUpdaters[key].getBins,\n        oldProps,\n        props,\n        changeFlags\n      );\n\n      if (getValueChanged) {\n        if (getValue) {\n          getValue = wrapGetValueFunc(getValue, {data: props.data});\n        } else {\n          // If `getValue` is not provided from props, build it with aggregation and weight.\n          getValue = getValueFunc(props[aggregation.prop], props[weight.prop], {data: props.data});\n        }\n      }\n\n      if (getValue) {\n        this.setDimensionState(key, {getValue});\n      }\n    }\n  }\n\n  needsReProjectPoints(oldProps, props, changeFlags) {\n    return (\n      this._getCellSize(oldProps) !== this._getCellSize(props) ||\n      this._getAggregator(oldProps) !== this._getAggregator(props) ||\n      (changeFlags.updateTriggersChanged &&\n        (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getPosition))\n    );\n  }\n\n  // Adds dimensions\n  addDimension(dimensions) {\n    this._addDimension(dimensions);\n  }\n\n  _addDimension(dimensions = []) {\n    dimensions.forEach(dimension => {\n      const {key} = dimension;\n      this.dimensionUpdaters[key] = this.getDimensionUpdaters(dimension);\n      this.state.dimensions[key] = {\n        getValue: null,\n        domain: null,\n        sortedBins: null,\n        scaleFunc: nop\n      };\n    });\n  }\n\n  getDimensionUpdaters({key, accessor, pickingInfo, getBins, getDomain, getScaleFunc, nullValue}) {\n    return {\n      key,\n      accessor,\n      pickingInfo,\n      getBins: {updater: this.getDimensionSortedBins, ...getBins},\n      getDomain: {updater: this.getDimensionValueDomain, ...getDomain},\n      getScaleFunc: {updater: this.getDimensionScale, ...getScaleFunc},\n      attributeAccessor: this.getSubLayerDimensionAttribute(key, nullValue)\n    };\n  }\n\n  needUpdateDimensionStep(dimensionStep, oldProps, props, changeFlags) {\n    // whether need to update current dimension step\n    // dimension step is the value, domain, scaleFunction of each dimension\n    // each step is an object with properties links to layer prop and whether the prop is\n    // controlled by updateTriggers\n    // getBins: {\n    //   value: {\n    //     prop: 'getElevationValue',\n    //     updateTrigger: 'getElevationValue'\n    //   },\n    //   weight: {\n    //     prop: 'getElevationWeight',\n    //     updateTrigger: 'getElevationWeight'\n    //   },\n    //   aggregation: {\n    //     prop: 'elevationAggregation'\n    //   }\n    // }\n    return Object.values(dimensionStep.triggers).some(item => {\n      if (item.updateTrigger) {\n        // check based on updateTriggers change first\n        // if data has changed, always update value\n        return (\n          changeFlags.dataChanged ||\n          (changeFlags.updateTriggersChanged &&\n            (changeFlags.updateTriggersChanged.all ||\n              changeFlags.updateTriggersChanged[item.updateTrigger]))\n        );\n      }\n      // fallback to direct comparison\n      return oldProps[item.prop] !== props[item.prop];\n    });\n  }\n\n  getDimensionChanges(oldProps, props, changeFlags) {\n    // const {dimensionUpdaters} = this.state;\n    const updaters = [];\n\n    // get dimension to be updated\n    for (const key in this.dimensionUpdaters) {\n      // return the first triggered updater for each dimension\n      const needUpdate = dimensionSteps.find(step =>\n        this.needUpdateDimensionStep(\n          this.dimensionUpdaters[key][step],\n          oldProps,\n          props,\n          changeFlags\n        )\n      );\n\n      if (needUpdate) {\n        updaters.push(\n          this.dimensionUpdaters[key][needUpdate].updater.bind(\n            this,\n            props,\n            this.dimensionUpdaters[key]\n          )\n        );\n      }\n    }\n\n    return updaters.length ? updaters : null;\n  }\n\n  getUpdateTriggers(props) {\n    const _updateTriggers = props.updateTriggers || {};\n    const updateTriggers = {};\n\n    for (const key in this.dimensionUpdaters) {\n      const {accessor} = this.dimensionUpdaters[key];\n      // fold dimension triggers into each accessor\n      updateTriggers[accessor] = {};\n\n      dimensionSteps.forEach(step => {\n        Object.values(this.dimensionUpdaters[key][step].triggers).forEach(\n          ({prop, updateTrigger}) => {\n            if (updateTrigger) {\n              // if prop is based on updateTrigger e.g. getColorValue, getColorWeight\n              // and updateTriggers is passed in from layer prop\n              // fold the updateTriggers into accessor\n              const fromProp = _updateTriggers[updateTrigger];\n              if (typeof fromProp === 'object' && !Array.isArray(fromProp)) {\n                // if updateTrigger is an object spread it\n                Object.assign(updateTriggers[accessor], fromProp);\n              } else if (fromProp !== undefined) {\n                updateTriggers[accessor][prop] = fromProp;\n              }\n            } else {\n              // if prop is not based on updateTrigger\n              updateTriggers[accessor][prop] = props[prop];\n            }\n          }\n        );\n      });\n    }\n\n    return updateTriggers;\n  }\n\n  getSortedBins(props) {\n    for (const key in this.dimensionUpdaters) {\n      this.getDimensionSortedBins(props, this.dimensionUpdaters[key]);\n    }\n  }\n\n  getDimensionSortedBins(props, dimensionUpdater) {\n    const {key} = dimensionUpdater;\n    const {getValue} = this.state.dimensions[key];\n\n    const sortedBins = new BinSorter(this.state.layerData.data || [], {\n      getValue,\n      filterData: props._filterData\n    });\n    this.setDimensionState(key, {sortedBins});\n    this.getDimensionValueDomain(props, dimensionUpdater);\n  }\n\n  getDimensionValueDomain(props, dimensionUpdater) {\n    const {getDomain, key} = dimensionUpdater;\n    const {\n      triggers: {lowerPercentile, upperPercentile, scaleType}\n    } = getDomain;\n    const valueDomain = this.state.dimensions[key].sortedBins.getValueDomainByScale(\n      props[scaleType.prop],\n      [props[lowerPercentile.prop], props[upperPercentile.prop]]\n    );\n\n    this.setDimensionState(key, {valueDomain});\n    this.getDimensionScale(props, dimensionUpdater);\n  }\n\n  getDimensionScale(props, dimensionUpdater) {\n    const {key, getScaleFunc, getDomain} = dimensionUpdater;\n    const {domain, range} = getScaleFunc.triggers;\n    const {scaleType} = getDomain.triggers;\n    const {onSet} = getScaleFunc;\n    const dimensionRange = props[range.prop];\n    const dimensionDomain = props[domain.prop] || this.state.dimensions[key].valueDomain;\n    const getScaleFunction = getScaleFunctionByScaleType(scaleType && props[scaleType.prop]);\n    const scaleFunc = getScaleFunction(dimensionDomain, dimensionRange);\n\n    if (typeof onSet === 'object' && typeof props[onSet.props] === 'function') {\n      props[onSet.props](scaleFunc.domain());\n    }\n\n    this.setDimensionState(key, {scaleFunc});\n  }\n\n  getSubLayerDimensionAttribute(key, nullValue) {\n    return cell => {\n      const {sortedBins, scaleFunc} = this.state.dimensions[key];\n      const bin = sortedBins.binMap[cell.index];\n\n      if (bin && bin.counts === 0) {\n        // no points left in bin after filtering\n        return nullValue;\n      }\n      const cv = bin && bin.value;\n      const domain = scaleFunc.domain();\n\n      const isValueInDomain = cv >= domain[0] && cv <= domain[domain.length - 1];\n\n      // if cell value is outside domain, set alpha to 0\n      return isValueInDomain ? scaleFunc(cv) : nullValue;\n    };\n  }\n\n  getSubLayerAccessors(props) {\n    const accessors = {};\n    for (const key in this.dimensionUpdaters) {\n      const {accessor} = this.dimensionUpdaters[key];\n      accessors[accessor] = this.getSubLayerDimensionAttribute(props, key);\n    }\n\n    return accessors;\n  }\n\n  getPickingInfo({info}) {\n    const isPicked = info.picked && info.index > -1;\n    let object = null;\n\n    if (isPicked) {\n      // const {sortedColorBins, sortedElevationBins} = this.state;\n\n      const cell = this.state.layerData.data[info.index];\n\n      const binInfo = {};\n      for (const key in this.dimensionUpdaters) {\n        const {pickingInfo} = this.dimensionUpdaters[key];\n        const {sortedBins} = this.state.dimensions[key];\n        const value = sortedBins.binMap[cell.index] && sortedBins.binMap[cell.index].value;\n        binInfo[pickingInfo] = value;\n      }\n\n      object = Object.assign(binInfo, cell, {\n        points: cell.filteredPoints || cell.points\n      });\n    }\n\n    // override object with picked cell\n    info.picked = Boolean(object);\n    info.object = object;\n\n    return info;\n  }\n\n  getAccessor(dimensionKey) {\n    if (!this.dimensionUpdaters.hasOwnProperty(dimensionKey)) {\n      return nop;\n    }\n    return this.dimensionUpdaters[dimensionKey].attributeAccessor;\n  }\n}\n","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","// Copyright (c) 2015 - 2019 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nexport function filterProps(props, filterKeys) {\n  const filteredProps = {};\n  for (const key in props) {\n    if (!filterKeys.includes(key)) {\n      filteredProps[key] = props[key];\n    }\n  }\n  return filteredProps;\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {\n  CompositeLayer,\n  AttributeManager,\n  LayerDataSource,\n  _compareProps as compareProps,\n  UpdateParameters,\n  CompositeLayerProps\n} from '@deck.gl/core';\nimport {cssToDeviceRatio} from '@luma.gl/core';\nimport {filterProps} from './utils/prop-utils';\n\nexport type AggregationLayerProps<DataT> = CompositeLayerProps & {\n  data: LayerDataSource<DataT>;\n};\n\nexport default abstract class AggregationLayer<\n  DataT,\n  ExtraPropsT extends {} = {}\n> extends CompositeLayer<Required<AggregationLayer<DataT>> & ExtraPropsT> {\n  static layerName = 'AggregationLayer';\n\n  state!: CompositeLayer['state'] & {\n    ignoreProps?: Record<string, any>;\n    dimensions?: any;\n  };\n\n  initializeAggregationLayer(dimensions: any) {\n    super.initializeState(this.context);\n\n    this.setState({\n      // Layer props , when changed doesn't require updating aggregation\n      ignoreProps: filterProps((this.constructor as any)._propTypes, dimensions.data.props),\n      dimensions\n    });\n  }\n\n  updateState(opts: UpdateParameters<this>) {\n    super.updateState(opts);\n    const {changeFlags} = opts;\n    if (changeFlags.extensionsChanged) {\n      const shaders = this.getShaders({});\n      if (shaders && shaders.defines) {\n        shaders.defines.NON_INSTANCED_MODEL = 1;\n      }\n      this.updateShaders(shaders);\n    }\n\n    // Explictly call to update attributes as 'CompositeLayer' doesn't call this\n    this._updateAttributes();\n  }\n\n  updateAttributes(changedAttributes) {\n    // Super classes, can refer to state.changedAttributes to determine what\n    // attributes changed\n    this.setState({changedAttributes});\n  }\n\n  getAttributes() {\n    return this.getAttributeManager()!.getShaderAttributes();\n  }\n\n  getModuleSettings() {\n    // For regular layer draw this happens during draw cycle (_drawLayersInViewport) not during update cycle\n    // For aggregation layers this is called during updateState to update aggregation data\n    // NOTE: it is similar to LayerPass._getModuleParameters() but doesn't inlcude `effects` it is not needed for aggregation\n    const {viewport, mousePosition, gl} = this.context;\n    const moduleSettings = Object.assign(Object.create(this.props), {\n      viewport,\n      mousePosition,\n      pickingActive: 0,\n      devicePixelRatio: cssToDeviceRatio(gl)\n    });\n    return moduleSettings;\n  }\n\n  updateShaders(shaders) {\n    // Default implemention is empty, subclasses can update their Model objects if needed\n  }\n\n  /**\n   * Checks if aggregation is dirty\n   * @param {Object} updateOpts - object {props, oldProps, changeFlags}\n   * @param {Object} params - object {dimension, compareAll}\n   * @param {Object} params.dimension - {props, accessors} array of props and/or accessors\n   * @param {Boolean} params.compareAll - when `true` it will include non layer props for comparision\n   * @returns {Boolean} - returns true if dimensions' prop or accessor is changed\n   **/\n  isAggregationDirty(\n    updateOpts,\n    params: {compareAll?: boolean; dimension?: any} = {}\n  ): string | boolean {\n    const {props, oldProps, changeFlags} = updateOpts;\n    const {compareAll = false, dimension} = params;\n    const {ignoreProps} = this.state;\n    const {props: dataProps, accessors = []} = dimension;\n    const {updateTriggersChanged} = changeFlags;\n    if (changeFlags.dataChanged) {\n      return true;\n    }\n    if (updateTriggersChanged) {\n      if (updateTriggersChanged.all) {\n        return true;\n      }\n      for (const accessor of accessors) {\n        if (updateTriggersChanged[accessor]) {\n          return true;\n        }\n      }\n    }\n    if (compareAll) {\n      if (changeFlags.extensionsChanged) {\n        return true;\n      }\n      // Compare non layer props too (like extension props)\n      // ignoreprops refers to all Layer props other than aggregation props that need to be comapred\n      return compareProps({\n        oldProps,\n        newProps: props,\n        ignoreProps,\n        propTypes: (this.constructor as any)._propTypes\n      });\n    }\n    // Compare props of the dimension\n    for (const name of dataProps) {\n      if (props[name] !== oldProps[name]) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Checks if an attribute is changed\n   * @param {String} name - name of the attribute\n   * @returns {Boolean} - `true` if attribute `name` is changed, `false` otherwise,\n   *                       If `name` is not passed or `undefiend`, `true` if any attribute is changed, `false` otherwise\n   **/\n  isAttributeChanged(name?: string) {\n    const {changedAttributes} = this.state;\n    if (!name) {\n      // if name not specified return true if any attribute is changed\n      return !isObjectEmpty(changedAttributes);\n    }\n    return changedAttributes && changedAttributes[name] !== undefined;\n  }\n\n  // Private\n\n  // override Composite layer private method to create AttributeManager instance\n  _getAttributeManager() {\n    return new AttributeManager(this.context.gl, {\n      id: this.props.id,\n      stats: this.context.stats\n    });\n  }\n}\n\n// Helper methods\n\n// Returns true if given object is empty, false otherwise.\nfunction isObjectEmpty(obj) {\n  let isEmpty = true;\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  for (const key in obj) {\n    isEmpty = false;\n    break;\n  }\n  return isEmpty;\n}\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","import defineProperty from \"./defineProperty.js\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? Object(arguments[i]) : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {ProgramManager} from '@luma.gl/core';\nimport {gouraudLighting, phongLighting} from '@luma.gl/core';\nimport project from './project/project';\nimport project32 from './project32/project32';\nimport shadow from './shadow/shadow';\nimport picking from './picking/picking';\n\nconst DEFAULT_MODULES = [project];\n\nconst SHADER_HOOKS = [\n  'vs:DECKGL_FILTER_SIZE(inout vec3 size, VertexGeometry geometry)',\n  'vs:DECKGL_FILTER_GL_POSITION(inout vec4 position, VertexGeometry geometry)',\n  'vs:DECKGL_FILTER_COLOR(inout vec4 color, VertexGeometry geometry)',\n  'fs:DECKGL_FILTER_COLOR(inout vec4 color, FragmentGeometry geometry)'\n];\n\nexport function createProgramManager(gl) {\n  const programManager = ProgramManager.getDefaultProgramManager(gl);\n\n  for (const shaderModule of DEFAULT_MODULES) {\n    programManager.addDefaultModule(shaderModule);\n  }\n  for (const shaderHook of SHADER_HOOKS) {\n    programManager.addShaderHook(shaderHook);\n  }\n\n  return programManager;\n}\n\nexport {picking, project, project32, gouraudLighting, phongLighting, shadow};\n\n// Useful for custom shader modules\nexport type {ProjectUniforms} from './project/viewport-uniforms';\n\n// TODO - these should be imported from luma.gl\n/* eslint-disable camelcase */\nexport type PickingUniforms = {\n  picking_uActive: boolean;\n  picking_uAttribute: boolean;\n  picking_uSelectedColor: [number, number, number];\n  picking_uSelectedColorValid: boolean;\n  picking_uHighlightColor: [number, number, number, number];\n};\n\nexport type LightingModuleSettings = {\n  material:\n    | boolean\n    | {\n        ambient?: number;\n        diffuse?: number;\n        shininess?: number;\n        specularColor?: [number, number, number];\n      };\n};\n","import {CompositeLayer, Layer} from '@deck.gl/core';\n\nimport IconLayer from '../icon-layer/icon-layer';\nimport ScatterplotLayer from '../scatterplot-layer/scatterplot-layer';\nimport TextLayer from '../text-layer/text-layer';\nimport PathLayer from '../path-layer/path-layer';\nimport SolidPolygonLayer from '../solid-polygon-layer/solid-polygon-layer';\n\nexport const POINT_LAYER = {\n  circle: {\n    type: ScatterplotLayer,\n    props: {\n      filled: 'filled',\n      stroked: 'stroked',\n\n      lineWidthMaxPixels: 'lineWidthMaxPixels',\n      lineWidthMinPixels: 'lineWidthMinPixels',\n      lineWidthScale: 'lineWidthScale',\n      lineWidthUnits: 'lineWidthUnits',\n      pointRadiusMaxPixels: 'radiusMaxPixels',\n      pointRadiusMinPixels: 'radiusMinPixels',\n      pointRadiusScale: 'radiusScale',\n      pointRadiusUnits: 'radiusUnits',\n      pointAntialiasing: 'antialiasing',\n      pointBillboard: 'billboard',\n\n      getFillColor: 'getFillColor',\n      getLineColor: 'getLineColor',\n      getLineWidth: 'getLineWidth',\n      getPointRadius: 'getRadius'\n    }\n  },\n  icon: {\n    type: IconLayer,\n    props: {\n      iconAtlas: 'iconAtlas',\n      iconMapping: 'iconMapping',\n\n      iconSizeMaxPixels: 'sizeMaxPixels',\n      iconSizeMinPixels: 'sizeMinPixels',\n      iconSizeScale: 'sizeScale',\n      iconSizeUnits: 'sizeUnits',\n      iconAlphaCutoff: 'alphaCutoff',\n      iconBillboard: 'billboard',\n\n      getIcon: 'getIcon',\n      getIconAngle: 'getAngle',\n      getIconColor: 'getColor',\n      getIconPixelOffset: 'getPixelOffset',\n      getIconSize: 'getSize'\n    }\n  },\n  text: {\n    type: TextLayer,\n    props: {\n      textSizeMaxPixels: 'sizeMaxPixels',\n      textSizeMinPixels: 'sizeMinPixels',\n      textSizeScale: 'sizeScale',\n      textSizeUnits: 'sizeUnits',\n\n      textBackground: 'background',\n      textBackgroundPadding: 'backgroundPadding',\n      textFontFamily: 'fontFamily',\n      textFontWeight: 'fontWeight',\n      textLineHeight: 'lineHeight',\n      textMaxWidth: 'maxWidth',\n      textOutlineColor: 'outlineColor',\n      textOutlineWidth: 'outlineWidth',\n      textWordBreak: 'wordBreak',\n      textCharacterSet: 'characterSet',\n      textBillboard: 'billboard',\n      textFontSettings: 'fontSettings',\n\n      getText: 'getText',\n      getTextAngle: 'getAngle',\n      getTextColor: 'getColor',\n      getTextPixelOffset: 'getPixelOffset',\n      getTextSize: 'getSize',\n      getTextAnchor: 'getTextAnchor',\n      getTextAlignmentBaseline: 'getAlignmentBaseline',\n      getTextBackgroundColor: 'getBackgroundColor',\n      getTextBorderColor: 'getBorderColor',\n      getTextBorderWidth: 'getBorderWidth'\n    }\n  }\n};\n\nexport const LINE_LAYER = {\n  type: PathLayer,\n  props: {\n    lineWidthUnits: 'widthUnits',\n    lineWidthScale: 'widthScale',\n    lineWidthMinPixels: 'widthMinPixels',\n    lineWidthMaxPixels: 'widthMaxPixels',\n    lineJointRounded: 'jointRounded',\n    lineCapRounded: 'capRounded',\n    lineMiterLimit: 'miterLimit',\n    lineBillboard: 'billboard',\n\n    getLineColor: 'getColor',\n    getLineWidth: 'getWidth'\n  }\n};\n\nexport const POLYGON_LAYER = {\n  type: SolidPolygonLayer,\n  props: {\n    extruded: 'extruded',\n    filled: 'filled',\n    wireframe: 'wireframe',\n    elevationScale: 'elevationScale',\n    material: 'material',\n    _full3d: '_full3d',\n\n    getElevation: 'getElevation',\n    getFillColor: 'getFillColor',\n    getLineColor: 'getLineColor'\n  }\n};\n\nexport function getDefaultProps({\n  type,\n  props\n}: {\n  type: typeof Layer;\n  props: Record<string, string>;\n}): Record<string, any> {\n  const result = {};\n  for (const key in props) {\n    result[key] = type.defaultProps[props[key]];\n  }\n  return result;\n}\n\nexport function forwardProps(\n  layer: CompositeLayer,\n  mapping: Record<string, string>\n): Record<string, any> {\n  const {transitions, updateTriggers} = layer.props;\n  const result: Record<string, any> = {\n    updateTriggers: {},\n    transitions: transitions && {\n      getPosition: transitions.geometry\n    }\n  };\n\n  for (const sourceKey in mapping) {\n    const targetKey = mapping[sourceKey];\n    let value = layer.props[sourceKey];\n    if (sourceKey.startsWith('get')) {\n      // isAccessor\n      value = (layer as any).getSubLayerAccessor(value);\n      result.updateTriggers[targetKey] = updateTriggers[sourceKey];\n      if (transitions) {\n        result.transitions[targetKey] = transitions[sourceKey];\n      }\n    }\n    result[targetKey] = value;\n  }\n  return result;\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport {log} from '@deck.gl/core';\nimport type {\n  Feature,\n  GeoJSON,\n  GeoJsonGeometryTypes,\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon\n} from 'geojson';\n\ntype SupportedGeometry = Point | MultiPoint | LineString | MultiLineString | Polygon | MultiPolygon;\n\nexport type SeparatedGeometries = {\n  pointFeatures: {geometry: Point}[];\n  lineFeatures: {geometry: LineString}[];\n  polygonFeatures: {geometry: Polygon}[];\n  polygonOutlineFeatures: {geometry: LineString}[];\n};\n\n/**\n * \"Normalizes\" complete or partial GeoJSON data into iterable list of features\n * Can accept GeoJSON geometry or \"Feature\", \"FeatureCollection\" in addition\n * to plain arrays and iterables.\n * Works by extracting the feature array or wrapping single objects in an array,\n * so that subsequent code can simply iterate over features.\n *\n * @param {object} geojson - geojson data\n * @param {Object|Array} data - geojson object (FeatureCollection, Feature or\n *  Geometry) or array of features\n * @return {Array|\"iteratable\"} - iterable list of features\n */\nexport function getGeojsonFeatures(geojson: GeoJSON): Feature[] {\n  // If array, assume this is a list of features\n  if (Array.isArray(geojson)) {\n    return geojson;\n  }\n\n  log.assert(geojson.type, 'GeoJSON does not have type');\n\n  switch (geojson.type) {\n    case 'Feature':\n      // Wrap the feature in a 'Features' array\n      return [geojson];\n    case 'FeatureCollection':\n      // Just return the 'Features' array from the collection\n      log.assert(Array.isArray(geojson.features), 'GeoJSON does not have features array');\n      return geojson.features;\n    default:\n      // Assume it's a geometry, we'll check type in separateGeojsonFeatures\n      // Wrap the geometry object in a 'Feature' object and wrap in an array\n      return [{geometry: geojson}] as Feature[];\n  }\n}\n\n// Linearize\nexport function separateGeojsonFeatures(\n  features: Feature[],\n  wrapFeature: <T>(row: T, sourceObject: any, sourceObjectIndex: number) => T,\n  dataRange: {startRow?: number; endRow?: number} = {}\n): SeparatedGeometries {\n  const separated: SeparatedGeometries = {\n    pointFeatures: [],\n    lineFeatures: [],\n    polygonFeatures: [],\n    polygonOutlineFeatures: []\n  };\n  const {startRow = 0, endRow = features.length} = dataRange;\n\n  for (let featureIndex = startRow; featureIndex < endRow; featureIndex++) {\n    const feature = features[featureIndex];\n    const {geometry} = feature;\n\n    if (!geometry) {\n      // geometry can be null per specification\n      continue; // eslint-disable-line no-continue\n    }\n\n    if (geometry.type === 'GeometryCollection') {\n      log.assert(Array.isArray(geometry.geometries), 'GeoJSON does not have geometries array');\n      const {geometries} = geometry;\n      for (let i = 0; i < geometries.length; i++) {\n        const subGeometry = geometries[i];\n        separateGeometry(\n          subGeometry as SupportedGeometry,\n          separated,\n          wrapFeature,\n          feature,\n          featureIndex\n        );\n      }\n    } else {\n      separateGeometry(geometry, separated, wrapFeature, feature, featureIndex);\n    }\n  }\n\n  return separated;\n}\n\nfunction separateGeometry(\n  geometry: SupportedGeometry,\n  separated: SeparatedGeometries,\n  wrapFeature: <T>(row: T, sourceObject: any, sourceObjectIndex: number) => T,\n  sourceFeature: Feature,\n  sourceFeatureIndex: number\n) {\n  const {type, coordinates} = geometry;\n  const {pointFeatures, lineFeatures, polygonFeatures, polygonOutlineFeatures} = separated;\n\n  if (!validateGeometry(type, coordinates)) {\n    // Avoid hard failure if some features are malformed\n    log.warn(`${type} coordinates are malformed`)();\n    return;\n  }\n\n  // Split each feature, but keep track of the source feature and index (for Multi* geometries)\n  switch (type) {\n    case 'Point':\n      pointFeatures.push(\n        wrapFeature(\n          {\n            geometry\n          },\n          sourceFeature,\n          sourceFeatureIndex\n        )\n      );\n      break;\n    case 'MultiPoint':\n      coordinates.forEach(point => {\n        pointFeatures.push(\n          wrapFeature(\n            {\n              geometry: {type: 'Point', coordinates: point}\n            },\n            sourceFeature,\n            sourceFeatureIndex\n          )\n        );\n      });\n      break;\n    case 'LineString':\n      lineFeatures.push(\n        wrapFeature(\n          {\n            geometry\n          },\n          sourceFeature,\n          sourceFeatureIndex\n        )\n      );\n      break;\n    case 'MultiLineString':\n      // Break multilinestrings into multiple lines\n      coordinates.forEach(path => {\n        lineFeatures.push(\n          wrapFeature(\n            {\n              geometry: {type: 'LineString', coordinates: path}\n            },\n            sourceFeature,\n            sourceFeatureIndex\n          )\n        );\n      });\n      break;\n    case 'Polygon':\n      polygonFeatures.push(\n        wrapFeature(\n          {\n            geometry\n          },\n          sourceFeature,\n          sourceFeatureIndex\n        )\n      );\n      // Break polygon into multiple lines\n      coordinates.forEach(path => {\n        polygonOutlineFeatures.push(\n          wrapFeature(\n            {\n              geometry: {type: 'LineString', coordinates: path}\n            },\n            sourceFeature,\n            sourceFeatureIndex\n          )\n        );\n      });\n      break;\n    case 'MultiPolygon':\n      // Break multipolygons into multiple polygons\n      coordinates.forEach(polygon => {\n        polygonFeatures.push(\n          wrapFeature(\n            {\n              geometry: {type: 'Polygon', coordinates: polygon}\n            },\n            sourceFeature,\n            sourceFeatureIndex\n          )\n        );\n        // Break polygon into multiple lines\n        polygon.forEach(path => {\n          polygonOutlineFeatures.push(\n            wrapFeature(\n              {\n                geometry: {type: 'LineString', coordinates: path}\n              },\n              sourceFeature,\n              sourceFeatureIndex\n            )\n          );\n        });\n      });\n      break;\n    default:\n  }\n}\n\n/**\n * Simple GeoJSON validation util. For perf reasons we do not validate against the full spec,\n * only the following:\n   - geometry.type is supported\n   - geometry.coordinate has correct nesting level\n */\nconst COORDINATE_NEST_LEVEL: Record<SupportedGeometry['type'], number> = {\n  Point: 1,\n  MultiPoint: 2,\n  LineString: 2,\n  MultiLineString: 3,\n  Polygon: 3,\n  MultiPolygon: 4\n};\n\nexport function validateGeometry(type: GeoJsonGeometryTypes, coordinates: any): boolean {\n  let nestLevel = COORDINATE_NEST_LEVEL[type] as number;\n\n  log.assert(nestLevel, `Unknown GeoJSON type ${type}`);\n\n  while (coordinates && --nestLevel > 0) {\n    coordinates = coordinates[0];\n  }\n\n  return coordinates && Number.isFinite(coordinates[0]);\n}\n","import {BinaryAttribute, LayerData, LayerProps} from '@deck.gl/core';\nimport {PolygonLayerProps, ScatterplotLayerProps} from '..';\nimport {calculatePickingColors} from './geojson-binary';\nimport {BinaryFeatures} from '@loaders.gl/schema';\nimport {SeparatedGeometries} from './geojson';\n\n// TODO: PathLayer is not yet typed\ntype PathLayerProps = LayerProps & Record<string, any>;\n\ntype SubLayersProps = {\n  points: Partial<ScatterplotLayerProps>;\n  lines: Partial<PathLayerProps>;\n  polygons: Partial<PolygonLayerProps>;\n  polygonsOutline: Partial<PathLayerProps>;\n};\n\ntype ExtendedBinaryFeatures = {\n  [P in keyof BinaryFeatures]: BinaryFeatures[P] & {attributes?: Record<string, BinaryAttribute>};\n};\n\nfunction createEmptyLayerProps(): SubLayersProps {\n  return {\n    points: {},\n    lines: {},\n    polygons: {},\n    polygonsOutline: {}\n  };\n}\n\nfunction getCoordinates(f) {\n  return f.geometry.coordinates;\n}\n\nexport function createLayerPropsFromFeatures(\n  features: SeparatedGeometries,\n  featuresDiff\n): SubLayersProps {\n  const layerProps = createEmptyLayerProps();\n  const {pointFeatures, lineFeatures, polygonFeatures, polygonOutlineFeatures} = features;\n\n  layerProps.points.data = pointFeatures;\n  layerProps.points._dataDiff = featuresDiff.pointFeatures && (() => featuresDiff.pointFeatures);\n  layerProps.points.getPosition = getCoordinates;\n\n  layerProps.lines.data = lineFeatures;\n  layerProps.lines._dataDiff = featuresDiff.lineFeatures && (() => featuresDiff.lineFeatures);\n  layerProps.lines.getPath = getCoordinates;\n\n  layerProps.polygons.data = polygonFeatures;\n  layerProps.polygons._dataDiff =\n    featuresDiff.polygonFeatures && (() => featuresDiff.polygonFeatures);\n  layerProps.polygons.getPolygon = getCoordinates;\n\n  layerProps.polygonsOutline.data = polygonOutlineFeatures;\n  layerProps.polygonsOutline._dataDiff =\n    featuresDiff.polygonOutlineFeatures && (() => featuresDiff.polygonOutlineFeatures);\n  layerProps.polygonsOutline.getPath = getCoordinates;\n\n  return layerProps;\n}\n\nexport function createLayerPropsFromBinary(\n  geojsonBinary: Required<ExtendedBinaryFeatures>,\n  encodePickingColor\n): SubLayersProps {\n  // The binary data format is documented here\n  // https://github.com/visgl/loaders.gl/blob/master/modules/gis/docs/api-reference/geojson-to-binary.md\n  // It is the default output from the `MVTLoader` and can also be obtained\n  // from GeoJSON by using the `geojsonToBinary` utility function.\n  const layerProps = createEmptyLayerProps();\n  const {points, lines, polygons} = geojsonBinary;\n\n  const customPickingColors = calculatePickingColors(geojsonBinary, encodePickingColor);\n\n  layerProps.points.data = {\n    length: points.positions.value.length / points.positions.size,\n    attributes: {\n      ...points.attributes,\n      getPosition: points.positions,\n      instancePickingColors: {\n        size: 3,\n        value: customPickingColors.points!\n      }\n    },\n    properties: points.properties,\n    numericProps: points.numericProps,\n    featureIds: points.featureIds\n  } as LayerData<any>;\n\n  layerProps.lines.data = {\n    length: lines.pathIndices.value.length - 1,\n    startIndices: lines.pathIndices.value,\n    attributes: {\n      ...lines.attributes,\n      getPath: lines.positions,\n      instancePickingColors: {\n        size: 3,\n        value: customPickingColors.lines!\n      }\n    },\n    properties: lines.properties,\n    numericProps: lines.numericProps,\n    featureIds: lines.featureIds\n  } as LayerData<any>;\n  layerProps.lines._pathType = 'open';\n\n  layerProps.polygons.data = {\n    length: polygons.polygonIndices.value.length - 1,\n    startIndices: polygons.polygonIndices.value,\n    attributes: {\n      ...polygons.attributes,\n      getPolygon: polygons.positions,\n      pickingColors: {\n        size: 3,\n        value: customPickingColors.polygons!\n      }\n    },\n    properties: polygons.properties,\n    numericProps: polygons.numericProps,\n    featureIds: polygons.featureIds\n  } as LayerData<any>;\n  layerProps.polygons._normalize = false;\n  if (polygons.triangles) {\n    (layerProps.polygons.data as any).attributes.indices = polygons.triangles.value;\n  }\n\n  layerProps.polygonsOutline.data = {\n    length: polygons.primitivePolygonIndices.value.length - 1,\n    startIndices: polygons.primitivePolygonIndices.value,\n    attributes: {\n      ...polygons.attributes,\n      getPath: polygons.positions,\n      instancePickingColors: {\n        size: 3,\n        value: customPickingColors.polygons!\n      }\n    },\n    properties: polygons.properties,\n    numericProps: polygons.numericProps,\n    featureIds: polygons.featureIds\n  } as LayerData<any>;\n  layerProps.polygonsOutline._pathType = 'open';\n\n  return layerProps;\n}\n","// This module implement some utility functions to work with\n// the geojson-binary format defined at loaders.gl:\n// https://github.com/visgl/loaders.gl/blob/master/modules/gis/docs/api-reference/geojson-to-binary.md\n\nimport {\n  BinaryFeatures,\n  BinaryLineFeatures,\n  BinaryPointFeatures,\n  BinaryPolygonFeatures,\n  Feature\n} from '@loaders.gl/schema';\n\nexport type BinaryFeatureTypes = BinaryPointFeatures | BinaryLineFeatures | BinaryPolygonFeatures;\n\ntype FeaureOnlyProperties = Pick<Feature, 'properties'>;\n\n/**\n * Return the feature for an accesor\n */\nexport function binaryToFeatureForAccesor(\n  data: BinaryFeatureTypes,\n  index: number\n): FeaureOnlyProperties | null {\n  if (!data) {\n    return null;\n  }\n\n  const featureIndex = 'startIndices' in data ? (data as any).startIndices[index] : index;\n  const geometryIndex = data.featureIds.value[featureIndex];\n\n  if (featureIndex !== -1) {\n    return getPropertiesForIndex(data, geometryIndex, featureIndex);\n  }\n\n  return null;\n}\n\nfunction getPropertiesForIndex(\n  data: BinaryFeatureTypes,\n  propertiesIndex: number,\n  numericPropsIndex: number\n): FeaureOnlyProperties {\n  const feature = {\n    properties: {...data.properties[propertiesIndex]}\n  };\n\n  for (const prop in data.numericProps) {\n    feature.properties[prop] = data.numericProps[prop].value[numericPropsIndex];\n  }\n\n  return feature;\n}\n\n// Custom picking color to keep binary indexes\nexport function calculatePickingColors(\n  geojsonBinary: BinaryFeatures,\n  encodePickingColor: (id: number, result: number[]) => void\n): Record<string, Uint8ClampedArray | null> {\n  const pickingColors: Record<string, Uint8ClampedArray | null> = {\n    points: null,\n    lines: null,\n    polygons: null\n  };\n  for (const key in pickingColors) {\n    const featureIds = geojsonBinary[key].globalFeatureIds.value;\n    pickingColors[key] = new Uint8ClampedArray(featureIds.length * 3);\n    const pickingColor = [];\n    for (let i = 0; i < featureIds.length; i++) {\n      encodePickingColor(featureIds[i], pickingColor);\n      pickingColors[key]![i * 3 + 0] = pickingColor[0];\n      pickingColors[key]![i * 3 + 1] = pickingColor[1];\n      pickingColors[key]![i * 3 + 2] = pickingColor[2];\n    }\n  }\n\n  return pickingColors;\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {\n  Accessor,\n  Color,\n  CompositeLayer,\n  CompositeLayerProps,\n  Layer,\n  PickingInfo,\n  Unit,\n  Material,\n  UpdateParameters,\n  _ConstructorOf,\n  DefaultProps\n} from '@deck.gl/core';\n\nimport type {BinaryFeatures} from '@loaders.gl/schema';\nimport type {Feature, GeoJSON} from 'geojson';\n\nimport {replaceInRange} from '../utils';\nimport {BinaryFeatureTypes, binaryToFeatureForAccesor} from './geojson-binary';\nimport {\n  POINT_LAYER,\n  LINE_LAYER,\n  POLYGON_LAYER,\n  getDefaultProps,\n  forwardProps\n} from './sub-layer-map';\n\nimport {getGeojsonFeatures, SeparatedGeometries, separateGeojsonFeatures} from './geojson';\nimport {createLayerPropsFromFeatures, createLayerPropsFromBinary} from './geojson-layer-props';\n\n/** All properties supported by GeoJsonLayer */\nexport type GeoJsonLayerProps = _GeoJsonLayerProps & CompositeLayerProps;\n\n/** Properties added by GeoJsonLayer */\nexport type _GeoJsonLayerProps = {\n  data: string | GeoJSON | BinaryFeatures | Promise<GeoJSON | BinaryFeatures>;\n  /**\n   * How to render Point and MultiPoint features in the data.\n   *\n   * Supported types are:\n   *  * `'circle'`\n   *  * `'icon'`\n   *  * `'text'`\n   *\n   * @default 'circle'\n   */\n  pointType?: string;\n} & _GeoJsonLayerFillProps &\n  _GeoJsonLayerStrokeProps &\n  _GeoJsonLayer3DProps &\n  _GeoJsonLayerPointCircleProps &\n  _GeojsonLayerIconPointProps &\n  _GeojsonLayerTextPointProps;\n\n/** GeoJsonLayer fill options. */\ntype _GeoJsonLayerFillProps = {\n  /**\n   * Whether to draw a filled polygon (solid fill).\n   *\n   * Note that only the area between the outer polygon and any holes will be filled.\n   *\n   * @default true\n   */\n  filled?: boolean;\n\n  /**\n   * Fill collor value or accessor.\n   *\n   * @default [0, 0, 0, 255]\n   */\n  getFillColor?: Accessor<Feature, Color>;\n};\n\n/** GeoJsonLayer stroke options. */\ntype _GeoJsonLayerStrokeProps = {\n  /**\n   * Whether to draw an outline around the polygon (solid fill).\n   *\n   * Note that both the outer polygon as well the outlines of any holes will be drawn.\n   *\n   * @default true\n   */\n  stroked?: boolean;\n\n  /**\n   * Line color value or accessor.\n   *\n   * @default [0, 0, 0, 255]\n   */\n  getLineColor?: Accessor<Feature, Color>;\n\n  /**\n   * Line width value or accessor.\n   *\n   * @default [0, 0, 0, 255]\n   */\n  getLineWidth?: Accessor<Feature, number>;\n\n  /**\n   * The units of the line width, one of `meters`, `common`, and `pixels`.\n   *\n   * @default 'meters'\n   * @see Unit.\n   */\n  lineWidthUnits?: Unit;\n\n  /**\n   * A multiplier that is applied to all line widths\n   *\n   * @default 1\n   */\n  lineWidthScale?: number;\n\n  /**\n   * The minimum line width in pixels.\n   *\n   * @default 0\n   */\n  lineWidthMinPixels?: number;\n\n  /**\n   * The maximum line width in pixels\n   *\n   * @default Number.MAX_SAFE_INTEGER\n   */\n  lineWidthMaxPixels?: number;\n\n  /**\n   * Type of joint. If `true`, draw round joints. Otherwise draw miter joints.\n   *\n   * @default false\n   */\n  lineJointRounded?: boolean;\n\n  /**\n   * The maximum extent of a joint in ratio to the stroke width.\n   *\n   * Only works if `lineJointRounded` is false.\n   *\n   * @default 4\n   */\n  lineMiterLimit?: number;\n\n  /**\n   * Type of line caps.\n   *\n   * If `true`, draw round caps. Otherwise draw square caps.\n   *\n   * @default false\n   */\n  lineCapRounded?: boolean;\n\n  /**\n   * If `true`, extrude the line in screen space (width always faces the camera).\n   * If `false`, the width always faces up.\n   *\n   * @default false\n   */\n  lineBillboard?: boolean;\n};\n\n/** GeoJsonLayer 3D options. */\ntype _GeoJsonLayer3DProps = {\n  /**\n   * Extrude Polygon and MultiPolygon features along the z-axis if set to true\n   *\n   * Based on the elevations provided by the `getElevation` accessor.\n   *\n   * @default false\n   */\n  extruded?: boolean;\n\n  /**\n   * Whether to generate a line wireframe of the hexagon.\n   *\n   * @default false\n   */\n  wireframe?: boolean;\n\n  /**\n   * (Experimental) This prop is only effective with `XYZ` data.\n   * When true, polygon tesselation will be performed on the plane with the largest area, instead of the xy plane.\n   * @default false\n   */\n  _full3d?: boolean;\n\n  /**\n   * Elevation valur or accessor.\n   *\n   * Only used if `extruded: true`.\n   *\n   * @default 1000\n   */\n  getElevation?: Accessor<Feature, number>;\n\n  /**\n   * Elevation multiplier.\n   *\n   * The final elevation is calculated by `elevationScale * getElevation(d)`.\n   * `elevationScale` is a handy property to scale all elevation without updating the data.\n   *\n   * @default 1\n   */\n  elevationScale?: boolean;\n\n  /**\n   * Material settings for lighting effect. Applies to extruded polgons.\n   *\n   * @default true\n   * @see https://deck.gl/docs/developer-guide/using-lighting\n   */\n  material?: Material;\n};\n\n/** GeoJsonLayer Properties forwarded to `ScatterPlotLayer` if `pointType` is `'circle'` */\nexport type _GeoJsonLayerPointCircleProps = {\n  getPointRadius?: Accessor<Feature, number>;\n  pointRadiusUnits?: Unit;\n  pointRadiusScale?: number;\n  pointRadiusMinPixels?: number;\n  pointRadiusMaxPixels?: number;\n  pointAntialiasing?: boolean;\n  pointBillboard?: boolean;\n\n  /** @deprecated use getPointRadius */\n  getRadius?: Accessor<Feature, number>;\n};\n\n/** GeoJsonLayer properties forwarded to `IconLayer` if `pointType` is `'icon'` */\ntype _GeojsonLayerIconPointProps = {\n  iconAtlas?: any;\n  iconMapping?: any;\n  getIcon?: Accessor<Feature, any>;\n  getIconSize?: Accessor<Feature, number>;\n  getIconColor?: Accessor<Feature, Color>;\n  getIconAngle?: Accessor<Feature, number>;\n  getIconPixelOffset?: Accessor<Feature, number[]>;\n  iconSizeUnits?: Unit;\n  iconSizeScale?: number;\n  iconSizeMinPixels?: number;\n  iconSizeMaxPixels?: number;\n  iconBillboard?: boolean;\n  iconAlphaCutoff?: number;\n};\n\n/** GeoJsonLayer properties forwarded to `TextLayer` if `pointType` is `'text'` */\ntype _GeojsonLayerTextPointProps = {\n  getText?: Accessor<Feature, any>;\n  getTextColor?: Accessor<Feature, Color>;\n  getTextAngle?: Accessor<Feature, number>;\n  getTextSize?: Accessor<Feature, number>;\n  getTextAnchor?: Accessor<Feature, string>;\n  getTextAlignmentBaseline?: Accessor<Feature, string>;\n  getTextPixelOffset?: Accessor<Feature, number[]>;\n  getTextBackgroundColor?: Accessor<Feature, Color>;\n  getTextBorderColor?: Accessor<Feature, Color>;\n  getTextBorderWidth?: Accessor<Feature, number>;\n  textSizeUnits?: Unit;\n  textSizeScale?: number;\n  textSizeMinPixels?: number;\n  textSizeMaxPixels?: number;\n  textCharacterSet?: any;\n  textFontFamily?: string;\n  textFontWeight?: number;\n  textLineHeight?: number;\n  textMaxWidth?: number;\n  textWordBreak?: string; // TODO\n  textBackground?: boolean;\n  textBackgroundPadding?: number[];\n  textOutlineColor?: Color;\n  textOutlineWidth?: number;\n  textBillboard?: boolean;\n  textFontSettings?: any;\n};\n\nconst FEATURE_TYPES = ['points', 'linestrings', 'polygons'];\n\nconst defaultProps: DefaultProps<GeoJsonLayerProps> = {\n  ...getDefaultProps(POINT_LAYER.circle),\n  ...getDefaultProps(POINT_LAYER.icon),\n  ...getDefaultProps(POINT_LAYER.text),\n  ...getDefaultProps(LINE_LAYER),\n  ...getDefaultProps(POLYGON_LAYER),\n\n  // Overwrite sub layer defaults\n  stroked: true,\n  filled: true,\n  extruded: false,\n  wireframe: false,\n  _full3d: false,\n  iconAtlas: {type: 'object', value: null},\n  iconMapping: {type: 'object', value: {}},\n  getIcon: {type: 'accessor', value: f => f.properties.icon},\n  getText: {type: 'accessor', value: f => f.properties.text},\n\n  // Self props\n  pointType: 'circle',\n\n  // TODO: deprecated, remove in v9\n  getRadius: {deprecatedFor: 'getPointRadius'}\n};\n\ntype GeoJsonPickingInfo = PickingInfo & {\n  featureType?: string | null;\n  info?: any;\n};\n\n/** Render GeoJSON formatted data as polygons, lines and points (circles, icons and/or texts). */\nexport default class GeoJsonLayer<ExtraProps extends {} = {}> extends CompositeLayer<\n  Required<GeoJsonLayerProps> & ExtraProps\n> {\n  static layerName = 'GeoJsonLayer';\n  static defaultProps = defaultProps;\n\n  initializeState(): void {\n    this.state = {\n      layerProps: {},\n      features: {}\n    };\n  }\n\n  updateState({props, changeFlags}: UpdateParameters<this>): void {\n    if (!changeFlags.dataChanged) {\n      return;\n    }\n    const {data} = this.props;\n    const binary =\n      data && 'points' in (data as {}) && 'polygons' in (data as {}) && 'lines' in (data as {});\n\n    this.setState({binary});\n\n    if (binary) {\n      this._updateStateBinary({props, changeFlags});\n    } else {\n      this._updateStateJSON({props, changeFlags});\n    }\n  }\n\n  private _updateStateBinary({props, changeFlags}): void {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    const layerProps = createLayerPropsFromBinary(props.data, this.encodePickingColor);\n    this.setState({layerProps});\n  }\n\n  private _updateStateJSON({props, changeFlags}): void {\n    const features: Feature[] = getGeojsonFeatures(props.data) as any;\n    const wrapFeature = this.getSubLayerRow.bind(this);\n    let newFeatures: SeparatedGeometries = {} as SeparatedGeometries;\n    const featuresDiff = {};\n\n    if (Array.isArray(changeFlags.dataChanged)) {\n      const oldFeatures = this.state.features;\n      for (const key in oldFeatures) {\n        newFeatures[key] = oldFeatures[key].slice();\n        featuresDiff[key] = [];\n      }\n\n      for (const dataRange of changeFlags.dataChanged) {\n        const partialFeatures = separateGeojsonFeatures(features, wrapFeature, dataRange);\n        for (const key in oldFeatures) {\n          featuresDiff[key].push(\n            replaceInRange({\n              data: newFeatures[key],\n              getIndex: f => f.__source.index,\n              dataRange,\n              replace: partialFeatures[key]\n            })\n          );\n        }\n      }\n    } else {\n      newFeatures = separateGeojsonFeatures(features, wrapFeature);\n    }\n\n    const layerProps = createLayerPropsFromFeatures(newFeatures, featuresDiff);\n\n    this.setState({\n      features: newFeatures,\n      featuresDiff,\n      layerProps\n    });\n  }\n\n  getPickingInfo(params): GeoJsonPickingInfo {\n    const info = super.getPickingInfo(params) as GeoJsonPickingInfo;\n    const {index, sourceLayer} = info;\n    info.featureType = FEATURE_TYPES.find(ft => sourceLayer!.id.startsWith(`${this.id}-${ft}-`));\n    if (index >= 0 && sourceLayer!.id.startsWith(`${this.id}-points-text`) && this.state.binary) {\n      info.index = (this.props.data as BinaryFeatures).points!.globalFeatureIds.value[index];\n    }\n    return info;\n  }\n\n  _updateAutoHighlight(info: GeoJsonPickingInfo): void {\n    // All sub layers except the points layer use source feature index to encode the picking color\n    // The points layer uses indices from the points data array.\n    const pointLayerIdPrefix = `${this.id}-points-`;\n    const sourceIsPoints = info.featureType === 'points';\n    for (const layer of this.getSubLayers()) {\n      if (layer.id.startsWith(pointLayerIdPrefix) === sourceIsPoints) {\n        layer.updateAutoHighlight(info);\n      }\n    }\n  }\n\n  private _renderPolygonLayer(): Layer | null {\n    const {extruded, wireframe} = this.props;\n    const {layerProps} = this.state;\n    const id = 'polygons-fill';\n\n    const PolygonFillLayer =\n      this.shouldRenderSubLayer(id, layerProps.polygons.data) &&\n      this.getSubLayerClass(id, POLYGON_LAYER.type);\n\n    if (PolygonFillLayer) {\n      const forwardedProps = forwardProps(this, POLYGON_LAYER.props);\n      // Avoid building the lineColors attribute if wireframe is off\n      const useLineColor = extruded && wireframe;\n      if (!useLineColor) {\n        delete forwardedProps.getLineColor;\n      }\n      // using a legacy API to invalid lineColor attributes\n      forwardedProps.updateTriggers.lineColors = useLineColor;\n\n      return new PolygonFillLayer(\n        forwardedProps,\n        this.getSubLayerProps({\n          id,\n          updateTriggers: forwardedProps.updateTriggers\n        }),\n        layerProps.polygons\n      );\n    }\n    return null;\n  }\n\n  private _renderLineLayers(): (Layer | false)[] | null {\n    const {extruded, stroked} = this.props;\n    const {layerProps} = this.state;\n    const polygonStrokeLayerId = 'polygons-stroke';\n    const lineStringsLayerId = 'linestrings';\n\n    const PolygonStrokeLayer =\n      !extruded &&\n      stroked &&\n      this.shouldRenderSubLayer(polygonStrokeLayerId, layerProps.polygonsOutline.data) &&\n      this.getSubLayerClass(polygonStrokeLayerId, LINE_LAYER.type);\n    const LineStringsLayer =\n      this.shouldRenderSubLayer(lineStringsLayerId, layerProps.lines.data) &&\n      this.getSubLayerClass(lineStringsLayerId, LINE_LAYER.type);\n\n    if (PolygonStrokeLayer || LineStringsLayer) {\n      const forwardedProps = forwardProps(this, LINE_LAYER.props);\n\n      return [\n        PolygonStrokeLayer &&\n          new PolygonStrokeLayer(\n            forwardedProps,\n            this.getSubLayerProps({\n              id: polygonStrokeLayerId,\n              updateTriggers: forwardedProps.updateTriggers\n            }),\n            layerProps.polygonsOutline\n          ),\n\n        LineStringsLayer &&\n          new LineStringsLayer(\n            forwardedProps,\n            this.getSubLayerProps({\n              id: lineStringsLayerId,\n              updateTriggers: forwardedProps.updateTriggers\n            }),\n            layerProps.lines\n          )\n      ];\n    }\n    return null;\n  }\n\n  private _renderPointLayers(): Layer[] | null {\n    const {pointType} = this.props;\n    const {layerProps, binary} = this.state;\n    let {highlightedObjectIndex} = this.props;\n\n    if (!binary && Number.isFinite(highlightedObjectIndex)) {\n      highlightedObjectIndex = layerProps.points.data.findIndex(\n        d => d.__source.index === highlightedObjectIndex\n      );\n    }\n\n    // Avoid duplicate sub layer ids\n    const types = new Set(pointType.split('+'));\n    const pointLayers: Layer[] = [];\n    for (const type of types) {\n      const id = `points-${type}`;\n      const PointLayerMapping = POINT_LAYER[type];\n      const PointsLayer: _ConstructorOf<Layer> =\n        PointLayerMapping &&\n        this.shouldRenderSubLayer(id, layerProps.points.data) &&\n        this.getSubLayerClass(id, PointLayerMapping.type);\n      if (PointsLayer) {\n        const forwardedProps = forwardProps(this, PointLayerMapping.props);\n        let pointsLayerProps = layerProps.points;\n\n        if (type === 'text' && binary) {\n          // Picking colors are per-point but for text per-character are required\n          // getPickingInfo() maps back to the correct index\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          const {instancePickingColors, ...rest} = pointsLayerProps.data.attributes;\n          pointsLayerProps = {\n            ...pointsLayerProps,\n            data: {...pointsLayerProps.data, attributes: rest}\n          };\n        }\n\n        pointLayers.push(\n          new PointsLayer(\n            forwardedProps,\n            this.getSubLayerProps({\n              id,\n              updateTriggers: forwardedProps.updateTriggers,\n              highlightedObjectIndex\n            }),\n            pointsLayerProps\n          )\n        );\n      }\n    }\n    return pointLayers;\n  }\n\n  renderLayers() {\n    const {extruded} = this.props;\n\n    const polygonFillLayer = this._renderPolygonLayer();\n    const lineLayers = this._renderLineLayers();\n    const pointLayers = this._renderPointLayers();\n\n    return [\n      // If not extruded: flat fill layer is drawn below outlines\n      !extruded && polygonFillLayer,\n      lineLayers,\n      pointLayers,\n      // If extruded: draw fill layer last for correct blending behavior\n      extruded && polygonFillLayer\n    ];\n  }\n\n  protected getSubLayerAccessor<In, Out>(accessor: Accessor<In, Out>): Accessor<In, Out> {\n    const {binary} = this.state;\n    if (!binary || typeof accessor !== 'function') {\n      return super.getSubLayerAccessor(accessor);\n    }\n\n    return (object, info) => {\n      const {data, index} = info;\n      const feature = binaryToFeatureForAccesor(data as unknown as BinaryFeatureTypes, index);\n      // @ts-ignore (TS2349) accessor is always function\n      return accessor(feature, info);\n    };\n  }\n}\n","var AsyncGenerator = require(\"./AsyncGenerator.js\");\n\nfunction _wrapAsyncGenerator(fn) {\n  return function () {\n    return new AsyncGenerator(fn.apply(this, arguments));\n  };\n}\n\nmodule.exports = _wrapAsyncGenerator;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","// Copyright (c) 2015 - 2019 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nexport const AGGREGATION_OPERATION = {\n  SUM: 1,\n  MEAN: 2,\n  MIN: 3,\n  MAX: 4\n};\n\nfunction sumReducer(accu, cur) {\n  return accu + cur;\n}\n\nfunction maxReducer(accu, cur) {\n  return cur > accu ? cur : accu;\n}\n\nfunction minReducer(accu, cur) {\n  return cur < accu ? cur : accu;\n}\n\nexport function getMean(pts, accessor) {\n  if (Number.isFinite(accessor)) {\n    return pts.length ? accessor : null;\n  }\n  const filtered = pts.map(accessor).filter(Number.isFinite);\n\n  return filtered.length ? filtered.reduce(sumReducer, 0) / filtered.length : null;\n}\n\nexport function getSum(pts, accessor) {\n  if (Number.isFinite(accessor)) {\n    return pts.length ? pts.length * accessor : null;\n  }\n  const filtered = pts.map(accessor).filter(Number.isFinite);\n\n  return filtered.length ? filtered.reduce(sumReducer, 0) : null;\n}\n\nexport function getMax(pts, accessor) {\n  if (Number.isFinite(accessor)) {\n    return pts.length ? accessor : null;\n  }\n  const filtered = pts.map(accessor).filter(Number.isFinite);\n\n  return filtered.length ? filtered.reduce(maxReducer, -Infinity) : null;\n}\n\nexport function getMin(pts, accessor) {\n  if (Number.isFinite(accessor)) {\n    return pts.length ? accessor : null;\n  }\n  const filtered = pts.map(accessor).filter(Number.isFinite);\n\n  return filtered.length ? filtered.reduce(minReducer, Infinity) : null;\n}\n\n// Function to convert from aggregation/accessor props (like colorAggregation and getColorWeight) to getValue prop (like getColorValue)\nexport function getValueFunc(aggregation, accessor, context) {\n  const op = AGGREGATION_OPERATION[aggregation] || AGGREGATION_OPERATION.SUM;\n  accessor = wrapAccessor(accessor, context);\n  switch (op) {\n    case AGGREGATION_OPERATION.MIN:\n      return pts => getMin(pts, accessor);\n    case AGGREGATION_OPERATION.SUM:\n      return pts => getSum(pts, accessor);\n    case AGGREGATION_OPERATION.MEAN:\n      return pts => getMean(pts, accessor);\n    case AGGREGATION_OPERATION.MAX:\n      return pts => getMax(pts, accessor);\n    default:\n      return null;\n  }\n}\n\nfunction wrapAccessor(accessor, context = {}) {\n  if (Number.isFinite(accessor)) {\n    return accessor;\n  }\n  return pt => {\n    context.index = pt.index;\n    return accessor(pt.source, context);\n  };\n}\n\nexport function wrapGetValueFunc(getValue, context = {}) {\n  return pts => {\n    context.indices = pts.map(pt => pt.index);\n    return getValue(\n      pts.map(pt => pt.source),\n      context\n    );\n  };\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n/* eslint-disable max-len */\n\n// Core Layers\nexport {default as ArcLayer} from './arc-layer/arc-layer';\nexport {default as BitmapLayer} from './bitmap-layer/bitmap-layer';\nexport {default as IconLayer} from './icon-layer/icon-layer';\nexport {default as LineLayer} from './line-layer/line-layer';\nexport {default as PointCloudLayer} from './point-cloud-layer/point-cloud-layer';\nexport {default as ScatterplotLayer} from './scatterplot-layer/scatterplot-layer';\nexport {default as ColumnLayer} from './column-layer/column-layer';\nexport {default as GridCellLayer} from './column-layer/grid-cell-layer';\nexport {default as PathLayer} from './path-layer/path-layer';\nexport {default as PolygonLayer} from './polygon-layer/polygon-layer';\nexport {default as GeoJsonLayer} from './geojson-layer/geojson-layer';\nexport {default as TextLayer} from './text-layer/text-layer';\nexport {default as SolidPolygonLayer} from './solid-polygon-layer/solid-polygon-layer';\n\n// Experimental layer exports\nexport {default as _MultiIconLayer} from './text-layer/multi-icon-layer/multi-icon-layer';\nexport {default as _TextBackgroundLayer} from './text-layer/text-background-layer/text-background-layer';\n\n// Types\nexport type {ArcLayerProps} from './arc-layer/arc-layer';\nexport type {BitmapLayerProps, BitmapBoundingBox} from './bitmap-layer/bitmap-layer';\nexport type {ColumnLayerProps} from './column-layer/column-layer';\nexport type {ScatterplotLayerProps} from './scatterplot-layer/scatterplot-layer';\nexport type {IconLayerProps} from './icon-layer/icon-layer';\nexport type {LineLayerProps} from './line-layer/line-layer';\nexport type {PolygonLayerProps} from './polygon-layer/polygon-layer';\nexport type {GeoJsonLayerProps} from './geojson-layer/geojson-layer';\nexport type {GridCellLayerProps} from './column-layer/grid-cell-layer';\nexport type {TextLayerProps} from './text-layer/text-layer';\nexport type {MultiIconLayerProps} from './text-layer/multi-icon-layer/multi-icon-layer';\nexport type {PointCloudLayerProps} from './point-cloud-layer/point-cloud-layer';\nexport type {TextBackgroundLayerProps} from './text-layer/text-background-layer/text-background-layer';\nexport type {PathLayerProps} from './path-layer/path-layer';\nexport type {SolidPolygonLayerProps} from './solid-polygon-layer/solid-polygon-layer';\n","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;"],"sourceRoot":""}