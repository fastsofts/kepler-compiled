{"version":3,"sources":["webpack:////home/srikanth/kepler.gl/src/processors/src/data-processor.ts","webpack:////home/srikanth/kepler.gl/src/processors/src/file-handler.ts","webpack:////home/srikanth/kepler.gl/src/layers/src/base.tsx","webpack:////home/srikanth/kepler.gl/src/layers/src/default-layer-icon.tsx","webpack:////home/srikanth/kepler.gl/src/layers/src/layer-update.ts","webpack:////home/srikanth/kepler.gl/src/layers/src/base-layer.ts","webpack:////home/srikanth/kepler.gl/src/layers/src/point-layer/point-layer-icon.tsx","webpack:////home/srikanth/kepler.gl/src/layers/src/layer-text-label.ts","webpack:////home/srikanth/kepler.gl/src/layers/src/layer-utils.ts","webpack:////home/srikanth/kepler.gl/src/layers/src/point-layer/point-layer.ts","webpack:////home/srikanth/kepler.gl/src/layers/src/arc-layer/arc-layer-icon.tsx","webpack:////home/srikanth/kepler.gl/src/layers/src/arc-layer/arc-layer.ts","webpack:////home/srikanth/kepler.gl/src/layers/src/line-layer/line-layer-icon.tsx","webpack:////home/srikanth/kepler.gl/src/layers/src/line-layer/line-layer.ts","webpack:////home/srikanth/kepler.gl/src/layers/src/aggregation-layer.ts","webpack:////home/srikanth/kepler.gl/src/layers/src/grid-layer/grid-utils.ts","webpack:////home/srikanth/kepler.gl/src/layers/src/grid-layer/grid-layer-icon.tsx","webpack:////home/srikanth/kepler.gl/src/layers/src/grid-layer/grid-layer.ts","webpack:////home/srikanth/kepler.gl/src/layers/src/hexagon-layer/hexagon-utils.ts","webpack:////home/srikanth/kepler.gl/src/layers/src/hexagon-layer/hexagon-layer-icon.tsx","webpack:////home/srikanth/kepler.gl/src/layers/src/hexagon-layer/hexagon-layer.ts","webpack:////home/srikanth/kepler.gl/src/layers/src/geojson-layer/geojson-layer-icon.tsx","webpack:////home/srikanth/kepler.gl/src/layers/src/geojson-layer/geojson-layer.ts","webpack:////home/srikanth/kepler.gl/src/layers/src/cluster-layer/cluster-layer-icon.tsx","webpack:////home/srikanth/kepler.gl/src/layers/src/cluster-layer/cluster-layer.ts","webpack:////home/srikanth/kepler.gl/src/layers/src/icon-layer/icon-layer-icon.tsx","webpack:////home/srikanth/kepler.gl/src/layers/src/table.tsx","webpack:////home/srikanth/kepler.gl/src/layers/src/icon-layer/icon-info-modal.tsx","webpack:////home/srikanth/kepler.gl/src/layers/src/icon-layer/icon-layer.ts","webpack:////home/srikanth/kepler.gl/src/layers/src/mapbox-utils.ts","webpack:////home/srikanth/kepler.gl/src/layers/src/mapboxgl-layer.ts","webpack:////home/srikanth/kepler.gl/src/layers/src/heatmap-layer/heatmap-layer-icon.tsx","webpack:////home/srikanth/kepler.gl/src/layers/src/heatmap-layer/heatmap-layer.ts","webpack:////home/srikanth/kepler.gl/src/layers/src/h3-hexagon-layer/h3-hexagon-layer-icon.tsx","webpack:////home/srikanth/kepler.gl/src/layers/src/h3-hexagon-layer/h3-hexagon-layer.ts","webpack:////home/srikanth/kepler.gl/src/layers/src/scenegraph-layer/scenegraph-layer-icon.tsx","webpack:////home/srikanth/kepler.gl/src/layers/src/scenegraph-layer/scenegraph-info-modal.tsx","webpack:////home/srikanth/kepler.gl/src/layers/src/scenegraph-layer/scenegraph-layer.ts","webpack:////home/srikanth/kepler.gl/src/layers/src/trip-layer/trip-layer-icon.tsx","webpack:////home/srikanth/kepler.gl/src/layers/src/trip-layer/trip-utils.ts","webpack:////home/srikanth/kepler.gl/src/layers/src/trip-layer/trip-info-modal.tsx","webpack:////home/srikanth/kepler.gl/src/layers/src/trip-layer/trip-layer.ts","webpack:////home/srikanth/kepler.gl/src/layers/src/s2-geometry-layer/s2-layer-icon.tsx","webpack:////home/srikanth/kepler.gl/src/layers/src/s2-geometry-layer/s2-utils.ts","webpack:////home/srikanth/kepler.gl/src/layers/src/s2-geometry-layer/s2-geometry-layer.ts","webpack:////home/srikanth/kepler.gl/src/layers/src/editor-layer/constants.ts","webpack:////home/srikanth/kepler.gl/src/layers/src/editor-layer/feature-styles.ts","webpack:////home/srikanth/kepler.gl/src/layers/src/editor-layer/modify-mode-extended.ts","webpack:////home/srikanth/kepler.gl/src/layers/src/editor-layer/editor-layer-utils.ts","webpack:////home/srikanth/kepler.gl/src/layers/src/editor-layer/editor-layer.ts","webpack:////home/srikanth/kepler.gl/src/layers/src/index.ts","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/panel-header-action.tsx","webpack:////home/srikanth/kepler.gl/src/deckgl-layers/src/3d-building-layer/3d-building-utils.ts","webpack:////home/srikanth/kepler.gl/src/deckgl-layers/src/3d-building-layer/3d-building-layer.ts","webpack:////home/srikanth/kepler.gl/src/deckgl-layers/src/layer-utils/cpu-aggregator.ts","webpack:////home/srikanth/kepler.gl/src/deckgl-layers/src/layer-utils/cluster-utils.ts","webpack:////home/srikanth/kepler.gl/src/deckgl-layers/src/cluster-layer/cluster-layer.ts","webpack:////home/srikanth/kepler.gl/src/deckgl-layers/src/column-layer/enhanced-column-layer.ts","webpack:////home/srikanth/kepler.gl/src/deckgl-layers/src/grid-layer/enhanced-cpu-grid-layer.ts","webpack:////home/srikanth/kepler.gl/src/deckgl-layers/src/hexagon-layer/enhanced-hexagon-layer.ts","webpack:////home/srikanth/kepler.gl/src/deckgl-layers/src/line-layer/line-layer.ts","webpack:////home/srikanth/kepler.gl/src/deckgl-layers/src/svg-icon-layer/scatterplot-icon-layer.ts","webpack:////home/srikanth/kepler.gl/src/deckgl-layers/src/svg-icon-layer/svg-icon-layer.ts","webpack:////home/srikanth/kepler.gl/src/deckgl-layers/src/deckgl-extensions/filter-shader-module.ts","webpack:////home/srikanth/kepler.gl/src/deckgl-layers/src/deckgl-extensions/filter-arrow-layer.ts","webpack:////home/srikanth/kepler.gl/src/deckgl-layers/src/layer-utils/shader-utils.ts","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/layer-panel/color-selector.tsx","webpack:////home/srikanth/kepler.gl/src/localization/src/locales.ts","webpack:////home/srikanth/kepler.gl/src/localization/src/translations/en.ts","webpack:////home/srikanth/kepler.gl/src/localization/src/translations/fi.ts","webpack:////home/srikanth/kepler.gl/src/localization/src/translations/pt.ts","webpack:////home/srikanth/kepler.gl/src/localization/src/translations/es.ts","webpack:////home/srikanth/kepler.gl/src/localization/src/translations/ca.ts","webpack:////home/srikanth/kepler.gl/src/localization/src/translations/cn.ts","webpack:////home/srikanth/kepler.gl/src/localization/src/translations/ja.ts","webpack:////home/srikanth/kepler.gl/src/localization/src/translations/ru.ts","webpack:////home/srikanth/kepler.gl/src/localization/src/messages.ts","webpack:////home/srikanth/kepler.gl/src/localization/src/formatted-message.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/panel-title.tsx","webpack:////home/srikanth/kepler.gl/src/layers/src/geojson-layer/geojson-utils.ts","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/layer-panel/layer-color-selector.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/layer-panel/layer-panel-header.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/layer-panel/dimension-scale-selector.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/layer-panel/vis-config-by-field-selector.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/layer-panel/layer-error-message.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/layer-panel/layer-configurator.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/modals/export-map-modal/components.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/modals/error-display.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/modals/status-panel.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/panel-dropdown.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/panel-header.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/common/source-data-selector.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/common/dataset-tag.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/layer-panel/color-palette.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/layer-panel/custom-picker.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/common/source-data-catalog.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/filter-panel/filter-panel-header.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/layer-panel/color-range-selector.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/layer-panel/dataset-section.tsx","webpack:////home/srikanth/kepler.gl/src/constants/src/color-palette.ts","webpack:////home/srikanth/kepler.gl/src/constants/src/custom-color-ranges.ts","webpack:////home/srikanth/kepler.gl/src/constants/src/color-ranges.ts","webpack:////home/srikanth/kepler.gl/src/constants/src/tooltip.ts","webpack:////home/srikanth/kepler.gl/src/constants/src/default-settings.ts","webpack:////home/srikanth/kepler.gl/src/constants/src/layers.ts","webpack:////home/srikanth/kepler.gl/src/constants/src/keyevent.ts","webpack:////home/srikanth/kepler.gl/src/constants/src/user-feedbacks.ts","webpack:////home/srikanth/kepler.gl/src/constants/src/user-guides.ts","webpack:////home/srikanth/kepler.gl/src/constants/src/dnd-layer-items.ts","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/layer-panel/custom-palette.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/modals/data-table-modal.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/layer-panel/layer-list.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/panel-view-list-toggle.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/notification-panel/notification-item.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/modals/loading-dialog.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/modals/image-modal-container.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/modals/cloud-components/provider-select.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/side-bar.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/layer-manager.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/modals/modal-tabs.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/modals/share-map-modal.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/layer-panel/vis-config-slider.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/layer-panel/vis-config-switch.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/layer-panel/layer-column-config.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/layer-panel/layer-type-list-item.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/layer-panel/column-selector.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/layer-panel/layer-type-selector.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/layer-panel/layer-type-dropdown-list.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/layer-panel/text-label-panel.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/layer-panel/single-color-palette.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/layer-panel/how-to-button.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/panel-toggle.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/panel-tab.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/layer-panel/layer-panel.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/layer-panel/dataset-layer-group.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/layer-panel/dataset-layer-section.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/common/dataset-title.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/common/dataset-info.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/layer-panel/add-layer-button.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/filter-manager.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/filter-panel/filter-panel.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/filter-panel/add-filter-button.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/interaction-panel/brush-config.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/map-manager.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/map-style-panel/map-style-selector.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/map-style-panel/map-layer-group-color-picker.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/custom-panel.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/modals/modal-dialog.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/modals/delete-data-modal.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/modals/load-data-modal.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/modals/cloud-tile.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/modals/export-image-modal.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/modals/export-data-modal.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/modals/export-map-modal/export-map-modal.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/modals/export-map-modal/export-html-map.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/modals/export-map-modal/export-json-map.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/modals/add-map-style-modal.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/modals/save-map-modal.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/plot-container.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/notification-panel.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/modals/cloud-components/cloud-header.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/modals/cloud-components/cloud-item.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/modals/cloud-components/cloud-maps.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/modals/load-storage-map.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/interaction-panel/interaction-panel.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/interaction-manager.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/interaction-panel/tooltip-config/tooltip-chicklet.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/interaction-panel/tooltip-config.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/map-style-panel/map-layer-group-item.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/map-style-panel/map-layer-selector.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/modals/overwrite-map-modal.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/modal-container.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/layer-panel/layer-config-group.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/add-by-dataset-button.tsx","webpack:////home/srikanth/kepler.gl/src/effects/src/effect.ts","webpack:////home/srikanth/kepler.gl/src/effects/src/custom-deck-lighting-effect.ts","webpack:////home/srikanth/kepler.gl/src/effects/src/lighting-effect.ts","webpack:////home/srikanth/kepler.gl/src/effects/src/post-processing-effect.ts","webpack:////home/srikanth/kepler.gl/src/effects/src/utils.ts"],"names":["CSV_NULLS","tryParseJsonString","str","JSON","parse","e","PARSE_FIELD_VALUE_FROM_STRING","_defineProperty","ALL_FIELD_TYPES","valid","d","integer","parseInt","timestamp","field","includes","format","Number","real","parseFloat","object","isPlainObject","array","Array","isArray","processCsvData","rawData","header","rows","headerRow","parsedRows","csvParseRows","length","Error","slice","cleanUpFalsyCsvValue","sample","getSampleForTypeAnalyze","fields","getFieldsFromData","parseRowsByFields","geojsonFieldIdx","findIndex","f","name","forEach","parseCsvRowsByFieldType","bind","re","RegExp","i","j","match","geoFieldIdx","parser","type","first","find","r","notNullorUndefined","row","hasOwnProperty","properties","processRowObject","keys","Object","map","key","processGeojson","normalizedGeojson","normalize","features","concat","GUIDES_FILE_FORMAT_DOC","allDataRows","geometry","push","_objectSpread","_geojson","reduce","accu","curr","processKeplerglJSON","schema","arguments","undefined","KeplerGlSchema","load","datasets","config","processKeplerglDataset","results","parseSavedData","toArray","processArrowTable","arrowTable","processArrowBatches","data","batches","arrowBatches","arrow","index","_field$metadata$get","isGeometryColumn","metadata","get","startsWith","id","displayName","fieldIdx","geoarrow","arrowDataTypeToFieldType","analyzerType","AnalyzerDATA_TYPES","GEOMETRY","arrowDataTypeToAnalyzerDataType","valueAccessor","dc","valueAt","cols","_toConsumableArray","numCols","getChildAt","DATASET_HANDLERS","DATASET_FORMATS","geojson","csv","keplergl","Processors","analyzerTypeToFieldType","_regeneratorRuntime","t","prototype","n","o","defineProperty","value","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","call","h","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","getPrototypeOf","v","values","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","reverse","pop","prev","charAt","stop","rval","handle","complete","finish","delegateYield","ownKeys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","apply","getOwnPropertyDescriptors","defineProperties","_asyncIterator","AsyncFromSyncIterator","AsyncFromSyncIteratorContinuation","reject","BATCH_TYPE","CSV_LOADER_OPTIONS","shape","dynamicTyping","ARROW_LOADER_OPTIONS","batchDebounceMs","JSON_LOADER_OPTIONS","jsonpaths","isArrowTable","table","Boolean","isArrowData","isGeoJson","json","isFeature","isFeatureCollection","isRowObject","isKeplerGlMap","info","app","makeProgressIterator","_x","_x2","_makeProgressIterator","_wrapAsyncGenerator","_callee","rowCount","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","batch","rowCountInBatch","percent","progress","_context","_awaitAsyncGenerator","isFinite","bytesUsed","size","t0","readBatch","_x3","_x4","_readBatch","_callee2","fileName","result","_iteratorAbruptCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","batchData","_context2","batchType","container","jsonpath","_JSONPath","setFieldAtPath","headers","readFileInBatches","_x5","_readFileInBatches","_asyncToGenerator","_callee3","_ref","file","_ref$loaders","loaders","_ref$loadOptions","loadOptions","batchIterator","progressIterator","_context3","JSONLoader","CSVLoader","ArrowLoader","parseInBatches","processFileData","_ref2","content","fileCache","processor","generateHashIdFromString","label","filesToDataPayload","collection","keplerMaps","options","centerMap","mapState","newDataset","generateHashId","nop","Base","_Component","_classCallCheck","_callSuper","_inherits","_createClass","_this$props","this","props","height","width","viewBox","style","children","predefinedClassName","className","colors","totalColor","_objectWithoutProperties","_excluded","svgHeight","svgWidth","fillStyle","fill","getStyleClassFromColor","React","createElement","_extends","onClick","Component","DefaultLayerIcon","cx","cy","PropTypes","string","arrayOf","diffUpdateTriggers","updateTriggers","oldUpdateTriggers","triggerChanged","reason","triggerName","newTriggers","oldTriggers","diffReason","compareUpdateTrigger","_marked","generateColor","LAYER_ID_LENGTH","defaultDomain","dataFilterExtension","DataFilterExtension","filterSize","MAX_GPU_FILTERS","defaultDataAccessor","defaultGetFieldValue","OVERLAY_TYPE_CONST","keymirror","deckgl","mapboxgl","layerColors","DataVizColors","hexToRgb","colorMaker","Layer","meta","visConfigSettings","getDefaultLayerConfig","columns","getLayerColumns","isValid","errorMessage","color","property","scale","domain","range","channelScaleType","CHANNEL_SCALES","nullValue","NO_VALUE_COLOR","defaultValue","lat","pair","fieldPairKey","lng","lat0","lng0","lat1","lng1","dataId","DEFAULT_LAYER_LABEL","isVisible","isConfigActive","highlightColor","DEFAULT_HIGHLIGHT_COLOR","hidden","colorField","colorDomain","colorScale","SCALE_TYPES","quantile","sizeDomain","sizeScale","linear","sizeField","visConfig","textLabel","DEFAULT_TEXT_LABEL","colorUI","DEFAULT_COLOR_UI","colorRange","animation","enabled","channel","visualChannels","measure","rangeSettings","fieldSettings","defaultMeasure","update","_this$columnPairs","_this$columnPairs2","_this$columnPairs3","columnPairs","_this$columnPairs$key","partnerKey","partnerFieldPairKey","zoom","_ref$zoomOffset","zoomOffset","Math","pow","max","_ref2$zoomOffset","enableElevationZoomFactor","oldLayerData","dataContainer","configToCopy","_this","shallowCopy","notToCopy","group","currentConfig","copied","copyLayerConfig","updateLayerConfig","validateVisualChannel","_this2","_ref3","_ref3$shallowCopy","_ref3$notToCopy","layerVisConfigs","_this3","item","configItem","LAYER_VIS_CONFIGS","every","columnValidators","required","requiredLayerColumns","validator","optional","optionalColumns","newConfig","newVisConfig","prop","_this$config","previous","colorUIProp","entries","_ref4","_ref5","_slicedToArray","updateColorUIByColorRange","updateColorRangeByColorUI","updateCustomPalette","colorRangeConfig","custom","_this$config2","customPalette","showDropdown","_this$config3","steps","reversed","some","_this$config4","_colorUI$prop$colorRa","getColorGroupByName","COLOR_RANGES","cr","reverseColorRange","updateLayerVisConfig","column","layerData","hasAllColumns","hasLayerData","renderLayer","colorMap","cMap","Map","_ref6","_ref7","k","set","SCALE_FUNC","ordinal","unknown","UNKNOWN_COLOR_KEY","getVisChannelScale","_ref8","_this4","_ref8$dataAccessor","dataAccessor","attributeAccessors","_this4$visualChannels","fixed","accessor","getAttributeValue","isFixed","scaleFunction","getColorScale","getEncodedChannelValue","Console","warn","getPosition","sampleData","numRows","getSampleContainerData","points","mapIndex","latBounds","getLatLngBounds","lngBounds","dataUpdateTriggers","_oldDataUpdateTriggers","attributeValue","getValue","Date","_ref9","filteredIndex","getData","datasetId","getMeta","tl","layerDataset","getPositionAccessor","getDataUpdateTriggers","getChangedTriggers","updateLayerMeta","calculateDataAttribute","newFilter","_this5","getDataset","scaleType","updatedDomain","calculateLayerDomain","validateFieldType","validateScale","visualChannel","supportedFieldTypes","CHANNEL_SCALE_SUPPORTED_FIELDS","scaleOptions","getScaleOptions","FIELD_OPTS","dataset","_this6","getColumnLayerDomain","objectInfo","isLayerHovered","_objectInfo$layer","_objectInfo$layer$pro","picked","layer","fixedRadius","radiusChannel","vc","radius","getZoomFactor","_this7","noneLayerDataAffectingProps","interactionConfig","brushingTarget","brush","autoHighlight","brushingRadius","brushingEnabled","_ref11","idx","gpuFilter","visible","coordinateSystem","COORDINATE_SYSTEM","LNGLAT","pickable","wrapLongitude","parameters","depthTest","dragRotate","enable3d","opacity","extensions","filterRange","_ref12","renderOpts","_this8","getPixelOffset","backgroundProps","sharedProps","textLabels","getText","_textLabel$i$field","_textLabel$i$field2","background","TextLayer","characterSet","getSize","PROJECTED_PIXEL_SIZE_MULTIPLIER","getTextAnchor","anchor","getAlignmentBaseline","alignment","getColor","outlineWidth","TEXT_OUTLINE_MULTIPLIER","outlineColor","getBackgroundColor","backgroundColor","fontSettings","sdf","getFilterValue","getRadius","_subLayerProps","cull","keplerTable","foundLayers","defaultFields","allFields","requiredColumns","requiredFields","getAllPossibleColumnParis","allKeys","pointers","countPerKey","pairs","incrementPointers","newPair","cuur","pts","counts","PointLayerIcon","getTextOffsetByRadius","radiusScale","distanceScale","getDistanceScales","xMult","yMult","sizeOffset","pixelRadius","pixelsPerMeter","formatTextLabelData","val","String","textLabelAccessor","allLabels","uniq","join","assignPointPairToLayerColumn","hasAlt","_pair$pair","alt","defaultAltColumn","altitude","isLayerHoveredFromArrow","layerId","pointRequiredColumns","pointOptionalColumns","brushingExtension","BrushingExtension","pointVisConfigs","outline","thickness","strokeColor","strokeColorRange","radiusRange","filled","PointLayer","_Layer","registerVisConfig","defaultPointColumnPairs","_get","_getPrototypeOf","condition","defaultColorField","findDefaultColorField","updateLayerVisualChannel","strokeColorField","strokeColorDomain","strokeColorScale","pos","position","_datasets$this$config","_this$updateData","updateData","accessors","getAttributeAccessors","filterValueAccessor","bounds","getPointsBounds","updateMeta","opts","_this$config$columns$","objectHovered","getRadiusScaleByZoom","layerProps","stroked","lineWidthScale","radiusMaxPixels","filterValueUpdateTriggers","getVisualChannelUpdateTriggers","defaultLayerProps","getDefaultDeckLayerProps","brushingProps","getBrushingExtensionProps","hoveredObject","hasHoveredObject","ScatterplotLayer","lineWidthUnits","getDefaultHoverLayerProps","getLineColor","getFillColor","renderTextLabelLayer","_ref3$fieldPairs","fieldPairs","latField","defaultName","DEFAULT_LAYER_COLOR","ArcLayerIcon","arcRequiredColumns","arcColumnLabels","arcVisConfigs","sizeRange","targetColor","ArcLayer","defaultLinkColumnPairs","sourceColor","sourcePosition","targetPosition","sBounds","tBounds","min","widthScale","DeckArcLayer","getSourceColor","getTargetColor","getWidth","tripArc","LineLayerIcon","lineRequiredColumns","lineOptionalColumns","lineColumnLabels","alt0","alt1","lineVisConfigs","elevationScale","LineLayer","_ArcLayer","EnhancedLineLayer","_ref2$fieldPairs","getFilterDataFunc","pt","getLayerColorRange","aggregateRequiredColumns","AggregationLayer","_assertThisInitialized","getColorRange","memoize","getPointData","source","gpuFilterGetIndex","gpuFilterGetData","fieldIndex","aggregation","colorAggr","sizeAggr","_this$visConfigSettin","fieldConfig","validateAggregationType","aggregationOptions","getAggregationOptions","DEFAULT_AGGREGATION","aggregationType","aggregatePoints","aggregate","getColorValue","colorAggregation","getElevationValue","sizeAggregation","hasFilter","arr","filterData","_filterData","HIGHLIGH_COLOR_3D","_opts$layerCallbacks","layerCallbacks","eleZoomFactor","getElevationZoomFactor","coverage","colorScaleType","upperPercentile","percentile","lowerPercentile","extruded","elevationScaleType","elevationRange","elevationLowerPercentile","elevationPercentile","elevationUpperPercentile","onSetColorDomain","onSetLayerDomain","pointToPolygonGeo","cellSize","viewport","WebMercatorViewport","coordinates","addMetersToLngLat","GridLayerIcon","x","gridVisConfigs","worldUnitSize","GridLayer","_AggregationLayer","defaultAggregationLayerProps","getDefaultAggregationLayerProp","zoomFactor","EnhancedGridLayer","GeoJsonLayer","hexagonToPolygonGeo","screenCenter","projectFlat","unitsPerMeter","pixRadius","vertex","hex_corner","unprojectFlat","center","angle_deg","angle_rad","PI","cos","sin","HexagonLayerIcon","hexagonVisConfigs","resolution","HexagonLayer","EnhancedHexagonLayer","clamp","GeojsonLayerIcon","SUPPORTED_ANALYZER_TYPES","DATA_TYPES","GEOMETRY_FROM_STRING","PAIR_GEOMETRY_FROM_STRING","geojsonVisConfigs","strokeOpacity","heightRange","wireframe","fixedHeight","geoJsonRequiredColumns","geoColumnAccessor","_dc$getColumn","getColumn","geoFieldAccessor","getField","defaultElevation","defaultLineWidth","defaultRadius","fillColor","lineColor","lineWidth","elevation","heightField","heightDomain","heightScale","radiusField","radiusDomain","_object$properties","ArrowDataContainer","Uint8ClampedArray","filteredIndexTrigger","dataToFeature","getFiltered","polygon","_polygon$properties","_polygon$properties2","centroids","isReactangleSearchBox","point","bbox","_polygon$properties3","_polygon$properties$b","_polygon$properties$b2","minX","minY","maxX","maxY","booleanWithin","turfPoint","getFeature","getGeoColumn","getGeoField","numChunks","isIncrementalLoad","_getGeojsonLayerMetaF","_arrowField$metadata","chunkIndex","geoColumn","arrowField","encoding","chunkOffset","triangulate","calculateMeanCenters","_getBinaryGeometriesF","getBinaryGeometriesFromArrow","binaryGeometries","featureTypes","meanCenters","getGeojsonLayerMetaFromArrow","_getGeojsonLayerMeta","getGeojsonLayerMeta","columnAccessor","fieldAccessor","_field$metadata","col","rawGeometry","hoveredFeature","parseGeometryFromArrow","rowAsArray","cur","_dataContainer$getFie","fieldName","getHoveredObjectFromArrow","_ref6$zoomOffset","dataProps","_this$meta","pointRadiusScale","lineMiterLimit","opaOverwrite","tooltip","deckLayerData","deckLayers","DeckGLGeoJsonLayer","capRounded","jointRounded","FilterArrowExtension","line","linestrings","lineOpacity","getLineWidth","getPointRadius","getElevation","_ref7$fields","geojsonColumns","defaultColumns","GEOJSON_FIELDS","foundColumns","findDefaultColumnField","replace","ClusterLayerIcon","clusterVisConfigs","clusterRadius","ClusterLayer","clusterData","DeckGLClusterLayer","round","IconLayerIcon","Table","CenterFlexbox","styled","div","_templateObject","_taggedTemplateLiteral","lineFunction","IconShape","mesh","transform","cells","cell","positions","StyledIconItem","_templateObject2","StyledCode","code","_templateObject3","theme","titleColorLT","StyledTitle","_templateObject4","IconItem","_ref2$icon","icon","ExampleTable","IconTable","_templateObject5","IconInfoModalFactory","svgIcons","IconInfoModal","FormattedMessage","SVG_ICON_URL","KEPLER_UNFOLDED_BUCKET","iconRequiredColumns","iconOptionalColumns","flatterIconPositions","IconLayer","getIconAccessor","_layerInfoModal","iconGeometry","isTest","_possibleConstructorReturn","setSvgIcons","getSvgIcons","template","modalProps","title","window","fetch","svgIconUrl","mode","cache","response","parsed","getIcon","rowIndex","labelLayers","cullFace","GL","FRONT","SvgIconLayer","getIconGeometry","_this3$iconGeometry","_this3$iconGeometry2","_ref4$fieldPairs","_ref4$fields","notFound","iconFields","trim","split","seg","ICON_FIELDS","iconField","generateMapboxLayers","layers","layerOrder","layersToRender","findById","overlayType","acc","layerIndex","l","sourceId","updateMapboxLayers","newLayers","oldLayers","checkAndRemoveOldLayers","overlay","oldData","oldConfig","updateSourceData","removeLayer","getLayer","addLayer","setLayoutProperty","getSource","setData","addSource","geoJsonFromData","getGeometry","getProperties","prefixGpuField","gpuFilterToMapboxFilter","mapboxRequiredColumns","pointColResolver","MapboxLayerGL","_len","args","_key","createSelector","datasetSelector","columnsSelector","gpuFilterSelector","visualChannelFields","vcFields","getPropertyFromVisualChanel","getPropertyFromFilter","filterValue","HeatmapLayerIcon","MAX_ZOOM_LEVEL","pointPosAccessor","heatmapVisConfigs","HeatmapLayer","_MapboxGLLayer","weightField","weightDomain","visConfigSelector","weightFieldSelector","weightDomainSelector","quantize","colorDensity","bands","level","invert","invertExtent","sourceSelector","filterSelector","paintSelector","paint","layout","visibility","isValidFilter","weight","_get$call$weightField","weightScale","computeHeatmapConfiguration","MapboxGLLayer","H3HexagonLayerIcon","hexIdRequiredColumns","hexIdAccessor","hex_id","defaultCoverage","HexagonIdVisConfigs","coverageRange","HexagonIdLayer","defaultLayerConfig","coverageField","coverageDomain","coverageScale","getHexId","centroid","h3IsValid","getCentroid","centroidsDataContainer","createDataContainer","h3HexagonLayerTriggers","getHexagon","columnLayerTriggers","getCoverage","H3HexagonLayer","EnhancedColumnLayer","idToPolygonGeo","_ref3$fields","hexFields","getHexFields","fid","ScenegraphLayerIcon","rx","ry","panelBackgroundLT","panelBorderLT","ScenegraphInfoModalFactory","scenegraphRequiredColumns","scenegraphOptionalColumns","url","propName","GLTFLoader","getLoadOptions","scenegraphVisConfigs","angleX","angle","angleY","angleZ","DEFAULT_TRANSITION","DEFAULT_SCALE","DEFAULT_COLOR","ScenegraphLayer","_this$config$visConfi","_this$config$visConfi2","_this$config$visConfi3","_this$config$visConfi4","_this$config$visConfi5","DeckScenegraphLayer","scenegraph","getTranslation","getScale","getOrientation","blend","TripLayerIcon","clipPath","coordHasLength4","samples","hasLength4","_samples$i","_samples$i$geometry","containValidTime","timestamps","formattedTimeStamps","ts","ignoredDataTypes","TIME","DATETIME","analyzedType","Analyzer","computeColMeta","category","isTripGeoJsonField","parseGeoJsonRawFeature","getGeojsonFeatureTypes","tsHolder","coord","parseTripGeoJsonTimestamp","empty","dataToTimeStamp","animationDomain","sampleTrip","_f$geometry","_f$geometry$coordinat","_f$geometry$coordinat2","getTimeValue","timeToUnixMilli","getAnimationDomainFromTimestamps","findMinFromSorted","list","findMaxFromSorted","tss","tsMin","tsMax","Infinity","TripInfoModalFactory","TripInfoModal","tripVisConfigs","isRanged","step","trailLength","featureAccessor","featureResolver","TripLayer","getPath","getTimestamps","getGeojsonDataMaps","_parseTripGeoJsonTime","updateAnimationDomain","getGeojsonBounds","_animationConfig$doma","animationConfig","currentTime","domain0","DeckGLTripsLayer","depthMask","_ref5$fields","tripGeojsonColumns","S2LayerIcon","getS2Center","s2Token","paddedToken","toString","padEnd","s2Id","Long","fromString","_S2$idToLatLng","S2","idToLatLng","validS2Token","token","S2_TOKEN_FIELDS","s2RequiredColumns","S2VisConfigs","S2GeometryLayer","getS2Token","entry","S2Layer","COLORS","EDIT_TYPES","PRIMARY_COLOR_TRANSPARENT","PRIMARY_COLOR","SECONDARY_COLOR_TRANSPARENT","TENTATIVE_FEATURE_COLOR","TENTATIVE_FEATURE_COLOR_TRANSPARENT","EDIT_HANDLE_STYLE","getOutlineColor","_handle$properties","featureIndex","highlightMultiplier","highlightMultiplierNone","FEATURE_STYLE","feature","isSelected","LINE_STYLE","getTentativeLineColor","getTentativeLineWidth","getTentativeFillColor","dashArray","solidArray","ModifyModeExtended","_ModifyMode","inPoint","p1","project","p2","sqrt","EDITOR_LAYER_PICKING_RADIUS","event","_event$sourceEvent","sourceEvent","button","ModifyMode","isDrawingActive","editorMenuActive","EDITOR_MODES","DRAW_POLYGON","DRAW_RECTANGLE","getTooltipObject","text","leftOfCursor","aboveCursor","fontFamily","tooltipFontSize","padding","tooltipBoxShadow","tooltipBg","tooltipColor","primaryBtnRadius","DEFAULT_COMPOSITE_MODE","CompositeMode","TranslateMode","getEditorLayer","editor","onSetFeatures","setSelectedFeature","featureCollection","selectedFeatureIndexes","editorMode","DrawPolygonMode","DrawRectangleMode","EditableGeoJsonLayer","EDITOR_LAYER_ID","pickingRadius","modeConfig","screenSpace","lockRectangles","pickingLineWidthExtraPixels","onEdit","updatedData","editType","_features","lastFeature","isClosed","_editor$selectedFeatu","selectedFeature","editHandleType","PathStyleExtension","dash","dashGapPickable","getDashArray","_isSelected","_feature$properties","_editor$selectedFeatu2","guideType","getEditHandlePointRadius","getEditHandlePointColor","getEditHandlePointOutlineColor","KeplerGlLayers","GeojsonLayer","H3Layer","LayerClasses","_LayerClasses","LAYER_TYPES","arc","grid","hexagon","cluster","heatmap","hexagonId","trip","s2","EditorLayerUtils","_info$layer","onLayerClick","_ref$mapIndex","drawingActive","_info$object$geometry","objectType","endsWith","_event$srcEvent","clickContext","rightButton","srcEvent","rightClick","onHover","_info$layer2","_hoverInfo$layer","hoverInfo","getTooltip","_editor$selectionCont","_layer$state","_layer$state$mode","_layer$state$mode$_cl","_info$viewport","_info$pixel","pixel","closeToLeftEdge","closeToBottomEdge","selectionContext","state","_clickSequence","_object$geometry","_object$properties2","getCursor","_hoverInfo$layer2","HeaderActionWrapper","attrs","dataTestId","testId","flush","active","panelHeaderIconActive","panelHeaderIcon","hoverColor","panelHeaderIconHover","PanelHeaderActionFactory","PanelHeaderActionUnmemoized","_ref$active","tooltipType","disabled","IconComponent","classnames","data-testid","data-tip","data-for","Tooltip","effect","delayShow","PanelHeaderAction","memo","deps","getTileData","host","_ref$index","z","mapSource","arrayBuffer","buffer","tile","VectorTile","Protobuf","xProj","yProj","projectFunc","vectorTileLayer","vectorTileFeatureToProp","decodeTile","extent","sizeToPixel","ii","worldToLngLat","vectorTileFeature","coords","pbf","_pbf","_geometry","end","readVarint","cmd","lines","cmdLen","readSVarint","getCoordinates","rings","len","ccw","polygons","area","signedArea","classifyRings","ring","sum","ThreeDBuildingLayer","_CompositeLayer","SolidPolygonLayer","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","blendEquation","FUNC_ADD","getPolygon","threeDBuildingColor","DeckGLTileLayer","mapboxApiUrl","mapboxApiAccessToken","minZoom","renderSubLayers","CompositeLayer","DECK_AGGREGATION_MAP","AGGREGATION_OPERATION","SUM","AGGREGATION_TYPES","MEAN","average","MIN","minimum","MAX","maximum","getGetValue","dimensionUpdater","_step$triggers","triggers","toUpperCase","op","keplerOp","getValueFunc","_setDimensionState","getDimensionSortedBins","dimensions","sortedBins","BinSorter","getDimensionValueDomain","_step$triggers2","valueDomain","getValueDomainByScale","getDimensionScale","_step$triggers3","onSet","dimensionRange","dimensionDomain","scaleFunc","getScaleFunctor","normalizeResult","hexagons","assign","getAggregatedData","aggregationParams","aggregator","setState","defaultAggregation","updateSteps","updateTrigger","updater","getSubLayerAccessor","dimensionState","dimension","bin","binMap","cv","defaultColorDimension","getPickingInfo","colorValue","defaultDimensions","elevationValue","CPUAggregator","initialState","dimensionUpdaters","aggregationUpdater","_addDimension","dimensionChanges","dim","updaters","_accumulateUpdaters","oldProps","changeFlags","dataChanged","updateAggregation","updateAllDimensions","aggregationChanges","_getAggregationChanges","_getDimensionChanges","updateObject","dimensionStep","updateTriggersChanged","all","needUpdateStep","_needUpdateStep","_getAllUpdaters","_updateTriggers","_loop","_this3$dimensionUpdat","fromProp","binInfo","filteredPoints","dimensionKey","clusterResolver","getClusterer","geoJSON","Supercluster","maxZoom","accumulated","ClusterBuilder","clusterer","getClusters","_this$clusterer$cache","_this$clusterer$cache2","clear","defaultRadiusRange","clusterRadiusRange","clusterAggregation","point_count","point_count_abbreviated","getGeoJSON","clusterBuilder","_this$state","longitude","latitude","geoViewport","clusters","clustersAtZoom","clusterLayerDimensions","getRadiusValue","radiusValue","defaultProps","DEFAULT_COLOR_RANGE","radiusScaleType","cpuAggregator","aggregatorState","getAttributeManager","add","updateState","context","attributes","getAttributes","numInstances","getNumInstances","getUpdateTriggers","getAccessor","_this$props2","_getSublayerUpdateTriggers","_getSubLayerAccessors","metersPerPixel","layerName","_ColumnLayer","vs","addDecl","shaders","editShader","_this$getAttributeMan","addInstanced","instanceCoverage","uniforms","lineWidthMinPixels","lineWidthMaxPixels","radiusUnits","offset","model","fillVertexCount","wireframeVertexCount","edgeDistance","setUniforms","UNIT","widthUnits","widthMinPixels","widthMaxPixels","setProps","isIndexed","setVertexCount","setDrawMode","LINES","isStroke","draw","TRIANGLE_STRIP","ColumnLayer","gridAggregation","ScaleEnhancedGridLayer","_CPUGridLayer","CPUGridLayer","hexagonAggregation","ScaleEnhancedHexagonLayer","_HexagonLayer","_LineLayer","targetColorVs","addInstanceColorShader","elevationVs","addElevationScale","_this$props$colorForm","attributeManager","instanceTargetColors","colorFormat","UNSIGNED_BYTE","normalized","transition","DEFAULT_POS","ScatterplotIconLayer","_ScatterplotLayer","gl","getShaders","Geometry","drawMode","TRIANGLES","Float32Array","TRIANGLE_FAN","Model","isInstanced","shaderCache","DEFAULT_ICON_GEOMETRY","iconId","_extractSublayers","iconLayers","_info$sourceLayer","sourceLayer","updateAutoHighlight","dependencies","fs","inject","getUniforms","_LayerExtension","extension","modules","shaderModule","defines","filtered","FLOAT","shaderAttributes","divisor","instanceFiltered","LayerExtension","originalText","testToReplace","error","OpacitySliderWrapper","OPACITY_SLIDER_PROPS","value0","showInput","ColorBlock","backgroundcolor","ColorSelectorInput","inputTheme","secondaryInput","input","inputBoxHeight","inputPlaceholderColor","InputBoxContainer","ColorSelectorFactory","RangeSlider","ColorSelector","createRef","isInteger","showSketcher","_closePanelDropdown","_getEditing","setColorUI","stopPropagation","editing","colorSet","colorSets","_setColor","selectedColor","useOpacity","setColor","preventDefault","currentEditing","ref","node","cSet","onMouseDown","_showDropdown","isRange","ColorPalette","StyledPanelDropdown","ColorRangeSelector","selectedColorRange","onSelectColorRange","_onSelectColor","setColorPaletteUI","colorPaletteUI","SingleColorPalette","rgbToHex","onSelectColor","PanelLabel","value1","onChange","_onSelectOpacity","onClickOutside","RangeSliderFactory","LOCALES","en","fi","es","ca","ja","cn","ru","LOCALE_CODES","stroke","density","pointCount","placeholder","search","selectField","yAxis","selectType","selectValue","enterValue","selectLayer","misc","by","valuesIn","valueEquals","dataSource","brushRadius","mapLayers","road","border","building","water","land","panel","labelWithId","fontSize","fontColor","textAnchor","addMoreLabel","sidebar","panels","interaction","basemap","panelViewToggle","byDataset","propertyBasedOn","strokeWidth","basic","trailLengthDescription","newLayer","elevationByDescription","colorByDescription","aggregateBy","hexbin","hexagonid","layerUpdateError","strokeWidthRange","fixedRadiusDescription","radiusRangePixels","heightAggregation","resolutionRange","enableElevationZoomFactorDescription","enableHeightZoomFactor","highPrecisionRendering","highPrecisionRenderingDescription","heightDescription","enablePolygonHeight","showWireframe","weightIntensity","zoomScale","fixedHeightDescription","heightMultiplier","darkModeEnabled","layerManager","addData","layerBlending","overlayBlending","mapManager","mapStyle","addMapStyle","effectManager","effects","addEffect","pickDateTime","pickCurrrentTime","date","time","timezone","layerConfiguration","defaultDescription","howTo","filterManager","addFilter","datasetTitle","showDataTable","removeDataset","datasetInfo","hideLayer","showLayer","hideFeature","showFeature","hide","show","duplicateLayer","zoomToLayer","resetAfterError","layerSettings","closePanel","switchToDualView","showLegend","disable3DMap","DrawOnMap","selectLocale","hideLayerPanel","showLayerPanel","moveToTop","selectBaseMapStyle","removeBaseMapStyle","delete","timePlayback","cloudStorage","animationByWindow","animationByIncremental","speed","play","pause","export","showEffectPanel","hideEffectPanel","removeEffect","disableEffect","effectSettings","toolbar","exportImage","exportData","exportMap","shareMapURL","saveMap","select","rectangle","filterLayer","copyGeometry","noLayersToFilter","modal","deleteDataset","addDataToMap","addCustomMapboxStyle","shareURL","download","addStyle","save","defaultCancel","defaultConfirm","ratioTitle","ratioDescription","ratioOriginalScreen","ratioCustom","ratio4_3","ratio16_9","resolutionTitle","resolutionDescription","mapLegendTitle","mapLegendAdd","datasetSubtitle","allDatasets","dataTypeTitle","dataTypeSubtitle","filterDataTitle","filterDataSubtitle","filteredData","unfilteredData","fileCount","deleteData","warning","publishTitle","publishSubtitle1","publishSubtitle2","publishSubtitle3","publishSubtitle4","publishSubtitle5","publishSubtitle6","publishSubtitle7","exampleToken","pasteTitle","pasteSubtitle0","pasteSubtitle1","pasteSubtitle2","pasteSubtitle3","pasteSubtitle4","namingTitle","shareMap","shareUriTitle","shareUriSubtitle","cloudTitle","cloudSubtitle","shareDisclaimer","gotoPage","statusPanel","mapUploading","subtitle","formatTitle","formatSubtitle","html","selection","tokenTitle","tokenSubtitle","tokenPlaceholder","tokenMisuseWarning","tokenDisclaimer","tokenUpdate","modeTitle","modeSubtitle1","modeSubtitle2","modeDescription","read","edit","configTitle","configDisclaimer","disclaimer","loadingDialog","loading","loadData","upload","storage","tripInfo","description1","description2","example","iconInfo","icons","storageMapViewer","lastModified","back","overwriteMap","alreadyExists","loadStorageMap","goToPage","storageMaps","noSavedMaps","visibleLayers","layerLegend","interactions","coordinate","geocoder","additive","normal","subtractive","description","screen","darken","strokeScale","fileUploader","message","chromeMessage","configUploadMessage","browseFiles","uploading","fileNotSupported","or","fieldSelector","clearAll","formatting","compare","modeLabel","typeLabel","types","absolute","relative","mapPopover","primary","Save","Share","flattenMessages","nestedMessages","prefix","messages","prefixedKey","enFlat","EnhancedFormattedMessage","defaultMessage","StyledPanelTitle","titleTextColor","sidePanelTitleFontsize","sidePanelTitleLineHeight","PanelHeaderRow","PanelTitleFactory","rawFeature","geoString","parsedGeo","parseSync","WKTLoader","Buffer","from","binaryGeo","WKBLoader","binaryToGeometry","parseGeometryFromString","_d$properties","cent","acceptableTypes","cleaned","maxCount","getSampleData","nonEmpty","featureToDeckGlGeoType","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","allFeatures","geoType","LayerColorSelectorFactory","_ref$property","onSetColorUI","useCallback","SidePanelSection","rgbValue","LayerColorRangeSelectorFactory","_ref2$property","ArcLayerColorSelectorFactory","onChangeConfig","onChangeVisConfig","_ref3$property","isDragNDropEnabled","showRemoveLayer","getBorderCss","status","css","notificationColors","StyledLayerPanelHeader","StyledPanelHeader","layerPanelHeaderHeight","panelBackgroundHover","HeaderLabelSection","textColor","HeaderActionSection","isEditingLabel","StyledPanelHeaderHiddenActions","panelBackground","StyledDragHandle","_templateObject6","textColorHl","DragHandle","listeners","noOp","LayerLabelEditor","onFocus","onBlur","InlineInput","dataTestIds","layerTitleEditor","LayerTitleSectionFactory","StyledLayerTitleSection","_templateObject7","subtextColor","layerType","onUpdateLayerLabel","toLowerCase","LayerPanelHeaderActionSectionFactory","allowDuplicate","onToggleVisibility","onResetIsValid","onToggleEnableConfig","onDuplicateLayer","onRemoveLayer","onZoomToLayer","_props$actionIcons","actionIcons","defaultActionIcons","remove","duplicate","crosshairs","resetIsValid","enableConfig","StyledHeaderWaring","_templateObject8","HeaderWarning","WarningSign","Trash","EyeSeen","EyeUnseen","ArrowDown","Copy","Reset","Crosshairs","LayerPanelHeaderFactory","LayerTitleSection","LayerPanelHeaderActionSection","LayerPanelHeader","labelRCGColorValues","_useState","useState","_useState2","setIsEditingLabel","VertDots","DimensionScaleSelector","onSelect","_ref$disabled","camelize","ItemSelector","selectedItems","multiSelect","searchable","VisConfigByFieldSelectorFactory","InfoHelper","FieldSelector","VisConfigByFieldSelector","updateField","showScale","selectedField","intl","_this$props$scaleOpti","PanelLabelWrapper","formatMessage","_updateVisByField","erasable","updateScale","injectIntl","InfoHelperFactory","FieldSelectorFactory","LayerErrorMessageContent","LayerErrorMessage","StyledLayerConfigurator","layerConfiguratorMargin","layerConfiguratorPadding","layerConfiguratorBorder","layerConfiguratorBorderColor","StyledLayerVisualConfigurator","getLayerFields","_layer$config","getLayerDataset","_layer$config2","getLayerConfiguratorProps","updateLayerColorUI","getVisConfiguratorProps","LayerConfiguratorFactory","SourceDataSelector","VisConfigSlider","TextLabelPanel","LayerConfigGroup","ChannelByValueSelector","LayerColumnConfig","LayerTypeSelector","VisConfigSwitch","LayerColorSelector","LayerColorRangeSelector","ArcLayerColorSelector","LayerConfigurator","_renderScatterplotLayerConfig","visConfiguratorProps","layerChannelConfigProps","layerConfiguratorProps","collapsible","ConfigGroupCollapsibleContent","updateLayerTextLabel","AggregationScaleSelector","AggregationTypeSelector","_renderAggregationLayerConfig","_renderLineLayerConfig","_layer$meta$featureTy","_layer$meta$featureTy2","Fragment","Input","accept","target","files","URL","createObjectURL","_ref10","layerTypeOptions","updateLayerType","_this$props$disableTy","disableTypeSelect","_ref11$fields","_ref11$fieldPairs","updateLayerVisualChannelConfig","renderTemplate","capitalizeFirstLetter","layerInfoModal","HowToButton","openModal","expanded","selected","assignColumnPairs","assignColumn","columnLabels","ChannelByValueSelectorFactory","channelSupportedFieldTypes","supportedFields","_ref13","isAggregated","SourceDataSelectorFactory","VisConfigSliderFactory","TextLabelPanelFactory","LayerConfigGroupFactory","LayerColumnConfigFactory","LayerTypeSelectorFactory","VisConfigSwitchFactory","_ref14","_ref15","layerAggregationTypes","AGGREGATION_TYPE_OPTIONS","_ref16","selectedAggregation","_ref17","displayOption","getOptionValue","StyledExportMapSection","StyledExportSection","exportIntraSectionMargin","StyledWarning","span","errorColor","selectFontWeightBold","StyledExportLink","ExportMapLink","rel","NotificationItem","NotificationItemFactory","ErrorDisplay","notification","useMemo","ErrorBoundary","isExpanded","StyledUploader","StyledMapIcon","textColorLT","StyledSvg","svg","selectBorderColorLT","Line","x1","y1","x2","y2","UploadAnimation","MapIcon","StatusPanel","isLoading","providerIcon","ClickOutsideCloseDropdown","onClose","listensToClickOutside","sidePanelHeaderBg","StyledPanelHeaderTop","StyledPanelTopActions","StyledPanelAction","StyledToolbar","Toolbar","PanelAction","showExportDropdown","dropdownComponent","blank","href","iconComponent","iconComponentProps","place","PanelHeaderDropdownFactory","items","ToolbarItem","getDropdownItemsSelector","SaveExportDropdownFactory","PanelHeaderDropdown","dropdownItemsSelector","SaveExportDropdown","Picture","onExportImage","DataTable","onExportData","onExportMap","Save2","onSaveMap","onShareMap","CloudStorageDropdownFactory","CloudStorageDropdown","onSaveToStorage","onSaveAsToStorage","PanelHeaderFactory","_PanelHeader","PanelHeader","appName","appWebsite","version","actionItems","visibleDropdown","hideExportDropdown","dropdownCallbacks","ai","logoComponent","KeplerGlLogo","Db","DatasetTag","DatasetItem","dsOptions","ds","filterOption","DropDownLineItemRenderComponent","DatasetTagFactory","_","DatasetTagWrapper","DatasetColorPicker","UpdateTableColor","_ref2$onClick","_ref2$onClickSquare","onClickSquare","updateTableColor","DatasetSquare","PaletteWrapper","PaletteContainer","StyledColorBlock","isReversed","StyledPicker","labelColor","inputColor","secondaryInputBgd","inputBgdHover","PRESET_COLORS","CustomPicker","themeSelector","picker","boxSizing","onSwatchClose","pickerStyle","pickerStyleSelector","SketchPicker","presetColors","styles","disableAlpha","withTheme","SourceDataCatalogWrapper","SourceDataCatalogFactory","DatasetTitle","DatasetInfo","showDatasetTable","onTitleClick","_ref$showDeleteDatase","showDeleteDataset","DatasetTitleFactory","DatasetInfoFactory","StyledFilterHeader","$labelRCGColorValues","createLinearGradient","StyledChildrenContainer","FilterPanelHeaderFactory","removeFilter","_ref$actionIcons","ALL_TYPES","ctype","ALL_STEPS","sort","numberSort","StyledColorConfig","StyledColorRangeSelector","StyledPaletteConfig","CONFIG_SETTINGS","configTypeSelector","configStepSelector","isType","isStep","_setColorRangeConfig","_this$props$colorPale","filteredColorRanges","filteredColorRange","PaletteConfig","_updateConfig","CustomPalette","onApply","onToggleSketcher","_onToggleSketcher","setCustomPalette","_onSetCustomPalette","onCancel","_onCustomPaletteCancel","ColorPaletteGroup","colorRanges","_ref2$config","Switch","checked","secondary","StyledColorRange","StyledDatasetTitle","showDatasetList","StyledDatasetSection","sidePanelBorderColor","AddDataButtonFactory","AddDataButton","isInactive","Button","inactive","Add","DatasetSectionFactory","SourceDataCatalog","showAddDataModal","datasetCount","grey_7","brick_20","brick_21","brick_22","lime_8","lime_9","lime_4","lime_5","lime_6","lime_7","lime_1","lime_2","lime_3","orange_22","orange_20","orange_21","stone_9","stone_8","stone_20","stone_1","amber_22","stone_21","amber_20","amber_21","navy_17","navy_16","navy_15","navy_14","navy_13","navy_12","navy_11","navy_10","navy_19","navy_18","teal_9","teal_8","teal_5","teal_4","teal_7","teal_6","teal_1","teal_3","teal_2","teal_19","teal_18","teal_11","teal_10","teal_13","teal_12","teal_15","teal_14","teal_17","teal_16","gold_20","gold_21","gold_22","olive_9","olive_8","olive_7","olive_6","olive_5","olive_4","olive_3","olive_2","olive_1","green_22","green_20","green_21","indigo_17","indigo_16","indigo_15","indigo_14","indigo_13","indigo_12","indigo_11","indigo_10","indigo_19","indigo_18","blue_22","blue_20","blue_21","olive_22","olive_20","olive_21","violet_16","violet_17","violet_14","violet_15","violet_12","violet_13","violet_10","violet_11","dirt_16","dirt_17","dirt_14","dirt_15","dirt_12","dirt_13","violet_18","violet_19","stone_15","stone_14","stone_17","stone_16","stone_11","stone_10","stone_13","stone_12","stone_19","stone_18","aqua_3","aqua_2","aqua_1","aqua_7","aqua_6","aqua_5","aqua_4","aqua_9","aqua_8","orange_7","orange_6","orange_5","orange_4","orange_3","orange_2","orange_1","orange_9","orange_8","purple_13","purple_11","purple_10","purple_7","purple_6","purple_5","purple_4","purple_3","purple_2","purple_1","blue_18","blue_17","blue_16","blue_15","blue_14","blue_13","blue_12","purple_9","blue_10","orange_13","orange_12","orange_11","orange_10","orange_17","orange_16","orange_15","orange_14","orange_19","orange_18","magenta_11","magenta_10","magenta_13","magenta_12","magenta_15","magenta_14","magenta_17","magenta_16","magenta_19","magenta_18","stone_3","stone_2","stone_5","stone_4","stone_7","stone_6","blue_9","blue_8","blue_7","blue_6","blue_5","blue_4","blue_3","blue_2","blue_1","gold_9","gold_8","gold_5","gold_4","gold_7","gold_6","gold_1","gold_3","gold_2","dirt_22","dirt_21","dirt_20","white","gold_19","gold_18","grey_8","grey_9","gold_11","gold_10","gold_13","gold_12","gold_15","gold_14","gold_17","gold_16","grey_10","grey_11","grey_12","grey_13","grey_14","grey_15","grey_16","grey_17","grey_18","grey_19","dirt_19","yellow_20","yellow_21","yellow_22","dirt_10","dirt_11","brown_8","brown_9","stone_22","brown_6","brown_7","brick_1","brick_3","brick_2","brick_5","brick_4","brick_7","brick_6","brick_9","brick_8","amber_7","amber_6","amber_5","amber_4","amber_3","amber_2","amber_1","amber_9","amber_8","grey_2","grey_3","violet_22","violet_21","violet_20","grey_1","red_19","red_18","red_15","red_14","red_17","red_16","red_11","red_10","red_13","red_12","black","grey_4","grey_5","navy_7","navy_6","navy_5","navy_4","navy_3","navy_2","navy_1","navy_9","navy_8","yellow_15","yellow_14","yellow_17","yellow_16","yellow_11","yellow_10","yellow_13","yellow_12","yellow_19","yellow_18","purple_20","purple_21","magenta_1","magenta_3","magenta_2","magenta_5","magenta_4","magenta_7","magenta_6","magenta_9","magenta_8","indigo_3","indigo_2","indigo_1","indigo_7","indigo_6","indigo_5","indigo_4","indigo_9","indigo_8","magenta_20","magenta_21","magenta_22","purple_22","red_9","red_8","red_5","red_4","red_7","red_6","red_1","red_3","red_2","grey_21","grey_20","grey_22","lime_16","lime_17","lime_14","lime_15","lime_12","lime_13","lime_10","lime_11","lime_18","lime_19","dirt_18","violet_8","violet_9","violet_4","violet_5","violet_6","violet_7","violet_1","violet_2","violet_3","red_20","red_21","red_22","amber_19","amber_18","amber_13","amber_12","amber_11","amber_10","amber_17","amber_16","amber_15","amber_14","green_17","green_16","green_15","green_14","green_13","green_12","green_11","green_10","green_19","green_18","turquoise_19","turquoise_18","turquoise_15","turquoise_14","turquoise_17","turquoise_16","turquoise_11","turquoise_10","turquoise_13","turquoise_12","aqua_22","aqua_20","aqua_21","yellow_9","yellow_8","yellow_5","yellow_4","yellow_7","yellow_6","yellow_1","yellow_3","yellow_2","teal_20","teal_21","teal_22","indigo_22","purple_12","indigo_20","indigo_21","purple_17","purple_16","purple_15","purple_14","purple_19","purple_18","blue_19","lime_22","lime_21","lime_20","turquoise_1","turquoise_3","turquoise_2","turquoise_5","turquoise_4","turquoise_7","turquoise_6","turquoise_9","turquoise_8","brown_4","brown_5","brown_2","brown_3","brown_1","blue_11","brown_14","purple_8","brown_15","brown_16","brown_18","brick_19","brick_18","brick_15","brick_14","brick_17","brick_16","brick_11","brick_10","brick_13","brick_12","olive_13","olive_12","olive_11","olive_10","olive_17","olive_16","olive_15","olive_14","olive_19","olive_18","navy_22","navy_20","navy_21","brown_21","brown_20","brown_22","dirt_4","dirt_5","dirt_6","dirt_7","dirt_1","dirt_2","dirt_3","dirt_8","dirt_9","green_3","green_2","green_1","green_7","green_6","green_5","green_4","green_9","green_8","brown_10","brown_11","brown_12","brown_13","turquoise_20","turquoise_21","turquoise_22","brown_17","grey_6","brown_19","aqua_19","aqua_18","aqua_13","aqua_12","aqua_11","aqua_10","aqua_17","aqua_16","aqua_15","aqua_14","ColorsByTheme","_key$split","_key$split2","Themes","SEQ","SIN","QUA","DIV","aqua","tumbleweed","mule_fawn","tree_poppy","flame","sapphire","orchid","chathams_blue","med_aquamarine","crocodile","java","chalky","light_taupe","peach_orange","apricot","portage","light_orchid","blue_green","bermuda","cloudy","quaColors","qualitativeColors","sequantialColors","divergingColors","VizColorPalette","colorBrewerMap","colorbrewer","schemeGroups","palettes","_i","_Object$entries","_Object$entries$_i","keyName","colorScheme","_i2","_Object$entries2","_Object$entries2$_i","lenKey","TOOLTIP_FORMAT_TYPES","NONE","DATE","DATE_TIME","DECIMAL","PERCENTAGE","BOOLEAN","TOOLTIP_KEY","TOOLTIP_FORMATS","DECIMAL_SHORT","DECIMAL_COMMA","DECIMAL_SHORT_COMMA","DECIMAL_PERCENT_FULL_0","DECIMAL_PERCENT_FULL_1","DECIMAL_PERCENT_FULL_2","DECIMAL_PRECENT_REGULAR","DECIMAL_DECIMAL_FIXED_2","DECIMAL_DECIMAL_FIXED_3","DECIMAL_DECIMAL_FIXED_4","DECIMAL_SCIENTIFIC_FIXED_2","DECIMAL_SCIENTIFIC_FIXED_3","DECIMAL_SCIENTIFIC_FIXED_4","DECIMAL_INT","DECIMAL_THREE","DECIMAL_FOUR","DECIMAL_DELTA","DECIMAL_CURRENCY","DATE_L","DATE_LL","DATE_dddd_LL","DATE_ddd_LL","DATE_TIME_L_LT","DATE_TIME_L_LTS","DATE_TIME_LLL","DATE_TIME_LL_LTS","DATE_TIME_ddd_LLL","DATE_TIME_LTS","BOOLEAN_NUM","BOOLEAN_Y_N","COMPARE_TYPES","ABSOLUTE","RELATIVE","ACTION_PREFIX","BASEMAP_ICON_PREFIX","DEFAULT_MAPBOX_API_URL","TRANSITION_DURATION","DATA_TABLE_ID","DELETE_DATA_ID","ADD_DATA_ID","EXPORT_IMAGE_ID","EXPORT_DATA_ID","ADD_MAP_STYLE_ID","EXPORT_MAP_ID","SAVE_MAP_ID","OVERWRITE_MAP_ID","SHARE_MAP_ID","KEPLER_GL_NAME","KEPLER_GL_VERSION","KEPLER_GL_WEBSITE","DIMENSIONS","sidePanel","margin","top","left","bottom","right","headerHeight","mapControl","mapLegend","pinned","THEME","keyMirror","light","dark","base","SIDEBAR_PANELS","PANEL_VIEW_TOGGLES","PANELS","DEFAULT_BLDG_COLOR","DEFAULT_BACKGROUND_COLOR","BASE_MAP_BACKGROUND_LAYER_IDS","BACKGROUND_LAYER_GROUP_SLUG","THREE_D_BUILDING_LAYER_GROUP_SLUG","BACKGROUND_LAYER_GROUP","slug","defaultVisibility","isVisibilityToggleAvailable","isMoveToTopAvailable","isColorPickerAvailable","DEFAULT_LAYER_GROUPS","BASE_MAP_COLOR_MODES","DARK","LIGHT","NO_MAP_ID","EMPTY_MAPBOX_STYLE","sources","NO_BASEMAP_ICON","DEFAULT_MAP_STYLES","layerGroups","colorMode","complimentaryStyleId","TRIP_POINT_FIELDS","ALTITUDE_FIELDS","TRIP_ARC_FIELDS","FILTER_TYPES","timeRange","FILTER_VIEW_TYPES","side","enlarged","minified","DEFAULT_FILTER_VIEW_TYPE","log","scaleLinear","scaleQuantize","scaleQuantile","scaleOrdinal","scaleSqrt","scaleLog","scalePoint","boolean","SORT_ORDER","ASCENDING","DESCENDING","UNSORT","TABLE_OPTION","SORT_ASC","SORT_DES","PIN","UNPIN","COPY","FORMAT_COLUMN","TABLE_OPTION_LIST","display","sortMode","isSorted","isPinned","FIELD_TYPE_DISPLAY","_FIELD_TYPE_DISPLAY","FIELD_COLORS","default","count","median","stdev","variance","countUnique","linearFieldScaleFunctions","linearFieldAggrScaleFunctions","ordinalFieldScaleFunctions","ordinalFieldAggrScaleFunctions","notSupportedScaleOpts","notSupportAggrOpts","legend","ft","begintrip_lat","dropoff_lat","request_lat","DEFAULT_TOOLTIP_FIELDS","DEFAULT_PICKING_RADIUS","OVERLAY_BLENDINGS","LAYER_BLENDINGS","MAX_DEFAULT_TOOLTIPS","RESOLUTIONS","ONE_X","TWO_X","EXPORT_IMG_RATIOS","SCREEN","FOUR_BY_THREE","SIXTEEN_BY_NINE","CUSTOM","ScreenRatioOption","screenW","screenH","CustomRatioOption","mapW","mapH","FourByThreeRatioOption","SixteenByNineRatioOption","EXPORT_IMG_RATIO_OPTIONS","OneXResolutionOption","available","TwoXResolutionOption","EXPORT_IMG_RESOLUTION_OPTIONS","EXPORT_DATA_TYPE","CSV","EXPORT_DATA_TYPE_OPTIONS","EXPORT_MAP_FORMATS","HTML","EXPORT_HTML_MAP_MODES","READ","EDIT","EXPORT_MAP_FORMAT_OPTIONS","getHTMLMapModeTileUrl","EXPORT_HTML_MAP_MODE_OPTIONS","DEFAULT_UUID_COUNT","DEFAULT_NOTIFICATION_MESSAGE","DEFAULT_NOTIFICATION_TYPES","success","DEFAULT_NOTIFICATION_TOPICS","global","THROTTLE_NOTIFICATION_TIME","BASE_SPEED","FPS","ANIMATION_WINDOW","free","incremental","interval","DEFAULT_TIME_FORMAT","SPEED_CONTROL_RANGE","SPEED_CONTROL_STEP","GEOCODER_DATASET_NAME","GEOCODER_LAYER_ID","GEOCODER_GEO_OFFSET","GEOCODER_ICON_COLOR","GEOCODER_ICON_SIZE","PLOT_TYPES","histogram","lineChart","INIT_FILTER_ITEMS_IN_DROPDOWN","MAP_THUMBNAIL_DIMENSION","MAP_INFO_CHARACTER","LOADING_METHODS","DEFAULT_FEATURE_FLAGS","MAP_CONTROLS","toggle3d","splitMap","mapDraw","mapLocale","infoIcon","warningIcon","errorIcon","successIcon","checkmarkIcon","sortableLayerItem","staticLayerItem","removeLayerAction","layerPanel","sortableEffectItem","staticEffectItem","providerLoading","providerMapInfoPanel","providerSelect","cloudHeader","providerShareMap","DEFAULT_TIMEZONE","DEFAULT_POST_PROCESSING_EFFECT_TYPE","DEFAULT_LIGHT_COLOR","DEFAULT_LIGHT_INTENSITY","DEFAULT_SHADOW_INTENSITY","DEFAULT_SHADOW_COLOR","LIGHT_AND_SHADOW_EFFECT_TIME_MODES","pick","current","DEFAULT_LIGHT_AND_SHADOW_PROPS","now","timeMode","shadowIntensity","shadowColor","sunLightColor","sunLightIntensity","ambientLightColor","ambientLightIntensity","LIGHT_AND_SHADOW_EFFECT","MAX_SAFE_INTEGER","POSTPROCESSING_EFFECTS","ink","brightnessContrast","hueSaturation","vibrance","sepia","dotScreen","colorHalftone","noise","triangleBlur","zoomBlur","tiltShift","edgeWork","vignette","magnify","hexagonalPixelate","EFFECT_DESCRIPTIONS","PROPERTY_GROUPS","precision","DEFAULT_LAYER_OPACITY","DEFAULT_CUSTOM_PALETTE","allowCustomValue","heatmapRadius","darkBaseMapEnabled","LAYER_TEXT_CONFIGS","textAlignment","EDITOR_AVAILABLE_LAYERS","KeyEvent","DOM_VK_UP","DOM_VK_DOWN","DOM_VK_BACK_SPACE","DOM_VK_RETURN","DOM_VK_ENTER","DOM_VK_ESCAPE","DOM_VK_TAB","DOM_VK_DELETE","MISSING_MAPBOX_TOKEN","IMAGE_EXPORT_ERRORS","dataUri","styleSheet","USER_GUIDE_DOC","ACTIONS_DOC","API_REFERENCE_DOC","EXPORT_HTML_MAP_DOC","ADD_DATA_TO_MAP_DOC","MAPBOX_ACCESS_TOKEN","EXPORT_HTML_MAP_MODES_DOC","BUG_REPORT_LINK","DND_MODIFIERS","restrictToVerticalAxis","DND_EMPTY_MODIFIERS","SORTABLE_SIDE_PANEL_TYPE","DROPPABLE_MAP_CONTAINER_TYPE","SORTABLE_LAYER_TYPE","SORTABLE_EFFECT_PANEL_TYPE","SORTABLE_EFFECT_TYPE","dragHandleActive","StyledSortableItem","dropdownWrapperZ","StyledTrash","subtextColorActive","StyledLine","StyledSwatch","boxShadow","StyledButtonContainer","StyledInlineInput","_templateObject9","SortableItem","SortableElement","isSorting","sorting","WrappedSortableContainer","SortableContainer","SortableHandle","newColors","hex","_setColorPaletteUI","splice","oldIndex","newIndex","arrayMove","root","onSortEnd","_onSortEnd","onSortStart","_onSortStart","lockAxis","helperClass","useDragHandle","_onSwatchClick","_inputColorHex","_onColorDelete","link","_onColorAdd","_onApply","Portaled","isOpened","_onPickerUpdate","_onSwatchClose","DEFAULT_SORT_COLUMN","dgSettings","StyledModal","DatasetCatalog","modalScrollBar","DatasetModalTab","StyledConfigureButton","DatasetTabsUnmemoized","activeDataset","DatasetLabel","DatasetTabs","DataTableModalFactory","DataTableFactory","DataTableConfigFactory","TableContainer","DataTableConfig","DataTableModal","_React$Component","showConfig","_ref2$dataId","_ref3$dataId","filterProps","displayFormat","columnStats","_datasets$dataId","showCalculate","datasetCellSizeCache","cellSizeCache","colIdx","renderedSize","cellFontSize","font","minCellSize","_this$props$dataId","copyTableColumn","_this$props2$dataId","pinTableColumn","_this$props3","_this$props3$dataId","sortTableColumn","formats","_this$props4","setColumnDisplayFormat","_this$props5","_this$props5$showTab","showTab","colMeta","CanvasHack","Gear","onOpenConfig","onCloseConfig","pinnedColumns","sortOrder","sortColumn","hasStats","Container","SortableStyledItem","fontWeight","lineHeight","INITIAL_LAYERS_TO_SHOW","LayerListFactory","LayerPanel","panelProps","layerActions","_useSortable","useSortable","parent","setNodeRef","isDragging","CSS","Transform","isDraggable","uiStateActions","visStateActions","mapStateActions","layerClasses","_props$isSortable","isSortable","toggleModal","layersToShow","sidePanelDndItems","layerIcon","requireData","layerColorUIChange","layerConfigChange","layerVisualChannelConfigChange","layerTypeChange","layerVisConfigChange","layerTextLabelChange","fitBounds","layerSetIsValid","SortableContext","strategy","verticalListSortingStrategy","LayerPanelFactory","PanelViewListToggleContainer","PanelViewListToggleWrapper","StyledToggleOption","panelTabColor","TOGGLE_OPTIONS","OrderByList","OrderByDataset","PanelViewListToggleFactory","ToggleOption","togglePanelListView","opt","isActive","listView","option","NotificationItemContentBlock","notificationPanelItemWidth","NotificationItemContent","notificationPanelItemHeight","DeleteIcon","Delete","NotificationCounter","NotificationMessage","NotificationIcon","Info","Warning","Checkmark","LinkRenderer","removeNotification","ReactMarkdown","renderers","StyledSpinner","StyledLoadingDialog","LoadingDialog","_ref$size","_ref$message","LoadingSpinner","ImageModalContainer","onUpdateImageSetting","cleanupExportImage","provider","useEffect","exporting","thumbnail","ratio","StyledProviderSection","ProviderSelect","_ref$cloudProviders","cloudProviders","CloudTile","StyledSidePanelContainer","SideBarContainer","SideBarInner","sidePanelBg","sidePanelBorder","StyledCollapseButton","sideBarCloseBtnBgd","sideBarCloseBtnColor","sideBarCloseBtnBgdHover","CollapseButtonFactory","isOpen","ArrowRight","SidebarFactory","CollapseButton","_SideBar","SideBar","localStorage","setItem","onOpenOrClose","minifiedWidth","shouldShowCollapseButton","horizontalOffset","_onOpenOrClose","LayerBlendingSelector","updateLayerBlending","labeledLayerBlendings","blending","InfoHelperWrapper","OverlayBlendingSelectorTitleRow","OverlayBlendingSelector","updateOverlayBlending","infoHelper","labeledOverlayBlendings","LayerManagerFactory","LayerList","DatasetLayerGroup","PanelViewListToggle","PanelTitle","DatasetSection","AddLayerButton","LayerManager","panelId","panelListView","panelMetadata","isSortByDatasetMode","_togglePanelListView","SidePanelDivider","onAdd","_addLayer","DatasetLayerGroupFactory","AddLayerButtonFactory","ModalTab","media","portable","StyledLoadDataModalTabItem","subtextColorLT","noop","ModalTabItem","currentMethod","toggleMethod","useIntl","tabElementType","ModalTabsFactory","ModalTabs","loadingMethods","propTypes","func","isRequired","StyledInputLabel","StyleSharingUrl","SharingUrl","setCopy","InputLight","readOnly","CopyToClipboard","onCopy","StyledShareMapModal","StyledModalContent","StyledInnerDiv","UNDERLINE_TEXT_DECORATION_STYLE","textDecoration","ShareMapHeader","ShareMapUrlModalFactory","_ref3$isProviderLoadi","isProviderLoading","_ref3$onExport","onExport","_ref3$providerError","providerError","_ref3$successInfo","successInfo","_ref3$onUpdateImageSe","_useCloudListProvider","useCloudListProvider","shareUrl","folderLink","ThemeProvider","themeLT","hasSharingUrl","InputWrapper","CustomInputWrapper","CustomInputLabel","layerConfigGroupLabelLabelFontSize","RangeInput","sliderInputFontSize","LazyInput","stateValue","setValue","inputRef","useRef","onKeyDown","keyCode","blur","_onChange","CustomInput","onChangeCustomInput","onChangeInput","_useState3","isInRange","_useState4","setCustom","onChangeCheckbox","adjustedValue","Checkbox","StyledVisConfigSwitch","_ref$layer","TopRow","getValidFieldPairsSuggestionsForColumn","enhancedFieldPairs","columnKey","columnPair","matchingFieldPairs","ColumnSelector","fp","onUpdateColumn","assignedColumns","ColumnSelectorFactory","StyledListItem","activeColor","layerTypeIconSizeSM","layerTypeIconSizeL","selectColor","LayerTypeListItemFactory","isTile","classNames","ColumnRow","ColumnName","ColumnSelect","suggested","validateColumn","StyledLayerTypeSelector","LayerTypeDropdownListFactory","getDisplayOption","LayerTypeListItem","LayerTypeDropdownList","DropDownRenderComponent","DropdownListWrapper","dropdownList","dropdownListBgd","dropdownListBorderTop","layerTypeIconPdL","StyledDropdownListItem","onOptionSelected","selectionIndex","customListItemComponent","onSelectOption","ListItemComponent","classList","it","hover","SwitchWrapper","currentFields","ConfigGroupCollapsibleHeader","labelId","SpaceBetweenFlexbox","SBFlexboxItem","StyledColorPalette","StyledColorColumn","ROWS","borderColor","StyledHowToButton","small","StyledSidePanelContent","sidePanelScrollBar","sidePanelInnerPadding","SidePanelFactory","Sidebar","PanelToggle","FilterManager","InteractionManager","MapManager","CustomPanels","SIDEBAR_COMPONENTS","SIDEBAR_ICONS","Layers","FilterFunnel","Settings","CursorClick","fullPanels","component","getCustomPanelProps","SidePanel","_props$availableProvi","availableProviders","filters","_props$panels","mapInfo","mapSaved","mapStyleActions","uiState","openDeleteModal","toggleSidePanel","activeSidePanel","setMapInfo","hasShare","hasStorage","onClickExportImage","onClickExportData","onClickExportMap","onClickSaveToStorage","onClickSaveAsToStorage","onClickShareMap","onShowDatasetTable","onUpdateTableColor","newColor","onShowAddDataModal","onShowAddMapStyleModal","onRemoveDataset","currentPanel","customPanelProps","PanelComponent","isSidePanelCloseButtonVisible","activePanel","togglePanel","showAddMapStyleModal","layerPanelListView","filterPanelListView","PanelToggleFactory","FilterManagerFactory","InteractionManagerFactory","MapManagerFactory","CustomPanelsFactory","PanelHeaderBottom","sidePanelHeaderBorder","PanelTab","PanelTabFactory","StyledPanelTab","panelToggleBorderColor","panelToggleMarginRight","panelToggleBottomPadding","panelTabWidth","PanelWrapper","_args","newProp","newType","_len2","_key2","_len3","_key3","_this$props$layer","_this$props$layer$met","isValidToSave","onTouchStart","_toggleEnableConfig","_toggleVisibility","_resetIsValid","_updateLayerLabel","_removeLayer","_zoomToLayer","_duplicateLayer","DatasetLayerSection","datasetLayerSectionData","datasetLayers","dlsData","DatasetLayerSectionFactory","DatasetLayerSectionWrapper","datasetCatalog","clickable","DataTagAction","ShowDataTable","RemoveDataset","datasetKey","displayColorPicker","setDisplayColorPicker","_handleClick","_handleClosePicker","_handleCustomPicker","rgb","b","_onClickTitle","numFormat","StyledDataRowCount","AddByDatasetButton","buttonIntlId","FilterPanel","AddFilterButton","FilterList","filtersByIndex","isAnyFilterAnimating","setFilter","toggleFilterAnimation","toggleFilterFeature","setFilterView","filterPanelCallbacks","toggleFilterView","isSideFilter","toggleAnimation","enlargeFilter","DatasetFilterSection","_ref6$filters","isAnimating","onClickAddFilter","filtersByDatasets","fidx","_TogglePanelListView","filterListProps","sourceDataCatalogProps","FilterPanelFactory","AddFilterButtonFactory","StyledFilterPanel","NewFilterPanel","TimeRangeFilterPanel","SingleSelectFilterPanel","MultiSelectFilterPanel","RangeFilterPanel","PolygonFilterPanel","FilterPanelComponents","fieldsSelector","nameSelector","dataIdSelector","FilterFilterComponent","allAvailableFields","availableFieldsSelector","NewFilterPanelFactory","TimeRangeFilterPanelFactory","SingleSelectFilterPanelFactory","MultiSelectFilterPanelFactory","RangeFilterPanelFactory","PolygonFilterPanelFactory","BrushConfigFactory","BRUSH_CONFIG","MapStyleSelector","LayerGroupSelector","isSelecting","mapStyleChange","_toggleSelecting","mapStyles","actionsPerCustomStyle","removeCustomMapStyle","editableLayers","styleType","customMapStylesActions","getCustomMapStylesActions","_selectStyle","toggleActive","visibleLayerGroups","topLayers","topLayerGroups","mapConfigChange","on3dBuildingColorChange","set3dBuildingColor","onBackgroundColorChange","setBackgroundColor","MapStyleSelectorFactory","LayerGroupSelectorFactory","StyledMapDropdown","calloutDot","hasCallout","arrowDown","_ref3$actionIcons","_ref4$icon","_ref4$label","collapsed","PanelHeaderContent","src","PanelHeaderTitle","action","LayerGroupColorPickerWrapper","extraMarginRight","LayerGroupColorPickerFactory","onColorChange","onColorBlockClick","onClosePicker","onCustomPickerChange","getProps","sidePanelProps","ModalDialogFactory","Modal","StyledMsg","DeleteDatasetModal","_ref$layers","currDatasetLayers","DeleteDatasetModalFactory","StyledLoadDataModal","modalPadding","LoadDataModalFactory","FileUpload","LoadStorageMap","LoadDataModal","isCloudMapLoading","methods","getDefaultMethod","ElementType","elementType","onFileUpload","fileLoading","FileUploadFactory","LoadStorageMapFactory","StyledTileWrapper","primaryBtnBgd","StyledBox","CenterVerticalFlexbox","StyledCloudName","StyledUserName","primaryBtnActBgd","LoginButton","Login","LogoutButton","Logout","NewTag","actionName","user","setUser","setError","_useState5","_useState6","setIsLoading","currentProvider","setProvider","getUser","onLogin","_user","login","onLogout","logout","isNew","CheckMark","ImageOptionList","ExportImageModalFactory","SelectionButton","ImagePreview","getDataRowCount","selectedDataset","selectedData","filteredIdxCPU","toLocaleString","ExportDataModalFactory","ExportDataModal","applyCPUFilter","onChangeExportSelectedDataset","toCPUFilter","_this$props$supported","supportedDataTypes","dataType","onChangeExportDataType","onChangeExportFiltered","_onSelectDataset","StyledType","FileType","ext","StyledFilteredOption","NO_OP","ExportMapModalFactory","ExportHtmlMap","ExportJsonMap","ExportMapModalUnmemoized","_ref$config","_ref$onChangeExportMa","onChangeExportMapFormat","_ref$onChangeExportMa2","onChangeExportMapHTMLMode","_ref$onEditUserMapbox","onEditUserMapboxAccessToken","_ref$options","ExportHtmlMapFactory","ExportJsonMapFactory","ExportMapStyledExportSection","inputFontSize","StyledInput","inputPadding","BigStyledTile","userMapboxToken","StyledJsonExportSection","ExportJsonMapUnmemoized","JSONPretty","stringify","ErrorMsg","PreviewMap","palm","StyledPreviewImage","modalImagePlaceHolder","InlineLink","AddMapStyleModalFactory","AddMapStyleModal","reRenderKey","previousToken","loadCustomMapStyle","mapRef","getMap","_map","on","getStyle","loadMapStyleJson","loadMapStyleError","inputStyle","accessToken","mapProps","baseApiUrl","mapboxAccessToken","mapLib","maplibregl","preserveDrawingBuffer","transformRequest","StyledModalVerticalPanel","StyledModalSection","inputMapStyle","StyledMapContainer","MapGLMap","el","polyfill","StyledSaveMapModal","TEXT_AREA_LIGHT_STYLE","resize","MapInfoPanel","characterLimits","_mapInfo$description","_mapInfo$title","FlexContainer","TextAreaLight","StyledModalInputFootnote","SaveMapHeader","STYLED_EXPORT_SECTION_STYLE","PROVIDER_MANAGER_URL_STYLE","SaveMapModalFactory","_ref3$characterLimits","onSetMapInfo","onConfirm","confirmButton","large","confirm","getManagementUrl","showDimension","ModalFooter","cancel","CLASS_FILTER","DOM_FILTER_FUNC","PlotContainerFactory","MapContainerFactory","MapsLayoutFactory","StyledPlotContainer","MapContainer","MapsLayout","PlotContainer","mapFields","imageSize","exportImageSetting","getScaleFromImageSize","imageW","imageH","isSplit","mapStyleSelector","mapScaleSelector","bottomMapStyle","scaleMapStyleByResolution","topMapStyle","isStyleLoaded","_retrieveNewScreenshot","plottingAreaRef","_this$props$exportIma","escapeXhtmlForWebpack","convertToPng","setExportImageDataUri","err","setExportImageError","enableErrorNotification","addNotification","exportImageError","_onMapRender","debounce","setExportImageSetting","processing","prevProps","_this$props$splitMaps","splitMaps","visState","newMapState","log2","renderedLayers","shouldRenderLayer","findMapBounds","centerAndZoom","getCenterAndZoomFromBounds","scaledMapStyleSelector","mapControls","MapComponent","onMapRender","isExport","deckGlProps","glOptions","useDevicePixels","mapContainers","settings","MapViewStateContextProvider","NotificationPanelContent","NotificationPanelFactory","NotificationPanelUnmemoized","globalNotifications","notifications","topic","StyledStorageHeader","StyledBackBtn","LINK_STYLE","Title","CloudHeader","onBack","managementUrl","ArrowLeft","PrivacyBadge","privateMap","StyledVisualizationItem","CloudItem","_vis$description","vis","thumbnailStyle","backgroundImage","role","moment","utc","updatedAt","fromNow","StyledFlexContainer","CloudMaps","onSelectMap","maps","onLoadCloudMap","setMaps","setProviderInfo","listMaps","loadParams","FlexColContainer","StyledInteractionPanel","InteractionPanelFactory","TooltipConfigFactory","INTERACTION_CONFIG_ICONS","Messages","Pin","TooltipConfig","BrushConfig","onConfigChange","_ref$interactionConfi","interactionConfigIcons","setIsConfigAction","onDisplayFormatChange","togglePanelActive","toggleEnableConfig","PanelContent","InteractionPanel","interactionConfigChange","ChickletAddonWrapper","ChickletAddon","StyledPopover","hashStyles","IconDiv","tooltipVerticalLineColor","StyledTag","TooltipChickletFactory","TooltipChicklet","_this$node","contains","document","addEventListener","handleClickOutside","removeEventListener","tooltipField","fieldsToShow","fieldToShow","formatLabels","getFormatLabels","hasFormat","fl","getFormatValue","hashStyle","Translate","ChickletButton","TippyTooltip","placement","render","formatLabel","getFormatTooltip","Hash","DropdownList","TooltipConfigWrapper","ButtonWrapper","CompareSwitchWrapper","DatasetTooltipConfig","handleClick","findSelectedHelper","tooltipFields","handleSelect","handleReorderItems","newOrder","SBFlexboxNoMargin","reorderItems","closeOnSelect","CustomChickletComponent","handleChange","compareType","compareMode","StyledLayerGroupItem","LayerLabel","PanelLabelBold","LayerGroupItemFactory","LayerGroupColorPicker","_ref$isVisibilityTogg","_ref$isMoveToTopAvail","_ref$isColorPickerAva","onVisibilityToggle","onMoveToTopToggle","marginLeft","LayerGroupItem","Upload","StyledIcon","StyledOverwriteMapModal","CONFIRM_BUTTON","OverwriteMapModalFactory","DataTableModalStyle","smallModalCss","LoadDataModalStyle","DefaultStyle","ModalContainerFactory","OverWriteMapModal","ExportImageModal","ExportMapModal","ModalDialog","SaveMapModal","ShareMapModal","ModalContainer","_onKeyUp","_closeModal","addCustomMapStyle","fileList","loadFiles","exportHtml","exportJson","isPublic","overwrite","closeModal","toSave","providerActions","exportFileToCloud","mapData","onSuccess","onExportToCloudSuccess","onError","onExportToCloudError","_exportFileToCloud","_onSaveMap","resetProviderStatus","payload","loadCloudMap","onLoadCloudMapSuccess","onLoadCloudMapError","containerW","containerH","rootNode","providerState","currentModal","datasetKeyToRemove","editingDataset","cssStyle","footer","_deleteDataset","negative","_onFileUpload","_onLoadCloudMap","fileLoadingProgress","fileFormatNames","getFileFormatNames","fileExtensions","getFileExtensions","_onExportImage","setExportDataType","setExportSelectedDataset","setExportFiltered","_onExportData","keplerGlConfig","getConfigToSave","setExportMapFormat","setUserMapboxAccessToken","setExportHTMLMapMode","_onExportMap","_onAddCustomMapStyle","_onOverwriteMap","_onShareMapUrl","_onCloseSaveMap","parentSelector","findDOMNode","OverWriteMapModalFactory","ShareMapModalFactory","StyledLayerConfigGroupAction","StyledLayerConfigGroup","layerConfigGroupPaddingLeft","layerConfigGroupMarginBottom","StyledConfigGroupHeader","ConfigGroupContent","LayerConfigGroupLabelFactory","StyledLayerConfigGroupLabel","layerConfigGroupLabelBorderLeft","layerConfigGroupLabelMargin","layerConfigGroupLabelPadding","layerConfigGroupLabelLabelMargin","LayerConfigGroupLabel","_ref2$IconComponent","VertThreeDots","toggleCollapsed","onToggleCollapsed","DropdownContainer","secondaryInputBorderColor","DropdownMenu","ListItemWrapper","ListItem","tippyInstance","setTippyInstance","onClickBtn","getItem","addinterval","setInterval","console","clearInterval","buttonRendered","tabIndex","RootContext","Consumer","Tippy","trigger","interactive","appendTo","onCreate","duration","Typeahead","customClasses","listItem","Accessor","generateOptionToStringFor","Effect","_POSTPROCESSING_EFFEC","_props","getDefaultProps","isEnabled","isJsonEditorActive","_uiConfig","validateEffectParameters","deckEffect","_initializeEffect","_props$isEnabled","_props$isConfigActive","_props$isJsonEditorAc","_props$id","_props$type","_props$isEnabled2","_props$isConfigActive2","_props$isJsonEditorAc2","insertBefore","insertBeforeText","textToInsert","at","indexOf","CustomShadowModule","shadow","outputUniformShadow","CustomDeckLightingEffect","_LightingEffect","useOutputUniformShadow","layerFilter","viewports","onViewportActive","views","shadowMatrices","_calculateMatrices","shadowPasses","_createShadowPasses","programManager","ProgramManager","getDefaultProgramManager","addDefaultModule","dummyShadowMap","Texture2D","moduleParameters","shadowLightId","_createForOfIteratorHelper","shadowMaps","removeDefaultModule","LightingEffect","LIGHT_AND_SHADOW_EFFECT_DESC","class","_Effect","tz","guess","ambientLight","AmbientLight","intensity","sunLight","SunLight","_shadow","normalizeColor","directionalLights","POSTPROCESSING_EFFECTS_DESCS","PostProcessingEffect","effectDesc","desc","_this$deckEffect","_this$deckEffect$modu","DeckPostProcessEffect","module","_this$deckEffect2","defaultParameters","effectDescription","uniformsDesc","_description$defaultV","uniform","param","_this$deckEffect3","createEffect","params","PostProcessEffect"],"mappings":"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Q,UACRC,OAAQ,UACRC,OAAQ,UACRC,UAAW,UACXC,UAAW,UACXC,UAAW,UACXC,QAAS,UACTC,QAAS,UACTC,SAAU,UACVC,QAAS,UACTC,SAAU,UACVC,SAAU,UACVC,SAAU,UACVC,SAAU,UACVC,QAAS,UACTC,QAAS,UACTC,QAAS,UACTC,QAAS,UACTC,QAAS,UACTC,QAAS,UACTC,QAAS,UACTC,QAAS,UACTC,QAAS,UACTC,QAAS,UACTC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,QAAS,UACTC,QAAS,UACTC,QAAS,UACTC,QAAS,UACTC,QAAS,UACTC,QAAS,UACTC,QAAS,UACTC,QAAS,UACTC,QAAS,UACTC,QAAS,UACTC,QAAS,UACTC,QAAS,UACTC,QAAS,UACTC,QAAS,UACTC,QAAS,UACTC,QAAS,UACTC,QAAS,UACTC,QAAS,UACTC,QAAS,UACTC,QAAS,UACTC,QAAS,UACTC,QAAS,UACTC,SAAU,UACVC,SAAU,UACVC,SAAU,UACVC,UAAW,UACXC,UAAW,UACXC,UAAW,UACXC,UAAW,UACXC,UAAW,UACXC,UAAW,UACXC,UAAW,UACXC,UAAW,UACXC,UAAW,UACXC,UAAW,UACXC,QAAS,UACTC,QAAS,UACTC,QAAS,UACTC,SAAU,UACVC,SAAU,UACVC,SAAU,UACVC,UAAW,UACXC,UAAW,UACXC,UAAW,UACXC,UAAW,UACXC,UAAW,UACXC,UAAW,UACXC,UAAW,UACXC,UAAW,UACXC,QAAS,UACTC,QAAS,UACTC,QAAS,UACTC,QAAS,UACTC,QAAS,UACTC,QAAS,UACTC,UAAW,UACXC,UAAW,UACXC,SAAU,UACVC,SAAU,UACVC,SAAU,UACVC,SAAU,UACVC,SAAU,UACVC,SAAU,UACVC,SAAU,UACVC,SAAU,UACVC,SAAU,UACVC,SAAU,UACVC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,SAAU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","file":"3.bundle.js","sourcesContent":["// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport * as arrow from 'apache-arrow';\nimport {csvParseRows} from 'd3-dsv';\nimport {DATA_TYPES as AnalyzerDATA_TYPES} from 'type-analyzer';\nimport normalize from '@mapbox/geojson-normalize';\nimport {ArrowTable} from '@loaders.gl/schema';\nimport {ALL_FIELD_TYPES, DATASET_FORMATS, GUIDES_FILE_FORMAT_DOC} from '@kepler.gl/constants';\nimport {ProcessorResult, Field} from '@kepler.gl/types';\nimport {\n  arrowDataTypeToAnalyzerDataType,\n  arrowDataTypeToFieldType,\n  notNullorUndefined,\n  hasOwnProperty,\n  isPlainObject,\n  analyzerTypeToFieldType,\n  getSampleForTypeAnalyze,\n  getFieldsFromData,\n  toArray\n} from '@kepler.gl/utils';\nimport {KeplerGlSchema, ParsedDataset, SavedMap, LoadedMap} from '@kepler.gl/schemas';\nimport {Feature} from '@nebula.gl/edit-modes';\n\n// if any of these value occurs in csv, parse it to null;\n// const CSV_NULLS = ['', 'null', 'NULL', 'Null', 'NaN', '/N'];\n// matches empty string\nexport const CSV_NULLS = /^(null|NULL|Null|NaN|\\/N||)$/;\n\nfunction tryParseJsonString(str) {\n  try {\n    return JSON.parse(str);\n  } catch (e) {\n    return null;\n  }\n}\n\nexport const PARSE_FIELD_VALUE_FROM_STRING = {\n  [ALL_FIELD_TYPES.boolean]: {\n    valid: (d: unknown): boolean => typeof d === 'boolean',\n    parse: (d: unknown): boolean => d === 'true' || d === 'True' || d === 'TRUE' || d === '1'\n  },\n  [ALL_FIELD_TYPES.integer]: {\n    // @ts-ignore\n    valid: (d: unknown): boolean => parseInt(d, 10) === d,\n    // @ts-ignore\n    parse: (d: unknown): number => parseInt(d, 10)\n  },\n  [ALL_FIELD_TYPES.timestamp]: {\n    valid: (d: unknown, field: Field): boolean =>\n      ['x', 'X'].includes(field.format) ? typeof d === 'number' : typeof d === 'string',\n    parse: (d: any, field: Field) => (['x', 'X'].includes(field.format) ? Number(d) : d)\n  },\n  [ALL_FIELD_TYPES.real]: {\n    // @ts-ignore\n    valid: (d: unknown): boolean => parseFloat(d) === d,\n    // Note this will result in NaN for some string\n    parse: parseFloat\n  },\n  [ALL_FIELD_TYPES.object]: {\n    valid: isPlainObject,\n    parse: tryParseJsonString\n  },\n\n  [ALL_FIELD_TYPES.array]: {\n    valid: Array.isArray,\n    parse: tryParseJsonString\n  }\n};\n\n/**\n * Process csv data, output a data object with `{fields: [], rows: []}`.\n * The data object can be wrapped in a `dataset` and pass to [`addDataToMap`](../actions/actions.md#adddatatomap)\n * @param rawData raw csv string\n * @returns data object `{fields: [], rows: []}` can be passed to addDataToMaps\n * @public\n * @example\n * import {processCsvData} from 'kepler.gl/processors';\n *\n * const testData = `gps_data.utc_timestamp,gps_data.lat,gps_data.lng,gps_data.types,epoch,has_result,id,time,begintrip_ts_utc,begintrip_ts_local,date\n * 2016-09-17 00:09:55,29.9900937,31.2590542,driver_analytics,1472688000000,False,1,2016-09-23T00:00:00.000Z,2016-10-01 09:41:39+00:00,2016-10-01 09:41:39+00:00,2016-09-23\n * 2016-09-17 00:10:56,29.9927699,31.2461142,driver_analytics,1472688000000,False,2,2016-09-23T00:00:00.000Z,2016-10-01 09:46:37+00:00,2016-10-01 16:46:37+00:00,2016-09-23\n * 2016-09-17 00:11:56,29.9907261,31.2312742,driver_analytics,1472688000000,False,3,2016-09-23T00:00:00.000Z,,,2016-09-23\n * 2016-09-17 00:12:58,29.9870074,31.2175827,driver_analytics,1472688000000,False,4,2016-09-23T00:00:00.000Z,,,2016-09-23`\n *\n * const dataset = {\n *  info: {id: 'test_data', label: 'My Csv'},\n *  data: processCsvData(testData)\n * };\n *\n * dispatch(addDataToMap({\n *  datasets: [dataset],\n *  options: {centerMap: true, readOnly: true}\n * }));\n */\nexport function processCsvData(rawData: unknown[][] | string, header?: string[]): ProcessorResult {\n  let rows: unknown[][] | undefined;\n  let headerRow: string[] | undefined;\n\n  if (typeof rawData === 'string') {\n    const parsedRows: string[][] = csvParseRows(rawData);\n\n    if (!Array.isArray(parsedRows) || parsedRows.length < 2) {\n      // looks like an empty file, throw error to be catch\n      throw new Error('process Csv Data Failed: CSV is empty');\n    }\n    headerRow = parsedRows[0];\n    rows = parsedRows.slice(1);\n  } else if (Array.isArray(rawData) && rawData.length) {\n    rows = rawData;\n    headerRow = header;\n\n    if (!Array.isArray(headerRow)) {\n      // if data is passed in as array of rows and missing header\n      // assume first row is header\n      // @ts-ignore\n      headerRow = rawData[0];\n      rows = rawData.slice(1);\n    }\n  }\n\n  if (!rows || !headerRow) {\n    throw new Error('invalid input passed to processCsvData');\n  }\n\n  // here we assume the csv file that people uploaded will have first row\n  // as name of the column\n\n  cleanUpFalsyCsvValue(rows);\n  // No need to run type detection on every data point\n  // here we get a list of none null values to run analyze on\n  const sample = getSampleForTypeAnalyze({fields: headerRow, rows});\n  const fields = getFieldsFromData(sample, headerRow);\n  const parsedRows = parseRowsByFields(rows, fields);\n\n  return {fields, rows: parsedRows};\n}\n\n/**\n * Parse rows of csv by analyzed field types. So that `'1'` -> `1`, `'True'` -> `true`\n * @param rows\n * @param fields\n */\nexport function parseRowsByFields(rows: any[][], fields: Field[]) {\n  // Edit rows in place\n  const geojsonFieldIdx = fields.findIndex(f => f.name === '_geojson');\n  fields.forEach(parseCsvRowsByFieldType.bind(null, rows, geojsonFieldIdx));\n\n  return rows;\n}\n\n/**\n * Convert falsy value in csv including `'', 'null', 'NULL', 'Null', 'NaN'` to `null`,\n * so that type-analyzer won't detect it as string\n *\n * @param rows\n */\nfunction cleanUpFalsyCsvValue(rows: unknown[][]): void {\n  const re = new RegExp(CSV_NULLS, 'g');\n  for (let i = 0; i < rows.length; i++) {\n    for (let j = 0; j < rows[i].length; j++) {\n      // analyzer will set any fields to 'string' if there are empty values\n      // which will be parsed as '' by d3.csv\n      // here we parse empty data as null\n      // TODO: create warning when deltect `CSV_NULLS` in the data\n      if (typeof rows[i][j] === 'string' && (rows[i][j] as string).match(re)) {\n        rows[i][j] = null;\n      }\n    }\n  }\n}\n\n/**\n * Process uploaded csv file to parse value by field type\n *\n * @param rows\n * @param geoFieldIdx field index\n * @param field\n * @param i\n */\nexport function parseCsvRowsByFieldType(\n  rows: unknown[][],\n  geoFieldIdx: number,\n  field: Field,\n  i: number\n): void {\n  const parser = PARSE_FIELD_VALUE_FROM_STRING[field.type];\n  if (parser) {\n    // check first not null value of it's already parsed\n    const first = rows.find(r => notNullorUndefined(r[i]));\n    if (!first || parser.valid(first[i], field)) {\n      return;\n    }\n    rows.forEach(row => {\n      // parse string value based on field type\n      if (row[i] !== null) {\n        row[i] = parser.parse(row[i], field);\n        if (\n          geoFieldIdx > -1 &&\n          isPlainObject(row[geoFieldIdx]) &&\n          // @ts-ignore\n          hasOwnProperty(row[geoFieldIdx], 'properties')\n        ) {\n          // @ts-ignore\n          row[geoFieldIdx].properties[field.name] = row[i];\n        }\n      }\n    });\n  }\n}\n\n/* eslint-enable complexity */\n\n/**\n * Process data where each row is an object, output can be passed to [`addDataToMap`](../actions/actions.md#adddatatomap)\n * NOTE: This function may mutate input.\n * @param rawData an array of row object, each object should have the same number of keys\n * @returns dataset containing `fields` and `rows`\n * @public\n * @example\n * import {addDataToMap} from 'kepler.gl/actions';\n * import {processRowObject} from 'kepler.gl/processors';\n *\n * const data = [\n *  {lat: 31.27, lng: 127.56, value: 3},\n *  {lat: 31.22, lng: 126.26, value: 1}\n * ];\n *\n * dispatch(addDataToMap({\n *  datasets: {\n *    info: {label: 'My Data', id: 'my_data'},\n *    data: processRowObject(data)\n *  }\n * }));\n */\nexport function processRowObject(rawData: unknown[]): ProcessorResult {\n  if (!Array.isArray(rawData)) {\n    return null;\n  } else if (!rawData.length) {\n    // data is empty\n    return {\n      fields: [],\n      rows: []\n    };\n  }\n\n  const keys = Object.keys(rawData[0]); // [lat, lng, value]\n  const rows = rawData.map(d => keys.map(key => d[key])); // [[31.27, 127.56, 3]]\n\n  // row object an still contain values like `Null` or `N/A`\n  cleanUpFalsyCsvValue(rows);\n\n  return processCsvData(rows, keys);\n}\n\n/**\n * Process GeoJSON [`FeatureCollection`](http://wiki.geojson.org/GeoJSON_draft_version_6#FeatureCollection),\n * output a data object with `{fields: [], rows: []}`.\n * The data object can be wrapped in a `dataset` and passed to [`addDataToMap`](../actions/actions.md#adddatatomap)\n * NOTE: This function may mutate input.\n *\n * @param rawData raw geojson feature collection\n * @returns dataset containing `fields` and `rows`\n * @public\n * @example\n * import {addDataToMap} from 'kepler.gl/actions';\n * import {processGeojson} from 'kepler.gl/processors';\n *\n * const geojson = {\n * \t\"type\" : \"FeatureCollection\",\n * \t\"features\" : [{\n * \t\t\"type\" : \"Feature\",\n * \t\t\"properties\" : {\n * \t\t\t\"capacity\" : \"10\",\n * \t\t\t\"type\" : \"U-Rack\"\n * \t\t},\n * \t\t\"geometry\" : {\n * \t\t\t\"type\" : \"Point\",\n * \t\t\t\"coordinates\" : [ -71.073283, 42.417500 ]\n * \t\t}\n * \t}]\n * };\n *\n * dispatch(addDataToMap({\n *  datasets: {\n *    info: {\n *      label: 'Sample Taxi Trips in New York City',\n *      id: 'test_trip_data'\n *    },\n *    data: processGeojson(geojson)\n *  }\n * }));\n */\nexport function processGeojson(rawData: unknown): ProcessorResult {\n  const normalizedGeojson = normalize(rawData);\n\n  if (!normalizedGeojson || !Array.isArray(normalizedGeojson.features)) {\n    const error = new Error(\n      `Read File Failed: File is not a valid GeoJSON. Read more about [supported file format](${GUIDES_FILE_FORMAT_DOC})`\n    );\n    throw error;\n    // fail to normalize geojson\n  }\n\n  // getting all feature fields\n  const allDataRows: Array<{_geojson: Feature} & keyof Feature> = [];\n  for (let i = 0; i < normalizedGeojson.features.length; i++) {\n    const f = normalizedGeojson.features[i];\n    if (f.geometry) {\n      allDataRows.push({\n        // add feature to _geojson field\n        _geojson: f,\n        ...(f.properties || {})\n      });\n    }\n  }\n  // get all the field\n  const fields = allDataRows.reduce<string[]>((accu, curr) => {\n    Object.keys(curr).forEach(key => {\n      if (!accu.includes(key)) {\n        accu.push(key);\n      }\n    });\n    return accu;\n  }, []);\n\n  // make sure each feature has exact same fields\n  allDataRows.forEach(d => {\n    fields.forEach(f => {\n      if (!(f in d)) {\n        d[f] = null;\n        if (d._geojson.properties) {\n          d._geojson.properties[f] = null;\n        }\n      }\n    });\n  });\n\n  return processRowObject(allDataRows);\n}\n\n/**\n * Process saved kepler.gl json to be pass to [`addDataToMap`](../actions/actions.md#adddatatomap).\n * The json object should contain `datasets` and `config`.\n * @param rawData\n * @param schema\n * @returns datasets and config `{datasets: {}, config: {}}`\n * @public\n * @example\n * import {addDataToMap} from 'kepler.gl/actions';\n * import {processKeplerglJSON} from 'kepler.gl/processors';\n *\n * dispatch(addDataToMap(processKeplerglJSON(keplerGlJson)));\n */\nexport function processKeplerglJSON(rawData: SavedMap, schema = KeplerGlSchema): LoadedMap | null {\n  return rawData ? schema.load(rawData.datasets, rawData.config) : null;\n}\n\n/**\n * Parse a single or an array of datasets saved using kepler.gl schema\n * @param rawData\n * @param schema\n */\nexport function processKeplerglDataset(\n  rawData: object | object[],\n  schema = KeplerGlSchema\n): ParsedDataset | ParsedDataset[] | null {\n  if (!rawData) {\n    return null;\n  }\n\n  const results = schema.parseSavedData(toArray(rawData));\n  if (!results) {\n    return null;\n  }\n  return Array.isArray(rawData) ? results : results[0];\n}\n\n/**\n * Parse arrow table and return a dataset\n *\n * @param arrowTable ArrowTable to parse, see loaders.gl/schema\n * @returns dataset containing `fields` and `rows` or null\n */\nexport function processArrowTable(arrowTable: ArrowTable): ProcessorResult | null {\n   return processArrowBatches((arrowTable as any).data.batches);\n}\n\n/**\n * Parse arrow batches returned from parseInBatches()\n *\n * @param arrowTable the arrow table to parse\n * @returns dataset containing `fields` and `rows` or null\n */\nexport function processArrowBatches(arrowBatches: arrow.RecordBatch[]): ProcessorResult | null {\n  if (arrowBatches.length === 0) {\n    return null;\n  }\n  const arrowTable = new arrow.Table(arrowBatches);\n  const fields: Field[] = [];\n\n  // parse fields\n  arrowTable.schema.fields.forEach((field: arrow.Field, index: number) => {\n    const isGeometryColumn = field.metadata.get('ARROW:extension:name')?.startsWith('geoarrow');\n    fields.push({\n      name: field.name,\n      id: field.name,\n      displayName: field.name,\n      format: '',\n      fieldIdx: index,\n      type: isGeometryColumn ? ALL_FIELD_TYPES.geoarrow : arrowDataTypeToFieldType(field.type),\n      analyzerType: isGeometryColumn\n        ? AnalyzerDATA_TYPES.GEOMETRY\n        : arrowDataTypeToAnalyzerDataType(field.type),\n      valueAccessor: (dc: any) => d => {\n        return dc.valueAt(d.index, index);\n      },\n      metadata: field.metadata\n    });\n  });\n\n  const cols = [...Array(arrowTable.numCols).keys()].map(i => arrowTable.getChildAt(i));\n  // return empty rows and use raw arrow table to construct column-wise data container\n  return {fields, rows: [], cols, metadata: arrowTable.schema.metadata};\n}\n\nexport const DATASET_HANDLERS = {\n  [DATASET_FORMATS.row]: processRowObject,\n  [DATASET_FORMATS.geojson]: processGeojson,\n  [DATASET_FORMATS.csv]: processCsvData,\n  [DATASET_FORMATS.arrow]: processArrowTable,\n  [DATASET_FORMATS.keplergl]: processKeplerglDataset\n};\n\nexport const Processors: {\n  processGeojson: typeof processGeojson;\n  processCsvData: typeof processCsvData;\n  processArrowTable: typeof processArrowTable;\n  processArrowBatches: typeof processArrowBatches;\n  processRowObject: typeof processRowObject;\n  processKeplerglJSON: typeof processKeplerglJSON;\n  processKeplerglDataset: typeof processKeplerglDataset;\n  analyzerTypeToFieldType: typeof analyzerTypeToFieldType;\n  getFieldsFromData: typeof getFieldsFromData;\n  parseCsvRowsByFieldType: typeof parseCsvRowsByFieldType;\n} = {\n  processGeojson,\n  processCsvData,\n  processArrowTable,\n  processArrowBatches,\n  processRowObject,\n  processKeplerglJSON,\n  processKeplerglDataset,\n  analyzerTypeToFieldType,\n  getFieldsFromData,\n  parseCsvRowsByFieldType\n};\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport * as arrow from 'apache-arrow';\nimport {parseInBatches} from '@loaders.gl/core';\nimport {JSONLoader, _JSONPath} from '@loaders.gl/json';\nimport {CSVLoader} from '@loaders.gl/csv';\nimport {ArrowLoader} from '@loaders.gl/arrow';\nimport {\n  processArrowBatches,\n  processGeojson,\n  processKeplerglJSON,\n  processRowObject\n} from './data-processor';\nimport {generateHashId, isPlainObject, generateHashIdFromString} from '@kepler.gl/utils';\nimport {DATASET_FORMATS} from '@kepler.gl/constants';\nimport {Loader} from '@loaders.gl/loader-utils';\nimport {FileCacheItem, ValidKeplerGlMap} from './types';\nimport {Feature, AddDataToMapPayload} from '@kepler.gl/types';\nimport {FeatureCollection} from '@turf/helpers';\n\nconst BATCH_TYPE = {\n  METADATA: 'metadata',\n  PARTIAL_RESULT: 'partial-result',\n  FINAL_RESULT: 'final-result'\n};\n\nconst CSV_LOADER_OPTIONS = {\n  shape: 'object-row-table',\n  dynamicTyping: false // not working for now\n};\n\nconst ARROW_LOADER_OPTIONS = {\n  shape: 'arrow-table',\n  batchDebounceMs: 10 // time to delay between batches, for incremental loading\n};\n\nconst JSON_LOADER_OPTIONS = {\n  shape: 'object-row-table',\n  // instruct loaders.gl on what json paths to stream\n  jsonpaths: [\n    '$', // JSON Row array\n    '$.features', // GeoJSON\n    '$.datasets' // KeplerGL JSON\n  ]\n};\n\nexport type ProcessFileDataContent = {\n  data: unknown;\n  fileName: string;\n  length?: number;\n  progress?: {rowCount?: number; rowCountInBatch?: number; percent?: number};\n  /**  metadata e.g. for arrow data, metadata could be the schema.fields */\n  metadata?: Map<string, string>;\n};\n\n/**\n * check if table is an ArrowTable object\n * @param table - object to check\n * @returns {boolean} - true if table is an ArrowTable object type guarded\n */\nexport function isArrowTable(table: any): table is arrow.Table {\n  return Boolean(table instanceof arrow.Table);\n}\n\n/**\n * check if data is an ArrowData object, which is an array of RecordBatch\n * @param data - object to check\n * @returns {boolean} - true if data is an ArrowData object type guarded\n */\nexport function isArrowData(data: any): boolean {\n  return Array.isArray(data) && Boolean(data[0].data && data[0].schema);\n}\n\nexport function isGeoJson(json: unknown): json is Feature | FeatureCollection {\n  // json can be feature collection\n  // or single feature\n  return isPlainObject(json) && (isFeature(json) || isFeatureCollection(json));\n}\n\nexport function isFeature(json: unknown): json is Feature {\n  return isPlainObject(json) && json.type === 'Feature' && Boolean(json.geometry);\n}\n\nexport function isFeatureCollection(json: unknown): json is FeatureCollection {\n  return isPlainObject(json) && json.type === 'FeatureCollection' && Boolean(json.features);\n}\n\nexport function isRowObject(json: any): boolean {\n  return Array.isArray(json) && isPlainObject(json[0]);\n}\n\nexport function isKeplerGlMap(json: unknown): json is ValidKeplerGlMap {\n  return Boolean(\n    isPlainObject(json) &&\n      json.datasets &&\n      json.config &&\n      json.info &&\n      isPlainObject(json.info) &&\n      json.info.app === 'kepler.gl'\n  );\n}\n\nexport async function* makeProgressIterator(\n  asyncIterator: AsyncIterable<any>,\n  info: {size: number}\n): AsyncGenerator {\n  let rowCount = 0;\n\n  for await (const batch of asyncIterator) {\n    // the length could be stored in `batch.length` for arrow batch\n    const rowCountInBatch = (batch.data && (batch.data.length || batch.length)) || 0;\n    rowCount += rowCountInBatch;\n    const percent = Number.isFinite(batch.bytesUsed) ? batch.bytesUsed / info.size : null;\n\n    // Update progress object\n    const progress = {\n      rowCount,\n      rowCountInBatch,\n      ...(Number.isFinite(percent) ? {percent} : {})\n    };\n\n    yield {...batch, progress};\n  }\n}\n\n// eslint-disable-next-line complexity\nexport async function* readBatch(\n  asyncIterator: AsyncIterable<any>,\n  fileName: string\n): AsyncGenerator {\n  let result = null;\n  const batches = <any>[];\n  for await (const batch of asyncIterator) {\n    // Last batch will have this special type and will provide all the root\n    // properties of the parsed document.\n    // Only json parse will have `FINAL_RESULT`\n    if (batch.batchType === BATCH_TYPE.FINAL_RESULT) {\n      if (batch.container) {\n        result = {...batch.container};\n      }\n      // Set the streamed data correctly is Batch json path is set\n      // and the path streamed is not the top level object (jsonpath = '$')\n      if (batch.jsonpath && batch.jsonpath.length > 1) {\n        const streamingPath = new _JSONPath(batch.jsonpath);\n        streamingPath.setFieldAtPath(result, batches);\n      } else if (batch.jsonpath && batch.jsonpath.length === 1) {\n        // The streamed object is a ROW JSON-batch (jsonpath = '$')\n        // row objects\n        result = batches;\n      }\n    } else {\n      const batchData = isArrowTable(batch.data) ? batch.data.batches : batch.data;\n      for (let i = 0; i < batchData?.length; i++) {\n        batches.push(batchData[i]);\n      }\n    }\n\n    yield {\n      ...batch,\n      ...(batch.schema ? {headers: Object.keys(batch.schema)} : {}),\n      fileName,\n      // if dataset is CSV, data is set to the raw batches\n      data: result ? result : batches\n    };\n  }\n}\n\nexport async function readFileInBatches({\n  file,\n  loaders = [],\n  loadOptions = {}\n}: {\n  file: File;\n  fileCache: FileCacheItem[];\n  loaders: Loader[];\n  loadOptions: any;\n}): Promise<AsyncGenerator> {\n  loaders = [JSONLoader, CSVLoader, ArrowLoader, ...loaders];\n  loadOptions = {\n    csv: CSV_LOADER_OPTIONS,\n    arrow: ARROW_LOADER_OPTIONS,\n    json: JSON_LOADER_OPTIONS,\n    metadata: true,\n    ...loadOptions\n  };\n\n  const batchIterator = await parseInBatches(file, loaders, loadOptions);\n  const progressIterator = makeProgressIterator(batchIterator, {size: file.size});\n\n  return readBatch(progressIterator, file.name);\n}\n\nexport function processFileData({\n  content,\n  fileCache\n}: {\n  content: ProcessFileDataContent;\n  fileCache: FileCacheItem[];\n}): Promise<FileCacheItem[]> {\n  return new Promise((resolve, reject) => {\n    let {fileName, data} = content;\n    let format: string | undefined;\n    let processor: Function | undefined;\n\n    // generate unique id with length of 4 using fileName string\n    const id = generateHashIdFromString(fileName);\n\n    if (isArrowData(data)) {\n      format = DATASET_FORMATS.arrow;\n      processor = processArrowBatches;\n    } else if (isKeplerGlMap(data)) {\n      format = DATASET_FORMATS.keplergl;\n      processor = processKeplerglJSON;\n    } else if (isRowObject(data)) {\n      format = DATASET_FORMATS.row;\n      processor = processRowObject;\n    } else if (isGeoJson(data)) {\n      format = DATASET_FORMATS.geojson;\n      processor = processGeojson;\n    }\n\n    if (format && processor) {\n      const result = processor(data);\n\n      resolve([\n        ...fileCache,\n        {\n          data: result,\n          info: {\n            id,\n            label: content.fileName,\n            format\n          }\n        }\n      ]);\n    }\n\n    reject('Unknown File Format');\n  });\n}\n\nexport function filesToDataPayload(fileCache: FileCacheItem[]): AddDataToMapPayload[] {\n  // seperate out files which could be a single datasets. or a keplergl map json\n  const collection = fileCache.reduce<{\n    datasets: FileCacheItem[];\n    keplerMaps: AddDataToMapPayload[];\n  }>(\n    (accu, file) => {\n      const {data, info} = file;\n      if (info?.format === DATASET_FORMATS.keplergl) {\n        // if file contains a single kepler map dataset & config\n        accu.keplerMaps.push({\n          ...data,\n          options: {\n            centerMap: !(data.config && data.config.mapState)\n          }\n        });\n      } else if (DATASET_FORMATS[info?.format]) {\n        // if file contains only data\n        const newDataset = {\n          data,\n          info: {\n            id: info?.id || generateHashId(4),\n            ...(info || {})\n          }\n        };\n        accu.datasets.push(newDataset);\n      }\n      return accu;\n    },\n    {datasets: [], keplerMaps: []}\n  );\n\n  // add kepler map first with config\n  // add datasets later in one add data call\n  return collection.keplerMaps.concat({datasets: collection.datasets});\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {Component, CSSProperties} from 'react';\n\nconst getStyleClassFromColor = (totalColor: number, colors: string[]) =>\n  new Array(totalColor)\n    .fill(1)\n    .reduce((accu, c, i) => `${accu}.cr${i + 1} {fill:${colors[i % colors.length]};}`, '');\n\nconst nop = () => {};\n\nexport type BaseProps = {\n  /** Set the height of the icon, ex. '16px' */\n  height?: string;\n  /** Set the width of the icon, ex. '16px' */\n  width?: string;\n  /** Set the viewbox of the svg */\n  viewBox?: string;\n  /** Path element */\n\n  predefinedClassName?: string;\n  className?: string;\n  style?: CSSProperties;\n  colors?: string[];\n  totalColor?: number;\n} & React.SVGAttributes<SVGSVGElement> &\n  React.DOMAttributes<SVGSVGElement>;\n\nexport class Base extends Component<BaseProps> {\n  static displayName = 'Base Icon';\n\n  static defaultProps = {\n    height: null,\n    width: null,\n    viewBox: '0 0 64 64',\n    predefinedClassName: '',\n    className: '',\n    style: {\n      fill: 'currentColor'\n    }\n  };\n\n  render() {\n    const {\n      height,\n      width,\n      viewBox,\n      style,\n      children,\n      predefinedClassName,\n      className,\n      colors,\n      totalColor,\n      ...props\n    } = this.props;\n    const svgHeight = height;\n    const svgWidth = width || svgHeight;\n\n    const fillStyle =\n      Array.isArray(colors) && totalColor && getStyleClassFromColor(totalColor, colors);\n\n    return (\n      <svg\n        viewBox={viewBox}\n        width={svgWidth}\n        height={svgHeight}\n        style={style}\n        className={`${predefinedClassName} ${className}`}\n        onClick={nop}\n        {...props}\n      >\n        {fillStyle ? <style type=\"text/css\">{fillStyle}</style> : null}\n        {children}\n      </svg>\n    );\n  }\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {Base} from './base';\n\nclass DefaultLayerIcon extends Component {\n  static propTypes = {\n    height: PropTypes.string,\n    colors: PropTypes.arrayOf(PropTypes.string)\n  };\n\n  static defaultProps = {\n    height: '16px',\n    predefinedClassName: 'default-layer-icon'\n  };\n\n  render() {\n    return (\n      <Base {...this.props}>\n        <circle cx=\"29.4\" cy=\"31.6\" r=\"8.4\" />\n        <circle cx=\"48.5\" cy=\"15.7\" r=\"6.5\" />\n        <circle cx=\"11\" cy=\"44.2\" r=\"3\" />\n        <circle cx=\"50\" cy=\"44.2\" r=\"5\" />\n        <circle cx=\"34\" cy=\"54.2\" r=\"3\" />\n        <circle cx=\"14\" cy=\"16.2\" r=\"4\" />\n      </Base>\n    );\n  }\n}\n\nexport default DefaultLayerIcon;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\n/* eslint-disable guard-for-in */\n\n/**\n *\n * @param {Object} updateTriggers {getPosition: {column}, getData: {filteredIndex}}\n * @param {Object} oldUpdateTriggers\n * @returns {boolean|object} `false` if nothing changed, or `triggerChanged` as an object\n */\nexport function diffUpdateTriggers(updateTriggers, oldUpdateTriggers = {}) {\n  const triggerChanged: {[key: string]: true} = {};\n  let reason: boolean | {[key: string]: true} = false;\n\n  for (const triggerName in updateTriggers) {\n    const newTriggers = updateTriggers[triggerName] || {};\n    const oldTriggers = oldUpdateTriggers[triggerName] || {};\n    const diffReason = compareUpdateTrigger(newTriggers, oldTriggers, triggerName);\n\n    if (diffReason) {\n      triggerChanged[triggerName] = true;\n      reason = triggerChanged;\n    }\n  }\n\n  return reason;\n}\n\nfunction compareUpdateTrigger(newTriggers, oldTriggers, triggerName) {\n  if (typeof oldTriggers !== 'object') {\n    return oldTriggers === newTriggers ? null : `${triggerName} changed shallowly`;\n  }\n\n  for (const key in oldTriggers) {\n    if (!(key in newTriggers)) {\n      return `${triggerName}.${key} deleted`;\n    }\n\n    // shallow compare\n    if (oldTriggers[key] !== newTriggers[key]) {\n      return `${triggerName}.${key} changed shallowly`;\n    }\n  }\n\n  for (const key in newTriggers) {\n    if (!(key in oldTriggers)) {\n      return `${triggerName}.${key} added`;\n    }\n  }\n\n  return null;\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React from 'react';\nimport {console as Console} from 'global/window';\nimport keymirror from 'keymirror';\nimport {DataFilterExtension} from '@deck.gl/extensions';\nimport {COORDINATE_SYSTEM} from '@deck.gl/core';\nimport {TextLayer} from '@deck.gl/layers';\n\nimport DefaultLayerIcon from './default-layer-icon';\nimport {diffUpdateTriggers} from './layer-update';\n\nimport {\n  ALL_FIELD_TYPES,\n  NO_VALUE_COLOR,\n  SCALE_TYPES,\n  CHANNEL_SCALES,\n  FIELD_OPTS,\n  SCALE_FUNC,\n  CHANNEL_SCALE_SUPPORTED_FIELDS,\n  MAX_GPU_FILTERS,\n  ColorRange,\n  COLOR_RANGES,\n  DataVizColors,\n  LAYER_VIS_CONFIGS,\n  DEFAULT_TEXT_LABEL,\n  DEFAULT_COLOR_UI,\n  UNKNOWN_COLOR_KEY,\n  DEFAULT_HIGHLIGHT_COLOR,\n  DEFAULT_LAYER_LABEL,\n  PROJECTED_PIXEL_SIZE_MULTIPLIER,\n  TEXT_OUTLINE_MULTIPLIER\n} from '@kepler.gl/constants';\n\nimport {\n  generateHashId,\n  getColorGroupByName,\n  reverseColorRange,\n  hexToRgb,\n  getLatLngBounds,\n  isPlainObject,\n  notNullorUndefined,\n  DataContainerInterface,\n  getSampleContainerData\n} from '@kepler.gl/utils';\n\nimport {\n  RGBColor,\n  RGBAColor,\n  ValueOf,\n  NestedPartial,\n  LayerTextLabel,\n  ColorUI,\n  LayerVisConfig,\n  LayerVisConfigSettings,\n  Field,\n  MapState,\n  Filter\n} from '@kepler.gl/types';\nimport {KeplerTable, Datasets, GpuFilter} from '@kepler.gl/table';\n\nexport type LayerColumn = {value: string | null; fieldIdx: number; optional?: boolean};\n\nexport type LayerColumns = {\n  [key: string]: LayerColumn;\n};\nexport type VisualChannelDomain = number[] | string[];\nexport type VisualChannelField = Field | null;\nexport type VisualChannelScale = keyof typeof SCALE_TYPES;\n\nexport type LayerBaseConfig = {\n  dataId: string;\n  label: string;\n  color: RGBColor;\n\n  columns: LayerColumns;\n  isVisible: boolean;\n  isConfigActive: boolean;\n  highlightColor: RGBColor | RGBAColor;\n  hidden: boolean;\n\n  visConfig: LayerVisConfig;\n  textLabel: LayerTextLabel[];\n\n  colorUI: {\n    color: ColorUI;\n    colorRange: ColorUI;\n  };\n  animation: {\n    enabled: boolean;\n    domain?: null;\n  };\n};\n\nexport type LayerBaseConfigPartial = {dataId: LayerBaseConfig['dataId']} & Partial<LayerBaseConfig>;\n\nexport type LayerColorConfig = {\n  colorField: VisualChannelField;\n  colorDomain: VisualChannelDomain;\n  colorScale: VisualChannelScale;\n};\nexport type LayerSizeConfig = {\n  // color by size, domain is set by filters, field, scale type\n  sizeDomain: VisualChannelDomain;\n  sizeScale: VisualChannelScale;\n  sizeField: VisualChannelField;\n};\nexport type LayerHeightConfig = {\n  heightField: VisualChannelField;\n  heightDomain: VisualChannelDomain;\n  heightScale: VisualChannelScale;\n};\nexport type LayerStrokeColorConfig = {\n  strokeColorField: VisualChannelField;\n  strokeColorDomain: VisualChannelDomain;\n  strokeColorScale: VisualChannelScale;\n};\nexport type LayerCoverageConfig = {\n  coverageField: VisualChannelField;\n  coverageDomain: VisualChannelDomain;\n  coverageScale: VisualChannelScale;\n};\nexport type LayerRadiusConfig = {\n  radiusField: VisualChannelField;\n  radiusDomain: VisualChannelDomain;\n  radiusScale: VisualChannelScale;\n};\nexport type LayerWeightConfig = {\n  weightField: VisualChannelField;\n};\n\nexport type VisualChannels = {[key: string]: VisualChannel};\n\nexport type VisualChannelAggregation = 'colorAggregation' | 'sizeAggregation';\n\nexport type VisualChannel = {\n  property: string;\n  field: string;\n  scale: string;\n  domain: string;\n  range: string;\n  key: string;\n  channelScaleType: string;\n  nullValue?: any;\n  defaultMeasure?: any;\n  accessor?: string;\n  condition?: (config: any) => boolean;\n  defaultValue?: ((config: any) => any) | any;\n  getAttributeValue?: (config: any) => (d: any) => any;\n\n  // TODO: define fixed\n  fixed?: any;\n\n  supportedFieldTypes?: Array<keyof typeof ALL_FIELD_TYPES>;\n\n  aggregation?: VisualChannelAggregation;\n};\n\nexport type VisualChannelDescription = {\n  label: string;\n  measure: string | undefined;\n};\n\nexport type ColumnPair = {\n  pair: string;\n  fieldPairKey: string;\n};\n\nexport type ColumnPairs = {[key: string]: ColumnPair};\n\ntype ColumnValidator = (column: LayerColumn, columns: LayerColumns, allFields: Field[]) => boolean;\n\nexport type UpdateTriggers = {\n  [key: string]: UpdateTrigger;\n};\nexport type UpdateTrigger = {\n  [key: string]: {};\n};\nexport type LayerBounds = [number, number, number, number];\nexport type FindDefaultLayerPropsReturnValue = {props: any[]; foundLayers?: any[]};\n/**\n * Approx. number of points to sample in a large data set\n */\nexport const LAYER_ID_LENGTH = 6;\n\nconst MAX_SAMPLE_SIZE = 5000;\nconst defaultDomain: [number, number] = [0, 1];\nconst dataFilterExtension = new DataFilterExtension({filterSize: MAX_GPU_FILTERS});\n\nconst defaultDataAccessor = dc => d => d;\nconst defaultGetFieldValue = (field, d) => field.valueAccessor(d);\n\nexport const OVERLAY_TYPE_CONST = keymirror({\n  deckgl: null,\n  mapboxgl: null\n});\n\nexport const layerColors = Object.values(DataVizColors).map(hexToRgb);\nfunction* generateColor(): Generator<RGBColor> {\n  let index = 0;\n  while (index < layerColors.length + 1) {\n    if (index === layerColors.length) {\n      index = 0;\n    }\n    yield layerColors[index++];\n  }\n}\n\nexport const colorMaker = generateColor();\n\nexport type BaseLayerConstructorProps = {\n  id?: string;\n} & LayerBaseConfigPartial;\n\nclass Layer {\n  id: string;\n  meta: Record<string, any>;\n  visConfigSettings: {\n    [key: string]: ValueOf<LayerVisConfigSettings>;\n  };\n  config: LayerBaseConfig;\n  // TODO: define _oldDataUpdateTriggers\n  _oldDataUpdateTriggers: any;\n\n  isValid: boolean;\n  errorMessage: string | null;\n\n  constructor(props: BaseLayerConstructorProps) {\n    this.id = props.id || generateHashId(LAYER_ID_LENGTH);\n\n    // meta\n    this.meta = {};\n\n    // visConfigSettings\n    this.visConfigSettings = {};\n\n    this.config = this.getDefaultLayerConfig({\n      columns: this.getLayerColumns(),\n      ...props\n    });\n\n    // false indicates that the layer caused an error, and was disabled\n    this.isValid = true;\n    this.errorMessage = null;\n  }\n\n  get layerIcon(): React.ElementType {\n    return DefaultLayerIcon;\n  }\n\n  get overlayType(): keyof typeof OVERLAY_TYPE_CONST {\n    return OVERLAY_TYPE_CONST.deckgl;\n  }\n\n  get type(): string | null {\n    return null;\n  }\n\n  get name() {\n    return this.type;\n  }\n\n  get isAggregated() {\n    return false;\n  }\n\n  get requiredLayerColumns(): string[] {\n    return [];\n  }\n\n  get optionalColumns(): string[] {\n    return [];\n  }\n\n  get noneLayerDataAffectingProps() {\n    return ['label', 'opacity', 'thickness', 'isVisible', 'hidden'];\n  }\n\n  get visualChannels(): VisualChannels {\n    return {\n      color: {\n        property: 'color',\n        field: 'colorField',\n        scale: 'colorScale',\n        domain: 'colorDomain',\n        range: 'colorRange',\n        key: 'color',\n        channelScaleType: CHANNEL_SCALES.color,\n        nullValue: NO_VALUE_COLOR,\n        defaultValue: config => config.color\n      },\n      size: {\n        property: 'size',\n        field: 'sizeField',\n        scale: 'sizeScale',\n        domain: 'sizeDomain',\n        range: 'sizeRange',\n        key: 'size',\n        channelScaleType: CHANNEL_SCALES.size,\n        nullValue: 0,\n        defaultValue: 1\n      }\n    };\n  }\n\n  get columnValidators(): {[key: string]: ColumnValidator} {\n    return {};\n  }\n  /*\n   * Column pairs maps layer column to a specific field pairs,\n   * By default, it is set to null\n   */\n  get columnPairs(): ColumnPairs | null {\n    return null;\n  }\n\n  /*\n   * Default point column pairs, can be used for point based layers: point, icon etc.\n   */\n  get defaultPointColumnPairs(): ColumnPairs {\n    return {\n      lat: {pair: 'lng', fieldPairKey: 'lat'},\n      lng: {pair: 'lat', fieldPairKey: 'lng'}\n    };\n  }\n\n  /*\n   * Default link column pairs, can be used for link based layers: arc, line etc\n   */\n  get defaultLinkColumnPairs(): ColumnPairs {\n    return {\n      lat0: {pair: 'lng0', fieldPairKey: 'lat'},\n      lng0: {pair: 'lat0', fieldPairKey: 'lng'},\n      lat1: {pair: 'lng1', fieldPairKey: 'lat'},\n      lng1: {pair: 'lat1', fieldPairKey: 'lng'}\n    };\n  }\n\n  /**\n   * Return a React component for to render layer instructions in a modal\n   * @returns {object} - an object\n   * @example\n   *  return {\n   *    id: 'iconInfo',\n   *    template: IconInfoModal,\n   *    modalProps: {\n   *      title: 'How to draw icons'\n   *   };\n   * }\n   */\n  get layerInfoModal(): any {\n    return null;\n  }\n\n  get supportedDatasetTypes(): string[] | null {\n    return null;\n  }\n  /*\n   * Given a dataset, automatically find props to create layer based on it\n   * and return the props and previous found layers.\n   * By default, no layers will be found\n   */\n  static findDefaultLayerProps(\n    dataset: KeplerTable,\n    foundLayers?: any[]\n  ): FindDefaultLayerPropsReturnValue {\n    return {props: [], foundLayers};\n  }\n\n  /**\n   * Given a array of preset required column names\n   * found field that has the same name to set as layer column\n   *\n   * @param {object} defaultFields\n   * @param {object[]} allFields\n   * @returns {object[] | null} all possible required layer column pairs\n   */\n  static findDefaultColumnField(defaultFields, allFields) {\n    // find all matched fields for each required col\n    const requiredColumns = Object.keys(defaultFields).reduce((prev, key) => {\n      const requiredFields = allFields.filter(\n        f => f.name === defaultFields[key] || defaultFields[key].includes(f.name)\n      );\n\n      prev[key] = requiredFields.length\n        ? requiredFields.map(f => ({\n            value: f.name,\n            fieldIdx: f.fieldIdx\n          }))\n        : null;\n      return prev;\n    }, {});\n\n    if (!Object.values(requiredColumns).every(Boolean)) {\n      // if any field missing, return null\n      return null;\n    }\n\n    return this.getAllPossibleColumnParis(requiredColumns);\n  }\n\n  static getAllPossibleColumnParis(requiredColumns) {\n    // for multiple matched field for one required column, return multiple\n    // combinations, e. g. if column a has 2 matched, column b has 3 matched\n    // 6 possible column pairs will be returned\n    const allKeys = Object.keys(requiredColumns);\n    const pointers = allKeys.map((k, i) => (i === allKeys.length - 1 ? -1 : 0));\n    const countPerKey = allKeys.map(k => requiredColumns[k].length);\n    // TODO: Better typings\n    const pairs: any[] = [];\n\n    /* eslint-disable no-loop-func */\n    while (incrementPointers(pointers, countPerKey, pointers.length - 1)) {\n      const newPair = pointers.reduce((prev, cuur, i) => {\n        prev[allKeys[i]] = requiredColumns[allKeys[i]][cuur];\n        return prev;\n      }, {});\n\n      pairs.push(newPair);\n    }\n    /* eslint-enable no-loop-func */\n\n    // recursively increment pointers\n    function incrementPointers(pts, counts, index) {\n      if (index === 0 && pts[0] === counts[0] - 1) {\n        // nothing to increment\n        return false;\n      }\n\n      if (pts[index] + 1 < counts[index]) {\n        pts[index] = pts[index] + 1;\n        return true;\n      }\n\n      pts[index] = 0;\n      return incrementPointers(pts, counts, index - 1);\n    }\n\n    return pairs;\n  }\n\n  static hexToRgb(c) {\n    return hexToRgb(c);\n  }\n\n  getDefaultLayerConfig(\n    props: LayerBaseConfigPartial\n  ): LayerBaseConfig & Partial<LayerColorConfig & LayerSizeConfig> {\n    return {\n      dataId: props.dataId,\n      label: props.label || DEFAULT_LAYER_LABEL,\n      color: props.color || colorMaker.next().value,\n      columns: props.columns || {},\n      isVisible: props.isVisible || false,\n      isConfigActive: props.isConfigActive || false,\n      highlightColor: props.highlightColor || DEFAULT_HIGHLIGHT_COLOR,\n      hidden: props.hidden || false,\n\n      // TODO: refactor this into separate visual Channel config\n      // color by field, domain is set by filters, field, scale type\n      colorField: null,\n      colorDomain: [0, 1],\n      colorScale: SCALE_TYPES.quantile,\n\n      // color by size, domain is set by filters, field, scale type\n      sizeDomain: [0, 1],\n      sizeScale: SCALE_TYPES.linear,\n      sizeField: null,\n\n      visConfig: {},\n\n      textLabel: [DEFAULT_TEXT_LABEL],\n\n      colorUI: {\n        color: DEFAULT_COLOR_UI,\n        colorRange: DEFAULT_COLOR_UI\n      },\n      animation: {enabled: false}\n    };\n  }\n\n  /**\n   * Get the description of a visualChannel config\n   * @param key\n   * @returns\n   */\n  getVisualChannelDescription(key: string): VisualChannelDescription {\n    // e.g. label: Color, measure: Vehicle Type\n    const channel = this.visualChannels[key];\n    if (!channel) return {label: '', measure: undefined};\n    const rangeSettings = this.visConfigSettings[channel.range];\n    const fieldSettings = this.config[channel.field];\n    const label = rangeSettings?.label;\n    return {\n      label: typeof label === 'function' ? label(this.config) : label || '',\n      measure: fieldSettings\n        ? fieldSettings.displayName || fieldSettings.name\n        : channel.defaultMeasure\n    };\n  }\n\n  /**\n   * Assign a field to layer column, return column config\n   * @param key - Column Key\n   * @param field - Selected field\n   * @returns {{}} - Column config\n   */\n  assignColumn(key: string, field: Field): LayerColumns {\n    // field value could be null for optional columns\n    const update = field\n      ? {\n          value: field.name,\n          fieldIdx: field.fieldIdx\n        }\n      : {value: null, fieldIdx: -1};\n\n    return {\n      ...this.config.columns,\n      [key]: {\n        ...this.config.columns[key],\n        ...update\n      }\n    };\n  }\n\n  /**\n   * Assign a field pair to column config, return column config\n   * @param key - Column Key\n   * @param pair - field Pair\n   * @returns {object} - Column config\n   */\n  assignColumnPairs(key: string, pair: string): LayerColumns {\n    if (!this.columnPairs || !this.columnPairs?.[key]) {\n      // should not end in this state\n      return this.config.columns;\n    }\n\n    const {pair: partnerKey, fieldPairKey} = this.columnPairs?.[key];\n\n    if (!pair[fieldPairKey]) {\n      // do not allow `key: undefined` to creep into the `updatedColumn` object\n      return this.config.columns;\n    }\n\n    const {fieldPairKey: partnerFieldPairKey} = this.columnPairs?.[partnerKey];\n\n    return {\n      ...this.config.columns,\n      [key]: pair[fieldPairKey],\n      [partnerKey]: pair[partnerFieldPairKey]\n    };\n  }\n\n  /**\n   * Calculate a radius zoom multiplier to render points, so they are visible in all zoom level\n   * @param {object} mapState\n   * @param {number} mapState.zoom - actual zoom\n   * @param {number | void} mapState.zoomOffset - zoomOffset when render in the plot container for export image\n   * @returns {number}\n   */\n  getZoomFactor({zoom, zoomOffset = 0}) {\n    return Math.pow(2, Math.max(14 - zoom + zoomOffset, 0));\n  }\n\n  /**\n   * Calculate a elevation zoom multiplier to render points, so they are visible in all zoom level\n   * @param {object} mapState\n   * @param {number} mapState.zoom - actual zoom\n   * @param {number=} mapState.zoomOffset - zoomOffset when render in the plot container for export image\n   * @returns {number}\n   */\n  getElevationZoomFactor({zoom, zoomOffset = 0}: {zoom: number; zoomOffset?: number}): number {\n    return this.config.visConfig.enableElevationZoomFactor\n      ? Math.pow(2, Math.max(8 - zoom + zoomOffset, 0))\n      : 1;\n  }\n\n  formatLayerData(datasets: Datasets, oldLayerData?: any) {\n    return {};\n  }\n\n  renderLayer(...args: any[]): any[] {\n    return [];\n  }\n\n  getHoverData(object, dataContainer: DataContainerInterface, fields: Field[]) {\n    if (!object) {\n      return null;\n    }\n\n    // By default, each entry of layerData should have an index of a row in the original data container.\n    // Each layer can implement its own getHoverData method\n    return dataContainer.row(object.index);\n  }\n\n  /**\n   * When change layer type, try to copy over layer configs as much as possible\n   * @param configToCopy - config to copy over\n   * @param visConfigSettings - visConfig settings of config to copy\n   */\n  assignConfigToLayer(configToCopy, visConfigSettings) {\n    // don't deep merge visualChannel field\n    // don't deep merge color range, reversed: is not a key by default\n    const shallowCopy = ['colorRange', 'strokeColorRange'].concat(\n      Object.values(this.visualChannels).map(v => v.field)\n    );\n\n    // don't copy over domain and animation\n    const notToCopy = ['animation'].concat(Object.values(this.visualChannels).map(v => v.domain));\n    // if range is for the same property group copy it, otherwise, not to copy\n    Object.values(this.visualChannels).forEach(v => {\n      if (\n        configToCopy.visConfig[v.range] &&\n        this.visConfigSettings[v.range] &&\n        visConfigSettings[v.range].group !== this.visConfigSettings[v.range].group\n      ) {\n        notToCopy.push(v.range);\n      }\n    });\n\n    // don't copy over visualChannel range\n    const currentConfig = this.config;\n    const copied = this.copyLayerConfig(currentConfig, configToCopy, {\n      shallowCopy,\n      notToCopy\n    });\n\n    this.updateLayerConfig(copied);\n    // validate visualChannel field type and scale types\n    Object.keys(this.visualChannels).forEach(channel => {\n      this.validateVisualChannel(channel);\n    });\n  }\n\n  /*\n   * Recursively copy config over to an empty layer\n   * when received saved config, or copy config over from a different layer type\n   * make sure to only copy over value to existing keys\n   * @param {object} currentConfig - existing config to be override\n   * @param {object} configToCopy - new Config to copy over\n   * @param {string[]} shallowCopy - array of properties to not to be deep copied\n   * @param {string[]} notToCopy - array of properties not to copy\n   * @returns {object} - copied config\n   */\n  copyLayerConfig(\n    currentConfig,\n    configToCopy,\n    {shallowCopy = [], notToCopy = []}: {shallowCopy?: string[]; notToCopy?: string[]} = {}\n  ) {\n    const copied = {};\n    Object.keys(currentConfig).forEach(key => {\n      if (\n        isPlainObject(currentConfig[key]) &&\n        isPlainObject(configToCopy[key]) &&\n        !shallowCopy.includes(key) &&\n        !notToCopy.includes(key)\n      ) {\n        // recursively assign object value\n        copied[key] = this.copyLayerConfig(currentConfig[key], configToCopy[key], {\n          shallowCopy,\n          notToCopy\n        });\n      } else if (notNullorUndefined(configToCopy[key]) && !notToCopy.includes(key)) {\n        // copy\n        copied[key] = configToCopy[key];\n      } else {\n        // keep existing\n        copied[key] = currentConfig[key];\n      }\n    });\n\n    return copied;\n  }\n\n  registerVisConfig(layerVisConfigs: {\n    [key: string]: keyof LayerVisConfigSettings | ValueOf<LayerVisConfigSettings>;\n  }) {\n    Object.keys(layerVisConfigs).forEach(item => {\n      const configItem = layerVisConfigs[item];\n      if (typeof configItem === 'string' && LAYER_VIS_CONFIGS[configItem]) {\n        // if assigned one of default LAYER_CONFIGS\n        this.config.visConfig[item] = LAYER_VIS_CONFIGS[configItem].defaultValue;\n        this.visConfigSettings[item] = LAYER_VIS_CONFIGS[configItem];\n      } else if (\n        typeof configItem === 'object' &&\n        ['type', 'defaultValue'].every(p => configItem.hasOwnProperty(p))\n      ) {\n        // if provided customized visConfig, and has type && defaultValue\n        // TODO: further check if customized visConfig is valid\n        this.config.visConfig[item] = configItem.defaultValue;\n        this.visConfigSettings[item] = configItem;\n      }\n    });\n  }\n\n  getLayerColumns() {\n    const columnValidators = this.columnValidators;\n    const required = this.requiredLayerColumns.reduce(\n      (accu, key) => ({\n        ...accu,\n        [key]: columnValidators[key]\n          ? {value: null, fieldIdx: -1, validator: columnValidators[key]}\n          : {value: null, fieldIdx: -1}\n      }),\n      {}\n    );\n    const optional = this.optionalColumns.reduce(\n      (accu, key) => ({\n        ...accu,\n        [key]: {value: null, fieldIdx: -1, optional: true}\n      }),\n      {}\n    );\n\n    return {...required, ...optional};\n  }\n\n  updateLayerConfig<LayerConfig extends LayerBaseConfig = LayerBaseConfig>(\n    newConfig: Partial<LayerConfig>\n  ): Layer {\n    this.config = {...this.config, ...newConfig};\n    return this;\n  }\n\n  updateLayerVisConfig(newVisConfig) {\n    this.config.visConfig = {...this.config.visConfig, ...newVisConfig};\n    return this;\n  }\n\n  updateLayerColorUI(prop: string, newConfig: NestedPartial<ColorUI>): Layer {\n    const {colorUI: previous, visConfig} = this.config;\n\n    if (!isPlainObject(newConfig) || typeof prop !== 'string') {\n      return this;\n    }\n\n    const colorUIProp = Object.entries(newConfig).reduce((accu, [key, value]) => {\n      return {\n        ...accu,\n        [key]: isPlainObject(accu[key]) && isPlainObject(value) ? {...accu[key], ...value} : value\n      };\n    }, previous[prop] || DEFAULT_COLOR_UI);\n\n    const colorUI = {\n      ...previous,\n      [prop]: colorUIProp\n    };\n\n    this.updateLayerConfig({colorUI});\n    // if colorUI[prop] is colorRange\n    const isColorRange = visConfig[prop] && visConfig[prop].colors;\n\n    if (isColorRange) {\n      this.updateColorUIByColorRange(newConfig, prop);\n      this.updateColorRangeByColorUI(newConfig, previous, prop);\n      this.updateCustomPalette(newConfig, previous, prop);\n    }\n\n    return this;\n  }\n\n  updateCustomPalette(newConfig, previous, prop) {\n    if (!newConfig.colorRangeConfig || !newConfig.colorRangeConfig.custom) {\n      return;\n    }\n\n    const {colorUI, visConfig} = this.config;\n\n    if (!visConfig[prop]) return;\n    const {colors} = visConfig[prop];\n    const customPalette = {\n      ...colorUI[prop].customPalette,\n      name: 'Custom Palette',\n      colors: [...colors]\n    };\n    this.updateLayerConfig({\n      colorUI: {\n        ...colorUI,\n        [prop]: {\n          ...colorUI[prop],\n          customPalette\n        }\n      }\n    });\n  }\n  /**\n   * if open dropdown and prop is color range\n   * Automatically set colorRangeConfig's step and reversed\n   * @param {*} newConfig\n   * @param {*} prop\n   */\n  updateColorUIByColorRange(newConfig, prop) {\n    if (typeof newConfig.showDropdown !== 'number') return;\n\n    const {colorUI, visConfig} = this.config;\n    this.updateLayerConfig({\n      colorUI: {\n        ...colorUI,\n        [prop]: {\n          ...colorUI[prop],\n          colorRangeConfig: {\n            ...colorUI[prop].colorRangeConfig,\n            steps: visConfig[prop].colors.length,\n            reversed: Boolean(visConfig[prop].reversed)\n          }\n        }\n      }\n    });\n  }\n\n  updateColorRangeByColorUI(newConfig, previous, prop) {\n    // only update colorRange if changes in UI is made to 'reversed', 'steps' or steps\n    const shouldUpdate =\n      newConfig.colorRangeConfig &&\n      ['reversed', 'steps'].some(\n        key =>\n          newConfig.colorRangeConfig.hasOwnProperty(key) &&\n          newConfig.colorRangeConfig[key] !==\n            (previous[prop] || DEFAULT_COLOR_UI).colorRangeConfig[key]\n      );\n    if (!shouldUpdate) return;\n\n    const {colorUI, visConfig} = this.config;\n    const {steps, reversed} = colorUI[prop].colorRangeConfig;\n    const colorRange = visConfig[prop];\n    // find based on step or reversed\n    let update;\n    if (newConfig.colorRangeConfig.hasOwnProperty('steps')) {\n      const group = getColorGroupByName(colorRange);\n\n      if (group) {\n        const sameGroup = COLOR_RANGES.filter(cr => getColorGroupByName(cr) === group);\n\n        update = sameGroup.find(cr => cr.colors.length === steps);\n\n        if (update && colorRange.reversed) {\n          update = reverseColorRange(true, update);\n        }\n      }\n    }\n\n    if (newConfig.colorRangeConfig.hasOwnProperty('reversed')) {\n      update = reverseColorRange(reversed, update || colorRange);\n    }\n\n    if (update) {\n      this.updateLayerVisConfig({[prop]: update});\n    }\n  }\n\n  /**\n   * Check whether layer has all columns\n   * @returns yes or no\n   */\n  hasAllColumns(): boolean {\n    const {columns} = this.config;\n    return (\n      columns &&\n      Object.values(columns).every(column => {\n        return Boolean(column && (column.optional || (column.value && column.fieldIdx > -1)));\n      })\n    );\n  }\n\n  /**\n   * Check whether layer has data\n   *\n   * @param {Array | Object} layerData\n   * @returns {boolean} yes or no\n   */\n  hasLayerData(layerData) {\n    if (!layerData) {\n      return false;\n    }\n    return Boolean(layerData.data && layerData.data.length);\n  }\n\n  isValidToSave(): boolean {\n    return Boolean(this.type && this.hasAllColumns());\n  }\n\n  shouldRenderLayer(data): boolean {\n    return (\n      Boolean(this.type) &&\n      this.hasAllColumns() &&\n      this.hasLayerData(data) &&\n      typeof this.renderLayer === 'function'\n    );\n  }\n\n  getColorScale(colorScale: string, colorDomain: VisualChannelDomain, colorRange: ColorRange) {\n    if (Array.isArray(colorRange.colorMap)) {\n      const cMap = new Map();\n      colorRange.colorMap.forEach(([k, v]) => {\n        cMap.set(k, typeof v === 'string' ? hexToRgb(v) : v);\n      });\n\n      const scale = SCALE_FUNC[SCALE_TYPES.ordinal]()\n        .domain(cMap.keys())\n        .range(cMap.values())\n        .unknown(cMap.get(UNKNOWN_COLOR_KEY) || NO_VALUE_COLOR);\n      return scale;\n    }\n    return this.getVisChannelScale(colorScale, colorDomain, colorRange.colors.map(hexToRgb));\n  }\n\n  /**\n   * Mapping from visual channels to deck.gl accesors\n   * @param {Object} param Parameters\n   * @param {Function} param.dataAccessor Access kepler.gl layer data from deck.gl layer\n   * @param {import('utils/table-utils/data-container-interface').DataContainerInterface} param.dataContainer DataContainer to use use with dataAccessor\n   * @return {Object} attributeAccessors - deck.gl layer attribute accessors\n   */\n  getAttributeAccessors({\n    dataAccessor = defaultDataAccessor,\n    dataContainer\n  }: {\n    dataAccessor?: typeof defaultDataAccessor;\n    dataContainer: DataContainerInterface;\n  }) {\n    const attributeAccessors: {[key: string]: any} = {};\n\n    Object.keys(this.visualChannels).forEach(channel => {\n      const {\n        field,\n        fixed,\n        scale,\n        domain,\n        range,\n        accessor,\n        defaultValue,\n        getAttributeValue,\n        nullValue,\n        channelScaleType\n      } = this.visualChannels[channel];\n\n      if (accessor) {\n        const shouldGetScale = this.config[field];\n\n        if (shouldGetScale) {\n          const isFixed = fixed && this.config.visConfig[fixed];\n\n          const scaleFunction =\n            channelScaleType === CHANNEL_SCALES.color\n              ? this.getColorScale(\n                  this.config[scale],\n                  this.config[domain],\n                  this.config.visConfig[range]\n                )\n              : this.getVisChannelScale(\n                  this.config[scale],\n                  this.config[domain],\n                  this.config.visConfig[range],\n                  isFixed\n                );\n\n          attributeAccessors[accessor] = d =>\n            this.getEncodedChannelValue(\n              scaleFunction,\n              dataAccessor(dataContainer)(d),\n              this.config[field],\n              nullValue\n            );\n        } else if (typeof getAttributeValue === 'function') {\n          attributeAccessors[accessor] = getAttributeValue(this.config);\n        } else {\n          attributeAccessors[accessor] =\n            typeof defaultValue === 'function' ? defaultValue(this.config) : defaultValue;\n        }\n\n        if (!attributeAccessors[accessor]) {\n          Console.warn(`Failed to provide accessor function for ${accessor || channel}`);\n        }\n      }\n    });\n\n    return attributeAccessors;\n  }\n\n  getVisChannelScale(\n    scale: string,\n    domain: VisualChannelDomain,\n    range: any,\n    fixed?: boolean\n  ): () => any | null {\n    return SCALE_FUNC[fixed ? 'linear' : scale]()\n      .domain(domain)\n      .range(fixed ? domain : range);\n  }\n\n  /**\n   * Get longitude and latitude bounds of the data.\n   * @param {import('utils/table-utils/data-container-interface').DataContainerInterface} dataContainer DataContainer to calculate bounds for.\n   * @param {(d: {index: number}, dc: import('utils/table-utils/data-container-interface').DataContainerInterface) => number[]} getPosition Access kepler.gl layer data from deck.gl layer\n   * @return {number[]|null} bounds of the data.\n   */\n  getPointsBounds(\n    dataContainer: DataContainerInterface,\n    getPosition?: (x: any, dc: DataContainerInterface) => number[]\n  ): number[] | null {\n    // no need to loop through the entire dataset\n    // get a sample of data to calculate bounds\n    const sampleData =\n      dataContainer.numRows() > MAX_SAMPLE_SIZE\n        ? getSampleContainerData(dataContainer, MAX_SAMPLE_SIZE)\n        : dataContainer;\n\n    const points = getPosition ? sampleData.mapIndex(getPosition) : [];\n\n    const latBounds = getLatLngBounds(points, 1, [-90, 90]);\n    const lngBounds = getLatLngBounds(points, 0, [-180, 180]);\n\n    if (!latBounds || !lngBounds) {\n      return null;\n    }\n\n    return [lngBounds[0], latBounds[0], lngBounds[1], latBounds[1]];\n  }\n\n  getChangedTriggers(dataUpdateTriggers) {\n    const triggerChanged = diffUpdateTriggers(dataUpdateTriggers, this._oldDataUpdateTriggers);\n    this._oldDataUpdateTriggers = dataUpdateTriggers;\n\n    return triggerChanged;\n  }\n\n  getEncodedChannelValue(\n    scale: (value) => any,\n    data: any[],\n    field: VisualChannelField,\n    nullValue = NO_VALUE_COLOR,\n    getValue = defaultGetFieldValue\n  ) {\n    // @ts-expect-error TODO: VisualChannelField better typing\n    const {type} = field;\n    const value = getValue(field, data);\n\n    if (!notNullorUndefined(value)) {\n      return nullValue;\n    }\n\n    let attributeValue;\n    if (type === ALL_FIELD_TYPES.timestamp) {\n      // shouldn't need to convert here\n      // scale Function should take care of it\n      attributeValue = scale(new Date(value));\n    } else {\n      attributeValue = scale(value);\n    }\n\n    if (!notNullorUndefined(attributeValue)) {\n      attributeValue = nullValue;\n    }\n\n    return attributeValue;\n  }\n\n  updateMeta(meta: Layer['meta']) {\n    this.meta = {...this.meta, ...meta};\n  }\n\n  getDataUpdateTriggers({filteredIndex, id, dataContainer}: KeplerTable): any {\n    const {columns} = this.config;\n\n    return {\n      getData: {datasetId: id, dataContainer, columns, filteredIndex},\n      getMeta: {datasetId: id, dataContainer, columns},\n      ...(this.config.textLabel || []).reduce(\n        (accu, tl, i) => ({\n          ...accu,\n          [`getLabelCharacterSet-${i}`]: tl.field ? tl.field.name : null\n        }),\n        {}\n      )\n    };\n  }\n\n  updateData(datasets: Datasets, oldLayerData: any) {\n    if (!this.config.dataId) {\n      return {};\n    }\n    const layerDataset = datasets[this.config.dataId];\n    const {dataContainer} = layerDataset;\n\n    const getPosition = this.getPositionAccessor(dataContainer);\n    const dataUpdateTriggers = this.getDataUpdateTriggers(layerDataset);\n    const triggerChanged = this.getChangedTriggers(dataUpdateTriggers);\n\n    if (triggerChanged && (triggerChanged.getMeta || triggerChanged.getData)) {\n      this.updateLayerMeta(dataContainer, getPosition);\n    }\n\n    let data = [];\n\n    if (!(triggerChanged && triggerChanged.getData) && oldLayerData && oldLayerData.data) {\n      // same data\n      data = oldLayerData.data;\n    } else {\n      data = this.calculateDataAttribute(layerDataset, getPosition);\n    }\n\n    return {data, triggerChanged};\n  }\n\n  /**\n   * helper function to update one layer domain when state.data changed\n   * if state.data change is due ot update filter, newFiler will be passed\n   * called by updateAllLayerDomainData\n   * @param datasets\n   * @param newFilter\n   * @returns layer\n   */\n  updateLayerDomain(datasets: Datasets, newFilter?: Filter): Layer {\n    const table = this.getDataset(datasets);\n    if (!table) {\n      return this;\n    }\n    Object.values(this.visualChannels).forEach(channel => {\n      const {scale} = channel;\n      const scaleType = this.config[scale];\n      // ordinal domain is based on dataContainer, if only filter changed\n      // no need to update ordinal domain\n      if (!newFilter || scaleType !== SCALE_TYPES.ordinal) {\n        const {domain} = channel;\n        const updatedDomain = this.calculateLayerDomain(table, channel);\n        this.updateLayerConfig({[domain]: updatedDomain});\n      }\n    });\n\n    return this;\n  }\n\n  getDataset(datasets) {\n    return this.config.dataId ? datasets[this.config.dataId] : null;\n  }\n\n  /**\n   * Validate visual channel field and scales based on supported field & scale type\n   * @param channel\n   */\n  validateVisualChannel(channel: string) {\n    this.validateFieldType(channel);\n    this.validateScale(channel);\n  }\n\n  /**\n   * Validate field type based on channelScaleType\n   */\n  validateFieldType(channel: string) {\n    const visualChannel = this.visualChannels[channel];\n    const {field, channelScaleType, supportedFieldTypes} = visualChannel;\n\n    if (this.config[field]) {\n      // if field is selected, check if field type is supported\n      const channelSupportedFieldTypes =\n        supportedFieldTypes || CHANNEL_SCALE_SUPPORTED_FIELDS[channelScaleType];\n\n      if (!channelSupportedFieldTypes.includes(this.config[field].type)) {\n        // field type is not supported, set it back to null\n        // set scale back to default\n        this.updateLayerConfig({[field]: null});\n      }\n    }\n  }\n\n  /**\n   * Validate scale type based on aggregation\n   */\n  validateScale(channel) {\n    const visualChannel = this.visualChannels[channel];\n    const {scale} = visualChannel;\n    if (!scale) {\n      // visualChannel doesn't have scale\n      return;\n    }\n    const scaleOptions = this.getScaleOptions(channel);\n    // check if current selected scale is\n    // supported, if not, change to default\n    if (!scaleOptions.includes(this.config[scale])) {\n      this.updateLayerConfig({[scale]: scaleOptions[0]});\n    }\n  }\n\n  /**\n   * Get scale options based on current field\n   * @param {string} channel\n   * @returns {string[]}\n   */\n  getScaleOptions(channel) {\n    const visualChannel = this.visualChannels[channel];\n    const {field, scale, channelScaleType} = visualChannel;\n\n    return this.config[field]\n      ? FIELD_OPTS[this.config[field].type].scale[channelScaleType]\n      : [this.getDefaultLayerConfig({dataId: ''})[scale]];\n  }\n\n  updateLayerVisualChannel(dataset: KeplerTable, channel: string) {\n    const visualChannel = this.visualChannels[channel];\n    this.validateVisualChannel(channel);\n    // calculate layer channel domain\n    const updatedDomain = this.calculateLayerDomain(dataset, visualChannel);\n    this.updateLayerConfig({[visualChannel.domain]: updatedDomain});\n  }\n\n  getVisualChannelUpdateTriggers(): UpdateTriggers {\n    const updateTriggers: UpdateTriggers = {};\n    Object.values(this.visualChannels).forEach(visualChannel => {\n      // field range scale domain\n      const {accessor, field, scale, domain, range, defaultValue, fixed} = visualChannel;\n\n      if (accessor) {\n        updateTriggers[accessor] = {\n          [field]: this.config[field],\n          [scale]: this.config[scale],\n          [domain]: this.config[domain],\n          [range]: this.config.visConfig[range],\n          defaultValue:\n            typeof defaultValue === 'function' ? defaultValue(this.config) : defaultValue,\n          ...(fixed ? {[fixed]: this.config.visConfig[fixed]} : {})\n        };\n      }\n    });\n    return updateTriggers;\n  }\n\n  calculateLayerDomain(dataset, visualChannel) {\n    const {scale} = visualChannel;\n    const scaleType = this.config[scale];\n\n    const field = this.config[visualChannel.field];\n    if (!field) {\n      // if colorField or sizeField were set back to null\n      return defaultDomain;\n    }\n\n    return dataset.getColumnLayerDomain(field, scaleType) || defaultDomain;\n  }\n\n  hasHoveredObject(objectInfo) {\n    return this.isLayerHovered(objectInfo) && objectInfo.object ? objectInfo.object : null;\n  }\n\n  isLayerHovered(objectInfo): boolean {\n    return objectInfo?.picked && objectInfo?.layer?.props?.id === this.id;\n  }\n\n  getRadiusScaleByZoom(mapState: MapState, fixedRadius?: boolean) {\n    const radiusChannel = Object.values(this.visualChannels).find(vc => vc.property === 'radius');\n\n    if (!radiusChannel) {\n      return 1;\n    }\n\n    const field = radiusChannel.field;\n    const fixed = fixedRadius === undefined ? this.config.visConfig.fixedRadius : fixedRadius;\n    const {radius} = this.config.visConfig;\n\n    return fixed ? 1 : (this.config[field] ? 1 : radius) * this.getZoomFactor(mapState);\n  }\n\n  shouldCalculateLayerData(props: string[]) {\n    return props.some(p => !this.noneLayerDataAffectingProps.includes(p));\n  }\n\n  getBrushingExtensionProps(interactionConfig, brushingTarget?) {\n    const {brush} = interactionConfig;\n\n    return {\n      // brushing\n      autoHighlight: !brush.enabled,\n      brushingRadius: brush.config.size * 1000,\n      brushingTarget: brushingTarget || 'source',\n      brushingEnabled: brush.enabled\n    };\n  }\n\n  getDefaultDeckLayerProps({\n    idx,\n    gpuFilter,\n    mapState,\n    visible\n  }: {\n    idx: number;\n    gpuFilter: GpuFilter;\n    mapState: MapState;\n    visible: boolean;\n  }) {\n    return {\n      id: this.id,\n      idx,\n      coordinateSystem: COORDINATE_SYSTEM.LNGLAT,\n      pickable: true,\n      wrapLongitude: true,\n      parameters: {depthTest: Boolean(mapState.dragRotate || this.config.visConfig.enable3d)},\n      hidden: this.config.hidden,\n      // visconfig\n      opacity: this.config.visConfig.opacity,\n      highlightColor: this.config.highlightColor,\n      // data filtering\n      extensions: [dataFilterExtension],\n      filterRange: gpuFilter ? gpuFilter.filterRange : undefined,\n\n      // layer should be visible and if splitMap, shown in to one of panel\n      visible: this.config.isVisible && visible\n    };\n  }\n\n  getDefaultHoverLayerProps() {\n    return {\n      id: `${this.id}-hovered`,\n      pickable: false,\n      wrapLongitude: true,\n      coordinateSystem: COORDINATE_SYSTEM.LNGLAT\n    };\n  }\n\n  renderTextLabelLayer(\n    {\n      getPosition,\n      getPixelOffset,\n      backgroundProps,\n      updateTriggers,\n      sharedProps\n    }: {\n      getPosition: any;\n      getPixelOffset: any;\n      backgroundProps?: any;\n      updateTriggers: any;\n      sharedProps: any;\n    },\n    renderOpts\n  ) {\n    const {data, mapState} = renderOpts;\n    const {textLabel} = this.config;\n\n    return data.textLabels.reduce((accu, d, i) => {\n      if (d.getText) {\n        const background = textLabel[i].background || backgroundProps?.background;\n\n        accu.push(\n          new TextLayer({\n            ...sharedProps,\n            id: `${this.id}-label-${textLabel[i].field?.name}`,\n            data: data.data,\n            visible: this.config.isVisible,\n            getText: d.getText,\n            getPosition,\n            characterSet: d.characterSet,\n            getPixelOffset: getPixelOffset(textLabel[i]),\n            getSize: PROJECTED_PIXEL_SIZE_MULTIPLIER,\n            sizeScale: textLabel[i].size,\n            getTextAnchor: textLabel[i].anchor,\n            getAlignmentBaseline: textLabel[i].alignment,\n            getColor: textLabel[i].color,\n            outlineWidth: textLabel[i].outlineWidth * TEXT_OUTLINE_MULTIPLIER,\n            outlineColor: textLabel[i].outlineColor,\n            background,\n            getBackgroundColor: textLabel[i].backgroundColor,\n            fontSettings: {\n              sdf: textLabel[i].outlineWidth > 0\n            },\n            parameters: {\n              // text will always show on top of all layers\n              depthTest: false\n            },\n\n            getFilterValue: data.getFilterValue,\n            updateTriggers: {\n              ...updateTriggers,\n              getText: textLabel[i].field?.name,\n              getPixelOffset: {\n                ...updateTriggers.getRadius,\n                mapState,\n                anchor: textLabel[i].anchor,\n                alignment: textLabel[i].alignment\n              },\n              getTextAnchor: textLabel[i].anchor,\n              getAlignmentBaseline: textLabel[i].alignment,\n              getColor: textLabel[i].color\n            },\n            _subLayerProps: {\n              ...(background\n                ? {\n                    background: {\n                      parameters: {\n                        cull: false\n                      }\n                    }\n                  }\n                : null)\n            }\n          })\n        );\n      }\n      return accu;\n    }, []);\n  }\n\n  calculateDataAttribute(keplerTable: KeplerTable, getPosition): any {\n    // implemented in subclasses\n    return [];\n  }\n\n  updateLayerMeta(dataContainer: DataContainerInterface, getPosition) {\n    // implemented in subclasses\n  }\n\n  getPositionAccessor(dataContainer?: DataContainerInterface): (...args: any[]) => any {\n    // implemented in subclasses\n    return () => null;\n  }\n}\n\nexport default Layer;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {Base} from '../base';\n\nclass PointLayerIcon extends Component {\n  static propTypes = {\n    height: PropTypes.string,\n    colors: PropTypes.arrayOf(PropTypes.string)\n  };\n\n  static defaultProps = {\n    height: '16px',\n    predefinedClassName: 'point-layer-icon',\n    totalColor: 6\n  };\n\n  render() {\n    return (\n      <Base {...this.props}>\n        <circle cx=\"29.4\" cy=\"31.6\" r=\"8.4\" className=\"cr1\" />\n        <circle cx=\"48.5\" cy=\"15.7\" r=\"6.5\" className=\"cr2\" />\n        <circle cx=\"11\" cy=\"44.2\" r=\"3\" className=\"cr3\" />\n        <circle cx=\"50\" cy=\"44.2\" r=\"5\" className=\"cr4\" />\n        <circle cx=\"34\" cy=\"54.2\" r=\"3\" className=\"cr5\" />\n        <circle cx=\"14\" cy=\"16.2\" r=\"4\" className=\"cr6\" />\n      </Base>\n    );\n  }\n}\n\nexport default PointLayerIcon;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {getDistanceScales} from 'viewport-mercator-project';\nimport {notNullorUndefined} from '@kepler.gl/utils';\nimport uniq from 'lodash.uniq';\n\nexport const defaultPadding = 20;\n\nexport function getTextOffsetByRadius(radiusScale, getRadius, mapState) {\n  return textLabel => {\n    const distanceScale = getDistanceScales(mapState);\n    const xMult = textLabel.anchor === 'middle' ? 0 : textLabel.anchor === 'start' ? 1 : -1;\n    const yMult = textLabel.alignment === 'center' ? 0 : textLabel.alignment === 'bottom' ? 1 : -1;\n\n    const sizeOffset =\n      textLabel.alignment === 'center'\n        ? 0\n        : textLabel.alignment === 'bottom'\n        ? textLabel.size\n        : textLabel.size;\n\n    const pixelRadius = radiusScale * distanceScale.pixelsPerMeter[0];\n    const padding = defaultPadding;\n\n    return typeof getRadius === 'function'\n      ? d => [\n          xMult * (getRadius(d) * pixelRadius + padding),\n          yMult * (getRadius(d) * pixelRadius + padding + sizeOffset)\n        ]\n      : [\n          xMult * (getRadius * pixelRadius + padding),\n          yMult * (getRadius * pixelRadius + padding + sizeOffset)\n        ];\n  };\n}\n\nexport const textLabelAccessor = textLabel => dc => d => {\n  const val = textLabel.field.valueAccessor(d);\n  return notNullorUndefined(val) ? String(val) : '';\n};\n\nexport const formatTextLabelData = ({\n  textLabel,\n  triggerChanged,\n  oldLayerData,\n  data,\n  dataContainer\n}) => {\n  return textLabel.map((tl, i) => {\n    if (!tl.field) {\n      // if no field selected,\n      return {\n        getText: null,\n        characterSet: []\n      };\n    }\n\n    const getText = textLabelAccessor(tl)(dataContainer);\n    let characterSet;\n\n    if (\n      !triggerChanged[`getLabelCharacterSet-${i}`] &&\n      oldLayerData &&\n      oldLayerData.textLabels &&\n      oldLayerData.textLabels[i]\n    ) {\n      characterSet = oldLayerData.textLabels[i].characterSet;\n    } else {\n      const allLabels = tl.field ? data.map(getText) : [];\n      characterSet = uniq(allLabels.join(''));\n    }\n\n    return {\n      characterSet,\n      getText\n    };\n  });\n};\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport * as arrow from 'apache-arrow';\nimport {Feature, BBox} from 'geojson';\nimport {Field, FieldPair} from '@kepler.gl/types';\nimport {DataContainerInterface} from '@kepler.gl/utils';\nimport {\n  getBinaryGeometriesFromArrow,\n  parseGeometryFromArrow,\n  BinaryGeometriesFromArrowOptions\n} from '@loaders.gl/arrow';\n\nimport {DeckGlGeoTypes, GeojsonDataMaps} from './geojson-layer/geojson-utils';\n\nexport function assignPointPairToLayerColumn(pair: FieldPair, hasAlt: boolean) {\n  const {lat, lng, alt} = pair.pair;\n  if (!hasAlt) {\n    return {lat, lng};\n  }\n\n  const defaultAltColumn = {value: null, fieldIdx: -1, optional: true};\n\n  return {\n    lat,\n    lng,\n    altitude: alt ? {...defaultAltColumn, ...alt} : defaultAltColumn\n  };\n}\n\nexport type GeojsonLayerMetaProps = {\n  dataToFeature: GeojsonDataMaps;\n  featureTypes: DeckGlGeoTypes;\n  bounds: BBox | null;\n  fixedRadius: boolean;\n  centroids?: Array<number[] | null>;\n};\n\nexport function getGeojsonLayerMetaFromArrow({\n  dataContainer,\n  getGeoColumn,\n  getGeoField,\n  chunkIndex\n}: {\n  dataContainer: DataContainerInterface;\n  getGeoColumn: (dataContainer: DataContainerInterface) => unknown;\n  getGeoField: (dataContainer: DataContainerInterface) => Field | null;\n  chunkIndex?: number;\n}): GeojsonLayerMetaProps {\n  const geoColumn = getGeoColumn(dataContainer) as arrow.Vector;\n  const arrowField = getGeoField(dataContainer);\n\n  const encoding = arrowField?.metadata?.get('ARROW:extension:name');\n  const options: BinaryGeometriesFromArrowOptions = {\n    ...(chunkIndex !== undefined && chunkIndex >= 0\n      ? {\n          chunkIndex,\n          chunkOffset: geoColumn.data[0].length * chunkIndex\n        }\n      : {}),\n    triangulate: true,\n    calculateMeanCenters: true\n  };\n  // create binary data from arrow data for GeoJsonLayer\n  const {binaryGeometries, featureTypes, bounds, meanCenters} = getBinaryGeometriesFromArrow(\n    geoColumn,\n    encoding,\n    options\n  );\n\n  // since there is no feature.properties.radius, we set fixedRadius to false\n  const fixedRadius = false;\n\n  return {\n    dataToFeature: binaryGeometries,\n    featureTypes,\n    bounds,\n    fixedRadius,\n    centroids: meanCenters\n  };\n}\n\nexport function isLayerHoveredFromArrow(objectInfo, layerId: string): boolean {\n  // there could be multiple deck.gl layers created from multiple chunks in arrow table\n  // the objectInfo.layer id should be `${this.id}-${i}`\n  if (objectInfo?.picked) {\n    const deckLayerId = objectInfo?.layer?.props?.id;\n    return deckLayerId.startsWith(layerId);\n  }\n  return false;\n}\n\nexport function getHoveredObjectFromArrow(\n  objectInfo,\n  dataContainer,\n  layerId,\n  columnAccessor,\n  fieldAccessor\n): Feature | null {\n  // hover object returns the index of the object in the data array\n  // NOTE: this could be done in Deck.gl getPickingInfo(params) and binaryToGeojson()\n  if (isLayerHoveredFromArrow(objectInfo, layerId) && objectInfo.index >= 0 && dataContainer) {\n    const col = columnAccessor(dataContainer);\n    const rawGeometry = col?.get(objectInfo.index);\n\n    const field = fieldAccessor(dataContainer);\n    const encoding = field?.metadata?.get('ARROW:extension:name');\n\n    const hoveredFeature = parseGeometryFromArrow(rawGeometry, encoding);\n\n    const properties = dataContainer.rowAsArray(objectInfo.index).reduce((prev, cur, i) => {\n      const fieldName = dataContainer?.getField?.(i).name;\n      if (fieldName !== field.name) {\n        prev[fieldName] = cur;\n      }\n      return prev;\n    }, {});\n\n    return hoveredFeature\n      ? {\n          type: 'Feature',\n          geometry: hoveredFeature,\n          properties: {\n            ...properties,\n            index: objectInfo.index\n          }\n        }\n      : null;\n  }\n  return null;\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {BrushingExtension} from '@deck.gl/extensions';\nimport {ScatterplotLayer} from '@deck.gl/layers';\n\nimport Layer, {\n  LayerBaseConfig,\n  LayerBaseConfigPartial,\n  LayerColorConfig,\n  LayerColumn,\n  LayerSizeConfig,\n  LayerStrokeColorConfig\n} from '../base-layer';\nimport {hexToRgb, findDefaultColorField} from '@kepler.gl/utils';\nimport {default as KeplerTable} from '@kepler.gl/table';\nimport PointLayerIcon from './point-layer-icon';\nimport {\n  LAYER_VIS_CONFIGS,\n  DEFAULT_LAYER_COLOR,\n  CHANNEL_SCALES,\n  ColorRange\n} from '@kepler.gl/constants';\n\nimport {getTextOffsetByRadius, formatTextLabelData} from '../layer-text-label';\nimport {assignPointPairToLayerColumn} from '../layer-utils';\nimport {\n  Merge,\n  RGBColor,\n  VisConfigBoolean,\n  VisConfigColorRange,\n  VisConfigColorSelect,\n  VisConfigNumber,\n  VisConfigRange\n} from '@kepler.gl/types';\n\nexport type PointLayerVisConfigSettings = {\n  radius: VisConfigNumber;\n  fixedRadius: VisConfigBoolean;\n  opacity: VisConfigNumber;\n  outline: VisConfigBoolean;\n  thickness: VisConfigNumber;\n  strokeColor: VisConfigColorSelect;\n  colorRange: VisConfigColorRange;\n  strokeColorRange: VisConfigColorRange;\n  radiusRange: VisConfigRange;\n  filled: VisConfigBoolean;\n};\n\nexport type PointLayerColumnsConfig = {\n  lat: LayerColumn;\n  lng: LayerColumn;\n  altitude?: LayerColumn;\n};\n\nexport type PointLayerVisConfig = {\n  radius: number;\n  fixedRadius: boolean;\n  opacity: number;\n  outline: boolean;\n  thickness: number;\n  strokeColor: RGBColor;\n  colorRange: ColorRange;\n  strokeColorRange: ColorRange;\n  radiusRange: [number, number];\n  filled: boolean;\n};\nexport type PointLayerVisualChannelConfig = LayerColorConfig &\n  LayerSizeConfig &\n  LayerStrokeColorConfig;\nexport type PointLayerConfig = Merge<\n  LayerBaseConfig,\n  {columns: PointLayerColumnsConfig; visConfig: PointLayerVisConfig}\n> &\n  PointLayerVisualChannelConfig;\n\nexport type PointLayerData = {\n  position: number[];\n  index: number;\n};\n\nexport const pointPosAccessor = ({lat, lng, altitude}: PointLayerColumnsConfig) => dc => d => [\n  dc.valueAt(d.index, lng.fieldIdx),\n  dc.valueAt(d.index, lat.fieldIdx),\n  altitude && altitude.fieldIdx > -1 ? dc.valueAt(d.index, altitude.fieldIdx) : 0\n];\n\nexport const pointRequiredColumns: ['lat', 'lng'] = ['lat', 'lng'];\nexport const pointOptionalColumns: ['altitude'] = ['altitude'];\n\nconst brushingExtension = new BrushingExtension();\n\nexport const pointVisConfigs: {\n  radius: 'radius';\n  fixedRadius: 'fixedRadius';\n  opacity: 'opacity';\n  outline: 'outline';\n  thickness: 'thickness';\n  strokeColor: 'strokeColor';\n  colorRange: 'colorRange';\n  strokeColorRange: 'strokeColorRange';\n  radiusRange: 'radiusRange';\n  filled: VisConfigBoolean;\n} = {\n  radius: 'radius',\n  fixedRadius: 'fixedRadius',\n  opacity: 'opacity',\n  outline: 'outline',\n  thickness: 'thickness',\n  strokeColor: 'strokeColor',\n  colorRange: 'colorRange',\n  strokeColorRange: 'strokeColorRange',\n  radiusRange: 'radiusRange',\n  filled: {\n    ...LAYER_VIS_CONFIGS.filled,\n    type: 'boolean',\n    label: 'layer.fillColor',\n    defaultValue: true,\n    property: 'filled'\n  }\n};\n\nexport default class PointLayer extends Layer {\n  declare config: PointLayerConfig;\n  declare visConfigSettings: PointLayerVisConfigSettings;\n  constructor(props) {\n    super(props);\n\n    this.registerVisConfig(pointVisConfigs);\n    this.getPositionAccessor = dataContainer =>\n      pointPosAccessor(this.config.columns)(dataContainer);\n  }\n\n  get type(): 'point' {\n    return 'point';\n  }\n\n  get isAggregated(): false {\n    return false;\n  }\n\n  get layerIcon() {\n    return PointLayerIcon;\n  }\n  get requiredLayerColumns() {\n    return pointRequiredColumns;\n  }\n\n  get optionalColumns() {\n    return pointOptionalColumns;\n  }\n\n  get columnPairs() {\n    return this.defaultPointColumnPairs;\n  }\n\n  get noneLayerDataAffectingProps() {\n    return [...super.noneLayerDataAffectingProps, 'radius'];\n  }\n\n  get visualChannels() {\n    return {\n      color: {\n        ...super.visualChannels.color,\n        accessor: 'getFillColor',\n        condition: config => config.visConfig.filled,\n        defaultValue: config => config.color\n      },\n      strokeColor: {\n        property: 'strokeColor',\n        key: 'strokeColor',\n        field: 'strokeColorField',\n        scale: 'strokeColorScale',\n        domain: 'strokeColorDomain',\n        range: 'strokeColorRange',\n        channelScaleType: CHANNEL_SCALES.color,\n        accessor: 'getLineColor',\n        condition: config => config.visConfig.outline,\n        defaultValue: config => config.visConfig.strokeColor || config.color\n      },\n      size: {\n        ...super.visualChannels.size,\n        property: 'radius',\n        range: 'radiusRange',\n        fixed: 'fixedRadius',\n        channelScaleType: 'radius',\n        accessor: 'getRadius',\n        defaultValue: 1\n      }\n    };\n  }\n\n  setInitialLayerConfig(dataset) {\n    if (!dataset.dataContainer.numRows()) {\n      return this;\n    }\n    const defaultColorField = findDefaultColorField(dataset);\n\n    if (defaultColorField) {\n      this.updateLayerConfig({\n        // @ts-expect-error Remove this after updateLayerConfig converted into generic function\n        colorField: defaultColorField\n      });\n      this.updateLayerVisualChannel(dataset, 'color');\n    }\n\n    return this;\n  }\n\n  static findDefaultLayerProps({fieldPairs = []}: KeplerTable) {\n    const props: {\n      label: string;\n      color?: RGBColor;\n      isVisible?: boolean;\n      columns?: PointLayerColumnsConfig;\n    }[] = [];\n\n    // Make layer for each pair\n    fieldPairs.forEach(pair => {\n      const latField = pair.pair.lat;\n\n      const prop: {\n        label: string;\n        color?: RGBColor;\n        isVisible?: boolean;\n        columns?: PointLayerColumnsConfig;\n      } = {\n        label: pair.defaultName || 'Point'\n      };\n\n      // default layer color for begintrip and dropoff point\n      if (latField.value in DEFAULT_LAYER_COLOR) {\n        prop.color = hexToRgb(DEFAULT_LAYER_COLOR[latField.value]);\n      }\n\n      // set the first layer to be visible\n      if (props.length === 0) {\n        prop.isVisible = true;\n      }\n      prop.columns = assignPointPairToLayerColumn(pair, true);\n\n      props.push(prop);\n    });\n\n    return {props};\n  }\n\n  getDefaultLayerConfig(props: LayerBaseConfigPartial) {\n    return {\n      ...super.getDefaultLayerConfig(props),\n\n      // add stroke color visual channel\n      strokeColorField: null,\n      strokeColorDomain: [0, 1],\n      strokeColorScale: 'quantile'\n    };\n  }\n\n  calculateDataAttribute({filteredIndex}: KeplerTable, getPosition) {\n    const data: PointLayerData[] = [];\n\n    for (let i = 0; i < filteredIndex.length; i++) {\n      const index = filteredIndex[i];\n      const pos = getPosition({index});\n\n      // if doesn't have point lat or lng, do not add the point\n      // deck.gl can't handle position = null\n      if (pos.every(Number.isFinite)) {\n        data.push({\n          position: pos,\n          index\n        });\n      }\n    }\n    return data;\n  }\n\n  formatLayerData(datasets, oldLayerData) {\n    if (this.config.dataId === null) {\n      return {};\n    }\n    const {textLabel} = this.config;\n    const {gpuFilter, dataContainer} = datasets[this.config.dataId];\n    const {data, triggerChanged} = this.updateData(datasets, oldLayerData);\n    const getPosition = this.getPositionAccessor(dataContainer);\n\n    // get all distinct characters in the text labels\n    const textLabels = formatTextLabelData({\n      textLabel,\n      triggerChanged,\n      oldLayerData,\n      data,\n      dataContainer\n    });\n\n    const accessors = this.getAttributeAccessors({dataContainer});\n\n    return {\n      data,\n      getPosition,\n      getFilterValue: gpuFilter.filterValueAccessor(dataContainer)(),\n      textLabels,\n      ...accessors\n    };\n  }\n  /* eslint-enable complexity */\n\n  updateLayerMeta(dataContainer) {\n    const getPosition = this.getPositionAccessor(dataContainer);\n    const bounds = this.getPointsBounds(dataContainer, getPosition);\n    this.updateMeta({bounds});\n  }\n\n  renderLayer(opts) {\n    const {data, gpuFilter, objectHovered, mapState, interactionConfig} = opts;\n\n    // if no field size is defined we need to pass fixed radius = false\n    const fixedRadius = this.config.visConfig.fixedRadius && Boolean(this.config.sizeField);\n    const radiusScale = this.getRadiusScaleByZoom(mapState, fixedRadius);\n\n    const layerProps = {\n      stroked: this.config.visConfig.outline,\n      filled: this.config.visConfig.filled,\n      lineWidthScale: this.config.visConfig.thickness,\n      radiusScale,\n      ...(this.config.visConfig.fixedRadius ? {} : {radiusMaxPixels: 500})\n    };\n\n    const updateTriggers = {\n      getPosition: this.config.columns,\n      getFilterValue: gpuFilter.filterValueUpdateTriggers,\n      ...this.getVisualChannelUpdateTriggers()\n    };\n\n    const defaultLayerProps = this.getDefaultDeckLayerProps(opts);\n    const brushingProps = this.getBrushingExtensionProps(interactionConfig);\n    const getPixelOffset = getTextOffsetByRadius(radiusScale, data.getRadius, mapState);\n    const extensions = [...defaultLayerProps.extensions, brushingExtension];\n\n    const sharedProps = {\n      getFilterValue: data.getFilterValue,\n      extensions,\n      filterRange: defaultLayerProps.filterRange,\n      visible: defaultLayerProps.visible,\n      ...brushingProps\n    };\n    const hoveredObject = this.hasHoveredObject(objectHovered);\n\n    return [\n      new ScatterplotLayer({\n        ...defaultLayerProps,\n        ...brushingProps,\n        ...layerProps,\n        ...data,\n        parameters: {\n          // circles will be flat on the map when the altitude column is not used\n          depthTest: (this.config.columns.altitude?.fieldIdx as number) > -1\n        },\n        lineWidthUnits: 'pixels',\n        updateTriggers,\n        extensions\n      }),\n      // hover layer\n      ...(hoveredObject\n        ? [\n            new ScatterplotLayer({\n              ...this.getDefaultHoverLayerProps(),\n              ...layerProps,\n              visible: defaultLayerProps.visible,\n              data: [hoveredObject],\n              getLineColor: this.config.highlightColor,\n              getFillColor: this.config.highlightColor,\n              getRadius: data.getRadius,\n              getPosition: data.getPosition\n            })\n          ]\n        : []),\n      // text label layer\n      ...this.renderTextLabelLayer(\n        {\n          getPosition: data.getPosition,\n          sharedProps,\n          getPixelOffset,\n          updateTriggers\n        },\n        opts\n      )\n    ];\n  }\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {Base} from '../base';\n\nclass ArcLayerIcon extends Component {\n  static propTypes = {\n    /** Set the height of the icon, ex. '16px' */\n    height: PropTypes.string,\n    colors: PropTypes.arrayOf(PropTypes.string)\n  };\n\n  static defaultProps = {\n    height: '16px',\n    predefinedClassName: 'point-layer-icon',\n    totalColor: 4\n  };\n\n  render() {\n    return (\n      <Base {...this.props}>\n        <path\n          d=\"M34.5,34.4c-0.6,0-1.2-0.4-1.4-1c-2.7-9.9-8.8-21.7-16.8-22.3c-3.1-0.2-5.6,1.5-7,4.8c-0.3,0.7-1.1,1.1-1.9,0.7\n\tc-0.7-0.3-1.1-1.1-0.7-1.9c1.9-4.3,5.6-6.8,9.8-6.5c9.5,0.7,16.3,13,19.4,24.4c0.2,0.8-0.2,1.5-1,1.7C34.8,34.3,34.6,34.4,34.5,34.4\n\tz\"\n          className=\"cr1\"\n        />\n        <path\n          d=\"M6.7,57c0,0-0.1,0-0.1,0c-0.5-0.1-0.9-0.6-0.8-1.1c2.4-17.3,9.6-30.3,17.5-31.8c3.1-0.6,7.8,0.4,12.1,8.3\n\tc0.3,0.5,0.1,1-0.4,1.3c-0.5,0.3-1,0.1-1.3-0.4c-2.1-3.8-5.6-8.2-10.1-7.4C16.6,27.3,9.9,40,7.6,56.2C7.6,56.7,7.2,57,6.7,57z\"\n          className=\"cr2\"\n        />\n        <path\n          d=\"M56.8,56.4c-0.8,0-1.4-0.6-1.4-1.4c0-13.5-6.8-24.4-12.9-25.8c-3.5-0.8-5.6,2-6.7,4.4c-0.3,0.7-1.2,1-1.9,0.7\n\tc-0.7-0.3-1-1.2-0.7-1.9c2.2-4.7,5.8-6.9,9.9-6c9,2,15.1,16.4,15.1,28.6C58.3,55.7,57.6,56.4,56.8,56.4z\"\n          className=\"cr3\"\n        />\n        <path\n          d=\"M34.5,32.7c-0.2,0-0.3,0-0.5,0c-1.3-0.3-2.1-1.5-1.8-2.8c3.5-17.4,10.3-20.7,14-21.2c4.4-0.5,8.6,2.3,11,7.4\n\tc0.6,1.2,0,2.6-1.1,3.1c-1.2,0.6-2.6,0-3.1-1.1c-1.5-3.2-3.8-5-6.1-4.7c-1.5,0.2-6.8,2-9.9,17.4C36.6,32,35.6,32.7,34.5,32.7z\"\n          className=\"cr4\"\n        />\n      </Base>\n    );\n  }\n}\n\nexport default ArcLayerIcon;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport Layer, {\n  LayerColumn,\n  LayerBaseConfig,\n  LayerColorConfig,\n  LayerSizeConfig,\n  LayerBounds\n} from '../base-layer';\nimport {BrushingExtension} from '@deck.gl/extensions';\nimport {ArcLayer as DeckArcLayer} from '@deck.gl/layers';\n\nimport {hexToRgb, DataContainerInterface} from '@kepler.gl/utils';\nimport ArcLayerIcon from './arc-layer-icon';\nimport {\n  DEFAULT_LAYER_COLOR,\n  ColorRange,\n  PROJECTED_PIXEL_SIZE_MULTIPLIER\n} from '@kepler.gl/constants';\n\nimport {\n  RGBColor,\n  Merge,\n  VisConfigColorRange,\n  VisConfigColorSelect,\n  VisConfigNumber,\n  VisConfigRange\n} from '@kepler.gl/types';\nimport {KeplerTable} from '@kepler.gl/table';\n\nexport type ArcLayerVisConfigSettings = {\n  opacity: VisConfigNumber;\n  thickness: VisConfigNumber;\n  colorRange: VisConfigColorRange;\n  sizeRange: VisConfigRange;\n  targetColor: VisConfigColorSelect;\n};\n\nexport type ArcLayerColumnsConfig = {\n  lat0: LayerColumn;\n  lat1: LayerColumn;\n  lng0: LayerColumn;\n  lng1: LayerColumn;\n};\n\nexport type ArcLayerVisConfig = {\n  colorRange: ColorRange;\n  opacity: number;\n  sizeRange: [number, number];\n  targetColor: RGBColor;\n  thickness: number;\n};\n\nexport type ArcLayerVisualChannelConfig = LayerColorConfig & LayerSizeConfig;\nexport type ArcLayerConfig = Merge<\n  LayerBaseConfig,\n  {columns: ArcLayerColumnsConfig; visConfig: ArcLayerVisConfig}\n> &\n  ArcLayerVisualChannelConfig;\n\nexport type ArcLayerData = {\n  index: number;\n  sourcePosition: [number, number, number];\n  targetPosition: [number, number, number];\n};\n\nexport type ArcLayerMeta = {\n  bounds: LayerBounds;\n};\nexport const arcPosAccessor = ({lat0, lng0, lat1, lng1}: ArcLayerColumnsConfig) => (\n  dc: DataContainerInterface\n) => d => [\n  dc.valueAt(d.index, lng0.fieldIdx),\n  dc.valueAt(d.index, lat0.fieldIdx),\n  0,\n  dc.valueAt(d.index, lng1.fieldIdx),\n  dc.valueAt(d.index, lat1.fieldIdx),\n  0\n];\n\nexport const arcRequiredColumns = ['lat0', 'lng0', 'lat1', 'lng1'];\nexport const arcColumnLabels = {\n  lat0: 'arc.lat0',\n  lng0: 'arc.lng0',\n  lat1: 'arc.lat1',\n  lng1: 'arc.lng1'\n};\n\nexport const arcVisConfigs: {\n  opacity: 'opacity';\n  thickness: 'thickness';\n  colorRange: 'colorRange';\n  sizeRange: 'strokeWidthRange';\n  targetColor: 'targetColor';\n} = {\n  opacity: 'opacity',\n  thickness: 'thickness',\n  colorRange: 'colorRange',\n  sizeRange: 'strokeWidthRange',\n  targetColor: 'targetColor'\n};\n\nexport default class ArcLayer extends Layer {\n  declare visConfigSettings: ArcLayerVisConfigSettings;\n  declare config: ArcLayerConfig;\n  declare meta: ArcLayerMeta;\n\n  constructor(props) {\n    super(props);\n\n    this.registerVisConfig(arcVisConfigs);\n    this.getPositionAccessor = (dataContainer: DataContainerInterface) =>\n      arcPosAccessor(this.config.columns)(dataContainer);\n  }\n\n  get type() {\n    return 'arc';\n  }\n\n  get isAggregated() {\n    return false;\n  }\n\n  get layerIcon() {\n    return ArcLayerIcon;\n  }\n\n  get requiredLayerColumns() {\n    return arcRequiredColumns;\n  }\n\n  get columnLabels() {\n    return arcColumnLabels;\n  }\n  get columnPairs() {\n    return this.defaultLinkColumnPairs;\n  }\n\n  get visualChannels() {\n    return {\n      sourceColor: {\n        ...super.visualChannels.color,\n        property: 'color',\n        key: 'sourceColor',\n        accessor: 'getSourceColor',\n        defaultValue: config => config.color\n      },\n      targetColor: {\n        ...super.visualChannels.color,\n        property: 'targetColor',\n        key: 'targetColor',\n        accessor: 'getTargetColor',\n        defaultValue: config => config.visConfig.targetColor || config.color\n      },\n      size: {\n        ...super.visualChannels.size,\n        accessor: 'getWidth',\n        property: 'stroke'\n      }\n    };\n  }\n\n  static findDefaultLayerProps({\n    fieldPairs = []\n  }: KeplerTable): {props: {color?: RGBColor; columns: ArcLayerColumnsConfig; label: string}[]} {\n    if (fieldPairs.length < 2) {\n      return {props: []};\n    }\n\n    const props: {color: RGBColor; columns: ArcLayerColumnsConfig; label: string} = {\n      color: hexToRgb(DEFAULT_LAYER_COLOR.tripArc),\n      // connect the first two point layer with arc\n      columns: {\n        lat0: fieldPairs[0].pair.lat,\n        lng0: fieldPairs[0].pair.lng,\n        lat1: fieldPairs[1].pair.lat,\n        lng1: fieldPairs[1].pair.lng\n      },\n      label: `${fieldPairs[0].defaultName} -> ${fieldPairs[1].defaultName} arc`\n    };\n\n    return {props: [props]};\n  }\n\n  calculateDataAttribute({dataContainer, filteredIndex}, getPosition) {\n    const data: ArcLayerData[] = [];\n    for (let i = 0; i < filteredIndex.length; i++) {\n      const index = filteredIndex[i];\n      const pos = getPosition({index});\n\n      // if doesn't have point lat or lng, do not add the point\n      // deck.gl can't handle position = null\n      if (pos.every(Number.isFinite)) {\n        data.push({\n          index,\n          sourcePosition: [pos[0], pos[1], pos[2]],\n          targetPosition: [pos[3], pos[4], pos[5]]\n        });\n      }\n    }\n\n    return data;\n  }\n\n  formatLayerData(datasets, oldLayerData) {\n    if (this.config.dataId === null) {\n      return {};\n    }\n    const {gpuFilter, dataContainer} = datasets[this.config.dataId];\n    const {data} = this.updateData(datasets, oldLayerData);\n    const accessors = this.getAttributeAccessors({dataContainer});\n    return {\n      data,\n      getFilterValue: gpuFilter.filterValueAccessor(dataContainer)(),\n      ...accessors\n    };\n  }\n  /* eslint-enable complexity */\n\n  updateLayerMeta(dataContainer) {\n    // get bounds from arcs\n    const getPosition = this.getPositionAccessor(dataContainer);\n\n    const sBounds = this.getPointsBounds(dataContainer, d => {\n      const pos = getPosition(d);\n      return [pos[0], pos[1]];\n    });\n    const tBounds = this.getPointsBounds(dataContainer, d => {\n      const pos = getPosition(d);\n      return [pos[3], pos[4]];\n    });\n\n    const bounds =\n      tBounds && sBounds\n        ? [\n            Math.min(sBounds[0], tBounds[0]),\n            Math.min(sBounds[1], tBounds[1]),\n            Math.max(sBounds[2], tBounds[2]),\n            Math.max(sBounds[3], tBounds[3])\n          ]\n        : sBounds || tBounds;\n\n    this.updateMeta({bounds});\n  }\n\n  renderLayer(opts) {\n    const {data, gpuFilter, objectHovered, interactionConfig} = opts;\n    const updateTriggers = {\n      getPosition: this.config.columns,\n      getFilterValue: gpuFilter.filterValueUpdateTriggers,\n      ...this.getVisualChannelUpdateTriggers()\n    };\n    const widthScale = this.config.visConfig.thickness * PROJECTED_PIXEL_SIZE_MULTIPLIER;\n    const defaultLayerProps = this.getDefaultDeckLayerProps(opts);\n    const hoveredObject = this.hasHoveredObject(objectHovered);\n    return [\n      new DeckArcLayer({\n        ...defaultLayerProps,\n        ...this.getBrushingExtensionProps(interactionConfig, 'source_target'),\n        ...data,\n        widthScale,\n        updateTriggers,\n        extensions: [...defaultLayerProps.extensions, new BrushingExtension()]\n      }),\n      // hover layer\n      ...(hoveredObject\n        ? [\n            new DeckArcLayer({\n              ...this.getDefaultHoverLayerProps(),\n              visible: defaultLayerProps.visible,\n              data: [hoveredObject],\n              widthScale,\n              getSourceColor: this.config.highlightColor,\n              getTargetColor: this.config.highlightColor,\n              getWidth: data.getWidth\n            })\n          ]\n        : [])\n    ];\n  }\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {Base} from '../base';\n\nexport default class LineLayerIcon extends Component {\n  static propTypes = {\n    /** Set the height of the icon, ex. '16px' */\n    height: PropTypes.string,\n    colors: PropTypes.arrayOf(PropTypes.string)\n  };\n\n  static defaultProps = {\n    height: '16px',\n    predefinedClassName: 'line-layer-icon',\n    totalColor: 5\n  };\n\n  render() {\n    return (\n      <Base {...this.props}>\n        <path\n          d=\"M57.8,58.3c-0.4,0-0.8-0.2-1.1-0.5L33.1,32.1c-0.6-0.6-0.5-1.6,0.1-2.1c0.6-0.6,1.6-0.5,2.1,0.1l23.7,25.8\n          c0.6,0.6,0.5,1.6-0.1,2.1C58.5,58.2,58.2,58.3,57.8,58.3z\"\n          className=\"cr1\"\n        />\n        <path\n          d=\"M34.2,33.6c-0.6,0-1.2-0.2-1.7-0.6c-1-0.9-1.1-2.5-0.2-3.5l18.5-21c0.9-1,2.5-1.1,3.5-0.2c1,0.9,1.1,2.5,0.2,3.5L36,32.7\n          C35.5,33.3,34.9,33.6,34.2,33.6z\"\n          className=\"cr2\"\n        />\n        <path\n          d=\"M34.2,32.6c-0.5,0-1-0.3-1.3-0.8L20.7,10.2c-0.4-0.7-0.1-1.6,0.6-2c0.7-0.4,1.6-0.1,2,0.6l12.1,21.6c0.4,0.7,0.1,1.6-0.6,2\n          C34.7,32.5,34.4,32.6,34.2,32.6z\"\n          className=\"cr3\"\n        />\n        <path\n          d=\"M15.8,58.4c-0.3,0-0.6-0.1-0.9-0.3c-0.7-0.5-0.8-1.4-0.4-2.1l18.3-25.8c0.5-0.7,1.4-0.8,2.1-0.4s0.8,1.4,0.4,2.1L17.1,57.7\n          C16.8,58.2,16.3,58.4,15.8,58.4z\"\n          className=\"cr4\"\n        />\n        <path\n          d=\"M34.2,32.1c-0.1,0-0.3,0-0.4-0.1l-28.5-14c-0.5-0.2-0.7-0.8-0.5-1.3c0.2-0.5,0.8-0.7,1.3-0.5l28.5,14\n          c0.5,0.2,0.7,0.8,0.5,1.3C34.9,31.9,34.5,32.1,34.2,32.1z\"\n          className=\"cr5\"\n        />\n      </Base>\n    );\n  }\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {BrushingExtension} from '@deck.gl/extensions';\n\nimport {EnhancedLineLayer} from '@kepler.gl/deckgl-layers';\nimport LineLayerIcon from './line-layer-icon';\nimport ArcLayer, {ArcLayerConfig} from '../arc-layer/arc-layer';\nimport {LayerColumn} from '../base-layer';\nimport {LAYER_VIS_CONFIGS, ColorRange, PROJECTED_PIXEL_SIZE_MULTIPLIER} from '@kepler.gl/constants';\nimport {\n  Merge,\n  RGBColor,\n  VisConfigColorRange,\n  VisConfigColorSelect,\n  VisConfigNumber,\n  VisConfigRange\n} from '@kepler.gl/types';\nimport {default as KeplerTable} from '@kepler.gl/table';\nimport {DataContainerInterface} from '@kepler.gl/utils';\n\nexport type LineLayerVisConfigSettings = {\n  opacity: VisConfigNumber;\n  thickness: VisConfigNumber;\n  colorRange: VisConfigColorRange;\n  sizeRange: VisConfigRange;\n  targetColor: VisConfigColorSelect;\n  elevationScale: VisConfigNumber;\n};\n\nexport type LineLayerColumnsConfig = {\n  lat0: LayerColumn;\n  lng0: LayerColumn;\n  lat1: LayerColumn;\n  lng1: LayerColumn;\n  alt0?: LayerColumn;\n  alt1?: LayerColumn;\n};\n\nexport type LineLayerVisConfig = {\n  colorRange: ColorRange;\n  opacity: number;\n  sizeRange: [number, number];\n  targetColor: RGBColor;\n  thickness: number;\n  elevationScale: number;\n};\n\nexport type LineLayerConfig = Merge<\n  ArcLayerConfig,\n  {columns: LineLayerColumnsConfig; visConfig: LineLayerVisConfig}\n>;\n\nexport const linePosAccessor = ({lat0, lng0, lat1, lng1, alt0, alt1}: LineLayerColumnsConfig) => (\n  dc: DataContainerInterface\n) => d => [\n  dc.valueAt(d.index, lng0.fieldIdx),\n  dc.valueAt(d.index, lat0.fieldIdx),\n  alt0 && alt0.fieldIdx > -1 ? dc.valueAt(d.index, alt0.fieldIdx) : 0,\n  dc.valueAt(d.index, lng1.fieldIdx),\n  dc.valueAt(d.index, lat1.fieldIdx),\n  alt1 && alt1?.fieldIdx > -1 ? dc.valueAt(d.index, alt1.fieldIdx) : 0\n];\n\nexport const lineRequiredColumns: ['lat0', 'lng0', 'lat1', 'lng1'] = [\n  'lat0',\n  'lng0',\n  'lat1',\n  'lng1'\n];\nexport const lineOptionalColumns: ['alt0', 'alt1'] = ['alt0', 'alt1'];\n\nexport const lineColumnLabels = {\n  lat0: 'arc.lat0',\n  lng0: 'arc.lng0',\n  lat1: 'arc.lat1',\n  lng1: 'arc.lng1',\n  alt0: 'line.alt0',\n  alt1: 'line.alt1'\n};\n\nexport const lineVisConfigs: {\n  opacity: 'opacity';\n  thickness: 'thickness';\n  colorRange: 'colorRange';\n  sizeRange: 'strokeWidthRange';\n  targetColor: 'targetColor';\n  elevationScale: VisConfigNumber;\n} = {\n  opacity: 'opacity',\n  thickness: 'thickness',\n  colorRange: 'colorRange',\n  sizeRange: 'strokeWidthRange',\n  targetColor: 'targetColor',\n  elevationScale: {\n    ...LAYER_VIS_CONFIGS.elevationScale,\n    defaultValue: 1\n  }\n};\n\nexport default class LineLayer extends ArcLayer {\n  declare visConfigSettings: LineLayerVisConfigSettings;\n  declare config: LineLayerConfig;\n\n  constructor(props) {\n    super(props);\n\n    this.registerVisConfig(lineVisConfigs);\n    this.getPositionAccessor = (dataContainer: DataContainerInterface) =>\n      linePosAccessor(this.config.columns)(dataContainer);\n  }\n\n  get type() {\n    return 'line';\n  }\n\n  get layerIcon() {\n    return LineLayerIcon;\n  }\n\n  get requiredLayerColumns() {\n    return lineRequiredColumns;\n  }\n\n  get optionalColumns() {\n    return lineOptionalColumns;\n  }\n\n  get columnLabels() {\n    return lineColumnLabels;\n  }\n\n  get visualChannels() {\n    const visualChannels = super.visualChannels;\n    return {\n      ...visualChannels,\n      sourceColor: {\n        ...visualChannels.sourceColor,\n        accessor: 'getColor'\n      }\n    };\n  }\n\n  static findDefaultLayerProps({fieldPairs = []}: KeplerTable) {\n    if (fieldPairs.length < 2) {\n      return {props: []};\n    }\n    const props: {columns: LineLayerColumnsConfig; label: string} = {\n      // connect the first two point layer with line\n      columns: {\n        lat0: fieldPairs[0].pair.lat,\n        lng0: fieldPairs[0].pair.lng,\n        alt0: {value: null, fieldIdx: -1, optional: true},\n        lat1: fieldPairs[1].pair.lat,\n        lng1: fieldPairs[1].pair.lng,\n        alt1: {value: null, fieldIdx: -1, optional: true}\n      },\n      label: `${fieldPairs[0].defaultName} -> ${fieldPairs[1].defaultName} line`\n    };\n\n    return {props: [props]};\n  }\n\n  renderLayer(opts) {\n    const {data, gpuFilter, objectHovered, interactionConfig} = opts;\n\n    const layerProps = {\n      widthScale: this.config.visConfig.thickness * PROJECTED_PIXEL_SIZE_MULTIPLIER,\n      elevationScale: this.config.visConfig.elevationScale\n    };\n\n    const updateTriggers = {\n      getPosition: this.config.columns,\n      getFilterValue: gpuFilter.filterValueUpdateTriggers,\n      ...this.getVisualChannelUpdateTriggers()\n    };\n    const defaultLayerProps = this.getDefaultDeckLayerProps(opts);\n    const hoveredObject = this.hasHoveredObject(objectHovered);\n\n    return [\n      // base layer\n      new EnhancedLineLayer({\n        ...defaultLayerProps,\n        ...this.getBrushingExtensionProps(interactionConfig, 'source_target'),\n        ...data,\n        ...layerProps,\n        updateTriggers,\n        extensions: [...defaultLayerProps.extensions, new BrushingExtension()]\n      }),\n      // hover layer\n      ...(hoveredObject\n        ? [\n            new EnhancedLineLayer({\n              ...this.getDefaultHoverLayerProps(),\n              ...layerProps,\n              data: [hoveredObject],\n              getColor: this.config.highlightColor,\n              getTargetColor: this.config.highlightColor,\n              getWidth: data.getWidth\n            })\n          ]\n        : [])\n    ];\n  }\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport memoize from 'lodash.memoize';\nimport Layer, {\n  LayerBaseConfig,\n  LayerBaseConfigPartial,\n  LayerColorConfig,\n  LayerColumn,\n  LayerSizeConfig,\n  VisualChannelDescription,\n  VisualChannels\n} from './base-layer';\nimport {hexToRgb, aggregate} from '@kepler.gl/utils';\nimport {\n  HIGHLIGH_COLOR_3D,\n  CHANNEL_SCALES,\n  FIELD_OPTS,\n  DEFAULT_AGGREGATION,\n  ColorRange\n} from '@kepler.gl/constants';\nimport {Merge} from '@kepler.gl/types';\nimport {KeplerTable, Datasets} from '@kepler.gl/table';\n\ntype AggregationLayerColumns = {\n  lat: LayerColumn;\n  lng: LayerColumn;\n};\n\nexport type AggregationLayerData = {\n  index: number;\n};\n\nexport const pointPosAccessor = ({lat, lng}: AggregationLayerColumns) => dc => d => [\n  dc.valueAt(d.index, lng.fieldIdx),\n  dc.valueAt(d.index, lat.fieldIdx)\n];\n\nexport const pointPosResolver = ({lat, lng}: AggregationLayerColumns) =>\n  `${lat.fieldIdx}-${lng.fieldIdx}`;\n\nexport const getValueAggrFunc = getPointData => (field, aggregation) => points =>\n  field\n    ? aggregate(\n        points.map(p => field.valueAccessor(getPointData(p))),\n        aggregation\n      )\n    : points.length;\n\nexport const getFilterDataFunc = (\n  filterRange: number[][],\n  getFilterValue: (d: any) => number[]\n): ((d: any) => boolean) => pt =>\n  getFilterValue(pt).every((val, i) => val >= filterRange[i][0] && val <= filterRange[i][1]);\n\nconst getLayerColorRange = (colorRange: ColorRange) => colorRange.colors.map(hexToRgb);\n\nexport const aggregateRequiredColumns: ['lat', 'lng'] = ['lat', 'lng'];\n\nexport type AggregationLayerVisualChannelConfig = LayerColorConfig & LayerSizeConfig;\nexport type AggregationLayerConfig = Merge<LayerBaseConfig, {columns: AggregationLayerColumns}> &\n  AggregationLayerVisualChannelConfig;\nexport default class AggregationLayer extends Layer {\n  getColorRange: any;\n  declare config: AggregationLayerConfig;\n  declare getPointData: (any) => any;\n  declare gpuFilterGetIndex: (any) => number;\n  declare gpuFilterGetData: (dataContainer, data, fieldIndex) => any;\n\n  constructor(\n    props: {\n      id?: string;\n    } & LayerBaseConfigPartial\n  ) {\n    super(props);\n\n    this.getPositionAccessor = dataContainer =>\n      pointPosAccessor(this.config.columns)(dataContainer);\n    this.getColorRange = memoize(getLayerColorRange);\n\n    // Access data of a point from aggregated bins, depends on how BinSorter works\n    // Deck.gl's BinSorter puts data in point.source\n    this.getPointData = pt => pt.source;\n\n    this.gpuFilterGetIndex = pt => this.getPointData(pt).index;\n    this.gpuFilterGetData = (dataContainer, data, fieldIndex) =>\n      dataContainer.valueAt(data.index, fieldIndex);\n  }\n\n  get isAggregated(): true {\n    return true;\n  }\n\n  get requiredLayerColumns() {\n    return aggregateRequiredColumns;\n  }\n\n  get columnPairs() {\n    return this.defaultPointColumnPairs;\n  }\n\n  get noneLayerDataAffectingProps() {\n    return [\n      ...super.noneLayerDataAffectingProps,\n      'enable3d',\n      'colorRange',\n      'colorDomain',\n      'sizeRange',\n      'sizeScale',\n      'sizeDomain',\n      'percentile',\n      'coverage',\n      'elevationPercentile',\n      'elevationScale',\n      'enableElevationZoomFactor'\n    ];\n  }\n\n  get visualChannels(): VisualChannels {\n    return {\n      color: {\n        aggregation: 'colorAggregation',\n        channelScaleType: CHANNEL_SCALES.colorAggr,\n        defaultMeasure: 'property.pointCount',\n        domain: 'colorDomain',\n        field: 'colorField',\n        key: 'color',\n        property: 'color',\n        range: 'colorRange',\n        scale: 'colorScale'\n      },\n      size: {\n        aggregation: 'sizeAggregation',\n        channelScaleType: CHANNEL_SCALES.sizeAggr,\n        condition: config => config.visConfig.enable3d,\n        defaultMeasure: 'property.pointCount',\n        domain: 'sizeDomain',\n        field: 'sizeField',\n        key: 'size',\n        property: 'height',\n        range: 'sizeRange',\n        scale: 'sizeScale'\n      }\n    };\n  }\n\n  /**\n   * Get the description of a visualChannel config\n   * @param key\n   * @returns\n   */\n  getVisualChannelDescription(key: string): VisualChannelDescription {\n    const channel = this.visualChannels[key];\n    if (!channel) return {label: '', measure: undefined};\n    // e.g. label: Color, measure: Average of ETA\n    const {range, field, defaultMeasure, aggregation} = channel;\n    const fieldConfig = this.config[field];\n    const label = this.visConfigSettings[range]?.label;\n\n    return {\n      label: typeof label === 'function' ? label(this.config) : label || '',\n      measure:\n        fieldConfig && aggregation\n          ? `${this.config.visConfig[aggregation]} of ${fieldConfig.displayName ||\n              fieldConfig.name}`\n          : defaultMeasure\n    };\n  }\n\n  getHoverData(object) {\n    // return aggregated object\n    return object;\n  }\n\n  /**\n   * Aggregation layer handles visual channel aggregation inside deck.gl layer\n   */\n  updateLayerVisualChannel({dataContainer}, channel) {\n    this.validateVisualChannel(channel);\n  }\n\n  /**\n   * Validate aggregation type on top of basic layer visual channel validation\n   * @param channel\n   */\n  validateVisualChannel(channel) {\n    // field type decides aggregation type decides scale type\n    this.validateFieldType(channel);\n    this.validateAggregationType(channel);\n    this.validateScale(channel);\n  }\n\n  /**\n   * Validate aggregation type based on selected field\n   */\n  validateAggregationType(channel) {\n    const visualChannel = this.visualChannels[channel];\n    const {field, aggregation} = visualChannel;\n    const aggregationOptions = this.getAggregationOptions(channel);\n\n    if (!aggregation) {\n      return;\n    }\n\n    if (!aggregationOptions.length) {\n      // if field cannot be aggregated, set field to null\n      this.updateLayerConfig({[field]: null});\n    } else if (!aggregationOptions.includes(this.config.visConfig[aggregation])) {\n      // current aggregation type is not supported by this field\n      // set aggregation to the first supported option\n      this.updateLayerVisConfig({[aggregation]: aggregationOptions[0]});\n    }\n  }\n\n  getAggregationOptions(channel) {\n    const visualChannel = this.visualChannels[channel];\n    const {field, channelScaleType} = visualChannel;\n\n    return Object.keys(\n      this.config[field]\n        ? FIELD_OPTS[this.config[field].type].scale[channelScaleType]\n        : DEFAULT_AGGREGATION[channelScaleType]\n    );\n  }\n\n  /**\n   * Get scale options based on current field and aggregation type\n   * @param channel\n   * @returns\n   */\n  getScaleOptions(channel: string): string[] {\n    const visualChannel = this.visualChannels[channel];\n    const {field, aggregation, channelScaleType} = visualChannel;\n    const aggregationType = aggregation ? this.config.visConfig[aggregation] : null;\n\n    if (!aggregationType) {\n      return [];\n    }\n\n    return this.config[field]\n      ? // scale options based on aggregation\n        FIELD_OPTS[this.config[field].type].scale[channelScaleType][aggregationType]\n      : // default scale options for point count\n        DEFAULT_AGGREGATION[channelScaleType][aggregationType];\n  }\n\n  /**\n   * Aggregation layer handles visual channel aggregation inside deck.gl layer\n   */\n  updateLayerDomain(datasets, newFilter): AggregationLayer {\n    return this;\n  }\n\n  updateLayerMeta(dataContainer, getPosition) {\n    // get bounds from points\n    const bounds = this.getPointsBounds(dataContainer, getPosition);\n\n    this.updateMeta({bounds});\n  }\n\n  calculateDataAttribute({dataContainer, filteredIndex}: KeplerTable, getPosition) {\n    const data: AggregationLayerData[] = [];\n\n    for (let i = 0; i < filteredIndex.length; i++) {\n      const index = filteredIndex[i];\n      const pos = getPosition({index});\n\n      // if doesn't have point lat or lng, do not add the point\n      // deck.gl can't handle position = null\n      if (pos.every(Number.isFinite)) {\n        data.push({\n          index\n        });\n      }\n    }\n\n    return data;\n  }\n\n  formatLayerData(datasets: Datasets, oldLayerData) {\n    if (this.config.dataId === null) {\n      return {};\n    }\n    const {gpuFilter, dataContainer} = datasets[this.config.dataId];\n    const getPosition = this.getPositionAccessor(dataContainer);\n\n    const aggregatePoints = getValueAggrFunc(this.getPointData);\n    const getColorValue = aggregatePoints(\n      this.config.colorField,\n      this.config.visConfig.colorAggregation\n    );\n\n    const getElevationValue = aggregatePoints(\n      this.config.sizeField,\n      this.config.visConfig.sizeAggregation\n    );\n    const hasFilter = Object.values(gpuFilter.filterRange).some((arr: any) =>\n      arr.some(v => v !== 0)\n    );\n\n    const getFilterValue = gpuFilter.filterValueAccessor(dataContainer)(\n      this.gpuFilterGetIndex,\n      this.gpuFilterGetData\n    );\n    const filterData = hasFilter\n      ? getFilterDataFunc(gpuFilter.filterRange, getFilterValue)\n      : undefined;\n\n    const {data} = this.updateData(datasets, oldLayerData);\n\n    return {\n      data,\n      getPosition,\n      _filterData: filterData,\n      // @ts-expect-error\n      ...(getColorValue ? {getColorValue} : {}),\n      // @ts-expect-error\n      ...(getElevationValue ? {getElevationValue} : {})\n    };\n  }\n\n  getDefaultDeckLayerProps(opts): any {\n    const baseProp = super.getDefaultDeckLayerProps(opts);\n    return {\n      ...baseProp,\n      highlightColor: HIGHLIGH_COLOR_3D,\n      // gpu data filtering is not supported in aggregation layer\n      extensions: [],\n      autoHighlight: this.config.visConfig.enable3d\n    };\n  }\n\n  getDefaultAggregationLayerProp(opts) {\n    const {gpuFilter, mapState, layerCallbacks = {}} = opts;\n    const {visConfig} = this.config;\n    const eleZoomFactor = this.getElevationZoomFactor(mapState);\n\n    const updateTriggers = {\n      getColorValue: {\n        colorField: this.config.colorField,\n        colorAggregation: this.config.visConfig.colorAggregation\n      },\n      getElevationValue: {\n        sizeField: this.config.sizeField,\n        sizeAggregation: this.config.visConfig.sizeAggregation\n      },\n      _filterData: {\n        filterRange: gpuFilter.filterRange,\n        ...gpuFilter.filterValueUpdateTriggers\n      }\n    };\n\n    return {\n      ...this.getDefaultDeckLayerProps(opts),\n      coverage: visConfig.coverage,\n\n      // color\n      colorRange: this.getColorRange(visConfig.colorRange),\n      colorScaleType: this.config.colorScale,\n      upperPercentile: visConfig.percentile[1],\n      lowerPercentile: visConfig.percentile[0],\n      colorAggregation: visConfig.colorAggregation,\n\n      // elevation\n      extruded: visConfig.enable3d,\n      elevationScale: visConfig.elevationScale * eleZoomFactor,\n      elevationScaleType: this.config.sizeScale,\n      elevationRange: visConfig.sizeRange,\n      elevationLowerPercentile: visConfig.elevationPercentile[0],\n      elevationUpperPercentile: visConfig.elevationPercentile[1],\n\n      // updateTriggers\n      updateTriggers,\n\n      // callbacks\n      onSetColorDomain: layerCallbacks.onSetLayerDomain\n    };\n  }\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {WebMercatorViewport} from '@deck.gl/core';\nimport {MapState} from '@kepler.gl/types';\n\n/**\n * top left of the grid to a square polygon for the hover layer\n * and current latitude\n * @param object\n * @param cellSize\n * @param coverage\n * @param properties\n * @param mapState\n * @returns - geojson feature\n */\n\n// TODO: TEST\nexport function pointToPolygonGeo({\n  object,\n  cellSize,\n  coverage,\n  properties,\n  mapState\n}: {\n  object: any;\n  cellSize: number;\n  coverage: number;\n  properties?: any;\n  mapState: MapState;\n}) {\n  const {position} = object;\n  const viewport = new WebMercatorViewport(mapState);\n\n  if (!position) {\n    return null;\n  }\n\n  return {\n    geometry: {\n      coordinates: [\n        viewport.addMetersToLngLat(position, [\n          cellSize * (0.5 - coverage / 2),\n          cellSize * (0.5 - coverage / 2)\n        ]),\n        viewport.addMetersToLngLat(position, [\n          cellSize * (0.5 + coverage / 2),\n          cellSize * (0.5 - coverage / 2)\n        ]),\n        viewport.addMetersToLngLat(position, [\n          cellSize * (0.5 + coverage / 2),\n          cellSize * (0.5 + coverage / 2)\n        ]),\n        viewport.addMetersToLngLat(position, [\n          cellSize * (0.5 - coverage / 2),\n          cellSize * (0.5 + coverage / 2)\n        ]),\n        viewport.addMetersToLngLat(position, [\n          cellSize * (0.5 - coverage / 2),\n          cellSize * (0.5 - coverage / 2)\n        ])\n      ],\n      type: 'LineString'\n    },\n    properties\n  };\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {Base} from '../base';\n\nexport default class GridLayerIcon extends Component {\n  static propTypes = {\n    /** Set the height of the icon, ex. '16px' */\n    height: PropTypes.string,\n    colors: PropTypes.arrayOf(PropTypes.string)\n  };\n\n  static defaultProps = {\n    height: '16px',\n    predefinedClassName: 'grid-layer-icon',\n    totalColor: 6\n  };\n\n  render() {\n    return (\n      <Base {...this.props}>\n        <rect x=\"11.2\" y=\"11.2\" className=\"cr1\" width=\"13.1\" height=\"13.1\" style={{opacity: 0.8}} />\n        <rect x=\"25.4\" y=\"11.2\" className=\"cr2\" width=\"13.1\" height=\"13.1\" style={{opacity: 0.8}} />\n        <rect x=\"39.6\" y=\"11.2\" width=\"13.1\" height=\"13.1\" className=\"cr3\" />\n        <rect x=\"11.2\" y=\"25.4\" className=\"cr4\" width=\"13.1\" height=\"13.1\" style={{opacity: 0.4}} />\n        <rect x=\"25.4\" y=\"25.4\" className=\"cr5\" width=\"13.1\" height=\"13.1\" />\n        <rect x=\"39.6\" y=\"25.4\" className=\"cr6\" width=\"13.1\" height=\"13.1\" style={{opacity: 0.8}} />\n        <rect x=\"11.2\" y=\"39.6\" width=\"13.1\" className=\"cr1\" height=\"13.1\" />\n        <rect x=\"25.4\" y=\"39.6\" className=\"cr2\" width=\"13.1\" height=\"13.1\" style={{opacity: 0.4}} />\n        <rect x=\"39.6\" y=\"39.6\" className=\"cr3\" width=\"13.1\" height=\"13.1\" style={{opacity: 0.4}} />\n      </Base>\n    );\n  }\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {GeoJsonLayer} from '@deck.gl/layers';\nimport {EnhancedGridLayer} from '@kepler.gl/deckgl-layers';\nimport AggregationLayer, {AggregationLayerConfig} from '../aggregation-layer';\nimport {pointToPolygonGeo} from './grid-utils';\nimport GridLayerIcon from './grid-layer-icon';\nimport {\n  VisConfigBoolean,\n  VisConfigColorRange,\n  VisConfigNumber,\n  VisConfigRange,\n  VisConfigSelection,\n  Merge\n} from '@kepler.gl/types';\nimport {AggregationTypes, ColorRange} from '@kepler.gl/constants';\n\nexport type GridLayerVisConfigSettings = {\n  opacity: VisConfigNumber;\n  worldUnitSize: VisConfigNumber;\n  colorRange: VisConfigColorRange;\n  coverage: VisConfigNumber;\n  sizeRange: VisConfigRange;\n  percentile: VisConfigRange;\n  elevationPercentile: VisConfigRange;\n  elevationScale: VisConfigNumber;\n  enableElevationZoomFactor: VisConfigBoolean;\n  colorAggregation: VisConfigSelection;\n  sizeAggregation: VisConfigSelection;\n  enable3d: VisConfigBoolean;\n};\n\nexport type GridLayerVisConfig = {\n  opacity: number;\n  worldUnitSize: number;\n  colorRange: ColorRange;\n  coverage: number;\n  sizeRange: [number, number];\n  percentile: [number, number];\n  elevationPercentile: [number, number];\n  elevationScale: number;\n  enableElevationZoomFactor: boolean;\n  colorAggregation: AggregationTypes;\n  sizeAggregation: AggregationTypes;\n  enable3d: boolean;\n};\n\nexport type GridLayerConfig = Merge<AggregationLayerConfig, {visConfig: GridLayerVisConfig}>;\n\nexport const gridVisConfigs: {\n  opacity: 'opacity';\n  worldUnitSize: 'worldUnitSize';\n  colorRange: 'colorRange';\n  coverage: 'coverage';\n  sizeRange: 'elevationRange';\n  percentile: 'percentile';\n  elevationPercentile: 'elevationPercentile';\n  elevationScale: 'elevationScale';\n  enableElevationZoomFactor: 'enableElevationZoomFactor';\n  colorAggregation: 'colorAggregation';\n  sizeAggregation: 'sizeAggregation';\n  enable3d: 'enable3d';\n} = {\n  opacity: 'opacity',\n  worldUnitSize: 'worldUnitSize',\n  colorRange: 'colorRange',\n  coverage: 'coverage',\n  sizeRange: 'elevationRange',\n  percentile: 'percentile',\n  elevationPercentile: 'elevationPercentile',\n  elevationScale: 'elevationScale',\n  enableElevationZoomFactor: 'enableElevationZoomFactor',\n  colorAggregation: 'colorAggregation',\n  sizeAggregation: 'sizeAggregation',\n  enable3d: 'enable3d'\n};\n\nexport default class GridLayer extends AggregationLayer {\n  declare visConfigSettings: GridLayerVisConfigSettings;\n  declare config: GridLayerConfig;\n\n  constructor(props) {\n    super(props);\n\n    this.registerVisConfig(gridVisConfigs);\n    this.visConfigSettings.worldUnitSize.label = 'columns.grid.worldUnitSize';\n  }\n\n  get type(): 'grid' {\n    return 'grid';\n  }\n\n  get layerIcon() {\n    return GridLayerIcon;\n  }\n\n  renderLayer(opts) {\n    const {data, objectHovered, mapState} = opts;\n\n    const defaultAggregationLayerProps = this.getDefaultAggregationLayerProp(opts);\n    const zoomFactor = this.getZoomFactor(mapState);\n    const {visConfig} = this.config;\n    const cellSize = visConfig.worldUnitSize * 1000;\n    const hoveredObject = this.hasHoveredObject(objectHovered);\n\n    return [\n      new EnhancedGridLayer({\n        ...defaultAggregationLayerProps,\n        ...data,\n        wrapLongitude: false,\n        cellSize\n      }),\n\n      // render an outline of each cell if not extruded\n      ...(hoveredObject && !visConfig.enable3d\n        ? [\n            new GeoJsonLayer({\n              ...this.getDefaultHoverLayerProps(),\n              visible: defaultAggregationLayerProps.visible,\n              wrapLongitude: false,\n              data: [\n                pointToPolygonGeo({\n                  object: hoveredObject,\n                  cellSize,\n                  coverage: visConfig.coverage,\n                  mapState\n                })\n              ],\n              getLineColor: this.config.highlightColor,\n              lineWidthScale: 8 * zoomFactor\n            })\n          ]\n        : [])\n    ];\n  }\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {WebMercatorViewport} from '@deck.gl/core';\nimport Console from 'global/console';\nimport {Centroid} from '@kepler.gl/utils';\n\nexport function hexagonToPolygonGeo(object, properties, radius, mapState) {\n  const viewport = new WebMercatorViewport(mapState);\n  if (!Array.isArray(object.position)) {\n    return null;\n  }\n\n  const screenCenter = viewport.projectFlat(object.position);\n  const {unitsPerMeter} = viewport.getDistanceScales(object.position);\n\n  if (!Array.isArray(unitsPerMeter)) {\n    Console.warn(`unitsPerMeter is undefined`);\n    return null;\n  }\n\n  const pixRadius = radius * unitsPerMeter[0];\n\n  const coordinates: any[] = [];\n\n  for (let i = 0; i < 6; i++) {\n    const vertex = hex_corner(screenCenter, pixRadius, i);\n    coordinates.push(viewport.unprojectFlat(vertex));\n  }\n\n  coordinates.push(coordinates[0]);\n\n  return {\n    geometry: {\n      coordinates,\n      type: 'LineString'\n    },\n    properties\n  };\n}\n\nfunction hex_corner(center: Centroid, radius: number, i: number) {\n  const angle_deg = 60 * i + 30;\n  const angle_rad = (Math.PI / 180) * angle_deg;\n\n  return [center[0] + radius * Math.cos(angle_rad), center[1] + radius * Math.sin(angle_rad)];\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {Base} from '../base';\n\nexport default class HexagonLayerIcon extends Component {\n  static propTypes = {\n    /** Set the height of the icon, ex. '16px' */\n    height: PropTypes.string,\n    colors: PropTypes.arrayOf(PropTypes.string)\n  };\n\n  static defaultProps = {\n    height: '16px',\n    predefinedClassName: 'hexagon-layer-icon',\n    totalColor: 6\n  };\n\n  render() {\n    return (\n      <Base {...this.props}>\n        <polygon\n          className=\"cr1\"\n          points=\"23.9,10 30.9,14 30.9,22.1 23.9,26.2 16.8,22.1 16.8,14 \"\n          style={{opacity: 0.6}}\n        />\n        <polygon\n          className=\"cr2\"\n          points=\"23.9,37.8 30.9,41.9 30.9,50 23.9,54 16.8,50 16.8,41.9 \"\n          style={{opacity: 0.4}}\n        />\n        <polygon className=\"cr6\" points=\"40.1,10 47.2,14 47.2,22.1 40.1,26.2 33.1,22.1 33.1,14 \" />\n        <polygon\n          className=\"cr3\"\n          points=\"40.1,37.8 47.2,41.9 47.2,50 40.1,54 33.1,50 33.1,41.9 \"\n          style={{opacity: 0.8}}\n        />\n        <polygon\n          className=\"cr1\"\n          points=\"15.8,23.9 22.8,27.9 22.8,36.1 15.8,40.1 8.7,36.1 8.7,27.9 \"\n        />\n        <polygon\n          className=\"cr4\"\n          points=\"32,23.9 39,27.9 39,36.1 32,40.1 25,36.1 25,27.9 \"\n          style={{opacity: 0.8}}\n        />\n        <polygon\n          className=\"cr5\"\n          points=\"48.2,23.9 55.3,27.9 55.3,36.1 48.2,40.1 41.2,36.1 41.2,27.9 \"\n          style={{opacity: 0.4}}\n        />\n      </Base>\n    );\n  }\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {GeoJsonLayer} from '@deck.gl/layers';\nimport AggregationLayer, {AggregationLayerConfig} from '../aggregation-layer';\nimport {EnhancedHexagonLayer} from '@kepler.gl/deckgl-layers';\nimport {hexagonToPolygonGeo} from './hexagon-utils';\nimport HexagonLayerIcon from './hexagon-layer-icon';\nimport {clamp} from '@kepler.gl/utils';\nimport {\n  VisConfigBoolean,\n  VisConfigColorRange,\n  VisConfigNumber,\n  VisConfigRange,\n  VisConfigSelection,\n  Merge\n} from '@kepler.gl/types';\nimport {AggregationTypes, ColorRange} from '@kepler.gl/constants';\n\nexport type HexagonLayerVisConfigSettings = {\n  opacity: VisConfigNumber;\n  worldUnitSize: VisConfigNumber;\n  resolution: VisConfigNumber;\n  colorRange: VisConfigColorRange;\n  coverage: VisConfigNumber;\n  sizeRange: VisConfigRange;\n  percentile: VisConfigRange;\n  elevationPercentile: VisConfigRange;\n  elevationScale: VisConfigNumber;\n  enableElevationZoomFactor: VisConfigBoolean;\n  colorAggregation: VisConfigSelection;\n  sizeAggregation: VisConfigSelection;\n  enable3d: VisConfigBoolean;\n};\n\nexport type HexagonLayerVisConfig = {\n  opacity: number;\n  worldUnitSize: number;\n  resolution: number;\n  colorRange: ColorRange;\n  coverage: number;\n  sizeRange: [number, number];\n  percentile: [number, number];\n  elevationPercentile: [number, number];\n  elevationScale: number;\n  enableElevationZoomFactor: boolean;\n  colorAggregation: AggregationTypes;\n  sizeAggregation: AggregationTypes;\n  enable3d: boolean;\n};\n\nexport type HexagonLayerConfig = Merge<AggregationLayerConfig, {visConfig: HexagonLayerVisConfig}>;\n\nexport const hexagonVisConfigs: {\n  opacity: 'opacity';\n  worldUnitSize: 'worldUnitSize';\n  resolution: 'resolution';\n  colorRange: 'colorRange';\n  coverage: 'coverage';\n  sizeRange: 'elevationRange';\n  percentile: 'percentile';\n  elevationPercentile: 'elevationPercentile';\n  elevationScale: 'elevationScale';\n  enableElevationZoomFactor: 'enableElevationZoomFactor';\n  colorAggregation: 'colorAggregation';\n  sizeAggregation: 'sizeAggregation';\n  enable3d: 'enable3d';\n} = {\n  opacity: 'opacity',\n  worldUnitSize: 'worldUnitSize',\n  resolution: 'resolution',\n  colorRange: 'colorRange',\n  coverage: 'coverage',\n  sizeRange: 'elevationRange',\n  percentile: 'percentile',\n  elevationPercentile: 'elevationPercentile',\n  elevationScale: 'elevationScale',\n  enableElevationZoomFactor: 'enableElevationZoomFactor',\n  colorAggregation: 'colorAggregation',\n  sizeAggregation: 'sizeAggregation',\n  enable3d: 'enable3d'\n};\n\nexport default class HexagonLayer extends AggregationLayer {\n  declare visConfigSettings: HexagonLayerVisConfigSettings;\n  declare config: HexagonLayerConfig;\n\n  constructor(props) {\n    super(props);\n\n    this.registerVisConfig(hexagonVisConfigs);\n    this.visConfigSettings.worldUnitSize.label = 'columns.hexagon.worldUnitSize';\n  }\n\n  get type(): 'hexagon' {\n    return 'hexagon';\n  }\n\n  get name(): 'Hexbin' {\n    return 'Hexbin';\n  }\n\n  get layerIcon() {\n    return HexagonLayerIcon;\n  }\n\n  renderLayer(opts) {\n    const {data, objectHovered, mapState} = opts;\n\n    const defaultAggregationLayerProps = this.getDefaultAggregationLayerProp(opts);\n    const zoomFactor = this.getZoomFactor(mapState);\n    const {visConfig} = this.config;\n    const radius = visConfig.worldUnitSize * 1000;\n    const hoveredObject = this.hasHoveredObject(objectHovered);\n\n    return [\n      new EnhancedHexagonLayer({\n        ...defaultAggregationLayerProps,\n        ...data,\n        wrapLongitude: false,\n        radius\n      }),\n\n      // render an outline of each hexagon if not extruded\n      ...(hoveredObject && !visConfig.enable3d\n        ? [\n            new GeoJsonLayer({\n              ...this.getDefaultHoverLayerProps(),\n              visible: defaultAggregationLayerProps.visible,\n              wrapLongitude: false,\n              data: [\n                hexagonToPolygonGeo(hoveredObject, {}, radius * visConfig.coverage, mapState)\n              ].filter(d => d),\n              getLineColor: this.config.highlightColor,\n              lineWidthScale: clamp([1, 100], radius * 0.1 * zoomFactor)\n            })\n          ]\n        : [])\n    ];\n  }\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {Base} from '../base';\n\nexport default class GeojsonLayerIcon extends Component {\n  static propTypes = {\n    /** Set the height of the icon, ex. '16px' */\n    height: PropTypes.string,\n    colors: PropTypes.arrayOf(PropTypes.string)\n  };\n\n  static defaultProps = {\n    height: null,\n    size: 'tiny',\n    predefinedClassName: 'geojson-layer-icon'\n  };\n\n  render() {\n    return (\n      <Base {...this.props}>\n        <polygon\n          className=\"cr1\"\n          points=\"25.04 23.08 9.72 31.79 8.19 43.2 19.57 53.83 28.79 53.83 35.6 46.57 39.45 30.08 25.04 23.08\"\n        />\n        <polygon\n          className=\"cr2\"\n          points=\"52.8 26.3 41.74 30.32 37.9 46.75 45.26 53.83 51.45 53.83 55.07 43.51 52.8 26.3\"\n          style={{opacity: 0.8}}\n        />\n        <polygon\n          className=\"cr3\"\n          points=\"36.69 48.75 31.93 53.83 41.96 53.83 36.69 48.75\"\n          style={{opacity: 0.4}}\n        />\n        <polygon\n          className=\"cr3\"\n          points=\"25.95 20.98 40.84 28.22 52.57 24.06 50.89 11.5 23.24 11.5 25.95 20.98\"\n          style={{opacity: 0.4}}\n        />\n        <polygon\n          className=\"cr4\"\n          points=\"20.79 11.9 11.73 15.72 10.08 28.96 23.64 21.25 20.79 11.9\"\n          style={{opacity: 0.8}}\n        />\n      </Base>\n    );\n  }\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport * as arrow from 'apache-arrow';\nimport {point as turfPoint} from '@turf/helpers';\nimport booleanWithin from '@turf/boolean-within';\nimport {Feature, Polygon} from 'geojson';\nimport uniq from 'lodash.uniq';\nimport {DATA_TYPES} from 'type-analyzer';\nimport Layer, {\n  colorMaker,\n  LayerBaseConfig,\n  LayerBaseConfigPartial,\n  LayerColorConfig,\n  LayerColumn,\n  LayerHeightConfig,\n  LayerRadiusConfig,\n  LayerSizeConfig,\n  LayerStrokeColorConfig\n} from '../base-layer';\nimport {GeoJsonLayer as DeckGLGeoJsonLayer} from '@deck.gl/layers';\nimport {getGeojsonLayerMeta, GeojsonDataMaps, DeckGlGeoTypes} from './geojson-utils';\nimport {\n  getGeojsonLayerMetaFromArrow,\n  isLayerHoveredFromArrow,\n  getHoveredObjectFromArrow\n} from '../layer-utils';\nimport GeojsonLayerIcon from './geojson-layer-icon';\nimport {\n  GEOJSON_FIELDS,\n  HIGHLIGH_COLOR_3D,\n  CHANNEL_SCALES,\n  ColorRange,\n  LAYER_VIS_CONFIGS\n} from '@kepler.gl/constants';\nimport {\n  VisConfigNumber,\n  VisConfigColorSelect,\n  VisConfigColorRange,\n  VisConfigRange,\n  VisConfigBoolean,\n  Merge,\n  RGBColor,\n  Field\n} from '@kepler.gl/types';\nimport {KeplerTable} from '@kepler.gl/table';\nimport {DataContainerInterface, ArrowDataContainer} from '@kepler.gl/utils';\nimport {FilterArrowExtension} from '@kepler.gl/deckgl-layers';\n\nconst SUPPORTED_ANALYZER_TYPES = {\n  [DATA_TYPES.GEOMETRY]: true,\n  [DATA_TYPES.GEOMETRY_FROM_STRING]: true,\n  [DATA_TYPES.PAIR_GEOMETRY_FROM_STRING]: true\n};\n\nexport const geojsonVisConfigs: {\n  opacity: 'opacity';\n  strokeOpacity: VisConfigNumber;\n  thickness: VisConfigNumber;\n  strokeColor: 'strokeColor';\n  colorRange: 'colorRange';\n  strokeColorRange: 'strokeColorRange';\n  radius: 'radius';\n\n  sizeRange: 'strokeWidthRange';\n  radiusRange: 'radiusRange';\n  heightRange: 'elevationRange';\n  elevationScale: 'elevationScale';\n  stroked: 'stroked';\n  filled: 'filled';\n  enable3d: 'enable3d';\n  wireframe: 'wireframe';\n  fixedHeight: 'fixedHeight';\n} = {\n  opacity: 'opacity',\n  strokeOpacity: {\n    ...LAYER_VIS_CONFIGS.opacity,\n    property: 'strokeOpacity'\n  },\n  thickness: {\n    ...LAYER_VIS_CONFIGS.thickness,\n    defaultValue: 0.5\n  },\n  strokeColor: 'strokeColor',\n  colorRange: 'colorRange',\n  strokeColorRange: 'strokeColorRange',\n  radius: 'radius',\n\n  sizeRange: 'strokeWidthRange',\n  radiusRange: 'radiusRange',\n  heightRange: 'elevationRange',\n  elevationScale: 'elevationScale',\n  stroked: 'stroked',\n  filled: 'filled',\n  enable3d: 'enable3d',\n  wireframe: 'wireframe',\n  fixedHeight: 'fixedHeight'\n};\n\nexport type GeoJsonVisConfigSettings = {\n  opacity: VisConfigNumber;\n  strokeOpacity: VisConfigNumber;\n  thickness: VisConfigNumber;\n  strokeColor: VisConfigColorSelect;\n  colorRange: VisConfigColorRange;\n  strokeColorRange: VisConfigColorRange;\n  radius: VisConfigNumber;\n\n  sizeRange: VisConfigRange;\n  radiusRange: VisConfigRange;\n  heightRange: VisConfigRange;\n  elevationScale: VisConfigNumber;\n  fixedHeight: VisConfigBoolean;\n  stroked: VisConfigBoolean;\n  filled: VisConfigBoolean;\n  enable3d: VisConfigBoolean;\n  wireframe: VisConfigBoolean;\n};\n\nexport type GeoJsonLayerColumnsConfig = {\n  geojson: LayerColumn;\n};\n\nexport type GeoJsonLayerVisConfig = {\n  opacity: number;\n  strokeOpacity: number;\n  thickness: number;\n  strokeColor: RGBColor;\n  colorRange: ColorRange;\n  strokeColorRange: ColorRange;\n  radius: number;\n\n  sizeRange: [number, number];\n  radiusRange: [number, number];\n  heightRange: [number, number];\n  elevationScale: number;\n  stroked: boolean;\n  filled: boolean;\n  enable3d: boolean;\n  wireframe: boolean;\n  fixedHeight: boolean;\n};\n\ntype GeoJsonLayerVisualChannelConfig = LayerColorConfig &\n  LayerStrokeColorConfig &\n  LayerSizeConfig &\n  LayerHeightConfig &\n  LayerRadiusConfig;\nexport type GeoJsonLayerConfig = Merge<\n  LayerBaseConfig,\n  {columns: GeoJsonLayerColumnsConfig; visConfig: GeoJsonLayerVisConfig}\n> &\n  GeoJsonLayerVisualChannelConfig;\n\nexport type GeoJsonLayerMeta = {\n  featureTypes?: DeckGlGeoTypes;\n  fixedRadius?: boolean;\n};\n\nexport const geoJsonRequiredColumns: ['geojson'] = ['geojson'];\n\ntype ObjectInfo = {\n  index: number;\n  object?: Feature | undefined;\n  picked: boolean;\n  layer: Layer;\n  radius?: number;\n  id?: string;\n};\n\nexport const featureAccessor = ({geojson}: GeoJsonLayerColumnsConfig) => (\n  dc: DataContainerInterface\n) => d => dc.valueAt(d.index, geojson.fieldIdx);\n\nconst geoColumnAccessor = ({geojson}: GeoJsonLayerColumnsConfig) => (\n  dc: DataContainerInterface\n): arrow.Vector | null => dc.getColumn?.(geojson.fieldIdx) as arrow.Vector;\n\nconst geoFieldAccessor = ({geojson}: GeoJsonLayerColumnsConfig) => (\n  dc: DataContainerInterface\n): Field | null => (dc.getField ? dc.getField(geojson.fieldIdx) : null);\n\n// access feature properties from geojson sub layer\nexport const defaultElevation = 500;\nexport const defaultLineWidth = 1;\nexport const defaultRadius = 1;\n\nexport default class GeoJsonLayer extends Layer {\n  declare config: GeoJsonLayerConfig;\n  declare visConfigSettings: GeoJsonVisConfigSettings;\n  declare meta: GeoJsonLayerMeta;\n\n  dataToFeature: GeojsonDataMaps = [];\n  dataContainer: DataContainerInterface | null = null;\n  filteredIndex: Uint8ClampedArray | null = null;\n  filteredIndexTrigger: number[] | null = null;\n  centroids: Array<number[] | null> = [];\n\n  constructor(props) {\n    super(props);\n\n    this.registerVisConfig(geojsonVisConfigs);\n    this.getPositionAccessor = (dataContainer: DataContainerInterface) =>\n      featureAccessor(this.config.columns)(dataContainer);\n  }\n\n  get type() {\n    return GeoJsonLayer.type;\n  }\n  static get type(): 'geojson' {\n    return 'geojson';\n  }\n\n  get name(): 'Polygon' {\n    return 'Polygon';\n  }\n\n  get layerIcon() {\n    return GeojsonLayerIcon;\n  }\n\n  get requiredLayerColumns() {\n    return geoJsonRequiredColumns;\n  }\n\n  get visualChannels() {\n    const visualChannels = super.visualChannels;\n    return {\n      color: {\n        ...visualChannels.color,\n        accessor: 'getFillColor',\n        condition: config => config.visConfig.filled,\n        nullValue: visualChannels.color.nullValue,\n        getAttributeValue: config => d => d.properties.fillColor || config.color,\n        // used this to get updateTriggers\n        defaultValue: config => config.color\n      },\n      strokeColor: {\n        property: 'strokeColor',\n        field: 'strokeColorField',\n        scale: 'strokeColorScale',\n        domain: 'strokeColorDomain',\n        range: 'strokeColorRange',\n        key: 'strokeColor',\n        channelScaleType: CHANNEL_SCALES.color,\n        accessor: 'getLineColor',\n        condition: config => config.visConfig.stroked,\n        nullValue: visualChannels.color.nullValue,\n        getAttributeValue: config => d =>\n          d.properties.lineColor || config.visConfig.strokeColor || config.color,\n        // used this to get updateTriggers\n        defaultValue: config => config.visConfig.strokeColor || config.color\n      },\n      size: {\n        ...visualChannels.size,\n        property: 'stroke',\n        accessor: 'getLineWidth',\n        condition: config => config.visConfig.stroked,\n        nullValue: 0,\n        getAttributeValue: () => d => d.properties.lineWidth || defaultLineWidth\n      },\n      height: {\n        property: 'height',\n        field: 'heightField',\n        scale: 'heightScale',\n        domain: 'heightDomain',\n        range: 'heightRange',\n        key: 'height',\n        fixed: 'fixedHeight',\n        channelScaleType: CHANNEL_SCALES.size,\n        accessor: 'getElevation',\n        condition: config => config.visConfig.enable3d,\n        nullValue: 0,\n        getAttributeValue: () => d => d.properties.elevation || defaultElevation\n      },\n      radius: {\n        property: 'radius',\n        field: 'radiusField',\n        scale: 'radiusScale',\n        domain: 'radiusDomain',\n        range: 'radiusRange',\n        key: 'radius',\n        channelScaleType: CHANNEL_SCALES.radius,\n        accessor: 'getPointRadius',\n        nullValue: 0,\n        getAttributeValue: () => d => d.properties.radius || defaultRadius\n      }\n    };\n  }\n\n  static findDefaultLayerProps({label, fields = []}: KeplerTable) {\n    const geojsonColumns = fields\n      .filter(\n        f =>\n          (f.type === 'geojson' || f.type === 'geoarrow') &&\n          SUPPORTED_ANALYZER_TYPES[f.analyzerType]\n      )\n      .map(f => f.name);\n\n    const defaultColumns = {\n      geojson: uniq([...GEOJSON_FIELDS.geojson, ...geojsonColumns])\n    };\n\n    const foundColumns = this.findDefaultColumnField(defaultColumns, fields);\n    if (!foundColumns || !foundColumns.length) {\n      return {props: []};\n    }\n\n    return {\n      props: foundColumns.map(columns => ({\n        label: (typeof label === 'string' && label.replace(/\\.[^/.]+$/, '')) || this.type,\n        columns,\n        isVisible: true\n      }))\n    };\n  }\n\n  getDefaultLayerConfig(props: LayerBaseConfigPartial) {\n    return {\n      ...super.getDefaultLayerConfig(props),\n\n      // add height visual channel\n      heightField: null,\n      heightDomain: [0, 1],\n      heightScale: 'linear',\n\n      // add radius visual channel\n      radiusField: null,\n      radiusDomain: [0, 1],\n      radiusScale: 'linear',\n\n      // add stroke color visual channel\n      strokeColorField: null,\n      strokeColorDomain: [0, 1],\n      strokeColorScale: 'quantile'\n    };\n  }\n\n  getHoverData(object, dataContainer) {\n    // index of dataContainer is saved to feature.properties\n    // for arrow format, `object` is the index of the row returned from deck\n    const index = dataContainer instanceof ArrowDataContainer ? object : object?.properties?.index;\n    if (index >= 0) {\n      return dataContainer.row(index);\n    }\n    return null;\n  }\n\n  calculateDataAttribute({dataContainer, filteredIndex}, getPosition) {\n    if (dataContainer instanceof ArrowDataContainer) {\n      // filter geojson/arrow table by values and make a partial copy of the raw table are expensive\n      // so we will use filteredIndex to create an attribute e.g. filteredIndex [0|1] for GPU filtering\n      // in deck.gl layer, see: FilterArrowExtension in @kepler.gl/deckgl-layers\n      if (!this.filteredIndex || this.filteredIndex.length !== dataContainer.numRows()) {\n        // for incremental data loading, we need to update filteredIndex\n        this.filteredIndex = new Uint8ClampedArray(dataContainer.numRows());\n        this.filteredIndex.fill(1);\n      }\n\n      // check if filteredIndex is a range from 0 to numRows if it is, we don't need to update it\n      const isRange = filteredIndex && filteredIndex.length === dataContainer.numRows();\n      if (!isRange || this.filteredIndexTrigger !== null) {\n        this.filteredIndex.fill(0);\n        for (let i = 0; i < filteredIndex.length; ++i) {\n          this.filteredIndex[filteredIndex[i]] = 1;\n        }\n        this.filteredIndexTrigger = filteredIndex;\n      }\n      // for arrow, always return full dataToFeature instead of a filtered one, so there is no need to update attributes in GPU\n      return this.dataToFeature;\n    }\n\n    // for geojson, this should work as well and more efficient. But we need to update some test cases e.g. #GeojsonLayer -> formatLayerData\n    return filteredIndex.map(i => this.dataToFeature[i]).filter(d => d);\n  }\n\n  formatLayerData(datasets, oldLayerData) {\n    if (this.config.dataId === null) {\n      return {};\n    }\n    const {gpuFilter, dataContainer} = datasets[this.config.dataId];\n    const {data} = this.updateData(datasets, oldLayerData);\n\n    const customFilterValueAccessor = (dc, d, fieldIndex) => {\n      return dc.valueAt(d.properties.index, fieldIndex);\n    };\n    const indexAccessor = f => f.properties.index;\n\n    const dataAccessor = dc => d => ({index: d.properties.index});\n    const accessors = this.getAttributeAccessors({dataAccessor, dataContainer});\n\n    const isFilteredAccessor = d => {\n      return this.filteredIndex ? this.filteredIndex[d.properties.index] : 1;\n    };\n\n    return {\n      data,\n      getFilterValue: gpuFilter.filterValueAccessor(dataContainer)(\n        indexAccessor,\n        customFilterValueAccessor\n      ),\n      getFiltered: isFilteredAccessor,\n      ...accessors\n    };\n  }\n\n  isInPolygon(data: DataContainerInterface, index: number, polygon: Feature<Polygon>): Boolean {\n    if (this.centroids.length === 0 || !this.centroids[index]) {\n      return false;\n    }\n    const isReactangleSearchBox = polygon.properties?.shape === 'Rectangle';\n    const point = this.centroids[index];\n    // if no valid centroid, return false\n    if (!point) return false;\n    // quick check if centroid is within the query rectangle\n    if (isReactangleSearchBox && polygon.properties?.bbox) {\n      const [minX, minY, maxX, maxY] = polygon.properties?.bbox;\n      return point[0] >= minX && point[0] <= maxX && point[1] >= minY && point[1] <= maxY;\n    }\n    // use turf.js to check if centroid is within query polygon\n    return booleanWithin(turfPoint(point), polygon);\n  }\n\n  updateLayerMeta(dataContainer) {\n    this.dataContainer = dataContainer;\n\n    const getFeature = this.getPositionAccessor(dataContainer);\n    const getGeoColumn = geoColumnAccessor(this.config.columns);\n    const getGeoField = geoFieldAccessor(this.config.columns);\n\n    if (dataContainer instanceof ArrowDataContainer) {\n      // update the latest batch/chunk of geoarrow data when loading data incrementally\n      if (this.dataToFeature.length < dataContainer.numChunks()) {\n        // for incrementally loading data, we only load and render the latest batch; otherwise, we will load and render all batches\n        const isIncrementalLoad = dataContainer.numChunks() - this.dataToFeature.length === 1;\n        const {dataToFeature, bounds, fixedRadius, featureTypes, centroids} = getGeojsonLayerMetaFromArrow({\n          dataContainer,\n          getGeoColumn,\n          getGeoField,\n          ...(isIncrementalLoad ? {chunkIndex: this.dataToFeature.length} : null)\n        });\n        if (centroids) this.centroids = this.centroids.concat(centroids);\n        this.updateMeta({bounds, fixedRadius, featureTypes});\n        this.dataToFeature = [...this.dataToFeature, ...dataToFeature];\n      }\n    } else {\n      if (this.dataToFeature.length === 0) {\n        const {dataToFeature, bounds, fixedRadius, featureTypes, centroids} = getGeojsonLayerMeta({\n          dataContainer,\n          getFeature\n        });\n        if (centroids) this.centroids = centroids;\n        this.dataToFeature = dataToFeature;\n        this.updateMeta({bounds, fixedRadius, featureTypes});\n      }\n    }\n  }\n\n  setInitialLayerConfig({dataContainer}) {\n    if (!dataContainer.numRows()) {\n      return this;\n    }\n    this.updateLayerMeta(dataContainer);\n\n    const {featureTypes} = this.meta;\n    // default settings is stroke: true, filled: false\n    if (featureTypes && featureTypes.polygon) {\n      // set both fill and stroke to true\n      return this.updateLayerVisConfig({\n        filled: true,\n        stroked: true,\n        strokeColor: colorMaker.next().value\n      });\n    } else if (featureTypes && featureTypes.point) {\n      // set fill to true if detect point\n      return this.updateLayerVisConfig({filled: true, stroked: false});\n    }\n\n    return this;\n  }\n\n  isLayerHovered(objectInfo: ObjectInfo): boolean {\n    return this.dataContainer instanceof ArrowDataContainer\n      ? isLayerHoveredFromArrow(objectInfo, this.id)\n      : super.isLayerHovered(objectInfo);\n  }\n\n  hasHoveredObject(objectInfo: ObjectInfo): Feature | null {\n    return this.dataContainer instanceof ArrowDataContainer\n      ? getHoveredObjectFromArrow(\n          objectInfo,\n          this.dataContainer,\n          this.id,\n          geoColumnAccessor(this.config.columns),\n          geoFieldAccessor(this.config.columns)\n        )\n      : super.hasHoveredObject(objectInfo);\n  }\n\n  getElevationZoomFactor({zoom, zoomOffset = 0}) {\n    return this.config.visConfig.fixedHeight ? 1 : Math.pow(2, Math.max(8 - zoom + zoomOffset, 0));\n  }\n\n  renderLayer(opts) {\n    const {data: dataProps, gpuFilter, objectHovered, mapState, interactionConfig} = opts;\n\n    const {fixedRadius, featureTypes} = this.meta;\n    const radiusScale = this.getRadiusScaleByZoom(mapState, fixedRadius);\n    const zoomFactor = this.getZoomFactor(mapState);\n    const eleZoomFactor = this.getElevationZoomFactor(mapState);\n\n    const {visConfig} = this.config;\n\n    const layerProps = {\n      lineWidthScale: visConfig.thickness * zoomFactor * 8,\n      elevationScale: visConfig.elevationScale * eleZoomFactor,\n      pointRadiusScale: radiusScale,\n      lineMiterLimit: 4\n    };\n\n    const updateTriggers = {\n      ...this.getVisualChannelUpdateTriggers(),\n      getFilterValue: gpuFilter.filterValueUpdateTriggers,\n      getFiltered: this.filteredIndexTrigger\n    };\n\n    const defaultLayerProps = this.getDefaultDeckLayerProps(opts);\n    const opaOverwrite = {\n      opacity: visConfig.strokeOpacity\n    };\n\n    const pickable = interactionConfig.tooltip.enabled;\n    const hoveredObject = this.hasHoveredObject(objectHovered);\n\n    const {data, ...props} = dataProps;\n\n    // arrow table can have multiple chunks, a deck.gl layer is created for each chunk\n    const deckLayerData = this.dataContainer instanceof ArrowDataContainer ? data : [data];\n    const deckLayers = deckLayerData.map((d, i) => {\n      return new DeckGLGeoJsonLayer({\n        ...defaultLayerProps,\n        ...layerProps,\n        ...props,\n        data: d,\n        id: deckLayerData.length > 1 ? `${this.id}-${i}` : this.id,\n        pickable,\n        highlightColor: HIGHLIGH_COLOR_3D,\n        autoHighlight: visConfig.enable3d && pickable,\n        stroked: visConfig.stroked,\n        filled: visConfig.filled,\n        extruded: visConfig.enable3d,\n        wireframe: visConfig.wireframe,\n        wrapLongitude: false,\n        lineMiterLimit: 2,\n        capRounded: true,\n        jointRounded: true,\n        updateTriggers,\n        extensions: [...defaultLayerProps.extensions, new FilterArrowExtension()],\n        _subLayerProps: {\n          ...(featureTypes?.polygon ? {'polygons-stroke': opaOverwrite} : {}),\n          ...(featureTypes?.line ? {linestrings: opaOverwrite} : {}),\n          ...(featureTypes?.point\n            ? {\n                points: {\n                  lineOpacity: visConfig.strokeOpacity\n                }\n              }\n            : {})\n        }\n      });\n    });\n\n    return [\n      ...deckLayers,\n      // hover layer\n      ...(hoveredObject && !visConfig.enable3d\n        ? [\n            new DeckGLGeoJsonLayer({\n              ...this.getDefaultHoverLayerProps(),\n              ...layerProps,\n              visible: defaultLayerProps.visible,\n              wrapLongitude: false,\n              data: [hoveredObject],\n              getLineWidth: props.getLineWidth,\n              getPointRadius: props.getPointRadius,\n              getElevation: props.getElevation,\n              getLineColor: this.config.highlightColor,\n              getFillColor: this.config.highlightColor,\n              // always draw outline\n              stroked: true,\n              filled: false\n            })\n          ]\n        : [])\n    ];\n  }\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {Base} from '../base';\n\nclass ClusterLayerIcon extends Component {\n  static propTypes = {\n    /** Set the height of the icon, ex. '16px' */\n    height: PropTypes.string,\n    colors: PropTypes.arrayOf(PropTypes.string)\n  };\n\n  static defaultProps = {\n    height: '16px',\n    predefinedClassName: 'cluster-layer-icon',\n    totalColor: 5\n  };\n\n  render() {\n    return (\n      <Base {...this.props}>\n        <path\n          d=\"M13.6,22.7c2.9-3.6,4.4-6.3,4.4-8c0-2.7-2.2-4.9-4.9-4.9S8.2,12,8.2,14.7c0,1.7,1.5,4.4,4.4,8l0,0\n\tC12.8,23,13.2,23,13.6,22.7C13.5,22.8,13.6,22.7,13.6,22.7z\"\n          className=\"cr1\"\n        />\n        <path\n          d=\"M22.9,57.4c2.5-3.1,3.8-5.5,3.8-7c0-2.4-2-4.4-4.4-4.4S18,48,18,50.4c0,1.5,1.3,3.8,3.8,7l0,0\n\tc0.3,0.3,0.7,0.4,1,0.1C22.9,57.4,22.9,57.4,22.9,57.4z\"\n          className=\"cr2\"\n        />\n        <path\n          d=\"M51.4,22.5c2.8-3.4,4.2-6,4.2-7.6c0-2.6-2.1-4.8-4.8-4.8c-2.6,0-4.8,2.1-4.8,4.8c0,1.6,1.4,4.2,4.2,7.6\n\tl0,0c0.3,0.3,0.8,0.4,1.1,0.1C51.3,22.5,51.4,22.5,51.4,22.5z\"\n          className=\"cr3\"\n        />\n        <path\n          d=\"M49.2,53.8c3.7-4.5,5.5-7.8,5.5-9.9c0-3.3-2.7-6.1-6.1-6.1c-3.3,0-6.1,2.7-6.1,6.1\n\tc0,2.1,1.8,5.4,5.5,9.9l0,0c0.3,0.3,0.7,0.4,1.1,0.1C49.1,53.8,49.1,53.8,49.2,53.8z\"\n          className=\"cr4\"\n        />\n        <path\n          d=\"M31.4,39.6C36.5,33.5,39,29,39,26.1c0-4.4-3.6-8-8-8s-8,3.6-8,8c0,2.9,2.5,7.4,7.6,13.5l0,0\n\tC30.8,39.8,31.1,39.9,31.4,39.6C31.3,39.7,31.4,39.6,31.4,39.6z\"\n          className=\"cr5\"\n        />\n      </Base>\n    );\n  }\n}\n\nexport default ClusterLayerIcon;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport AggregationLayer, {AggregationLayerConfig} from '../aggregation-layer';\nimport {ScatterplotLayer} from '@deck.gl/layers';\n\nimport {DeckGLClusterLayer} from '@kepler.gl/deckgl-layers';\nimport ClusterLayerIcon from './cluster-layer-icon';\nimport {\n  VisConfigColorRange,\n  VisConfigNumber,\n  VisConfigRange,\n  VisConfigSelection,\n  Merge\n} from '@kepler.gl/types';\nimport {CHANNEL_SCALES, AggregationTypes, ColorRange} from '@kepler.gl/constants';\nimport {VisualChannels} from '../base-layer';\n\nexport type ClusterLayerVisConfigSettings = {\n  opacity: VisConfigNumber;\n  clusterRadius: VisConfigNumber;\n  colorRange: VisConfigColorRange;\n  radiusRange: VisConfigRange;\n  colorAggregation: VisConfigSelection;\n};\n\nexport type ClusterLayerVisConfig = {\n  opacity: number;\n  clusterRadius: number;\n  colorRange: ColorRange;\n  radiusRange: [number, number];\n  colorAggregation: AggregationTypes;\n};\n\nexport type ClusterLayerConfig = Merge<AggregationLayerConfig, {visConfig: ClusterLayerVisConfig}>;\n\nexport const clusterVisConfigs: {\n  opacity: 'opacity';\n  clusterRadius: 'clusterRadius';\n  colorRange: 'colorRange';\n  radiusRange: 'clusterRadiusRange';\n  colorAggregation: 'colorAggregation';\n} = {\n  opacity: 'opacity',\n  clusterRadius: 'clusterRadius',\n  colorRange: 'colorRange',\n  radiusRange: 'clusterRadiusRange',\n  colorAggregation: 'colorAggregation'\n};\n\nexport default class ClusterLayer extends AggregationLayer {\n  declare visConfigSettings: ClusterLayerVisConfigSettings;\n  declare config: ClusterLayerConfig;\n\n  constructor(props) {\n    super(props);\n    this.registerVisConfig(clusterVisConfigs);\n\n    // Access data of a point from aggregated clusters, depends on how getClusterer works\n    this.getPointData = pt => pt;\n  }\n\n  get type(): 'cluster' {\n    return 'cluster';\n  }\n\n  get layerIcon() {\n    return ClusterLayerIcon;\n  }\n\n  get visualChannels(): VisualChannels {\n    return {\n      color: {\n        aggregation: 'colorAggregation',\n        channelScaleType: CHANNEL_SCALES.colorAggr,\n        defaultMeasure: 'property.pointCount',\n        domain: 'colorDomain',\n        field: 'colorField',\n        key: 'color',\n        property: 'color',\n        range: 'colorRange',\n        scale: 'colorScale'\n      }\n    };\n  }\n\n  renderLayer(opts) {\n    const {visConfig} = this.config;\n    const {data, gpuFilter, objectHovered, mapState, layerCallbacks} = opts;\n\n    const updateTriggers = {\n      getColorValue: {\n        colorField: this.config.colorField,\n        colorAggregation: this.config.visConfig.colorAggregation\n      },\n      filterData: {\n        filterRange: gpuFilter.filterRange,\n        ...gpuFilter.filterValueUpdateTriggers\n      }\n    };\n\n    const defaultLayerProps = this.getDefaultDeckLayerProps(opts);\n\n    const {_filterData: filterData, ...clusterData} = data;\n    const hoveredObject = this.hasHoveredObject(objectHovered);\n\n    return [\n      new DeckGLClusterLayer({\n        ...defaultLayerProps,\n        ...clusterData,\n        filterData,\n\n        // radius\n        radiusScale: 1,\n        radiusRange: visConfig.radiusRange,\n        clusterRadius: visConfig.clusterRadius,\n\n        // color\n        colorRange: this.getColorRange(visConfig.colorRange),\n        colorScaleType: this.config.colorScale,\n        colorAggregation: visConfig.colorAggregation,\n\n        zoom: Math.round(mapState.zoom),\n        width: mapState.width,\n        height: mapState.height,\n\n        // updateTriggers\n        updateTriggers,\n\n        // call back from layer after calculate clusters\n        onSetColorDomain: layerCallbacks.onSetLayerDomain\n      }),\n      // hover layer\n      ...(hoveredObject\n        ? [\n            new ScatterplotLayer<{radius: number}>({\n              id: `${this.id}-hovered`,\n              visible: defaultLayerProps.visible,\n              data: [hoveredObject],\n              getFillColor: this.config.highlightColor,\n              getRadius: d => d.radius,\n              radiusScale: 1,\n              pickable: false\n            })\n          ]\n        : [])\n    ];\n  }\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {Base} from '../base';\n\nexport default class IconLayerIcon extends Component {\n  static propTypes = {\n    /** Set the height of the icon, ex. '16px' */\n    height: PropTypes.string,\n    colors: PropTypes.arrayOf(PropTypes.string)\n  };\n\n  static defaultProps = {\n    height: '16px',\n    predefinedClassName: 'icon-layer-icon',\n    totalColor: 3\n  };\n\n  render() {\n    return (\n      <Base {...this.props}>\n        <path\n          className=\"cr1\"\n          d=\"M42.27,33.59l-4.34,4.34-4.34-4.34a13.25,13.25,0,0,1-8.9-12.52h0A13.24,13.24,0,0,1,37.93,7.83h0A13.24,13.24,0,0,1,51.17,21.07h0A13.25,13.25,0,0,1,42.27,33.59ZM37.93,28.3a7.22,7.22,0,1,0-7.22-7.22A7.22,7.22,0,0,0,37.93,28.3Z\"\n        />\n        <path\n          className=\"cr2\"\n          d=\"M18.68,48.79l-2.44,2.44L13.8,48.79a7.44,7.44,0,0,1-5-7h0a7.44,7.44,0,0,1,7.44-7.44h0a7.44,7.44,0,0,1,7.44,7.44h0A7.44,7.44,0,0,1,18.68,48.79Zm-2.44-3a4.06,4.06,0,1,0-4.06-4.06A4.06,4.06,0,0,0,16.24,45.81Z\"\n        />\n        <path\n          className=\"cr3\"\n          d=\"M48.85,55.52l-2.2,2.2-2.2-2.2a6.73,6.73,0,0,1-4.52-6.36h0a6.72,6.72,0,0,1,6.72-6.72h0a6.72,6.72,0,0,1,6.72,6.72h0A6.73,6.73,0,0,1,48.85,55.52Zm-2.2-2.69A3.67,3.67,0,1,0,43,49.17,3.67,3.67,0,0,0,46.65,52.83Z\"\n        />\n      </Base>\n    );\n  }\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {Component} from 'react';\nimport {Base, BaseProps} from './base';\n\nexport default class Table extends Component<Partial<BaseProps>> {\n  static defaultProps = {\n    height: '16px',\n    predefinedClassName: 'data-ex-icons-table'\n  };\n\n  render() {\n    return (\n      <Base {...this.props}>\n        <path\n          d=\"M56.0384598,50.5v-8.3076935H8.9615383V50.5H56.0384598z M8.9615383,22.8076916h13.8461533V14.5H8.9615383\n\tV22.8076916z M25.5769234,22.8076916h13.8461533V14.5H25.5769234V22.8076916z M42.1923065,22.8076916h13.8461533V14.5H42.1923065\n\tV22.8076916z M8.9615383,36.6538467h47.0769196v-8.3076935H8.9615383V36.6538467z\"\n        />\n      </Base>\n    );\n  }\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport {line} from 'd3-shape';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport Table from '../table';\n\nconst CenterFlexbox = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst lineFunction = line()\n  .x(d => d[0] * 10)\n  .y(d => d[1] * 10);\n\nconst IconShape = ({mesh, className}) => (\n  <svg width=\"20px\" height=\"20px\">\n    <g transform=\"translate(10, 10)\">\n      {mesh.cells.map((cell, i) => (\n        <path key={i} fill=\"#000000\" d={lineFunction(cell.map(idx => mesh.positions[idx]))} />\n      ))}\n    </g>\n  </svg>\n);\n\nconst StyledIconItem = styled(CenterFlexbox)`\n  padding-left: 6px;\n  width: 180px;\n  height: 48px;\n  margin-right: 12px;\n\n  .icon-table_item__name {\n    margin-left: 12px;\n  }\n`;\n\nconst StyledCode = styled.code`\n  color: ${props => props.theme.titleColorLT};\n`;\n\nconst StyledTitle = styled.div`\n  font-size: 20px;\n  letter-spacing: 1.25px;\n  margin: 18px 0 14px 0;\n  color: ${props => props.theme.titleColorLT};\n`;\n\nconst IconItem = ({icon: {id, mesh}}) => (\n  <StyledIconItem className=\"icon-table__item\">\n    <IconShape className=\"icon-table__item__shape\" mesh={mesh} />\n    <div className=\"icon-table_item__name\">\n      <StyledCode>{id}</StyledCode>\n    </div>\n  </StyledIconItem>\n);\n\nconst ExampleTable = () => (\n  <Table className=\"icon-example-table\">\n    <thead>\n      <tr>\n        <th>point_lat</th>\n        <th>point_lng</th>\n        <th>icon</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>37.769897</td>\n        <td>-122.41168</td>\n        <td>\n          <StyledCode>android</StyledCode>\n        </td>\n      </tr>\n      <tr>\n        <td>37.806928</td>\n        <td>-122.40218</td>\n        <td />\n      </tr>\n      <tr>\n        <td>37.778564</td>\n        <td>-122.39096</td>\n        <td>\n          <StyledCode>calendar</StyledCode>\n        </td>\n      </tr>\n      <tr>\n        <td>37.745995</td>\n        <td>-122.30220</td>\n        <td />\n      </tr>\n      <tr>\n        <td>37.329841</td>\n        <td>-122.103847</td>\n        <td>\n          <StyledCode>control-off</StyledCode>\n        </td>\n      </tr>\n    </tbody>\n  </Table>\n);\n\nconst IconTable = styled.div`\n  display: flex;\n  align-items: flex-start;\n  flex-wrap: wrap;\n`;\n\nconst IconInfoModalFactory = (svgIcons: any[] = []) => {\n  const IconInfoModal = () => (\n    <div className=\"icon-info-modal\">\n      <div className=\"icon-info-modal__description\">\n        <FormattedMessage id={'modal.iconInfo.description1'} />{' '}\n        <code>\n          <FormattedMessage id={'modal.iconInfo.code'} />\n        </code>\n        <FormattedMessage id={'modal.iconInfo.description2'} />\n      </div>\n      <div className=\"icon-info-modal__example\">\n        <StyledTitle>\n          <FormattedMessage id={'modal.iconInfo.example'} />\n        </StyledTitle>\n        <ExampleTable />\n      </div>\n      <div className=\"icon-info-modal__icons\">\n        <StyledTitle>\n          <FormattedMessage id={'modal.iconInfo.icons'} />\n        </StyledTitle>\n        <IconTable className=\"icon-info-modal__icons__table\">\n          {svgIcons.map(icon => (\n            <IconItem key={icon.id} icon={icon} />\n          ))}\n        </IconTable>\n      </div>\n    </div>\n  );\n\n  return IconInfoModal;\n};\n\nexport default IconInfoModalFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport window from 'global/window';\nimport {BrushingExtension} from '@deck.gl/extensions';\nimport GL from '@luma.gl/constants';\n\nimport {SvgIconLayer} from '@kepler.gl/deckgl-layers';\nimport IconLayerIcon from './icon-layer-icon';\nimport {ICON_FIELDS, KEPLER_UNFOLDED_BUCKET, ColorRange} from '@kepler.gl/constants';\nimport IconInfoModalFactory from './icon-info-modal';\nimport Layer, {LayerBaseConfig, LayerBaseConfigPartial, LayerColumn} from '../base-layer';\nimport {assignPointPairToLayerColumn} from '../layer-utils';\nimport {isTest} from '@kepler.gl/utils';\nimport {getTextOffsetByRadius, formatTextLabelData} from '../layer-text-label';\nimport {default as KeplerTable} from '@kepler.gl/table';\nimport {DataContainerInterface} from '@kepler.gl/utils';\nimport {\n  VisConfigBoolean,\n  VisConfigColorRange,\n  VisConfigNumber,\n  VisConfigRange,\n  Merge\n} from '@kepler.gl/types';\n\nexport type IconLayerColumnsConfig = {\n  lat: LayerColumn;\n  lng: LayerColumn;\n  altitude: LayerColumn;\n  icon: LayerColumn;\n};\n\ntype IconGeometry = {} | null;\n\nexport type IconLayerVisConfigSettings = {\n  radius: VisConfigNumber;\n  fixedRadius: VisConfigBoolean;\n  opacity: VisConfigNumber;\n  colorRange: VisConfigColorRange;\n  radiusRange: VisConfigRange;\n};\n\nexport type IconLayerVisConfig = {\n  radius: number;\n  fixedRadius: boolean;\n  opacity: number;\n  colorRange: ColorRange;\n  radiusRange: [number, number];\n};\n\nexport type IconLayerConfig = Merge<\n  LayerBaseConfig,\n  {columns: IconLayerColumnsConfig; visConfig: IconLayerVisConfig}\n>;\n\nexport type IconLayerData = {index: number; icon: string};\n\nconst brushingExtension = new BrushingExtension();\n\nexport const SVG_ICON_URL = `${KEPLER_UNFOLDED_BUCKET}/icons/svg-icons.json`;\n\nexport const iconPosAccessor = ({lat, lng, altitude}: IconLayerColumnsConfig) => (\n  dc: DataContainerInterface\n) => d => [\n  dc.valueAt(d.index, lng.fieldIdx),\n  dc.valueAt(d.index, lat.fieldIdx),\n  altitude?.fieldIdx > -1 ? dc.valueAt(d.index, altitude.fieldIdx) : 0\n];\n\nexport const iconAccessor = ({icon}: IconLayerColumnsConfig) => (dc: DataContainerInterface) => d =>\n  dc.valueAt(d.index, icon.fieldIdx);\n\nexport const iconRequiredColumns: ['lat', 'lng', 'icon'] = ['lat', 'lng', 'icon'];\nexport const iconOptionalColumns: ['altitude'] = ['altitude'];\n\nexport const pointVisConfigs: {\n  radius: 'radius';\n  fixedRadius: 'fixedRadius';\n  opacity: 'opacity';\n  colorRange: 'colorRange';\n  radiusRange: 'radiusRange';\n} = {\n  radius: 'radius',\n  fixedRadius: 'fixedRadius',\n  opacity: 'opacity',\n  colorRange: 'colorRange',\n  radiusRange: 'radiusRange'\n};\n\nfunction flatterIconPositions(icon) {\n  // had to flip y, since @luma modal has changed\n  return icon.mesh.cells.reduce((prev, cell) => {\n    cell.forEach(p => {\n      prev.push(\n        ...[icon.mesh.positions[p][0], -icon.mesh.positions[p][1], icon.mesh.positions[p][2]]\n      );\n    });\n    return prev;\n  }, []);\n}\n\nexport default class IconLayer extends Layer {\n  getIconAccessor: (dataContainer: DataContainerInterface) => (d: any) => any;\n  _layerInfoModal: () => JSX.Element;\n  iconGeometry: IconGeometry;\n\n  declare visConfigSettings: IconLayerVisConfigSettings;\n  declare config: IconLayerConfig;\n\n  constructor(\n    props: {\n      id?: string;\n      iconGeometry?: IconGeometry;\n      svgIcons?: any[];\n    } & LayerBaseConfigPartial\n  ) {\n    super(props);\n\n    this.registerVisConfig(pointVisConfigs);\n    this.getPositionAccessor = (dataContainer: DataContainerInterface) =>\n      iconPosAccessor(this.config.columns)(dataContainer);\n    this.getIconAccessor = dataContainer => iconAccessor(this.config.columns)(dataContainer);\n\n    this._layerInfoModal = IconInfoModalFactory(props.svgIcons);\n    this.iconGeometry = props.iconGeometry || null;\n\n    if (isTest()) {\n      return;\n    }\n    if (props.svgIcons) {\n      // if svg icons are passed in then bypass fetching of remote svg icons\n      this.setSvgIcons(props.svgIcons);\n    } else {\n      // prepare layer info modal and fetch remote svg icons\n      this.getSvgIcons();\n    }\n  }\n\n  get svgIconUrl() {\n    return SVG_ICON_URL;\n  }\n\n  get type(): 'icon' {\n    return 'icon';\n  }\n\n  get requiredLayerColumns() {\n    return iconRequiredColumns;\n  }\n\n  get optionalColumns() {\n    return iconOptionalColumns;\n  }\n\n  get columnPairs() {\n    return this.defaultPointColumnPairs;\n  }\n\n  get layerIcon() {\n    return IconLayerIcon;\n  }\n\n  get visualChannels() {\n    return {\n      color: {\n        ...super.visualChannels.color,\n        accessor: 'getFillColor',\n        defaultValue: config => config.color\n      },\n      size: {\n        ...super.visualChannels.size,\n        property: 'radius',\n        range: 'radiusRange',\n        channelScaleType: 'radius',\n        accessor: 'getRadius',\n        defaultValue: 1\n      }\n    };\n  }\n\n  get layerInfoModal() {\n    return {\n      id: 'iconInfo',\n      template: this._layerInfoModal,\n      modalProps: {\n        title: 'modal.iconInfo.title'\n      }\n    };\n  }\n\n  getSvgIcons() {\n    const fetchConfig = {\n      method: 'GET',\n      mode: 'cors',\n      cache: 'no-cache'\n    };\n\n    if (window.fetch && this.svgIconUrl) {\n      window\n        .fetch(this.svgIconUrl, fetchConfig)\n        .then(response => response.json())\n        .then((parsed: {svgIcons?: any[]} = {}) => {\n          this.setSvgIcons(parsed.svgIcons);\n        });\n    }\n  }\n\n  setSvgIcons(svgIcons: any[] = []) {\n    this.iconGeometry = svgIcons.reduce(\n      (accu, curr) => ({\n        ...accu,\n        [curr.id]: flatterIconPositions(curr)\n      }),\n      {}\n    );\n\n    this._layerInfoModal = IconInfoModalFactory(svgIcons);\n  }\n\n  static findDefaultLayerProps({fieldPairs = [], fields = []}: KeplerTable) {\n    const notFound = {props: []};\n    if (!fieldPairs.length || !fields.length) {\n      return notFound;\n    }\n\n    const iconFields = fields.filter(({name}) =>\n      name\n        .replace(/[_,.]+/g, ' ')\n        .trim()\n        .split(' ')\n        .some(seg => ICON_FIELDS.icon.some(t => t.includes(seg)))\n    );\n\n    if (!iconFields.length) {\n      return notFound;\n    }\n\n    // create icon layers for first point pair\n    const ptPair = fieldPairs[0];\n    const columns = assignPointPairToLayerColumn(ptPair, true);\n\n    const props = iconFields.map(iconField => ({\n      label: iconField.name.replace(/[_,.]+/g, ' ').trim(),\n      columns: {\n        ...columns,\n        icon: {\n          value: iconField.name,\n          fieldIdx: iconField.fieldIdx\n        }\n      },\n      isVisible: true\n    }));\n\n    return {props};\n  }\n\n  calculateDataAttribute({dataContainer, filteredIndex}: KeplerTable, getPosition) {\n    const getIcon = this.getIconAccessor(dataContainer);\n    const data: IconLayerData[] = [];\n\n    for (let i = 0; i < filteredIndex.length; i++) {\n      const index = filteredIndex[i];\n      const rowIndex = {index};\n      const pos = getPosition(rowIndex);\n      const icon = getIcon(rowIndex);\n\n      // if doesn't have point lat or lng, do not add the point\n      // deck.gl can't handle position = null\n      if (pos.every(Number.isFinite) && typeof icon === 'string') {\n        data.push({\n          index,\n          icon\n        });\n      }\n    }\n\n    return data;\n  }\n\n  formatLayerData(datasets, oldLayerData) {\n    if (this.config.dataId === null) {\n      return {};\n    }\n    const {textLabel} = this.config;\n    const {gpuFilter, dataContainer} = datasets[this.config.dataId];\n\n    const getPosition = this.getPositionAccessor(dataContainer);\n\n    const {data, triggerChanged} = this.updateData(datasets, oldLayerData);\n\n    // get all distinct characters in the text labels\n    const textLabels = formatTextLabelData({\n      textLabel,\n      triggerChanged,\n      oldLayerData,\n      data,\n      dataContainer\n    });\n\n    const accessors = this.getAttributeAccessors({dataContainer});\n\n    return {\n      data,\n      getPosition,\n      getFilterValue: gpuFilter.filterValueAccessor(dataContainer)(),\n      textLabels,\n      ...accessors\n    };\n  }\n\n  updateLayerMeta(dataContainer, getPosition) {\n    const bounds = this.getPointsBounds(dataContainer, getPosition);\n    this.updateMeta({bounds});\n  }\n\n  renderLayer(opts) {\n    const {data, gpuFilter, objectHovered, mapState, interactionConfig} = opts;\n\n    const radiusScale = this.getRadiusScaleByZoom(mapState);\n\n    const layerProps = {\n      radiusScale,\n      ...(this.config.visConfig.fixedRadius ? {} : {radiusMaxPixels: 500})\n    };\n\n    const updateTriggers = {\n      getPosition: this.config.columns,\n      getFilterValue: gpuFilter.filterValueUpdateTriggers,\n      ...this.getVisualChannelUpdateTriggers()\n    };\n\n    const defaultLayerProps = this.getDefaultDeckLayerProps(opts);\n    const brushingProps = this.getBrushingExtensionProps(interactionConfig);\n    const getPixelOffset = getTextOffsetByRadius(radiusScale, data.getRadius, mapState);\n    const extensions = [...defaultLayerProps.extensions, brushingExtension];\n\n    // shared Props between layer and label layer\n    const sharedProps = {\n      getFilterValue: data.getFilterValue,\n      extensions,\n      filterRange: defaultLayerProps.filterRange,\n      ...brushingProps\n    };\n\n    const labelLayers = [\n      ...this.renderTextLabelLayer(\n        {\n          getPosition: data.getPosition,\n          sharedProps,\n          getPixelOffset,\n          updateTriggers\n        },\n        opts\n      )\n    ];\n    const hoveredObject = this.hasHoveredObject(objectHovered);\n\n    const parameters = {\n      // icons will be flat on the map when the altitude column is not used\n      depthTest: this.config.columns.altitude?.fieldIdx > -1,\n      cullFace: GL.FRONT\n    };\n\n    return !this.iconGeometry\n      ? []\n      : [\n          new SvgIconLayer({\n            ...defaultLayerProps,\n            ...brushingProps,\n            ...layerProps,\n            ...data,\n            parameters,\n            getIconGeometry: id => this.iconGeometry?.[id],\n\n            // update triggers\n            updateTriggers,\n            extensions\n          }),\n\n          // hover layer\n          ...(hoveredObject\n            ? [\n                // @ts-expect-error SvgIconLayerProps needs getIcon Field\n                new SvgIconLayer({\n                  ...this.getDefaultHoverLayerProps(),\n                  ...layerProps,\n                  visible: defaultLayerProps.visible,\n                  data: [hoveredObject],\n                  parameters,\n                  getPosition: data.getPosition,\n                  getRadius: data.getRadius,\n                  getFillColor: this.config.highlightColor,\n                  getIconGeometry: id => this.iconGeometry?.[id]\n                })\n              ]\n            : []),\n\n          // text label layer\n          ...labelLayers\n        ];\n  }\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport Layer, {OVERLAY_TYPE_CONST} from './base-layer';\nimport {Feature} from 'geojson';\n\nimport {findById} from '@kepler.gl/utils';\n\n/**\n * This function will convert layers to mapbox layers\n * @param layers the layers to be converted\n * @param layerData extra layer information\n * @param layerOrder the order by which we should convert layers\n * @param layersToRender {[id]: true | false} object whether each layer should be rendered\n * @returns\n */\nexport function generateMapboxLayers(\n  layers: Layer[] = [],\n  layerData: any[] = [],\n  layerOrder: string[] = [],\n  layersToRender: {[key: string]: boolean} = {}\n): {[key: string]: Layer} {\n  if (layerData.length > 0) {\n    return layerOrder\n      .slice()\n      .reverse()\n      .filter(layerId => {\n        const layer = findById(layerId)(layers);\n        return layer?.overlayType === OVERLAY_TYPE_CONST.mapboxgl && layersToRender[layerId];\n      })\n      .reduce((acc, layerId) => {\n        const layerIndex = layers.findIndex(l => l.id === layerId);\n        if (layerIndex === -1) {\n          return acc;\n        }\n\n        const layer = layers[layerIndex];\n\n        if (!(layer.overlayType === OVERLAY_TYPE_CONST.mapboxgl && layersToRender[layerId])) {\n          return acc;\n        }\n\n        return {\n          ...acc,\n          [layer.id]: {\n            id: layer.id,\n            data: layerData[layerIndex].data,\n            isVisible: layer.config.isVisible,\n            config: layerData[layerIndex].config,\n            hidden: layer.config.hidden,\n            sourceId: layerData[layerIndex].config.source\n          }\n        };\n      }, {});\n  }\n\n  return {};\n}\n\ntype newLayersType = {\n  [key: string]: Layer & Partial<{data: any; sourceId: any; isVisible: boolean}>;\n};\ntype oldLayersType = {[key: string]: Layer & {data?: any}};\n/**\n * Update mapbox layers on the given map\n * @param map\n * @param newLayers Map of new mapbox layers to be displayed\n * @param oldLayers Map of the old layers to be compare with the current ones to detect deleted layers\n *                  {layerId: sourceId}\n */\nexport function updateMapboxLayers(\n  map,\n  newLayers: newLayersType = {},\n  oldLayers: oldLayersType | null = null\n) {\n  // delete no longer existed old layers\n  if (oldLayers) {\n    checkAndRemoveOldLayers(map, oldLayers, newLayers);\n  }\n\n  // insert or update new layer\n  Object.values(newLayers).forEach(overlay => {\n    const {id: layerId, config, data, sourceId, isVisible} = overlay;\n    if (!data && !config) {\n      return;\n    }\n\n    const {data: oldData, config: oldConfig} = (oldLayers && oldLayers[layerId]) || {};\n\n    if (data && data !== oldData) {\n      updateSourceData(map, sourceId, data);\n    }\n\n    // compare with previous configs\n    if (oldConfig !== config) {\n      updateLayerConfig(map, layerId, config, isVisible);\n    }\n  });\n}\n\nfunction checkAndRemoveOldLayers(map, oldLayers: oldLayersType, newLayers: newLayersType) {\n  Object.keys(oldLayers).forEach(layerId => {\n    if (!newLayers[layerId]) {\n      map.removeLayer(layerId);\n    }\n  });\n}\n\nfunction updateLayerConfig(map, layerId, config, isVisible) {\n  const mapboxLayer = map.getLayer(layerId);\n\n  if (mapboxLayer) {\n    // check if layer already is set\n    // remove it if exists\n    map.removeLayer(layerId);\n  }\n\n  map.addLayer(config);\n  map.setLayoutProperty(layerId, 'visibility', isVisible ? 'visible' : 'none');\n}\n\nfunction updateSourceData(map, sourceId, data) {\n  const source = map.getSource(sourceId);\n\n  if (!source) {\n    map.addSource(sourceId, {\n      type: 'geojson',\n      data\n    });\n  } else {\n    source.setData(data);\n  }\n}\n\n/**\n *\n * @param filteredIndex\n * @param getGeometry {({index: number}) => any}\n * @param getProperties {({index: number}) => any}\n * @returns FeatureCollection\n */\nexport function geoJsonFromData(\n  filteredIndex: number[] = [],\n  getGeometry: {({index: number}): any},\n  getProperties: {({index: number}): any} = d => {}\n) {\n  const geojson: {type: string; features: Feature[]} = {\n    type: 'FeatureCollection',\n    features: []\n  };\n\n  for (let i = 0; i < filteredIndex.length; i++) {\n    const index = filteredIndex[i];\n    const rowIndex = {index};\n    const geometry = getGeometry(rowIndex);\n\n    if (geometry) {\n      geojson.features.push({\n        type: 'Feature',\n        properties: {\n          index,\n          ...getProperties(rowIndex)\n        },\n        geometry\n      });\n    }\n  }\n\n  return geojson;\n}\n\nexport const prefixGpuField = name => `gpu:${name}`;\n\nexport function gpuFilterToMapboxFilter(gpuFilter) {\n  const {filterRange, filterValueUpdateTriggers} = gpuFilter;\n\n  const hasFilter = Object.values(filterValueUpdateTriggers).filter(d => d);\n\n  if (!hasFilter.length) {\n    return null;\n  }\n\n  const condition = ['all'];\n\n  // [\">=\", key, value]\n  // [\"<=\", key, value]\n  const expressions = Object.values(filterValueUpdateTriggers).reduce(\n    (accu: any[], name, i) =>\n      name\n        ? [\n            ...accu,\n            ['>=', prefixGpuField(name), filterRange[i][0]],\n            ['<=', prefixGpuField(name), filterRange[i][1]]\n          ]\n        : accu,\n    condition\n  );\n\n  return expressions;\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport Layer, {\n  LayerBaseConfig,\n  LayerColumn,\n  OVERLAY_TYPE_CONST,\n  VisualChannels\n} from './base-layer';\nimport {createSelector} from 'reselect';\n\nimport {geoJsonFromData, prefixGpuField, gpuFilterToMapboxFilter} from './mapbox-utils';\nimport {default as KeplerTable} from '@kepler.gl/table';\nimport {Merge} from '@kepler.gl/types';\n\ntype MapboxLayerGLColumns = {\n  lat: LayerColumn;\n  lng: LayerColumn;\n};\n\nexport type MapboxLayerGLConfig = Merge<LayerBaseConfig, {columns: MapboxLayerGLColumns}>;\n\nexport const mapboxRequiredColumns: ['lat', 'lng'] = ['lat', 'lng'];\n\nexport const pointColResolver = ({lat, lng}: MapboxLayerGLColumns) =>\n  `${lat.fieldIdx}-${lng.fieldIdx}`;\n\nclass MapboxLayerGL extends Layer {\n  declare config: MapboxLayerGLConfig;\n\n  get overlayType() {\n    return OVERLAY_TYPE_CONST.mapboxgl;\n  }\n\n  get type(): string | null {\n    return null;\n  }\n\n  get isAggregated(): true {\n    return true;\n  }\n\n  get requiredLayerColumns() {\n    return mapboxRequiredColumns;\n  }\n\n  get columnPairs() {\n    return this.defaultPointColumnPairs;\n  }\n\n  get noneLayerDataAffectingProps() {\n    return [];\n  }\n\n  get visualChannels(): VisualChannels {\n    return {};\n  }\n  datasetSelector = (config: MapboxLayerGLConfig) => config.dataId;\n  gpuFilterSelector = (config: MapboxLayerGLConfig, datasets) =>\n    ((config.dataId && datasets[config.dataId]) || {}).gpuFilter;\n  columnsSelector = (config: MapboxLayerGLConfig) => pointColResolver(config.columns);\n\n  sourceSelector = createSelector(\n    this.datasetSelector,\n    this.columnsSelector,\n    (datasetId, columns) => `${datasetId}-${columns}`\n  );\n\n  filterSelector = createSelector(this.gpuFilterSelector, gpuFilter =>\n    gpuFilterToMapboxFilter(gpuFilter)\n  );\n\n  isValidFilter(filter) {\n    // mapbox will crash if filter is not an array or empty\n    return Array.isArray(filter) && filter.length;\n  }\n\n  getDataUpdateTriggers({filteredIndex, gpuFilter, id}: KeplerTable): any {\n    const {columns} = this.config;\n\n    const visualChannelFields = Object.values(this.visualChannels).reduce(\n      (accu, v) => ({\n        ...accu,\n        ...(this.config[v.field] ? {[v.field]: this.config[v.field].name} : {})\n      }),\n      {}\n    );\n\n    const updateTriggers = {\n      getData: {\n        datasetId: id,\n        columns,\n        filteredIndex,\n        ...visualChannelFields,\n        ...gpuFilter.filterValueUpdateTriggers\n      },\n      getMeta: {datasetId: id, columns}\n    };\n\n    return updateTriggers;\n  }\n\n  getGeometry(position) {\n    return position.every(Number.isFinite)\n      ? {\n          type: 'Point',\n          coordinates: position\n        }\n      : null;\n  }\n\n  calculateDataAttribute({dataContainer, filteredIndex, gpuFilter}: KeplerTable, getPosition) {\n    const getGeometry = d => this.getGeometry(getPosition(d));\n\n    const vcFields = Object.values(this.visualChannels)\n      .map(v => this.config[v.field])\n      .filter(v => v);\n\n    const getPropertyFromVisualChanel = vcFields.length\n      ? d =>\n          vcFields.reduce(\n            (accu, field) => ({\n              ...accu,\n              [field.name]: field.valueAccessor(d)\n            }),\n            {}\n          )\n      : d => ({});\n\n    const {filterValueUpdateTriggers, filterValueAccessor} = gpuFilter;\n\n    // gpuField To property\n    const hasFilter = Object.values(filterValueUpdateTriggers).filter(d => d).length;\n    const valueAccessor = filterValueAccessor(dataContainer)();\n\n    const getPropertyFromFilter = hasFilter\n      ? d => {\n          const filterValue = valueAccessor(d);\n          return Object.values(filterValueUpdateTriggers).reduce(\n            (accu: any, name, i) => ({\n              ...accu,\n              ...(name ? {[prefixGpuField(name)]: filterValue[i]} : {})\n            }),\n            {}\n          ) as any;\n        }\n      : d => ({} as any);\n\n    const getProperties = d => ({\n      ...getPropertyFromVisualChanel(d),\n      ...getPropertyFromFilter(d)\n    });\n\n    return geoJsonFromData(filteredIndex, getGeometry, getProperties);\n  }\n\n  // this layer is rendered at mapbox level\n  // todo: maybe need to find a better solution for this one\n  shouldRenderLayer() {\n    return typeof this.type === 'string' && this.config.isVisible && this.hasAllColumns();\n  }\n}\n\nexport default MapboxLayerGL;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {Base} from '../base';\n\nexport default class HeatmapLayerIcon extends Component {\n  static propTypes = {\n    /** Set the height of the icon, ex. '16px' */\n    height: PropTypes.string,\n    colors: PropTypes.arrayOf(PropTypes.string)\n  };\n\n  static defaultProps = {\n    height: '16px',\n    predefinedClassName: 'heatmap-layer-icon',\n    totalColor: 3\n  };\n\n  render() {\n    return (\n      <Base {...this.props}>\n        <path\n          d=\"M51.87,21C49.55,16.67,43.77,15.29,39,18a11.42,11.42,0,0,0-1.65,1.13c-2.73,2.14-2.12,3-6,4.89-2.27,1.07-3.42,1.08-6.88,1.4l-2.24.21a14,14,0,0,0-2.86.84c-6.64,2.73-10.11,9.86-7.76,15.94s9.63,8.79,16.27,6.07A14,14,0,0,0,31.77,46l0,0,.06-.07c.43-.4.8-.78,1.14-1.14a2.66,2.66,0,0,0,.32-.36l.17-.19c3-3.53,2-5,4.9-7.39,2.38-1.93,5.41-.95,9-3C52.19,31.15,54.19,25.43,51.87,21ZM26,44.59a8.7,8.7,0,0,1-2.26.59A7.16,7.16,0,0,1,16,40.85c-1.44-3.72.68-8.08,4.73-9.74A8.33,8.33,0,0,1,23,30.53a7.15,7.15,0,0,1,7.71,4.32C32.19,38.57,30.06,42.93,26,44.59Z\"\n          className=\"cr2\"\n          style={{opacity: 0.8}}\n        />\n        <path\n          d=\"M57,18.18A14.56,14.56,0,0,0,42.25,10.7a16.62,16.62,0,0,0-6.12,2,17.35,17.35,0,0,0-2.39,1.65,20.15,20.15,0,0,0-2.83,2.73,4.52,4.52,0,0,1-2,1.45,5.88,5.88,0,0,1-2.26.63l-1.45.14-1.27.12-2.33.22-.2,0-.18,0a18.88,18.88,0,0,0-4,1.18c-9.6,3.93-14.51,14.57-11,23.71A17.59,17.59,0,0,0,24.81,55.4,20.19,20.19,0,0,0,30,54.05a20,20,0,0,0,5.26-3.19l.82-.71.05-.08,1-1c.21-.22.41-.45.59-.66l.13-.15a20,20,0,0,0,3.39-5.48c.36-.87.36-.87.68-1.14a9.09,9.09,0,0,1,1.56-.32,18.79,18.79,0,0,0,6.69-2.19,16.56,16.56,0,0,0,7.88-9.9A14.93,14.93,0,0,0,57,18.18ZM47.63,34.27a13.93,13.93,0,0,1-5.06,1.61,7.75,7.75,0,0,0-3.86,1.36,7.06,7.06,0,0,0-2.33,3.24,14.17,14.17,0,0,1-2.51,4.09l-.1.11a5.11,5.11,0,0,1-.43.47c-.31.35-.7.73-1.14,1.14l-.09.09-.12.09a14.4,14.4,0,0,1-4,2.44,14.73,14.73,0,0,1-3.84,1c-5.87.69-11.13-2.27-13.08-7.35-2.45-6.32,1.16-13.76,8-16.59a15,15,0,0,1,3-.87l2.29-.22.9-.07,2-.2a10.88,10.88,0,0,0,3.85-1.08,9.43,9.43,0,0,0,3.77-2.76A14.75,14.75,0,0,1,37,18.71a11.5,11.5,0,0,1,1.71-1.17,11.08,11.08,0,0,1,4.16-1.36,9.26,9.26,0,0,1,9.42,4.64C54.75,25.42,52.65,31.47,47.63,34.27Z\"\n          className=\"cr1\"\n          style={{opacity: 0.36}}\n        />\n        <path\n          d=\"M33,44.79a9.53,9.53,0,0,1-1.13,1.14C32.3,45.53,32.67,45.15,33,44.79Z\"\n          className=\"cr1\"\n          style={{opacity: 0.36}}\n        />\n        <path\n          d=\"M25.83,44.13c-3.82,1.55-8,0-9.33-3.46s.65-7.55,4.45-9.1,8,0,9.33,3.46S29.63,42.57,25.83,44.13Z\"\n          className=\"cr3\"\n        />\n        <path d=\"M31.81,46a.09.09,0,0,1,0,0h0Z\" className=\"cr3\" />\n      </Base>\n    );\n  }\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {createSelector} from 'reselect';\nimport memoize from 'lodash.memoize';\nimport {CHANNEL_SCALES, SCALE_FUNC, ALL_FIELD_TYPES, ColorRange} from '@kepler.gl/constants';\nimport MapboxGLLayer, {MapboxLayerGLConfig} from '../mapboxgl-layer';\nimport HeatmapLayerIcon from './heatmap-layer-icon';\nimport {\n  LayerBaseConfigPartial,\n  LayerColumn,\n  LayerWeightConfig,\n  VisualChannels\n} from '../base-layer';\nimport {VisConfigColorRange, VisConfigNumber, HexColor, Merge} from '@kepler.gl/types';\nimport {hexToRgb, DataContainerInterface} from '@kepler.gl/utils';\n\nexport type HeatmapLayerVisConfigSettings = {\n  opacity: VisConfigNumber;\n  colorRange: VisConfigColorRange;\n  radius: VisConfigNumber;\n};\n\nexport type HeatmapLayerColumnsConfig = {lat: LayerColumn; lng: LayerColumn};\n\nexport type HeatmapLayerVisConfig = {\n  opacity: number;\n  colorRange: ColorRange;\n  radius: number;\n};\n\nexport type HeatmapLayerVisualChannelConfig = LayerWeightConfig;\nexport type HeatmapLayerConfig = Merge<\n  MapboxLayerGLConfig,\n  {columns: HeatmapLayerColumnsConfig; visConfig: HeatmapLayerVisConfig}\n> &\n  HeatmapLayerVisualChannelConfig;\n\nexport const MAX_ZOOM_LEVEL = 18;\n\nexport const pointPosAccessor = ({lat, lng}: HeatmapLayerColumnsConfig) => (\n  dc: DataContainerInterface\n) => d => [dc.valueAt(d.index, lng.fieldIdx), dc.valueAt(d.index, lat.fieldIdx)];\n\nexport const pointColResolver = ({lat, lng}: HeatmapLayerColumnsConfig) =>\n  `${lat.fieldIdx}-${lng.fieldIdx}`;\n\nexport const heatmapVisConfigs: {\n  opacity: 'opacity';\n  colorRange: 'colorRange';\n  radius: 'heatmapRadius';\n} = {\n  opacity: 'opacity',\n  colorRange: 'colorRange',\n  radius: 'heatmapRadius'\n};\n\n/**\n *\n * @param colorRange\n * @return [\n *  0, \"rgba(33,102,172,0)\",\n *  0.2, \"rgb(103,169,207)\",\n *  0.4, \"rgb(209,229,240)\",\n *  0.6, \"rgb(253,219,199)\",\n *  0.8, \"rgb(239,138,98)\",\n *  1, \"rgb(178,24,43)\"\n * ]\n */\nconst heatmapDensity = (colorRange: ColorRange): (string | number)[] => {\n  const scaleFunction = SCALE_FUNC.quantize;\n\n  const colors: HexColor[] = ['#000000', ...colorRange.colors];\n\n  const scale = scaleFunction<HexColor>()\n    .domain([0, 1])\n    .range(colors);\n\n  const colorDensity = scale.range().reduce((bands: (string | number)[], level) => {\n    const invert = scale.invertExtent(level);\n    return [\n      ...bands,\n      invert[0], // first value in the range\n      `rgb(${hexToRgb(level).join(',')})` // color\n    ];\n  }, []);\n  colorDensity[1] = 'rgba(0,0,0,0)';\n  return colorDensity;\n};\n\nclass HeatmapLayer extends MapboxGLLayer {\n  declare visConfigSettings: HeatmapLayerVisConfigSettings;\n  declare config: HeatmapLayerConfig;\n\n  getPosition: (config: HeatmapLayerColumnsConfig) => any;\n\n  constructor(props) {\n    super(props);\n    this.registerVisConfig(heatmapVisConfigs);\n    this.getPosition = memoize(pointPosAccessor, pointColResolver);\n  }\n\n  get type(): 'heatmap' {\n    return 'heatmap';\n  }\n\n  get visualChannels(): VisualChannels {\n    return {\n      // @ts-expect-error\n      weight: {\n        property: 'weight',\n        field: 'weightField',\n        scale: 'weightScale',\n        domain: 'weightDomain',\n        key: 'weight',\n        // supportedFieldTypes can be determined by channelScaleType\n        // or specified here\n        defaultMeasure: 'property.density',\n        supportedFieldTypes: [ALL_FIELD_TYPES.real, ALL_FIELD_TYPES.integer],\n        channelScaleType: CHANNEL_SCALES.size\n      }\n    };\n  }\n\n  get layerIcon() {\n    return HeatmapLayerIcon;\n  }\n\n  getVisualChannelDescription(channel) {\n    return channel === 'color'\n      ? {\n          label: 'property.color',\n          measure: 'property.density'\n        }\n      : {\n          label: 'property.weight',\n          measure: this.config.weightField ? this.config.weightField.name : 'property.density'\n        };\n  }\n\n  getDefaultLayerConfig(props: LayerBaseConfigPartial): HeatmapLayerConfig {\n    // mapbox heatmap layer color is always based on density\n    // no need to set colorField, colorDomain and colorScale\n    // eslint-disable-next-line no-unused-vars\n    const {colorField, colorDomain, colorScale, ...layerConfig} = {\n      ...super.getDefaultLayerConfig(props),\n\n      weightField: null,\n      weightDomain: [0, 1],\n      weightScale: 'linear'\n    };\n\n    // @ts-expect-error\n    return layerConfig;\n  }\n\n  getPositionAccessor(dataContainer) {\n    return this.getPosition(this.config.columns)(dataContainer);\n  }\n\n  updateLayerMeta(dataContainer) {\n    const getPosition = this.getPositionAccessor(dataContainer);\n    const bounds = this.getPointsBounds(dataContainer, getPosition);\n    this.updateMeta({bounds});\n  }\n\n  columnsSelector = config => pointColResolver(config.columns);\n  visConfigSelector = config => config.visConfig;\n  weightFieldSelector = config => (config.weightField ? config.weightField.name : null);\n  weightDomainSelector = config => config.weightDomain;\n\n  paintSelector = createSelector(\n    this.visConfigSelector,\n    this.weightFieldSelector,\n    this.weightDomainSelector,\n    (visConfig, weightField, weightDomain) => ({\n      'heatmap-weight': weightField\n        ? ['interpolate', ['linear'], ['get', weightField], weightDomain[0], 0, weightDomain[1], 1]\n        : 1,\n      'heatmap-intensity': ['interpolate', ['linear'], ['zoom'], 0, 1, MAX_ZOOM_LEVEL, 3],\n      'heatmap-color': [\n        'interpolate',\n        ['linear'],\n        ['heatmap-density'],\n        ...heatmapDensity(visConfig.colorRange)\n      ],\n      'heatmap-radius': [\n        'interpolate',\n        ['linear'],\n        ['zoom'],\n        0,\n        2,\n        MAX_ZOOM_LEVEL,\n        visConfig.radius // radius\n      ],\n      'heatmap-opacity': visConfig.opacity\n    })\n  );\n\n  computeHeatmapConfiguration = createSelector(\n    this.sourceSelector,\n    this.filterSelector,\n    this.paintSelector,\n    (source, filter, paint) => {\n      return {\n        type: 'heatmap',\n        id: this.id,\n        source,\n        layout: {\n          visibility: 'visible'\n        },\n        paint,\n        ...(this.isValidFilter(filter) ? {filter} : {})\n      };\n    }\n  );\n\n  formatLayerData(datasets, oldLayerData) {\n    if (this.config.dataId === null) {\n      return {};\n    }\n    const {weightField} = this.config;\n    const {dataContainer} = datasets[this.config.dataId];\n    const getPosition = this.getPositionAccessor(dataContainer);\n    const {data} = this.updateData(datasets, oldLayerData);\n\n    const newConfig = this.computeHeatmapConfiguration(this.config, datasets);\n    newConfig.id = this.id;\n\n    return {\n      columns: this.config.columns,\n      config: newConfig,\n      data,\n      weightField,\n      getPosition\n    };\n  }\n}\n\nexport default HeatmapLayer;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {Base} from '../base';\n\nclass H3HexagonLayerIcon extends Component {\n  static propTypes = {\n    /** Set the height of the icon, ex. '16px' */\n    height: PropTypes.string,\n    colors: PropTypes.arrayOf(PropTypes.string)\n  };\n  static defaultProps = {\n    height: '16px',\n    predefinedClassName: 'h3-hexagon-layer-icon',\n    totalColor: 4\n  };\n\n  render() {\n    return (\n      <Base {...this.props}>\n        <path d=\"M44.59,54.5H19.41L6.81,32.68,19.41,10.87H44.59L57.19,32.68Zm-23-3.83H42.38l10.38-18-10.38-18H21.62l-10.38,18Z\" />\n        <polygon points=\"24.65 32.86 24.65 37.79 22.53 37.79 22.53 26.3 24.65 26.3 24.65 30.91 29.32 30.91 29.32 26.3 31.43 26.3 31.43 37.79 29.32 37.79 29.32 32.86 24.65 32.86\" />\n        <path d=\"M33.79,37.05l.6-1.67a5.86,5.86,0,0,0,1.39.61,5.59,5.59,0,0,0,1.5.19A2.57,2.57,0,0,0,39,35.66a1.81,1.81,0,0,0,.61-1.46A1.29,1.29,0,0,0,38.94,33a4.55,4.55,0,0,0-2.05-.32H35.74V31h1.1A5.4,5.4,0,0,0,38,30.85a2.1,2.1,0,0,0,.77-.29,1.53,1.53,0,0,0,.51-.54,1.58,1.58,0,0,0,.15-.73,1.14,1.14,0,0,0-.51-1,2.67,2.67,0,0,0-1.5-.34,4.56,4.56,0,0,0-1.51.24,5,5,0,0,0-1.34.73l-.7-1.61a4.92,4.92,0,0,1,1.66-.83,6.91,6.91,0,0,1,2-.31,4.41,4.41,0,0,1,2.81.79,2.71,2.71,0,0,1,1,2.24,2.33,2.33,0,0,1-.54,1.62,3.45,3.45,0,0,1-1.46.93v0a3,3,0,0,1,1.67.81,2.3,2.3,0,0,1,.64,1.7A3.27,3.27,0,0,1,40.48,37a5,5,0,0,1-3.16.91A6.77,6.77,0,0,1,33.79,37.05Z\" />\n      </Base>\n    );\n  }\n}\n\nexport default H3HexagonLayerIcon;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport Layer, {\n  LayerBaseConfig,\n  LayerBaseConfigPartial,\n  LayerColorConfig,\n  LayerColumn,\n  LayerCoverageConfig,\n  LayerSizeConfig\n} from '../base-layer';\nimport {BrushingExtension} from '@deck.gl/extensions';\nimport {GeoJsonLayer} from '@deck.gl/layers';\nimport {H3HexagonLayer} from '@deck.gl/geo-layers';\nimport {EnhancedColumnLayer} from '@kepler.gl/deckgl-layers';\nimport {\n  getCentroid,\n  idToPolygonGeo,\n  h3IsValid,\n  getHexFields,\n  Centroid,\n  findDefaultColorField,\n  DataContainerInterface,\n  createDataContainer\n} from '@kepler.gl/utils';\nimport H3HexagonLayerIcon from './h3-hexagon-layer-icon';\nimport {\n  CHANNEL_SCALES,\n  HIGHLIGH_COLOR_3D,\n  DEFAULT_COLOR_UI,\n  DEFAULT_TEXT_LABEL,\n  LAYER_VIS_CONFIGS,\n  ColorRange\n} from '@kepler.gl/constants';\n\nimport {\n  VisConfigBoolean,\n  VisConfigColorRange,\n  VisConfigNumber,\n  VisConfigRange,\n  Merge\n} from '@kepler.gl/types';\nimport {KeplerTable} from '@kepler.gl/table';\n\nimport {getTextOffsetByRadius, formatTextLabelData} from '../layer-text-label';\n\nexport type HexagonIdLayerColumnsConfig = {\n  hex_id: LayerColumn;\n};\n\nexport type HexagonIdLayerVisConfigSettings = {\n  opacity: VisConfigNumber;\n  strokeOpacity: VisConfigNumber;\n  colorRange: VisConfigColorRange;\n  coverage: VisConfigNumber;\n  enable3d: VisConfigBoolean;\n  sizeRange: VisConfigRange;\n  coverageRange: VisConfigRange;\n  elevationScale: VisConfigNumber;\n  enableElevationZoomFactor: VisConfigBoolean;\n  filled: VisConfigBoolean;\n  outline: VisConfigBoolean;\n  thickness: VisConfigNumber;\n};\n\nexport type HexagonIdLayerVisConfig = {\n  opacity: number;\n  strokeOpacity: number;\n  colorRange: ColorRange;\n  coverage: number;\n  enable3d: boolean;\n  sizeRange: [number, number];\n  coverageRange: [number, number];\n  elevationScale: number;\n  enableElevationZoomFactor: boolean;\n  filled: boolean;\n  outline: boolean;\n  thickness: number;\n};\n\nexport type HexagonIdLayerVisualChannelConfig = LayerColorConfig &\n  LayerSizeConfig &\n  LayerCoverageConfig;\nexport type HexagonIdLayerConfig = Merge<\n  LayerBaseConfig,\n  {columns: HexagonIdLayerColumnsConfig; visConfig: HexagonIdLayerVisConfig}\n> &\n  HexagonIdLayerVisualChannelConfig;\n\nexport type HexagonIdLayerData = {index: number; id; centroid: Centroid};\n\nconst DEFAULT_LINE_SCALE_VALUE = 8;\n\nexport const hexIdRequiredColumns: ['hex_id'] = ['hex_id'];\nexport const hexIdAccessor = ({hex_id}: HexagonIdLayerColumnsConfig) => (\n  dc: DataContainerInterface\n) => d => dc.valueAt(d.index, hex_id.fieldIdx);\n\nexport const defaultElevation = 500;\nexport const defaultCoverage = 1;\n\nexport const HexagonIdVisConfigs: {\n  opacity: VisConfigNumber;\n  strokeOpacity: VisConfigNumber;\n  colorRange: 'colorRange';\n  filled: VisConfigBoolean;\n  outline: 'outline';\n  strokeColor: 'strokeColor';\n  strokeColorRange: 'strokeColorRange';\n  thickness: 'thickness';\n  coverage: 'coverage';\n  enable3d: 'enable3d';\n  sizeRange: 'elevationRange';\n  coverageRange: 'coverageRange';\n  elevationScale: 'elevationScale';\n  enableElevationZoomFactor: 'enableElevationZoomFactor';\n} = {\n  colorRange: 'colorRange',\n  filled: {\n    ...LAYER_VIS_CONFIGS.filled,\n    defaultValue: true\n  },\n  opacity: {\n    ...LAYER_VIS_CONFIGS.opacity,\n    label: 'Fill Opacity',\n    range: [0, 1],\n    property: 'opacity'\n  },\n  outline: 'outline',\n  strokeColor: 'strokeColor',\n  strokeColorRange: 'strokeColorRange',\n  strokeOpacity: {\n    ...LAYER_VIS_CONFIGS.opacity,\n    label: 'Stroke Opacity',\n    range: [0, 1],\n    property: 'strokeOpacity'\n  },\n  thickness: 'thickness',\n  coverage: 'coverage',\n  enable3d: 'enable3d',\n  sizeRange: 'elevationRange',\n  coverageRange: 'coverageRange',\n  elevationScale: 'elevationScale',\n  enableElevationZoomFactor: 'enableElevationZoomFactor'\n};\n\nconst brushingExtension = new BrushingExtension();\nexport default class HexagonIdLayer extends Layer {\n  dataToFeature: {centroids: Centroid[]};\n\n  declare config: HexagonIdLayerConfig;\n  declare visConfigSettings: HexagonIdLayerVisConfigSettings;\n  constructor(props) {\n    super(props);\n    this.dataToFeature = {centroids: []};\n    this.registerVisConfig(HexagonIdVisConfigs);\n    this.getPositionAccessor = (dataContainer: DataContainerInterface) =>\n      hexIdAccessor(this.config.columns)(dataContainer);\n  }\n\n  get type(): 'hexagonId' {\n    return 'hexagonId';\n  }\n\n  get name(): 'H3' {\n    return 'H3';\n  }\n\n  get requiredLayerColumns() {\n    return hexIdRequiredColumns;\n  }\n\n  get layerIcon() {\n    // use hexagon layer icon for now\n    return H3HexagonLayerIcon;\n  }\n\n  get visualChannels() {\n    const visualChannels = super.visualChannels;\n    return {\n      color: {\n        ...visualChannels.color,\n        accessor: 'getFillColor',\n        condition: config => config.visConfig.filled\n      },\n      strokeColor: {\n        property: 'strokeColor',\n        key: 'strokeColor',\n        field: 'strokeColorField',\n        scale: 'strokeColorScale',\n        domain: 'strokeColorDomain',\n        range: 'strokeColorRange',\n        channelScaleType: CHANNEL_SCALES.color,\n        accessor: 'getLineColor',\n        condition: config => config.visConfig.outline,\n        defaultValue: config => config.visConfig.strokeColor || config.color\n      },\n      size: {\n        ...visualChannels.size,\n        property: 'height',\n        accessor: 'getElevation',\n        nullValue: 0,\n        condition: config => config.visConfig.enable3d,\n        defaultValue: defaultElevation\n      },\n      coverage: {\n        property: 'coverage',\n        field: 'coverageField',\n        scale: 'coverageScale',\n        domain: 'coverageDomain',\n        range: 'coverageRange',\n        key: 'coverage',\n        channelScaleType: CHANNEL_SCALES.radius,\n        accessor: 'getCoverage',\n        nullValue: 0,\n        defaultValue: defaultCoverage\n      }\n    };\n  }\n\n  setInitialLayerConfig(dataset) {\n    if (!dataset.dataContainer.numRows()) {\n      return this;\n    }\n    const defaultColorField = findDefaultColorField(dataset);\n\n    if (defaultColorField) {\n      this.updateLayerConfig<HexagonIdLayerConfig>({\n        colorField: defaultColorField\n      });\n      this.updateLayerVisualChannel(dataset, 'color');\n    }\n\n    return this;\n  }\n\n  static findDefaultLayerProps({fields = [], dataContainer, label}: KeplerTable) {\n    const hexFields = getHexFields(fields, dataContainer);\n    if (!hexFields.length) {\n      return {props: []};\n    }\n\n    return {\n      props: hexFields.map(f => ({\n        isVisible: true,\n        // default layer name should be dataset name\n        label,\n        columns: {\n          hex_id: {\n            value: f.name,\n            fieldIdx: fields.findIndex(fid => fid.name === f.name)\n          }\n        }\n      }))\n    };\n  }\n\n  getDefaultLayerConfig(props: LayerBaseConfigPartial) {\n    const defaultLayerConfig = super.getDefaultLayerConfig(props);\n\n    return {\n      ...defaultLayerConfig,\n\n      // add stroke color visual channel\n      strokeColorField: null,\n      strokeColorDomain: [0, 1],\n      strokeColorScale: 'quantile',\n      colorUI: {\n        ...defaultLayerConfig.colorUI,\n        strokeColorRange: DEFAULT_COLOR_UI\n      },\n\n      // add radius visual channel\n      coverageField: null,\n      coverageDomain: [0, 1],\n      coverageScale: 'linear',\n\n      // modify default textLabel anchor position to be appropriate for a hexagon shape\n      textLabel: [\n        {\n          ...DEFAULT_TEXT_LABEL,\n          anchor: 'middle'\n        }\n      ]\n    };\n  }\n\n  calculateDataAttribute({dataContainer, filteredIndex}: KeplerTable, getHexId) {\n    const data: HexagonIdLayerData[] = [];\n\n    for (let i = 0; i < filteredIndex.length; i++) {\n      const index = filteredIndex[i];\n      const id = getHexId({index});\n      const centroid = this.dataToFeature.centroids[index];\n\n      if (centroid) {\n        data.push({\n          index,\n          id,\n          centroid\n        });\n      }\n    }\n    return data;\n  }\n\n  // TODO: fix complexity\n  /* eslint-disable complexity */\n  formatLayerData(datasets, oldLayerData, opt = {}) {\n    if (this.config.dataId === null) {\n      return {};\n    }\n    const {gpuFilter, dataContainer} = datasets[this.config.dataId];\n    const getHexId = this.getPositionAccessor(dataContainer);\n    const {data, triggerChanged} = this.updateData(datasets, oldLayerData);\n    const accessors = this.getAttributeAccessors({dataContainer});\n    const {textLabel} = this.config;\n\n    // get all distinct characters in the text labels\n    const textLabels = formatTextLabelData({\n      textLabel,\n      triggerChanged,\n      oldLayerData,\n      data,\n      dataContainer\n    });\n\n    return {\n      data,\n      getHexId,\n      getFilterValue: gpuFilter.filterValueAccessor(dataContainer)(),\n      textLabels,\n      getPosition: d => d.centroid,\n      ...accessors\n    };\n  }\n  /* eslint-enable complexity */\n\n  updateLayerMeta(dataContainer, getHexId) {\n    const centroids = dataContainer.map((d, index) => {\n      const id = getHexId({index});\n      if (!h3IsValid(id)) {\n        return null;\n      }\n      // save a reference of centroids to dataToFeature\n      // so we don't have to re calculate it again\n      return getCentroid({id});\n    }, true);\n\n    const centroidsDataContainer = createDataContainer(centroids);\n\n    const bounds = this.getPointsBounds(\n      centroidsDataContainer,\n      (d: any, dc: DataContainerInterface) => {\n        return [dc.valueAt(d.index, 0), dc.valueAt(d.index, 1)];\n      }\n    );\n    this.dataToFeature = {centroids};\n    this.updateMeta({bounds});\n  }\n\n  renderLayer(opts) {\n    const {data, gpuFilter, objectHovered, mapState, interactionConfig} = opts;\n\n    const zoomFactor = this.getZoomFactor(mapState);\n    const eleZoomFactor = this.getElevationZoomFactor(mapState);\n    const {config} = this;\n    const {visConfig} = config;\n    const updateTriggers = this.getVisualChannelUpdateTriggers();\n\n    const h3HexagonLayerTriggers = {\n      getHexagon: this.config.columns,\n      getFillColor: updateTriggers.getFillColor,\n      getLineColor: updateTriggers.getLineColor,\n      getElevation: updateTriggers.getElevation,\n      getFilterValue: gpuFilter.filterValueUpdateTriggers\n    };\n\n    const columnLayerTriggers = {\n      getCoverage: updateTriggers.getCoverage\n    };\n\n    const defaultLayerProps = this.getDefaultDeckLayerProps(opts);\n    const hoveredObject = this.hasHoveredObject(objectHovered);\n\n    // getPixelOffset with no radius\n    const radiusScale = 1.0;\n    const getRaidus = null;\n    const getPixelOffset = getTextOffsetByRadius(radiusScale, getRaidus, mapState);\n\n    const brushingProps = this.getBrushingExtensionProps(interactionConfig);\n    const extensions = [...defaultLayerProps.extensions, brushingExtension];\n    const sharedProps = {\n      getFilterValue: data.getFilterValue,\n      extensions,\n      filterRange: defaultLayerProps.filterRange,\n      visible: defaultLayerProps.visible,\n      ...brushingProps\n    };\n\n    return [\n      new H3HexagonLayer({\n        ...defaultLayerProps,\n        ...data,\n        ...brushingProps,\n        extensions,\n        wrapLongitude: false,\n\n        filled: visConfig.filled,\n        stroked: visConfig.outline,\n        lineWidthScale: visConfig.thickness,\n\n        getHexagon: (x: any) => x.id,\n\n        // coverage\n        coverage: config.coverageField ? 1 : visConfig.coverage,\n\n        // highlight\n        autoHighlight: visConfig.enable3d,\n        highlightColor: HIGHLIGH_COLOR_3D,\n\n        // elevation\n        extruded: visConfig.enable3d,\n        elevationScale: visConfig.elevationScale * eleZoomFactor,\n\n        // render\n        updateTriggers: h3HexagonLayerTriggers,\n        _subLayerProps: {\n          'hexagon-cell': {\n            type: EnhancedColumnLayer,\n            getCoverage: data.getCoverage,\n            updateTriggers: columnLayerTriggers,\n            strokeOpacity: visConfig.strokeOpacity\n          }\n        }\n      }),\n      // hover layer\n      ...(hoveredObject && !config.sizeField\n        ? [\n            new GeoJsonLayer({\n              ...this.getDefaultHoverLayerProps(),\n              visible: defaultLayerProps.visible,\n              data: [idToPolygonGeo(hoveredObject)],\n              getLineColor: config.highlightColor,\n              lineWidthScale: DEFAULT_LINE_SCALE_VALUE * zoomFactor,\n              wrapLongitude: false\n            })\n          ]\n        : []),\n      // text label layer\n      ...this.renderTextLabelLayer(\n        {\n          getPosition: data.getPosition,\n          sharedProps,\n          getPixelOffset,\n          updateTriggers\n        },\n        opts\n      )\n    ];\n  }\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {Base} from '../base';\n\nexport default class ScenegraphLayerIcon extends Component {\n  static propTypes = {\n    /** Set the height of the icon, ex. '16px' */\n    height: PropTypes.string,\n    colors: PropTypes.arrayOf(PropTypes.string)\n  };\n\n  static defaultProps = {\n    height: '16px',\n    predefinedClassName: 'scenegraph-layer-icon',\n    totalColor: 3\n  };\n\n  render() {\n    return (\n      <Base {...this.props}>\n        <g transform=\"translate(-20, -99)\" id=\"layer1\">\n          <g transform=\"matrix(0.26458333,0,0,0.26458333,-191.59545,42.388813)\" id=\"g3042\">\n            <ellipse\n              id=\"path2999\"\n              cx=\"931.42627\"\n              cy=\"431.70096\"\n              rx=\"62.283249\"\n              ry=\"3.8673975\"\n              transform=\"matrix(1.0332818,0,0,0.76491127,-30.674511,101.23938)\"\n            />\n            <g id=\"g7696\" transform=\"translate(525.68251,-207.68859)\">\n              <path\n                id=\"path7668\"\n                d=\"m 393.98828,480.0918 c -10.68594,0.80336 -21.57673,7.18633 -28.60547,16.5332 -1.00324,0.62224 -3.5626,2.19214 -5.32812,2.97656 -2.56279,1.13864 -5.17733,2.74246 -7.98047,2.66016 -1.90943,-0.0561 -3.53566,-1.4477 -5.32031,-2.12891 -4.53998,-1.72443 -9.58546,-5.01773 -13.83594,-1.06445 -1.06796,1.52824 -0.66318,3.76636 -0.26563,5.58789 0.61739,2.82883 2.18398,5.45191 3.99024,7.71484 2.3163,2.9019 8.51367,7.1836 8.51367,7.1836 0,0 -5.90097,1.56898 -7.18164,3.99023 -0.45797,0.86587 -0.24013,2.08692 0.26562,2.92578 1.09219,1.81161 3.30762,2.80797 5.32032,3.45899 4.02627,1.30232 8.51745,-0.13838 12.67968,0.625 1.31495,0.24117 2.49566,1.01912 3.81446,1.23828 0.60636,0.10077 1.45382,0.0869 2.07422,0.0664 1.72295,3.33668 4.08103,6.36876 7.15625,8.80468 0,0 -2.22425,5.11025 -3.72266,7.44532 -8.94053,13.58909 -24.40686,25.32714 -26.73438,43.99218 0.0505,12.91431 6.57316,25.37407 16.24415,32.82422 16.96401,13.06839 41.70379,15.60258 62.9414,12.85938 19.21169,-2.48152 39.64942,-10.88975 52.11328,-25.71875 8.24478,-9.80932 10.46731,-24.07583 10.82813,-36.88477 0.29354,-10.4205 0.0459,-22.87017 -7.10547,-30.45508 -2.17907,-2.31118 -6.14999,-3.78838 -9.13672,-2.70703 -3.82412,1.38452 -4.00601,7.16466 -6.76758,10.15039 -2.72735,2.94875 -5.62298,6.30576 -9.47461,7.44531 -2.38943,0.70694 -5.03518,-0.0449 -7.44531,-0.67773 -7.17835,-1.88468 -13.0331,-7.65187 -20.30469,-9.13672 -5.52704,-1.1286 -16.91992,0.33984 -16.91992,0.33984 l 6.0918,-3.38476 c 0,0 10.28858,-6.55346 13.53515,-11.50586 4.26486,-6.50575 7.12111,-14.56296 6.76758,-22.33398 -0.86105,-19.16955 -13.62762,-32.46378 -36.20703,-32.82422 z\"\n              />\n              <path\n                id=\"path7007\"\n                d=\"m 338.82884,592.10146 c 2.32751,-18.66504 17.79291,-30.40265 26.73344,-43.99174 1.49841,-2.33507 3.72237,-7.44474 3.72237,-7.44474 -9.72152,-7.70054 -12.30749,-21.34514 -10.15193,-31.80941 4.68877,-15.70277 19.97053,-27.64482 34.85497,-28.76382 22.57941,0.36044 35.34754,13.65505 36.20859,32.8246 0.35353,7.77102 -2.5031,15.82851 -6.76796,22.33426 -3.24657,4.9524 -13.53592,11.50552 -13.53592,11.50552 l -6.09116,3.38399 c 0,0 11.39286,-1.467 16.9199,-0.3384 7.27159,1.48485 13.12552,7.25206 20.30387,9.13674 2.41013,0.63278 5.05533,1.38374 7.44476,0.6768 3.85163,-1.13955 6.74779,-4.496 9.47514,-7.44475 2.76157,-2.98573 2.94384,-8.76743 6.76796,-10.15195 2.98673,-1.08135 6.95767,0.39601 9.13674,2.70719 7.15138,7.58491 7.3999,20.03532 7.10636,30.45582 -0.36082,12.80894 -2.58395,27.07605 -10.82873,36.88537 -12.46386,14.829 -32.9016,23.23673 -52.11329,25.71825 -21.23761,2.7432 -45.97799,0.20927 -62.942,-12.85912 -9.67099,-7.45015 -16.19266,-19.9103 -16.24311,-32.82461 z\"\n              />\n              <path\n                id=\"path7009\"\n                d=\"m 338.82929,592.10139 c 0.0504,12.91431 6.57076,25.37435 16.24175,32.82449 16.96402,13.0684 41.70592,15.60201 62.94353,12.85882 16.49647,-2.13082 33.88089,-8.64571 46.3608,-19.82886 -11.1421,7.01421 -24.41974,11.29014 -37.17209,12.93733 -21.23762,2.74319 -45.97952,0.20958 -62.94353,-12.85882 -9.67099,-7.45014 -16.19132,-13.1378 -16.24175,-26.05211 1.29011,-12.22719 20.91701,-42.26515 18.15858,-41.25572 -2.75843,1.00943 -27.16334,24.82083 -27.34729,41.37487 z\"\n              />\n              <path\n                id=\"path7019\"\n                d=\"m 377.39451,569.59751 c 5.20454,-4.30421 12.0709,-7.93589 18.81215,-7.52486 10.1405,0.6183 16.82414,12.34588 26.71325,14.67347 9.16319,2.15674 28.21822,-1.12873 28.21822,-1.12873 0,0 -5.26736,15.74679 -10.91105,21.44586 -7.06529,7.13462 -16.80867,12.27156 -26.71325,13.92098 -8.25808,1.37523 -17.24717,-0.21883 -24.83203,-3.76243 -6.52035,-3.04627 -12.9578,-7.86122 -16.17845,-14.29723 -2.08339,-4.16338 -2.25437,-9.40356 -1.12872,-13.92099 0.90003,-3.61206 3.15128,-7.0337 6.01988,-9.40607 z\"\n              />\n              <circle\n                transform=\"matrix(1.0416624,0,0,1.0416624,-10.12887,-52.065753)\"\n                r=\"8\"\n                cy=\"542.64807\"\n                cx=\"388.79144\"\n                id=\"path7031\"\n              />\n              <circle\n                transform=\"matrix(1.1485883,0,0,1.1485883,-51.700726,-110.08886)\"\n                id=\"circle7125\"\n                cx=\"384.53302\"\n                cy=\"599.31769\"\n                r=\"8\"\n              />\n              <path\n                id=\"path7130\"\n                d=\"m 362.8314,531.83625 c 0,0 -1.86312,0.10762 -2.77606,-0.0441 -1.3188,-0.21916 -2.50024,-0.99563 -3.81519,-1.2368 -4.16223,-0.76338 -8.65327,0.67681 -12.67954,-0.62551 -2.0127,-0.65102 -4.22868,-1.64695 -5.32087,-3.45856 -0.50575,-0.83886 -0.72402,-2.06062 -0.26605,-2.92649 1.28067,-2.42125 7.18318,-3.99065 7.18318,-3.99065 0,0 -6.1971,-4.28129 -8.5134,-7.18319 -1.80626,-2.26293 -3.37327,-4.88645 -3.99066,-7.71528 -0.39755,-1.82153 -0.80191,-4.05867 0.26605,-5.58691 4.25048,-3.95328 9.29431,-0.66025 13.83429,1.06418 1.78465,0.68121 3.41144,2.07223 5.32087,2.12834 2.80314,0.0823 5.41853,-1.5218 7.98132,-2.66044 2.14112,-0.9513 6.11901,-3.45857 6.11901,-3.45857 0,0 -2.51761,3.36571 -3.19252,5.32088 -0.6999,2.02751 -0.77532,4.24025 -0.79815,6.38505 -0.0274,2.58533 0.36815,5.1658 0.79815,7.71527 0.51514,3.05437 2.24347,5.95014 2.12834,9.0455 -0.0938,2.52426 -2.27877,7.22725 -2.27877,7.22725 z\"\n              />\n              <ellipse\n                transform=\"rotate(-70.917917)\"\n                ry=\"8.876749\"\n                rx=\"11.292704\"\n                cy=\"523.04565\"\n                cx=\"-351.69467\"\n                id=\"path7132\"\n              />\n              <ellipse\n                id=\"ellipse7134\"\n                cx=\"-371.65863\"\n                cy=\"539.63354\"\n                rx=\"6.4400997\"\n                ry=\"5.6922021\"\n                transform=\"matrix(0.3727878,-0.92791662,0.95838646,0.28547397,0,0)\"\n              />\n              <ellipse\n                transform=\"matrix(1.2858994,0,0,1.2858994,493.87481,-538.72884)\"\n                ry=\"1.7910415\"\n                rx=\"1.877719\"\n                cy=\"810.7829\"\n                cx=\"-89.047676\"\n                id=\"path7136\"\n              />\n              <path\n                transform=\"matrix(1.1485883,0,0,1.1485883,-51.700726,-110.08886)\"\n                id=\"path7198\"\n                d=\"m 383.88781,586.81856 c 0,0 4.75583,1.20253 7.03749,2.08594 2.91222,1.12756 8.43329,4.0806 8.43329,4.0806 l 2.17633,-1.0882 c 0,0 -6.13833,-5.82773 -10.06554,-6.2569 -5.46591,-0.59732 -7.58157,1.17856 -7.58157,1.17856 z\"\n              />\n              <path\n                transform=\"matrix(1.1485883,0,0,1.1485883,-51.700726,-110.08886)\"\n                id=\"path7248\"\n                d=\"m 397.87853,516.42095 v 2 c 11.54716,4.14107 17.99592,13.80846 18.56055,26.37891 9.2e-4,0.0202 9.5e-4,0.0404 0.002,0.0605 0.0245,-0.68856 0.0292,-1.37543 -0.002,-2.06054 -0.56463,-12.57045 -7.01339,-22.23784 -18.56055,-26.37891 z m -43.76562,25.92578 c -0.13422,1.35759 -0.19199,2.74885 -0.14649,4.16016 0.0423,-1.42272 0.18091,-2.81599 0.4043,-4.16016 z\"\n              />\n              <ellipse\n                transform=\"matrix(1.1796431,0.18084016,-0.22761203,0.93723889,-70.598803,-9.4836272)\"\n                ry=\"2.1433234\"\n                rx=\"6.0402751\"\n                cy=\"433.62253\"\n                cx=\"484.71768\"\n                id=\"path7276\"\n              />\n              <path\n                transform=\"matrix(1.1485883,0,0,1.1485883,-51.700726,-110.08886)\"\n                id=\"path7358\"\n                d=\"m 450.56176,570.21133 c 0.31422,-0.51687 0.84685,-1.08434 1.45172,-1.08879 0.8227,-0.006 1.51933,0.78122 1.99611,1.45172 1.20869,1.69982 1.81464,5.98831 1.81464,5.98831 0,0 -4.7514,-2.00855 -5.62539,-4.17367 -0.27546,-0.68237 -0.0193,-1.54878 0.36292,-2.17757 z\"\n              />\n              <path\n                transform=\"matrix(1.1485883,0,0,1.1485883,-51.700726,-110.08886)\"\n                id=\"path7436\"\n                d=\"m 399.55635,576.28702 c 0,0 5.77103,-0.38519 8.54224,0.27556 7.19511,1.71555 13.03674,7.22358 20.1156,9.36891 2.31239,0.7008 7.16446,1.10222 7.16446,1.10222 0,0 -9.1879,1.00957 -13.50225,-0.27555 -4.98282,-1.48424 -8.43433,-6.25057 -13.22669,-8.26669 -2.87487,-1.20944 -9.09336,-2.20445 -9.09336,-2.20445 z\"\n              />\n            </g>\n          </g>\n        </g>\n      </Base>\n    );\n  }\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React from 'react';\nimport styled from 'styled-components';\n\nexport const Table = styled.table`\n  width: 100%;\n  border-spacing: 0;\n\n  thead {\n    tr th {\n      background: ${props => props.theme.panelBackgroundLT};\n      color: ${props => props.theme.titleColorLT};\n      padding: 18px 12px;\n      text-align: start;\n    }\n  }\n\n  tbody {\n    tr td {\n      border-bottom: ${props => props.theme.panelBorderLT};\n      padding: 12px;\n    }\n  }\n`;\n\nconst StyledTitle = styled.div`\n  font-size: 20px;\n  letter-spacing: 1.25px;\n  margin: 18px 0 14px 0;\n  color: ${props => props.theme.titleColorLT};\n`;\n\nconst ExampleTable = () => (\n  <Table className=\"scenegraph-example-table\">\n    <thead>\n      <tr>\n        <th>point_lat</th>\n        <th>point_lng</th>\n        <th>alt</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>37.769897</td>\n        <td>-122.41168</td>\n        <td>0</td>\n      </tr>\n      <tr>\n        <td>37.806928</td>\n        <td>-122.40218</td>\n        <td>0</td>\n      </tr>\n      <tr>\n        <td>37.778564</td>\n        <td>-122.39096</td>\n        <td>1000</td>\n      </tr>\n      <tr>\n        <td>37.745995</td>\n        <td>-122.30220</td>\n        <td>2000</td>\n      </tr>\n      <tr>\n        <td>37.329841</td>\n        <td>-122.103847</td>\n        <td>3000</td>\n      </tr>\n    </tbody>\n  </Table>\n);\n\nconst ScenegraphInfoModalFactory = () => {\n  const ScenegraphInfoModal = () => (\n    <div className=\"scenegraph-info-modal\">\n      <div className=\"scenegraph-info-modal__description\">\n        <span>\n          In your csv you can specify points with optional altitude. The models will show at each\n          point you specify. You can use a sample model or upload one in{' '}\n        </span>\n        <code>glTF (GLB or Embedded)</code>\n        <span> format.</span>\n      </div>\n      <div className=\"scenegraph-info-modal__example\">\n        <StyledTitle>Example:</StyledTitle>\n        <ExampleTable />\n      </div>\n      <div className=\"scenegraph-info-modal__icons\">\n        <StyledTitle>Sample Models</StyledTitle>\n        <div>Duck</div>\n        <div>Use your own model</div>\n      </div>\n    </div>\n  );\n\n  return ScenegraphInfoModal;\n};\n\nexport default ScenegraphInfoModalFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {ScenegraphLayer as DeckScenegraphLayer} from '@deck.gl/mesh-layers';\nimport {load} from '@loaders.gl/core';\nimport {GLTFLoader} from '@loaders.gl/gltf';\n\nimport Layer, {LayerBaseConfig, LayerColumn} from '../base-layer';\nimport ScenegraphLayerIcon from './scenegraph-layer-icon';\nimport ScenegraphInfoModalFactory from './scenegraph-info-modal';\nimport {LAYER_VIS_CONFIGS, ColorRange} from '@kepler.gl/constants';\nimport {Merge, VisConfigColorRange, VisConfigNumber} from '@kepler.gl/types';\nimport {default as KeplerTable} from '@kepler.gl/table';\nimport {DataContainerInterface} from '@kepler.gl/utils';\n\nexport type ScenegraphLayerVisConfigSettings = {\n  opacity: VisConfigNumber;\n  colorRange: VisConfigColorRange;\n  sizeScale: VisConfigNumber;\n  angleX: VisConfigNumber;\n  angleY: VisConfigNumber;\n  angleZ: VisConfigNumber;\n};\n\nexport type ScenegraphLayerColumnsConfig = {\n  lat: LayerColumn;\n  lng: LayerColumn;\n  altitude?: LayerColumn;\n};\n\nexport type ScenegraphLayerVisConfig = {\n  opacity: number;\n  colorRange: ColorRange;\n  sizeScale: number;\n  angleX: number;\n  angleY: number;\n  angleZ: number;\n  scenegraph: string;\n};\n\nexport type ScenegraphLayerConfig = Merge<\n  LayerBaseConfig,\n  {columns: ScenegraphLayerColumnsConfig; visConfig: ScenegraphLayerVisConfig}\n>;\n\nexport type ScenegraphLayerData = {position: number[]; index: number};\n\nexport const scenegraphRequiredColumns: ['lat', 'lng'] = ['lat', 'lng'];\nexport const scenegraphOptionalColumns: ['altitude'] = ['altitude'];\n\nfunction fetch(url, {propName, layer}: {propName?: string; layer?: any} = {}) {\n  if (propName === 'scenegraph') {\n    return load(url, GLTFLoader, layer.getLoadOptions());\n  }\n\n  return fetch(url).then(response => response.json());\n}\n\nexport const scenegraphPosAccessor = ({lat, lng, altitude}: ScenegraphLayerColumnsConfig) => (\n  dc: DataContainerInterface\n) => d => [\n  dc.valueAt(d.index, lng.fieldIdx),\n  dc.valueAt(d.index, lat.fieldIdx),\n  altitude && altitude.fieldIdx > -1 ? dc.valueAt(d.index, altitude.fieldIdx) : 0\n];\n\nexport const scenegraphVisConfigs: {\n  opacity: 'opacity';\n  colorRange: 'colorRange';\n  //\n  sizeScale: 'sizeScale';\n  angleX: VisConfigNumber;\n  angleY: VisConfigNumber;\n  angleZ: VisConfigNumber;\n} = {\n  opacity: 'opacity',\n  colorRange: 'colorRange',\n  //\n  sizeScale: 'sizeScale',\n  angleX: {\n    ...LAYER_VIS_CONFIGS.angle,\n    property: 'angleX',\n    label: 'angle X'\n  },\n  angleY: {\n    ...LAYER_VIS_CONFIGS.angle,\n    property: 'angleY',\n    label: 'angle Y'\n  },\n  angleZ: {\n    ...LAYER_VIS_CONFIGS.angle,\n    property: 'angleZ',\n    defaultValue: 90,\n    label: 'angle Z'\n  }\n};\n\nconst DEFAULT_MODEL =\n  'https://raw.githubusercontent.com/KhronosGroup/glTF-Sample-Models/master/2.0/Duck/glTF-Binary/Duck.glb';\nconst DEFAULT_TRANSITION: [0, 0, 0] = [0, 0, 0];\nconst DEFAULT_SCALE: [1, 1, 1] = [1, 1, 1];\nconst DEFAULT_COLOR: [255, 255, 255, 255] = [255, 255, 255, 255];\n\nexport default class ScenegraphLayer extends Layer {\n  declare visConfigSettings: ScenegraphLayerVisConfigSettings;\n  declare config: ScenegraphLayerConfig;\n\n  _layerInfoModal: () => JSX.Element;\n\n  constructor(props) {\n    super(props);\n\n    this.registerVisConfig(scenegraphVisConfigs);\n    this.getPositionAccessor = (dataContainer: DataContainerInterface) =>\n      scenegraphPosAccessor(this.config.columns)(dataContainer);\n\n    // prepare layer info modal\n    this._layerInfoModal = ScenegraphInfoModalFactory();\n  }\n\n  get type(): '3D' {\n    return '3D';\n  }\n\n  get requiredLayerColumns() {\n    return scenegraphRequiredColumns;\n  }\n\n  get optionalColumns() {\n    return scenegraphOptionalColumns;\n  }\n\n  get columnPairs() {\n    return this.defaultPointColumnPairs;\n  }\n\n  get layerIcon() {\n    return ScenegraphLayerIcon;\n  }\n\n  get layerInfoModal() {\n    return {\n      id: 'scenegraphInfo',\n      template: this._layerInfoModal,\n      modalProps: {\n        title: 'How to use Scenegraph'\n      }\n    };\n  }\n\n  calculateDataAttribute({dataContainer, filteredIndex}: KeplerTable, getPosition) {\n    const data: ScenegraphLayerData[] = [];\n\n    for (let i = 0; i < filteredIndex.length; i++) {\n      const index = filteredIndex[i];\n      const pos: number[] = getPosition({index});\n\n      // if doesn't have point lat or lng, do not add the point\n      // deck.gl can't handle position = null\n      if (pos.every(Number.isFinite)) {\n        data.push({\n          position: pos,\n          index\n        });\n      }\n    }\n    return data;\n  }\n\n  formatLayerData(datasets, oldLayerData) {\n    if (this.config.dataId === null) {\n      return {};\n    }\n    const {gpuFilter, dataContainer} = datasets[this.config.dataId];\n    const {data} = this.updateData(datasets, oldLayerData);\n    const getPosition = this.getPositionAccessor(dataContainer);\n    return {\n      data,\n      getPosition,\n      getFilterValue: gpuFilter.filterValueAccessor(dataContainer)()\n    };\n  }\n\n  updateLayerMeta(dataContainer, getPosition) {\n    const bounds = this.getPointsBounds(dataContainer, getPosition);\n    this.updateMeta({bounds});\n  }\n\n  renderLayer(opts) {\n    const {data, gpuFilter} = opts;\n\n    const {\n      visConfig: {sizeScale = 1, angleX = 0, angleY = 0, angleZ = 90}\n    } = this.config;\n\n    return [\n      new DeckScenegraphLayer({\n        ...this.getDefaultDeckLayerProps(opts),\n        // gpu data filtering is not supported at the moment in scenegraphLayer https://github.com/visgl/deck.gl/issues/8099\n        extensions: [],\n        ...data,\n        fetch,\n        scenegraph: this.config.visConfig.scenegraph || DEFAULT_MODEL,\n        sizeScale,\n        getTranslation: DEFAULT_TRANSITION,\n        getScale: DEFAULT_SCALE,\n        getOrientation: [angleX, angleY, angleZ],\n        getColor: DEFAULT_COLOR,\n        // parameters\n        parameters: {depthTest: true, blend: false},\n        // update triggers\n        updateTriggers: {\n          getOrientation: {angleX, angleY, angleZ},\n          getPosition: this.config.columns,\n          getFilterValue: gpuFilter.filterValueUpdateTriggers\n        }\n      })\n    ];\n  }\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {Base} from '../base';\n\nexport default class TripLayerIcon extends Component {\n  static propTypes = {\n    /** Set the height of the icon, ex. '16px' */\n    height: PropTypes.string,\n    colors: PropTypes.arrayOf(PropTypes.string)\n  };\n\n  static defaultProps = {\n    size: 'tiny',\n    height: '16px',\n    predefinedClassName: 'trip-layer-icon'\n  };\n\n  render() {\n    return (\n      <Base {...this.props}>\n        <g clipPath=\"url(#clip0)\" className=\"cr1\">\n          <path d=\"M53.025 4.85005C50.25 2.07505 45.75 2.07505 42.975 4.85005C40.2 7.62505 40.2 12.2 42.975 14.975L48 20L53.025 14.9C55.8 12.2 55.8 7.62505 53.025 4.85005ZM48 11.375C47.175 11.375 46.5 10.7 46.5 9.87505C46.5 9.05005 47.175 8.37505 48 8.37505C48.825 8.37505 49.5 9.05005 49.5 9.87505C49.5 10.7 48.825 11.375 48 11.375Z\" />\n        </g>\n        <g clipPath=\"url(#clip1)\" className=\"cr2\">\n          <path d=\"M20.025 36.85C17.25 34.075 12.75 34.075 9.97502 36.85C7.20002 39.625 7.20002 44.2 9.97502 46.975L15 52L20.025 46.9C22.8 44.2 22.8 39.625 20.025 36.85ZM15 43.375C14.175 43.375 13.5 42.7 13.5 41.875C13.5 41.05 14.175 40.375 15 40.375C15.825 40.375 16.5 41.05 16.5 41.875C16.5 42.7 15.825 43.375 15 43.375Z\" />\n        </g>\n        <path\n          className=\"cr3\"\n          d=\"M45.9943 19.8697C46.0661 20.6951 45.4552 21.4223 44.6299 21.4941L34.782 22.3504L38.1515 40.1604L17.8748 54.7185C17.2019 55.2016 16.2647 55.0478 15.7815 54.3748C15.2984 53.7019 15.4522 52.7647 16.1252 52.2815L34.8483 38.8389L31.2177 19.6491L44.37 18.5053C45.1953 18.4336 45.9225 19.0444 45.9943 19.8697Z\"\n        />\n        <defs>\n          <clipPath id=\"clip0\">\n            <rect width=\"18\" height=\"18\" transform=\"translate(39 2)\" />\n          </clipPath>\n          <clipPath id=\"clip1\">\n            <rect width=\"18\" height=\"18\" transform=\"translate(6 34)\" />\n          </clipPath>\n        </defs>\n      </Base>\n    );\n  }\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {Analyzer, DATA_TYPES} from 'type-analyzer';\n\nimport {Field} from '@kepler.gl/types';\n\nimport {parseGeoJsonRawFeature, getGeojsonFeatureTypes} from '../geojson-layer/geojson-utils';\nimport {\n  DataContainerInterface,\n  getSampleContainerData,\n  notNullorUndefined,\n  timeToUnixMilli\n} from '@kepler.gl/utils';\nimport {Feature} from '@turf/helpers';\nimport {GeoJsonProperties, Geometry} from 'geojson';\n\n/**\n * Parse geojson from string\n * @param {array} samples feature object values\n * @returns whether the geometry coordinates has length of 4\n */\nexport function coordHasLength4(samples): boolean {\n  let hasLength4 = true;\n  for (let i = 0; i < samples.length; i += 1) {\n    hasLength4 =\n      Array.isArray(samples[i]?.geometry?.coordinates) &&\n      !samples[i].geometry.coordinates.find(c => c.length < 4);\n\n    if (!hasLength4) {\n      break;\n    }\n  }\n  return hasLength4;\n}\n\n/**\n * Check whether geojson linestring's 4th coordinate is 1) not timestamp 2) unix time stamp 3) real date time\n * @param timestamps array to be tested if its elements are timestamp\n * @returns the type of timestamp: unix/datetime/invalid(not timestamp)\n */\nexport function containValidTime(timestamps: string[]): Field | null {\n  const formattedTimeStamps = timestamps.map(ts => ({ts}));\n  const ignoredDataTypes = Object.keys(DATA_TYPES).filter(\n    type => ![DATA_TYPES.TIME, DATA_TYPES.DATETIME].includes(type)\n  );\n\n  // ignore all types but TIME to improve performance\n  const analyzedType = Analyzer.computeColMeta(formattedTimeStamps, [], {ignoredDataTypes})[0];\n\n  if (!analyzedType || analyzedType.category !== 'TIME') {\n    return null;\n  }\n  return analyzedType;\n}\n\n/**\n * Check if geojson features are trip layer animatable by meeting 3 conditions\n * @param dataContainer geojson feature objects container\n * @param {object} field array of geojson feature objects\n * @returns whether it is trip layer animatable\n */\nexport function isTripGeoJsonField(dataContainer: DataContainerInterface, field): boolean {\n  if (dataContainer.numRows() < 1) {\n    return false;\n  }\n\n  const maxCount = 10000;\n  const sampleRawFeatures =\n    dataContainer.numRows() > maxCount\n      ? getSampleContainerData(dataContainer, maxCount)\n      : dataContainer;\n\n  const features: Feature<Geometry, GeoJsonProperties>[] = sampleRawFeatures\n    .mapIndex(field.valueAccessor)\n    .map(parseGeoJsonRawFeature)\n    .filter(notNullorUndefined);\n  const featureTypes = getGeojsonFeatureTypes(features);\n\n  // condition 1: contain line string\n  if (!featureTypes.line) {\n    return false;\n  }\n\n  // condition 2:sample line strings contain 4 coordinates\n  if (!coordHasLength4(features)) {\n    return false;\n  }\n\n  // condition 3:the 4th coordinate of the first feature line strings is valid time\n  // @ts-expect-error\n  const tsHolder = features[0].geometry.coordinates.map(coord => coord[3]);\n\n  return Boolean(containValidTime(tsHolder));\n}\n\n/**\n * Get unix timestamp from animatable geojson for deck.gl trip layer\n * @param dataToFeature array of geojson feature objects, can be null\n * @returns\n */\nexport function parseTripGeoJsonTimestamp(dataToFeature: any[]) {\n  // Analyze type based on coordinates of the 1st lineString\n  // select a sample trip to analyze time format\n  const empty = {dataToTimeStamp: [], animationDomain: null};\n  const sampleTrip = dataToFeature.find(f => f?.geometry?.coordinates?.[0]?.length > 3);\n\n  // if no valid geometry\n  if (!sampleTrip) {\n    return empty;\n  }\n\n  const analyzedType = containValidTime(sampleTrip.geometry.coordinates.map(coord => coord[3]));\n\n  if (!analyzedType) {\n    return empty;\n  }\n\n  const {format} = analyzedType;\n  const getTimeValue = coord =>\n    coord && notNullorUndefined(coord[3]) ? timeToUnixMilli(coord[3], format) : null;\n\n  const dataToTimeStamp: number[][] = dataToFeature.map(f =>\n    f && f.geometry && Array.isArray(f.geometry.coordinates)\n      ? f.geometry.coordinates.map(getTimeValue)\n      : null\n  );\n\n  const animationDomain = getAnimationDomainFromTimestamps(dataToTimeStamp);\n\n  return {dataToTimeStamp, animationDomain};\n}\n\nfunction findMinFromSorted(list: number[]) {\n  // check if list is null since the default value [] will only be applied when the param is undefined\n  return list?.find(d => notNullorUndefined(d) && Number.isFinite(d)) || null;\n}\n\nfunction findMaxFromSorted(list: number[] = []) {\n  let i = list.length - 1;\n  while (i > 0) {\n    if (notNullorUndefined(list[i]) && Number.isFinite(list[i])) {\n      return list[i];\n    }\n    i--;\n  }\n  return null;\n}\n\nexport function getAnimationDomainFromTimestamps(dataToTimeStamp: number[][] = []) {\n  return dataToTimeStamp.reduce(\n    (accu: [number, number], tss) => {\n      const tsMin = findMinFromSorted(tss);\n      const tsMax = findMaxFromSorted(tss);\n      if (\n        notNullorUndefined(tsMin) &&\n        notNullorUndefined(tsMax) &&\n        Number.isFinite(tsMin) &&\n        Number.isFinite(tsMax)\n      ) {\n        accu[0] = Math.min(accu[0], tsMin);\n        accu[1] = Math.max(accu[1], tsMax);\n      }\n      return accu;\n    },\n    [Infinity, -Infinity]\n  );\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport {FormattedMessage} from '@kepler.gl/localization';\n\nconst StyledCode = styled.code`\n  color: ${props => props.theme.titleColorLT};\n`;\n\nconst StyledTitle = styled.div`\n  font-size: 20px;\n  letter-spacing: 1.25px;\n  margin: 18px 0 14px 0;\n  color: ${props => props.theme.titleColorLT};\n`;\n\nconst TripInfoModalFactory = (svgIcons = []) => {\n  const TripInfoModal = () => (\n    <div className=\"trip-info-modal\">\n      <div className=\"trip-info-modal__description\">\n        <p>\n          <FormattedMessage id={'modal.tripInfo.description1'} />\n          <code>\n            <FormattedMessage id={'modal.tripInfo.code'} />\n          </code>\n          <FormattedMessage id={'modal.tripInfo.description2'} />\n        </p>\n      </div>\n      <div className=\"trip-info-modal__example\">\n        <StyledTitle>\n          <FormattedMessage id={'modal.tripInfo.example'} />\n        </StyledTitle>\n        <pre>\n          <StyledCode>\n            {`\n              {\n                \"type\": \"FeatureCollection\",\n                \"features\": [\n                  {\n                    \"type\": \"Feature\",\n                    \"properties\": { \"vendor\":  \"A\",\n                    \"vol\":20},\n                    \"geometry\": {\n                      \"type\": \"LineString\",\n                      \"coordinates\": [\n                        [-74.20986, 40.81773, 0, 1564184363],\n                        [-74.20987, 40.81765, 0, 1564184396],\n                        [-74.20998, 40.81746, 0, 1564184409]\n                      ]\n                    }\n                  }\n                ]\n              }\n            `}\n          </StyledCode>\n        </pre>\n      </div>\n    </div>\n  );\n  return TripInfoModal;\n};\n\nexport default TripInfoModalFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport memoize from 'lodash.memoize';\nimport uniq from 'lodash.uniq';\nimport Layer, {LayerBaseConfig, LayerColumn} from '../base-layer';\nimport {TripsLayer as DeckGLTripsLayer} from '@deck.gl/geo-layers';\n\nimport {GEOJSON_FIELDS, ColorRange} from '@kepler.gl/constants';\nimport TripLayerIcon from './trip-layer-icon';\n\nimport {\n  getGeojsonDataMaps,\n  getGeojsonBounds,\n  getGeojsonFeatureTypes,\n  GeojsonDataMaps\n} from '../geojson-layer/geojson-utils';\n\nimport {isTripGeoJsonField, parseTripGeoJsonTimestamp} from './trip-utils';\nimport TripInfoModalFactory from './trip-info-modal';\nimport {Merge, VisConfigColorRange, VisConfigNumber, VisConfigRange} from '@kepler.gl/types';\nimport {default as KeplerTable} from '@kepler.gl/table';\nimport {DataContainerInterface} from '@kepler.gl/utils';\n\nexport type TripLayerVisConfigSettings = {\n  opacity: VisConfigNumber;\n  thickness: VisConfigNumber;\n  colorRange: VisConfigColorRange;\n  trailLength: VisConfigNumber;\n  sizeRange: VisConfigRange;\n};\n\nexport type TripLayerColumnsConfig = {\n  geojson: LayerColumn;\n};\n\nexport type TripLayerVisConfig = {\n  opacity: number;\n  thickness: number;\n  colorRange: ColorRange;\n  trailLength: number;\n  sizeRange: [number, number];\n};\n\nexport type TripLayerConfig = Merge<\n  LayerBaseConfig,\n  {columns: TripLayerColumnsConfig; visConfig: TripLayerVisConfig}\n>;\n\nexport type TripLayerMeta = {\n  getFeature: any;\n};\n\nconst zoomFactorValue = 8;\n\nexport const defaultThickness = 0.5;\nexport const defaultLineWidth = 1;\n\nexport const tripVisConfigs: {\n  opacity: 'opacity';\n  thickness: VisConfigNumber;\n  colorRange: 'colorRange';\n  trailLength: 'trailLength';\n  sizeRange: 'strokeWidthRange';\n} = {\n  opacity: 'opacity',\n  thickness: {\n    type: 'number',\n    defaultValue: defaultThickness,\n    label: 'Stroke Width',\n    isRanged: false,\n    range: [0, 100],\n    step: 0.1,\n    group: 'stroke',\n    property: 'thickness'\n  },\n  colorRange: 'colorRange',\n  trailLength: 'trailLength',\n  sizeRange: 'strokeWidthRange'\n};\n\nexport const geoJsonRequiredColumns: ['geojson'] = ['geojson'];\nexport const featureAccessor = ({geojson}: TripLayerColumnsConfig) => (\n  dc: DataContainerInterface\n) => d => dc.valueAt(d.index, geojson.fieldIdx);\nexport const featureResolver = ({geojson}: TripLayerColumnsConfig) => geojson.fieldIdx;\n\nexport default class TripLayer extends Layer {\n  declare visConfigSettings: TripLayerVisConfigSettings;\n  declare config: TripLayerConfig;\n  declare meta: TripLayerMeta;\n\n  dataToFeature: GeojsonDataMaps;\n  dataToTimeStamp: {}[];\n  getFeature: (columns: TripLayerColumnsConfig) => (dataContainer: DataContainerInterface) => any;\n  _layerInfoModal: () => JSX.Element;\n\n  constructor(props) {\n    super(props);\n\n    this.dataToFeature = [];\n    this.dataToTimeStamp = [];\n    this.registerVisConfig(tripVisConfigs);\n    this.getFeature = memoize(featureAccessor, featureResolver);\n    this._layerInfoModal = TripInfoModalFactory();\n  }\n\n  static get type(): 'trip' {\n    return 'trip';\n  }\n  get type() {\n    return TripLayer.type;\n  }\n\n  get name(): 'Trip' {\n    return 'Trip';\n  }\n\n  get layerIcon() {\n    return TripLayerIcon;\n  }\n\n  get columnPairs() {\n    return this.defaultPointColumnPairs;\n  }\n\n  get requiredLayerColumns() {\n    return geoJsonRequiredColumns;\n  }\n\n  get visualChannels() {\n    const visualChannels = super.visualChannels;\n\n    return {\n      ...visualChannels,\n      color: {\n        ...visualChannels.color,\n        accessor: 'getColor',\n        nullValue: visualChannels.color.nullValue,\n        getAttributeValue: config => d => d.properties.lineColor || config.color,\n        // used this to get updateTriggers\n        defaultValue: config => config.color\n      },\n      size: {\n        ...visualChannels.size,\n        property: 'stroke',\n        accessor: 'getWidth',\n        condition: config => config.visConfig.stroked,\n        nullValue: 0,\n        getAttributeValue: () => d => d.properties.lineWidth || defaultLineWidth\n      }\n    };\n  }\n\n  get animationDomain() {\n    return this.config.animation.domain;\n  }\n\n  get layerInfoModal() {\n    return {\n      id: 'iconInfo',\n      template: this._layerInfoModal,\n      modalProps: {\n        title: 'modal.tripInfo.title'\n      }\n    };\n  }\n\n  getPositionAccessor(dataContainer: DataContainerInterface) {\n    return this.getFeature(this.config.columns)(dataContainer);\n  }\n\n  static findDefaultLayerProps(\n    {label, fields = [], dataContainer, id}: KeplerTable,\n    foundLayers: any[]\n  ) {\n    const geojsonColumns = fields.filter(f => f.type === 'geojson').map(f => f.name);\n\n    const defaultColumns = {\n      geojson: uniq([...GEOJSON_FIELDS.geojson, ...geojsonColumns])\n    };\n\n    const geoJsonColumns = this.findDefaultColumnField(defaultColumns, fields);\n\n    const tripGeojsonColumns = (geoJsonColumns || []).filter(col =>\n      isTripGeoJsonField(dataContainer, fields[col.geojson.fieldIdx])\n    );\n\n    if (tripGeojsonColumns.length) {\n      return {\n        props: tripGeojsonColumns.map(columns => ({\n          label: (typeof label === 'string' && label.replace(/\\.[^/.]+$/, '')) || this.type,\n          columns,\n          isVisible: true\n        })),\n\n        // if a geojson layer is created from this column, delete it\n        foundLayers: foundLayers.filter(\n          prop =>\n            prop.type !== 'geojson' ||\n            prop.dataId !== id ||\n            !tripGeojsonColumns.find(c => prop.columns.geojson.name === c.geojson.name)\n        )\n      };\n    }\n\n    return {props: []};\n  }\n\n  getDefaultLayerConfig(props) {\n    return {\n      ...super.getDefaultLayerConfig(props),\n      animation: {\n        enabled: true,\n        domain: null\n      }\n    };\n  }\n\n  getHoverData(object, dataContainer) {\n    // index for dataContainer is saved to feature.properties\n    return dataContainer.row(object.properties.index);\n  }\n\n  calculateDataAttribute({dataContainer, filteredIndex}, getPosition) {\n    return filteredIndex\n      .map(i => this.dataToFeature[i])\n      .filter(d => d && d.geometry.type === 'LineString');\n  }\n\n  formatLayerData(datasets, oldLayerData) {\n    if (this.config.dataId === null) {\n      return {};\n    }\n    // to-do: parse segment from dataContainer\n    const {dataContainer, gpuFilter} = datasets[this.config.dataId];\n    const {data} = this.updateData(datasets, oldLayerData);\n\n    const customFilterValueAccessor = (dc, f, fieldIndex) => {\n      return dc.valueAt(f.properties.index, fieldIndex);\n    };\n    const indexAccessor = f => f.properties.index;\n\n    const dataAccessor = dc => d => ({index: d.properties.index});\n    const accessors = this.getAttributeAccessors({dataAccessor, dataContainer});\n\n    return {\n      data,\n      getFilterValue: gpuFilter.filterValueAccessor(dataContainer)(\n        indexAccessor,\n        customFilterValueAccessor\n      ),\n      getPath: d => d.geometry.coordinates,\n      getTimestamps: d => this.dataToTimeStamp[d.properties.index],\n      ...accessors\n    };\n  }\n\n  updateAnimationDomain(domain) {\n    this.updateLayerConfig({\n      animation: {\n        ...this.config.animation,\n        domain\n      }\n    });\n  }\n\n  updateLayerMeta(dataContainer) {\n    const getFeature = this.getPositionAccessor(dataContainer);\n    if (getFeature === this.meta.getFeature) {\n      // TODO: revisit this after gpu filtering\n      return;\n    }\n\n    this.dataToFeature = getGeojsonDataMaps(dataContainer, getFeature);\n\n    const {dataToTimeStamp, animationDomain} = parseTripGeoJsonTimestamp(this.dataToFeature);\n\n    this.dataToTimeStamp = dataToTimeStamp;\n    this.updateAnimationDomain(animationDomain);\n\n    // get bounds from features\n    const bounds = getGeojsonBounds(this.dataToFeature);\n\n    // keep a record of what type of geometry the collection has\n    const featureTypes = getGeojsonFeatureTypes(this.dataToFeature);\n\n    this.updateMeta({bounds, featureTypes, getFeature});\n  }\n\n  setInitialLayerConfig({dataContainer}) {\n    if (!dataContainer.numRows()) {\n      return this;\n    }\n    this.updateLayerMeta(dataContainer);\n    return this;\n  }\n\n  renderLayer(opts) {\n    const {data, gpuFilter, mapState, animationConfig} = opts;\n    const {visConfig} = this.config;\n    const zoomFactor = this.getZoomFactor(mapState);\n    const isValidTime =\n      animationConfig &&\n      Array.isArray(animationConfig.domain) &&\n      animationConfig.domain.every(Number.isFinite) &&\n      Number.isFinite(animationConfig.currentTime);\n\n    if (!isValidTime) {\n      return [];\n    }\n\n    const domain0 = animationConfig.domain?.[0];\n\n    const updateTriggers = {\n      ...this.getVisualChannelUpdateTriggers(),\n      getTimestamps: {\n        columns: this.config.columns,\n        domain0\n      },\n      getFilterValue: gpuFilter.filterValueUpdateTriggers\n    };\n    const defaultLayerProps = this.getDefaultDeckLayerProps(opts);\n\n    return [\n      new DeckGLTripsLayer({\n        ...defaultLayerProps,\n        ...data,\n        getTimestamps: d => (data.getTimestamps(d) || []).map(ts => ts - domain0),\n        widthScale: this.config.visConfig.thickness * zoomFactor * zoomFactorValue,\n        capRounded: true,\n        jointRounded: true,\n        wrapLongitude: false,\n        parameters: {\n          depthTest: mapState.dragRotate,\n          depthMask: false\n        },\n        trailLength: visConfig.trailLength * 1000,\n        currentTime: animationConfig.currentTime - domain0,\n        updateTriggers\n      })\n    ];\n  }\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {Base} from '../base';\n\nclass S2LayerIcon extends Component {\n  static propTypes = {\n    /** Set the height of the icon, ex. '16px' */\n    height: PropTypes.string,\n    colors: PropTypes.arrayOf(PropTypes.string)\n  };\n  static defaultProps = {\n    height: '18px',\n    predefinedClassName: 's2-layer-icon'\n  };\n\n  render() {\n    return (\n      <Base {...this.props}>\n        <path d=\"M14.76,58,15,20.54,50.06,6.75V44Zm4-34.86L18.6,52.38l27.66-11V12.33Z\" />\n        <path d=\"M27.21,38.58a7.38,7.38,0,0,1-3.62-.9l.3-2a6.49,6.49,0,0,0,3.3.9c1.49,0,2.18-.59,2.18-1.63,0-2.26-5.71-1.28-5.71-5.3,0-2,1.26-3.54,4.16-3.54a8.38,8.38,0,0,1,3.28.64l-.29,1.9a8.41,8.41,0,0,0-2.88-.54c-1.63,0-2.14.66-2.14,1.42,0,2.19,5.71,1.18,5.71,5.27C31.5,37.16,29.93,38.58,27.21,38.58Z\" />\n        <path d=\"M36.17,36.36v0h5.06l0,2H33.32V36.9c3-2.88,5.67-5.09,5.67-7,0-1-.64-1.67-2.19-1.67a5,5,0,0,0-3,1.1l-.53-1.79a6.31,6.31,0,0,1,3.91-1.28c2.66,0,4,1.34,4,3.41C41.21,31.94,39.13,33.89,36.17,36.36Z\" />\n      </Base>\n    );\n  }\n}\n\nexport default S2LayerIcon;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport Long from 'long';\nimport {S2} from 's2-geometry';\n\nconst MAXIMUM_TOKEN_LENGTH = 16;\n\n/**\n * Retrieve S2 geometry center\n * @param s2Token string | number\n * @return {*[]}\n */\nexport function getS2Center(s2Token) {\n  const paddedToken = s2Token.toString().padEnd(MAXIMUM_TOKEN_LENGTH, '0');\n  const s2Id = Long.fromString(paddedToken, MAXIMUM_TOKEN_LENGTH);\n  const {lat, lng} = S2.idToLatLng(s2Id.toString());\n  return [lng, lat];\n}\n\nconst re = new RegExp('^[0-9a-z]*$', 'g');\n// simple test to see if token only contains numbers and letters\nexport function validS2Token(token) {\n  return typeof token === 'string' && Boolean(token.match(re));\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {S2Layer} from '@deck.gl/geo-layers';\nimport {\n  HIGHLIGH_COLOR_3D,\n  CHANNEL_SCALES,\n  ColorRange,\n  LAYER_VIS_CONFIGS\n} from '@kepler.gl/constants';\nimport {default as KeplerTable} from '@kepler.gl/table';\nimport Layer, {\n  LayerBaseConfig,\n  LayerBaseConfigPartial,\n  LayerColorConfig,\n  LayerColumn,\n  LayerSizeConfig,\n  LayerStrokeColorConfig,\n  LayerHeightConfig\n} from '../base-layer';\nimport {\n  Merge,\n  RGBColor,\n  VisConfigBoolean,\n  VisConfigColorRange,\n  VisConfigColorSelect,\n  VisConfigNumber,\n  VisConfigRange\n} from '@kepler.gl/types';\nimport S2LayerIcon from './s2-layer-icon';\nimport {getS2Center, validS2Token} from './s2-utils';\nimport {DataContainerInterface, createDataContainer} from '@kepler.gl/utils';\n\nexport type S2GeometryLayerVisConfigSettings = {\n  opacity: VisConfigNumber;\n  colorRange: VisConfigColorRange;\n  filled: VisConfigBoolean;\n  thickness: VisConfigNumber;\n  strokeColor: VisConfigColorSelect;\n  strokeColorRange: VisConfigColorRange;\n  sizeRange: VisConfigRange;\n  stroked: VisConfigBoolean;\n  enable3d: VisConfigBoolean;\n  elevationScale: VisConfigNumber;\n  enableElevationZoomFactor: VisConfigBoolean;\n  heightRange: VisConfigRange;\n  wireframe: VisConfigBoolean;\n};\n\nexport type S2GeometryLayerColumnsConfig = {\n  token: LayerColumn;\n};\n\nexport type S2GeometryLayerVisConfig = {\n  opacity: number;\n  colorRange: ColorRange;\n  filled: boolean;\n  thickness: number;\n  strokeColor: RGBColor;\n  strokeColorRange: ColorRange;\n  sizeRange: [number, number];\n  stroked: boolean;\n  enable3d: boolean;\n  elevationScale: number;\n  enableElevationZoomFactor: boolean;\n  heightRange: [number, number];\n  wireframe: boolean;\n};\n\nexport type S2GeometryLayerVisualChannelConfig = LayerColorConfig &\n  LayerSizeConfig &\n  LayerStrokeColorConfig &\n  LayerHeightConfig;\nexport type S2GeometryLayerConfig = Merge<\n  LayerBaseConfig,\n  {columns: S2GeometryLayerColumnsConfig; visConfig: S2GeometryLayerVisConfig}\n> &\n  S2GeometryLayerVisualChannelConfig;\n\nexport type S2GeometryLayerData = {\n  index: number;\n  token: any;\n};\n\nconst zoomFactorValue = 8;\n\nexport const S2_TOKEN_FIELDS: {\n  token: ['s2', 's2_token'];\n} = {\n  token: ['s2', 's2_token']\n};\n\nexport const s2RequiredColumns: ['token'] = ['token'];\nexport const S2TokenAccessor = ({token}: S2GeometryLayerColumnsConfig) => (\n  dc: DataContainerInterface\n) => d => dc.valueAt(d.index, token.fieldIdx);\n\nexport const defaultElevation = 500;\nexport const defaultLineWidth = 1;\n\nexport const S2VisConfigs: {\n  // Filled color\n  opacity: 'opacity';\n  colorRange: 'colorRange';\n  filled: VisConfigBoolean;\n\n  // stroke\n  thickness: VisConfigNumber;\n  strokeColor: 'strokeColor';\n  strokeColorRange: 'strokeColorRange';\n  sizeRange: 'strokeWidthRange';\n  stroked: 'stroked';\n\n  // height\n  enable3d: 'enable3d';\n  elevationScale: 'elevationScale';\n  enableElevationZoomFactor: 'enableElevationZoomFactor';\n  heightRange: 'elevationRange';\n\n  // wireframe\n  wireframe: 'wireframe';\n} = {\n  // Filled color\n  opacity: 'opacity',\n  colorRange: 'colorRange',\n  filled: {\n    ...LAYER_VIS_CONFIGS.filled,\n    type: 'boolean',\n    label: 'Fill Color',\n    defaultValue: true,\n    property: 'filled'\n  },\n\n  // stroke\n  thickness: {\n    ...LAYER_VIS_CONFIGS.thickness,\n    defaultValue: 0.5\n  },\n  strokeColor: 'strokeColor',\n  strokeColorRange: 'strokeColorRange',\n  sizeRange: 'strokeWidthRange',\n  stroked: 'stroked',\n\n  // height\n  enable3d: 'enable3d',\n  elevationScale: 'elevationScale',\n  enableElevationZoomFactor: 'enableElevationZoomFactor',\n  heightRange: 'elevationRange',\n\n  // wireframe\n  wireframe: 'wireframe'\n};\n\nexport default class S2GeometryLayer extends Layer {\n  dataToFeature: any;\n  declare visConfigSettings: S2GeometryLayerVisConfigSettings;\n  declare config: S2GeometryLayerConfig;\n  constructor(props) {\n    super(props);\n    this.registerVisConfig(S2VisConfigs);\n    this.getPositionAccessor = (dataContainer: DataContainerInterface) =>\n      S2TokenAccessor(this.config.columns)(dataContainer);\n  }\n\n  get type(): 's2' {\n    return 's2';\n  }\n\n  get name(): 'S2' {\n    return 'S2';\n  }\n\n  get requiredLayerColumns() {\n    return s2RequiredColumns;\n  }\n\n  get layerIcon() {\n    return S2LayerIcon;\n  }\n\n  get visualChannels() {\n    const visualChannels = super.visualChannels;\n    return {\n      color: {\n        ...visualChannels.color,\n        accessor: 'getFillColor'\n      },\n      size: {\n        ...visualChannels.size,\n        property: 'stroke',\n        accessor: 'getLineWidth',\n        condition: config => config.visConfig.stroked,\n        defaultValue: defaultLineWidth\n      },\n      strokeColor: {\n        property: 'strokeColor',\n        field: 'strokeColorField',\n        scale: 'strokeColorScale',\n        domain: 'strokeColorDomain',\n        range: 'strokeColorRange',\n        key: 'strokeColor',\n        channelScaleType: CHANNEL_SCALES.color,\n        accessor: 'getLineColor',\n        condition: config => config.visConfig.stroked,\n        nullValue: visualChannels.color.nullValue,\n        defaultValue: config => config.visConfig.strokeColor || config.color\n      },\n      height: {\n        property: 'height',\n        field: 'heightField',\n        scale: 'heightScale',\n        domain: 'heightDomain',\n        range: 'heightRange',\n        key: 'height',\n        channelScaleType: CHANNEL_SCALES.size,\n        accessor: 'getElevation',\n        condition: config => config.visConfig.enable3d,\n        nullValue: 0,\n        defaultValue: defaultElevation\n      }\n    };\n  }\n\n  getDefaultLayerConfig(props: LayerBaseConfigPartial) {\n    return {\n      ...super.getDefaultLayerConfig(props),\n\n      // add height visual channel\n      heightField: null,\n      heightDomain: [0, 1],\n      heightScale: 'linear',\n\n      // add stroke color visual channel\n      strokeColorField: null,\n      strokeColorDomain: [0, 1],\n      strokeColorScale: 'quantile'\n    };\n  }\n\n  static findDefaultLayerProps({fields = []}: KeplerTable) {\n    const foundColumns = this.findDefaultColumnField(S2_TOKEN_FIELDS, fields);\n    if (!foundColumns || !foundColumns.length) {\n      return {props: []};\n    }\n\n    return {\n      props: foundColumns.map(columns => ({\n        isVisible: true,\n        label: 'S2',\n        columns\n      }))\n    };\n  }\n\n  calculateDataAttribute({dataContainer, filteredIndex}: KeplerTable, getS2Token) {\n    const data: S2GeometryLayerData[] = [];\n    for (let i = 0; i < filteredIndex.length; i++) {\n      const index = filteredIndex[i];\n      const token = getS2Token({index});\n      if (validS2Token(token)) {\n        data.push({\n          index,\n          token\n        });\n      }\n    }\n    return data;\n  }\n\n  updateLayerMeta(dataContainer, getS2Token) {\n    // add safe row flag\n    const centroids = dataContainer.reduce(\n      (acc, entry, index) => {\n        const s2Token = getS2Token({index});\n        if (validS2Token(s2Token)) {\n          acc.push(getS2Center(s2Token));\n        }\n\n        return acc;\n      },\n      [],\n      true\n    );\n\n    const centroidsDataContainer = createDataContainer(centroids);\n    const bounds = this.getPointsBounds(centroidsDataContainer, (d, dc) => [\n      dc.valueAt(d.index, 0),\n      dc.valueAt(d.index, 1)\n    ]);\n    this.dataToFeature = {centroids};\n    this.updateMeta({bounds});\n  }\n\n  formatLayerData(datasets, oldLayerData, opt = {}) {\n    if (this.config.dataId === null) {\n      return {};\n    }\n    const {gpuFilter, dataContainer} = datasets[this.config.dataId];\n    const getS2Token = this.getPositionAccessor(dataContainer);\n    const {data} = this.updateData(datasets, oldLayerData);\n\n    const accessors = this.getAttributeAccessors({dataContainer});\n\n    return {\n      data,\n      getS2Token,\n      getFilterValue: gpuFilter.filterValueAccessor(dataContainer)(),\n      ...accessors\n    };\n  }\n\n  renderLayer(opts) {\n    const {data, gpuFilter, interactionConfig, mapState} = opts;\n\n    const defaultLayerProps = this.getDefaultDeckLayerProps(opts);\n\n    const eleZoomFactor = this.getElevationZoomFactor(mapState);\n    const zoomFactor = this.getZoomFactor(mapState);\n    const {config} = this;\n    const {visConfig} = config;\n\n    const updateTriggers = {\n      ...this.getVisualChannelUpdateTriggers(),\n      getFilterValue: gpuFilter.filterValueUpdateTriggers\n    };\n\n    return [\n      new S2Layer({\n        ...defaultLayerProps,\n        ...interactionConfig,\n        ...data,\n        getS2Token: (d: any) => d.token,\n\n        autoHighlight: visConfig.enable3d,\n        highlightColor: HIGHLIGH_COLOR_3D,\n\n        // stroke\n        lineWidthScale: visConfig.thickness * zoomFactor * zoomFactorValue,\n        stroked: visConfig.stroked,\n        lineMiterLimit: 2,\n\n        // Filled color\n        filled: visConfig.filled,\n        opacity: visConfig.opacity,\n        wrapLongitude: false,\n\n        // Elevation\n        elevationScale: visConfig.elevationScale * eleZoomFactor,\n        extruded: visConfig.enable3d,\n\n        wireframe: visConfig.wireframe,\n\n        pickable: true,\n\n        updateTriggers\n      })\n    ];\n  }\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {RGBColor} from '@kepler.gl/types';\n\nexport const COLORS = {\n  // blue\n  PRIMARY: [0x26, 0xb5, 0xf2] as RGBColor,\n  // gray\n  SECONDARY: [0xaa, 0xaa, 0xaa] as RGBColor,\n  // yellow\n  HIGHLIGHT: [0xff, 0xff, 0x00] as RGBColor\n};\n\nexport const EDIT_TYPES = {\n  ADD_POSITION: 'addPosition',\n  MOVE_POSITION: 'movePosition',\n  TRANSLATING: 'translating',\n  ADD_FEATURE: 'addFeature'\n};\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {RGBAColor} from '@deck.gl/core';\nimport {Feature} from '@kepler.gl/types';\n\nimport {COLORS} from './constants';\n\nconst POINT_RADIUS = 5;\nconst STROKE_WIDTH_SELECTED = 2.5;\nconst STROKE_WIDTH_NOT_SELECTED = 2;\n\nconst STROKE_SOLID_ARRAY = [0, 0];\nconst STROKE_DASH_ARRAY = [4, 3];\n\nconst ALPHA_0 = 0x00;\nconst ALPHA_005 = 0x0d;\nconst ALPHA_01 = 0x1a;\nconst ALPHA_05 = 0x80;\nconst ALPHA_1 = 0xff;\n\nconst PRIMARY_COLOR_TRANSPARENT: RGBAColor = [...COLORS.PRIMARY, ALPHA_01];\nconst PRIMARY_COLOR: RGBAColor = [...COLORS.PRIMARY, ALPHA_1];\nconst SECONDARY_COLOR_TRANSPARENT: RGBAColor = [...COLORS.SECONDARY, ALPHA_0];\nconst TENTATIVE_FEATURE_COLOR: RGBAColor = [...COLORS.SECONDARY, ALPHA_1];\nconst TENTATIVE_FEATURE_COLOR_TRANSPARENT: RGBAColor = [...COLORS.SECONDARY, ALPHA_005];\n\nexport const EDIT_HANDLE_STYLE = {\n  getRadius: POINT_RADIUS,\n  getFillColor: SECONDARY_COLOR_TRANSPARENT,\n  getOutlineColor: handle =>\n    handle?.properties?.featureIndex < 0 ? TENTATIVE_FEATURE_COLOR : PRIMARY_COLOR,\n  highlightMultiplier: [...COLORS.HIGHLIGHT, ALPHA_05],\n  highlightMultiplierNone: SECONDARY_COLOR_TRANSPARENT\n};\n\nexport const FEATURE_STYLE = {\n  getColor: (feature: Feature, isSelected: boolean) =>\n    isSelected ? PRIMARY_COLOR_TRANSPARENT : SECONDARY_COLOR_TRANSPARENT,\n  highlightMultiplier: [...COLORS.HIGHLIGHT, ALPHA_01],\n  highlightMultiplierNone: SECONDARY_COLOR_TRANSPARENT\n};\n\nexport const LINE_STYLE = {\n  getColor: (feature: Feature, isSelected, mode: string): RGBAColor =>\n    isSelected ? PRIMARY_COLOR : PRIMARY_COLOR,\n  getWidth: (feature: Feature, isSelected, mode: string): number =>\n    isSelected ? STROKE_WIDTH_SELECTED : STROKE_WIDTH_NOT_SELECTED,\n  getTentativeLineColor: (feature: Feature, isSelected: boolean): RGBAColor =>\n    TENTATIVE_FEATURE_COLOR,\n  getTentativeLineWidth: (feature: Feature, isSelected: boolean): number =>\n    STROKE_WIDTH_NOT_SELECTED,\n  getTentativeFillColor: TENTATIVE_FEATURE_COLOR_TRANSPARENT,\n  dashArray: STROKE_DASH_ARRAY,\n  solidArray: STROKE_SOLID_ARRAY,\n  highlightMultiplier: [...COLORS.HIGHLIGHT, ALPHA_1]\n};\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {\n  ModifyMode,\n  FeatureOf,\n  LineString,\n  Point,\n  Viewport as NebulaViewport\n} from '@nebula.gl/edit-modes';\nimport {Viewport} from '@deck.gl/core';\n\nimport {EDITOR_LAYER_PICKING_RADIUS} from '@kepler.gl/constants';\n\nconst RIGHT_BUTTON = 2;\n\n/**\n * Show helper only when the point is close enough to the line.\n */\nexport class ModifyModeExtended extends ModifyMode {\n  // @ts-expect-error expect to return no point when object is too far\n  getNearestPoint(\n    line: FeatureOf<LineString>,\n    inPoint: FeatureOf<Point>,\n    viewport: Viewport | null | undefined\n  ) {\n    const p = super.getNearestPoint(line, inPoint, viewport as NebulaViewport | null | undefined);\n    if (p && viewport) {\n      const p1 = viewport.project(p.geometry.coordinates);\n      const p2 = viewport.project(inPoint.geometry.coordinates);\n      const d = Math.sqrt((p1[0] - p2[0]) ** 2 + (p1[1] - p2[1]) ** 2);\n      if (d > EDITOR_LAYER_PICKING_RADIUS) {\n        return;\n      }\n    }\n    return p;\n  }\n\n  handleClick(event, props) {\n    // prevent insertion of points for right click\n    if (event?.sourceEvent?.button === RIGHT_BUTTON) {\n      return;\n    }\n    super.handleClick(event, props);\n  }\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {PickInfo} from '@deck.gl/core/lib/deck';\nimport {Editor, Feature, FeatureSelectionContext} from '@kepler.gl/types';\nimport {EDITOR_LAYER_ID, EDITOR_MODES} from '@kepler.gl/constants';\n\n/**\n * Returns true if drawing is active.\n * @param editorMenuActive Indicates whether the editor side menu is active.\n * @param mode Current editing mode.\n * @returs Returns true if drawing is active.\n */\nexport function isDrawingActive(editorMenuActive: boolean, mode: string): boolean {\n  return (\n    editorMenuActive && (mode === EDITOR_MODES.DRAW_POLYGON || mode === EDITOR_MODES.DRAW_RECTANGLE)\n  );\n}\n\n/**\n * Handles click event for Editor layer.\n * @param info Information about clicked object.\n * @param event Event object.\n * @param params\n * @param params.editorMenuActive\n * @param params.editor\n * @param params.onLayerClick\n * @param params.setSelectedFeature\n * @param params.mapIndex\n * @returns Returns true is the click is handled.\n */\n// eslint-disable-next-line complexity\nexport function onClick(\n  info: PickInfo<any>,\n  event: any,\n  {\n    editorMenuActive,\n    editor,\n    setSelectedFeature,\n    onLayerClick,\n    mapIndex = 0\n  }: {\n    editorMenuActive: boolean;\n    editor: Editor;\n    onLayerClick: (data, clickEvent) => any;\n    setSelectedFeature: (\n      feature: Feature | null,\n      selectionContext?: FeatureSelectionContext\n    ) => any;\n    mapIndex?: number;\n  }\n): boolean {\n  const drawingActive = isDrawingActive(editorMenuActive, editor.mode);\n\n  if (info?.layer?.id === EDITOR_LAYER_ID && info?.object) {\n    const objectType = info.object.geometry?.type;\n\n    if (drawingActive) {\n      if (editor.selectedFeature) {\n        setSelectedFeature(null);\n      }\n    } else if (objectType?.endsWith('Polygon') || objectType?.endsWith('Point')) {\n      let clickContext;\n      if (event.rightButton && Array.isArray(event.srcEvent?.point)) {\n        const {point} = event.srcEvent;\n        clickContext = {\n          mapIndex,\n          rightClick: true,\n          position: {\n            x: point[0],\n            y: point[1]\n          }\n        };\n      }\n\n      if (objectType?.endsWith('Polygon')) {\n        setSelectedFeature(info.object, clickContext);\n      } else {\n        // don't select points\n        setSelectedFeature(editor.selectedFeature, clickContext);\n      }\n    }\n    // hide tooltips from regular data layers\n    onLayerClick(null, event);\n  } else if (drawingActive) {\n    // prevent interaction with other layers\n    onLayerClick(null, event);\n  } else {\n    if (editor.selectedFeature) {\n      if (event.rightButton) {\n        return true;\n      }\n\n      // click outside removes selection\n      setSelectedFeature(null);\n    }\n\n    return false;\n  }\n  return true;\n}\n\n/**\n * Handles hover event for Editor layer.\n * @param info Information about hovered object.\n * @param params\n * @param params.editorMenuActive\n * @param params.editor\n * @param params.hoverInfo\n * @returns Returns true is hover is handled.\n */\nexport function onHover(\n  info: PickInfo<any>,\n  {hoverInfo, editor, editorMenuActive}: {editorMenuActive: boolean; editor: Editor; hoverInfo}\n): boolean {\n  if (isDrawingActive(editorMenuActive, editor.mode)) {\n    return true;\n  }\n\n  return info?.layer?.id === EDITOR_LAYER_ID && hoverInfo?.layer?.id === EDITOR_LAYER_ID;\n}\n\n/**\n * For small tooltips with short messages, e.g. \"Drag to move the point\",\n * use the values below to decide when to position a tooltip to the left\n * of the cursor or above the cursor, depending on proximity to the edge of\n * the viewport to prevent the tooltip from being cut off.\n */\nconst MIN_DISTANCE_TO_LEFT_EDGE = 200;\nconst MIN_DISTANCE_TO_BOTTOM_EDGE = 100;\n\n/**\n * Returns tooltip based on interactions with Editor layer.\n * @param info Information about hovered object.\n * @param params\n * @param params.editorMenuActive\n * @param params.editor\n * @param params.theme\n * @raturns Returns a tooltip object compatible with Deck.getTooltip()\n */\n// eslint-disable-next-line complexity\nexport function getTooltip(\n  // TODO PickInfo type in deck typings doesn't include viewport and pixel\n  info: PickInfo<any> & {viewport: any; pixel: any[]},\n  {editor, theme, editorMenuActive}: {editorMenuActive: boolean; editor: Editor; theme: any}\n): object | null {\n  const {object, layer, viewport = {}, pixel = []} = info;\n  const closeToLeftEdge = viewport?.width - pixel[0] < MIN_DISTANCE_TO_LEFT_EDGE;\n  const closeToBottomEdge = viewport?.height - pixel[1] < MIN_DISTANCE_TO_BOTTOM_EDGE;\n\n  // don't show the tooltip when the menu is visible\n  if (editor.selectionContext?.rightClick) {\n    return null;\n  }\n\n  if (isDrawingActive(editorMenuActive, editor.mode)) {\n    // TODO save interaction state in editor object\n    if (layer?.state?.mode?._clickSequence?.length) {\n      return null;\n    }\n\n    return getTooltipObject('Click to start new feature', theme, {\n      leftOfCursor: closeToLeftEdge,\n      aboveCursor: closeToBottomEdge\n    });\n  }\n\n  if (layer?.id === EDITOR_LAYER_ID) {\n    const {selectedFeature} = editor;\n\n    if (selectedFeature) {\n      if (!object || (object.id && object.id === selectedFeature.id)) {\n        return getTooltipObject('Right click to view options\\nDrag to move the feature', theme, {\n          leftOfCursor: closeToLeftEdge,\n          aboveCursor: closeToBottomEdge\n        });\n      }\n    }\n\n    if (object?.properties?.editHandleType === 'intermediate') {\n      return getTooltipObject('Click to insert a point', theme, {\n        leftOfCursor: closeToLeftEdge,\n        aboveCursor: closeToBottomEdge\n      });\n    }\n\n    if (object?.geometry?.type === 'Point' || object?.properties?.guideType === 'tentative') {\n      return getTooltipObject('Drag to move the point', theme, {\n        leftOfCursor: closeToLeftEdge,\n        aboveCursor: closeToBottomEdge\n      });\n    }\n\n    return getTooltipObject('Click to select the feature\\nRight click to view options', theme, {\n      leftOfCursor: closeToLeftEdge,\n      aboveCursor: closeToBottomEdge\n    });\n  }\n\n  return null;\n}\n\n/**\n * Returns cursor type based on interactions with Editor layer.\n * @param params\n * @param params.editorMenuActive\n * @param params.editor\n * @param params.hoverInfo\n * @returns Returns cursor type.\n */\nexport function getCursor({\n  editorMenuActive,\n  editor,\n  hoverInfo\n}: {\n  editorMenuActive: boolean;\n  editor: Editor;\n  hoverInfo: any;\n}): string | null {\n  if (isDrawingActive(editorMenuActive, editor.mode)) {\n    return 'crosshair';\n  }\n\n  if (hoverInfo?.layer?.id === EDITOR_LAYER_ID && editor.selectedFeature) {\n    return 'move';\n  }\n\n  return null;\n}\n\n/**\n * Returns a tooltip object that can be used as a Deck tooltip.\n * Positioning can be modified if the cursor is close to the bottom or left edge of the viewport.\n * @param text Text to show.\n * @param theme Current theme.\n * @param position.leftOfCursor Tooltip should display to the left of the cursor.\n * @param position.aboveCursor Tooltip should display above cursor.\n */\nfunction getTooltipObject(\n  text: string,\n  theme: any,\n  position: {leftOfCursor: boolean; aboveCursor: boolean}\n): {text: string; style: object} {\n  const {leftOfCursor, aboveCursor} = position;\n  const marginTop = aboveCursor ? '-70px' : '15px';\n  const marginLeft = leftOfCursor ? '-200px' : '15px';\n  return {\n    text,\n    style: {\n      'margin-top': marginTop,\n      'margin-left': marginLeft,\n      'font-family': theme.fontFamily,\n      'font-size': theme.tooltipFontSize,\n      'font-weight': 400,\n      padding: '7px 18px',\n      'box-shadow': theme.tooltipBoxShadow,\n      'background-color': theme.tooltipBg,\n      color: theme.tooltipColor,\n      'border-radius': theme.primaryBtnRadius\n    }\n  };\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {EditableGeoJsonLayer} from '@nebula.gl/layers';\nimport {Layer as DeckLayer, LayerProps as DeckLayerProps} from '@deck.gl/core/typed';\nimport {\n  DrawPolygonMode,\n  TranslateMode,\n  CompositeMode,\n  DrawRectangleMode\n} from '@nebula.gl/edit-modes';\nimport {PathStyleExtension} from '@deck.gl/extensions';\n\nimport {EDITOR_LAYER_ID, EDITOR_MODES, EDITOR_LAYER_PICKING_RADIUS} from '@kepler.gl/constants';\nimport {Viewport, Editor, Feature, FeatureSelectionContext} from '@kepler.gl/types';\nimport {generateHashId} from '@kepler.gl/utils';\n\nimport {EDIT_TYPES} from './constants';\nimport {LINE_STYLE, FEATURE_STYLE, EDIT_HANDLE_STYLE} from './feature-styles';\nimport {ModifyModeExtended} from './modify-mode-extended';\nimport {isDrawingActive} from './editor-layer-utils';\n\nconst DEFAULT_COMPOSITE_MODE = new CompositeMode([new TranslateMode(), new ModifyModeExtended()]);\n\nexport type GetEditorLayerProps = {\n  editorMenuActive: boolean;\n  editor: Editor;\n  onSetFeatures: (features: Feature[]) => any;\n  setSelectedFeature: (feature: Feature | null, selectionContext?: FeatureSelectionContext) => any;\n  viewport: Viewport;\n  featureCollection: {\n    type: string;\n    features: Feature[];\n  };\n  selectedFeatureIndexes: number[];\n};\n\n/**\n * Returns editable layer to edit polygon filters.\n * @param params\n * @param params.editorMenuActive Indicates whether the editor side menu is active.\n * @param params.editor\n * @param params.onSetFeatures A callback to set features.\n * @param params.setSelectedFeature A callback to set selected feature and selection context.\n * @param params.viewport Current viewport.\n * @param params.featureCollection Feature collection with an array of features\n * @param params.selectedFeatureIndexes An array with index of currently selected feature.\n */\nexport function getEditorLayer({\n  editorMenuActive,\n  editor,\n  onSetFeatures,\n  setSelectedFeature,\n  featureCollection,\n  selectedFeatureIndexes,\n  viewport\n}: GetEditorLayerProps): DeckLayer<DeckLayerProps> {\n  const {mode: editorMode} = editor;\n\n  let mode = DEFAULT_COMPOSITE_MODE;\n  if (editorMenuActive) {\n    // @ts-ignore\n    if (editorMode === EDITOR_MODES.DRAW_POLYGON) mode = DrawPolygonMode;\n    // @ts-ignore\n    else if (editorMode === EDITOR_MODES.DRAW_RECTANGLE) mode = DrawRectangleMode;\n  }\n\n  // @ts-ignore\n  return new EditableGeoJsonLayer({\n    id: EDITOR_LAYER_ID,\n    mode,\n    // @ts-ignore\n    data: featureCollection,\n    selectedFeatureIndexes,\n    visible: editor.visible,\n    pickable: true,\n    pickingRadius: EDITOR_LAYER_PICKING_RADIUS,\n    modeConfig: {\n      viewport,\n      screenSpace: true,\n      lockRectangles: true\n    },\n\n    pickingLineWidthExtraPixels: 5,\n\n    // Only show fill when polygons are selected,\n    // there is no way atm to enable fill for only one feature\n    filled: selectedFeatureIndexes.length > 0,\n\n    onEdit: ({updatedData, editType}) => {\n      switch (editType) {\n        case EDIT_TYPES.ADD_FEATURE:\n          const {features: _features} = updatedData;\n          if (_features.length) {\n            const lastFeature = _features[_features.length - 1];\n            lastFeature.properties.isClosed = true;\n            lastFeature.id = generateHashId(6);\n            onSetFeatures(updatedData.features);\n            setSelectedFeature(lastFeature);\n          }\n          break;\n        case EDIT_TYPES.ADD_POSITION:\n        case EDIT_TYPES.MOVE_POSITION:\n        case EDIT_TYPES.TRANSLATING:\n          onSetFeatures(updatedData.features);\n          break;\n        default:\n          break;\n      }\n    },\n\n    // prevent self-highlights with tentative features\n    autoHighlight: !isDrawingActive(editorMenuActive, editorMode),\n    // @ts-ignore\n    highlightColor: info => {\n      // Note: lines are reported as parent polygon\n      const {object} = info;\n      if (object) {\n        if (object.id === editor.selectedFeature?.id) {\n          return FEATURE_STYLE.highlightMultiplierNone;\n        }\n\n        const type = object.properties.editHandleType;\n        if (type === 'intermediate') return EDIT_HANDLE_STYLE.highlightMultiplierNone;\n        else if (type === 'existing') return EDIT_HANDLE_STYLE.highlightMultiplier;\n      }\n\n      // Note: highlight color affects even transparent filled polygons\n      return selectedFeatureIndexes.length\n        ? FEATURE_STYLE.highlightMultiplier\n        : LINE_STYLE.highlightMultiplier;\n    },\n\n    extensions: [new PathStyleExtension({dash: true})],\n    dashGapPickable: true,\n    getDashArray: (feature, _isSelected) => {\n      if (feature?.properties?.guideType === 'tentative') {\n        return LINE_STYLE.dashArray;\n      }\n\n      if (feature?.id === editor.selectedFeature?.id) return LINE_STYLE.solidArray;\n\n      return LINE_STYLE.dashArray;\n    },\n\n    getLineColor: LINE_STYLE.getColor,\n    getFillColor: FEATURE_STYLE.getColor,\n\n    getRadius: EDIT_HANDLE_STYLE.getRadius,\n    // @ts-ignore\n    getLineWidth: LINE_STYLE.getWidth,\n\n    getEditHandlePointRadius: EDIT_HANDLE_STYLE.getRadius,\n    getEditHandlePointColor: EDIT_HANDLE_STYLE.getFillColor,\n    getEditHandlePointOutlineColor: EDIT_HANDLE_STYLE.getOutlineColor,\n\n    getTentativeLineColor: LINE_STYLE.getTentativeLineColor,\n    // @ts-ignore\n    getTentativeLineWidth: LINE_STYLE.getTentativeLineWidth,\n    getTentativeFillColor: LINE_STYLE.getTentativeFillColor,\n\n    parameters: {}\n  });\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nexport {\n  default as Layer,\n  OVERLAY_TYPE_CONST,\n  LAYER_ID_LENGTH,\n  colorMaker,\n  layerColors\n} from './base-layer';\nimport {default as PointLayer} from './point-layer/point-layer';\nimport {default as ArcLayer} from './arc-layer/arc-layer';\nimport {default as LineLayer} from './line-layer/line-layer';\nimport {default as GridLayer} from './grid-layer/grid-layer';\nexport {pointToPolygonGeo} from './grid-layer/grid-utils';\nimport {default as HexagonLayer} from './hexagon-layer/hexagon-layer';\nimport {default as GeojsonLayer} from './geojson-layer/geojson-layer';\nexport {defaultElevation, defaultLineWidth, defaultRadius} from './geojson-layer/geojson-layer';\nimport {default as ClusterLayer} from './cluster-layer/cluster-layer';\nimport {default as IconLayer} from './icon-layer/icon-layer';\nimport {default as HeatmapLayer} from './heatmap-layer/heatmap-layer';\nexport {MAX_ZOOM_LEVEL} from './heatmap-layer/heatmap-layer';\nimport {default as H3Layer} from './h3-hexagon-layer/h3-hexagon-layer';\nexport {defaultElevation as h3DefaultElevation} from './h3-hexagon-layer/h3-hexagon-layer';\nimport {default as ScenegraphLayer} from './scenegraph-layer/scenegraph-layer';\nimport {default as TripLayer} from './trip-layer/trip-layer';\nexport {defaultLineWidth as tripDefaultLineWidth} from './trip-layer/trip-layer';\nexport {coordHasLength4, containValidTime, isTripGeoJsonField, parseTripGeoJsonTimestamp, getAnimationDomainFromTimestamps} from './trip-layer/trip-utils';\nimport {default as S2GeometryLayer} from './s2-geometry-layer/s2-geometry-layer';\nexport {defaultElevation as s2DefaultElevation} from './s2-geometry-layer/s2-geometry-layer';\nexport {getS2Center} from './s2-geometry-layer/s2-utils';\nexport {default as AggregationLayer} from './aggregation-layer';\nimport {LAYER_TYPES} from '@kepler.gl/constants';\nexport {parseGeoJsonRawFeature} from './geojson-layer/geojson-utils';\n// base layer\n// eslint-disable-next-line prettier/prettier\nexport type {\n  LayerBaseConfig,\n  LayerColumns,\n  LayerColumn,\n  VisualChannelDomain,\n  VisualChannel,\n  VisualChannelDescription,\n  ColumnPairs,\n  FindDefaultLayerPropsReturnValue\n} from './base-layer';\nexport * from './base-layer';\n\n// individual layers\nexport const KeplerGlLayers = {\n  PointLayer,\n  ArcLayer,\n  LineLayer,\n  GridLayer,\n  HexagonLayer,\n  GeojsonLayer,\n  ClusterLayer,\n  IconLayer,\n  HeatmapLayer,\n  H3Layer,\n  ScenegraphLayer,\n  TripLayer,\n  S2GeometryLayer\n};\n\nexport type LayerClassesType = typeof LayerClasses;\nexport const LayerClasses = {\n  [LAYER_TYPES.point]: PointLayer,\n  [LAYER_TYPES.arc]: ArcLayer,\n  [LAYER_TYPES.line]: LineLayer,\n  [LAYER_TYPES.grid]: GridLayer,\n  [LAYER_TYPES.hexagon]: HexagonLayer,\n  [LAYER_TYPES.geojson]: GeojsonLayer,\n  [LAYER_TYPES.cluster]: ClusterLayer,\n  [LAYER_TYPES.icon]: IconLayer,\n  [LAYER_TYPES.heatmap]: HeatmapLayer,\n  [LAYER_TYPES.hexagonId]: H3Layer,\n  [LAYER_TYPES['3D']]: ScenegraphLayer,\n  [LAYER_TYPES.trip]: TripLayer,\n  [LAYER_TYPES.s2]: S2GeometryLayer\n};\n\nexport * from './mapbox-utils';\nexport * from './h3-hexagon-layer';\nexport {default as Table} from './table';\n\nexport {getEditorLayer} from './editor-layer/editor-layer';\n\nexport {default as ScenegraphLayer, scenegraphVisConfigs} from './scenegraph-layer/scenegraph-layer';\nexport {default as ScenegraphLayerIcon} from './scenegraph-layer/scenegraph-layer-icon';\n\nimport {isDrawingActive, onClick, onHover, getTooltip, getCursor} from './editor-layer/editor-layer-utils';\nexport const EditorLayerUtils = {\n  isDrawingActive, onClick, onHover, getTooltip, getCursor\n};\n\nexport {getFilterDataFunc} from './aggregation-layer';\n\nexport * from './layer-update';\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {ComponentType, MouseEventHandler} from 'react';\nimport {TooltipProps} from 'react-tooltip';\nimport classnames from 'classnames';\nimport styled from 'styled-components';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {Tooltip} from '../common/styled-components';\nimport {BaseProps} from '../common/icons';\n\nexport type PanelHeaderActionIcon = ComponentType<Partial<BaseProps>>;\n\nexport interface PanelHeaderActionProps {\n  id?: string;\n  tooltip?: string;\n  hoverColor?: string;\n  className?: string;\n  active?: boolean;\n  flush?: boolean;\n  disabled?: boolean;\n  onClick?: MouseEventHandler;\n  tooltipType?: TooltipProps['type'];\n  IconComponent: PanelHeaderActionIcon;\n  testId?: string;\n}\n\ntype HeaderActionWrapperProps = {\n  flush?: boolean;\n  active?: boolean;\n  hoverColor?: string | null;\n  testId?: string;\n};\n\nconst HeaderActionWrapper = styled.div.attrs((props: HeaderActionWrapperProps) => ({\n  dataTestId: props.testId\n}))<HeaderActionWrapperProps>`\n  margin-left: ${props => (props.flush ? 0 : 8)}px;\n  display: flex;\n  align-items: center;\n  color: ${props =>\n    props.active ? props.theme.panelHeaderIconActive : props.theme.panelHeaderIcon};\n\n  cursor: pointer;\n\n  :hover {\n    color: ${props =>\n      props.hoverColor ? props.theme[props.hoverColor] : props.theme.panelHeaderIconHover};\n  }\n\n  &.disabled {\n    cursor: none;\n    pointer-events: none;\n    opacity: 0.3;\n  }\n`;\n\nPanelHeaderActionFactory.deps = [];\n// Need to use react class to access props.component\nexport default function PanelHeaderActionFactory(): React.FC<PanelHeaderActionProps> {\n  const PanelHeaderActionUnmemoized: React.FC<PanelHeaderActionProps> = ({\n    onClick,\n    tooltip,\n    id,\n    active = false,\n    flush,\n    hoverColor,\n    tooltipType,\n    disabled,\n    className,\n    IconComponent,\n    testId\n  }) => {\n    return (\n      <HeaderActionWrapper\n        className={classnames('panel--header__action', {\n          disabled,\n          ...(className ? {[className]: true} : {})\n        })}\n        active={active}\n        hoverColor={hoverColor}\n        flush={flush}\n      >\n        {IconComponent ? (\n          <IconComponent\n            className=\"panel--header__action__component\"\n            data-testid={testId}\n            data-tip\n            data-for={`${tooltip}_${id}`}\n            height=\"16px\"\n            onClick={onClick}\n          />\n        ) : null}\n        {tooltip ? (\n          <Tooltip id={`${tooltip}_${id}`} effect=\"solid\" delayShow={500} type={tooltipType}>\n            <span>\n              <FormattedMessage id={tooltip} />\n            </span>\n          </Tooltip>\n        ) : null}\n      </HeaderActionWrapper>\n    );\n  };\n\n  const PanelHeaderAction = React.memo(PanelHeaderActionUnmemoized);\n  PanelHeaderAction.displayName = 'PanelHeaderAction';\n  return PanelHeaderAction;\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport Protobuf from 'pbf';\nimport {VectorTile} from '@mapbox/vector-tile';\nimport {worldToLngLat} from 'viewport-mercator-project';\nimport {\n  Coordinates,\n  FlatFigure,\n  TileDataItem,\n  VectorTileFeature,\n  VectorTileFeatureProperties\n} from './types';\n\n/* global fetch */\nconst TILE_SIZE = 512;\nconst MAPBOX_HOST = 'https://a.tiles.mapbox.com';\nconst MAP_SOURCE = '/v4/mapbox.mapbox-streets-v7';\n\nexport function getTileData(\n  host: string,\n  token: string,\n  {index: {x, y, z}}: {index: Coordinates}\n): Promise<TileDataItem[]> {\n  const mapSource = `${host ||\n    MAPBOX_HOST}${MAP_SOURCE}/${z}/${x}/${y}.vector.pbf?access_token=${token}`;\n\n  return fetch(mapSource)\n    .then(response => response.arrayBuffer())\n    .then(buffer => decodeTile(x, y, z, buffer));\n}\n\nexport function decodeTile(\n  x: number,\n  y: number,\n  z: number,\n  arrayBuffer: ArrayBuffer\n): TileDataItem[] {\n  const tile = new VectorTile(new Protobuf(arrayBuffer));\n\n  const result: TileDataItem[] = [];\n  const xProj = x * TILE_SIZE;\n  const yProj = y * TILE_SIZE;\n  const scale = Math.pow(2, z);\n\n  const projectFunc = project.bind(null, xProj, yProj, scale);\n\n  /* eslint-disable guard-for-in */\n  const layerName = 'building';\n  const vectorTileLayer = tile.layers[layerName];\n  if (!vectorTileLayer) {\n    return [];\n  }\n  for (let i = 0; i < vectorTileLayer.length; i++) {\n    const vectorTileFeature = vectorTileLayer.feature(i);\n    // @ts-ignore\n    const features = vectorTileFeatureToProp(vectorTileFeature, projectFunc);\n    features.forEach(f => {\n      f.properties.layer = layerName;\n      if (f.properties.height) {\n        result.push(f);\n      }\n    });\n  }\n  return result;\n}\n\nfunction project(x: number, y: number, scale: number, line: FlatFigure, extent: number): void {\n  const sizeToPixel = extent / TILE_SIZE;\n\n  for (let ii = 0; ii < line.length; ii++) {\n    const p = line[ii];\n    // LNGLAT\n    line[ii] = worldToLngLat([x + p[0] / sizeToPixel, y + p[1] / sizeToPixel], scale);\n  }\n}\n\n/* adapted from @mapbox/vector-tile/lib/vectortilefeature.js for better perf */\n/* eslint-disable */\nexport function vectorTileFeatureToProp(\n  vectorTileFeature: VectorTileFeature,\n  project: (r: FlatFigure, n: number) => void\n): {coordinates: FlatFigure[]; properties: VectorTileFeatureProperties}[] {\n  let coords: FlatFigure[][] | FlatFigure[] = getCoordinates(vectorTileFeature);\n  const extent = vectorTileFeature.extent;\n  let i: number;\n  let j: number;\n\n  coords = classifyRings(coords);\n  for (i = 0; i < coords.length; i++) {\n    for (j = 0; j < coords[i].length; j++) {\n      project(coords[i][j], extent);\n    }\n  }\n\n  return coords.map(coordinates => ({\n    coordinates,\n    properties: vectorTileFeature.properties\n  }));\n}\n\nfunction getCoordinates(vectorTileFeature: VectorTileFeature): FlatFigure[] {\n  const pbf = vectorTileFeature._pbf;\n  pbf.pos = vectorTileFeature._geometry;\n\n  const end = pbf.readVarint() + pbf.pos;\n  let cmd = 1;\n  let length = 0;\n  let x = 0;\n  let y = 0;\n\n  const lines: FlatFigure[] = [];\n  let line: FlatFigure | undefined;\n\n  while (pbf.pos < end) {\n    if (length <= 0) {\n      const cmdLen = pbf.readVarint();\n      cmd = cmdLen & 0x7;\n      length = cmdLen >> 3;\n    }\n\n    length--;\n\n    if (cmd === 1 || cmd === 2) {\n      x += pbf.readSVarint();\n      y += pbf.readSVarint();\n\n      if (cmd === 1) {\n        // moveTo\n        if (line) lines.push(line);\n        line = [];\n      }\n\n      if (line) line.push([x, y]);\n    } else if (cmd === 7) {\n      // Workaround for https://github.com/mapbox/mapnik-vector-tile/issues/90\n      if (line) {\n        line.push(line[0].slice() as [number, number] | [number, number, number]); // closePolygon\n      }\n    } else {\n      throw new Error(`unknown command ${cmd}`);\n    }\n  }\n\n  if (line) lines.push(line);\n\n  return lines;\n}\n\n// classifies an array of rings into polygons with outer rings and holes\n\nfunction classifyRings(rings: FlatFigure[]): FlatFigure[][] {\n  const len = rings.length;\n\n  if (len <= 1) return [rings];\n\n  const polygons: FlatFigure[][] = [];\n  let polygon: FlatFigure[] | undefined;\n  let ccw: boolean | undefined;\n\n  for (let i = 0; i < len; i++) {\n    const area = signedArea(rings[i]);\n    if (area === 0) {\n      continue;\n    }\n\n    if (ccw === undefined) {\n      ccw = area < 0;\n    }\n\n    if (ccw === area < 0) {\n      if (polygon) {\n        polygons.push(polygon);\n      }\n      polygon = [rings[i]];\n    } else if (polygon) {\n      polygon.push(rings[i]);\n    }\n  }\n  if (polygon) {\n    polygons.push(polygon);\n  }\n\n  return polygons;\n}\n\nfunction signedArea(ring: FlatFigure): number {\n  let sum = 0;\n  for (let i = 0, len = ring.length, j = len - 1, p1: number[], p2: number[]; i < len; j = i++) {\n    p1 = ring[i];\n    p2 = ring[j];\n    sum += (p2[0] - p1[0]) * (p1[1] + p2[1]);\n  }\n  return sum;\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport GL from '@luma.gl/constants';\nimport {CompositeLayer} from '@deck.gl/core/typed';\nimport {TileLayer as DeckGLTileLayer} from '@deck.gl/geo-layers/typed';\nimport {SolidPolygonLayer, SolidPolygonLayerProps} from '@deck.gl/layers/typed';\n\nimport {getTileData} from './3d-building-utils';\nimport {ThreeDBuildingLayerProps, TileDataItem, TileLoadProps} from './types';\n\nexport default class ThreeDBuildingLayer extends CompositeLayer<ThreeDBuildingLayerProps> {\n  // this layer add its subLayers to the redux store, and push sample data\n\n  renderSubLayers(props: SolidPolygonLayerProps<any>) {\n    return new SolidPolygonLayer<TileDataItem>({\n      ...props,\n      parameters: {\n        blendFunc: [GL.SRC_ALPHA, GL.ONE_MINUS_SRC_ALPHA, GL.ONE, GL.ONE_MINUS_SRC_ALPHA],\n        blendEquation: [GL.FUNC_ADD, GL.FUNC_ADD]\n      },\n      extruded: true,\n      opacity: 1,\n      filled: true,\n      getElevation: (feature: TileDataItem) => feature.properties.height || 0,\n      getPolygon: (feature: TileDataItem) => feature.coordinates,\n      getFillColor: this.props.threeDBuildingColor\n    });\n  }\n\n  renderLayers() {\n    return [\n      new DeckGLTileLayer({\n        id: `${this.id}-deck-3d-building` as string,\n        getTileData: (tile: TileLoadProps) =>\n          getTileData(this.props.mapboxApiUrl, this.props.mapboxApiAccessToken, tile),\n        minZoom: 13,\n        renderSubLayers: this.renderSubLayers.bind(this),\n        updateTriggers: this.props.updateTriggers\n      })\n    ];\n  }\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\n/* eslint-disable guard-for-in */\nimport {AGGREGATION_OPERATION, _BinSorter as BinSorter} from '@deck.gl/aggregation-layers';\nimport {console as Console} from 'global/window';\n\nimport {aggregate} from '@kepler.gl/utils';\nimport {AGGREGATION_TYPES, SCALE_FUNC} from '@kepler.gl/constants';\nimport {RGBAColor} from '@kepler.gl/types';\n\nexport type UpdaterType = (this: CPUAggregator, step, props, dimensionUpdater) => void;\nexport type BindedUpdaterType = () => void;\nexport type AggregatedUpdaterType = (\n  this: CPUAggregator,\n  step,\n  props,\n  aggregation,\n  aggregationParams\n) => void;\nexport type BindedAggregatedUpdaterType = (aggregationParams) => void;\n\nexport type UpdateStepsType = {\n  key: string;\n  triggers: {\n    [key: string]: {\n      prop: string;\n      updateTrigger?: string;\n    };\n  };\n  onSet?: {\n    props: string;\n  };\n  updater: UpdaterType;\n};\n\nexport type DimensionType<ValueType = any> = {\n  key: string;\n  accessor: string;\n  getPickingInfo: (dimensionState, cell, layerProps?) => any;\n  nullValue: ValueType;\n  updateSteps: UpdateStepsType[];\n  getSubLayerAccessor;\n};\n\nexport type AggregationUpdateStepsType = {\n  key: string;\n  triggers: {\n    [key: string]: {\n      prop: string;\n      updateTrigger?: string;\n    };\n  };\n  updater: AggregatedUpdaterType;\n};\n\nexport type AggregationType = {\n  key: string;\n  updateSteps: AggregationUpdateStepsType[];\n};\n\nexport const DECK_AGGREGATION_MAP = {\n  [AGGREGATION_OPERATION.SUM]: AGGREGATION_TYPES.sum,\n  [AGGREGATION_OPERATION.MEAN]: AGGREGATION_TYPES.average,\n  [AGGREGATION_OPERATION.MIN]: AGGREGATION_TYPES.minimum,\n  [AGGREGATION_OPERATION.MAX]: AGGREGATION_TYPES.maximum\n};\n\nexport function getValueFunc(aggregation, accessor) {\n  if (!aggregation || !AGGREGATION_OPERATION[aggregation.toUpperCase()]) {\n    Console.warn(`Aggregation ${aggregation} is not supported`);\n  }\n\n  const op = AGGREGATION_OPERATION[aggregation.toUpperCase()] || AGGREGATION_OPERATION.SUM;\n  const keplerOp = DECK_AGGREGATION_MAP[op];\n\n  return pts => aggregate(pts.map(accessor), keplerOp);\n}\n\nexport function getScaleFunctor(scaleType) {\n  if (!scaleType || !SCALE_FUNC[scaleType]) {\n    Console.warn(`Scale ${scaleType} is not supported`);\n  }\n  return SCALE_FUNC[scaleType] || SCALE_FUNC.quantize;\n}\n\nfunction nop() {}\n\nexport function getGetValue(this: CPUAggregator, step, props, dimensionUpdater) {\n  const {key} = dimensionUpdater;\n  const {value, weight, aggregation} = step.triggers;\n\n  let getValue = props[value.prop];\n\n  if (getValue === null) {\n    // If `getValue` is not provided from props, build it with aggregation and weight.\n    getValue = getValueFunc(props[aggregation.prop], props[weight.prop]);\n  }\n\n  if (getValue) {\n    this._setDimensionState(key, {getValue});\n  }\n}\n\nexport function getDimensionSortedBins(this: CPUAggregator, step, props, dimensionUpdater) {\n  const {key} = dimensionUpdater;\n  const {getValue} = this.state.dimensions[key];\n  // @ts-expect-error\n  const sortedBins = new BinSorter(this.state.layerData.data || [], {\n    getValue,\n    filterData: props._filterData\n  });\n  this._setDimensionState(key, {sortedBins});\n}\n\nexport function getDimensionValueDomain(this: CPUAggregator, step, props, dimensionUpdater) {\n  const {key} = dimensionUpdater;\n  const {\n    triggers: {lowerPercentile, upperPercentile, scaleType}\n  } = step;\n\n  if (!this.state.dimensions[key].sortedBins) {\n    // the previous step should set sortedBins, if not, something went wrong\n    return;\n  }\n\n  // for log and sqrt scale, returns linear domain by default\n  // TODO: support other scale function domain in bin sorter\n  const valueDomain = this.state.dimensions[key].sortedBins.getValueDomainByScale(\n    props[scaleType.prop],\n    [props[lowerPercentile.prop], props[upperPercentile.prop]]\n  );\n\n  this._setDimensionState(key, {valueDomain});\n}\n\nexport function getDimensionScale(this: CPUAggregator, step, props, dimensionUpdater) {\n  const {key} = dimensionUpdater;\n  const {domain, range, scaleType} = step.triggers;\n  const {onSet} = step;\n  if (!this.state.dimensions[key].valueDomain) {\n    // the previous step should set valueDomain, if not, something went wrong\n    return;\n  }\n\n  const dimensionRange = props[range.prop];\n  const dimensionDomain = props[domain.prop] || this.state.dimensions[key].valueDomain;\n\n  const scaleFunctor = getScaleFunctor(scaleType && props[scaleType.prop])();\n\n  const scaleFunc = scaleFunctor.domain(dimensionDomain).range(dimensionRange);\n\n  if (typeof onSet === 'object' && typeof props[onSet.props] === 'function') {\n    props[onSet.props](scaleFunc.domain());\n  }\n  this._setDimensionState(key, {scaleFunc});\n}\n\nfunction normalizeResult(result: {hexagons?; layerData?} = {}) {\n  // support previous hexagonAggregator API\n  if (result.hexagons) {\n    return Object.assign({data: result.hexagons}, result);\n  } else if (result.layerData) {\n    return Object.assign({data: result.layerData}, result);\n  }\n\n  return result;\n}\n\nexport function getAggregatedData(\n  this: CPUAggregator,\n  step,\n  props,\n  aggregation,\n  aggregationParams\n) {\n  const {\n    triggers: {aggregator: aggr}\n  } = step;\n  const aggregator = props[aggr.prop];\n\n  // result should contain a data array and other props\n  // result = {data: [], ...other props}\n  const result = aggregator(props, aggregationParams);\n  this.setState({\n    layerData: normalizeResult(result)\n  });\n}\n\nexport const defaultAggregation: AggregationType = {\n  key: 'position',\n  updateSteps: [\n    {\n      key: 'aggregate',\n      triggers: {\n        cellSize: {\n          prop: 'cellSize'\n        },\n        position: {\n          prop: 'getPosition',\n          updateTrigger: 'getPosition'\n        },\n        aggregator: {\n          prop: 'gridAggregator'\n        }\n      },\n      updater: getAggregatedData\n    }\n  ]\n};\n\nfunction getSubLayerAccessor(dimensionState, dimension, layerProps) {\n  return cell => {\n    const {sortedBins, scaleFunc} = dimensionState;\n    const bin = sortedBins.binMap[cell.index];\n\n    if (bin && bin.counts === 0) {\n      // no points left in bin after filtering\n      return dimension.nullValue;\n    }\n\n    const cv = bin && bin.value;\n    const domain = scaleFunc.domain();\n\n    const isValueInDomain = cv >= domain[0] && cv <= domain[domain.length - 1];\n\n    // if cell value is outside domain, set alpha to 0\n    return isValueInDomain ? scaleFunc(cv) : dimension.nullValue;\n  };\n}\n\nexport const defaultColorDimension: DimensionType<RGBAColor> = {\n  key: 'fillColor',\n  accessor: 'getFillColor',\n  getPickingInfo: (dimensionState, cell) => {\n    if (!cell) {\n      return {};\n    }\n    const {sortedBins} = dimensionState;\n    const colorValue = sortedBins.binMap[cell.index] && sortedBins.binMap[cell.index].value;\n    return {colorValue};\n  },\n  nullValue: [0, 0, 0, 0],\n  updateSteps: [\n    {\n      key: 'getValue',\n      triggers: {\n        value: {\n          prop: 'getColorValue',\n          updateTrigger: 'getColorValue'\n        },\n        weight: {\n          prop: 'getColorWeight',\n          updateTrigger: 'getColorWeight'\n        },\n        aggregation: {\n          prop: 'colorAggregation'\n        }\n      },\n      updater: getGetValue\n    },\n    {\n      key: 'getBins',\n      triggers: {\n        _filterData: {\n          prop: '_filterData',\n          updateTrigger: '_filterData'\n        }\n      },\n      updater: getDimensionSortedBins\n    },\n    {\n      key: 'getDomain',\n      triggers: {\n        lowerPercentile: {\n          prop: 'lowerPercentile'\n        },\n        upperPercentile: {\n          prop: 'upperPercentile'\n        },\n        scaleType: {prop: 'colorScaleType'}\n      },\n      updater: getDimensionValueDomain\n    },\n    {\n      key: 'getScaleFunc',\n      triggers: {\n        domain: {prop: 'colorDomain'},\n        range: {prop: 'colorRange'},\n        scaleType: {prop: 'colorScaleType'}\n      },\n      onSet: {\n        props: 'onSetColorDomain'\n      },\n      updater: getDimensionScale\n    }\n  ],\n  getSubLayerAccessor\n};\n\nexport const defaultElevationDimension: DimensionType<number> = {\n  key: 'elevation',\n  accessor: 'getElevation',\n  getPickingInfo: (dimensionState, cell) => {\n    if (!cell) {\n      return {};\n    }\n    const {sortedBins} = dimensionState;\n    const elevationValue = sortedBins.binMap[cell.index] && sortedBins.binMap[cell.index].value;\n    return {elevationValue};\n  },\n  nullValue: -1,\n  updateSteps: [\n    {\n      key: 'getValue',\n      triggers: {\n        value: {\n          prop: 'getElevationValue',\n          updateTrigger: 'getElevationValue'\n        },\n        weight: {\n          prop: 'getElevationWeight',\n          updateTrigger: 'getElevationWeight'\n        },\n        aggregation: {\n          prop: 'elevationAggregation'\n        }\n      },\n      updater: getGetValue\n    },\n    {\n      key: 'getBins',\n      triggers: {\n        _filterData: {\n          prop: '_filterData',\n          updateTrigger: '_filterData'\n        }\n      },\n      updater: getDimensionSortedBins\n    },\n    {\n      key: 'getDomain',\n      triggers: {\n        lowerPercentile: {\n          prop: 'elevationLowerPercentile'\n        },\n        upperPercentile: {\n          prop: 'elevationUpperPercentile'\n        },\n        scaleType: {prop: 'elevationScaleType'}\n      },\n      updater: getDimensionValueDomain\n    },\n    {\n      key: 'getScaleFunc',\n      triggers: {\n        domain: {prop: 'elevationDomain'},\n        range: {prop: 'elevationRange'},\n        scaleType: {prop: 'elevationScaleType'}\n      },\n      onSet: {\n        props: 'onSetElevationDomain'\n      },\n      updater: getDimensionScale\n    }\n  ],\n  getSubLayerAccessor\n};\n\nexport const defaultDimensions = [defaultColorDimension, defaultElevationDimension];\n\nexport type CPUAggregatorState = {layerData: {data?}; dimensions: {}; geoJSON?; clusterBuilder?};\n\nexport default class CPUAggregator {\n  static getDimensionScale: any;\n  state: CPUAggregatorState;\n  dimensionUpdaters: {[key: string]: DimensionType};\n  aggregationUpdater: AggregationType;\n\n  constructor(\n    opts: {\n      initialState?: CPUAggregatorState;\n      dimensions?: DimensionType[];\n      aggregation?: AggregationType;\n    } = {}\n  ) {\n    this.state = {\n      layerData: {},\n      dimensions: {\n        // color: {\n        //   getValue: null,\n        //   domain: null,\n        //   sortedBins: null,\n        //   scaleFunc: nop\n        // },\n        // elevation: {\n        //   getValue: null,\n        //   domain: null,\n        //   sortedBins: null,\n        //   scaleFunc: nop\n        // }\n      },\n      ...opts.initialState\n    };\n\n    this.dimensionUpdaters = {};\n    this.aggregationUpdater = opts.aggregation || defaultAggregation;\n\n    this._addDimension(opts.dimensions || defaultDimensions);\n  }\n\n  static defaultDimensions() {\n    return defaultDimensions;\n  }\n\n  updateAllDimensions(props) {\n    let dimensionChanges: BindedUpdaterType[] = [];\n    // update all dimensions\n    for (const dim in this.dimensionUpdaters) {\n      const updaters = this._accumulateUpdaters(0, props, this.dimensionUpdaters[dim]);\n      dimensionChanges = dimensionChanges.concat(updaters);\n    }\n\n    dimensionChanges.forEach(f => typeof f === 'function' && f());\n  }\n\n  updateAggregation(props, aggregationParams) {\n    const updaters = this._accumulateUpdaters(0, props, this.aggregationUpdater);\n    updaters.forEach(f => typeof f === 'function' && f(aggregationParams));\n  }\n\n  updateState(opts, aggregationParams) {\n    const {oldProps, props, changeFlags} = opts;\n    let dimensionChanges: BindedUpdaterType[] = [];\n\n    if (changeFlags.dataChanged) {\n      // if data changed update everything\n      this.updateAggregation(props, aggregationParams);\n      this.updateAllDimensions(props);\n\n      return this.state;\n    }\n\n    const aggregationChanges = this._getAggregationChanges(oldProps, props, changeFlags);\n\n    if (aggregationChanges && aggregationChanges.length) {\n      // get aggregatedData\n      aggregationChanges.forEach(f => typeof f === 'function' && f(aggregationParams));\n      this.updateAllDimensions(props);\n    } else {\n      // only update dimensions\n      dimensionChanges = this._getDimensionChanges(oldProps, props, changeFlags) || [];\n      dimensionChanges.forEach(f => typeof f === 'function' && f());\n    }\n\n    return this.state;\n  }\n\n  // Update private state\n  setState(updateObject) {\n    this.state = Object.assign({}, this.state, updateObject);\n  }\n\n  // Update private state.dimensions\n  _setDimensionState(key, updateObject) {\n    this.setState({\n      dimensions: Object.assign({}, this.state.dimensions, {\n        [key]: Object.assign({}, this.state.dimensions[key], updateObject)\n      })\n    });\n  }\n\n  _addAggregation(aggregation: AggregationType) {\n    this.aggregationUpdater = aggregation;\n  }\n\n  _addDimension(dimensions: DimensionType[] = []) {\n    dimensions.forEach(dimension => {\n      const {key} = dimension;\n      this.dimensionUpdaters[key] = dimension;\n    });\n  }\n\n  _needUpdateStep(\n    dimensionStep: UpdateStepsType | AggregationUpdateStepsType,\n    oldProps,\n    props,\n    changeFlags\n  ) {\n    // whether need to update current dimension step\n    // dimension step is the value, domain, scaleFunction of each dimension\n    // each step is an object with properties links to layer prop and whether the prop is\n    // controlled by updateTriggers\n    return Object.values(dimensionStep.triggers).some(item => {\n      if (item.updateTrigger) {\n        // check based on updateTriggers change first\n        return (\n          changeFlags.updateTriggersChanged &&\n          (changeFlags.updateTriggersChanged.all ||\n            changeFlags.updateTriggersChanged[item.updateTrigger])\n        );\n      }\n      // fallback to direct comparison\n      return oldProps[item.prop] !== props[item.prop];\n    });\n  }\n\n  _accumulateUpdaters<UpdaterObjectType extends DimensionType | AggregationType>(\n    step,\n    props,\n    dimension: UpdaterObjectType\n  ) {\n    type LocalUpdaterType = UpdaterObjectType extends DimensionType\n      ? BindedUpdaterType\n      : BindedAggregatedUpdaterType;\n    const updaters: LocalUpdaterType[] = [];\n    for (let i = step; i < dimension.updateSteps.length; i++) {\n      const updater = dimension.updateSteps[i].updater;\n      if (typeof updater === 'function') {\n        updaters.push(\n          updater.bind(this, dimension.updateSteps[i], props, dimension) as LocalUpdaterType\n        );\n      }\n    }\n\n    return updaters;\n  }\n\n  _getAllUpdaters<UpdaterObjectType extends DimensionType | AggregationType>(\n    dimension: UpdaterObjectType,\n    oldProps,\n    props,\n    changeFlags\n  ) {\n    type LocalUpdaterType = UpdaterObjectType extends DimensionType\n      ? BindedUpdaterType\n      : BindedAggregatedUpdaterType;\n    let updaters: LocalUpdaterType[] = [];\n    const needUpdateStep = dimension.updateSteps.findIndex(step =>\n      this._needUpdateStep(step, oldProps, props, changeFlags)\n    );\n\n    if (needUpdateStep > -1) {\n      updaters = updaters.concat(this._accumulateUpdaters(needUpdateStep, props, dimension));\n    }\n\n    return updaters;\n  }\n\n  _getAggregationChanges(oldProps, props, changeFlags) {\n    const updaters = this._getAllUpdaters(this.aggregationUpdater, oldProps, props, changeFlags);\n    return updaters.length ? updaters : null;\n  }\n\n  _getDimensionChanges(oldProps, props, changeFlags) {\n    let updaters: BindedUpdaterType[] = [];\n\n    // get dimension to be updated\n    for (const key in this.dimensionUpdaters) {\n      // return the first triggered updater for each dimension\n      const dimension = this.dimensionUpdaters[key];\n      const dimensionUpdaters = this._getAllUpdaters(dimension, oldProps, props, changeFlags);\n      updaters = updaters.concat(dimensionUpdaters);\n    }\n\n    return updaters.length ? updaters : null;\n  }\n\n  getUpdateTriggers(props) {\n    const _updateTriggers = props.updateTriggers || {};\n    const updateTriggers = {};\n\n    for (const key in this.dimensionUpdaters) {\n      const {\n        accessor,\n        updateSteps\n      }: {accessor; updateSteps: UpdateStepsType[]} = this.dimensionUpdaters[key];\n      // fold dimension triggers into each accessor\n      updateTriggers[accessor] = {};\n\n      updateSteps.forEach(step => {\n        Object.values(step.triggers || []).forEach(({prop, updateTrigger}) => {\n          if (updateTrigger) {\n            // if prop is based on updateTrigger e.g. getColorValue, getColorWeight\n            // and updateTriggers is passed in from layer prop\n            // fold the updateTriggers into accessor\n            const fromProp = _updateTriggers[updateTrigger];\n            if (typeof fromProp === 'object' && !Array.isArray(fromProp)) {\n              // if updateTrigger is an object spread it\n              Object.assign(updateTriggers[accessor], fromProp);\n            } else if (fromProp !== undefined) {\n              updateTriggers[accessor][prop] = fromProp;\n            }\n          } else {\n            // if prop is not based on updateTrigger\n            updateTriggers[accessor][prop] = props[prop];\n          }\n        });\n      });\n    }\n\n    return updateTriggers;\n  }\n\n  getPickingInfo({info}, layerProps) {\n    const isPicked = info.picked && info.index > -1;\n    let object = null;\n    const cell = isPicked ? this.state.layerData.data[info.index] : null;\n    if (cell) {\n      let binInfo = {};\n      for (const key in this.dimensionUpdaters) {\n        const {getPickingInfo} = this.dimensionUpdaters[key];\n        if (typeof getPickingInfo === 'function') {\n          binInfo = Object.assign(\n            {},\n            binInfo,\n            getPickingInfo(this.state.dimensions[key], cell, layerProps)\n          );\n        }\n      }\n\n      object = Object.assign(binInfo, cell, {\n        points: cell.filteredPoints || cell.points\n      });\n    }\n\n    // add bin  and  to info\n    return Object.assign(info, {\n      picked: Boolean(object),\n      // override object with picked cell\n      object\n    });\n  }\n\n  getAccessor(dimensionKey, layerProps) {\n    if (!this.dimensionUpdaters.hasOwnProperty(dimensionKey)) {\n      return nop;\n    }\n    return this.dimensionUpdaters[dimensionKey].getSubLayerAccessor(\n      this.state.dimensions[dimensionKey],\n      this.dimensionUpdaters[dimensionKey],\n      layerProps\n    );\n  }\n}\n\nCPUAggregator.getDimensionScale = getDimensionScale;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport Supercluster from 'supercluster';\nimport memoize from 'lodash.memoize';\nimport {MemoizedFunction} from 'lodash';\nimport {BBox, Position} from 'geojson';\n\nexport function getGeoJSON(data, getPosition, filterData) {\n  const raw = typeof filterData === 'function' ? data.filter(filterData) : data;\n\n  return raw\n    .map(d => ({\n      type: 'Point',\n      properties: {\n        data: d,\n        points: [d],\n        point_count: 1,\n        point_count_abbreviated: '1'\n      },\n      geometry: {\n        coordinates: getPosition(d)\n      }\n    }))\n    .filter(d => d.geometry.coordinates.every(Number.isFinite));\n}\n\nconst clusterResolver = ({clusterRadius}: {clusterRadius: number}) => `${clusterRadius}`;\n\nconst getClusterer = ({clusterRadius, geoJSON}: {clusterRadius: number; geoJSON}) =>\n  new Supercluster({\n    maxZoom: 20,\n    radius: clusterRadius,\n    reduce: (accumulated, props) => {\n      accumulated.points = [...accumulated.points, ...props.points];\n    },\n    map: props => ({points: [props.data]})\n  }).load(geoJSON);\n\nexport default class ClusterBuilder {\n  clusterer: (({clusterRadius, geoJSON}: {clusterRadius: number; geoJSON}) => Supercluster) &\n    MemoizedFunction;\n\n  constructor() {\n    this.clusterer = memoize(getClusterer, clusterResolver);\n  }\n\n  clustersAtZoom({\n    bbox,\n    clusterRadius,\n    geoJSON,\n    zoom\n  }: {\n    bbox: BBox;\n    clusterRadius: number;\n    geoJSON;\n    zoom: number;\n  }): {\n    points: any;\n    position: Position;\n    index: number;\n  }[] {\n    const clusterer = this.clusterer({clusterRadius, geoJSON});\n\n    // map clusters to formatted bins to be passed to deck.gl bin-sorter\n    const clusters = clusterer.getClusters(bbox, zoom).map((c, i) => ({\n      points: c.properties.points,\n      position: c.geometry.coordinates,\n      index: i\n    }));\n\n    return clusters;\n  }\n\n  clearClustererCache() {\n    this.clusterer.cache.clear?.();\n  }\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {ScatterplotLayer} from '@deck.gl/layers';\nimport {_AggregationLayer as AggregationLayer} from '@deck.gl/aggregation-layers';\n\nimport geoViewport from '@mapbox/geo-viewport';\nimport CPUAggregator, {\n  AggregationType,\n  defaultColorDimension,\n  DimensionType,\n  getDimensionScale\n} from '../layer-utils/cpu-aggregator';\nimport {getDistanceScales} from 'viewport-mercator-project';\nimport {max} from 'd3-array';\n\nimport {SCALE_TYPES, DEFAULT_COLOR_RANGE, LAYER_VIS_CONFIGS} from '@kepler.gl/constants';\nimport ClusterBuilder, {getGeoJSON} from '../layer-utils/cluster-utils';\nimport {RGBAColor} from '@kepler.gl/types';\nimport {AggregationLayerProps} from '@deck.gl/aggregation-layers/aggregation-layer';\n\nconst defaultRadius = LAYER_VIS_CONFIGS.clusterRadius.defaultValue;\nconst defaultRadiusRange = LAYER_VIS_CONFIGS.clusterRadiusRange.defaultValue;\n\nconst defaultGetColorValue = points => points.length;\nconst defaultGetRadiusValue = cell =>\n  cell.filteredPoints ? cell.filteredPoints.length : cell.points.length;\n\nfunction processGeoJSON(this: CPUAggregator, step, props, aggregation, {viewport}) {\n  const {data, getPosition, filterData} = props;\n  const geoJSON = getGeoJSON(data, getPosition, filterData);\n  const clusterBuilder = new ClusterBuilder();\n\n  this.setState({geoJSON, clusterBuilder});\n}\n\nfunction getClusters(this: CPUAggregator, step, props, aggregation, {viewport}) {\n  const {geoJSON, clusterBuilder} = this.state;\n  const {clusterRadius, zoom, width, height} = props;\n  const {longitude, latitude} = viewport;\n\n  // zoom needs to be an integer for the different map utils. Also helps with cache key.\n  const bbox = geoViewport.bounds([longitude, latitude], zoom, [width, height]);\n  const clusters = clusterBuilder.clustersAtZoom({bbox, clusterRadius, geoJSON, zoom});\n\n  this.setState({\n    layerData: {data: clusters}\n  });\n}\n\nfunction getSubLayerRadius(dimensionState, dimension, layerProps) {\n  return cell => {\n    const {getRadiusValue} = layerProps;\n    const {scaleFunc} = dimensionState;\n    return scaleFunc(getRadiusValue(cell));\n  };\n}\n\nexport const clusterAggregation: AggregationType = {\n  key: 'position',\n  updateSteps: [\n    {\n      key: 'geojson',\n      triggers: {\n        position: {\n          prop: 'getPosition',\n          updateTrigger: 'getPosition'\n        },\n        filterData: {\n          prop: 'filterData',\n          updateTrigger: 'filterData'\n        }\n      },\n      updater: processGeoJSON\n    },\n    {\n      key: 'clustering',\n      triggers: {\n        clusterRadius: {\n          prop: 'clusterRadius'\n        },\n        zoom: {\n          prop: 'zoom'\n        },\n        width: {\n          prop: 'width'\n        },\n        height: {\n          prop: 'height'\n        }\n      },\n      updater: getClusters\n    }\n  ]\n};\n\nfunction getRadiusValueDomain(this: CPUAggregator, step, props, dimensionUpdater) {\n  const {key} = dimensionUpdater;\n  const {getRadiusValue} = props;\n  const {layerData} = this.state;\n\n  const valueDomain = [0, max(layerData.data, getRadiusValue)];\n  this._setDimensionState(key, {valueDomain});\n}\n\nconst clusterLayerDimensions: [DimensionType<RGBAColor>, DimensionType<number>] = [\n  defaultColorDimension,\n  {\n    key: 'radius',\n    accessor: 'getRadius',\n    nullValue: 0,\n    updateSteps: [\n      {\n        key: 'getDomain',\n        triggers: {\n          value: {\n            prop: 'getRadiusValue',\n            updateTrigger: 'getRadiusValue'\n          }\n        },\n        updater: getRadiusValueDomain\n      },\n      {\n        key: 'getScaleFunc',\n        triggers: {\n          domain: {prop: 'radiusDomain'},\n          range: {prop: 'radiusRange'},\n          scaleType: {prop: 'radiusScaleType'}\n        },\n        updater: getDimensionScale\n      }\n    ],\n    getSubLayerAccessor: getSubLayerRadius,\n    getPickingInfo: (dimensionState, cell, layerProps) => {\n      const radiusValue = layerProps.getRadiusValue(cell);\n      return {radiusValue};\n    }\n  }\n];\n\nconst defaultProps = {\n  clusterRadius: defaultRadius,\n  colorDomain: null,\n  colorRange: DEFAULT_COLOR_RANGE,\n  colorScaleType: SCALE_TYPES.quantize,\n  radiusScaleType: SCALE_TYPES.sqrt,\n  radiusRange: defaultRadiusRange,\n  getPosition: {type: 'accessor', value: x => x.position},\n  getColorValue: {type: 'accessor', value: defaultGetColorValue},\n  getRadiusValue: {type: 'accessor', value: defaultGetRadiusValue}\n};\n\nexport default class ClusterLayer extends AggregationLayer<\n  any,\n  AggregationLayerProps<any> & {radiusScale: number}\n> {\n  initializeState() {\n    const cpuAggregator = new CPUAggregator({\n      aggregation: clusterAggregation,\n      dimensions: clusterLayerDimensions\n    });\n\n    this.state = {\n      cpuAggregator,\n      aggregatorState: cpuAggregator.state\n    };\n    const attributeManager = this.getAttributeManager();\n    attributeManager.add({\n      positions: {size: 3, accessor: 'getPosition'}\n    });\n  }\n\n  updateState({oldProps, props, changeFlags}) {\n    this.setState({\n      // make a copy of the internal state of cpuAggregator for testing\n      aggregatorState: this.state.cpuAggregator.updateState(\n        {oldProps, props, changeFlags},\n        {\n          viewport: this.context.viewport,\n          attributes: this.getAttributes(),\n          numInstances: this.getNumInstances(props)\n        }\n      )\n    });\n  }\n\n  getPickingInfo({info}) {\n    return this.state.cpuAggregator.getPickingInfo({info}, this.props);\n  }\n\n  _getSublayerUpdateTriggers() {\n    return this.state.cpuAggregator.getUpdateTriggers(this.props);\n  }\n\n  _getSubLayerAccessors() {\n    return {\n      getRadius: this.state.cpuAggregator.getAccessor('radius', this.props),\n      getFillColor: this.state.cpuAggregator.getAccessor('fillColor', this.props)\n    };\n  }\n\n  renderLayers() {\n    // for subclassing, override this method to return\n    // customized sub layer props\n    const {id, radiusScale} = this.props;\n    const {cpuAggregator} = this.state;\n\n    // base layer props\n    const {visible, opacity, pickable, autoHighlight, highlightColor} = this.props;\n    const updateTriggers = this._getSublayerUpdateTriggers();\n    const accessors = this._getSubLayerAccessors();\n\n    // @ts-expect-error\n    const distanceScale = getDistanceScales(this.context.viewport);\n    const metersPerPixel = distanceScale.metersPerPixel[0];\n\n    // return props to the sublayer constructor\n    return new ScatterplotLayer({\n      id: `${id}-cluster`,\n      data: cpuAggregator.state.layerData.data,\n      radiusScale: metersPerPixel * radiusScale,\n      visible,\n      opacity,\n      pickable,\n      autoHighlight,\n      highlightColor,\n      updateTriggers,\n      parameters: {\n        depthMask: false\n      },\n      ...accessors\n    });\n  }\n}\n\nClusterLayer.layerName = 'ClusterLayer';\nClusterLayer.defaultProps = defaultProps;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {UNIT} from '@deck.gl/core';\nimport {ColumnLayer, ColumnLayerProps} from '@deck.gl/layers/typed';\nimport GL from '@luma.gl/constants';\n\nimport {editShader} from '../';\n\nfunction addInstanceCoverage(vs) {\n  const addDecl = editShader(\n    vs,\n    'hexagon cell vs add instance 1',\n    'in vec3 instancePickingColors;',\n    `in vec3 instancePickingColors;\n     in float instanceCoverage;`\n  );\n\n  return editShader(\n    addDecl,\n    'hexagon cell vs add instance 2',\n    'float dotRadius = radius * coverage * shouldRender;',\n    'float dotRadius = radius * coverage * instanceCoverage * shouldRender;'\n  );\n}\n\ntype EnhancedColumnLayerProps = ColumnLayerProps<any> & {\n  strokeOpacity: any;\n};\n\n// TODO: export all deck.gl layers from kepler.gl\nclass EnhancedColumnLayer extends ColumnLayer<any, EnhancedColumnLayerProps> {\n  getShaders() {\n    const shaders = super.getShaders();\n\n    return {\n      ...shaders,\n      vs: addInstanceCoverage(shaders.vs)\n    };\n  }\n\n  initializeState() {\n    super.initializeState();\n\n    this.getAttributeManager()?.addInstanced({\n      instanceCoverage: {size: 1, accessor: 'getCoverage'}\n    });\n  }\n\n  draw({uniforms}) {\n    const {\n      lineWidthUnits,\n      lineWidthScale,\n      lineWidthMinPixels,\n      lineWidthMaxPixels,\n      radiusUnits,\n      elevationScale,\n      extruded,\n      filled,\n      stroked,\n      strokeOpacity,\n      wireframe,\n      offset,\n      coverage,\n      radius,\n      angle\n    } = this.props;\n    const {model, fillVertexCount, wireframeVertexCount, edgeDistance} = this.state;\n\n    model.setUniforms(uniforms).setUniforms({\n      radius,\n      angle: (angle / 180) * Math.PI,\n      offset,\n      extruded,\n      stroked,\n      coverage,\n      elevationScale,\n      edgeDistance,\n      radiusUnits: UNIT[radiusUnits],\n      widthUnits: UNIT[lineWidthUnits],\n      widthScale: lineWidthScale,\n      widthMinPixels: lineWidthMinPixels,\n      widthMaxPixels: lineWidthMaxPixels\n    });\n\n    // When drawing 3d: draw wireframe first so it doesn't get occluded by depth test\n    if (extruded && wireframe) {\n      model.setProps({isIndexed: true});\n      model\n        .setVertexCount(wireframeVertexCount)\n        .setDrawMode(GL.LINES)\n        .setUniforms({isStroke: true})\n        .draw();\n    }\n    if (filled) {\n      model.setProps({isIndexed: false});\n      model\n        .setVertexCount(fillVertexCount)\n        .setDrawMode(GL.TRIANGLE_STRIP)\n        .setUniforms({isStroke: false})\n        .draw();\n    }\n    // When drawing 2d: draw fill before stroke so that the outline is always on top\n    if (!extruded && stroked) {\n      model.setProps({isIndexed: false});\n      // The width of the stroke is achieved by flattening the side of the cylinder.\n      // Skip the last 1/3 of the vertices which is the top.\n      model\n        .setVertexCount((fillVertexCount * 2) / 3)\n        .setDrawMode(GL.TRIANGLE_STRIP)\n        .setUniforms({isStroke: true, opacity: strokeOpacity})\n        .draw();\n    }\n  }\n}\n\nEnhancedColumnLayer.layerName = 'EnhancedColumnLayer';\n\nexport default EnhancedColumnLayer;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {CPUGridLayer} from '@deck.gl/aggregation-layers';\nimport CPUAggregator, {AggregationType, getAggregatedData} from '../layer-utils/cpu-aggregator';\n\nexport const gridAggregation: AggregationType = {\n  key: 'position',\n  updateSteps: [\n    {\n      key: 'aggregate',\n      triggers: {\n        cellSize: {\n          prop: 'cellSize'\n        },\n        position: {\n          prop: 'getPosition',\n          updateTrigger: 'getPosition'\n        },\n        aggregator: {\n          prop: 'gridAggregator'\n        }\n      },\n      updater: getAggregatedData\n    }\n  ]\n};\n\nexport default class ScaleEnhancedGridLayer extends CPUGridLayer<any> {\n  initializeState() {\n    const cpuAggregator = new CPUAggregator({\n      aggregation: gridAggregation\n    });\n\n    this.state = {\n      cpuAggregator,\n      aggregatorState: cpuAggregator.state\n    };\n    const attributeManager = this.getAttributeManager();\n    attributeManager.add({\n      positions: {size: 3, accessor: 'getPosition'}\n    });\n  }\n}\n\nScaleEnhancedGridLayer.layerName = 'ScaleEnhancedGridLayer';\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {HexagonLayer} from '@deck.gl/aggregation-layers';\nimport CPUAggregator, {AggregationType, getAggregatedData} from '../layer-utils/cpu-aggregator';\n\nexport const hexagonAggregation: AggregationType = {\n  key: 'position',\n  updateSteps: [\n    {\n      key: 'aggregate',\n      triggers: {\n        cellSize: {\n          prop: 'radius'\n        },\n        position: {\n          prop: 'getPosition',\n          updateTrigger: 'getPosition'\n        },\n        aggregator: {\n          prop: 'hexagonAggregator'\n        }\n      },\n      updater: getAggregatedData\n    }\n  ]\n};\n\nexport default class ScaleEnhancedHexagonLayer extends HexagonLayer<any> {\n  initializeState() {\n    const cpuAggregator = new CPUAggregator({\n      aggregation: hexagonAggregation\n    });\n\n    this.state = {\n      cpuAggregator,\n      aggregatorState: cpuAggregator.state\n    };\n    const attributeManager = this.getAttributeManager();\n    attributeManager.add({\n      positions: {size: 3, accessor: 'getPosition'}\n    });\n  }\n}\n\nScaleEnhancedHexagonLayer.layerName = 'ScaleEnhancedHexagonLayer';\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {LineLayer, LineLayerProps} from '@deck.gl/layers';\nimport GL from '@luma.gl/constants';\nimport {RGBAColor} from 'deck.gl';\nimport {editShader} from '../';\n\nconst defaultProps = {\n  ...LineLayer.defaultProps,\n  getTargetColor: x => x.color || [0, 0, 0, 255]\n};\n\nfunction addInstanceColorShader(vs) {\n  const targetColorVs = editShader(\n    vs,\n    'line target color vs',\n    'attribute vec4 instanceColors;',\n    'attribute vec4 instanceColors; attribute vec4 instanceTargetColors;'\n  );\n\n  return editShader(\n    targetColorVs,\n    'line color vs',\n    'vColor = vec4(instanceColors.rgb, instanceColors.a * opacity);',\n    `vec4 color = mix(instanceColors, instanceTargetColors, positions.x);` +\n      `vColor = vec4(color.rgb, color.a * opacity);`\n  );\n}\n\nfunction addElevationScale(vs) {\n  let elevationVs = editShader(\n    vs,\n    'line elevation scale 1 vs - inject elevation scale',\n    'uniform float widthMaxPixels;',\n    `uniform float widthMaxPixels;\n     uniform float elevationScale;`\n  );\n\n  elevationVs = editShader(\n    elevationVs,\n    'line elevation scale 2 vs - multiply by elevation scale',\n    `geometry.worldPosition = instanceSourcePositions;\n  geometry.worldPositionAlt = instanceTargetPositions;`,\n    `vec3 source_world = instanceSourcePositions;\n     vec3 target_world = instanceTargetPositions;\n     source_world.z *= elevationScale;\n     target_world.z *= elevationScale;\n     \n     geometry.worldPosition = source_world;\n     geometry.worldPositionAlt = target_world;`\n  );\n\n  elevationVs = editShader(\n    elevationVs,\n    'line elevation scale 3 vs',\n    `vec3 source_world = instanceSourcePositions;\n  vec3 target_world = instanceTargetPositions;`,\n    ''\n  );\n\n  return elevationVs;\n}\n\nexport default class EnhancedLineLayer extends LineLayer<\n  any,\n  LineLayerProps<any> & {elevationScale: number; getTargetColor: RGBAColor}\n> {\n  getShaders() {\n    const shaders = super.getShaders();\n\n    let vs = addInstanceColorShader(shaders.vs);\n    vs = addElevationScale(vs);\n\n    return {\n      ...shaders,\n      vs\n    };\n  }\n\n  draw({uniforms}) {\n    const {elevationScale} = this.props;\n    super.draw({uniforms: {...uniforms, elevationScale}});\n  }\n\n  initializeState() {\n    super.initializeState(undefined);\n    const {attributeManager} = this.state;\n    attributeManager.addInstanced({\n      instanceTargetColors: {\n        size: this.props.colorFormat?.length,\n        type: GL.UNSIGNED_BYTE,\n        normalized: true,\n        transition: true,\n        accessor: 'getTargetColor',\n        defaultValue: [0, 0, 0, 255]\n      }\n    });\n  }\n}\n\nEnhancedLineLayer.layerName = 'EnhancedLineLayer';\nEnhancedLineLayer.defaultProps = defaultProps;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {ScatterplotLayer, ScatterplotLayerProps} from '@deck.gl/layers';\nimport {Geometry, Model} from '@luma.gl/core';\nimport GL from '@luma.gl/constants';\n\nconst DEFAULT_POS = [-1, -1, 0, -1, 1, 0, 1, 1, 0, 1, -1, 0];\n\nexport interface ScatterplotIconLayerProps extends ScatterplotLayerProps<any> {\n  iconGeometry: number;\n}\n\nexport default class ScatterplotIconLayer extends ScatterplotLayer<any, ScatterplotIconLayerProps> {\n  _getModel(gl: WebGLRenderingContext) {\n    // use default scatterplot shaders\n    const shaders = this.getShaders(undefined);\n\n    const {iconGeometry} = this.props;\n\n    const geometry = iconGeometry\n      ? new Geometry({\n          drawMode: GL.TRIANGLES,\n          attributes: {\n            positions: new Float32Array(iconGeometry)\n          }\n        })\n      : new Geometry({\n          drawMode: GL.TRIANGLE_FAN,\n          attributes: {\n            positions: new Float32Array(DEFAULT_POS)\n          }\n        });\n\n    return new Model(gl, {\n      ...shaders,\n      id: this.props.id,\n      geometry,\n      isInstanced: true,\n      // @ts-ignore\n      shaderCache: this.context.shaderCache\n    });\n  }\n}\n\nScatterplotIconLayer.layerName = 'ScatterplotIconLayer';\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {CompositeLayer} from '@deck.gl/core';\nimport {CompositeLayerProps} from '@deck.gl/core/lib/composite-layer';\nimport {Position, RGBAColor} from 'deck.gl';\nimport {RGBColor} from '@kepler.gl/types';\nimport ScatterplotIconLayer from './scatterplot-icon-layer';\n\n// default icon geometry is a square\nconst DEFAULT_ICON_GEOMETRY = [1, 1, 0, 1, -1, 0, -1, -1, 0, -1, -1, 0, -1, 1, 0, 1, 1, 0];\n\nconst defaultProps = {\n  getIconGeometry: (iconId: string) => DEFAULT_ICON_GEOMETRY,\n  getIcon: (d: {icon: string}) => d.icon\n};\n\nexport interface SvgIconLayerProps extends CompositeLayerProps<any> {\n  getIconGeometry: (i: string) => number[];\n  getIcon: (d: {icon: string}) => string;\n  getPosition: (d: any) => Position;\n  getRadius: ((d: any) => number) | number;\n  getFillColor: RGBColor | RGBAColor;\n}\n\nexport default class SvgIconLayer extends CompositeLayer<any, SvgIconLayerProps> {\n  // Must be defined\n  initializeState() {\n    this.state = {\n      data: {}\n    };\n  }\n\n  updateState({changeFlags}) {\n    if (changeFlags.dataChanged) {\n      this._extractSublayers();\n    }\n  }\n\n  _extractSublayers() {\n    const {data, getIconGeometry, getIcon} = this.props;\n\n    const iconLayers = {};\n    for (let i = 0; i < data.length; i++) {\n      const iconId = getIcon(data[i]);\n      iconLayers[iconId] = iconLayers[iconId] || {\n        id: iconId,\n        geometry: getIconGeometry(iconId) || DEFAULT_ICON_GEOMETRY,\n        data: []\n      };\n      iconLayers[iconId].data.push(data[i]);\n    }\n    this.setState({\n      data: Object.values(iconLayers)\n    });\n  }\n\n  _updateAutoHighlight(info) {\n    info?.sourceLayer?.updateAutoHighlight(info);\n  }\n\n  renderLayers() {\n    const layerId = this.props.id;\n\n    const layers =\n      this.state.data &&\n      this.state.data.length &&\n      this.state.data.map(\n        ({id, data, geometry}) =>\n          new ScatterplotIconLayer({\n            ...this.props,\n            id: `${layerId}-${id}`,\n            data,\n            iconGeometry: geometry\n          })\n      );\n\n    return layers && layers.length > 0 ? layers : null;\n  }\n}\n\nSvgIconLayer.layerName = 'SvgIconLayer';\nSvgIconLayer.defaultProps = defaultProps;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {project} from '@deck.gl/core';\n\nconst vs = `\n  #ifdef NON_INSTANCED_MODEL\n    #define FILTER_ARROW_ATTRIB filtered\n  #else\n    #define FILTER_ARROW_ATTRIB instanceFiltered\n  #endif\n  attribute float FILTER_ARROW_ATTRIB;\n`;\n\nconst fs = ``;\n\nconst inject = {\n  'vs:#decl': `\n    varying float is_filtered;\n  `,\n  'vs:#main-end': `\n    is_filtered = FILTER_ARROW_ATTRIB;\n  `,\n  'fs:#decl': `\n    varying float is_filtered;\n  `,\n  'fs:DECKGL_FILTER_COLOR': `\n    // abandon the fragments if  it is not filtered\n    if (is_filtered == 0.) {\n      discard;\n    }\n  `\n};\n\nexport default {\n  name: 'filter-arrow',\n  dependencies: [project],\n  vs: vs,\n  fs: fs,\n  inject: inject,\n  getUniforms: () => {}\n};\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {Layer, LayerExtension} from '@deck.gl/core';\nimport {LayerContext} from '@deck.gl/core/lib/layer';\nimport GL from '@luma.gl/constants';\n\nimport shaderModule from './filter-shader-module';\n\nconst VALUE_FILTERED = 1;\n\nconst defaultProps = {\n  getFiltered: {type: 'accessor', value: VALUE_FILTERED}\n};\n\nexport type FilterArrowExtensionProps = {\n  getFiltered?: () => number;\n};\n\n/**\n * FilterArrowExtension - a deck.gl extension to filter arrow layer\n *\n * A simple extension to filter arrow layer based on the result of CPU filteredIndex,\n * so we can avoid filtering on the raw Arrow table and recreating geometry attributes.\n * Specifically, an attribute `filtered` is added to the layer to indicate whether the feature has been Filtered\n * the shader module is modified to discard the feature if filtered value is 0\n * the accessor getFiltered is used to get the value of `filtered` based on the value `filteredIndex` in Arrowlayer\n */\nexport default class FilterArrowExtension extends LayerExtension {\n  static defaultProps = defaultProps;\n  static extensionName = 'FilterArrowExtension';\n\n  getShaders(extension: any) {\n    return {\n      modules: [shaderModule],\n      defines: {}\n    };\n  }\n\n  initializeState(this: Layer<FilterArrowExtensionProps>, context: LayerContext, extension: this) {\n    const attributeManager = this.getAttributeManager();\n    if (attributeManager) {\n      attributeManager.add({\n        filtered: {\n          size: 1,\n          type: GL.FLOAT,\n          accessor: 'getFiltered',\n          shaderAttributes: {\n            filtered: {\n              divisor: 0\n            },\n            instanceFiltered: {\n              divisor: 1\n            }\n          }\n        }\n      });\n    }\n  }\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {console as Console} from 'global/window';\n\n/*\n * Amendment to default layer vertex shader\n * @param {string} vs\n * @param {string} type\n * @param {string} originalText\n * @param {string} testToReplace\n * @return {string} output shader\n *\n */\nexport function editShader(vs: string, type: string, originalText: string, testToReplace: string) {\n  if (!vs.includes(originalText)) {\n    // Here we call Console.error when we fail to edit deck.gl shader\n    // This should be caught by layer test\n    Console.error(`Cannot edit ${type} layer shader`);\n    return vs;\n  }\n\n  return vs.replace(originalText, testToReplace);\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {Component, createRef, MouseEvent, ComponentType} from 'react';\nimport styled from 'styled-components';\nimport {FormattedMessage} from 'react-intl';\nimport {rgbToHex} from '@kepler.gl/utils';\nimport SingleColorPalette from './single-color-palette';\nimport ColorRangeSelector from './color-range-selector';\nimport ColorPalette from './color-palette';\nimport {StyledPanelDropdown, PanelLabel} from '../../common/styled-components';\nimport onClickOutside from 'react-onclickoutside';\nimport {ColorRange} from '@kepler.gl/constants';\nimport RangeSliderFactory from '../../common/range-slider';\nimport {NestedPartial, RGBColor, RGBAColor, ColorUI} from '@kepler.gl/types';\n\ntype ColorSelectorInputProps = {\n  active: boolean;\n  disabled?: boolean;\n  inputTheme?: string;\n};\n\nexport type ColorSet = {\n  selectedColor: RGBColor | RGBAColor | ColorRange;\n  setColor: (v: RGBColor | RGBAColor | ColorRange) => void;\n  isRange?: boolean;\n  label?: string;\n};\n\ntype ColorSelectorProps = {\n  colorSets: ColorSet[];\n  colorUI?: ColorUI;\n  inputTheme?: string;\n  disabled?: boolean;\n  useOpacity?: boolean;\n  setColorUI?: (newConfig: NestedPartial<ColorUI>) => void;\n};\n\nconst OpacitySliderWrapper = styled.div`\n  padding: 0px 12px 12px 12px;\n`;\n\nconst OPACITY_SLIDER_PROPS = {\n  type: 'number',\n  range: [0, 1],\n  value0: 0,\n  step: 0.01,\n  isRanged: false,\n  label: 'Opacity',\n  showInput: true\n};\n\nexport const ColorBlock = styled.div<{backgroundcolor: RGBColor}>`\n  width: 32px;\n  height: 18px;\n  border-radius: 1px;\n  background-color: ${props =>\n    Array.isArray(props.backgroundcolor)\n      ? `rgb(${props.backgroundcolor.slice(0, 3).join(',')})`\n      : 'transparent'};\n`;\n\nexport const ColorSelectorInput = styled.div<ColorSelectorInputProps>`\n  ${props => (props.inputTheme === 'secondary' ? props.theme.secondaryInput : props.theme.input)};\n  height: ${props => props.theme.inputBoxHeight};\n\n  .color-selector__selector__label {\n    text-transform: capitalize;\n    font-size: 12px;\n    text-align: center;\n    color: ${props => props.theme.inputPlaceholderColor};\n  }\n`;\n\nexport const InputBoxContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  .color-select__input-group {\n    flex-grow: 1;\n  }\n  .color-select__input-group:nth-child(2) {\n    margin-left: 12px;\n  }\n`;\n\nColorSelectorFactory.deps = [RangeSliderFactory];\n\nfunction ColorSelectorFactory(RangeSlider): ComponentType<ColorSelectorProps> {\n  class ColorSelector extends Component<ColorSelectorProps> {\n    static defaultProps = {\n      colorSets: []\n    };\n\n    state = {\n      showDropdown: false\n    };\n\n    node = createRef<HTMLDivElement>();\n\n    handleClickOutside = e => {\n      if (this.props.colorUI && Number.isInteger(this.props.colorUI.showSketcher)) {\n        // if sketcher is open, let sketch to close itself first\n        return;\n      }\n\n      this._closePanelDropdown();\n    };\n\n    _getEditing = () => {\n      return this.props.colorUI ? this.props.colorUI.showDropdown : this.state.showDropdown;\n    };\n\n    _closePanelDropdown = () => {\n      if (this._getEditing() === false) {\n        return;\n      }\n\n      if (this.props.setColorUI) {\n        this.props.setColorUI({showDropdown: false, showSketcher: false});\n      } else {\n        this.setState({showDropdown: false});\n      }\n    };\n\n    _onSelectColor = (color: RGBColor | ColorRange, e: MouseEvent) => {\n      e.stopPropagation();\n      const editing = this._getEditing();\n      const colorSet = typeof editing === 'number' && this.props.colorSets[editing];\n      if (colorSet) {\n        this._setColor(colorSet, color, colorSet.selectedColor[3]);\n      }\n    };\n\n    _onSelectOpacity = (opacity: number[], e: MouseEvent) => {\n      if (e) e.stopPropagation();\n      const editing = this._getEditing();\n      const colorSet = typeof editing === 'number' && this.props.colorSets[editing];\n      if (colorSet) {\n        this._setColor(colorSet, colorSet.selectedColor, Math.round(opacity[1] * 255));\n      }\n    };\n\n    _setColor = (colorSet: ColorSet, color: RGBColor | RGBAColor | ColorRange, opacity: number) => {\n      if (this.props.useOpacity && Array.isArray(color)) {\n        colorSet.setColor([...color.slice(0, 3), opacity] as RGBAColor);\n      } else {\n        colorSet.setColor(color);\n      }\n    };\n\n    _showDropdown = (e, i) => {\n      e.stopPropagation();\n      e.preventDefault();\n\n      if (this.props.setColorUI) {\n        this.props.setColorUI({showDropdown: i});\n      } else {\n        this.setState({showDropdown: i});\n      }\n    };\n\n    render() {\n      const {colorSets, useOpacity, disabled, inputTheme, colorUI} = this.props;\n\n      const editing = this._getEditing();\n      const currentEditing =\n        typeof editing === 'number' && colorSets[editing] && typeof colorSets[editing] === 'object';\n\n      return (\n        <div className=\"color-selector\" ref={this.node}>\n          <InputBoxContainer>\n            {colorSets.map((cSet, i) => (\n              <div className=\"color-select__input-group\" key={i}>\n                <ColorSelectorInput\n                  className=\"color-selector__selector\"\n                  active={editing === i}\n                  disabled={disabled}\n                  inputTheme={inputTheme}\n                  onMouseDown={e => this._showDropdown(e, i)}\n                >\n                  {cSet.isRange ? (\n                    <ColorPalette colors={(cSet.selectedColor as ColorRange).colors} />\n                  ) : (\n                    <ColorBlock\n                      className=\"color-selector__selector__block\"\n                      backgroundcolor={cSet.selectedColor as RGBColor}\n                    />\n                  )}\n                  {cSet.label ? (\n                    <div className=\"color-selector__selector__label\">{cSet.label}</div>\n                  ) : null}\n                </ColorSelectorInput>\n              </div>\n            ))}\n          </InputBoxContainer>\n          {currentEditing ? (\n            <StyledPanelDropdown className=\"color-selector__dropdown\">\n              {colorSets[editing as number].isRange ? (\n                <ColorRangeSelector\n                  selectedColorRange={colorSets[editing as number].selectedColor as ColorRange}\n                  onSelectColorRange={this._onSelectColor}\n                  setColorPaletteUI={this.props.setColorUI}\n                  colorPaletteUI={colorUI as ColorUI}\n                />\n              ) : (\n                <SingleColorPalette\n                  selectedColor={rgbToHex(colorSets[editing as number].selectedColor as RGBColor)}\n                  onSelectColor={this._onSelectColor}\n                />\n              )}\n              {useOpacity ? (\n                <OpacitySliderWrapper>\n                  <PanelLabel>\n                    <FormattedMessage id=\"color.opacity\" />\n                  </PanelLabel>\n                  <RangeSlider\n                    {...OPACITY_SLIDER_PROPS}\n                    value1={colorSets[editing as number].selectedColor[3] / 255}\n                    onChange={this._onSelectOpacity}\n                  />\n                </OpacitySliderWrapper>\n              ) : null}\n            </StyledPanelDropdown>\n          ) : null}\n        </div>\n      );\n    }\n  }\n  return onClickOutside(ColorSelector) as ComponentType<ColorSelectorProps>;\n}\n\nexport default ColorSelectorFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nexport const LOCALES = {\n  en: 'English',\n  fi: 'Suomi',\n  pt: 'Português',\n  es: 'Español',\n  ca: 'Català',\n  ja: '日本語',\n  cn: '简体中文',\n  ru: 'Русский'\n};\n\n/**\n * Localization can be passed to `KeplerGl` via uiState `locale`.\n * Available languages are `en` and `fi`. Default language is `en`\n * @constant\n * @public\n * @example\n * ```js\n * import {combineReducers} from 'redux';\n * import {LOCALE_CODES} from 'kepler.gl/localization';\n *\n * const customizedKeplerGlReducer = keplerGlReducer\n *   .initialState({\n *     uiState: {\n *       // use Finnish locale\n *       locale: LOCALE_CODES.fi\n *     }\n *   });\n *\n * ```\n */\n\nexport type LocaleCodesType = {\n  [key: string]: string;\n};\n\nexport const LOCALE_CODES: LocaleCodesType = Object.keys(LOCALES).reduce(\n  (acc, key) => ({...acc, [key]: key}),\n  {}\n);\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {LOCALES} from '../locales';\n\nexport default {\n  property: {\n    weight: 'weight',\n    label: 'label',\n    fillColor: 'fill color',\n    color: 'color',\n    coverage: 'coverage',\n    strokeColor: 'stroke color',\n    radius: 'radius',\n    outline: 'outline',\n    stroke: 'stroke',\n    density: 'density',\n    height: 'height',\n    sum: 'sum',\n    pointCount: 'Point Count'\n  },\n  placeholder: {\n    search: 'Search',\n    selectField: 'Select a field',\n    yAxis: 'Y Axis',\n    selectType: 'Select A Type',\n    selectValue: 'Select A Value',\n    enterValue: 'Enter a value',\n    empty: 'empty',\n    selectLayer: 'Select a layer'\n  },\n  misc: {\n    by: '',\n    valuesIn: 'Values in',\n    valueEquals: 'Value equals',\n    dataSource: 'Data Source',\n    brushRadius: 'Brush Radius (km)',\n    empty: ' '\n  },\n  mapLayers: {\n    title: 'Map Layers',\n    label: 'Label',\n    road: 'Road',\n    border: 'Border',\n    building: 'Building',\n    water: 'Water',\n    land: 'Land',\n    '3dBuilding': '3d Building',\n    background: 'Background'\n  },\n  panel: {\n    text: {\n      label: 'label',\n      labelWithId: 'Label {labelId}',\n      fontSize: 'Font size',\n      fontColor: 'Font color',\n      backgroundColor: 'Background color',\n      textAnchor: 'Text anchor',\n      alignment: 'Alignment',\n      addMoreLabel: 'Add More Label',\n      outlineWidth: 'Outline width',\n      outlineColor: 'Outline color'\n    }\n  },\n  sidebar: {\n    panels: {\n      layer: 'Layers',\n      filter: 'Filters',\n      interaction: 'Interactions',\n      basemap: 'Base map'\n    },\n    panelViewToggle: {\n      list: 'View List',\n      byDataset: 'View by Dataset'\n    }\n  },\n  layer: {\n    required: 'Required*',\n    radius: 'Radius',\n    color: 'Color',\n    fillColor: 'Fill Color',\n    outline: 'Outline',\n    weight: 'Weight',\n    propertyBasedOn: '{property} based on',\n    coverage: 'Coverage',\n    stroke: 'Stroke',\n    strokeWidth: 'Stroke Width',\n    strokeColor: 'Stroke Color',\n    basic: 'Basic',\n    trailLength: 'Trail Length',\n    trailLengthDescription: 'Number of seconds for a path to completely fade out',\n    newLayer: 'new layer',\n    elevationByDescription: 'When off, height is based on count of points',\n    colorByDescription: 'When off, color is based on count of points',\n    aggregateBy: 'Aggregate {field} by',\n    '3DModel': '3D Model',\n    '3DModelOptions': '3D Model Options',\n    type: {\n      point: 'point',\n      arc: 'arc',\n      line: 'line',\n      grid: 'grid',\n      hexbin: 'hexbin',\n      polygon: 'polygon',\n      geojson: 'geojson',\n      cluster: 'cluster',\n      icon: 'icon',\n      heatmap: 'heatmap',\n      hexagon: 'hexagon',\n      hexagonid: 'H3',\n      trip: 'trip',\n      s2: 'S2',\n      '3d': '3D'\n    },\n    layerUpdateError:\n      'An error occurred during layer update: {errorMessage}. Make sure the format of the input data is valid.'\n  },\n  layerVisConfigs: {\n    angle: 'Angle',\n    strokeWidth: 'Stroke Width (Pixels)',\n    strokeWidthRange: 'Stroke Width Range',\n    radius: 'Radius',\n    fixedRadius: 'Fixed Radius to meter',\n    fixedRadiusDescription: 'Map radius to absolute radius in meters, e.g. 5 to 5 meters',\n    radiusRange: 'Radius Range',\n    clusterRadius: 'Cluster Radius in Pixels',\n    radiusRangePixels: 'Radius Range in pixels',\n    opacity: 'Opacity',\n    coverage: 'Coverage',\n    outline: 'Outline',\n    colorRange: 'Color range',\n    stroke: 'Stroke',\n    strokeColor: 'Stroke Color',\n    strokeColorRange: 'Stroke Color range',\n    targetColor: 'Target Color',\n    colorAggregation: 'Color Aggregation',\n    heightAggregation: 'Height Aggregation',\n    resolutionRange: 'Resolution range',\n    sizeScale: 'Size Scale',\n    worldUnitSize: 'World Unit Size',\n    elevationScale: 'Elevation Scale',\n    enableElevationZoomFactor: 'Use elevation zoom factor',\n    enableElevationZoomFactorDescription: 'Adjust height/elevation based on current zoom factor',\n    enableHeightZoomFactor: 'Use height zoom factor',\n    heightScale: 'Height Scale',\n    coverageRange: 'Coverage Range',\n    highPrecisionRendering: 'High Precision Rendering',\n    highPrecisionRenderingDescription: 'High precision will result in slower performance',\n    height: 'Height',\n    heightDescription: 'Click button at top right of the map to switch to 3d view',\n    fill: 'Fill',\n    enablePolygonHeight: 'Enable Polygon Height',\n    showWireframe: 'Show Wireframe',\n    weightIntensity: 'Weight Intensity',\n    zoomScale: 'Zoom Scale',\n    heightRange: 'Height Range',\n    fixedHeight: 'Fixed height',\n    fixedHeightDescription: 'Use height without modifications',\n    heightMultiplier: 'Height Multiplier',\n    darkModeEnabled: 'Dark base map'\n  },\n  layerManager: {\n    addData: 'Add Data',\n    addLayer: 'Add Layer',\n    layerBlending: 'Layer Blending',\n    overlayBlending: 'Overlay Blending'\n  },\n  mapManager: {\n    mapStyle: 'Map style',\n    addMapStyle: 'Add Map Style',\n    '3dBuildingColor': '3D Building Color',\n    backgroundColor: 'Background Color'\n  },\n  effectManager: {\n    effects: 'Effects',\n    addEffect: 'Add effect',\n    pickDateTime: 'Pick date/time',\n    currentTime: 'Current time',\n    pickCurrrentTime: 'Pick current time',\n    date: 'Date',\n    time: 'Time',\n    timezone: 'Timezone'\n  },\n  layerConfiguration: {\n    defaultDescription: 'Calculate {property} based on selected field',\n    howTo: 'How to'\n  },\n  filterManager: {\n    addFilter: 'Add Filter'\n  },\n  datasetTitle: {\n    showDataTable: 'Show data table',\n    removeDataset: 'Remove dataset'\n  },\n  datasetInfo: {\n    rowCount: '{rowCount} rows'\n  },\n  tooltip: {\n    hideLayer: 'Hide layer',\n    showLayer: 'Show layer',\n    hideFeature: 'Hide feature',\n    showFeature: 'Show feature',\n    hide: 'hide',\n    show: 'show',\n    removeLayer: 'Remove layer',\n    duplicateLayer: 'Duplicate layer',\n    zoomToLayer: 'Zoom to layer',\n    resetAfterError: 'Try to enable the layer after an error',\n    layerSettings: 'Layer settings',\n    closePanel: 'Close current panel',\n    switchToDualView: 'Switch to dual map view',\n    showLegend: 'Show legend',\n    disable3DMap: 'Disable 3D Map',\n    DrawOnMap: 'Draw on map',\n    selectLocale: 'Select locale',\n    hideLayerPanel: 'Hide layer panel',\n    showLayerPanel: 'Show layer panel',\n    moveToTop: 'Move to top of data layers',\n    selectBaseMapStyle: 'Select base map style',\n    removeBaseMapStyle: 'Remove base map style',\n    delete: 'Delete',\n    timePlayback: 'Time Playback',\n    cloudStorage: 'Cloud Storage',\n    '3DMap': '3D Map',\n    animationByWindow: 'Moving Time Window',\n    animationByIncremental: 'Incremental Time Window',\n    speed: 'speed',\n    play: 'play',\n    pause: 'pause',\n    reset: 'reset',\n    export: 'export',\n    showEffectPanel: 'Show effect panel',\n    hideEffectPanel: 'Hide effect panel',\n    removeEffect: 'Remove effect',\n    disableEffect: 'Disable effect',\n    effectSettings: 'Effect settings'\n  },\n  toolbar: {\n    exportImage: 'Export Image',\n    exportData: 'Export Data',\n    exportMap: 'Export Map',\n    shareMapURL: 'Share Map URL',\n    saveMap: 'Save Map',\n    select: 'Select',\n    polygon: 'Polygon',\n    rectangle: 'Rectangle',\n    hide: 'Hide',\n    show: 'Show',\n    ...LOCALES\n  },\n  editor: {\n    filterLayer: 'Filter Layers',\n    copyGeometry: 'Copy Geometry',\n    noLayersToFilter: 'No layers to filter'\n  },\n\n  modal: {\n    title: {\n      deleteDataset: 'Delete Dataset',\n      addDataToMap: 'Add Data To Map',\n      exportImage: 'Export Image',\n      exportData: 'Export Data',\n      exportMap: 'Export Map',\n      addCustomMapboxStyle: 'Add Custom Map Style',\n      saveMap: 'Save Map',\n      shareURL: 'Share URL'\n    },\n    button: {\n      delete: 'Delete',\n      download: 'Download',\n      export: 'Export',\n      addStyle: 'Add Style',\n      save: 'Save',\n      defaultCancel: 'Cancel',\n      defaultConfirm: 'Confirm'\n    },\n    exportImage: {\n      ratioTitle: 'Ratio',\n      ratioDescription: 'Choose the ratio for various usages.',\n      ratioOriginalScreen: 'Original Screen',\n      ratioCustom: 'Custom',\n      ratio4_3: '4:3',\n      ratio16_9: '16:9',\n      resolutionTitle: 'Resolution',\n      resolutionDescription: 'High resolution is better for prints.',\n      mapLegendTitle: 'Map Legend',\n      mapLegendAdd: 'Add legend on map'\n    },\n    exportData: {\n      datasetTitle: 'Dataset',\n      datasetSubtitle: 'Choose the datasets you want to export',\n      allDatasets: 'All',\n      dataTypeTitle: 'Data Type',\n      dataTypeSubtitle: 'Choose the type of data you want to export',\n      filterDataTitle: 'Filter Data',\n      filterDataSubtitle: 'You can choose exporting original data or filtered data',\n      filteredData: 'Filtered data',\n      unfilteredData: 'Unfiltered Data',\n      fileCount: '{fileCount} Files',\n      rowCount: '{rowCount} Rows'\n    },\n    deleteData: {\n      warning: 'you are going to delete this dataset. It will affect {length} layers'\n    },\n    addStyle: {\n      publishTitle:\n        '2. If entered mapbox style url in step.1, publish your style at mapbox or provide access token. (Optional)',\n      publishSubtitle1: 'You can create your own map style at',\n      publishSubtitle2: 'and',\n      publishSubtitle3: 'publish',\n      publishSubtitle4: 'it.',\n      publishSubtitle5: 'To use private style, paste your',\n      publishSubtitle6: 'access token',\n      publishSubtitle7:\n        'here. *kepler.gl is a client-side application, data stays in your browser..',\n      exampleToken: 'e.g. pk.abcdefg.xxxxxx',\n      pasteTitle: '1. Paste style url',\n      pasteSubtitle0: 'Style url can be a mapbox',\n      pasteSubtitle1: 'What is a',\n      pasteSubtitle2: 'style URL',\n      pasteSubtitle3: 'or a style.json using the',\n      pasteSubtitle4: 'Mapbox GL Style Spec',\n      namingTitle: '3. Name your style'\n    },\n    shareMap: {\n      title: 'Share Map',\n      shareUriTitle: 'Share Map Url',\n      shareUriSubtitle: 'Generate a map url to share with others',\n      cloudTitle: 'Cloud storage',\n      cloudSubtitle: 'Login and upload map data to your personal cloud storage',\n      shareDisclaimer:\n        'kepler.gl will save your map data to your personal cloud storage, only people with the URL can access your map and data. ' +\n        'You can edit/delete the data file in your cloud account anytime.',\n      gotoPage: 'Go to your Kepler.gl {currentProvider} page'\n    },\n    statusPanel: {\n      mapUploading: 'Map Uploading',\n      error: 'Error'\n    },\n    saveMap: {\n      title: 'Cloud storage',\n      subtitle: 'Login to save map to your personal cloud storage'\n    },\n    exportMap: {\n      formatTitle: 'Map format',\n      formatSubtitle: 'Choose the format to export your map to',\n      html: {\n        selection: 'Export your map into an interactive html file.',\n        tokenTitle: 'Mapbox access token',\n        tokenSubtitle: 'Use your own Mapbox access token in the html (optional)',\n        tokenPlaceholder: 'Paste your Mapbox access token',\n        tokenMisuseWarning:\n          '* If you do not provide your own token, the map may fail to display at any time when we replace ours to avoid misuse. ',\n        tokenDisclaimer: 'You can change the Mapbox token later using the following instructions: ',\n        tokenUpdate: 'How to update an existing map token.',\n        modeTitle: 'Map Mode',\n        modeSubtitle1: 'Select the app mode. More ',\n        modeSubtitle2: 'info',\n        modeDescription: 'Allow users to {mode} the map',\n        read: 'read',\n        edit: 'edit'\n      },\n      json: {\n        configTitle: 'Map Config',\n        configDisclaimer:\n          'Map config will be included in the Json file. If you are using kepler.gl in your own app. You can copy this config and pass it to ',\n        selection:\n          'Export current map data and config into a single Json file. You can later open the same map by uploading this file to kepler.gl.',\n        disclaimer:\n          '* Map config is coupled with loaded datasets. ‘dataId’ is used to bind layers, filters, and tooltips to a specific dataset. ' +\n          'When passing this config to addDataToMap, make sure the dataset id matches the dataId/s in this config.'\n      }\n    },\n    loadingDialog: {\n      loading: 'Loading...'\n    },\n    loadData: {\n      upload: 'Load Files',\n      storage: 'Load from Storage'\n    },\n    tripInfo: {\n      title: 'How to enable trip animation',\n      description1:\n        'In order to animate the path, the geoJSON data needs to contain `LineString` in its feature geometry, and the coordinates in the LineString need to have 4 elements in the formats of',\n      code: ' [longitude, latitude, altitude, timestamp] ',\n      description2:\n        'with the last element being a timestamp. Valid timestamp formats include unix in seconds such as `1564184363` or in milliseconds such as `1564184363000`.',\n      example: 'Example:'\n    },\n    iconInfo: {\n      title: 'How to draw icons',\n      description1:\n        'In your csv, create a column, put the name of the icon you want to draw in it. You can leave the cell empty if you do not want the icon to show for some points. When the column is named',\n      code: 'icon',\n      description2: ' kepler.gl will automatically create a icon layer for you.',\n      example: 'Example:',\n      icons: 'Icons'\n    },\n    storageMapViewer: {\n      lastModified: 'Last modified {lastUpdated} ago',\n      back: 'Back'\n    },\n    overwriteMap: {\n      title: 'Saving map...',\n      alreadyExists: 'already exists in your {mapSaved}. Would you like to overwrite it?'\n    },\n    loadStorageMap: {\n      back: 'Back',\n      goToPage: 'Go to your Kepler.gl {displayName} page',\n      storageMaps: 'Storage / Maps',\n      noSavedMaps: 'No saved maps yet'\n    }\n  },\n  header: {\n    visibleLayers: 'Visible layers',\n    layerLegend: 'Legend'\n  },\n  interactions: {\n    tooltip: 'Tooltip',\n    brush: 'Brush',\n    coordinate: 'Coordinates',\n    geocoder: 'Geocoder'\n  },\n  layerBlending: {\n    title: 'Layer Blending',\n    additive: 'additive',\n    normal: 'normal',\n    subtractive: 'subtractive'\n  },\n  overlayBlending: {\n    title: 'Map overlay blending',\n    description: 'Blend layers with the base map so that both are visible.',\n    screen: 'dark base map',\n    normal: 'normal',\n    darken: 'light base map'\n  },\n  columns: {\n    title: 'Columns',\n    lat: 'lat',\n    lng: 'lon',\n    altitude: 'altitude',\n    icon: 'icon',\n    geojson: 'geojson',\n    token: 'token',\n    arc: {\n      lat0: 'source lat',\n      lng0: 'source lng',\n      lat1: 'target lat',\n      lng1: 'target lng'\n    },\n    line: {\n      alt0: 'source altitude',\n      alt1: 'target altitude'\n    },\n    grid: {\n      worldUnitSize: 'Grid Size (km)'\n    },\n    hexagon: {\n      worldUnitSize: 'Hexagon Radius (km)'\n    },\n    hex_id: 'hex id'\n  },\n  color: {\n    customPalette: 'Custom Palette',\n    steps: 'steps',\n    type: 'type',\n    reversed: 'reversed',\n    opacity: 'Opacity'\n  },\n  scale: {\n    colorScale: 'Color Scale',\n    sizeScale: 'Size Scale',\n    strokeScale: 'Stroke Scale',\n    strokeColorScale: 'Stroke Color Scale',\n    scale: 'Scale'\n  },\n  fileUploader: {\n    message: 'Drag & Drop Your File(s) Here',\n    chromeMessage:\n      '*Chrome user: Limit file size to 250mb, if need to upload larger file, try Safari',\n    disclaimer:\n      '*kepler.gl is a client-side application with no server backend. Data lives only on your machine/browser. ' +\n      'No information or map data is sent to any server.',\n    configUploadMessage:\n      'Upload {fileFormatNames} or saved map **Json**. Read more about [**supported file formats**]',\n    browseFiles: 'browse your files',\n    uploading: 'Uploading',\n    fileNotSupported: 'File {errorFiles} is not supported.',\n    or: 'or'\n  },\n  geocoder: {\n    title: 'Enter an address or coordinates, ex 37.79,-122.40'\n  },\n  fieldSelector: {\n    clearAll: 'Clear All',\n    formatting: 'Formatting'\n  },\n  compare: {\n    modeLabel: 'Comparison Mode',\n    typeLabel: 'Comparison Type',\n    types: {\n      absolute: 'Absolute',\n      relative: 'Relative'\n    }\n  },\n  mapPopover: {\n    primary: 'Primary'\n  },\n  density: 'density',\n  'Bug Report': 'Bug Report',\n  'User Guide': 'User Guide',\n  Save: 'Save',\n  Share: 'Share'\n};\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {LOCALES} from '../locales';\n\nexport default {\n  property: {\n    weight: 'painotus',\n    label: 'nimiö',\n    fillColor: 'täyttöväri',\n    color: 'väri',\n    strokeColor: 'viivan väri',\n    radius: 'säde',\n    outline: 'ääriviiva',\n    stroke: 'viiva',\n    density: 'tiheys',\n    coverage: 'kattavuus',\n    sum: 'summa',\n    pointCount: 'pisteiden lukumäärä'\n  },\n  placeholder: {\n    search: 'Etsi',\n    selectField: 'Valitse kenttä',\n    yAxis: 'Y-akseli',\n    selectType: 'Valitse tyyppi',\n    selectValue: 'Valitse arvo',\n    enterValue: 'Anna arvo',\n    empty: 'tyhjä'\n  },\n  misc: {\n    by: '',\n    valuesIn: 'Arvot joukossa:',\n    valueEquals: 'Arvo on yhtäsuuri kuin',\n    dataSource: 'Aineistolähde',\n    brushRadius: 'Harjan säde (km)',\n    empty: ' '\n  },\n  mapLayers: {\n    title: 'Kartan tasot',\n    label: 'Nimiöt',\n    road: 'Tiet',\n    border: 'Rajat',\n    building: 'Rakennukset',\n    water: 'Vesi',\n    land: 'Maa',\n    '3dBuilding': '3d-rakennukset',\n    background: 'Tausta'\n  },\n  panel: {\n    text: {\n      label: 'Nimiö',\n      labelWithId: 'Nimiö {labelId}',\n      fontSize: 'Fontin koko',\n      fontColor: 'Fontin väri',\n      textAnchor: 'Tekstin ankkuri',\n      alignment: 'Sijoittelu',\n      addMoreLabel: 'Lisää uusia nimiöitä'\n    }\n  },\n  sidebar: {\n    panels: {\n      layer: 'Tasot',\n      filter: 'Suodattimet',\n      interaction: 'Interaktiot',\n      basemap: 'Taustakartta'\n    }\n  },\n  layer: {\n    required: 'Pakollinen*',\n    radius: 'Säde',\n    weight: 'Painotus',\n    propertyBasedOn: '{property} perustuen arvoon',\n    color: 'Väri',\n    fillColor: 'Täytön väri',\n    outline: 'ääriviiva',\n    coverage: 'Kattavuus',\n    stroke: 'Viiva',\n    strokeWidth: 'Viivan paksuus',\n    strokeColor: 'Viivan väri',\n    basic: 'Perus',\n    trailLength: 'Jäljen pituus',\n    trailLengthDescription: 'Jäljen kesto sekunteina, ennenkuin se himmenee näkyvistä',\n    newLayer: 'uusi taso',\n    elevationByDescription: 'Kun asetus on pois päältä, korkeus perustuu pisteiden määrään',\n    colorByDescription: 'Kun asetus on pois päältä, väri perustuu pisteiden määrään',\n    aggregateBy: 'Aggregoi kenttä {field} by',\n    '3DModel': '3D-malli',\n    '3DModelOptions': '3D-mallin asetukset',\n    type: {\n      point: 'piste',\n      arc: 'kaari',\n      line: 'viiva',\n      grid: 'ruudukko',\n      hexbin: 'hexbin',\n      polygon: 'polygoni',\n      geojson: 'geojson',\n      cluster: 'klusteri',\n      icon: 'kuva',\n      heatmap: 'lämpökartta',\n      hexagon: 'kuusikulmio',\n      hexagonid: 'H3',\n      trip: 'matka',\n      s2: 'S2',\n      '3d': '3D'\n    },\n    layerUpdateError:\n      'Tason päivityksen aikana tapahtui virhe: {errorMessage}. Varmista, että syötetietojen muoto on kelvollinen.'\n  },\n  layerVisConfigs: {\n    strokeWidth: 'Viivan paksuus',\n    strokeWidthRange: 'Viivan paksuuden rajat',\n    radius: 'Säde',\n    fixedRadius: 'Vakiosäde metreinä',\n    fixedRadiusDescription: 'Kartan säde absoluuttiseksi säteeksi metreinä, esim. 5 -> 5 metriin',\n    radiusRange: 'Säteen rajat',\n    clusterRadius: 'Klusterien säde pikseleinä',\n    radiusRangePixels: 'Säteen rajat pikseleinä',\n    opacity: 'Läpinäkyvyys',\n    coverage: 'Kattavuus',\n    outline: 'Ääriviiva',\n    colorRange: 'Värien rajat',\n    stroke: 'Viiva',\n    strokeColor: 'Viivan väri',\n    strokeColorRange: 'Viivan värin rajat',\n    targetColor: 'Kohteen väri',\n    colorAggregation: 'Värien aggregointi',\n    heightAggregation: 'Korkeuden aggregointi',\n    resolutionRange: 'Resoluution rajat',\n    sizeScale: 'Koon skaala',\n    worldUnitSize: 'Yksikkö',\n    elevationScale: 'Korottamisen skaala',\n    enableElevationZoomFactor: 'Käytä korkeuden zoomauskerrointa',\n    enableElevationZoomFactorDescription:\n      'Säädä korkeus / korkeus nykyisen zoomauskertoimen perusteella',\n    enableHeightZoomFactor: 'Käytä korkeuden zoomauskerrointa',\n    heightScale: 'Korkeuden skaala',\n    coverageRange: 'Peittävyyden rajat',\n    highPrecisionRendering: 'Tarkka renderöinti',\n    highPrecisionRenderingDescription: 'Tarkka renderöinti johtaa hitaampaan suorittamiseen',\n    height: 'Korkeus',\n    heightDescription: 'Klikkaa oikeasta ylänurkasta nappia vaihtaaksesi 3D-näkymään',\n    fill: 'Täyttö',\n    enablePolygonHeight: 'Salli polygonien korkeus',\n    showWireframe: 'Näytä rautalankamalli',\n    weightIntensity: 'Painotuksen intensiteetti',\n    zoomScale: 'Zoomausskaala',\n    heightRange: 'Korkeuden rajat',\n    fixedHeight: 'Kiinteä korkeus',\n    fixedHeightDescription: 'Käytä korkeutta ilman muutoksia',\n    heightMultiplier: 'Korkeuskerroin'\n  },\n  layerManager: {\n    addData: 'Lisää aineisto',\n    addLayer: 'Lisää taso',\n    layerBlending: 'Tasojen sekoittuvuus'\n  },\n  mapManager: {\n    mapStyle: 'Kartan tyyli',\n    addMapStyle: 'Lisää tyyli kartalle',\n    '3dBuildingColor': '3D-rakennusten väri',\n    backgroundColor: 'Taustaväri'\n  },\n  layerConfiguration: {\n    defaultDescription: 'Laske suureen {property} arvo valitun kentän perusteella',\n    howTo: 'Miten toimii'\n  },\n  filterManager: {\n    addFilter: 'Lisää suodatin'\n  },\n  datasetTitle: {\n    showDataTable: 'Näytä attribuuttitaulu',\n    removeDataset: 'Poista aineisto'\n  },\n  datasetInfo: {\n    rowCount: '{rowCount} riviä'\n  },\n  tooltip: {\n    hideLayer: 'Piilota taso',\n    showLayer: 'Näytä taso',\n    hideFeature: 'Piilota kohde',\n    showFeature: 'Näytä kohde',\n    hide: 'piilota',\n    show: 'näytä',\n    removeLayer: 'Poista taso',\n    resetAfterError: 'Yritä ottaa taso käyttöön virheen jälkeen',\n    layerSettings: 'Tason asetukset',\n    closePanel: 'Sulje paneeli',\n    switchToDualView: 'Vaihda kaksoiskarrtanäkymään',\n    showLegend: 'Näytä selite',\n    disable3DMap: 'Poistu 3D-näkymästä',\n    DrawOnMap: 'Piirrä kartalle',\n    selectLocale: 'Valitse kielisyys',\n    hideLayerPanel: 'Piilota tasopaneeli',\n    showLayerPanel: 'Näytä tasopaneeli',\n    moveToTop: 'Siirrä tasojen päällimmäiseksi',\n    selectBaseMapStyle: 'Valitse taustakarttatyyli',\n    delete: 'Poista',\n    timePlayback: 'Ajan animointi',\n    cloudStorage: 'Pilvitallennus',\n    '3DMap': '3D-näkymä'\n  },\n  toolbar: {\n    exportImage: 'Vie kuva',\n    exportData: 'Vie aineistot',\n    exportMap: 'Vie kartta',\n    shareMapURL: 'Jaa kartan URL',\n    saveMap: 'Tallenna kartta',\n    select: 'valitse',\n    polygon: 'polygoni',\n    rectangle: 'nelikulmio',\n    hide: 'piilota',\n    show: 'näytä',\n    ...LOCALES\n  },\n  modal: {\n    title: {\n      deleteDataset: 'Poista aineisto',\n      addDataToMap: 'Lisää aineistoja kartalle',\n      exportImage: 'Vie kuva',\n      exportData: 'Vie aineistot',\n      exportMap: 'Vie kartta',\n      addCustomMapboxStyle: 'Lisää oma Mapbox-tyyli',\n      saveMap: 'Tallenna kartta',\n      shareURL: 'Jaa URL'\n    },\n    button: {\n      delete: 'Poista',\n      download: 'Lataa',\n      export: 'Vie',\n      addStyle: 'Lisää tyyli',\n      save: 'Tallenna',\n      defaultCancel: 'Peru',\n      defaultConfirm: 'Vahvista'\n    },\n    exportImage: {\n      ratioTitle: 'Kuvasuhde',\n      ratioDescription: 'Valitse sopiva kuvasuhde käyttötapaustasi varten.',\n      ratioOriginalScreen: 'Alkuperäinen näyttö',\n      ratioCustom: 'Kustomoitu',\n      ratio4_3: '4:3',\n      ratio16_9: '16:9',\n      resolutionTitle: 'Resoluutio',\n      resolutionDescription: 'Korkea resoluutio on parempi tulostamista varten.',\n      mapLegendTitle: 'Kartan selite',\n      mapLegendAdd: 'Lisää selite karttaan'\n    },\n    exportData: {\n      datasetTitle: 'Aineistot',\n      datasetSubtitle: 'Valitse aineisto, jonka aiot viedä',\n      allDatasets: 'Kaikki',\n      dataTypeTitle: 'Aineistojen formaatti',\n      dataTypeSubtitle: 'Valitse aineistoformaatti valitsemillesi aineistoille',\n      filterDataTitle: 'Suodata aineistoja',\n      filterDataSubtitle: 'Voit viedä joko alkuperäiset aineistot tai suodatetut aineistot',\n      filteredData: 'Suodatetut aineistot',\n      unfilteredData: 'Suodattamattomat aineistot',\n      fileCount: '{fileCount} tiedostoa',\n      rowCount: '{rowCount} riviä'\n    },\n    deleteData: {\n      warning: 'aiot poistaa tämän aineiston. Aineostoa käyttävien tasojen lukumäärä: {length}'\n    },\n    addStyle: {\n      publishTitle: '1. Julkaise tyylisi Mapboxissa tai anna tunniste',\n      publishSubtitle1: 'Voit luoda oman karttatyylisi sivulla',\n      publishSubtitle2: 'ja',\n      publishSubtitle3: 'julkaista',\n      publishSubtitle4: 'sen.',\n      publishSubtitle5: 'Käyttääksesi yksityistä tyyliä, liitä',\n      publishSubtitle6: 'tunnisteesi',\n      publishSubtitle7:\n        'tänne. *kepler.gl on client-side sovellus, data pysyy vain selaimessasi...',\n      exampleToken: 'esim. pk.abcdefg.xxxxxx',\n      pasteTitle: '2. Liitä tyyli-URL',\n      pasteSubtitle1: 'Mikä on',\n      pasteSubtitle2: 'tyyli-URL?',\n      namingTitle: '3. Nimeä tyylisi'\n    },\n    shareMap: {\n      shareUriTitle: 'Jaa kartan URL',\n      shareUriSubtitle: 'Luo kartalle URL, jonka voit jakaa muiden kanssa',\n      cloudTitle: 'Pilvitallennus',\n      cloudSubtitle:\n        'Kirjaudu sisään ja lataa kartta ja aineistot henkilökohtaiseen pilvipalveluun',\n      shareDisclaimer:\n        'kepler.gl tallentaa kartan datan henkilökohtaiseen pilvitallennustilaasi, vain ihmiset, joilla on URL, voivat päästä käsiksi karttaan ja aineistoihin. ' +\n        'Voit muokata tiedostoja tai poistaa ne pilvipalvelustasi milloin vain.',\n      gotoPage: 'Mene Kepler.gl {currentProvider} sivullesi'\n    },\n    statusPanel: {\n      mapUploading: 'Karttaa ladataan',\n      error: 'Virhe'\n    },\n    saveMap: {\n      title: 'Pilvitallennus',\n      subtitle: 'Kirjaudu sisään pilvipalveluusi tallentaaksesi kartan'\n    },\n    exportMap: {\n      formatTitle: 'Kartan formaatti',\n      formatSubtitle: 'Valitse formaatti, jossa viet kartan',\n      html: {\n        selection: 'Vie kartta interaktiivisena html-tiedostona',\n        tokenTitle: 'Mapbox-tunniste',\n        tokenSubtitle: 'Käytä omaa Mapbox-tunnistettasi html-tiedostossa (valinnainen)',\n        tokenPlaceholder: 'Liitä Mapbox-tunnisteesi',\n        tokenMisuseWarning:\n          '* Jos et käytä omaa tunnistettasi, kartta voi lakata toimimasta milloin vain kun vaihdamme omaa tunnistettamme väärinkäytön estämiseksi. ',\n        tokenDisclaimer: 'Voit vaihtaa Mapbox-tunnisteesi näiden ohjeiden avulla: ',\n        tokenUpdate: 'Kuinka vaihtaa olemassaoleva Mapbox-tunniste',\n        modeTitle: 'Kartan tila',\n        modeSubtitle1: 'Valitse kartan tila.',\n        modeSubtitle2: 'Lisätietoja',\n        modeDescription: 'Anna käyttäjien {mode} karttaa',\n        read: 'lukea',\n        edit: 'muokata'\n      },\n      json: {\n        configTitle: 'Kartan asetukset',\n        configDisclaimer:\n          'Kartan asetukset sisältyvät Json-tiedostoon. Jos käytät kirjastoa kepler.gl omassa sovelluksessasi. Voit kopioida asetukset ja antaa ne funktiolle: ',\n        selection:\n          'Vie kyseisen kartan aineistot ja asetukset yhdessä json-tiedostossa. Voit myöhemmin avata saman kartan lataamalla tiedoston kepler.gl:n',\n        disclaimer:\n          '* Kartan asetukset ovat sidoksissa ladattuihin aineistoihin. Arvoa ‘dataId’ käytetään tasojen, suodattimien ja vihjeiden liittämiseksi tiettyyn aineistoon. ' +\n          'Varmista, että aineiston dataId:t vastaavat asetusten arvoja jos lataat asetukset käyttäen `addDataToMap`-funktiolle.'\n      }\n    },\n    loadingDialog: {\n      loading: 'Ladataan...'\n    },\n    loadData: {\n      upload: 'Lataa tiedostot',\n      storage: 'Lataa tallennustilasta'\n    },\n    tripInfo: {\n      title: 'Kuinka käyttää matka-animaatiota',\n      description1:\n        'Reitin animoimiseksi geoJSON-aineiston täytyy olla geometriatyypiltään `LineString`, LineString-koordinaattien täytyy sisältää 4 elementtiä formaatissa:',\n      code: ' [pituusaste, leveysaste, korkeus, aikaleima] ',\n      description2:\n        'siten, että viimeinen elementti on aikaleima. Aikaleima voi olla muodoltaan unix-sekunteja, kuten `1564184363` tai millisekunteja, kuten `1564184363000`.',\n      example: 'Esimerkki:'\n    },\n    iconInfo: {\n      title: 'Miten piirtää kuvia',\n      description1:\n        'csv-tiedostossasi, luo sarake nimeltä icon. Voit jättää sen tyhjäksi jos et halua piirtää kuvaa joillain pisteillä. Kun sarakkeen nimi on ',\n      code: 'icon',\n      description2: ' kepler.gl luo automaattisesti kuvatason sinua varten.',\n      example: 'Esimerkki:',\n      icons: 'Kuvat'\n    },\n    storageMapViewer: {\n      lastModified: 'Viimeksi muokattu {lastUpdated} sitten',\n      back: 'Takaisin'\n    },\n    overwriteMap: {\n      title: 'Tallennetaan karttaa...',\n      alreadyExists: 'on jo {mapSaved}:ssa. Haluatko ylikirjoittaa sen?'\n    },\n    loadStorageMap: {\n      back: 'Takaisin',\n      goToPage: 'Mene Kepler.gl {displayName} sivullesi',\n      storageMaps: 'Tallennus / Kartat',\n      noSavedMaps: 'Ei tallennettuja karttoja vielä'\n    }\n  },\n  header: {\n    visibleLayers: 'Näkyvissä olevat tasot',\n    layerLegend: 'Tason selite'\n  },\n  interactions: {\n    tooltip: 'Vihje',\n    brush: 'Harja',\n    coordinate: 'Koordinaatit'\n  },\n  layerBlending: {\n    title: 'Tasojen sekoittuvuus',\n    additive: 'lisäävä',\n    normal: 'normaali',\n    subtractive: 'vähentävä'\n  },\n  columns: {\n    title: 'Sarakkeet',\n    lat: 'lat',\n    lng: 'lng',\n    altitude: 'korkeus',\n    icon: 'kuva',\n    geojson: 'geojson',\n    arc: {\n      lat0: 'lähdön lat',\n      lng0: 'lähdön lng',\n      lat1: 'kohteen lat',\n      lng1: 'kohteen lng'\n    },\n    line: {\n      alt0: 'lähteen korkeus',\n      alt1: 'kohde korkeus'\n    },\n    grid: {\n      worldUnitSize: 'Ruutujen koko (km)'\n    },\n    hexagon: {\n      worldUnitSize: 'Hexagonien säde (km)'\n    }\n  },\n  color: {\n    customPalette: 'Mukautettu paletti',\n    steps: 'askeleet',\n    type: 'tyyppi',\n    reversed: 'käänteinen'\n  },\n  scale: {\n    colorScale: 'Värin skaala',\n    sizeScale: 'Koon skaala',\n    strokeScale: 'Viivan paksuuden skaala',\n    scale: 'Skaala'\n  },\n  fileUploader: {\n    message: 'Raahaa ja pudota tiedostosi tänne',\n    chromeMessage:\n      '*Chromen käyttäjä: Rajoita tiedostokokosi 250Mb:hen. Jos haluat suurempia tiedostoja, kokeile Safaria',\n    disclaimer:\n      '*kepler.gl on client-side sovellus, data pysyy vain selaimessasi...' +\n      'Tietoja ei lähetetä palvelimelle.',\n    configUploadMessage:\n      'Lisää {fileFormatNames} tai tallennettu kartta **Json**. Lue lisää [**tuetuista formaateista**]',\n    browseFiles: 'selaa tiedostojasi',\n    uploading: 'ladataan',\n    fileNotSupported: 'Tiedosto {errorFiles} ei ole tuettu.',\n    or: 'tai'\n  },\n  density: 'tiheys',\n  'Bug Report': 'Bugiraportointi',\n  'User Guide': 'Opas',\n  Save: 'Tallenna',\n  Share: 'Jaa'\n};\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {LOCALES} from '../locales';\n\nexport default {\n  property: {\n    weight: 'Espessura do texto',\n    label: 'Rótulo',\n    fillColor: 'Cor do preenchimento',\n    color: 'Cor',\n    strokeColor: 'Cor da borda',\n    radius: 'Raio',\n    outline: 'Contorno',\n    stroke: 'Traçado',\n    density: 'Densidade',\n    height: 'Altura',\n    sum: 'Soma',\n    pointCount: 'Contagem de Pontos'\n  },\n  placeholder: {\n    search: 'Pesquisar',\n    selectField: 'Selecione um campo',\n    yAxis: 'Eixo Y',\n    selectType: 'Selecione um Tipo',\n    selectValue: 'Selecione um valor',\n    enterValue: 'Insira um valor',\n    empty: 'Vazio'\n  },\n  misc: {\n    by: '',\n    valuesIn: 'Valores em',\n    valueEquals: 'Valor igual a',\n    dataSource: 'Origem dos dados',\n    brushRadius: 'Raio do Traço (km)',\n    empty: ' '\n  },\n  mapLayers: {\n    title: 'Camadas do mapa',\n    label: 'Rótulo',\n    road: 'Estrada',\n    border: 'Fronteira',\n    building: 'Edifícios',\n    water: 'Água',\n    land: 'Terra',\n    '3dBuilding': 'Edifícios em 3d',\n    background: 'Fundo'\n  },\n  panel: {\n    text: {\n      label: 'Rótulo',\n      labelWithId: 'Rótulo {labelId}',\n      fontSize: 'Tamanho da fonte',\n      fontColor: 'Cor da fonte',\n      textAnchor: 'Âncora do texto',\n      alignment: 'Alinhamento',\n      addMoreLabel: 'Adicionar mais Rótulos'\n    }\n  },\n  sidebar: {\n    panels: {\n      layer: 'Camadas',\n      filter: 'Filtros',\n      interaction: 'Interações',\n      basemap: 'Mapa base'\n    }\n  },\n  layer: {\n    required: 'Obrigatório*',\n    radius: 'Raio',\n    color: 'Cor',\n    fillColor: 'Cor de preenchimento',\n    outline: 'Contorno',\n    weight: 'Espessura',\n    propertyBasedOn: '{property} baseada em',\n    coverage: 'Cobertura',\n    stroke: 'Traço',\n    strokeWidth: 'Largura do Traçado',\n    strokeColor: 'Cor do Traçado',\n    basic: 'Básico',\n    trailLength: 'Comprimento da trilha',\n    trailLengthDescription: 'Número de segundos para um caminho completamente desaparecer',\n    newLayer: 'nova camada',\n    elevationByDescription: 'Quando desligado, a altura é baseada na contagem de pontos',\n    colorByDescription: 'Quando desligado, a cor é baseada na contagem de pontos',\n    aggregateBy: '{field} agregado por',\n    '3DModel': 'Modelo 3D',\n    '3DModelOptions': 'Opções do Modelo 3D',\n    type: {\n      point: 'ponto',\n      arc: 'arco',\n      line: 'linha',\n      grid: 'grade',\n      hexbin: 'hexágono',\n      polygon: 'polígono',\n      geojson: 'geojson',\n      cluster: 'grupo',\n      icon: 'icon',\n      heatmap: 'mapa de calor',\n      hexagon: 'hexágono',\n      hexagonid: 'H3',\n      trip: 'viagem',\n      s2: 'S2',\n      '3d': '3D'\n    },\n    layerUpdateError:\n      'Ocorreu um erro ao atualizar a camada: {errorMessage}. Certifique-se de que o formato dos dados de entrada seja válido.'\n  },\n  layerVisConfigs: {\n    strokeWidth: 'Largura do Traço',\n    strokeWidthRange: 'Alcance da Largura do Traço',\n    radius: 'Raio',\n    fixedRadius: 'Raio ajustado para metro',\n    fixedRadiusDescription: 'Raio do Mapa para Raio absoluto em metros, e.g. 5 para 5 metros',\n    radiusRange: 'Alcance do Raio',\n    clusterRadius: 'Raio do Agrupamento em pixels',\n    radiusRangePixels: 'Alcance do Raio em pixels',\n    opacity: 'Opacidade',\n    coverage: 'Cobertura',\n    outline: 'Contorno',\n    colorRange: 'Alcance da Cor',\n    stroke: 'Traçado',\n    strokeColor: 'Cor do Traçado',\n    strokeColorRange: 'Alcance da Cor do Traçado',\n    targetColor: 'Cor de destino',\n    colorAggregation: 'Agregação da Cor',\n    heightAggregation: 'Agregação da Altura',\n    resolutionRange: 'Alcance da Resolução',\n    sizeScale: 'Escala de tamanho',\n    worldUnitSize: 'Tamanho unitário do mundo',\n    elevationScale: 'Escala de Elevação',\n    enableElevationZoomFactor: 'Use fator de zoom de elevação',\n    enableElevationZoomFactorDescription:\n      'Ajuste a altura / elevação com base no fator de zoom atual',\n    enableHeightZoomFactor: 'Usar fator de zoom de altura',\n    heightScale: 'Escala de Altura',\n    coverageRange: 'Alcance de cobertura',\n    highPrecisionRendering: 'Renderização de Alta Precisão',\n    highPrecisionRenderingDescription: 'Alta precisão irá em resultar em baixa performance',\n    height: 'Altura',\n    heightDescription:\n      'Clique no botão no canto superior direito para trocar para a visualização 3d',\n    fill: 'Preenchimento',\n    enablePolygonHeight: 'Habilitar Altura de Polígono',\n    showWireframe: 'Mostrar Wireframe',\n    weightIntensity: 'Intensidade da Espessura',\n    zoomScale: 'Escala do Zoom',\n    heightRange: 'Alcance da Altura',\n    fixedHeight: 'Altura fixa',\n    fixedHeightDescription: 'Use a altura sem modificações',\n    heightMultiplier: 'Multiplicador de altura'\n  },\n  layerManager: {\n    addData: 'Adicionar Dados',\n    addLayer: 'Adicionar Camada',\n    layerBlending: 'Mistura de Camada'\n  },\n  mapManager: {\n    mapStyle: 'Estilo do Mapa',\n    addMapStyle: 'Adicionar Estilo de Mapa',\n    '3dBuildingColor': 'Cor do Edifício 3D',\n    backgroundColor: 'Cor de Fundo'\n  },\n  layerConfiguration: {\n    defaultDescription: 'Calcular {property} baseada no campo selecionado',\n    howTo: 'Como'\n  },\n  filterManager: {\n    addFilter: 'Adicionar Filtro'\n  },\n  datasetTitle: {\n    showDataTable: 'Mostrar tabela de dados',\n    removeDataset: 'Remover tabela de dados'\n  },\n  datasetInfo: {\n    rowCount: '{rowCount} linhas'\n  },\n  tooltip: {\n    hideLayer: 'esconder camada',\n    showLayer: 'mostrar camada',\n    hideFeature: 'Esconder propriedade',\n    showFeature: 'Mostrar propriedade',\n    hide: 'esconder',\n    show: 'mostrar',\n    removeLayer: 'Remover Camada',\n    resetAfterError: 'Tente habilitar a camada após um erro',\n    layerSettings: 'Configurações de Camada',\n    closePanel: 'Fechar painel atual',\n    switchToDualView: 'Trocar para visualização dupla de mapa',\n    showLegend: 'mostrar legenda',\n    disable3DMap: 'Desabilitar Mapa 3D',\n    DrawOnMap: 'Desenhar no mapa',\n    selectLocale: 'Selecionar língua',\n    hideLayerPanel: 'Esconder painel de camada',\n    showLayerPanel: 'Mostrar painel de camada',\n    moveToTop: 'Mover para o topo das camadas',\n    selectBaseMapStyle: 'Selecionar o Estilo do Mapa Base',\n    delete: 'Deletar',\n    timePlayback: 'Tempo de reprodução',\n    cloudStorage: 'Armazenamento Cloud',\n    '3DMap': ' Mapa 3D'\n  },\n  toolbar: {\n    exportImage: 'Exportar Imagem',\n    exportData: 'Exportar Dados',\n    exportMap: 'Exportar Mapa',\n    shareMapURL: 'Compartilhar URL do Mapa',\n    saveMap: 'Salvar Mapa',\n    select: 'selecionar',\n    polygon: 'polígono',\n    rectangle: 'retângulo',\n    hide: 'esconder',\n    show: 'mostrar',\n    ...LOCALES\n  },\n  modal: {\n    title: {\n      deleteDataset: 'Deletar Conjunto de Dados',\n      addDataToMap: 'Adicionar Dados ao Mapa',\n      exportImage: 'Exportar Imagem',\n      exportData: 'Exportar Dados',\n      exportMap: 'Exportar Mapa',\n      addCustomMapboxStyle: 'Adicionar Estilo Mapbox Customizado',\n      saveMap: 'Salvar Mapa',\n      shareURL: 'Compartilhar URL'\n    },\n    button: {\n      delete: 'Deletar',\n      download: 'Download',\n      export: 'Exportar',\n      addStyle: 'Adicionar Estilo',\n      save: 'Salvar',\n      defaultCancel: 'Cancelar',\n      defaultConfirm: 'Confirmar'\n    },\n    exportImage: {\n      ratioTitle: 'Proporção',\n      ratioDescription: 'Escolha a proporção para vários usos.',\n      ratioOriginalScreen: 'Tela Original',\n      ratioCustom: 'Customizado',\n      ratio4_3: '4:3',\n      ratio16_9: '16:9',\n      resolutionTitle: 'Resolução',\n      resolutionDescription: 'Alta resolução é melhor para impressões.',\n      mapLegendTitle: 'Legenda do Mapa',\n      mapLegendAdd: 'Adicionar Legenda no mapa'\n    },\n    exportData: {\n      datasetTitle: 'Conjunto de dados',\n      datasetSubtitle: 'Escolha o conjunto de dados que você quer exportar',\n      allDatasets: 'Todos',\n      dataTypeTitle: 'Tipo de Dado',\n      dataTypeSubtitle: 'Escolha o tipo de dados que você quer exportar',\n      filterDataTitle: 'Filtrar Dados',\n      filterDataSubtitle: 'Você pode escolher exportar os dados originais ou os dados filtrados',\n      filteredData: 'Dados Filtrados',\n      unfilteredData: 'Dados não filtrados',\n      fileCount: '{fileCount} Arquivos',\n      rowCount: '{rowCount} Linhas'\n    },\n    deleteData: {\n      warning: 'você irá deletar esse conjunto de dados. Isso irá afetar {length} camadas'\n    },\n    addStyle: {\n      publishTitle: '1. Publique o seu Estilo no Mapbox ou providencie a chave de acesso',\n      publishSubtitle1: 'Você pode criar o seu próprio estilo em',\n      publishSubtitle2: 'e',\n      publishSubtitle3: 'publicar',\n      publishSubtitle4: 'isso.',\n      publishSubtitle5: 'Para utilizar estilo privado, cole a sua',\n      publishSubtitle6: 'chave de acesso',\n      publishSubtitle7:\n        'aqui. *kepler.gl é uma aplicação client-side, os dados permanecem no seu browser..',\n      exampleToken: 'e.g. pk.abcdefg.xxxxxx',\n      pasteTitle: '2. Cole a url do seu estilo',\n      pasteSubtitle1: 'O que é uma',\n      pasteSubtitle2: 'URL de estilo',\n      namingTitle: '3. Nomeie o seu estilo'\n    },\n    shareMap: {\n      shareUriTitle: 'Compartilhar a URL do Mapa',\n      shareUriSubtitle: 'Gerar a url do mapa e compartilhar com outros',\n      cloudTitle: 'Armazenamento Cloud',\n      cloudSubtitle: 'Conecte-se e envie os dados do mapa para o seu armazenamento cloud pessoal',\n      shareDisclaimer:\n        'kepler.gl irá salvar os dados do mapa em seu armazenamento cloud pessoal, apenas pessoas com a URL podem acessar o seu mapa e dados. ' +\n        'Você pode editar/deletar o arquivo de dados na sua conta de armazenamento cloud em qualquer momento.',\n      gotoPage: 'Vá para a sua página Kepler.gl {currentProvider}'\n    },\n    statusPanel: {\n      mapUploading: 'Enviando Mapa',\n      error: 'Erro'\n    },\n    saveMap: {\n      title: 'Armazenamento Cloud',\n      subtitle: 'Conecte-se para salvar o mapa para o seu armazenamento cloud pessoal'\n    },\n    exportMap: {\n      formatTitle: 'Formato do mapa',\n      formatSubtitle: 'Escolher o formato de mapa para exportar',\n      html: {\n        selection: 'Exportar seu mapa em um arquivo html interativo.',\n        tokenTitle: 'Chave de acesso do Mapbox',\n        tokenSubtitle: 'Use a sua própria chave de acesso Mapbox em seu arquivo html (opcional)',\n        tokenPlaceholder: 'Cole a sua chave de acesso Mapbox',\n        tokenMisuseWarning:\n          '* Se você não fornecer a sua própria chave de acesso, o mapa pode falhar em exibir a qualquer momento quando nós substituirmos a nossa para evitar mau uso. ',\n        tokenDisclaimer:\n          'Você pode trocar a sua chave de acesso Mapbox mais tarde utizando as instruções seguintes: ',\n        tokenUpdate: 'Como atualizar a chave de acesso de um mapa existente.',\n        modeTitle: 'Modo do Mapa',\n        modeSubtitle1: 'Selecionar o modo do aplicativo. Mais ',\n        modeSubtitle2: 'info',\n        modeDescription: 'Permitir usuários a {mode} o mapa',\n        read: 'ler',\n        edit: 'editar'\n      },\n      json: {\n        configTitle: 'Configurações do Mapa',\n        configDisclaimer:\n          'A configuração do mapa será incluida no arquivo Json. Se você está utilizando kepler.gl no seu próprio mapa. Você pode copiar essa configuração e passar para ele ',\n        selection:\n          'Exportar atuais dados e configurações do mapa em um único arquivo Json. Você pode mais tarde abrir o mesmo mapa enviando esse arquivo para o kepler.gl.',\n        disclaimer:\n          '* Configuração do mapa é aclopado com conjunto de dados carregados. ‘dataId’ é utilizado para ligar as camadas, filtros, e dicas de contextos a conjunto de dados expecíficos. ' +\n          'Quando passando essa configuração para addDataToMap, tenha certeza de que o id do conjunto de dados combina com o(s) dataId/s nessa configuração.'\n      }\n    },\n    loadingDialog: {\n      loading: 'Carregando...'\n    },\n    loadData: {\n      upload: 'Carregar arquivo',\n      storage: 'Carregar do armazenamento'\n    },\n    tripInfo: {\n      title: 'Como habilitar animação de viagem',\n      description1:\n        'Para animar o caminho, o dado geoJSON deve conter `LineString` na sua propriedade geometry, e as coordenadas na LineString devem ter 4 elementos no seguinte formato',\n      code: ' [longitude, latitude, altitude, data] ',\n      description2:\n        'com um ultimo elemento sendo uma data. Um formato de data válida inclui segundos unix como `1564184363` ou em milisegundos como `1564184363000`.',\n      example: 'Exemplo:'\n    },\n    iconInfo: {\n      title: 'Como desenhar ícones',\n      description1:\n        'No seu csv, crie uma coluna, coloque o nome do ícone que você quer desenhar nele. Você pode deixar o campo vazio se você não desejar que o ícone apareça para alguns pontos. Quando a coluna tem nome',\n      code: 'icon',\n      description2: ' kepler.gl irá automaticamente criar uma camada de ícone para você.',\n      example: 'Exemplos:',\n      icons: 'Ícones'\n    },\n    storageMapViewer: {\n      lastModified: 'Modificado há {lastUpdated}',\n      back: 'Voltar'\n    },\n    overwriteMap: {\n      title: 'Salvando mapa...',\n      alreadyExists: 'já existe no mapa {mapSaved}. Você desejaria sobrescrever o mapa?'\n    },\n    loadStorageMap: {\n      back: 'Voltar',\n      goToPage: 'Vá para a sua página {displayName} do Kepler.gl',\n      storageMaps: 'Armazenamento / Mapas',\n      noSavedMaps: 'Nenhum mapa salvo'\n    }\n  },\n  header: {\n    visibleLayers: 'Camadas Visíveis',\n    layerLegend: 'Legenda da Camada'\n  },\n  interactions: {\n    tooltip: 'Dica de contexto',\n    brush: 'Pincel',\n    coordinate: 'Coordenadas'\n  },\n  layerBlending: {\n    title: 'Mistura de Camadas',\n    additive: 'aditivo',\n    normal: 'normal',\n    subtractive: 'subtrativo'\n  },\n  columns: {\n    title: 'Colunas',\n    lat: 'lat',\n    lng: 'lon',\n    altitude: 'altitude',\n    icon: 'ícone',\n    geojson: 'geojson',\n    arc: {\n      lat0: 'origem lat',\n      lng0: 'origem lng',\n      lat1: 'destino lat',\n      lng1: 'destino lng'\n    },\n    line: {\n      alt0: 'origem altitude',\n      alt1: 'destino altitude'\n    },\n    grid: {\n      worldUnitSize: 'Tamanho da Grade (km)'\n    },\n    hexagon: {\n      worldUnitSize: 'Raio do Hexágono (km)'\n    }\n  },\n  color: {\n    customPalette: 'Paletas customizadas',\n    steps: 'caminhos',\n    type: 'tipo',\n    reversed: 'reverso'\n  },\n  scale: {\n    colorScale: 'Escala da Cor',\n    sizeScale: 'Tamanho da Escala',\n    strokeScale: 'Escala do Traço',\n    scale: 'Escala'\n  },\n  fileUploader: {\n    message: 'Arraste e solte seu(s) arquivo(s) aqui',\n    chromeMessage:\n      '*Usuários do chrome: O limite de tamanho de arquivo é 250mb, se você precisa fazer upload de arquivos maiores tente o Safari',\n    disclaimer:\n      '*kepler.gl é uma aplicação client-side, sem um servidor backend. Os dados ficam apenas na sua máquina/browser. ' +\n      'Nenhuma informação ou dados de mapa é enviado para qualquer server.',\n    configUploadMessage:\n      'Envie {fileFormatNames} ou mapas salvos **Json**. Leia mais sobre [**tipos de arquivos suportados**]',\n    browseFiles: 'procure seus arquivos',\n    uploading: 'Enviando',\n    fileNotSupported: 'Arquivo {errorFiles} não é suportado.',\n    or: 'ou'\n  },\n  density: 'densidade',\n  'Bug Report': 'Reportar Bug',\n  'User Guide': 'Guia do Usuário',\n  Save: 'Salvar',\n  Share: 'Compartilhar'\n};\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {LOCALES} from '../locales';\n\nexport default {\n  property: {\n    weight: 'peso',\n    label: 'etiqueta',\n    fillColor: 'color de relleno',\n    color: 'color',\n    coverage: 'cobertura',\n    strokeColor: 'color de trazo',\n    radius: 'radio',\n    outline: 'contorno',\n    stroke: 'trazo',\n    density: 'densidad',\n    height: 'altura',\n    sum: 'suma',\n    pointCount: 'Recuento de puntos'\n  },\n  placeholder: {\n    search: 'Busqueda',\n    selectField: 'Selecciona un campo',\n    yAxis: 'Eje Y',\n    selectType: 'Selecciona un Tipo',\n    selectValue: 'Selecciona un Valor',\n    enterValue: 'Entra un valor',\n    empty: 'vacio'\n  },\n  misc: {\n    by: '',\n    valuesIn: 'Valores en',\n    valueEquals: 'Valor igual a',\n    dataSource: 'Fuente de datos',\n    brushRadius: 'Radio del pincel (km)',\n    empty: ' '\n  },\n  mapLayers: {\n    title: 'Capas del mapa',\n    label: 'Etiqueta',\n    road: 'Carretera',\n    border: 'Frontera',\n    building: 'Edificio',\n    water: 'Agua',\n    land: 'Tierra',\n    '3dBuilding': 'Edificio 3D',\n    background: 'Fondo'\n  },\n  panel: {\n    text: {\n      label: 'etiqueta',\n      labelWithId: 'Etiqueta {labelId}',\n      fontSize: 'Tamaño de fuente',\n      fontColor: 'Color de fuente',\n      textAnchor: 'Anclaje del texto',\n      alignment: 'Alineación',\n      addMoreLabel: 'Añadir más etiquetas'\n    }\n  },\n  sidebar: {\n    panels: {\n      layer: 'Capas',\n      filter: 'Filtros',\n      interaction: 'Interacciones',\n      basemap: 'Mapa base'\n    }\n  },\n  layer: {\n    required: 'Requerido*',\n    radius: 'Radio',\n    color: 'Color',\n    fillColor: 'Color de relleno',\n    outline: 'Contorno',\n    weight: 'Grueso',\n    propertyBasedOn: '{property} basado en',\n    coverage: 'Cobertura',\n    stroke: 'Trazo',\n    strokeWidth: 'Grosor de trazo',\n    strokeColor: 'Color de trazo',\n    basic: 'Básico',\n    trailLength: 'Longitud de pista',\n    trailLengthDescription: 'Numero de segundos hasta que desaparezca el camino',\n    newLayer: 'nueva capa',\n    elevationByDescription: 'Si desactivado, la altura se basa en el recuento de puntos',\n    colorByDescription: 'Si desactivado, el color se basa en el recuento de puntos',\n    aggregateBy: '{field} agregado por',\n    '3DModel': 'Modelo 3D',\n    '3DModelOptions': 'Opciones del modelo 3D',\n    type: {\n      point: 'punto',\n      arc: 'arco',\n      line: 'línea',\n      grid: 'malla',\n      hexbin: 'hexbin',\n      polygon: 'polígono',\n      geojson: 'geojson',\n      cluster: 'cluster',\n      icon: 'icono',\n      heatmap: 'concentración',\n      hexagon: 'hexágono',\n      hexagonid: 'H3',\n      trip: 'viaje',\n      s2: 'S2',\n      '3d': '3D'\n    },\n    layerUpdateError:\n      'Se produjo un error durante la actualización de la capa: {errorMessage}. Asegúrese de que el formato de los datos de entrada sea válido.'\n  },\n  layerVisConfigs: {\n    angle: 'Ángulo',\n    strokeWidth: 'Ancho del trazo',\n    strokeWidthRange: 'Rango del ancho del trazo',\n    radius: 'Radio',\n    fixedRadius: 'Radio fijo a medir',\n    fixedRadiusDescription: 'Ajustar el radio al radio absoluto en metros, p.e. 5 a 5 metros',\n    radiusRange: 'Rango de radio',\n    clusterRadius: 'Radio del cluster en píxeles',\n    radiusRangePixels: 'Rango del radio en píxeles',\n    opacity: 'Opacidad',\n    coverage: 'Cobertura',\n    outline: 'Contorno',\n    colorRange: 'Rango de color',\n    stroke: 'Trazo',\n    strokeColor: 'Color de trazo',\n    strokeColorRange: 'Rango de color de trazo',\n    targetColor: 'Color destino',\n    colorAggregation: 'Agregación de color',\n    heightAggregation: 'Agregación de la altura',\n    resolutionRange: 'Rango de resolución',\n    sizeScale: 'Medida de escala',\n    worldUnitSize: 'Medida de la unidad mundial',\n    elevationScale: 'Escala de elevación',\n    enableElevationZoomFactor: 'Usar factor de zoom de elevación',\n    enableElevationZoomFactorDescription:\n      'Ajuste la altura / elevación según el factor de zoom actual',\n    enableHeightZoomFactor: 'Usar factor de zoom de altura',\n    heightScale: 'Escala de altura',\n    coverageRange: 'Rango de cobertura',\n    highPrecisionRendering: 'Representación de alta precisión',\n    highPrecisionRenderingDescription: 'La precisión alta tendrá un rendimiento más bajo',\n    height: 'Altura',\n    heightDescription:\n      'Haz clic en el botón de arriba a la derecha del mapa per cambiar a vista 3D',\n    fill: 'Rellenar',\n    enablePolygonHeight: 'Activar la altura del polígono',\n    showWireframe: 'Muestra esquemàtico',\n    weightIntensity: 'Intensidad de peso',\n    zoomScale: 'Escala de zoom',\n    heightRange: 'Rango de alturas',\n    fixedHeight: 'Altura fija',\n    fixedHeightDescription: 'Usar altura sin modificaciones',\n    heightMultiplier: 'Multiplicador de altura'\n  },\n  layerManager: {\n    addData: 'Añadir datos',\n    addLayer: 'Añadir capa',\n    layerBlending: 'Combinar capas'\n  },\n  mapManager: {\n    mapStyle: 'Estilo de mapa',\n    addMapStyle: 'Añadir estilo de mapa',\n    '3dBuildingColor': 'Color edificios 3D',\n    backgroundColor: 'Color de fondo'\n  },\n  layerConfiguration: {\n    defaultDescription: 'Calcular {property} según el campo seleccionado',\n    howTo: 'How to'\n  },\n  filterManager: {\n    addFilter: 'Añadir filtro'\n  },\n  datasetTitle: {\n    showDataTable: 'Mostar la tabla de datos',\n    removeDataset: 'Eliminar conjunto de datos'\n  },\n  datasetInfo: {\n    rowCount: '{rowCount} files'\n  },\n  tooltip: {\n    hideLayer: 'Ocultar la capa',\n    showLayer: 'Mostrar la capa',\n    hideFeature: 'Ocultar el objeto',\n    showFeature: 'Mostrar el objeto',\n    hide: 'Ocultar',\n    show: 'Mostrar',\n    removeLayer: 'Eliminar capa',\n    resetAfterError: 'Intente habilitar la capa después de un error',\n    layerSettings: 'Configuración de capa',\n    closePanel: 'Cerrar el panel actual',\n    switchToDualView: 'Cambiar a la vista de mapa dual',\n    showLegend: 'Mostrar leyenda',\n    disable3DMap: 'Desactivar mapa 3D',\n    DrawOnMap: 'Dibujar en el mapa',\n    selectLocale: 'Seleccionar configuración regional',\n    hideLayerPanel: 'Ocultar la tabla de capas',\n    showLayerPanel: 'Mostrar la tabla  de capas',\n    moveToTop: 'Desplazar arriba de las capas de datos',\n    selectBaseMapStyle: 'Seleccionar estilo de mapa base',\n    delete: 'Borrar',\n    timePlayback: 'Reproducción de tiempo',\n    cloudStorage: 'Almacenaje en la nube',\n    '3DMap': 'Mapa 3D',\n    animationByWindow: 'Ventana Temporal Móvil',\n    animationByIncremental: 'Ventana Temporal Incremental',\n    speed: 'velocidad',\n    play: 'iniciar',\n    pause: 'pausar',\n    reset: 'reiniciar'\n  },\n  toolbar: {\n    exportImage: 'Exportar imagen',\n    exportData: 'Exportar datos',\n    exportMap: 'Exportar mapa',\n    shareMapURL: 'Compartir el enlace del mapa',\n    saveMap: 'Guardar mapa',\n    select: 'selecciona',\n    polygon: 'polígono',\n    rectangle: 'rectángulo',\n    hide: 'esconder',\n    show: 'mostrar',\n    ...LOCALES\n  },\n  modal: {\n    title: {\n      deleteDataset: 'Borrar conjunto de datos',\n      addDataToMap: 'Añadir datos al mapa',\n      exportImage: 'Exportar imagen',\n      exportData: 'Exportar datos',\n      exportMap: 'Exportar mapa',\n      addCustomMapboxStyle: 'Añadir estilo de Mapbox propio',\n      saveMap: 'Guardar mapa',\n      shareURL: 'Compartir enlace'\n    },\n    button: {\n      delete: 'Borrar',\n      download: 'Descargar',\n      export: 'Exportar',\n      addStyle: 'Añadir estilo',\n      save: 'Guardar',\n      defaultCancel: 'Cancelar',\n      defaultConfirm: 'Confirmar'\n    },\n    exportImage: {\n      ratioTitle: 'Ratio',\n      ratioDescription: 'Esoger ratio por diversos usos.',\n      ratioOriginalScreen: 'Pantalla original',\n      ratioCustom: 'Personalizado',\n      ratio4_3: '4:3',\n      ratio16_9: '16:9',\n      resolutionTitle: 'Resolución',\n      resolutionDescription: 'Una alta resolución es mejor para las impresiones.',\n      mapLegendTitle: 'Leyenda del mapa',\n      mapLegendAdd: 'Añadir leyenda al mapa'\n    },\n    exportData: {\n      datasetTitle: 'Conjunto de datos',\n      datasetSubtitle: 'Escoger los conjuntos de datos a exportar',\n      allDatasets: 'Todos',\n      dataTypeTitle: 'Tipo de datos',\n      dataTypeSubtitle: 'Escoger el tipo de datos a exportar',\n      filterDataTitle: 'Filtrar datos',\n      filterDataSubtitle: 'Se puede escoger exportar los datos originales o filtrados',\n      filteredData: 'Datos filtrados',\n      unfilteredData: 'Datos sin filtrar',\n      fileCount: '{fileCount} Archivos',\n      rowCount: '{rowCount} Files'\n    },\n    deleteData: {\n      warning: 'estás a punto de borrar este conjunto de datos. Afectará a {length} capas'\n    },\n    addStyle: {\n      publishTitle: '1. Publicar tu estilo en Mapbox o proporcionar el token de acceso',\n      publishSubtitle1: 'Puedes crear el tu propio estilo de mapa en',\n      publishSubtitle2: 'y',\n      publishSubtitle3: 'publicar',\n      publishSubtitle4: 'lo.',\n      publishSubtitle5: 'Para utilizar un estilo privado, engancha tu',\n      publishSubtitle6: 'token de acceso',\n      publishSubtitle7:\n        'aquí. *kepler.gl es una aplicación cliente, los datos quedan en tu navegador..',\n      exampleToken: 'p.e. pk.abcdefg.xxxxxx',\n      pasteTitle: '2. Engancha el enlace del estilo',\n      pasteSubtitle1: 'Qué es un',\n      pasteSubtitle2: 'enlace del estilo',\n      namingTitle: '3. Poner nombre a tu estilo'\n    },\n    shareMap: {\n      shareUriTitle: 'Compartir el enlace del mapa',\n      shareUriSubtitle: 'Generar un enlace del mapa para compartir con otros',\n      cloudTitle: 'Almacenage en la nube',\n      cloudSubtitle: 'Acceder y cargar datos del mapa a tu almacenage a la nube personal',\n      shareDisclaimer:\n        'kepler.gl guardará los datos del mapa en el almacenage de tu nube personal, sólo quien tenga el enlace podra acceder al mapa y a los datos . ' +\n        'Puedes editar/borrar el archivo de datos en tu cuenta en la nube en cualquier momento.',\n      gotoPage: 'Ves a la página de {currentProvider} de Kepler.gl'\n    },\n    statusPanel: {\n      mapUploading: 'Cargar un mapa',\n      error: 'Error'\n    },\n    saveMap: {\n      title: 'Almacentage en la nube',\n      subtitle: 'Acceder para guardar el mapa en teu almacenage en la nube'\n    },\n    exportMap: {\n      formatTitle: 'Formato de mapa',\n      formatSubtitle: 'Escoger el formato al que se desea exportar el mapa',\n      html: {\n        selection: 'Exportar tu mapa como un archivo HTML interactivo.',\n        tokenTitle: 'Token de acceso de Mapbox',\n        tokenSubtitle: 'Utilizar tu token de acceso a Mapbox al archivo HTML (opcional)',\n        tokenPlaceholder: 'Enganchar tu token de acceso a Mapbox',\n        tokenMisuseWarning:\n          '* Si no proporcionas tu propio token, el mapa podría fallar en cualquier momento cuando reemplacemos nuestro token para evitar abusos. ',\n        tokenDisclaimer:\n          'Puedes cambiar el token de Mapbox posteriormente utilizando estas instrucciones: ',\n        tokenUpdate: 'Como actualitzar un token preexistente.',\n        modeTitle: 'Modo mapa',\n        modeSubtitle1: 'Seleccionar modo app. Más ',\n        modeSubtitle2: 'información',\n        modeDescription: 'Permmite a los usuarios {modo} el mapa',\n        read: 'leer',\n        edit: 'editar'\n      },\n      json: {\n        configTitle: 'Configuración del mapa',\n        configDisclaimer:\n          'La configuración del mapa será incluida en el archivo Json. Si utilitzas kepler.gl en tu propia app puedes copiar esta configuración y pasarla a  ',\n        selection:\n          'Exportar los datos del mapa y la configuración en un solo archivo Json. Posteriormente puedes abrir este mismo mapa cargando este mismo archivo a kepler.gl.',\n        disclaimer:\n          '* La configuración del mapa se combina con los conjuntos de datos cargados. ‘dataId’ se utiliza para vincular capas, filtros y sugerencias a un conjunto de datos específico. ' +\n          'Cuando pases esta configuración a addDataToMap, asegura que el identificador del conjunto de datos coincida con los ‘dataId’ de esta configuración.'\n      }\n    },\n    loadingDialog: {\n      loading: 'Cargando...'\n    },\n    loadData: {\n      upload: 'Cargar archivos',\n      storage: 'Cargar desde almacenage'\n    },\n    tripInfo: {\n      title: 'Como habilitar la animación de viaje',\n      description1:\n        'Para animar la ruta, los datos geoJSON han de contener `LineString` en su geometría y las coordenadas de LineString deben tener 4 elementos en los formats de ',\n      code: ' [longitude, latitude, altitude, timestamp] ',\n      description2:\n        'y el último elemento debe ser la marca del tiempo. Los formatos válidos para la marca de tiempo incluyen Unix en segundos como `1564184363` o en milisegundos como `1564184363000`.',\n      example: 'Ejemplo:'\n    },\n    iconInfo: {\n      title: 'Como dibujar íconos',\n      description1:\n        'En tu CSV crea una columna y pon el nombre del ícono que quieres dibujar. Puedes dejar la celda vacía cuando no quieras que se muestre para ciertos puntos. Cuando la columna se llama',\n      code: 'ícono',\n      description2: ' kepler.gl automáticamente creará una capa de ícono.',\n      example: 'Ejemplo:',\n      icons: 'Iconos'\n    },\n    storageMapViewer: {\n      lastModified: 'Última modificación hace {lastUpdated}',\n      back: 'Atrás'\n    },\n    overwriteMap: {\n      title: 'Guardando el mapa...',\n      alreadyExists: 'ja existe en {mapSaved}. Lo quieres sobreescrivir?'\n    },\n    loadStorageMap: {\n      back: 'Atrás',\n      goToPage: 'Ves a la página {displayName} de Kepler.gl',\n      storageMaps: 'Almancenage / Mapas',\n      noSavedMaps: 'No hay ningún mapa guardado todavía'\n    }\n  },\n  header: {\n    visibleLayers: 'Capas visibles',\n    layerLegend: 'Capa de leyenda'\n  },\n  interactions: {\n    tooltip: 'Sugerencias',\n    brush: 'Pincel',\n    coordinate: 'Coordenadas',\n    geocoder: 'Geocodificador'\n  },\n  layerBlending: {\n    title: 'Combinación de capas',\n    additive: 'aditiva',\n    normal: 'normal',\n    subtractive: 'substractiva'\n  },\n  columns: {\n    title: 'Columnas',\n    lat: 'lat',\n    lng: 'lon',\n    altitude: 'altura',\n    icon: 'ícono',\n    geojson: 'geojson',\n    arc: {\n      lat0: 'lat origen',\n      lng0: 'lng origen ',\n      lat1: 'lat destino',\n      lng1: 'lng destino'\n    },\n    line: {\n      alt0: 'altura origen',\n      alt1: 'altura destino'\n    },\n    grid: {\n      worldUnitSize: 'Tamaño de la malla (km)'\n    },\n    hexagon: {\n      worldUnitSize: 'Radio de hexágono (km)'\n    },\n    hex_id: 'id hex'\n  },\n  color: {\n    customPalette: 'Paleta personalizada',\n    steps: 'pasos',\n    type: 'tipo',\n    reversed: 'invertida'\n  },\n  scale: {\n    colorScale: 'Escala de color',\n    sizeScale: 'Escala de medidas',\n    strokeScale: 'Escala de trazo',\n    scale: 'Escala'\n  },\n  fileUploader: {\n    message: 'Arrastra y suelta el archivo aquí',\n    chromeMessage:\n      '*usuario de Chrome: la medida máxima son 250mb, si debes cargar un archivo más grande utiliza Safari',\n    disclaimer:\n      '*kepler.gl es una aplicación al lado cliente que no utiliza ningún servidor. Los datos sólo existen en tu máquina/navegador. ' +\n      'No se envian datos ni mapas a ningún servidor.',\n    configUploadMessage:\n      'Cargar {fileFormatNames} o un mapa guardado en **Json**. Más información sobre [**supported file formats**]',\n    browseFiles: 'navega por tus archivos',\n    uploading: 'Cargando',\n    fileNotSupported: 'El archivo {errorFiles} no es compatible.',\n    or: 'o'\n  },\n  geocoder: {\n    title: 'Introduce una dirección'\n  },\n  fieldSelector: {\n    clearAll: 'Quitar todos',\n    formatting: 'Formato'\n  },\n  compare: {\n    modeLabel: 'Modo Comparación',\n    typeLabel: 'Tipo de Comparación',\n    types: {\n      absolute: 'Absoluta',\n      relative: 'Relativa'\n    }\n  },\n  mapPopover: {\n    primary: 'Principal'\n  },\n  density: 'densidad',\n  'Bug Report': 'Informe de errores',\n  'User Guide': 'Guía de usuario',\n  Save: 'Guadar',\n  Share: 'Compartir'\n};\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {LOCALES} from '../locales';\n\nexport default {\n  property: {\n    weight: 'pes',\n    label: 'etiqueta',\n    fillColor: 'color fons',\n    color: 'color',\n    coverage: 'cobertura',\n    strokeColor: 'color de traç',\n    radius: 'radi',\n    outline: 'outline',\n    stroke: 'traç',\n    density: 'densitat',\n    height: 'alçada',\n    sum: 'suma',\n    pointCount: 'Recompte de Punts'\n  },\n  placeholder: {\n    search: 'Cerca',\n    selectField: 'Selecciona un camp',\n    yAxis: 'Eix Y',\n    selectType: 'Selecciona un Tipus',\n    selectValue: 'Selecciona un Valor',\n    enterValue: 'Entra un valor',\n    empty: 'buit'\n  },\n  misc: {\n    by: '',\n    valuesIn: 'Valors a',\n    valueEquals: 'Valor igual a',\n    dataSource: 'Font de dades',\n    brushRadius: 'Radi del pinzell (km)',\n    empty: ' '\n  },\n  mapLayers: {\n    title: 'Capes del mapa',\n    label: 'Etiqueta',\n    road: 'Carretera',\n    border: 'Frontera',\n    building: 'Edifici',\n    water: 'Aigua',\n    land: 'Terra',\n    '3dBuilding': 'Edifici 3D',\n    background: 'Fons'\n  },\n  panel: {\n    text: {\n      label: 'etiqueta',\n      labelWithId: 'Etiqueta {labelId}',\n      fontSize: 'Mida de la font',\n      fontColor: 'Color de la font',\n      textAnchor: 'Àncora del text',\n      alignment: 'Alineació',\n      addMoreLabel: 'Afegeix més etiquetes'\n    }\n  },\n  sidebar: {\n    panels: {\n      layer: 'Capes',\n      filter: 'Filtres',\n      interaction: 'Interaccions',\n      basemap: 'Mapa base'\n    }\n  },\n  layer: {\n    required: 'Requerit*',\n    radius: 'Radi',\n    color: 'Color',\n    fillColor: 'Color fons',\n    outline: 'Contorn',\n    weight: 'Gruix',\n    propertyBasedOn: '{property} basada en',\n    coverage: 'Cobertura',\n    stroke: 'Traç',\n    strokeWidth: 'Amplada de traç',\n    strokeColor: 'Color de traç',\n    basic: 'Basic',\n    trailLength: 'Longitud de pista',\n    trailLengthDescription: 'Nombre de segons fins que desapareix el camí',\n    newLayer: 'nova capa',\n    elevationByDescription: \"Si desactivat, l'alçada es basa en el recompte de punts\",\n    colorByDescription: 'Si desactivat, el color es basa en el recompte de punts',\n    aggregateBy: '{field} agregat per',\n    '3DModel': 'Model 3D',\n    '3DModelOptions': 'Opcions del model 3D',\n    type: {\n      point: 'punt',\n      arc: 'arc',\n      line: 'línia',\n      grid: 'malla',\n      hexbin: 'hexbin',\n      polygon: 'polígon',\n      geojson: 'geojson',\n      cluster: 'cluster',\n      icon: 'icona',\n      heatmap: 'heatmap',\n      hexagon: 'hexàgon',\n      hexagonid: 'H3',\n      trip: 'viatge',\n      s2: 'S2',\n      '3d': '3D'\n    },\n    layerUpdateError:\n      \"S'ha produït un error durant l'actualització de la capa: {errorMessage}. Assegureu-vos que el format de les dades d’entrada sigui vàlid.\"\n  },\n  layerVisConfigs: {\n    angle: 'Angle',\n    strokeWidth: 'Amplada traç',\n    strokeWidthRange: 'Rang amplada de traç',\n    radius: 'Radi',\n    fixedRadius: 'Radi fixe a mesurar',\n    fixedRadiusDescription: 'Ajusta el radi al radi absolut en metres, p.ex 5 a 5 metres',\n    radiusRange: 'Rang de radi',\n    clusterRadius: 'Radi Cluster en Pixels',\n    radiusRangePixels: 'Rang del radi en pixels',\n    opacity: 'Opacitat',\n    coverage: 'Cobertura',\n    outline: 'Outline',\n    colorRange: 'Rang de color',\n    stroke: 'Traç',\n    strokeColor: 'Color de traç',\n    strokeColorRange: 'Rang de color de traç',\n    targetColor: 'Color destí',\n    colorAggregation: 'Agregació de color',\n    heightAggregation: 'Agregació alçada',\n    resolutionRange: 'Rang de resolució',\n    sizeScale: 'Mida escala',\n    worldUnitSize: 'Mida de la unitat mundial',\n    elevationScale: 'Escala elevació',\n    enableElevationZoomFactor: 'Utilitzeu el factor de zoom d’elevació',\n    enableElevationZoomFactorDescription:\n      \"'Ajusteu l'alçada / elevació en funció del factor de zoom actual\",\n    enableHeightZoomFactor: 'Utilitzeu el factor de zoom d’alçada',\n    heightScale: 'Escala alçada',\n    coverageRange: 'Rang ed cobertura',\n    highPrecisionRendering: 'Representació alta precisió',\n    highPrecisionRenderingDescription: 'La precisió alta tindrà rendiment més baix',\n    height: 'Alçada',\n    heightDescription: 'Fes clic al botó a dalt a la dreta del mapa per canviar a vista 3D',\n    fill: 'Omple',\n    enablePolygonHeight: 'Activa alçada del polígon',\n    showWireframe: 'Mostra Wireframe',\n    weightIntensity: 'Intensitat de pes',\n    zoomScale: 'Escala de zoom',\n    heightRange: 'Rang alçada',\n    heightMultiplier: \"Multiplicador d'alçada\",\n    fixedHeight: 'Alçada fixa',\n    fixedHeightDescription: \"Utilitzeu l'alçada sense modificacions\"\n  },\n  layerManager: {\n    addData: 'Afegeix Dades',\n    addLayer: 'Afegeix Capes',\n    layerBlending: 'Combinar capes'\n  },\n  mapManager: {\n    mapStyle: 'Estil de mapa',\n    addMapStyle: 'Afegeix estils de mapa',\n    '3dBuildingColor': 'Color edifici 3D',\n    backgroundColor: 'Color de fons'\n  },\n  layerConfiguration: {\n    defaultDescription: 'Calcula {property} segons el camp seleccionat',\n    howTo: 'How to'\n  },\n  filterManager: {\n    addFilter: 'Afegeix Filtre'\n  },\n  datasetTitle: {\n    showDataTable: 'Mostra taula de dades',\n    removeDataset: 'Elimina conjunt de dades'\n  },\n  datasetInfo: {\n    rowCount: '{rowCount} files'\n  },\n  tooltip: {\n    hideLayer: 'oculta la capa',\n    showLayer: 'mostra la capa',\n    hideFeature: \"Amaga l'objecte\",\n    showFeature: \"Mostra l'objecte\",\n    hide: 'amaga',\n    show: 'mostra',\n    removeLayer: 'Elimina capa',\n    resetAfterError: 'Intenteu habilitar la capa després dun error',\n    layerSettings: 'Configuració de capa',\n    closePanel: 'Tanca panel actual',\n    switchToDualView: 'Canvia a la vista de mapa dual',\n    showLegend: 'mostra llegenda',\n    disable3DMap: 'Desactiva mapa 3D',\n    DrawOnMap: 'Dibuixa al mapa',\n    selectLocale: 'Selecciona configuració regional',\n    hideLayerPanel: 'Oculta el tauler de capes',\n    showLayerPanel: 'Mostra el tauler de capes',\n    moveToTop: 'Desplaça a dalt de tot de les capes de dades',\n    selectBaseMapStyle: 'Selecciona estil de mapa base',\n    delete: 'Esborra',\n    timePlayback: 'Reproducció de temps',\n    cloudStorage: 'Emmagatzematge al núvol',\n    '3DMap': 'Mapa 3D',\n    animationByWindow: 'Finestra Temporal Mòbil',\n    animationByIncremental: 'Finestra Temporal Incremental',\n    speed: 'velocitat',\n    play: 'iniciar',\n    pause: 'pausar',\n    reset: 'reiniciar'\n  },\n  toolbar: {\n    exportImage: 'Exporta imatge',\n    exportData: 'Exporta dades',\n    exportMap: 'Exporta mapa',\n    shareMapURL: 'Comparteix URL del mapa',\n    saveMap: 'Desa mapa',\n    select: 'selecciona',\n    polygon: 'polígon',\n    rectangle: 'rectangle',\n    hide: 'amaga',\n    show: 'mostra',\n    ...LOCALES\n  },\n  modal: {\n    title: {\n      deleteDataset: 'Esborra conjunt de dades',\n      addDataToMap: 'Afegeix dades al mapa',\n      exportImage: 'Exporta imatge',\n      exportData: 'Exporta dades',\n      exportMap: 'Exporta mapa',\n      addCustomMapboxStyle: 'Afegeix estil Mapbox propi',\n      saveMap: 'Desa mapa',\n      shareURL: 'Comparteix URL'\n    },\n    button: {\n      delete: 'Esborra',\n      download: 'Descarrega',\n      export: 'Exporta',\n      addStyle: 'Afegeix estil',\n      save: 'Desa',\n      defaultCancel: 'Cancel·la',\n      defaultConfirm: 'Confirma'\n    },\n    exportImage: {\n      ratioTitle: 'Ràtio',\n      ratioDescription: 'Escull ràtio per diversos usos.',\n      ratioOriginalScreen: 'Pantalla original',\n      ratioCustom: 'Personalitzat',\n      ratio4_3: '4:3',\n      ratio16_9: '16:9',\n      resolutionTitle: 'Resolució',\n      resolutionDescription: 'Alta resolució és millor per a les impressions.',\n      mapLegendTitle: 'Llegenda del mapa',\n      mapLegendAdd: 'Afegir llegenda al mapa'\n    },\n    exportData: {\n      datasetTitle: 'Conjunt de dades',\n      datasetSubtitle: 'Escull els conjunts de dades que vols exportar',\n      allDatasets: 'Tots',\n      dataTypeTitle: 'Tipus de dades',\n      dataTypeSubtitle: 'Escull els tipus de dades que vols exportar',\n      filterDataTitle: 'Filtra dades',\n      filterDataSubtitle: 'Pots escollir exportar les dades originals o les filtrades',\n      filteredData: 'Dades filtrades',\n      unfilteredData: 'Dades sense filtrar',\n      fileCount: '{fileCount} Arxius',\n      rowCount: '{rowCount} Files'\n    },\n    deleteData: {\n      warning: \"estàs a punt d'esborrar aquest conjunt de dades. Afectarà {length} capes\"\n    },\n    addStyle: {\n      publishTitle: \"2. Publica el teu estil a Mapbox o proporciona el token d'accés\",\n      publishSubtitle1: 'Pots crear el teu propi estil de mapa a',\n      publishSubtitle2: 'i',\n      publishSubtitle3: 'publicar',\n      publishSubtitle4: 'ho.',\n      publishSubtitle5: 'Per utilitzar un estil privat, enganxa el teu',\n      publishSubtitle6: \"token d'accés\",\n      publishSubtitle7:\n        'aquí. *kepler.gl és una aplicació client, les dades romanen al teu navegador..',\n      exampleToken: 'p.ex. pk.abcdefg.xxxxxx',\n      pasteTitle: \"1. Enganxa la URL de l'estil\",\n      pasteSubtitle1: 'Què és un',\n      pasteSubtitle2: \"URL de l'estil\",\n      namingTitle: '3. Posa nom al teu estil'\n    },\n    shareMap: {\n      shareUriTitle: 'Comparteix URL del mapa',\n      shareUriSubtitle: 'Genera una URL del mapa per compartir amb altri',\n      cloudTitle: 'Emmagatzematge al núvol',\n      cloudSubtitle: 'Accedeix i carrega dades de mapa al teu emmagatzematge al núvol personal',\n      shareDisclaimer:\n        'kepler.gl desarà les dades del mapa al teu emmagatzematge al núvol personal, només qui tingui la URL podrà accedir al mapa i a les dades . ' +\n        \"Pots editar/esborrar l'arxiu de dades en el teu compte al núvol en qualsevol moment.\",\n      gotoPage: 'Ves a la pàgina de {currentProvider} de Kepler.gl'\n    },\n    statusPanel: {\n      mapUploading: 'Carregar un mapa',\n      error: 'Error'\n    },\n    saveMap: {\n      title: 'Emmagatzematge al núvol',\n      subtitle: 'Accedeix per desar el mapa al teu emmagatzematge al núvol'\n    },\n    exportMap: {\n      formatTitle: 'Format de mapa',\n      formatSubtitle: 'Escull el format amb què vols exportar el teu mapa',\n      html: {\n        selection: 'Exporta el teu mapa com un arxiu HTML interactiu.',\n        tokenTitle: \"Token d'accés de Mapbox\",\n        tokenSubtitle: \"Utilitza el teu token d'accés de Mapbox a l'arxiu HTML (opcional)\",\n        tokenPlaceholder: \"Enganxa el teu token d'accés a Mapbox\",\n        tokenMisuseWarning:\n          '* Si no proporciones el teu propi token, el mapa podria fallar en qualsevol moment quan reemplacem el nostre token per evitar abusos. ',\n        tokenDisclaimer:\n          'Pots canviar el toke de Mapbox més endavant fent servir aquestes instruccions: ',\n        tokenUpdate: 'Com actualitzar un token preexistent.',\n        modeTitle: 'Mode mapa',\n        modeSubtitle1: 'Selecciona mode app. Més ',\n        modeSubtitle2: 'informació',\n        modeDescription: 'Permet als usuaris {mode} el mapa',\n        read: 'llegir',\n        edit: 'editar'\n      },\n      json: {\n        configTitle: 'Configuració del mapa',\n        configDisclaimer:\n          \"La configuració del mapa s'inclourà a l'arxiu Json. Si utilitzes kepler.gl a la teva pròpia app pots copiar aquesta configuració i passar-la a  \",\n        selection:\n          'Exporta les dades del mapa i la configuració en un sol arxiu Json. Més endavant pots obrir aquest mateix mapa carregant aquest mateix arxiu a kepler.gl.',\n        disclaimer:\n          \"* La configuració del mapa es combina amb els conjunts de dades carregats. ‘dataId’ s'utilitza per lligar capes, filtres i suggeriments a un conjunt de dades específic. \" +\n          \"Quan passis aquesta configuració a addDataToMap, assegura que l'identificador del conjunt de dades coincideixi amb els ‘dataId’ d'aquesta configuració.\"\n      }\n    },\n    loadingDialog: {\n      loading: 'Carregant...'\n    },\n    loadData: {\n      upload: 'Carregar arxius',\n      storage: \"Carregar des d'emmagatzematge\"\n    },\n    tripInfo: {\n      title: 'Com habilitar l’animació de viatge',\n      description1:\n        'Per animar la ruta, les dades geoJSON han de contenir `LineString` en la seva geometria i les coordenades de LineString han de tenir 4 elements en els formats de ',\n      code: ' [longitude, latitude, altitude, timestamp] ',\n      description2:\n        'i el darrer element ha de ser la marca de temps. Els formats vàlids per a la marca de temps inclouen Unix en segons com `1564184363` o en milisegons com `1564184363000`.',\n      example: 'Exemple:'\n    },\n    iconInfo: {\n      title: 'Com dibuixar icones',\n      description1:\n        \"En el teu CSV crea una columna i posa-hi el nom de la icona que vols dibuixar. Pots deixar la cel·la buida quan no vulguis que es mostri per a certs punts. Quan la columna s'anomena\",\n      code: 'icon',\n      description2: \" kepler.gl automàticament crearà una capa d'icona.\",\n      example: 'Exemple:',\n      icons: 'Icones'\n    },\n    storageMapViewer: {\n      lastModified: 'Darrera modificació fa {lastUpdated}',\n      back: 'Enrere'\n    },\n    overwriteMap: {\n      title: 'Desant mapa...',\n      alreadyExists: 'ja existeix a {mapSaved}. El vols sobreescriure?'\n    },\n    loadStorageMap: {\n      back: 'Enrere',\n      goToPage: 'Ves a la pàgina {displayName} de Kepler.gl',\n      storageMaps: 'Emmagatzematge / Mapes',\n      noSavedMaps: 'Cap mapa desat encara'\n    }\n  },\n  header: {\n    visibleLayers: 'Capes visibles',\n    layerLegend: 'Llegenda de capes'\n  },\n  interactions: {\n    tooltip: 'Suggeriment',\n    brush: 'Pinzell',\n    coordinate: 'Coordenades',\n    geocoder: 'Geocodificador'\n  },\n  layerBlending: {\n    title: 'Combinació de capes',\n    additive: 'additiva',\n    normal: 'normal',\n    subtractive: 'substractiva'\n  },\n  columns: {\n    title: 'Columnes',\n    lat: 'lat',\n    lng: 'lon',\n    altitude: 'alçada',\n    icon: 'icona',\n    geojson: 'geojson',\n    arc: {\n      lat0: 'lat origen',\n      lng0: 'lng origen ',\n      lat1: 'lat destinació',\n      lng1: 'lng destinació'\n    },\n    line: {\n      alt0: 'alçada origen',\n      alt1: 'alçada destinació'\n    },\n    grid: {\n      worldUnitSize: 'Mida de malla (km)'\n    },\n    hexagon: {\n      worldUnitSize: \"Radi d'hexàgon (km)\"\n    },\n    hex_id: 'id hex'\n  },\n  color: {\n    customPalette: 'Paleta personalitzada',\n    steps: 'intervals',\n    type: 'tipus',\n    reversed: 'invertida'\n  },\n  scale: {\n    colorScale: 'Escala de color',\n    sizeScale: 'Escala de mides',\n    strokeScale: 'Escala de traç',\n    scale: 'Escala'\n  },\n  fileUploader: {\n    message: \"Arrossega i deixa anar l'arxiu aquí\",\n    chromeMessage:\n      '*usuari de Chrome: la mida màxima són 250mb, si has de carrgar un arxiu més gran fes servir Safari',\n    disclaimer:\n      '*kepler.gl és una aplicació a la banda client que no es recolza en cap servidor. Les dades només existeixen a la teva màquina/navegador. ' +\n      \"No s'envien dades ni mapes a cap servidor.\",\n    configUploadMessage:\n      'Carrega {fileFormatNames} o un mapa desat en **Json**. Més informació sobre [**supported file formats**]',\n    browseFiles: 'navega pels teus arxius',\n    uploading: 'Carregant',\n    fileNotSupported: \"L'arxiu {errorFiles} no és compatible.\",\n    or: 'o'\n  },\n  geocoder: {\n    title: 'Introdueix una adreça'\n  },\n  fieldSelector: {\n    clearAll: 'Treure tots',\n    formatting: 'Format'\n  },\n  compare: {\n    modeLabel: 'Mode Comparació',\n    typeLabel: 'Tipus de Comparació',\n    types: {\n      absolute: 'Absoluta',\n      relative: 'Relativa'\n    }\n  },\n  mapPopover: {\n    primary: 'Principal'\n  },\n  density: 'densitat',\n  'Bug Report': \"Informe d'errors\",\n  'User Guide': \"Guia d'usuari\",\n  Save: 'Desa',\n  Share: 'Comparteix'\n};\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {LOCALES} from '../locales';\n\nexport default {\n  property: {\n    weight: '权重',\n    label: '标签',\n    fillColor: '填充色',\n    color: '颜色',\n    coverage: '覆盖范围',\n    strokeColor: '线条颜色',\n    radius: '半径',\n    outline: '轮廓线',\n    stroke: '线条粗细',\n    density: '密度',\n    height: '高度',\n    sum: '总和',\n    pointCount: '点数'\n  },\n  placeholder: {\n    search: '搜索',\n    selectField: '选择区域',\n    yAxis: 'Y轴',\n    selectType: '选择类型',\n    selectValue: '选择值',\n    enterValue: '输入值',\n    empty: '未选择'\n  },\n  misc: {\n    by: '',\n    valuesIn: '值包含',\n    valueEquals: '值等于',\n    dataSource: '数据源',\n    brushRadius: '画笔半径 (km)',\n    empty: ' '\n  },\n  mapLayers: {\n    title: '图层',\n    label: '标签',\n    road: '道路',\n    border: '边界线',\n    building: '建筑物',\n    water: '水',\n    land: '地面',\n    '3dBuilding': '3D建筑'\n  },\n  panel: {\n    text: {\n      label: '标签',\n      labelWithId: '标签 {labelId}',\n      fontSize: '字体大小',\n      fontColor: '字体颜色',\n      textAnchor: '文本锚',\n      alignment: '对齐方式',\n      addMoreLabel: '添加更多标签'\n    }\n  },\n  sidebar: {\n    panels: {\n      layer: '图层',\n      filter: '过滤器',\n      interaction: '交互',\n      basemap: '底图'\n    }\n  },\n  layer: {\n    required: '必填*',\n    radius: '半径',\n    color: '颜色',\n    fillColor: '填充色',\n    outline: '轮廓线',\n    weight: '权重',\n    propertyBasedOn: '{property}的基准',\n    coverage: '覆盖范围',\n    stroke: '线条粗细',\n    strokeWidth: '线条宽度',\n    strokeColor: '线条颜色',\n    basic: '基础设置',\n    trailLength: '轨迹长度',\n    trailLengthDescription: '轨迹淡出的秒数',\n    newLayer: '新建图层',\n    elevationByDescription: '关闭时，高度取决于点数',\n    colorByDescription: '关闭时，颜色取决于点数',\n    aggregateBy: '{field}聚合如下: ',\n    '3DModel': '3D模型',\n    '3DModelOptions': '3D模型选项',\n    type: {\n      point: 'point',\n      arc: 'arc',\n      line: 'line',\n      grid: 'grid',\n      hexbin: 'hexbin',\n      polygon: 'polygon',\n      geojson: 'geojson',\n      cluster: 'cluster',\n      icon: 'icon',\n      heatmap: 'heatmap',\n      hexagon: 'hexagon',\n      hexagonid: 'H3',\n      trip: 'trip',\n      s2: 'S2',\n      '3d': '3D'\n    }\n  },\n  layerVisConfigs: {\n    angle: '角度',\n    strokeWidth: '线条宽度',\n    strokeWidthRange: '线条宽度范围',\n    radius: '半径',\n    fixedRadius: '以米为单位固定半径',\n    fixedRadiusDescription: '将半径映射到以米为单位的绝对半径（例: 5 → 5米）',\n    radiusRange: '半径范围',\n    clusterRadius: '聚类半径',\n    radiusRangePixels: '半径范围[像素]',\n    opacity: '透明度',\n    coverage: '覆盖范围',\n    outline: '轮廓',\n    colorRange: '色彩范围',\n    stroke: '线',\n    strokeColor: '线条颜色',\n    strokeColorRange: '线条色彩范围',\n    targetColor: '目标颜色',\n    colorAggregation: '颜色聚合',\n    heightAggregation: '高度聚合',\n    resolutionRange: '分辨率范围',\n    sizeScale: '大小比例',\n    worldUnitSize: '世界单位大小',\n    elevationScale: '海拔比例',\n    enableElevationZoomFactor: '使用高程缩放系数',\n    enableElevationZoomFactorDescription: '根据当前缩放系数调整海拔',\n    heightScale: '高度比例',\n    coverageRange: '覆盖范围',\n    highPrecisionRendering: '高精度渲染',\n    highPrecisionRenderingDescription: '高精度渲染会导致性能下降',\n    height: '高度',\n    heightDescription: '点击屏幕右上角的按钮切换到3D视图',\n    fill: '填充',\n    enablePolygonHeight: '启用多边形高度',\n    showWireframe: '显示线框',\n    weightIntensity: '加权强度',\n    zoomScale: '缩放比例',\n    heightRange: '高度范围'\n  },\n  layerManager: {\n    addData: '添加数据',\n    addLayer: '添加图层',\n    layerBlending: '混合图层'\n  },\n  mapManager: {\n    mapStyle: '地图样式',\n    addMapStyle: '添加地图样式',\n    '3dBuildingColor': '3D 建筑颜色'\n  },\n  layerConfiguration: {\n    defaultDescription: '根据所选字段计算 {property}',\n    howTo: '使用方法'\n  },\n  filterManager: {\n    addFilter: '添加过滤器'\n  },\n  datasetTitle: {\n    showDataTable: '显示数据表',\n    removeDataset: '删除数据集'\n  },\n  datasetInfo: {\n    rowCount: '{rowCount}行'\n  },\n  tooltip: {\n    hideLayer: '隐藏图层',\n    showLayer: '显示图层',\n    hideFeature: '隐藏特征',\n    showFeature: '显示特征',\n    hide: '隐藏',\n    show: '显示',\n    removeLayer: '删除图层',\n    zoomToLayer: '缩放☞图层',\n    duplicateLayer: '复制图层',\n    layerSettings: '图层设置',\n    closePanel: '关闭当前面板',\n    switchToDualView: '切换到双地图视图',\n    showLegend: '显示图例',\n    disable3DMap: '禁用 3D 地图',\n    DrawOnMap: '在地图上绘制',\n    selectLocale: '选择语言',\n    hideLayerPanel: '隐藏图层面板',\n    showLayerPanel: '显示图层面板',\n    moveToTop: '移至图层顶部',\n    selectBaseMapStyle: '选择底图样式',\n    delete: '删除',\n    timePlayback: '时空回放',\n    cloudStorage: '云存储',\n    '3DMap': '3D 地图',\n    animationByWindow: '移动时间窗口',\n    animationByIncremental: '增量时间窗口',\n    speed: '速度',\n    play: '播放',\n    pause: '暂停',\n    reset: '重置'\n  },\n  toolbar: {\n    exportImage: '导出图片',\n    exportData: '导出数据',\n    exportMap: '导出地图',\n    shareMapURL: '分享地图网址',\n    saveMap: '保存地图',\n    select: '选择',\n    polygon: 'polygon',\n    rectangle: 'rectangle',\n    hide: '隐藏',\n    show: '显示',\n    ...LOCALES\n  },\n  editor: {\n    filterLayer: '过滤图层',\n    copyGeometry: '复制几何图形'\n  },\n  modal: {\n    title: {\n      deleteDataset: '删除数据集',\n      addDataToMap: '添加数据到地图',\n      exportImage: '导出图片',\n      exportData: '导出数据',\n      exportMap: '导出地图',\n      addCustomMapboxStyle: '添加自定义地图',\n      saveMap: '保存地图',\n      shareURL: '分享网址'\n    },\n    button: {\n      delete: '删除',\n      download: '下载',\n      export: '出口',\n      addStyle: '添加样式',\n      save: '保存',\n      defaultCancel: '取消',\n      defaultConfirm: '确认'\n    },\n    exportImage: {\n      ratioTitle: '比率',\n      ratioDescription: '选择不同用途的比例。',\n      ratioOriginalScreen: '原始屏幕',\n      ratioCustom: '自定义',\n      ratio4_3: '4:3',\n      ratio16_9: '16:9',\n      resolutionTitle: '分辨率',\n      resolutionDescription: '高分辨率更适合打印。',\n      mapLegendTitle: '地图图例',\n      mapLegendAdd: '在地图上添加图例'\n    },\n    exportData: {\n      datasetTitle: '数据集',\n      datasetSubtitle: '选择要导出的数据集',\n      allDatasets: '全部',\n      dataTypeTitle: '数据类型',\n      dataTypeSubtitle: '选择要导出的数据类型',\n      filterDataTitle: '过滤数据',\n      filterDataSubtitle: '可以选择导出原始数据或过滤后的数据',\n      filteredData: '过滤数据',\n      unfilteredData: '元数据',\n      fileCount: '{fileCount} 个文件',\n      rowCount: '{rowCount} 行'\n    },\n    deleteData: {\n      warning: '确认要删除这个数据集。它会影响 {length} 个层'\n    },\n    addStyle: {\n      publishTitle:\n        '2. 如果在步骤1中输入了 mapbox 样式的 url，需要在 mapbox 上发布样式或提供访问令牌（access token）。（可选）',\n      publishSubtitle1: '可以在以下位置创建自己的地图样式',\n      publishSubtitle2: '并',\n      publishSubtitle3: '发布',\n      publishSubtitle4: '。',\n      publishSubtitle5: '使用私有样式，需粘贴',\n      publishSubtitle6: '访问令牌（access token）',\n      publishSubtitle7: '。* Kepler.gl 是一个客户端应用程序，数据保留在您的浏览器中。',\n      exampleToken: '例) pk.abcdefg.xxxxxx',\n      pasteTitle: '1. 粘贴样式 url',\n      pasteSubtitle0: '样式 url 可以是 Mapbox 的',\n      pasteSubtitle1: '什么是',\n      pasteSubtitle2: '样式 URL，',\n      pasteSubtitle3: '还可以使用遵从Mapbox GL样式的style.json的url：',\n      pasteSubtitle4: 'Mapbox GL 样式规范',\n      namingTitle: '3. 命名你的样式'\n    },\n    shareMap: {\n      shareUriTitle: '分享地图网址',\n      shareUriSubtitle: '生成分享地图的链接',\n      cloudTitle: '云存储',\n      cloudSubtitle: '登录并将地图数据上传到个人云存储',\n      shareDisclaimer:\n        'kepler.gl 将创建的地图存储在个人云存储中，因此只有知道 URL 的人才能访问地图及其数据。' +\n        '可以随时使用个人云存储帐户编辑/删除数据文件。',\n      gotoPage: '跳转到Kepler.gl的{currentProvider}页面'\n    },\n    statusPanel: {\n      mapUploading: '地图上传中',\n      error: '错误'\n    },\n    saveMap: {\n      title: '云存储',\n      subtitle: '登录以将地图保存到个人云存储'\n    },\n    exportMap: {\n      formatTitle: '地图的格式',\n      formatSubtitle: '选择导出地图的格式',\n      html: {\n        selection: '将地图导出至交互式的html文件中。',\n        tokenTitle: 'Mapbox的访问令牌（access token）',\n        tokenSubtitle: '在 html 中使用自己的 Mapbox 访问令牌（access token）（可选）',\n        tokenPlaceholder: '粘贴个人的 Mapbox 访问令牌access token）',\n        tokenMisuseWarning:\n          '* 如果您不提供自己的令牌，则在我们更换令牌时，地图可能随时无法显示，以免被滥用。',\n        tokenDisclaimer: '可以稍后使用以下说明更改 Mapbox 令牌：',\n        tokenUpdate: '如何更新现有的地图令牌。',\n        modeTitle: '地图模式',\n        modeSubtitle1: '选择地图模式。更多的',\n        modeSubtitle2: '信息',\n        modeDescription: '允许用户{mode}地图',\n        read: '阅读',\n        edit: '编辑'\n      },\n      json: {\n        configTitle: '地图配置',\n        configDisclaimer:\n          '地图配置将包含在 Json 文件中。如果您在自己的应用程序中使用 kepler.gl。您可以复制此配置并将其传递给',\n        selection:\n          '将当前地图数据和配置导出到单个 Json 文件中。稍后您可以通过将此文件上传到 kepler.gl 来打开同一张地图。',\n        disclaimer:\n          '* 地图配置与加载的数据集相结合。 “dataId”用于将图层、过滤器和工具提示绑定到特定数据集。' +\n          '将此配置传递给 addDataToMap 时，请确保数据集 ID 与此配置中的 dataId/s 匹配。'\n      }\n    },\n    loadingDialog: {\n      loading: '加载中...'\n    },\n    loadData: {\n      upload: '上传文件',\n      storage: '从存储中加载'\n    },\n    tripInfo: {\n      title: '如何启用移动动画',\n      description1:\n        '要路径设置动画，geoJSON 数据必须包含 `LineString` 作为要素几何。此外，LineString 的坐标有四个元素',\n      code: ' [经度，纬度，高程，时间戳] ',\n      description2:\n        '最后一个元素是时间戳。有效的时间戳格式包括以秒为单位的 unix，例如`1564184363`或以毫秒为单位的`1564184363000`。',\n      example: '例：'\n    },\n    iconInfo: {\n      title: '如何绘制图标',\n      description1:\n        '在您的 csv 中，创建一列，将您要绘制的图标的名称放入其中。如果不想在某些点上显示图标，可以将单元格留空。当列被命名为',\n      code: '图标',\n      description2: '时，kepler.gl 会自动为你创建一个图标层。',\n      example: '例:',\n      icons: '图标一览'\n    },\n    storageMapViewer: {\n      lastModified: '上次修改 {lastUpdated} 前',\n      back: '返回'\n    },\n    overwriteMap: {\n      title: '正在保存地图...',\n      alreadyExists: '已经存在于 {mapSaved} 中。你想覆盖吗？'\n    },\n    loadStorageMap: {\n      back: '返回',\n      goToPage: '跳转到 Kepler.gl 的 {displayName} 页面',\n      storageMaps: '存储 / 地図',\n      noSavedMaps: '还没有保存的地图'\n    }\n  },\n  header: {\n    visibleLayers: '可见图层',\n    layerLegend: '图层图例'\n  },\n  interactions: {\n    tooltip: '工具提示',\n    brush: '刷',\n    coordinate: '坐标',\n    geocoder: '地理编码器'\n  },\n  layerBlending: {\n    title: '图层混合',\n    additive: 'additive',\n    normal: 'normal',\n    subtractive: 'subtractive'\n  },\n  columns: {\n    title: '列',\n    lat: '纬度',\n    lng: '经度',\n    altitude: '海拔',\n    icon: '图标',\n    geojson: 'geojson',\n    token: '令牌',\n    arc: {\n      lat0: '起点 纬度',\n      lng0: '起点 经度',\n      lat1: '终点 纬度',\n      lng1: '终点 经度'\n    },\n    grid: {\n      worldUnitSize: '网格大小 (km)'\n    },\n    hexagon: {\n      worldUnitSize: '六边形半径 (km)'\n    },\n    hex_id: 'hex id'\n  },\n  color: {\n    customPalette: '自定义调色板',\n    steps: '步骤',\n    type: '类型',\n    reversed: '反转'\n  },\n  scale: {\n    colorScale: '色阶',\n    sizeScale: '大小比例',\n    strokeScale: '描边比例',\n    scale: '规模'\n  },\n  fileUploader: {\n    message: '将您的文件拖放到此处（可多个）',\n    chromeMessage:\n      '*对于 Chrome 用户：文件大小最大为 250mb。如果需要上传更多文件，请尝试使用 Safari。',\n    disclaimer:\n      '* kepler.gl 在客户端上工作。数据仅保留在您自己的设备/浏览器中。' +\n      '没有信息或地图数据被发送到任何服务器。',\n    configUploadMessage:\n      '上传 {fileFormatNames} 或保存的地图 **Json**。阅读更多关于[**支持的文件格式**]',\n    browseFiles: '浏览你的文件',\n    uploading: '上传',\n    fileNotSupported: '不支持文件 {errorFiles}。',\n    or: '或'\n  },\n  geocoder: {\n    title: '输入地址或坐标（例： 37.79,-122.40）'\n  },\n  fieldSelector: {\n    clearAll: '清除所有',\n    formatting: '格式化'\n  },\n  compare: {\n    modeLabel: '比较模式',\n    typeLabel: '比较类型',\n    types: {\n      absolute: '绝对',\n      relative: '相对'\n    }\n  },\n  mapPopover: {\n    primary: '主要'\n  },\n  density: '密度',\n  'Bug Report': '错误报告',\n  'User Guide': '用户指南',\n  Save: '保存',\n  Share: '分享'\n};\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {LOCALES} from '../locales';\n\nexport default {\n  property: {\n    weight: '重み',\n    label: 'ラベル',\n    fillColor: '塗りつぶしの色',\n    color: '色',\n    coverage: 'カバー率',\n    strokeColor: '線の色',\n    radius: '半径',\n    outline: '輪郭線',\n    stroke: '線の太さ',\n    density: '密度',\n    height: '高さ',\n    sum: '合計',\n    pointCount: '点の数'\n  },\n  placeholder: {\n    search: '検索',\n    selectField: 'フィールドを選択',\n    yAxis: 'Y軸',\n    selectType: 'タイプを選択',\n    selectValue: '値を選択',\n    enterValue: '値を入力',\n    empty: '未選択'\n  },\n  misc: {\n    by: '',\n    valuesIn: '値が以下に含まれる',\n    valueEquals: '値が以下に等しい',\n    dataSource: 'データソース',\n    brushRadius: 'ブラシ半径 (km)',\n    empty: ' '\n  },\n  mapLayers: {\n    title: '地図レイヤ',\n    label: 'ラベル',\n    road: '道路',\n    border: '境界線',\n    building: '建物',\n    water: '水',\n    land: '地面',\n    '3dBuilding': '3D建物',\n    background: '背景'\n  },\n  panel: {\n    text: {\n      label: 'ラベル',\n      labelWithId: 'ラベル {labelId}',\n      fontSize: '文字サイズ',\n      fontColor: '文字色',\n      textAnchor: '文字左右',\n      alignment: '文字上下',\n      addMoreLabel: 'ラベルを追加'\n    }\n  },\n  sidebar: {\n    panels: {\n      layer: 'レイヤ',\n      filter: 'フィルター',\n      interaction: 'インタラクション',\n      basemap: 'ベースマップ'\n    }\n  },\n  layer: {\n    required: '必須*',\n    radius: '半径',\n    color: '色',\n    fillColor: '塗りつぶしの色',\n    outline: '輪郭線',\n    weight: '重み',\n    propertyBasedOn: '{property}の基準',\n    coverage: 'カバー率',\n    stroke: '線',\n    strokeWidth: '線の太さ',\n    strokeColor: '線の色',\n    basic: '基本設定',\n    trailLength: '痕跡の長さ',\n    trailLengthDescription: '痕跡が完全に消えるまでの秒数',\n    newLayer: '新しいレイヤ',\n    elevationByDescription: 'オフの場合、高さは点の数に応じて決まります',\n    colorByDescription: 'オフの場合、色は点の数に応じて決まります',\n    aggregateBy: '{field}を以下で集計: ',\n    '3DModel': '3Dモデル',\n    '3DModelOptions': '3Dモデルのオプション',\n    type: {\n      point: 'point',\n      arc: 'arc',\n      line: 'line',\n      grid: 'grid',\n      hexbin: 'hexbin',\n      polygon: 'polygon',\n      geojson: 'geojson',\n      cluster: 'cluster',\n      icon: 'icon',\n      heatmap: 'heatmap',\n      hexagon: 'hexagon',\n      hexagonid: 'H3',\n      trip: 'trip',\n      s2: 'S2',\n      '3d': '3D'\n    }\n  },\n  layerVisConfigs: {\n    angle: '角度',\n    strokeWidth: '線の太さ (ピクセル)',\n    strokeWidthRange: '線の太さの範囲',\n    radius: '半径',\n    fixedRadius: '半径をメートルで固定',\n    fixedRadiusDescription: '半径をメートル単位の絶対半径に変換します（例: 5 → 5メートル）',\n    radiusRange: '半径の範囲',\n    clusterRadius: 'クラスターの範囲[ピクセル]',\n    radiusRangePixels: '半径の範囲[ピクセル]',\n    opacity: '不透明度',\n    coverage: 'カバー率',\n    outline: '輪郭線',\n    colorRange: '色の範囲',\n    stroke: '線',\n    strokeColor: '線の色',\n    strokeColorRange: '線の色の範囲',\n    targetColor: 'Targetの色',\n    colorAggregation: '色の集計',\n    heightAggregation: '高さの集計',\n    resolutionRange: '解像度の範囲',\n    sizeScale: 'サイズのスケール',\n    worldUnitSize: 'World Unit Size',\n    elevationScale: '標高のスケール',\n    enableElevationZoomFactor: '標高ズーム係数を使用する',\n    enableElevationZoomFactorDescription: '現在のズーム率に基づいて高さ/標高を調整します',\n    enableHeightZoomFactor: '高さズーム係数を使用する',\n    heightScale: '高さのスケール',\n    coverageRange: 'カバー率の範囲',\n    highPrecisionRendering: '高精度レンダリング',\n    highPrecisionRenderingDescription: '高精度にすると速度は低下します',\n    height: '高さ',\n    heightDescription: '3Dビューに切り替えるには画面右上のボタンをクリックします',\n    fill: '塗りつぶし',\n    enablePolygonHeight: 'ポリゴンの高さを有効にする',\n    showWireframe: 'ワイヤーフレームを表示',\n    weightIntensity: '重みづけの強さ',\n    zoomScale: 'ズームのスケール',\n    heightRange: '高さの範囲',\n    fixedHeight: '固定高さ',\n    fixedHeightDescription: '高さを変更せずに使用する',\n    heightMultiplier: '高さ乗数'\n  },\n  layerManager: {\n    addData: 'データ追加',\n    addLayer: 'レイヤ追加',\n    layerBlending: 'レイヤのブレンド'\n  },\n  mapManager: {\n    mapStyle: 'マップスタイル',\n    addMapStyle: 'マップスタイル追加',\n    '3dBuildingColor': '3D建物の色',\n    backgroundColor: '背景色'\n  },\n  layerConfiguration: {\n    defaultDescription: '選択されたフィールドに基づいて{property}を計算します',\n    howTo: '使い方'\n  },\n  filterManager: {\n    addFilter: 'フィルター追加'\n  },\n  datasetTitle: {\n    showDataTable: 'データ表を表示',\n    removeDataset: 'データセットを削除'\n  },\n  datasetInfo: {\n    rowCount: '{rowCount}行'\n  },\n  tooltip: {\n    hideLayer: 'レイヤを非表示',\n    showLayer: 'レイヤを表示',\n    hideFeature: 'フィーチャーを非表示',\n    showFeature: 'フィーチャーを表示',\n    hide: '非表示にする',\n    show: '表示する',\n    removeLayer: 'レイヤを削除',\n    duplicateLayer: 'レイヤを複製',\n    layerSettings: 'レイヤ設定',\n    closePanel: 'このパネルを閉じる',\n    switchToDualView: 'デュアルビューに切り替え',\n    showLegend: '凡例を表示',\n    disable3DMap: '3D地図を無効化',\n    DrawOnMap: '地図上に図形を描画',\n    selectLocale: '言語設定',\n    hideLayerPanel: 'レイヤパネルを非表示',\n    showLayerPanel: 'レイヤパネルを表示',\n    moveToTop: 'データレイヤの手前に移動',\n    selectBaseMapStyle: 'ベースマップのスタイルを選択',\n    delete: '削除',\n    timePlayback: '時系列で再生',\n    cloudStorage: 'クラウドストレージ',\n    '3DMap': '3D地図',\n    animationByWindow: '時間枠を移動',\n    animationByIncremental: '時間枠を増加',\n    speed: '速度',\n    play: '再生',\n    pause: '一時停止',\n    reset: 'リセット'\n  },\n  toolbar: {\n    exportImage: '画像を出力',\n    exportData: 'データを出力',\n    exportMap: '地図を出力',\n    shareMapURL: '地図のURLを共有',\n    saveMap: '地図を保存',\n    select: '選択',\n    polygon: 'ポリゴン',\n    rectangle: '長方形',\n    hide: '非表示',\n    show: '表示',\n    ...LOCALES\n  },\n  modal: {\n    title: {\n      deleteDataset: 'データセットを削除',\n      addDataToMap: '地図にデータを追加',\n      exportImage: '画像を出力',\n      exportData: 'データを出力',\n      exportMap: '地図を出力',\n      addCustomMapboxStyle: 'カスタムマップスタイルを追加',\n      saveMap: '地図を保存',\n      shareURL: 'URLを共有'\n    },\n    button: {\n      delete: '削除',\n      download: 'ダウンロード',\n      export: '出力',\n      addStyle: 'スタイル追加',\n      save: '保存',\n      defaultCancel: 'キャンセル',\n      defaultConfirm: '確認'\n    },\n    exportImage: {\n      ratioTitle: '縦横比',\n      ratioDescription: '用途に適した縦横比を選択します。',\n      ratioOriginalScreen: '元のスクリーンサイズ',\n      ratioCustom: 'カスタム',\n      ratio4_3: '4:3',\n      ratio16_9: '16:9',\n      resolutionTitle: '解像度',\n      resolutionDescription: '印刷には高解像度が適しています。',\n      mapLegendTitle: '地図の凡例',\n      mapLegendAdd: '地図に判例を追加'\n    },\n    exportData: {\n      datasetTitle: 'データセット',\n      datasetSubtitle: 'エクスポートしたいデータセットを選択します',\n      allDatasets: '全て',\n      dataTypeTitle: 'データ形式',\n      dataTypeSubtitle: 'エクスポートしたいデータ形式を選択します',\n      filterDataTitle: 'データのフィルタ',\n      filterDataSubtitle:\n        '元データ（フィルタなし）とフィルタ済データのどちらをエクスポートするか選択します',\n      filteredData: 'フィルタ済データ',\n      unfilteredData: '元データ',\n      fileCount: '{fileCount}個のファイル',\n      rowCount: '{rowCount}行'\n    },\n    deleteData: {\n      warning: 'このデータセットを削除します。{length}個のレイヤに影響します。'\n    },\n    addStyle: {\n      publishTitle:\n        '2. ステップ1でMapboxのスタイルURLを指定した場合、Mapboxでスタイルを公開するか、アクセストークンを以下に入力します（オプション）',\n      publishSubtitle1: '独自のスタイルを',\n      publishSubtitle2: 'で作成し、',\n      publishSubtitle3: '公開',\n      publishSubtitle4: 'することができます',\n      publishSubtitle5: '非公開のスタイルを使用するには、自身の',\n      publishSubtitle6: 'アクセストークン',\n      publishSubtitle7:\n        'をここに入力します。*kepler.glはクライアント上で動作するため、データは自身のブラウザに保持されます。',\n      exampleToken: '例) pk.abcdefg.xxxxxx',\n      pasteTitle: '1. スタイルのURLをペースト',\n      pasteSubtitle0: 'スタイルのURLはMapboxの',\n      pasteSubtitle1: 'What is a',\n      pasteSubtitle2: 'スタイルURL',\n      pasteSubtitle3: 'を指定するか、Mapbox GLの仕様に沿ったstyle.jsonのURLを指定します：',\n      pasteSubtitle4: 'Mapbox GL スタイル仕様',\n      namingTitle: '3. スタイルの名称を設定'\n    },\n    shareMap: {\n      shareUriTitle: '地図のURLを共有',\n      shareUriSubtitle: '共有用に地図のURLを生成',\n      cloudTitle: 'クラウドストレージ',\n      cloudSubtitle: 'ログインして地図データを個人用クラウドストレージにアップロード',\n      shareDisclaimer:\n        'kepler.glは作成した地図をあなたのクラウドストレージに保存するため、そのURLを知っている人のみが地図やそのデータにアクセス可能です。' +\n        'クラウドストレージのアカウントでいつでもデータファイルを編集/削除することができます。',\n      gotoPage: 'Kepler.glの{currentProvider}ページに移動'\n    },\n    statusPanel: {\n      mapUploading: '地図をアップロード中',\n      error: 'エラー'\n    },\n    saveMap: {\n      title: 'クラウドストレージ',\n      subtitle: '地図を個人用クラウドストレージに保存するためにログインする'\n    },\n    exportMap: {\n      formatTitle: '地図の形式',\n      formatSubtitle: '地図の出力形式を選択します',\n      html: {\n        selection: '地図をインタラクティブなHTMLファイルとして出力します。',\n        tokenTitle: 'Mapboxアクセストークン',\n        tokenSubtitle: 'HTMLファイルで自分のMapboxアクセストークンを使用します (オプション)',\n        tokenPlaceholder: '自分のMapboxアクセストークンをここに貼り付け',\n        tokenMisuseWarning:\n          '* 自分のトークンを使用しない場合は、デフォルトのトークンが悪用防止のために更新され、地図が表示されなくなる可能性があります。  ',\n        tokenDisclaimer: 'Mapboxのトークンは下記の方法に従って後から変更することも可能です：',\n        tokenUpdate: '既存の地図のトークンを更新する方法',\n        modeTitle: '地図のモード',\n        modeSubtitle1: '地図のモードを選択します。詳細は',\n        modeSubtitle2: 'こちら',\n        modeDescription: 'ユーザーに地図の{mode}を許可',\n        read: '閲覧',\n        edit: '編集'\n      },\n      json: {\n        configTitle: '地図の設定',\n        configDisclaimer:\n          '地図の設定はjsonファイルに収められます。他のアプリケーションでkepler.glを使用する場合、この設定をコピーペーストすることが可能です：',\n        selection:\n          '現在の地図データと設定を単一のjsonファイルに出力します。このファイルをkepler.glにアップロードすることで、同じ地図を後から開くことが可能になります。',\n        disclaimer:\n          '* 地図の設定は読み込まれたデータセットとセットになっています。‘dataId’によってレイヤ、フィルター、ツールチップは特定のデータセットに紐づけられます。 ' +\n          'この設定をaddDataToMapに渡す際は、データセットIDがこの設定内のdataIdと一致するようにしてください。'\n      }\n    },\n    loadingDialog: {\n      loading: 'ロード中...'\n    },\n    loadData: {\n      upload: 'ファイルをロード',\n      storage: 'ストレージからロード'\n    },\n    tripInfo: {\n      title: '移動アニメーションを有効にする方法',\n      description1:\n        '経路をアニメーション化するには、geoJSONデータはfeatureのgeometryとして `LineString` を含む必要があります。また、LineStringの座標は4つの要素を',\n      code: ' [経度, 緯度, 標高, timestamp] ',\n      description2:\n        'という形式（最後にタイムスタンプを含む）で保持する必要があります。タイムスタンプの形式は、 UNIX時間の秒単位（例: `1564184363`）またはミリ秒単位（例: `1564184363000`）が有効です。',\n      example: '例：'\n    },\n    iconInfo: {\n      title: 'アイコンの描画方法',\n      description1:\n        'CSVファイルに列を作成し、描画したいアイコンの名称を記載します。アイコンの描画が不要な点があれば、セルを空白にすることも可能です。列名が',\n      code: 'icon',\n      description2: 'の場合、kepler.glは自動的にアイコンレイヤを作成します。',\n      example: '例:',\n      icons: 'アイコン一覧'\n    },\n    storageMapViewer: {\n      lastModified: '最終編集：{lastUpdated} 前',\n      back: '戻る'\n    },\n    overwriteMap: {\n      title: '地図を保存中...',\n      alreadyExists: '既に{mapSaved}に存在します。上書きしますか？'\n    },\n    loadStorageMap: {\n      back: '戻る',\n      goToPage: 'Kepler.glの{displayName}ページに移動',\n      storageMaps: 'ストレージ / 地図',\n      noSavedMaps: '保存済の地図はまだありません'\n    }\n  },\n  header: {\n    visibleLayers: '表示中のレイヤ',\n    layerLegend: 'レイヤ判例'\n  },\n  interactions: {\n    tooltip: 'ツールチップ',\n    brush: 'ブラシ',\n    coordinate: '座標',\n    geocoder: 'ジオコーダー'\n  },\n  layerBlending: {\n    title: 'レイヤのブレンド',\n    additive: 'additive',\n    normal: 'normal',\n    subtractive: 'subtractive'\n  },\n  columns: {\n    title: '列',\n    lat: '緯度',\n    lng: '経度',\n    altitude: '標高',\n    icon: 'アイコン',\n    geojson: 'geojson',\n    token: 'トークン',\n    arc: {\n      lat0: '出発 緯度',\n      lng0: '出発 経度',\n      lat1: '到着 緯度',\n      lng1: '到着 経度'\n    },\n    grid: {\n      worldUnitSize: 'グリッドサイズ (km)'\n    },\n    hexagon: {\n      worldUnitSize: '六角形の半径 (km)'\n    },\n    hex_id: 'hex id'\n  },\n  color: {\n    customPalette: 'カスタムパレット',\n    steps: '段階数',\n    type: 'タイプ',\n    reversed: '反転'\n  },\n  scale: {\n    colorScale: 'カラースケール',\n    sizeScale: 'サイズのスケール',\n    strokeScale: '線のスケール',\n    scale: 'スケール'\n  },\n  fileUploader: {\n    message: 'ここにファイルをドロップ（複数可）',\n    chromeMessage:\n      '*Chromeユーザーの場合: ファイルサイズは250mbまでにしてください。それ以上のファイルをアップロードする必要がある場合、Safariを試してください。',\n    disclaimer:\n      '*kepler.glはクライアント上で動作します。データは自身の機器・ブラウザにのみ保持されます。' +\n      '情報や地図データは、いかなるサーバーにも送信されません。',\n    configUploadMessage:\n      '{fileFormatNames} または保存済地図の**Json**をアップロードします。詳細は以下を参照してください：[**対応ファイル形式**]',\n    browseFiles: 'デバイスのファイルを選択',\n    uploading: 'アップロード中',\n    fileNotSupported: '{errorFiles} はサポートされていないファイルです。',\n    or: 'or'\n  },\n  geocoder: {\n    title: '住所または座標を入力（例： 37.79,-122.40）'\n  },\n  fieldSelector: {\n    clearAll: '全て解除',\n    formatting: '値の形式'\n  },\n  compare: {\n    modeLabel: '比較モード',\n    typeLabel: '比較方式',\n    types: {\n      absolute: '絶対',\n      relative: '相対'\n    }\n  },\n  mapPopover: {\n    primary: 'プライマリ'\n  },\n  density: 'density',\n  'Bug Report': 'バグを報告',\n  'User Guide': 'ユーザーガイド',\n  Save: '保存',\n  Share: '共有'\n};\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {LOCALES} from '../locales';\n\nexport default {\n  property: {\n    weight: 'вес',\n    label: 'ярлык',\n    fillColor: 'цвет заливки',\n    color: 'цвет',\n    coverage: 'покрытие',\n    strokeColor: 'цвет обводки',\n    radius: 'радиус',\n    outline: 'контур',\n    stroke: 'обводка',\n    density: 'плотность',\n    height: 'высота',\n    sum: 'сумма',\n    pointCount: 'Кол-во точек'\n  },\n  placeholder: {\n    search: 'Поиск',\n    selectField: 'Выберите поле',\n    yAxis: 'Y Ось',\n    selectType: 'Выберите A тип',\n    selectValue: 'Выберите A значение',\n    enterValue: 'Введите значение',\n    empty: 'пустой'\n  },\n  misc: {\n    by: '',\n    valuesIn: 'Значение в',\n    valueEquals: 'Значение равно',\n    dataSource: 'Источник данных',\n    brushRadius: 'Радиус кисти (km)',\n    empty: ' '\n  },\n  mapLayers: {\n    title: 'Слои карты',\n    label: 'Обозначения',\n    road: 'Дороги',\n    border: 'Границы',\n    building: 'Здания',\n    water: 'Вода',\n    land: 'Земля',\n    '3dBuilding': '3d здания'\n  },\n  panel: {\n    text: {\n      label: 'Ярлык',\n      labelWithId: 'Ярлык {labelId}',\n      fontSize: 'Размер шрифта',\n      fontColor: 'Цвет шрифта',\n      textAnchor: 'Анкор текста',\n      alignment: 'Положение',\n      addMoreLabel: 'Добавить еще ярлык'\n    }\n  },\n  sidebar: {\n    panels: {\n      layer: 'Слои',\n      filter: 'Фильтры',\n      interaction: 'Взаимодействия',\n      basemap: 'Базовая карта'\n    }\n  },\n  layer: {\n    required: 'Требования*',\n    radius: 'Радиус',\n    color: 'Цвет',\n    fillColor: 'Цвет заливки',\n    outline: 'Контур',\n    weight: 'Вес',\n    propertyBasedOn: '{property} на основе',\n    coverage: 'Покрытие',\n    stroke: 'Обводка',\n    strokeWidth: 'Ширина обводки',\n    strokeColor: 'Цвет обводки',\n    basic: 'Basic',\n    trailLength: 'Trail Length',\n    trailLengthDescription: 'Number of seconds for a path to completely fade out',\n    newLayer: 'new layer',\n    elevationByDescription: 'When off, height is based on count of points',\n    colorByDescription: 'When off, color is based on count of points',\n    aggregateBy: 'Aggregate {field} by',\n    '3DModel': '3D Model',\n    '3DModelOptions': '3D Model Options',\n    type: {\n      point: 'точки',\n      arc: 'дуги',\n      line: 'линии',\n      grid: 'сетка',\n      hexbin: 'hexbin',\n      polygon: 'многоугольники',\n      geojson: 'geojson',\n      cluster: 'кластеры',\n      icon: 'значки',\n      heatmap: 'тепловая карта',\n      hexagon: 'шестиугольник',\n      hexagonid: 'H3',\n      trip: 'пути',\n      s2: 'S2',\n      '3d': '3D'\n    }\n  },\n  layerVisConfigs: {\n    angle: 'Угол',\n    strokeWidth: 'Ширина штриха (в пикселях)',\n    strokeWidthRange: 'Диапазон ширины штриха',\n    radius: 'Радиус',\n    fixedRadius: 'Фиксированный радиус в метрах',\n    fixedRadiusDescription:\n      'Сопоставьте радиус с абсолютным радиусом в метрах, например От 5 до 5 метров',\n    radiusRange: 'Диапазон радиуса',\n    clusterRadius: 'Радиус кластера в пикселях',\n    radiusRangePixels: 'Диапазон радиуса в пикселях',\n    opacity: 'Непрозрачность',\n    coverage: 'Покрытие',\n    outline: 'Контур',\n    colorRange: 'Цветовая гамма',\n    stroke: 'Обводка',\n    strokeColor: 'Цвет обводки',\n    strokeColorRange: 'Обводка Цветовой диапазон',\n    targetColor: 'Целевой цвет',\n    colorAggregation: 'Цветовая агрегация',\n    heightAggregation: 'Агрегация по высоте',\n    resolutionRange: 'Диапазон разрешения',\n    sizeScale: 'Шкала размеров',\n    worldUnitSize: 'Мировые ед.изм.',\n    elevationScale: 'Шкала возвышения',\n    enableElevationZoomFactor: 'Использовать коэффициент увеличения по высоте',\n    enableElevationZoomFactorDescription:\n      'Отрегулируйте высоту / возвышение на основе текущего коэффициента масштабирования',\n    enableHeightZoomFactor: 'вкл. коэффициент масштабирования по высоте',\n    heightScale: 'Масштаб высоты',\n    coverageRange: 'Диапазон покрытия',\n    highPrecisionRendering: 'Высокая точность рендеринга',\n    highPrecisionRenderingDescription: 'Высокая точность приведет к снижению производительности',\n    height: 'Высота',\n    heightDescription: 'Нажмите кнопку в правом верхнем углу карты, чтобы переключиться в 3D-вид',\n    fill: 'Наполнить',\n    enablePolygonHeight: 'Включить высоту многоугольника',\n    showWireframe: 'Показать каркас',\n    weightIntensity: 'Вес Интенсивность',\n    zoomScale: 'Масштаб увеличения',\n    heightRange: 'Диапазон высоты',\n    heightMultiplier: 'Множитель высоты'\n  },\n  layerManager: {\n    addData: 'Добавить данные',\n    addLayer: 'Добавить слой',\n    layerBlending: 'Смешивание слоев'\n  },\n  mapManager: {\n    mapStyle: 'Стиль карты',\n    addMapStyle: 'Добавить стиль карты',\n    '3dBuildingColor': '3D Цвет здания'\n  },\n  layerConfiguration: {\n    defaultDescription: 'Рассчитать {property} на основе выбранного поля',\n    howTo: 'How to'\n  },\n  filterManager: {\n    addFilter: 'Добавить фильтр'\n  },\n  datasetTitle: {\n    showDataTable: 'Показать таблицу данных ',\n    removeDataset: 'Удалить набор данных'\n  },\n  datasetInfo: {\n    rowCount: '{rowCount} строк'\n  },\n  tooltip: {\n    hideLayer: 'скрыть слой',\n    showLayer: 'показать слой',\n    hideFeature: 'Скрыть функцию',\n    showFeature: 'Показать функцию',\n    hide: 'скрыть',\n    show: 'показать',\n    removeLayer: 'Удалить слой',\n    duplicateLayer: 'Дублировать слой',\n    layerSettings: 'Настройки слоя',\n    closePanel: 'Закрыть текущую панель',\n    switchToDualView: 'Перейти в режим двойной карты',\n    showLegend: 'Показать легенду',\n    disable3DMap: 'Отключить 3D Карту',\n    DrawOnMap: 'Рисовать на карте',\n    selectLocale: 'Выберите регион',\n    hideLayerPanel: 'Скрыть панель слоев',\n    showLayerPanel: 'Показать панель слоев',\n    moveToTop: 'Перейти к верхним слоям данных',\n    selectBaseMapStyle: 'Выберите стиль базовой карты',\n    delete: 'Удалить',\n    timePlayback: 'Воспроизведение времени',\n    cloudStorage: 'Облачное хранилище',\n    '3DMap': '3D Карта',\n    animationByWindow: 'Перемещение временного окна',\n    animationByIncremental: 'Дополнительное временное окно',\n    speed: 'скорость',\n    play: 'проиграть',\n    pause: 'пауза',\n    reset: 'перезапустить'\n  },\n  toolbar: {\n    exportImage: 'Экспорт изображения',\n    exportData: 'Экспорт данных',\n    exportMap: 'Экспорт карты',\n    shareMapURL: 'Share Map URL',\n    saveMap: 'Сохарнить Карту',\n    select: 'Выбрать',\n    polygon: 'Многоугольник',\n    rectangle: 'Квадрат',\n    hide: 'Скрыть',\n    show: 'Показать',\n    ...LOCALES\n  },\n  editor: {\n    filterLayer: 'Слои фильтров',\n    copyGeometry: 'Копировать геометрию'\n  },\n\n  modal: {\n    title: {\n      deleteDataset: 'Удалить данные',\n      addDataToMap: 'Добавить данные на карту',\n      exportImage: 'Экспорт изображения',\n      exportData: 'Экспорт данных',\n      exportMap: 'Экспорт карты',\n      addCustomMapboxStyle: 'Добавить собственный стиль карты',\n      saveMap: 'Поделиться Картой',\n      shareURL: 'Поделиться URL'\n    },\n    button: {\n      delete: 'Удалить',\n      download: 'Скачать',\n      export: 'Экспортировать',\n      addStyle: 'Добавить стиль',\n      save: 'Сохранить',\n      defaultCancel: 'Отменить',\n      defaultConfirm: 'Подтвердить'\n    },\n    exportImage: {\n      ratioTitle: 'Ratio',\n      ratioDescription: 'Выберите соотношение для различного использования',\n      ratioOriginalScreen: 'Исходный экран',\n      ratioCustom: 'Настройки',\n      ratio4_3: '4:3',\n      ratio16_9: '16:9',\n      resolutionTitle: 'Разрешение',\n      resolutionDescription: 'Для печати лучше использовать высокое разрешение',\n      mapLegendTitle: 'Легенда карты',\n      mapLegendAdd: 'Добавить легенду на карту'\n    },\n    exportData: {\n      datasetTitle: 'Набор данных',\n      datasetSubtitle: 'Выберите наборы данных, которые хотите экспортировать',\n      allDatasets: 'Все',\n      dataTypeTitle: 'Тип данных',\n      dataTypeSubtitle: 'Выберите тип данных, которые вы хотите экспортировать',\n      filterDataTitle: 'Отфильтрованные данные',\n      filterDataSubtitle: 'Вы можете выбрать экспорт исходных данных или отфильтрованных данных',\n      filteredData: 'Отфильтрованные данные',\n      unfilteredData: 'Нефильтрованные данные',\n      fileCount: '{fileCount} Файлов',\n      rowCount: '{rowCount} Строк'\n    },\n    deleteData: {\n      warning: 'вы собираетесь удалить этот набор данных. Это повлияет на {length} слой'\n    },\n    addStyle: {\n      publishTitle:\n        '2. Если вы указали URL-адрес файла mapbox на шаге 1, опубликуйте свой стиль на mapbox или предоставьте токен доступа. (Необязательно)',\n      publishSubtitle1: 'Вы можете создать свой собственный стиль карты',\n      publishSubtitle2: 'и',\n      publishSubtitle3: 'опубликовать',\n      publishSubtitle4: 'его.',\n      publishSubtitle5: 'Чтобы использовать частный стиль, вставьте свой',\n      publishSubtitle6: 'token доступа',\n      publishSubtitle7:\n        'прим. kepler.gl - это клиентское приложение, данные остаются в вашем браузере .',\n      exampleToken: 'например pk.abcdefg.xxxxxx',\n      pasteTitle: '1. Вставить URL стиля',\n      pasteSubtitle0: 'URL стиля может быть mapbox',\n      pasteSubtitle1: 'Или',\n      pasteSubtitle2: 'URL стиля',\n      pasteSubtitle3: 'style.json используя',\n      pasteSubtitle4: 'Mapbox GL Style Spec',\n      namingTitle: '3. Назови свой стиль'\n    },\n    shareMap: {\n      shareUriTitle: 'Поделиться URL карты',\n      shareUriSubtitle: 'Создать URL карты, чтобы поделиться с другими',\n      cloudTitle: 'Облачное хранилище',\n      cloudSubtitle: 'Войдите и загрузите данные карты в свое личное облачное хранилище',\n      shareDisclaimer:\n        'kepler.gl сохранит данные вашей карты в вашем личном облачном хранилище, только люди с URL-адресом могут получить доступ к вашей карте и данным. ' +\n        'Вы можете редактировать / удалить файл данных в своей облачной учетной записи в любое время.',\n      gotoPage: 'Перейти на страницу Kepler.gl {currentProvider}'\n    },\n    statusPanel: {\n      mapUploading: 'Загрузка карты',\n      error: 'Ошибка'\n    },\n    saveMap: {\n      title: 'Облачное хранилище',\n      subtitle: 'Авторизуйтесь, чтобы сохранить карту в вашем личном облачном хранилище'\n    },\n    exportMap: {\n      formatTitle: 'Формат карты',\n      formatSubtitle: 'Выберите формат для экспорта карты',\n      html: {\n        selection: 'Экспорт карты в интерактивный файл HTML.',\n        tokenTitle: 'Токен доступа к Mapbox',\n        tokenSubtitle: 'Используйте свой токен доступа Mapbox в html(необязательно)',\n        tokenPlaceholder: 'Вставьте токен доступа Mapbox',\n        tokenMisuseWarning:\n          '* If you do not provide your own token, the map may fail to display at any time when we replace ours to avoid misuse. ',\n        tokenDisclaimer:\n          'Если вы не предоставите свой собственный токен, карта может не отображаться в любое время, когда мы заменяем наш, чтобы избежать неправильного использования.',\n        tokenUpdate: 'Как обновить существующий токен карты.',\n        modeTitle: 'Режим карты',\n        modeSubtitle1: 'Выберите режим приложения. Подробнее',\n        modeSubtitle2: 'Информация',\n        modeDescription: 'Разрешить пользователям {mode} карту',\n        read: 'чтение',\n        edit: 'редактирование'\n      },\n      json: {\n        configTitle: 'Конфигурация карты',\n        configDisclaimer:\n          'Конфигурация карты будет включена в файл Json. Если вы используете kepler.gl в своем собственном приложении. Вы можете скопировать этот конфиг и передать его ',\n        selection:\n          'Экспорт текущих данных карты и конфигурации в один файл Json. Позже вы сможете открыть ту же карту, загрузив этот файл на kepler.gl.',\n        disclaimer:\n          '* Конфигурация карты связана с загруженными наборами данных. DataId используется для привязки слоев, фильтров и всплывающих подсказок к определенному набору данных. ' +\n          'При передаче этой конфигурации addDataToMap, убедитесь, что идентификатор набора данных совпадает с dataId / s в этой конфигурации.'\n      }\n    },\n    loadingDialog: {\n      loading: 'Загрузка...'\n    },\n    loadData: {\n      upload: 'Загрузить файлы',\n      storage: 'Загрузить из хранилища'\n    },\n    tripInfo: {\n      title: 'Как включить анимацию поездки',\n      description1:\n        'Чтобы анимировать путь, данные geoJSON должны содержать LineString в своей геометрии объекта, а координаты в LineString должны иметь 4 элемента в форматах',\n      code: ' [longitude, latitude, altitude, timestamp] ',\n      description2:\n        'с последним элементом, являющимся отметкой времени. Допустимые форматы меток времени включают unix в секундах, например 1564184363, или в миллисекундах, например 1564184363000',\n      example: ',Пример:'\n    },\n    iconInfo: {\n      title: 'Как рисовать значки',\n      description1:\n        'В вашем csv создайте столбец, поместите в него имя значка, который вы хотите нарисовать. Вы можете оставить ячейку пустой, если не хотите, чтобы значок отображался для некоторых точек. Когда столбец назван',\n      code: 'значек',\n      description2: ' kepler.gl автоматически создаст для вас слой значков.',\n      example: 'Пример:',\n      icons: 'Значки'\n    },\n    storageMapViewer: {\n      lastModified: 'Последнее изменение {lastUpdated} назад',\n      back: 'Назад'\n    },\n    overwriteMap: {\n      title: 'Сохранение карты...',\n      alreadyExists: 'уже существует в вашем {mapSaved}. Хотите его перезаписать?'\n    },\n    loadStorageMap: {\n      back: 'Назад',\n      goToPage: 'Перейти на страницу Kepler.gl {displayName}',\n      storageMaps: 'Хранилище / Карты',\n      noSavedMaps: 'Нет сохраненных карт'\n    }\n  },\n  header: {\n    visibleLayers: 'Видимые слои',\n    layerLegend: 'Легенда слоя'\n  },\n  interactions: {\n    tooltip: 'Подсказка',\n    brush: 'Кисть',\n    coordinate: 'Координаты',\n    geocoder: 'Геокодер'\n  },\n  layerBlending: {\n    title: 'Смешивание слоев',\n    additive: 'добавление',\n    normal: 'нормальное',\n    subtractive: 'вычитание'\n  },\n  columns: {\n    title: 'Столбцы',\n    lat: 'lat',\n    lng: 'lon',\n    altitude: 'высота',\n    icon: 'значек',\n    geojson: 'geojson',\n    token: 'token',\n    arc: {\n      lat0: 'lat источника',\n      lng0: 'lng источника',\n      lat1: 'lat цели',\n      lng1: 'lng цели'\n    },\n    line: {\n      alt0: 'высота источника',\n      alt1: 'высота цели'\n    },\n    grid: {\n      worldUnitSize: 'Размер сетки (km)'\n    },\n    hexagon: {\n      worldUnitSize: 'Hexagon радиус (km)'\n    },\n    hex_id: 'hex id'\n  },\n  color: {\n    customPalette: 'Ваша палитра',\n    steps: 'шагов',\n    type: 'тип',\n    reversed: 'перевернуть'\n  },\n  scale: {\n    colorScale: 'Цветовая шкала',\n    sizeScale: 'Масштаб размера',\n    strokeScale: 'Масштаб штриха',\n    scale: 'Масштаб'\n  },\n  fileUploader: {\n    message: 'Перетащите сюда ваши файлы',\n    chromeMessage:\n      '*Пользователь Chrome: ограничьте размер файла до 250 МБ, если нужно загрузить файл большего размера, попробуйте Safari',\n    disclaimer:\n      '*kepler.gl - это клиентское приложение без серверной части. Данные живут только на вашем компьютере. ' +\n      'Никакая информация или данные карты не отправляются ни на один сервер.',\n    configUploadMessage:\n      'Загрузите {fileFormatNames} или сохраненную карту **Json**. Подробнее [**supported file formats**]',\n    browseFiles: 'Просматреть файлы',\n    uploading: 'Загрузка',\n    fileNotSupported: 'File {errorFiles} is not supported.',\n    or: 'or'\n  },\n  geocoder: {\n    title: 'Введите адрес или координаты, например 37.79, -122.40'\n  },\n  fieldSelector: {\n    clearAll: 'Очистить все',\n    formatting: 'Форматирование'\n  },\n  compare: {\n    modeLabel: 'Режим сравнения',\n    typeLabel: 'Тип сравнения',\n    types: {\n      absolute: 'Абсолютный',\n      relative: 'Относительный'\n    }\n  },\n  mapPopover: {\n    primary: 'Первичный'\n  },\n  density: 'density',\n  'Bug Report': 'Отчет об ошибках',\n  'User Guide': 'Инструкции',\n  Save: 'Сохранить',\n  Share: 'Поделиться'\n};\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport en from './translations/en';\nimport fi from './translations/fi';\nimport pt from './translations/pt';\nimport es from './translations/es';\nimport ca from './translations/ca';\nimport cn from './translations/cn';\nimport ja from './translations/ja';\nimport ru from './translations/ru';\n\n// Flat messages since react-intl does not seem to support nested structures\n// Adapted from https://medium.com/siren-apparel-press/internationalization-and-localization-of-sirenapparel-eu-sirenapparel-us-and-sirenapparel-asia-ddee266066a2\nexport const flattenMessages = (\n  nestedMessages,\n  prefix = ''\n): {\n  [key: string]: string;\n} => {\n  return Object.keys(nestedMessages).reduce((messages, key) => {\n    const value = nestedMessages[key];\n    const prefixedKey = prefix ? `${prefix}.${key}` : key;\n    if (typeof value === 'string') {\n      messages[prefixedKey] = value;\n    } else {\n      Object.assign(messages, flattenMessages(value, prefixedKey));\n    }\n    return messages;\n  }, {});\n};\n\nconst enFlat = flattenMessages(en);\n\nexport const messages: {\n  [key: string]: {\n    [key: string]: string;\n  };\n} = {};\n\nmessages.en = enFlat;\nmessages.fi = {...enFlat, ...flattenMessages(fi)};\nmessages.pt = {...enFlat, ...flattenMessages(pt)};\nmessages.es = {...enFlat, ...flattenMessages(es)};\nmessages.ca = {...enFlat, ...flattenMessages(ca)};\nmessages.cn = {...enFlat, ...flattenMessages(cn)};\nmessages.ja = {...enFlat, ...flattenMessages(ja)};\nmessages.ru = {...enFlat, ...flattenMessages(ru)};\n\nexport default messages;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\ntype EnhancedFormattedMessageProps = {\n  id: string;\n  defaultMessage?: string;\n  defaultValue?: string;\n  values?: {\n    [key: string]: string | number | null;\n  };\n  children?: () => React.ReactElement;\n};\n\nconst EnhancedFormattedMessage: React.FC<EnhancedFormattedMessageProps> = props => (\n  <FormattedMessage\n    // Us id as default Message to prevent error being thrown\n    defaultMessage={props.defaultMessage || props.id}\n    {...props}\n  />\n);\n\nexport default EnhancedFormattedMessage;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {PropsWithChildren} from 'react';\nimport styled from 'styled-components';\nimport classnames from 'classnames';\n\nconst StyledPanelTitle = styled.div.attrs(props => ({\n  className: classnames('panel-title', props.className)\n}))`\n  color: ${props => props.theme.titleTextColor};\n  font-size: ${props => props.theme.sidePanelTitleFontsize};\n  line-height: ${props => props.theme.sidePanelTitleLineHeight};\n  font-weight: 400;\n  letter-spacing: 1.25px;\n`;\n\nconst PanelHeaderRow = styled.div.attrs({\n  className: 'layer-manager-header'\n})`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 16px;\n  margin-bottom: 32px;\n`;\n\nexport type PanelTitleProps = PropsWithChildren<{\n  title: string;\n  className?: string;\n}>;\n\nconst PanelTitleFactory = () => {\n  const PanelTitle: React.FC<PanelTitleProps> = ({title, className, children}) => (\n    <PanelHeaderRow>\n      <StyledPanelTitle className={className || 'panel-title'}>{title}</StyledPanelTitle>\n      {children}\n    </PanelHeaderRow>\n  );\n\n  return PanelTitle;\n};\n\nexport default PanelTitleFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {Feature, BBox} from 'geojson';\nimport normalize from '@mapbox/geojson-normalize';\nimport bbox from '@turf/bbox';\nimport center from '@turf/center';\nimport {AllGeoJSON} from '@turf/helpers'\nimport {parseSync} from '@loaders.gl/core';\nimport {WKBLoader, WKTLoader} from '@loaders.gl/wkt';\nimport {binaryToGeometry} from '@loaders.gl/gis';\nimport {BinaryFeatureCollection} from '@loaders.gl/schema';\nimport {DataContainerInterface, getSampleData} from '@kepler.gl/utils';\n\nimport {GeojsonLayerMetaProps} from '../layer-utils';\n\nexport type GetFeature = (d: any) => Feature;\nexport type GeojsonDataMaps = Array<Feature | BinaryFeatureCollection | null>;\n\n/* eslint-disable */\n// TODO: Re-enable eslint when we upgrade to handle enums and type maps\nexport enum FeatureTypes {\n  Point = 'Point',\n  MultiPoint = 'MultiPoint',\n  LineString = 'LineString',\n  MultiLineString = 'MultiLineString',\n  Polygon = 'Polygon',\n  MultiPolygon = 'MultiPolygon'\n}\n\n/* eslint-enable */\n\nexport function parseGeoJsonRawFeature(rawFeature: unknown): Feature | null {\n  if (typeof rawFeature === 'object') {\n    // Support GeoJson feature as object\n    // probably need to normalize it as well\n    const normalized = normalize(rawFeature);\n    if (!normalized || !Array.isArray(normalized.features)) {\n      // fail to normalize GeoJson\n      return null;\n    }\n\n    return normalized.features[0];\n  } else if (typeof rawFeature === 'string') {\n    return parseGeometryFromString(rawFeature);\n  } else if (Array.isArray(rawFeature)) {\n    // Support GeoJson  LineString as an array of points\n    return {\n      type: 'Feature',\n      geometry: {\n        // why do we need to flip it...\n        coordinates: rawFeature.map(pts => [pts[1], pts[0]]),\n        type: 'LineString'\n      },\n      properties: {}\n    };\n  }\n\n  return null;\n}\n\nexport function getGeojsonLayerMeta({\n  dataContainer,\n  getFeature\n}: {\n  dataContainer: DataContainerInterface;\n  getFeature: GetFeature;\n}): GeojsonLayerMetaProps {\n  const dataToFeature = getGeojsonDataMaps(dataContainer, getFeature);\n  // get bounds from features\n  const bounds = getGeojsonBounds(dataToFeature);\n  // if any of the feature has properties.radius set to be true\n  const fixedRadius = Boolean(dataToFeature.find(d => d && 'properties' in d && d.properties?.radius));\n\n  // keep a record of what type of geometry the collection has\n  const featureTypes = getGeojsonFeatureTypes(dataToFeature);\n\n  const meanCenters: Array<number[] | null> = [];\n  for (let i = 0; i < dataToFeature.length; i++) {\n    const feature = dataToFeature[i];\n    if (feature) {\n      try {\n        // TODO: use line interpolate to get center of line for LineString\n        const cent = center(feature as AllGeoJSON);\n        meanCenters.push(cent.geometry.coordinates);\n      } catch (e) {\n        meanCenters.push(null);\n      }\n    }\n  }\n\n  return {\n    dataToFeature,\n    bounds,\n    fixedRadius,\n    featureTypes,\n    centroids: meanCenters\n  };\n}\n\n/**\n * Parse raw data to GeoJson feature\n * @param dataContainer\n * @param getFeature\n * @returns {{}}\n */\nexport function getGeojsonDataMaps(dataContainer: any, getFeature: GetFeature): GeojsonDataMaps {\n  const acceptableTypes = [\n    'Point',\n    'MultiPoint',\n    'LineString',\n    'MultiLineString',\n    'Polygon',\n    'MultiPolygon',\n    'GeometryCollection'\n  ];\n\n  const dataToFeature: GeojsonDataMaps = [];\n\n  for (let index = 0; index < dataContainer.numRows(); index++) {\n    const feature = parseGeoJsonRawFeature(getFeature({index}));\n\n    if (feature && feature.geometry && acceptableTypes.includes(feature.geometry.type)) {\n      const cleaned = {\n        ...feature,\n        // store index of the data in feature properties\n        properties: {\n          ...feature.properties,\n          index\n        }\n      };\n\n      dataToFeature[index] = cleaned;\n    } else {\n      dataToFeature[index] = null;\n    }\n  }\n\n  return dataToFeature;\n}\n\n/**\n * Parse geojson from string\n * @param {String} geoString\n * @returns {null | Object} geojson object or null if failed\n */\nexport function parseGeometryFromString(geoString: string): Feature | null {\n  let parsedGeo;\n\n  // try parse as geojson string\n  // {\"type\":\"Polygon\",\"coordinates\":[[[-74.158491,40.83594]]]}\n  try {\n    parsedGeo = JSON.parse(geoString);\n  } catch (e) {\n    // keep trying to parse\n  }\n\n  // try parse as wkt using loaders.gl WKTLoader\n  if (!parsedGeo) {\n    try {\n      parsedGeo = parseSync(geoString, WKTLoader);\n    } catch (e) {\n      return null;\n    }\n  }\n\n  // try parse as wkb using loaders.gl WKBLoader\n  if (!parsedGeo) {\n    try {\n      const buffer = Buffer.from(geoString, 'hex');\n      const binaryGeo = parseSync(buffer, WKBLoader);\n      // @ts-expect-error\n      parsedGeo = binaryToGeometry(binaryGeo);\n    } catch (e) {\n      return null;\n    }\n  }\n\n  if (!parsedGeo) {\n    return null;\n  }\n\n  const normalized = normalize(parsedGeo);\n\n  if (!normalized || !Array.isArray(normalized.features)) {\n    // fail to normalize geojson\n    return null;\n  }\n\n  return normalized.features[0];\n}\n\nexport function getGeojsonBounds(features: GeojsonDataMaps = []): BBox | null {\n  // 70 ms for 10,000 polygons\n  // here we only pick couple\n  const maxCount = 10000;\n  const samples = features.length > maxCount ? getSampleData(features, maxCount) : features;\n\n  const nonEmpty = samples.filter(\n    d => d && d.geometry && d.geometry.coordinates && d.geometry.coordinates.length\n  );\n\n  try {\n    return bbox({\n      type: 'FeatureCollection',\n      features: nonEmpty\n    });\n  } catch (e) {\n    return null;\n  }\n}\n\nexport const featureToDeckGlGeoType = {\n  Point: 'point',\n  MultiPoint: 'point',\n  LineString: 'line',\n  MultiLineString: 'line',\n  Polygon: 'polygon',\n  MultiPolygon: 'polygon'\n};\n\nexport type DeckGlGeoTypes = {\n  point: boolean;\n  line: boolean;\n  polygon: boolean;\n};\n\n/**\n * Parse geojson from string\n * @param {Array<Object>} allFeatures\n * @returns {Object} mapping of feature type existence\n */\nexport function getGeojsonFeatureTypes(allFeatures: GeojsonDataMaps): DeckGlGeoTypes {\n  // @ts-expect-error some test cases only have 1 geotype\n  const featureTypes: DeckGlGeoTypes = {};\n  for (let f = 0; f < allFeatures.length; f++) {\n    const feature = allFeatures[f];\n    if (feature && 'geometry' in feature) {\n      const geoType = featureToDeckGlGeoType[feature.geometry && feature.geometry.type];\n      if (geoType) {\n        featureTypes[geoType] = true;\n      }\n    }\n  }\n\n  return featureTypes;\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useCallback} from 'react';\n\nimport {ColorRange} from '@kepler.gl/constants';\nimport {Layer} from '@kepler.gl/layers';\nimport {NestedPartial, RGBColor, ColorUI} from '@kepler.gl/types';\n\nimport ColorSelectorFactory from './color-selector';\nimport {SidePanelSection} from '../../common/styled-components';\n\ntype LayerColorSelectorProps = {\n  layer: Layer;\n  onChange: (v: Record<string, RGBColor>) => void;\n  selectedColor?: RGBColor;\n  property?: string;\n  setColorUI: (prop: string, newConfig: NestedPartial<ColorUI>) => void;\n};\n\ntype ArcLayerColorSelectorProps = {\n  layer: Layer;\n  onChangeConfig: (v: {color: RGBColor}) => void;\n  onChangeVisConfig: (v: {targetColor: RGBColor}) => void;\n  property?: string;\n  setColorUI: (prop: string, newConfig: NestedPartial<ColorUI>) => void;\n};\n\ntype LayerColorRangeSelectorProps = {\n  layer: Layer;\n  onChange: (v: Record<string, ColorRange>) => void;\n  property?: string;\n  setColorUI: (prop: string, newConfig: NestedPartial<ColorUI>) => void;\n};\n\nLayerColorSelectorFactory.deps = [ColorSelectorFactory];\nexport function LayerColorSelectorFactory(ColorSelector) {\n  const LayerColorSelector = ({\n    layer,\n    onChange,\n    selectedColor,\n    property = 'color',\n    setColorUI\n  }: LayerColorSelectorProps) => {\n    const onSetColorUI = useCallback(newConfig => setColorUI(property, newConfig), [\n      setColorUI,\n      property\n    ]);\n\n    return (\n      <SidePanelSection>\n        <ColorSelector\n          colorSets={[\n            {\n              selectedColor: selectedColor || layer.config.color,\n              setColor: (rgbValue: RGBColor) => onChange({[property]: rgbValue})\n            }\n          ]}\n          colorUI={layer.config.colorUI[property]}\n          setColorUI={onSetColorUI}\n        />\n      </SidePanelSection>\n    );\n  };\n  return LayerColorSelector;\n}\n\nLayerColorRangeSelectorFactory.deps = [ColorSelectorFactory];\nexport function LayerColorRangeSelectorFactory(ColorSelector) {\n  const LayerColorRangeSelector = ({\n    layer,\n    onChange,\n    property = 'colorRange',\n    setColorUI\n  }: LayerColorRangeSelectorProps) => {\n    const onSetColorUI = useCallback(newConfig => setColorUI(property, newConfig), [\n      setColorUI,\n      property\n    ]);\n\n    return (\n      <SidePanelSection>\n        <ColorSelector\n          colorSets={[\n            {\n              selectedColor: layer.config.visConfig[property],\n              isRange: true,\n              setColor: (colorRange: ColorRange) => onChange({[property]: colorRange})\n            }\n          ]}\n          colorUI={layer.config.colorUI[property]}\n          setColorUI={onSetColorUI}\n        />\n      </SidePanelSection>\n    );\n  };\n  return LayerColorRangeSelector;\n}\n\nArcLayerColorSelectorFactory.deps = [ColorSelectorFactory];\nexport function ArcLayerColorSelectorFactory(ColorSelector) {\n  const ArcLayerColorSelector = ({\n    layer,\n    onChangeConfig,\n    onChangeVisConfig,\n    property = 'color',\n    setColorUI\n  }: ArcLayerColorSelectorProps) => {\n    const onSetColorUI = useCallback(newConfig => setColorUI(property, newConfig), [\n      setColorUI,\n      property\n    ]);\n\n    return (\n      <SidePanelSection>\n        <ColorSelector\n          colorSets={[\n            {\n              selectedColor: layer.config.color,\n              setColor: (rgbValue: RGBColor) => onChangeConfig({color: rgbValue}),\n              label: 'Source'\n            },\n            {\n              selectedColor: layer.config.visConfig.targetColor || layer.config.color,\n              setColor: (rgbValue: RGBColor) => onChangeVisConfig({targetColor: rgbValue}),\n              label: 'Target'\n            }\n          ]}\n          colorUI={layer.config.colorUI[property]}\n          setColorUI={onSetColorUI}\n        />\n      </SidePanelSection>\n    );\n  };\n  return ArcLayerColorSelector;\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {\n  useState,\n  ComponentType,\n  MouseEventHandler,\n  MouseEvent,\n  ChangeEventHandler\n} from 'react';\nimport classnames from 'classnames';\nimport styled, {css} from 'styled-components';\nimport PanelHeaderActionFactory from '../panel-header-action';\nimport {Tooltip} from '../../common/styled-components';\nimport {\n  Copy,\n  ArrowDown,\n  EyeSeen,\n  EyeUnseen,\n  Trash,\n  VertDots,\n  WarningSign,\n  Reset,\n  Crosshairs\n} from '../../common/icons';\n\nimport {InlineInput, StyledPanelHeader} from '../../common/styled-components';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {dataTestIds} from '@kepler.gl/constants';\nimport {RGBColor} from '@kepler.gl/types';\nimport {BaseProps} from '../../common/icons';\n\nexport type LayerLabelEditorProps = {\n  layerId: string;\n  label?: string;\n  onEdit: ChangeEventHandler;\n  onFocus: ChangeEventHandler;\n  onBlur: ChangeEventHandler;\n};\n\nexport type LayerTitleSectionProps = {\n  layerType?: string | null;\n  layerId: string;\n  label?: string;\n  onUpdateLayerLabel: ChangeEventHandler;\n  onFocus: ChangeEventHandler;\n  onBlur: ChangeEventHandler;\n};\n\nexport type LayerPanelHeaderProps = {\n  layerId: string;\n  isVisible: boolean;\n  isValid: boolean;\n  onToggleVisibility: MouseEventHandler;\n  onUpdateLayerLabel: ChangeEventHandler;\n  onToggleEnableConfig: MouseEventHandler;\n  onRemoveLayer: MouseEventHandler;\n  onZoomToLayer: MouseEventHandler;\n  onDuplicateLayer: MouseEventHandler;\n  onResetIsValid: MouseEventHandler;\n  isConfigActive: boolean;\n  showRemoveLayer?: boolean;\n  label?: string;\n  layerType?: string | null;\n  allowDuplicate?: boolean;\n  isDragNDropEnabled?: boolean;\n  warning?: boolean;\n  labelRCGColorValues?: RGBColor | null;\n  actionIcons?: {\n    remove: ComponentType<Partial<BaseProps>>;\n    visible: ComponentType<Partial<BaseProps>>;\n    hidden: ComponentType<Partial<BaseProps>>;\n    enableConfig: ComponentType<Partial<BaseProps>>;\n    resetIsValid: ComponentType<Partial<BaseProps>>;\n    duplicate: ComponentType<Partial<BaseProps>>;\n    crosshairs: ComponentType<Partial<BaseProps>>;\n  };\n  listeners?: React.ElementType;\n};\n\ntype HeaderActionSectionProps = {\n  isEditingLabel: boolean;\n};\n\nexport type LayerPanelHeaderActionSectionProps = LayerPanelHeaderProps & HeaderActionSectionProps;\n\nexport const defaultProps = {\n  isDragNDropEnabled: true,\n  showRemoveLayer: true\n};\n\nconst getBorderCss = status =>\n  css`\n    border-top: 2px solid ${({theme}) => theme.notificationColors[status]};\n    border-bottom: 2px solid ${({theme}) => theme.notificationColors[status]};\n    border-right: 2px solid ${({theme}) => theme.notificationColors[status]};\n  `;\n\nconst StyledLayerPanelHeader = styled(StyledPanelHeader)`\n  height: ${props => props.theme.layerPanelHeaderHeight}px;\n  position: relative;\n  align-items: stretch;\n\n  .layer__remove-layer {\n    opacity: 0;\n  }\n\n  .layer__drag-handle__placeholder {\n    height: 20px;\n    padding: 10px;\n  }\n\n  ${props => (props.warning ? getBorderCss('warning') : props.isValid ? '' : getBorderCss('error'))}\n\n  :hover {\n    cursor: pointer;\n    background-color: ${props => props.theme.panelBackgroundHover};\n\n    .layer__drag-handle {\n      opacity: 1;\n    }\n\n    .layer__remove-layer {\n      opacity: 1;\n    }\n  }\n`;\n\nconst HeaderLabelSection = styled.div`\n  display: flex;\n  color: ${props => props.theme.textColor};\n  flex-grow: 1;\n  align-items: stretch;\n  // leave space for eye and collapse icon\n  padding-right: 50px;\n`;\n\nconst HeaderActionSection = styled.div<HeaderActionSectionProps>`\n  display: flex;\n  position: absolute;\n  height: 100%;\n  align-items: stretch;\n  right: 10px;\n  pointer-events: ${props => (props.isEditingLabel ? 'none' : 'all')};\n  :hover {\n    .layer-panel__header__actions__hidden {\n      opacity: 1;\n      background-color: ${props => props.theme.panelBackgroundHover};\n    }\n  }\n`;\n\ntype StyledPanelHeaderHiddenActionsProps = {\n  isConfigActive: LayerPanelHeaderProps['isConfigActive'];\n};\n\n// Hiden actions only show up on hover\nconst StyledPanelHeaderHiddenActions = styled.div.attrs({\n  className: 'layer-panel__header__actions__hidden'\n})<StyledPanelHeaderHiddenActionsProps>`\n  opacity: 0;\n  display: flex;\n  align-items: center;\n  background-color: ${props =>\n    props.isConfigActive ? props.theme.panelBackgroundHover : props.theme.panelBackground};\n  transition: opacity 0.4s ease, background-color 0.4s ease;\n\n  :hover {\n    opacity: 1;\n  }\n`;\n\nconst StyledDragHandle = styled.div`\n  display: flex;\n  align-items: center;\n  opacity: 0;\n  z-index: 1000;\n\n  :hover {\n    cursor: move;\n    opacity: 1;\n    color: ${props => props.theme.textColorHl};\n  }\n`;\n\nexport const DragHandle: React.FC<{\n  className?: string;\n  listeners?: any;\n  children?: React.ReactNode;\n}> = ({className, listeners, children}) => (\n  <StyledDragHandle className={className} {...(listeners ? listeners : {})}>\n    {children}\n  </StyledDragHandle>\n);\n\nconst noOp = (event: MouseEvent) => {\n  event.stopPropagation();\n  event.preventDefault();\n};\n\nexport const LayerLabelEditor: React.FC<LayerLabelEditorProps> = ({\n  layerId,\n  label,\n  onEdit,\n  onFocus,\n  onBlur\n}) => (\n  <InlineInput\n    type=\"text\"\n    className=\"layer__title__editor\"\n    data-testid={dataTestIds.layerTitleEditor}\n    value={label}\n    onClick={noOp}\n    onChange={onEdit}\n    onFocus={onFocus}\n    onBlur={onBlur}\n    id={`${layerId}:input-layer-label`}\n  />\n);\n\nexport function LayerTitleSectionFactory() {\n  const StyledLayerTitleSection = styled.div`\n    margin-left: 4px;\n    flex-grow: 1;\n    align-items: center;\n    display: flex;\n    .layer__title__inner {\n      flex-grow: 1;\n    }\n\n    .layer__title__type {\n      color: ${props => props.theme.subtextColor};\n      font-size: 10px;\n      line-height: 12px;\n      letter-spacing: 0.37px;\n      text-transform: capitalize;\n    }\n  `;\n  const LayerTitleSection: React.FC<LayerTitleSectionProps> = ({\n    layerType,\n    layerId,\n    label,\n    onUpdateLayerLabel,\n    onFocus,\n    onBlur\n  }) => (\n    <StyledLayerTitleSection className=\"layer__title\">\n      <div>\n        <LayerLabelEditor\n          layerId={layerId}\n          label={label}\n          onEdit={onUpdateLayerLabel}\n          onFocus={onFocus}\n          onBlur={onBlur}\n        />\n        <div className=\"layer__title__type\">\n          {layerType && <FormattedMessage id={`layer.type.${layerType.toLowerCase()}`} />}\n        </div>\n      </div>\n    </StyledLayerTitleSection>\n  );\n  return LayerTitleSection;\n}\n\nLayerPanelHeaderActionSectionFactory.deps = [PanelHeaderActionFactory];\n\nexport function LayerPanelHeaderActionSectionFactory(\n  PanelHeaderAction: ReturnType<typeof PanelHeaderActionFactory>\n) {\n  const LayerPanelHeaderActionSection: React.FC<LayerPanelHeaderActionSectionProps> = (\n    props: LayerPanelHeaderActionSectionProps\n  ) => {\n    const {\n      isConfigActive,\n      allowDuplicate,\n      isVisible,\n      isValid,\n      layerId,\n      onToggleVisibility,\n      onResetIsValid,\n      onToggleEnableConfig,\n      onDuplicateLayer,\n      onRemoveLayer,\n      onZoomToLayer,\n      showRemoveLayer,\n      isEditingLabel,\n      // TODO: may not contain all necessary icons for all actions, e.g. actionIcons.duplicate. Need to to merge rather than replace\n      actionIcons = defaultActionIcons\n    } = props;\n    return (\n      <HeaderActionSection className=\"layer-panel__header__actions\" isEditingLabel={isEditingLabel}>\n        <StyledPanelHeaderHiddenActions isConfigActive={isConfigActive}>\n          {showRemoveLayer ? (\n            <PanelHeaderAction\n              className=\"layer__remove-layer\"\n              testId=\"remove-layer-action\"\n              id={layerId}\n              tooltip={'tooltip.removeLayer'}\n              onClick={onRemoveLayer}\n              tooltipType=\"error\"\n              IconComponent={actionIcons.remove}\n            />\n          ) : null}\n          <PanelHeaderAction\n            className=\"layer__duplicate\"\n            id={layerId}\n            tooltip={'tooltip.duplicateLayer'}\n            onClick={onDuplicateLayer}\n            IconComponent={actionIcons.duplicate}\n            disabled={!allowDuplicate}\n          />\n          <PanelHeaderAction\n            className=\"layer__zoom-to-layer\"\n            id={layerId}\n            tooltip={'tooltip.zoomToLayer'}\n            onClick={onZoomToLayer}\n            IconComponent={actionIcons.crosshairs}\n          />\n        </StyledPanelHeaderHiddenActions>\n        {isValid ? (\n          <PanelHeaderAction\n            className=\"layer__visibility-toggle\"\n            id={layerId}\n            tooltip={isVisible ? 'tooltip.hideLayer' : 'tooltip.showLayer'}\n            onClick={onToggleVisibility}\n            IconComponent={isVisible ? actionIcons.visible : actionIcons.hidden}\n          />\n        ) : (\n          <PanelHeaderAction\n            className=\"layer__is-valid-refresh\"\n            id={layerId}\n            tooltip={'tooltip.resetAfterError'}\n            onClick={onResetIsValid}\n            IconComponent={actionIcons.resetIsValid}\n          />\n        )}\n\n        <PanelHeaderAction\n          className={classnames('layer__enable-config ', {\n            'is-open': isConfigActive\n          })}\n          id={layerId}\n          tooltip={'tooltip.layerSettings'}\n          onClick={onToggleEnableConfig}\n          IconComponent={actionIcons.enableConfig}\n        />\n      </HeaderActionSection>\n    );\n  };\n\n  return LayerPanelHeaderActionSection;\n}\n\nconst StyledHeaderWaring = styled.div`\n  position: absolute;\n  right: -9px;\n  top: calc(50% - 9px);\n  color: ${({theme}) => theme.notificationColors.warning};\n`;\n\nexport const HeaderWarning = ({warning, id}) => (\n  <StyledHeaderWaring>\n    <WarningSign data-tip data-for={`layer-${id}-warning`} height=\"16px\" />\n    <Tooltip id={`layer-${id}-warning`} type=\"warning\" effect=\"solid\" textColor=\"black\">\n      {warning}\n    </Tooltip>\n  </StyledHeaderWaring>\n);\n\nconst defaultActionIcons = {\n  remove: Trash,\n  visible: EyeSeen,\n  hidden: EyeUnseen,\n  enableConfig: ArrowDown,\n  duplicate: Copy,\n  resetIsValid: Reset,\n  crosshairs:Crosshairs\n  ,\n};\n\nLayerPanelHeaderFactory.deps = [LayerTitleSectionFactory, LayerPanelHeaderActionSectionFactory];\n\nfunction LayerPanelHeaderFactory(\n  LayerTitleSection: ReturnType<typeof LayerTitleSectionFactory>,\n  LayerPanelHeaderActionSection: ReturnType<typeof LayerPanelHeaderActionSectionFactory>\n) {\n  const LayerPanelHeader: React.FC<LayerPanelHeaderProps> = props => {\n    const {\n      isConfigActive,\n      isDragNDropEnabled,\n      isValid,\n      warning,\n      label,\n      layerId,\n      layerType,\n      labelRCGColorValues,\n      onUpdateLayerLabel,\n      onToggleEnableConfig,\n      listeners\n    } = props;\n    const [isEditingLabel, setIsEditingLabel] = useState(false);\n    return (\n      <StyledLayerPanelHeader\n        className={classnames('layer-panel__header', {\n          'sort--handle': !isConfigActive\n        })}\n        isValid={isValid}\n        warning={warning}\n        active={isConfigActive}\n        labelRCGColorValues={labelRCGColorValues}\n        onClick={onToggleEnableConfig}\n      >\n        {warning ? <HeaderWarning warning={warning} id={layerId} /> : null}\n        <HeaderLabelSection className=\"layer-panel__header__content\">\n          {isDragNDropEnabled ? (\n            <DragHandle className=\"layer__drag-handle\" listeners={listeners}>\n              <VertDots height=\"20px\" />\n            </DragHandle>\n          ) : (\n            <div className=\"layer__drag-handle__placeholder\" />\n          )}\n          <LayerTitleSection\n            layerId={layerId}\n            label={label}\n            onUpdateLayerLabel={onUpdateLayerLabel}\n            layerType={layerType}\n            onFocus={() => {\n              setIsEditingLabel(true);\n            }}\n            onBlur={() => {\n              setIsEditingLabel(false);\n            }}\n          />\n        </HeaderLabelSection>\n        <LayerPanelHeaderActionSection {...props} isEditingLabel={isEditingLabel} />\n      </StyledLayerPanelHeader>\n    );\n  };\n\n  LayerPanelHeader.defaultProps = defaultProps;\n\n  return LayerPanelHeader;\n}\n\nexport default LayerPanelHeaderFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React from 'react';\nimport {PanelLabel, SidePanelSection} from '../../common/styled-components';\nimport ItemSelector from '../../common/item-selector/item-selector';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {camelize} from '@kepler.gl/utils';\n\ntype DimensionScaleSelectorProps = {\n  label: string;\n  onSelect: (\n    val: readonly (string | number | boolean | object)[] | string | number | boolean | object | null\n  ) => void;\n  options: string[];\n  scaleType?: string;\n  disabled?: boolean;\n};\n\nconst DimensionScaleSelector: React.FC<DimensionScaleSelectorProps> = ({\n  label,\n  onSelect,\n  options,\n  scaleType,\n  disabled = false\n}) => {\n  return (\n    <SidePanelSection>\n      <PanelLabel>\n        <FormattedMessage\n          id={label ? `scale.${camelize(label)}` : 'misc.scale'}\n          defaultMessage={label}\n        />\n      </PanelLabel>\n      <ItemSelector\n        disabled={disabled}\n        selectedItems={scaleType}\n        options={options}\n        multiSelect={false}\n        searchable={false}\n        onChange={onSelect}\n      />\n    </SidePanelSection>\n  );\n};\n\nexport default DimensionScaleSelector;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {Component} from 'react';\nimport {FormattedMessage, injectIntl, WrappedComponentProps} from 'react-intl';\n\nimport {Field} from '@kepler.gl/types';\n\nimport {PanelLabel, PanelLabelWrapper, SidePanelSection} from '../../common/styled-components';\nimport InfoHelperFactory from '../../common/info-helper';\nimport DimensionScaleSelector from './dimension-scale-selector';\nimport {camelize} from '@kepler.gl/utils';\nimport FieldSelectorFactory from '../../common/field-selector';\n\ntype VisConfigByFieldSelectorProps = {\n  channel: string;\n  fields: Field[];\n  id: string;\n  property: string;\n  showScale: boolean;\n  updateField: (\n    val: readonly (string | number | boolean | object)[] | string | number | boolean | object | null\n  ) => void;\n  updateScale: (\n    val: readonly (string | number | boolean | object)[] | string | number | boolean | object | null\n  ) => void;\n  scaleType?: string;\n  selectedField?: Field;\n  description?: string;\n  label?: string;\n  placeholder?: string;\n  scaleOptions: string[];\n} & WrappedComponentProps;\n\nVisConfigByFieldSelectorFactory.deps = [InfoHelperFactory, FieldSelectorFactory];\n\nfunction VisConfigByFieldSelectorFactory(\n  InfoHelper: ReturnType<typeof InfoHelperFactory>,\n  FieldSelector: ReturnType<typeof FieldSelectorFactory>\n) {\n  class VisConfigByFieldSelector extends Component<VisConfigByFieldSelectorProps> {\n    _updateVisByField = (\n      val:\n        | readonly (string | number | boolean | object)[]\n        | string\n        | number\n        | boolean\n        | object\n        | null\n    ) => {\n      this.props.updateField(val);\n    };\n\n    render() {\n      const {\n        property,\n        showScale,\n        selectedField,\n        description,\n        label,\n        intl,\n        scaleOptions = []\n      } = this.props;\n\n      return (\n        <SidePanelSection>\n          <SidePanelSection>\n            <PanelLabelWrapper>\n              <PanelLabel>\n                {(label && <FormattedMessage id={label} />) || (\n                  <FormattedMessage\n                    id=\"layer.propertyBasedOn\"\n                    values={{\n                      property: intl.formatMessage({\n                        id: `property.${camelize(property)}`,\n                        defaultMessage: property\n                      })\n                    }}\n                  />\n                )}\n              </PanelLabel>\n              {description && (\n                <InfoHelper\n                  description={description}\n                  property={property}\n                  id={`${this.props.id}-${property}`}\n                />\n              )}\n            </PanelLabelWrapper>\n            <FieldSelector\n              fields={this.props.fields}\n              value={selectedField && selectedField.name}\n              placeholder={this.props.placeholder}\n              onSelect={this._updateVisByField}\n              erasable\n            />\n          </SidePanelSection>\n          <div>\n            {showScale ? (\n              <DimensionScaleSelector\n                scaleType={this.props.scaleType}\n                options={scaleOptions}\n                label={`${property} scale`}\n                onSelect={this.props.updateScale}\n                disabled={scaleOptions.length < 2}\n              />\n            ) : null}\n          </div>\n        </SidePanelSection>\n      );\n    }\n  }\n  return injectIntl(VisConfigByFieldSelector);\n}\n\nexport default VisConfigByFieldSelectorFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport {FormattedMessage} from '@kepler.gl/localization';\n\nconst LayerErrorMessageContent = styled.div.attrs({\n  className: 'layer-error-message-content'\n})`\n  background-color: ${props => props.theme.notificationColors.error || '#000'};\n  color: #fff;\n  display: block;\n  width: 100%;\n  font-size: 11px;\n  padding: 1em;\n  border-radius: 4px;\n`;\n\ntype LayerErrorMessageProps = {\n  errorMessage: string;\n};\n\nconst LayerErrorMessage: React.FC<LayerErrorMessageProps> = ({errorMessage}) => {\n  return (\n    <LayerErrorMessageContent>\n      <FormattedMessage id={'layer.layerUpdateError'} values={{errorMessage}} />\n    </LayerErrorMessageContent>\n  );\n};\n\nexport default LayerErrorMessage;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\n/* eslint-disable complexity */\nimport React, {Component, Fragment} from 'react';\nimport styled from 'styled-components';\nimport {FormattedMessage} from '@kepler.gl/localization';\n\nimport {Input, PanelLabel, SidePanelSection} from '../../common/styled-components';\nimport ItemSelector from '../../common/item-selector/item-selector';\n\nimport VisConfigByFieldSelectorFactory from './vis-config-by-field-selector';\nimport LayerColumnConfigFactory from './layer-column-config';\nimport LayerTypeSelectorFactory from './layer-type-selector';\nimport DimensionScaleSelector from './dimension-scale-selector';\nimport SourceDataSelectorFactory from '../common/source-data-selector';\nimport VisConfigSwitchFactory from './vis-config-switch';\nimport VisConfigSliderFactory from './vis-config-slider';\nimport LayerConfigGroupFactory, {ConfigGroupCollapsibleContent} from './layer-config-group';\nimport TextLabelPanelFactory from './text-label-panel';\nimport {\n  LayerColorSelectorFactory,\n  LayerColorRangeSelectorFactory,\n  ArcLayerColorSelectorFactory\n} from './layer-color-selector';\nimport HowToButton from './how-to-button';\nimport LayerErrorMessage from './layer-error-message';\n\nimport {capitalizeFirstLetter} from '@kepler.gl/utils';\n\nimport {\n  CHANNEL_SCALE_SUPPORTED_FIELDS,\n  LAYER_TYPES,\n  AGGREGATION_TYPE_OPTIONS\n} from '@kepler.gl/constants';\nimport {Layer, LayerBaseConfig, VisualChannel, AggregationLayer} from '@kepler.gl/layers';\n\nimport {NestedPartial, LayerVisConfig, ColorUI, Field} from '@kepler.gl/types';\nimport {toggleModal, ActionHandler} from '@kepler.gl/actions';\nimport {Datasets} from '@kepler.gl/table';\n\ntype LayerConfiguratorProps = {\n  layer: Layer;\n  datasets: Datasets;\n  layerTypeOptions: {\n    id: string;\n    label: string;\n    icon: React.ElementType;\n    requireData: boolean;\n  }[];\n  openModal: ActionHandler<typeof toggleModal>;\n  updateLayerConfig: (newConfig: Partial<LayerBaseConfig>) => void;\n  updateLayerType: (newType: string) => void;\n  updateLayerVisConfig: (newVisConfig: Partial<LayerVisConfig>) => void;\n  updateLayerVisualChannelConfig: (\n    newConfig: Partial<LayerBaseConfig>,\n    channel: string,\n    newVisConfig?: Partial<LayerVisConfig>\n  ) => void;\n  updateLayerColorUI: (prop: string, newConfig: NestedPartial<ColorUI>) => void;\n  updateLayerTextLabel: (idx: number | 'all', prop: string, value: any) => void;\n  disableTypeSelect?: boolean;\n};\n\ntype ChannelByValueSelectorProps = {\n  layer: Layer;\n  channel: VisualChannel;\n  onChange: (\n    val: Record<\n      string,\n      string | number | boolean | object | readonly (string | number | boolean | object)[] | null\n    >,\n    key: string\n  ) => void;\n  fields: Field[];\n  description: string;\n};\n\ntype AggregationSelectorProps = {\n  channel: VisualChannel;\n  layer: AggregationLayer;\n  onChange: (\n    val: Record<\n      string,\n      string | number | boolean | object | readonly (string | number | boolean | object)[] | null\n    >,\n    key: string\n  ) => void;\n};\n\nconst StyledLayerConfigurator = styled.div.attrs({\n  className: 'layer-panel__config'\n})`\n  position: relative;\n  margin-top: ${props => props.theme.layerConfiguratorMargin};\n  padding: ${props => props.theme.layerConfiguratorPadding};\n  border-left: ${props => props.theme.layerConfiguratorBorder} dashed\n    ${props => props.theme.layerConfiguratorBorderColor};\n`;\n\nconst StyledLayerVisualConfigurator = styled.div.attrs({\n  className: 'layer-panel__config__visualC-config'\n})`\n  margin-top: 12px;\n`;\n\nexport const getLayerFields = (datasets: Datasets, layer: Layer) =>\n  layer.config?.dataId && datasets[layer.config.dataId] ? datasets[layer.config.dataId].fields : [];\n\n/** Return any to be able to customize the Dataset entity */\nexport const getLayerDataset = (datasets: Datasets, layer: Layer): any =>\n  layer.config?.dataId && datasets[layer.config.dataId] ? datasets[layer.config.dataId] : null;\n\nexport const getLayerConfiguratorProps = (props: LayerConfiguratorProps) => ({\n  layer: props.layer,\n  fields: getLayerFields(props.datasets, props.layer),\n  onChange: props.updateLayerConfig,\n  setColorUI: props.updateLayerColorUI\n});\n\nexport const getVisConfiguratorProps = (props: LayerConfiguratorProps) => ({\n  layer: props.layer,\n  fields: getLayerFields(props.datasets, props.layer),\n  onChange: props.updateLayerVisConfig,\n  setColorUI: props.updateLayerColorUI\n});\n\nexport const getLayerChannelConfigProps = (props: LayerConfiguratorProps) => ({\n  layer: props.layer,\n  fields: getLayerFields(props.datasets, props.layer),\n  onChange: props.updateLayerVisualChannelConfig\n});\n\nLayerConfiguratorFactory.deps = [\n  SourceDataSelectorFactory,\n  VisConfigSliderFactory,\n  TextLabelPanelFactory,\n  LayerConfigGroupFactory,\n  ChannelByValueSelectorFactory,\n  LayerColumnConfigFactory,\n  LayerTypeSelectorFactory,\n  VisConfigSwitchFactory,\n  LayerColorSelectorFactory,\n  LayerColorRangeSelectorFactory,\n  ArcLayerColorSelectorFactory\n];\n\nexport default function LayerConfiguratorFactory(\n  SourceDataSelector: ReturnType<typeof SourceDataSelectorFactory>,\n  VisConfigSlider: ReturnType<typeof VisConfigSliderFactory>,\n  TextLabelPanel: ReturnType<typeof TextLabelPanelFactory>,\n  LayerConfigGroup: ReturnType<typeof LayerConfigGroupFactory>,\n  ChannelByValueSelector: ReturnType<typeof ChannelByValueSelectorFactory>,\n  LayerColumnConfig: ReturnType<typeof LayerColumnConfigFactory>,\n  LayerTypeSelector: ReturnType<typeof LayerTypeSelectorFactory>,\n  VisConfigSwitch: ReturnType<typeof VisConfigSwitchFactory>,\n  LayerColorSelector: ReturnType<typeof LayerColorSelectorFactory>,\n  LayerColorRangeSelector: ReturnType<typeof LayerColorRangeSelectorFactory>,\n  ArcLayerColorSelector: ReturnType<typeof ArcLayerColorSelectorFactory>\n): React.ComponentType<LayerConfiguratorProps> {\n  class LayerConfigurator extends Component<LayerConfiguratorProps> {\n    _renderPointLayerConfig(props) {\n      return this._renderScatterplotLayerConfig(props);\n    }\n\n    _renderIconLayerConfig(props) {\n      return this._renderScatterplotLayerConfig(props);\n    }\n\n    _renderScatterplotLayerConfig({\n      layer,\n      visConfiguratorProps,\n      layerChannelConfigProps,\n      layerConfiguratorProps\n    }) {\n      return (\n        <StyledLayerVisualConfigurator>\n          {/* Fill Color */}\n          <LayerConfigGroup\n            {...(layer.visConfigSettings.filled || {label: 'layer.color'})}\n            {...visConfiguratorProps}\n            collapsible\n          >\n            {layer.config.colorField ? (\n              <LayerColorRangeSelector {...visConfiguratorProps} />\n            ) : (\n              <LayerColorSelector {...layerConfiguratorProps} />\n            )}\n            <ConfigGroupCollapsibleContent>\n              <ChannelByValueSelector\n                channel={layer.visualChannels.color}\n                {...layerChannelConfigProps}\n              />\n              <VisConfigSlider {...layer.visConfigSettings.opacity} {...visConfiguratorProps} />\n            </ConfigGroupCollapsibleContent>\n          </LayerConfigGroup>\n\n          {/* outline color */}\n          {layer.type === LAYER_TYPES.point ? (\n            <LayerConfigGroup\n              {...layer.visConfigSettings.outline}\n              {...visConfiguratorProps}\n              collapsible\n            >\n              {layer.config.strokeColorField ? (\n                <LayerColorRangeSelector {...visConfiguratorProps} property=\"strokeColorRange\" />\n              ) : (\n                <LayerColorSelector\n                  {...visConfiguratorProps}\n                  selectedColor={layer.config.visConfig.strokeColor}\n                  property=\"strokeColor\"\n                />\n              )}\n              <ConfigGroupCollapsibleContent>\n                <ChannelByValueSelector\n                  channel={layer.visualChannels.strokeColor}\n                  {...layerChannelConfigProps}\n                />\n                <VisConfigSlider\n                  {...layer.visConfigSettings.thickness}\n                  {...visConfiguratorProps}\n                  disabled={!layer.config.visConfig.outline}\n                />\n              </ConfigGroupCollapsibleContent>\n            </LayerConfigGroup>\n          ) : null}\n\n          {/* Radius */}\n          <LayerConfigGroup label={'layer.radius'} collapsible>\n            {!layer.config.sizeField ? (\n              <VisConfigSlider\n                {...layer.visConfigSettings.radius}\n                {...visConfiguratorProps}\n                label={false}\n                disabled={Boolean(layer.config.sizeField)}\n              />\n            ) : (\n              <VisConfigSlider\n                {...layer.visConfigSettings.radiusRange}\n                {...visConfiguratorProps}\n                label={false}\n                disabled={!layer.config.sizeField || layer.config.visConfig.fixedRadius}\n              />\n            )}\n            <ConfigGroupCollapsibleContent>\n              <ChannelByValueSelector\n                channel={layer.visualChannels.size}\n                {...layerChannelConfigProps}\n              />\n              {layer.config.sizeField ? (\n                <VisConfigSwitch\n                  {...layer.visConfigSettings.fixedRadius}\n                  {...visConfiguratorProps}\n                />\n              ) : null}\n            </ConfigGroupCollapsibleContent>\n          </LayerConfigGroup>\n\n          {/* text label */}\n          <TextLabelPanel\n            id={layer.id}\n            fields={visConfiguratorProps.fields}\n            updateLayerTextLabel={this.props.updateLayerTextLabel}\n            textLabel={layer.config.textLabel}\n          />\n        </StyledLayerVisualConfigurator>\n      );\n    }\n\n    _renderClusterLayerConfig({\n      layer,\n      visConfiguratorProps,\n      layerConfiguratorProps,\n      layerChannelConfigProps\n    }) {\n      return (\n        <StyledLayerVisualConfigurator>\n          {/* Color */}\n          <LayerConfigGroup label={'layer.color'} collapsible>\n            <LayerColorRangeSelector {...visConfiguratorProps} />\n            <ConfigGroupCollapsibleContent>\n              <AggregationScaleSelector\n                {...layerConfiguratorProps}\n                channel={layer.visualChannels.color}\n              />\n              <ChannelByValueSelector\n                channel={layer.visualChannels.color}\n                {...layerChannelConfigProps}\n              />\n              {layer.visConfigSettings.colorAggregation.condition(layer.config) ? (\n                <AggregationTypeSelector\n                  {...layer.visConfigSettings.colorAggregation}\n                  {...layerChannelConfigProps}\n                  channel={layer.visualChannels.color}\n                />\n              ) : null}\n              <VisConfigSlider {...layer.visConfigSettings.opacity} {...visConfiguratorProps} />\n            </ConfigGroupCollapsibleContent>\n          </LayerConfigGroup>\n\n          {/* Cluster Radius */}\n          <LayerConfigGroup label={'layer.radius'} collapsible>\n            <VisConfigSlider {...layer.visConfigSettings.clusterRadius} {...visConfiguratorProps} />\n            <ConfigGroupCollapsibleContent>\n              <VisConfigSlider {...layer.visConfigSettings.radiusRange} {...visConfiguratorProps} />\n            </ConfigGroupCollapsibleContent>\n          </LayerConfigGroup>\n        </StyledLayerVisualConfigurator>\n      );\n    }\n\n    _renderHeatmapLayerConfig({\n      layer,\n      visConfiguratorProps,\n      layerConfiguratorProps,\n      layerChannelConfigProps\n    }) {\n      return (\n        <StyledLayerVisualConfigurator>\n          {/* Color */}\n          <LayerConfigGroup label={'layer.color'} collapsible>\n            <LayerColorRangeSelector {...visConfiguratorProps} />\n            <ConfigGroupCollapsibleContent>\n              <VisConfigSlider {...layer.visConfigSettings.opacity} {...visConfiguratorProps} />\n            </ConfigGroupCollapsibleContent>\n          </LayerConfigGroup>\n          {/* Radius */}\n          <LayerConfigGroup label={'layer.radius'}>\n            <VisConfigSlider\n              {...layer.visConfigSettings.radius}\n              {...visConfiguratorProps}\n              label={false}\n            />\n          </LayerConfigGroup>\n          {/* Weight */}\n          <LayerConfigGroup label={'layer.weight'}>\n            <ChannelByValueSelector\n              channel={layer.visualChannels.weight}\n              {...layerChannelConfigProps}\n            />\n          </LayerConfigGroup>\n        </StyledLayerVisualConfigurator>\n      );\n    }\n\n    _renderGridLayerConfig(props) {\n      return this._renderAggregationLayerConfig(props);\n    }\n\n    _renderHexagonLayerConfig(props) {\n      return this._renderAggregationLayerConfig(props);\n    }\n\n    _renderAggregationLayerConfig({\n      layer,\n      visConfiguratorProps,\n      layerConfiguratorProps,\n      layerChannelConfigProps\n    }) {\n      const {config} = layer;\n      const {\n        visConfig: {enable3d}\n      } = config;\n      const elevationByDescription = 'layer.elevationByDescription';\n      const colorByDescription = 'layer.colorByDescription';\n\n      return (\n        <StyledLayerVisualConfigurator>\n          {/* Color */}\n          <LayerConfigGroup label={'layer.color'} collapsible>\n            <LayerColorRangeSelector {...visConfiguratorProps} />\n            <ConfigGroupCollapsibleContent>\n              <AggregationScaleSelector\n                {...layerConfiguratorProps}\n                channel={layer.visualChannels.color}\n              />\n              <ChannelByValueSelector\n                channel={layer.visualChannels.color}\n                {...layerChannelConfigProps}\n              />\n              {layer.visConfigSettings.colorAggregation.condition(layer.config) ? (\n                <AggregationTypeSelector\n                  {...layer.visConfigSettings.colorAggregation}\n                  {...layerChannelConfigProps}\n                  description={colorByDescription}\n                  channel={layer.visualChannels.color}\n                />\n              ) : null}\n              {layer.visConfigSettings.percentile &&\n              layer.visConfigSettings.percentile.condition(layer.config) ? (\n                <VisConfigSlider\n                  {...layer.visConfigSettings.percentile}\n                  {...visConfiguratorProps}\n                />\n              ) : null}\n              <VisConfigSlider {...layer.visConfigSettings.opacity} {...visConfiguratorProps} />\n            </ConfigGroupCollapsibleContent>\n          </LayerConfigGroup>\n\n          {/* Cell size */}\n          <LayerConfigGroup label={'layer.radius'} collapsible>\n            <VisConfigSlider {...layer.visConfigSettings.worldUnitSize} {...visConfiguratorProps} />\n            <ConfigGroupCollapsibleContent>\n              <VisConfigSlider {...layer.visConfigSettings.coverage} {...visConfiguratorProps} />\n            </ConfigGroupCollapsibleContent>\n          </LayerConfigGroup>\n\n          {/* Elevation */}\n          {layer.visConfigSettings.enable3d ? (\n            <LayerConfigGroup\n              {...layer.visConfigSettings.enable3d}\n              {...visConfiguratorProps}\n              collapsible\n            >\n              <VisConfigSlider\n                {...layer.visConfigSettings.elevationScale}\n                {...visConfiguratorProps}\n                label=\"layerVisConfigs.heightMultiplier\"\n              />\n              <ConfigGroupCollapsibleContent>\n                <ChannelByValueSelector\n                  {...layerChannelConfigProps}\n                  channel={layer.visualChannels.size}\n                  description={elevationByDescription}\n                  disabled={!enable3d}\n                />\n                <AggregationScaleSelector\n                  {...layerConfiguratorProps}\n                  channel={layer.visualChannels.size}\n                />\n                <VisConfigSlider\n                  {...layer.visConfigSettings.sizeRange}\n                  {...visConfiguratorProps}\n                  label=\"layerVisConfigs.heightRange\"\n                />\n                <VisConfigSwitch\n                  {...layer.visConfigSettings.enableElevationZoomFactor}\n                  {...visConfiguratorProps}\n                  label=\"layerVisConfigs.enableHeightZoomFactor\"\n                />\n                {layer.visConfigSettings.sizeAggregation.condition(layer.config) ? (\n                  <AggregationTypeSelector\n                    {...layer.visConfigSettings.sizeAggregation}\n                    {...layerChannelConfigProps}\n                    channel={layer.visualChannels.size}\n                  />\n                ) : null}\n                {layer.visConfigSettings.elevationPercentile.condition(layer.config) ? (\n                  <VisConfigSlider\n                    {...layer.visConfigSettings.elevationPercentile}\n                    {...visConfiguratorProps}\n                  />\n                ) : null}\n              </ConfigGroupCollapsibleContent>\n            </LayerConfigGroup>\n          ) : null}\n        </StyledLayerVisualConfigurator>\n      );\n    }\n\n    // TODO: Shan move these into layer class\n    _renderHexagonIdLayerConfig({\n      layer,\n      visConfiguratorProps,\n      layerConfiguratorProps,\n      layerChannelConfigProps\n    }) {\n      return (\n        <StyledLayerVisualConfigurator>\n          {/* Fill */}\n          <LayerConfigGroup\n            {...layer.visConfigSettings.filled}\n            {...visConfiguratorProps}\n            label={'layer.fillColor'}\n            collapsible\n          >\n            {layer.config.colorField ? (\n              <LayerColorRangeSelector {...visConfiguratorProps} />\n            ) : (\n              <LayerColorSelector {...layerConfiguratorProps} />\n            )}\n            <ConfigGroupCollapsibleContent>\n              <ChannelByValueSelector\n                channel={layer.visualChannels.color}\n                {...layerChannelConfigProps}\n              />\n              <VisConfigSlider\n                {...layer.visConfigSettings.opacity}\n                {...visConfiguratorProps}\n                disabled={!layer.config.visConfig.filled}\n              />\n            </ConfigGroupCollapsibleContent>\n          </LayerConfigGroup>\n\n          {/* Outline */}\n          <LayerConfigGroup\n            {...layer.visConfigSettings.outline}\n            {...visConfiguratorProps}\n            collapsible\n          >\n            <ChannelByValueSelector\n              channel={layer.visualChannels.strokeColor}\n              {...layerChannelConfigProps}\n            />\n            {layer.config.strokeColorField ? (\n              <LayerColorRangeSelector {...visConfiguratorProps} property=\"strokeColorRange\" />\n            ) : (\n              <LayerColorSelector\n                {...visConfiguratorProps}\n                selectedColor={layer.config.visConfig.strokeColor}\n                property=\"strokeColor\"\n              />\n            )}\n            <ConfigGroupCollapsibleContent>\n              <VisConfigSlider\n                {...layer.visConfigSettings.strokeOpacity}\n                {...visConfiguratorProps}\n                disabled={!layer.config.visConfig.outline}\n              />\n              <VisConfigSlider\n                {...layer.visConfigSettings.thickness}\n                {...visConfiguratorProps}\n                disabled={!layer.config.visConfig.outline}\n              />\n            </ConfigGroupCollapsibleContent>\n          </LayerConfigGroup>\n\n          {/* Coverage */}\n          <LayerConfigGroup label={'layer.coverage'} collapsible>\n            {!layer.config.coverageField ? (\n              <VisConfigSlider\n                {...layer.visConfigSettings.coverage}\n                {...visConfiguratorProps}\n                label={false}\n              />\n            ) : (\n              <VisConfigSlider\n                {...layer.visConfigSettings.coverageRange}\n                {...visConfiguratorProps}\n                label={false}\n              />\n            )}\n            <ConfigGroupCollapsibleContent>\n              <ChannelByValueSelector\n                channel={layer.visualChannels.coverage}\n                {...layerChannelConfigProps}\n              />\n            </ConfigGroupCollapsibleContent>\n          </LayerConfigGroup>\n\n          {/* height */}\n          <LayerConfigGroup\n            {...layer.visConfigSettings.enable3d}\n            {...visConfiguratorProps}\n            collapsible\n          >\n            <ChannelByValueSelector\n              channel={layer.visualChannels.size}\n              {...layerChannelConfigProps}\n            />\n            <ConfigGroupCollapsibleContent>\n              <VisConfigSlider\n                {...layer.visConfigSettings.elevationScale}\n                {...visConfiguratorProps}\n              />\n              <VisConfigSlider\n                {...layer.visConfigSettings.sizeRange}\n                {...visConfiguratorProps}\n                label=\"layerVisConfigs.heightRange\"\n              />\n              <VisConfigSwitch\n                {...layer.visConfigSettings.enableElevationZoomFactor}\n                {...visConfiguratorProps}\n              />\n            </ConfigGroupCollapsibleContent>\n          </LayerConfigGroup>\n\n          {/* text label */}\n          <TextLabelPanel\n            id={layer.id}\n            fields={visConfiguratorProps.fields}\n            updateLayerTextLabel={this.props.updateLayerTextLabel}\n            textLabel={layer.config.textLabel}\n          />\n        </StyledLayerVisualConfigurator>\n      );\n    }\n\n    _renderArcLayerConfig(args) {\n      return this._renderLineLayerConfig(args);\n    }\n\n    _renderLineLayerConfig({\n      layer,\n      visConfiguratorProps,\n      layerConfiguratorProps,\n      layerChannelConfigProps\n    }) {\n      return (\n        <StyledLayerVisualConfigurator>\n          {/* Color */}\n          <LayerConfigGroup label={'layer.color'} collapsible>\n            {layer.config.colorField ? (\n              <LayerColorRangeSelector {...visConfiguratorProps} />\n            ) : (\n              <ArcLayerColorSelector\n                layer={layer}\n                setColorUI={layerConfiguratorProps.setColorUI}\n                onChangeConfig={layerConfiguratorProps.onChange}\n                onChangeVisConfig={visConfiguratorProps.onChange}\n              />\n            )}\n            <ConfigGroupCollapsibleContent>\n              <ChannelByValueSelector\n                channel={layer.visualChannels.sourceColor}\n                {...layerChannelConfigProps}\n              />\n              <VisConfigSlider {...layer.visConfigSettings.opacity} {...visConfiguratorProps} />\n            </ConfigGroupCollapsibleContent>\n          </LayerConfigGroup>\n\n          {/* thickness */}\n          <LayerConfigGroup label={'layer.stroke'} collapsible>\n            {layer.config.sizeField ? (\n              <VisConfigSlider\n                {...layer.visConfigSettings.sizeRange}\n                {...visConfiguratorProps}\n                disabled={!layer.config.sizeField}\n                label={false}\n              />\n            ) : (\n              <VisConfigSlider\n                {...layer.visConfigSettings.thickness}\n                {...visConfiguratorProps}\n                label={false}\n              />\n            )}\n            <ConfigGroupCollapsibleContent>\n              <ChannelByValueSelector\n                channel={layer.visualChannels.size}\n                {...layerChannelConfigProps}\n              />\n            </ConfigGroupCollapsibleContent>\n          </LayerConfigGroup>\n\n          {/* elevation scale */}\n          {layer.visConfigSettings.elevationScale ? (\n            <LayerConfigGroup label=\"layerVisConfigs.elevationScale\" collapsible>\n              <VisConfigSlider\n                {...layer.visConfigSettings.elevationScale}\n                {...visConfiguratorProps}\n              />\n            </LayerConfigGroup>\n          ) : null}\n        </StyledLayerVisualConfigurator>\n      );\n    }\n\n    _renderTripLayerConfig({\n      layer,\n      visConfiguratorProps,\n      layerConfiguratorProps,\n      layerChannelConfigProps\n    }) {\n      const {\n        meta: {featureTypes = {}}\n      } = layer;\n\n      return (\n        <StyledLayerVisualConfigurator>\n          {/* Color */}\n          <LayerConfigGroup label={'layer.color'} collapsible>\n            {layer.config.colorField ? (\n              <LayerColorRangeSelector {...visConfiguratorProps} />\n            ) : (\n              <LayerColorSelector {...layerConfiguratorProps} />\n            )}\n            <ConfigGroupCollapsibleContent>\n              <ChannelByValueSelector\n                channel={layer.visualChannels.color}\n                {...layerChannelConfigProps}\n              />\n              <VisConfigSlider {...layer.visConfigSettings.opacity} {...visConfiguratorProps} />\n            </ConfigGroupCollapsibleContent>\n          </LayerConfigGroup>\n\n          {/* Stroke Width */}\n          <LayerConfigGroup {...visConfiguratorProps} label=\"layer.strokeWidth\" collapsible>\n            {layer.config.sizeField ? (\n              <VisConfigSlider\n                {...layer.visConfigSettings.sizeRange}\n                {...visConfiguratorProps}\n                label={false}\n              />\n            ) : (\n              <VisConfigSlider\n                {...layer.visConfigSettings.thickness}\n                {...visConfiguratorProps}\n                label={false}\n              />\n            )}\n\n            <ConfigGroupCollapsibleContent>\n              <ChannelByValueSelector\n                channel={layer.visualChannels.size}\n                {...layerChannelConfigProps}\n              />\n            </ConfigGroupCollapsibleContent>\n          </LayerConfigGroup>\n\n          {/* Trail Length*/}\n          <LayerConfigGroup\n            {...visConfiguratorProps}\n            {...(featureTypes.polygon ? layer.visConfigSettings.stroked : {})}\n            label=\"layer.trailLength\"\n            description=\"layer.trailLengthDescription\"\n          >\n            <VisConfigSlider\n              {...layer.visConfigSettings.trailLength}\n              {...visConfiguratorProps}\n              label={false}\n            />\n          </LayerConfigGroup>\n        </StyledLayerVisualConfigurator>\n      );\n    }\n\n    _renderGeojsonLayerConfig({\n      layer,\n      visConfiguratorProps,\n      layerConfiguratorProps,\n      layerChannelConfigProps\n    }) {\n      const {\n        meta: {featureTypes = {}},\n        config: {visConfig}\n      } = layer;\n\n      return (\n        <StyledLayerVisualConfigurator>\n          {/* Fill Color */}\n          {featureTypes.polygon || featureTypes.point ? (\n            <LayerConfigGroup\n              {...layer.visConfigSettings.filled}\n              {...visConfiguratorProps}\n              label=\"layer.fillColor\"\n              collapsible\n            >\n              {layer.config.colorField ? (\n                <LayerColorRangeSelector {...visConfiguratorProps} />\n              ) : (\n                <LayerColorSelector {...layerConfiguratorProps} />\n              )}\n              <ConfigGroupCollapsibleContent>\n                <ChannelByValueSelector\n                  channel={layer.visualChannels.color}\n                  {...layerChannelConfigProps}\n                />\n                <VisConfigSlider {...layer.visConfigSettings.opacity} {...visConfiguratorProps} />\n              </ConfigGroupCollapsibleContent>\n            </LayerConfigGroup>\n          ) : null}\n\n          {/* stroke color */}\n          <LayerConfigGroup\n            {...layer.visConfigSettings.stroked}\n            {...visConfiguratorProps}\n            label=\"layer.strokeColor\"\n            collapsible\n          >\n            {layer.config.strokeColorField ? (\n              <LayerColorRangeSelector {...visConfiguratorProps} property=\"strokeColorRange\" />\n            ) : (\n              <LayerColorSelector\n                {...visConfiguratorProps}\n                selectedColor={layer.config.visConfig.strokeColor}\n                property=\"strokeColor\"\n              />\n            )}\n            <ConfigGroupCollapsibleContent>\n              <ChannelByValueSelector\n                channel={layer.visualChannels.strokeColor}\n                {...layerChannelConfigProps}\n              />\n              <VisConfigSlider\n                {...layer.visConfigSettings.strokeOpacity}\n                {...visConfiguratorProps}\n              />\n            </ConfigGroupCollapsibleContent>\n          </LayerConfigGroup>\n\n          {/* Stroke Width */}\n          <LayerConfigGroup\n            {...visConfiguratorProps}\n            {...(featureTypes.polygon ? layer.visConfigSettings.stroked : {})}\n            label=\"layer.strokeWidth\"\n            collapsible\n          >\n            {layer.config.sizeField ? (\n              <VisConfigSlider\n                {...layer.visConfigSettings.sizeRange}\n                {...visConfiguratorProps}\n                label={false}\n              />\n            ) : (\n              <VisConfigSlider\n                {...layer.visConfigSettings.thickness}\n                {...visConfiguratorProps}\n                label={false}\n              />\n            )}\n            <ConfigGroupCollapsibleContent>\n              <ChannelByValueSelector\n                channel={layer.visualChannels.size}\n                {...layerChannelConfigProps}\n              />\n            </ConfigGroupCollapsibleContent>\n          </LayerConfigGroup>\n\n          {/* Elevation */}\n          {featureTypes.polygon ? (\n            <LayerConfigGroup\n              {...visConfiguratorProps}\n              {...layer.visConfigSettings.enable3d}\n              disabled={!visConfig.filled}\n              collapsible\n            >\n              <VisConfigSlider\n                {...layer.visConfigSettings.elevationScale}\n                {...visConfiguratorProps}\n                label={false}\n              />\n              <ConfigGroupCollapsibleContent>\n                <ChannelByValueSelector\n                  channel={layer.visualChannels.height}\n                  {...layerChannelConfigProps}\n                />\n                <VisConfigSwitch\n                  {...layer.visConfigSettings.fixedHeight}\n                  {...visConfiguratorProps}\n                />\n                <VisConfigSwitch {...visConfiguratorProps} {...layer.visConfigSettings.wireframe} />\n              </ConfigGroupCollapsibleContent>\n            </LayerConfigGroup>\n          ) : null}\n\n          {/* Radius */}\n          {featureTypes.point ? (\n            <LayerConfigGroup label={'layer.radius'} collapsible>\n              {!layer.config.radiusField ? (\n                <VisConfigSlider\n                  {...layer.visConfigSettings.radius}\n                  {...visConfiguratorProps}\n                  label={false}\n                  disabled={Boolean(layer.config.radiusField)}\n                />\n              ) : (\n                <VisConfigSlider\n                  {...layer.visConfigSettings.radiusRange}\n                  {...visConfiguratorProps}\n                  label={false}\n                  disabled={!layer.config.radiusField}\n                />\n              )}\n              <ConfigGroupCollapsibleContent>\n                <ChannelByValueSelector\n                  channel={layer.visualChannels.radius}\n                  {...layerChannelConfigProps}\n                />\n              </ConfigGroupCollapsibleContent>\n            </LayerConfigGroup>\n          ) : null}\n        </StyledLayerVisualConfigurator>\n      );\n    }\n\n    _render3DLayerConfig({layer, visConfiguratorProps}) {\n      return (\n        <Fragment>\n          <LayerConfigGroup label={'layer.3DModel'} collapsible>\n            <Input\n              type=\"file\"\n              accept=\".glb,.gltf\"\n              onChange={e => {\n                if (e.target.files && e.target.files[0]) {\n                  const url = URL.createObjectURL(e.target.files[0]);\n                  visConfiguratorProps.onChange({scenegraph: url});\n                }\n              }}\n            />\n          </LayerConfigGroup>\n          <LayerConfigGroup label={'layer.3DModelOptions'} collapsible>\n            <VisConfigSlider\n              {...layer.visConfigSettings.sizeScale}\n              {...visConfiguratorProps}\n              disabled={false}\n            />\n            <VisConfigSlider\n              {...layer.visConfigSettings.angleX}\n              {...visConfiguratorProps}\n              disabled={false}\n            />\n            <VisConfigSlider\n              {...layer.visConfigSettings.angleY}\n              {...visConfiguratorProps}\n              disabled={false}\n            />\n            <VisConfigSlider\n              {...layer.visConfigSettings.angleZ}\n              {...visConfiguratorProps}\n              disabled={false}\n            />\n          </LayerConfigGroup>\n        </Fragment>\n      );\n    }\n\n    _renderS2LayerConfig({\n      layer,\n      visConfiguratorProps,\n      layerConfiguratorProps,\n      layerChannelConfigProps\n    }) {\n      const {\n        config: {visConfig}\n      } = layer;\n\n      return (\n        <StyledLayerVisualConfigurator>\n          {/* Color */}\n          <LayerConfigGroup\n            {...layer.visConfigSettings.filled}\n            {...visConfiguratorProps}\n            label=\"layer.fillColor\"\n            collapsible\n          >\n            {layer.config.colorField ? (\n              <LayerColorRangeSelector {...visConfiguratorProps} />\n            ) : (\n              <LayerColorSelector {...layerConfiguratorProps} />\n            )}\n            <ConfigGroupCollapsibleContent>\n              <ChannelByValueSelector\n                channel={layer.visualChannels.color}\n                {...layerChannelConfigProps}\n              />\n              <VisConfigSlider {...layer.visConfigSettings.opacity} {...visConfiguratorProps} />\n            </ConfigGroupCollapsibleContent>\n          </LayerConfigGroup>\n\n          {/* Stroke */}\n          <LayerConfigGroup\n            {...layer.visConfigSettings.stroked}\n            {...visConfiguratorProps}\n            label=\"layer.strokeColor\"\n            collapsible\n          >\n            {layer.config.strokeColorField ? (\n              <LayerColorRangeSelector {...visConfiguratorProps} property=\"strokeColorRange\" />\n            ) : (\n              <LayerColorSelector\n                {...visConfiguratorProps}\n                selectedColor={layer.config.visConfig.strokeColor}\n                property=\"strokeColor\"\n              />\n            )}\n            <ConfigGroupCollapsibleContent>\n              <ChannelByValueSelector\n                channel={layer.visualChannels.strokeColor}\n                {...layerChannelConfigProps}\n              />\n            </ConfigGroupCollapsibleContent>\n          </LayerConfigGroup>\n\n          {/* Stroke Width */}\n          <LayerConfigGroup {...visConfiguratorProps} label=\"layer.strokeWidth\" collapsible>\n            {layer.config.sizeField ? (\n              <VisConfigSlider\n                {...layer.visConfigSettings.sizeRange}\n                {...visConfiguratorProps}\n                label={false}\n              />\n            ) : (\n              <VisConfigSlider\n                {...layer.visConfigSettings.thickness}\n                {...visConfiguratorProps}\n                label={false}\n              />\n            )}\n            <ConfigGroupCollapsibleContent>\n              <ChannelByValueSelector\n                channel={layer.visualChannels.size}\n                {...layerChannelConfigProps}\n              />\n            </ConfigGroupCollapsibleContent>\n          </LayerConfigGroup>\n\n          {/* Elevation */}\n          <LayerConfigGroup\n            {...visConfiguratorProps}\n            {...layer.visConfigSettings.enable3d}\n            disabled={!visConfig.filled}\n            collapsible\n          >\n            <ChannelByValueSelector\n              channel={layer.visualChannels.height}\n              {...layerChannelConfigProps}\n            />\n            <VisConfigSlider\n              {...layer.visConfigSettings.elevationScale}\n              {...visConfiguratorProps}\n              label=\"layerVisConfigs.elevationScale\"\n            />\n            <ConfigGroupCollapsibleContent>\n              <VisConfigSlider\n                {...layer.visConfigSettings.heightRange}\n                {...visConfiguratorProps}\n                label=\"layerVisConfigs.heightRange\"\n              />\n              <VisConfigSwitch\n                {...layer.visConfigSettings.enableElevationZoomFactor}\n                {...visConfiguratorProps}\n              />\n              <VisConfigSwitch {...visConfiguratorProps} {...layer.visConfigSettings.wireframe} />\n            </ConfigGroupCollapsibleContent>\n          </LayerConfigGroup>\n        </StyledLayerVisualConfigurator>\n      );\n    }\n\n    render() {\n      const {\n        layer,\n        datasets,\n        updateLayerConfig,\n        layerTypeOptions,\n        updateLayerType,\n        disableTypeSelect = false\n      } = this.props;\n      const {fields = [], fieldPairs = undefined} = layer.config.dataId\n        ? datasets[layer.config.dataId]\n        : {};\n      const {config} = layer;\n\n      const visConfiguratorProps = getVisConfiguratorProps(this.props);\n      const layerConfiguratorProps = getLayerConfiguratorProps(this.props);\n      const layerChannelConfigProps = getLayerChannelConfigProps(this.props);\n      const dataset = getLayerDataset(datasets, layer);\n      const renderTemplate = layer.type && `_render${capitalizeFirstLetter(layer.type)}LayerConfig`;\n\n      return (\n        <StyledLayerConfigurator>\n          {layer.layerInfoModal ? (\n            <HowToButton onClick={() => this.props.openModal(layer.layerInfoModal)} />\n          ) : null}\n          <LayerConfigGroup label={'layer.basic'} collapsible expanded={!layer.hasAllColumns()}>\n            <LayerTypeSelector\n              selected={layer.type}\n              disabled={disableTypeSelect}\n              options={layerTypeOptions}\n              // @ts-ignore\n              onSelect={updateLayerType}\n            />\n            <ConfigGroupCollapsibleContent>\n              <SourceDataSelector\n                datasets={datasets}\n                id={layer.id}\n                dataId={config.dataId}\n                // @ts-ignore\n                onSelect={(value: string) => updateLayerConfig({dataId: value})}\n              />\n              <LayerColumnConfig\n                columnPairs={layer.columnPairs}\n                columns={layer.config.columns}\n                assignColumnPairs={layer.assignColumnPairs.bind(layer)}\n                assignColumn={layer.assignColumn.bind(layer)}\n                // @ts-ignore\n                columnLabels={layer.columnLabels}\n                fields={fields}\n                fieldPairs={fieldPairs}\n                updateLayerConfig={updateLayerConfig}\n              />\n            </ConfigGroupCollapsibleContent>\n            {layer.errorMessage ? <LayerErrorMessage errorMessage={layer.errorMessage} /> : null}\n          </LayerConfigGroup>\n          {renderTemplate &&\n            this[renderTemplate] &&\n            this[renderTemplate]({\n              layer,\n              dataset,\n              visConfiguratorProps,\n              layerChannelConfigProps,\n              layerConfiguratorProps\n            })}\n        </StyledLayerConfigurator>\n      );\n    }\n  }\n\n  return LayerConfigurator;\n}\n\nChannelByValueSelectorFactory.deps = [VisConfigByFieldSelectorFactory];\n\nexport function ChannelByValueSelectorFactory(\n  VisConfigByFieldSelector: ReturnType<typeof VisConfigByFieldSelectorFactory>\n) {\n  const ChannelByValueSelector = ({\n    layer,\n    channel,\n    onChange,\n    fields,\n    description\n  }: ChannelByValueSelectorProps) => {\n    const {\n      channelScaleType,\n      field,\n      key,\n      property,\n      scale,\n      defaultMeasure,\n      supportedFieldTypes\n    } = channel;\n    const channelSupportedFieldTypes =\n      supportedFieldTypes || CHANNEL_SCALE_SUPPORTED_FIELDS[channelScaleType];\n    const supportedFields = fields.filter(({type}) => channelSupportedFieldTypes.includes(type));\n    const scaleOptions = layer.getScaleOptions(channel.key);\n    const showScale = !layer.isAggregated && layer.config[scale] && scaleOptions.length > 1;\n    const defaultDescription = 'layerConfiguration.defaultDescription';\n\n    return (\n      <VisConfigByFieldSelector\n        channel={channel.key}\n        description={description || defaultDescription}\n        fields={supportedFields}\n        id={layer.id}\n        key={`${key}-channel-selector`}\n        property={property}\n        placeholder={defaultMeasure || 'placeholder.selectField'}\n        scaleOptions={scaleOptions}\n        scaleType={scale ? layer.config[scale] : null}\n        selectedField={layer.config[field]}\n        showScale={showScale}\n        updateField={val => onChange({[field]: val}, key)}\n        updateScale={val => onChange({[scale]: val}, key)}\n      />\n    );\n  };\n\n  return ChannelByValueSelector;\n}\n\nexport const AggregationScaleSelector = ({channel, layer, onChange}: AggregationSelectorProps) => {\n  const {scale, key} = channel;\n  const scaleOptions = layer.getScaleOptions(key);\n\n  return Array.isArray(scaleOptions) && scaleOptions.length > 1 ? (\n    <DimensionScaleSelector\n      label={`${key} Scale`}\n      options={scaleOptions}\n      scaleType={layer.config[scale]}\n      onSelect={val => onChange({[scale]: val}, key)}\n    />\n  ) : null;\n};\n\nexport const AggregationTypeSelector = ({channel, layer, onChange}: AggregationSelectorProps) => {\n  const {field, aggregation, key} = channel;\n  const selectedField = layer.config[field];\n  const {visConfig} = layer.config;\n\n  // aggregation should only be selectable when field is selected\n  const layerAggregationTypes = layer.getAggregationOptions(key);\n\n  const aggregationOptions = AGGREGATION_TYPE_OPTIONS.filter(({id}) =>\n    layerAggregationTypes.includes(id)\n  );\n\n  const selectedAggregation = aggregation\n    ? aggregationOptions.find(({id}) => id === visConfig[aggregation])\n    : [];\n\n  return (\n    <SidePanelSection>\n      <PanelLabel>\n        <FormattedMessage\n          id={'layer.aggregateBy'}\n          values={{\n            field: selectedField.displayName\n          }}\n        />\n      </PanelLabel>\n      <ItemSelector\n        selectedItems={selectedAggregation}\n        options={aggregationOptions}\n        displayOption=\"label\"\n        getOptionValue=\"id\"\n        multiSelect={false}\n        searchable={false}\n        onChange={value =>\n          onChange(\n            {\n              visConfig: {\n                ...layer.config.visConfig,\n                [aggregation as string]: value\n              }\n            },\n            channel.key\n          )\n        }\n      />\n    </SidePanelSection>\n  );\n};\n/* eslint-enable max-params */\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport {StyledExportSection} from '../../common/styled-components';\n\nexport const StyledExportMapSection = styled(StyledExportSection)`\n  margin-top: ${props => props.theme.exportIntraSectionMargin}px;\n`;\n\nexport const StyledWarning = styled.span`\n  color: ${props => props.theme.errorColor};\n  font-weight: ${props => props.theme.selectFontWeightBold};\n`;\n\nexport const StyledExportLink = styled.a`\n  text-decoration-line: underline !important;\n`;\n\nexport const ExportMapLink = ({children, ...props}) => (\n  <StyledExportLink target=\"_blank\" rel=\"noopener noreferrer\" {...props}>\n    {children}\n  </StyledExportLink>\n);\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useMemo} from 'react';\nimport ErrorBoundary from '../common/error-boundary';\nimport NotificationItemFactory from '../notification-panel/notification-item';\nconst NotificationItem = NotificationItemFactory();\n\ninterface ErrorDisplayProps {\n  error: string;\n}\n\nconst ErrorDisplay: React.FC<ErrorDisplayProps> = ({error}) => {\n  const notification = useMemo(\n    () => ({\n      type: 'error',\n      message: error,\n      id: 'cloud-export-error'\n    }),\n    [error]\n  );\n\n  return (\n    <ErrorBoundary>\n      <NotificationItem notification={notification} isExpanded />\n    </ErrorBoundary>\n  );\n};\n\nexport default ErrorDisplay;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {ComponentType} from 'react';\nimport styled from 'styled-components';\nimport {MapIcon} from '../common/icons';\nimport {StyledExportSection} from '../common/styled-components';\nimport ErrorDisplay from './error-display';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {IconProps} from '@kepler.gl/cloud-providers';\n\nconst StyledUploader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n`;\n\nconst StyledMapIcon = styled.div`\n  color: ${props => props.theme.textColorLT};\n  margin-right: 16px;\n  margin-top: 4px;\n`;\n\nconst StyledSvg = styled.svg`\n  margin-right: 16px;\n\n  line {\n    stroke: ${props => props.theme.selectBorderColorLT};\n    stroke-width: 4;\n    stroke-linecap: square;\n    stroke-dasharray: 5 12;\n    animation: dash-animation 25s infinite linear;\n  }\n  circle {\n    fill: ${props => props.theme.selectBorderColorLT};\n  }\n\n  @keyframes dash-animation {\n    to {\n      stroke-dashoffset: -1000;\n    }\n  }\n`;\n\nconst Line = () => (\n  <StyledSvg height=\"5px\" width=\"150px\">\n    <line x1=\"0\" y1=\"4\" x2=\"150\" y2=\"4\" />\n  </StyledSvg>\n);\n\ninterface UploadAnimationProps {\n  icon?: ComponentType<IconProps> | null;\n}\n\nexport const UploadAnimation: React.FC<UploadAnimationProps> = props => (\n  <StyledUploader>\n    <StyledMapIcon>\n      <MapIcon height=\"48px\" />\n    </StyledMapIcon>\n    <Line />\n    {props.icon && <props.icon height=\"64px\" />}\n  </StyledUploader>\n);\n\ninterface StatusPanelProps {\n  error?: string | null;\n  isLoading?: boolean;\n  providerIcon?: ComponentType<IconProps> | null;\n}\n\nconst StatusPanel: React.FC<StatusPanelProps> = ({error, isLoading, providerIcon}) => (\n  <StyledExportSection>\n    <div className=\"description\">\n      <div className=\"title\">\n        {isLoading ? (\n          <FormattedMessage id={'modal.statusPanel.mapUploading'} />\n        ) : error ? (\n          <FormattedMessage id={'modal.statusPanel.error'} />\n        ) : null}\n      </div>\n    </div>\n    <div className=\"selection\">\n      {isLoading && <UploadAnimation icon={providerIcon} />}\n      {error && <ErrorDisplay error={error} />}\n    </div>\n  </StyledExportSection>\n);\n\nexport default StatusPanel;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {Component} from 'react';\nimport {StyledPanelDropdown} from '../common/styled-components';\nimport listensToClickOutside from 'react-onclickoutside';\n\ntype ClickOutsideCloseDropdownProps = {\n  show: boolean;\n  type: string;\n  className: string;\n  onClose: (e: Event) => void;\n  children?: React.ReactNode;\n};\n\nclass ClickOutsideCloseDropdown extends Component<ClickOutsideCloseDropdownProps> {\n  static defaultProps = {\n    show: true,\n    type: 'dark'\n  };\n\n  handleClickOutside = (e: Event) => {\n    if (typeof this.props.onClose === 'function' && this.props.show) {\n      this.props.onClose(e);\n    }\n  };\n\n  render() {\n    return (\n      <StyledPanelDropdown type={this.props.type} className={this.props.className}>\n        {this.props.children}\n      </StyledPanelDropdown>\n    );\n  }\n}\n\nexport default listensToClickOutside(ClickOutsideCloseDropdown);\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {Component, useCallback} from 'react';\nimport styled from 'styled-components';\nimport classnames from 'classnames';\nimport {createSelector} from 'reselect';\nimport {Tooltip} from '../common/styled-components';\nimport KeplerGlLogo from '../common/logo';\nimport {Save, DataTable, Save2, Picture, Db, Map as MapIcon, Share} from '../common/icons';\nimport ClickOutsideCloseDropdown from './panel-dropdown';\nimport Toolbar from '../common/toolbar';\nimport ToolbarItem, {ToolbarItemProps} from '../common/toolbar-item';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {UiState} from '@kepler.gl/types';\nimport {BaseProps} from '../common/icons';\n\ntype StyledPanelActionProps = {\n  active?: boolean;\n};\n\ntype ActionItem = {\n  id: string;\n  label?: string;\n  blank?: boolean;\n  href?: string;\n  tooltip?: string;\n  iconComponent: React.ComponentType<Partial<BaseProps>>;\n  iconComponentProps?: BaseProps;\n  dropdownComponent?: React.ComponentType<DropdownComponentProps>;\n  onClick?: () => void;\n};\n\ntype PanelActionProps = {\n  item: ActionItem;\n  showExportDropdown: (string) => void;\n};\n\ntype PanelHeaderDropdownProps = {\n  items: ToolbarItemProps[];\n  show?: boolean;\n  onClose: () => void;\n  id: string;\n};\n\ntype LogoComponentProps = {\n  appName: string;\n  appWebsite: string;\n  version: string;\n};\n\ntype DropdownCallbacks = {\n  logoComponent?: React.FC<LogoComponentProps> | React.ComponentType<LogoComponentProps>;\n  onExportImage: () => void;\n  onExportData: () => void;\n  onExportConfig?: () => void;\n  onExportMap: () => void;\n  onSaveToStorage: (() => void) | null;\n  onSaveAsToStorage: (() => void) | null;\n  onSaveMap?: () => void;\n  onShareMap: (() => void) | null;\n};\n\ntype Item = {\n  label: string;\n  icon: React.ComponentType<Partial<BaseProps>>;\n  key: string;\n  onClick: (p: DropdownComponentProps) => (() => void) | null;\n};\n\ntype DropdownComponentProps = {\n  show: boolean;\n  onClose: () => void;\n  items?: Item[];\n} & DropdownCallbacks;\n\nexport type PanelHeaderProps = {\n  appName: string;\n  appWebsite: string;\n  version: string;\n  visibleDropdown: UiState['visibleDropdown'];\n  actionItems?: ActionItem[];\n  showExportDropdown: (i: string) => void;\n  hideExportDropdown: () => void;\n} & DropdownCallbacks;\n\nconst StyledPanelHeader = styled.div.attrs(props => ({\n  className: classnames('side-side-panel__header', props.className)\n}))`\n  background-color: ${props => props.theme.sidePanelHeaderBg};\n  padding: 12px 16px 0 16px;\n`;\n\nconst StyledPanelHeaderTop = styled.div.attrs(props => ({\n  className: classnames('side-panel__header__top', props.className)\n}))`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 16px;\n  width: 100%;\n`;\n\nconst StyledPanelTopActions = styled.div.attrs({\n  className: 'side-panel__top__actions'\n})`\n  display: flex;\n`;\n\nconst StyledPanelAction = styled.div.attrs({\n  className: 'side-panel__panel-header__action'\n})<StyledPanelActionProps>`\n  align-items: center;\n  border-radius: 2px;\n  color: ${props => (props.active ? props.theme.textColorHl : props.theme.subtextColor)};\n  display: flex;\n  height: 26px;\n  justify-content: space-between;\n  margin-left: 4px;\n  padding: 5px;\n  font-weight: bold;\n  p {\n    display: inline-block;\n    margin-right: 6px;\n  }\n  a {\n    height: 20px;\n  }\n\n  :hover {\n    cursor: pointer;\n    color: ${props => props.theme.textColorHl};\n\n    a {\n      color: ${props => props.theme.textColorHl};\n    }\n  }\n`;\n\nconst StyledToolbar = styled(Toolbar)`\n  position: absolute;\n`;\n\nconst PanelAction: React.FC<PanelActionProps> = React.memo(({item, showExportDropdown}) => {\n  const onClick = useCallback(() => {\n    if (item.dropdownComponent) {\n      showExportDropdown(item.id);\n    } else {\n      item.onClick && item.onClick();\n    }\n  }, [item, showExportDropdown]);\n\n  return (\n    <StyledPanelAction\n      id={`${item.id}-action`}\n      data-tip\n      data-for={`${item.id}-action`}\n      onClick={onClick}\n    >\n      {item.label ? <p>{item.label}</p> : null}\n      <a target={item.blank ? '_blank' : ''} href={item.href} rel=\"noreferrer\">\n        <item.iconComponent height=\"20px\" {...item.iconComponentProps} />\n      </a>\n      {item.tooltip ? (\n        <Tooltip id={`${item.id}-action`} place=\"bottom\" delayShow={500} effect=\"solid\">\n          <FormattedMessage id={item.tooltip} />\n        </Tooltip>\n      ) : null}\n    </StyledPanelAction>\n  );\n});\nPanelAction.displayName = 'PanelAction';\nexport {PanelAction};\n\nexport const PanelHeaderDropdownFactory = () => {\n  const PanelHeaderDropdown: React.FC<PanelHeaderDropdownProps> = ({items, show, onClose, id}) => {\n    return (\n      <StyledToolbar show={show} className={`${id}-dropdown`}>\n        <ClickOutsideCloseDropdown\n          className=\"panel-header-dropdown__inner\"\n          show={show}\n          onClose={onClose}\n        >\n          {items.map(item => (\n            <ToolbarItem\n              id={item.key}\n              key={item.key}\n              label={item.label}\n              icon={item.icon}\n              onClick={item.onClick}\n              onClose={onClose}\n            />\n          ))}\n        </ClickOutsideCloseDropdown>\n      </StyledToolbar>\n    );\n  };\n\n  return PanelHeaderDropdown;\n};\n\nconst getDropdownItemsSelector = () =>\n  createSelector(\n    (props: DropdownComponentProps) => props,\n    props =>\n      (props.items || [])\n        .map(t => ({\n          ...t,\n          onClick: t.onClick && t.onClick(props) ? t.onClick(props) : null\n        }))\n        .filter(l => l.onClick)\n  );\n\nexport const SaveExportDropdownFactory = (\n  PanelHeaderDropdown: ReturnType<typeof PanelHeaderDropdownFactory>\n) => {\n  const dropdownItemsSelector = getDropdownItemsSelector();\n\n  const SaveExportDropdown: React.FC<DropdownComponentProps> & {\n    defaultProps: {items: ToolbarItemProps[]};\n  } = props => (\n    <PanelHeaderDropdown\n      items={dropdownItemsSelector(props)}\n      show={props.show}\n      onClose={props.onClose}\n      id=\"save-export\"\n    />\n  );\n\n  SaveExportDropdown.defaultProps = {\n    items: [\n      {\n        label: 'toolbar.exportImage',\n        icon: Picture,\n        key: 'image',\n        onClick: props => props.onExportImage\n      },\n      {\n        label: 'toolbar.exportData',\n        icon: DataTable,\n        key: 'data',\n        onClick: props => props.onExportData\n      },\n      {\n        label: 'toolbar.exportMap',\n        icon: MapIcon,\n        key: 'map',\n        onClick: props => props.onExportMap\n      },\n      {\n        label: 'toolbar.saveMap',\n        icon: Save2,\n        key: 'save',\n        onClick: props => props.onSaveMap!\n      },\n      {\n        label: 'toolbar.shareMapURL',\n        icon: Share,\n        key: 'share',\n        onClick: props => props.onShareMap\n      }\n    ]\n  };\n\n  return SaveExportDropdown;\n};\nSaveExportDropdownFactory.deps = [PanelHeaderDropdownFactory];\n\nexport const CloudStorageDropdownFactory = (\n  PanelHeaderDropdown: ReturnType<typeof PanelHeaderDropdownFactory>\n) => {\n  const dropdownItemsSelector = getDropdownItemsSelector();\n\n  const CloudStorageDropdown: React.FC<DropdownComponentProps> = props => (\n    <PanelHeaderDropdown\n      items={dropdownItemsSelector(props)}\n      show={props.show}\n      onClose={props.onClose}\n      id=\"cloud-storage\"\n    />\n  );\n  CloudStorageDropdown.defaultProps = {\n    items: [\n      {\n        label: 'Save',\n        icon: Save2,\n        key: 'save',\n        onClick: props => props.onSaveToStorage\n      },\n      {\n        label: 'Save As',\n        icon: Save2,\n        key: 'saveAs',\n        onClick: props => props.onSaveAsToStorage\n      }\n    ]\n  };\n  return CloudStorageDropdown;\n};\nCloudStorageDropdownFactory.deps = [PanelHeaderDropdownFactory];\n\nPanelHeaderFactory.deps = [SaveExportDropdownFactory, CloudStorageDropdownFactory];\n\nfunction PanelHeaderFactory(\n  SaveExportDropdown: ReturnType<typeof SaveExportDropdownFactory>,\n  CloudStorageDropdown: ReturnType<typeof CloudStorageDropdownFactory>\n): React.ComponentType<PanelHeaderProps> {\n  return class PanelHeader extends Component<PanelHeaderProps> {\n    static defaultProps = {\n      logoComponent: KeplerGlLogo,\n      actionItems: [\n        {\n          id: 'storage',\n          iconComponent: Db,\n          tooltip: 'tooltip.cloudStorage',\n          onClick: () => {},\n          dropdownComponent: CloudStorageDropdown\n        },\n        {\n          id: 'save',\n          iconComponent: Save,\n          onClick: () => {},\n          label: 'Share',\n          dropdownComponent: SaveExportDropdown\n        }\n      ]\n    };\n\n    render() {\n      const {\n        appName,\n        appWebsite,\n        version,\n        actionItems,\n        visibleDropdown,\n        showExportDropdown,\n        hideExportDropdown,\n        ...dropdownCallbacks\n      } = this.props;\n      let items = actionItems || [];\n\n      // don't render cloud storage icon if onSaveToStorage is not provided\n      if (typeof this.props.onSaveToStorage !== 'function') {\n        items = items.filter(ai => ai.id !== 'storage');\n      }\n\n      return (\n        <StyledPanelHeader className=\"side-panel__panel-header\">\n          <StyledPanelHeaderTop className=\"side-panel__panel-header__top\">\n            {this.props.logoComponent && (\n              <this.props.logoComponent\n                appName={appName}\n                version={version}\n                appWebsite={appWebsite}\n              />\n            )}\n            <StyledPanelTopActions>\n              {items.map(item => (\n                <div\n                  className=\"side-panel__panel-header__right\"\n                  key={item.id}\n                  style={{position: 'relative'}}\n                >\n                  <PanelAction item={item} showExportDropdown={showExportDropdown} />\n                  {item.dropdownComponent ? (\n                    <item.dropdownComponent\n                      onClose={hideExportDropdown}\n                      show={visibleDropdown === item.id}\n                      {...dropdownCallbacks}\n                    />\n                  ) : null}\n                </div>\n              ))}\n            </StyledPanelTopActions>\n          </StyledPanelHeaderTop>\n        </StyledPanelHeader>\n      );\n    }\n  };\n}\n\nexport default PanelHeaderFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useMemo} from 'react';\nimport {PanelLabel, SidePanelSection} from '../../common/styled-components';\nimport ItemSelector from '../../common/item-selector/item-selector';\nimport DatasetTagFactory from './dataset-tag';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {DatasetItemProps, SourceDataSelectorProps} from './types';\n\nconst defaultPlaceHolder = 'Select A Dataset';\n\nSourceDataSelectorFactory.deps = [DatasetTagFactory];\n\nexport default function SourceDataSelectorFactory(\n  DatasetTag: ReturnType<typeof DatasetTagFactory>\n): React.FC<SourceDataSelectorProps> {\n  const DatasetItem = ({value}: DatasetItemProps) => <DatasetTag dataset={value} />;\n\n  const SourceDataSelector: React.FC<SourceDataSelectorProps> = ({\n    dataId,\n    datasets,\n    disabled,\n    onSelect,\n    defaultValue,\n    inputTheme\n  }: SourceDataSelectorProps) => {\n    const dsOptions = useMemo(\n      () =>\n        Object.values(datasets).map(ds => ({\n          label: ds.label,\n          value: ds.id,\n          color: ds.color\n        })),\n      [datasets]\n    );\n\n    const selectedItems = useMemo(\n      () => (dataId ? ((Array.isArray(dataId) && dataId) || [dataId]).map(id => datasets[id]) : []),\n      [dataId, datasets]\n    );\n\n    return (\n      <SidePanelSection className=\"data-source-selector\">\n        <PanelLabel>\n          <FormattedMessage id={'misc.dataSource'} />\n        </PanelLabel>\n        <ItemSelector\n          inputTheme={inputTheme}\n          selectedItems={selectedItems}\n          options={dsOptions}\n          getOptionValue={'value'}\n          filterOption={'label'}\n          multiSelect={false}\n          onChange={onSelect}\n          placeholder={defaultValue}\n          disabled={Boolean(disabled)}\n          displayOption={'label'}\n          DropDownLineItemRenderComponent={DatasetItem}\n        />\n      </SidePanelSection>\n    );\n  };\n\n  SourceDataSelector.defaultProps = {\n    defaultValue: defaultPlaceHolder\n  };\n  return SourceDataSelector;\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React from 'react';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport styled from 'styled-components';\nimport {DatasetSquare, Tooltip} from '../..';\nimport {UpdateTableColorTypes} from './types';\nimport {RGBColor} from '@kepler.gl/types';\nimport {VisStateActions, ActionHandler} from '@kepler.gl/actions';\n\nfunction nop(_) {}\n\nconst DatasetTagWrapper = styled.div`\n  display: flex;\n  color: ${props => props.theme.textColor};\n  font-size: 11px;\n  letter-spacing: 0.2px;\n  overflow: auto;\n\n  .dataset-color {\n    flex-shrink: 0;\n    margin-top: 3px;\n  }\n\n  .dataset-name {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`;\n\nconst DatasetColorPicker = styled.div`\n  display: flex;\n`;\n\nconst UpdateTableColor = ({children, id}: UpdateTableColorTypes) => (\n  <DatasetColorPicker\n    className=\"dataset-action update-color\"\n    data-tip\n    data-for={`update-color-${id}`}\n  >\n    {children}\n  </DatasetColorPicker>\n);\n\ntype MiniDataset = {\n  id: string;\n  color: RGBColor;\n  label?: string;\n};\n\nexport type DatasetTagProps = {\n  id?: string;\n  dataset: MiniDataset;\n  updateTableColor?: ActionHandler<typeof VisStateActions.updateTableColor>;\n  onClick?: React.MouseEventHandler<HTMLDivElement>;\n  onClickSquare?: React.MouseEventHandler<HTMLDivElement>;\n};\n\nexport default function DatasetTagFactory(): React.FC<DatasetTagProps> {\n  const DatasetTag = ({\n    onClick = nop,\n    onClickSquare = nop,\n    dataset,\n    updateTableColor\n  }: DatasetTagProps) => (\n    <DatasetTagWrapper className=\"source-data-tag\">\n      <UpdateTableColor id={dataset.id}>\n        <DatasetSquare\n          className=\"dataset-color\"\n          backgroundColor={dataset.color}\n          onClick={onClickSquare}\n          data-tip\n          data-for={`update-color-${dataset.id}`}\n        />\n        {updateTableColor ? (\n          <Tooltip id={`update-color-${dataset.id}`} effect=\"solid\">\n            <span>\n              <FormattedMessage id={'Update color'} />\n            </span>\n          </Tooltip>\n        ) : null}\n      </UpdateTableColor>\n      <div className=\"dataset-name\" title={dataset.label} onClick={onClick}>\n        {dataset.label}\n      </div>\n    </DatasetTagWrapper>\n  );\n\n  return DatasetTag;\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React from 'react';\nimport {HexColor, RGBColor} from '@kepler.gl/types';\nimport styled from 'styled-components';\nimport classnames from 'classnames';\n\ntype ColorPaletteProps = {\n  colors: RGBColor | HexColor[];\n  height?: number;\n  className?: string;\n  isSelected?: boolean;\n  isReversed?: boolean;\n};\n\nconst defaultProps = {\n  height: 10,\n  colors: [],\n  className: '',\n  isSelected: false,\n  isReversed: false\n};\n\nconst PaletteWrapper = styled.div.attrs({\n  className: 'color-range-palette__inner'\n})`\n  border-radius: 2px;\n  display: flex;\n  flex-direction: row;\n  flex-grow: 1;\n  justify-content: space-between;\n  overflow: hidden;\n`;\n\nconst PaletteContainer = styled.div.attrs(props => ({\n  className: classnames('color-range-palette', props.className)\n}))<{isSelected?: boolean}>`\n  display: flex;\n  flex-grow: 1;\n  border-width: 1px;\n  border-style: solid;\n  border-color: ${props => (props.isSelected ? '#FFFFFF' : 'transparent')};\n  padding: 4px;\n  border-radius: 4px;\n`;\n\nconst StyledColorBlock = styled.div.attrs({\n  className: 'color-range-palette__block'\n})`\n  flex-grow: 1;\n`;\n\nconst ColorPalette: React.FC<ColorPaletteProps> = ({\n  colors,\n  height,\n  className,\n  isSelected,\n  isReversed\n}) => (\n  <PaletteContainer className={className} isSelected={isSelected}>\n    <PaletteWrapper style={{height, transform: `scale(${isReversed ? -1 : 1}, 1)`}}>\n      {colors.map((color: number | string, index: number) => (\n        <StyledColorBlock key={`${color}-${index}`} style={{backgroundColor: String(color)}} />\n      ))}\n    </PaletteWrapper>\n  </PaletteContainer>\n);\n\nColorPalette.defaultProps = defaultProps;\n\nexport default ColorPalette;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {Component} from 'react';\nimport styled, {withTheme} from 'styled-components';\nimport {SketchPicker, ColorChangeHandler} from 'react-color';\nimport onClickOutside from 'react-onclickoutside';\nimport {createSelector} from 'reselect';\n// This was put in because 3rd party library react-color doesn't yet cater for customized color of child component <SketchField> which contains HEX/RGB input text box\n// Issue raised: https://github.com/casesandberg/react-color/issues/631\n\ntype CustomPickerProps = {\n  color: string;\n  theme: {\n    panelBackground: string;\n  };\n  onChange: ColorChangeHandler;\n  onSwatchClose: () => void;\n};\n\nconst StyledPicker = styled.div`\n  .sketch-picker {\n    span {\n      color: ${props => props.theme.labelColor} !important;\n      font-family: ${props => props.theme.fontFamily};\n    }\n    input {\n      text-align: center;\n      font-family: ${props => props.theme.fontFamily};\n      color: ${props => props.theme.inputColor} !important;\n      border-color: ${props => props.theme.secondaryInputBgd} !important;\n      box-shadow: none !important;\n      background-color: ${props => props.theme.inputBgdHover} !important;\n    }\n  }\n`;\n\nconst PRESET_COLORS = [];\n\nclass CustomPicker extends Component<CustomPickerProps> {\n  themeSelector = (props: CustomPickerProps) => props.theme;\n  pickerStyleSelector = createSelector(this.themeSelector, theme => ({\n    picker: {\n      width: '200px',\n      padding: '10px 10px 8px',\n      boxSizing: 'initial',\n      background: theme.panelBackground\n    }\n  }));\n\n  handleClickOutside = (e: Event) => {\n    this.props.onSwatchClose();\n  };\n\n  render() {\n    const {color, onChange} = this.props;\n    const pickerStyle = this.pickerStyleSelector(this.props);\n\n    return (\n      <StyledPicker>\n        <SketchPicker\n          color={color}\n          onChange={onChange}\n          presetColors={PRESET_COLORS}\n          styles={pickerStyle}\n          disableAlpha\n        />\n      </StyledPicker>\n    );\n  }\n}\n\nexport default withTheme(onClickOutside(CustomPicker) as React.ComponentType<CustomPickerProps>);\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport {openDeleteModal, VisStateActions, ActionHandler} from '@kepler.gl/actions';\nimport {DataContainerInterface} from '@kepler.gl/utils';\nimport {RGBColor} from '@kepler.gl/types';\n\nimport {SidePanelSection} from '../../common/styled-components';\nimport DatasetTitleFactory from './dataset-title';\nimport DatasetInfoFactory from './dataset-info';\n\nconst SourceDataCatalogWrapper = styled.div`\n  transition: ${props => props.theme.transition};\n`;\n\ntype MiniDataset = {\n  id: string;\n  color: RGBColor;\n  label?: string;\n  dataContainer: DataContainerInterface;\n};\n\ntype MiniDatasets = {\n  [key: string]: MiniDataset;\n};\n\nexport type SourceDataCatalogProps = {\n  datasets: MiniDatasets;\n  showDeleteDataset?: boolean;\n  onTitleClick?: () => void;\n  showDatasetTable?: ActionHandler<typeof VisStateActions.showDatasetTable>;\n  updateTableColor: ActionHandler<typeof VisStateActions.updateTableColor>;\n  removeDataset?: ActionHandler<typeof openDeleteModal>;\n};\n\nSourceDataCatalogFactory.deps = [DatasetTitleFactory, DatasetInfoFactory];\n\nfunction SourceDataCatalogFactory(\n  DatasetTitle: ReturnType<typeof DatasetTitleFactory>,\n  DatasetInfo: ReturnType<typeof DatasetInfoFactory>\n) {\n  const SourceDataCatalog: React.FC<SourceDataCatalogProps> = ({\n    datasets,\n    showDatasetTable,\n    removeDataset,\n    onTitleClick,\n    updateTableColor,\n    showDeleteDataset = false\n  }: SourceDataCatalogProps) => (\n    <SourceDataCatalogWrapper className=\"source-data-catalog\">\n      {Object.values(datasets).map(dataset => (\n        <SidePanelSection key={dataset.id}>\n          <DatasetTitle\n            showDatasetTable={showDatasetTable}\n            showDeleteDataset={showDeleteDataset}\n            removeDataset={removeDataset}\n            dataset={dataset}\n            onTitleClick={onTitleClick}\n            updateTableColor={updateTableColor}\n          />\n          {showDatasetTable ? <DatasetInfo dataset={dataset} /> : null}\n        </SidePanelSection>\n      ))}\n    </SourceDataCatalogWrapper>\n  );\n\n  return SourceDataCatalog;\n}\n\nexport default SourceDataCatalogFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {ComponentType} from 'react';\nimport styled from 'styled-components';\nimport PanelHeaderActionFactory from '../../side-panel/panel-header-action';\nimport {Trash} from '../../common/icons';\nimport {createLinearGradient} from '@kepler.gl/utils';\nimport {StyledPanelHeader, StyledPanelHeaderProps} from '../../common/styled-components';\nimport {RGBColor, Filter} from '@kepler.gl/types';\nimport {KeplerTable} from '@kepler.gl/table';\n\ninterface StyledFilterHeaderProps extends StyledPanelHeaderProps {\n  $labelRCGColorValues: RGBColor[];\n}\n\nexport const StyledFilterHeader = styled(StyledPanelHeader)<StyledFilterHeaderProps>`\n  cursor: pointer;\n  padding: 10px 12px;\n\n  .field-selector {\n    width: 100%;\n    flex: 2;\n  }\n\n  border-left: 3px solid;\n  ${props =>\n    props.$labelRCGColorValues && props.$labelRCGColorValues.length > 0\n      ? `border-image: ${createLinearGradient('bottom', props.$labelRCGColorValues)} 3;`\n      : 'border-color: transparent;'};\n`;\n\nconst StyledChildrenContainer = styled.div`\n  display: flex;\n  flex: 1;\n  overflow: hidden;\n`;\n\nexport type FilterPanelHeaderProps = {\n  className?: string;\n  datasets: KeplerTable[];\n  filter: Filter;\n  removeFilter: () => void;\n  actionIcons?: {\n    delete: ComponentType;\n  };\n  children: React.ReactNode;\n};\n\nFilterPanelHeaderFactory.deps = [PanelHeaderActionFactory];\n\nfunction FilterPanelHeaderFactory(\n  PanelHeaderAction: ReturnType<typeof PanelHeaderActionFactory>\n): React.ComponentType<FilterPanelHeaderProps> {\n  const defaultActionIcons = {\n    delete: Trash\n  };\n  const FilterPanelHeader: React.FC<FilterPanelHeaderProps> = ({\n    children,\n    datasets,\n    filter,\n    removeFilter,\n    actionIcons = defaultActionIcons\n  }: FilterPanelHeaderProps) => (\n    <StyledFilterHeader\n      className=\"filter-panel__header\"\n      $labelRCGColorValues={datasets.map((d: KeplerTable) => d?d.color:null)}\n    >\n      <StyledChildrenContainer>{children}</StyledChildrenContainer>\n      <PanelHeaderAction\n        id={filter.id}\n        tooltip=\"tooltip.delete\"\n        tooltipType=\"error\"\n        onClick={removeFilter}\n        hoverColor={'errorColor'}\n        IconComponent={actionIcons.delete}\n      />\n    </StyledFilterHeader>\n  );\n\n  return FilterPanelHeader;\n}\n\nexport default FilterPanelHeaderFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {Component, MouseEvent} from 'react';\nimport uniq from 'lodash.uniq';\nimport styled from 'styled-components';\nimport {createSelector} from 'reselect';\n\nimport ItemSelector from '../../common/item-selector/item-selector';\nimport {PanelLabel} from '../../common/styled-components';\nimport Switch from '../../common/switch';\nimport ColorPalette from './color-palette';\nimport CustomPalette from './custom-palette';\nimport {COLOR_RANGES, ColorRange} from '@kepler.gl/constants';\nimport {reverseColorRange, numberSort} from '@kepler.gl/utils';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {NestedPartial, ColorUI} from '@kepler.gl/types';\n\ntype ColorRangeSelectorProps = {\n  colorPaletteUI: ColorUI;\n  selectedColorRange: ColorRange;\n  onSelectColorRange: (p: ColorRange, e: MouseEvent) => void;\n  setColorPaletteUI: (newConfig: NestedPartial<ColorUI>) => void;\n};\n\ntype PaletteConfigProps = {\n  label: string;\n  value: string | number | boolean;\n  config: {\n    type: string;\n    options: (string | number | boolean)[];\n  };\n  onChange: (v: string | number | boolean | object | null) => void;\n};\n\ntype ColorPaletteGroupProps = {\n  reversed?: boolean;\n  selected: ColorRange;\n  colorRanges: ColorRange[];\n  onSelect: (p: ColorRange, e: MouseEvent) => void;\n};\n\nexport const ALL_TYPES: string[] = uniq(\n  COLOR_RANGES.map(c => c.type)\n    .filter(ctype => ctype)\n    .concat(['all', 'custom']) as string[]\n);\n\nexport const ALL_STEPS: number[] = uniq(COLOR_RANGES.map(d => d.colors.length)).sort(numberSort);\n\nconst StyledColorConfig = styled.div`\n  padding: 12px 12px 0 12px;\n`;\n\nconst StyledColorRangeSelector = styled.div.attrs({\n  className: 'color-range-selector'\n})`\n  padding-bottom: 12px;\n`;\n\nconst StyledPaletteConfig = styled.div`\n  margin-bottom: 8px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  .color-palette__config__label {\n    flex-grow: 1;\n  }\n  .color-palette__config__select {\n    flex-grow: 1;\n  }\n  .item-selector .item-selector__dropdown {\n    ${props => props.theme.secondaryInput};\n  }\n`;\n\nconst CONFIG_SETTINGS = {\n  type: {\n    type: 'select',\n    options: ALL_TYPES\n  },\n  steps: {\n    type: 'select',\n    options: ALL_STEPS\n  },\n  reversed: {\n    type: 'switch',\n    options: [true, false]\n  },\n  custom: {\n    label: 'customPalette',\n    type: 'switch',\n    options: [true, false]\n  }\n};\n\nexport default class ColorRangeSelector extends Component<ColorRangeSelectorProps> {\n  static defaultProps = {\n    onSelectColorRange: () => {},\n    setColorPaletteUI: () => {}\n  };\n\n  configTypeSelector = (props: ColorRangeSelectorProps) =>\n    props.colorPaletteUI.colorRangeConfig.type;\n  configStepSelector = (props: ColorRangeSelectorProps) =>\n    props.colorPaletteUI.colorRangeConfig.steps;\n  filteredColorRange = createSelector(\n    this.configTypeSelector,\n    this.configStepSelector,\n    (type, steps) => {\n      return COLOR_RANGES.filter(colorRange => {\n        const isType = type === 'all' || type === colorRange.type;\n        const isStep = Number(steps) === colorRange.colors.length;\n\n        return isType && isStep;\n      });\n    }\n  );\n\n  _updateConfig = ({\n    key,\n    value\n  }: {\n    key: string;\n    value: string | number | boolean | object | null;\n  }) => {\n    this._setColorRangeConfig({[key]: value});\n  };\n\n  _onSetCustomPalette = (config: NestedPartial<ColorRange>) => {\n    this.props.setColorPaletteUI({\n      customPalette: config\n    });\n  };\n\n  _setColorRangeConfig = (newConfig: Record<string, string | number | boolean | object | null>) => {\n    this.props.setColorPaletteUI({\n      colorRangeConfig: newConfig\n    });\n  };\n\n  _onCustomPaletteCancel = () => {\n    this.props.setColorPaletteUI({\n      showSketcher: false,\n      colorRangeConfig: {custom: false}\n    });\n  };\n\n  _onToggleSketcher = (val: boolean | number) => {\n    this.props.setColorPaletteUI({\n      showSketcher: val\n    });\n  };\n\n  render() {\n    const {customPalette, showSketcher, colorRangeConfig} = this.props.colorPaletteUI;\n\n    const filteredColorRanges = this.filteredColorRange(this.props);\n\n    return (\n      <StyledColorRangeSelector>\n        <StyledColorConfig>\n          {(colorRangeConfig.custom ? ['custom'] : Object.keys(colorRangeConfig)).map(key => (\n            <PaletteConfig\n              key={key}\n              label={CONFIG_SETTINGS[key].label || key}\n              config={CONFIG_SETTINGS[key]}\n              value={colorRangeConfig[key]}\n              onChange={value => this._updateConfig({key, value})}\n            />\n          ))}\n        </StyledColorConfig>\n\n        {colorRangeConfig.custom ? (\n          <CustomPalette\n            customPalette={customPalette}\n            showSketcher={showSketcher}\n            onApply={this.props.onSelectColorRange}\n            onToggleSketcher={this._onToggleSketcher}\n            setCustomPalette={this._onSetCustomPalette}\n            onCancel={this._onCustomPaletteCancel}\n          />\n        ) : (\n          <ColorPaletteGroup\n            colorRanges={filteredColorRanges}\n            onSelect={this.props.onSelectColorRange}\n            selected={this.props.selectedColorRange}\n            reversed={colorRangeConfig.reversed}\n          />\n        )}\n      </StyledColorRangeSelector>\n    );\n  }\n}\n\nexport const PaletteConfig: React.FC<PaletteConfigProps> = ({\n  label,\n  value,\n  config: {type, options},\n  onChange\n}) => (\n  <StyledPaletteConfig className=\"color-palette__config\" onClick={e => e.stopPropagation()}>\n    <div className=\"color-palette__config__label\">\n      <PanelLabel>\n        <FormattedMessage id={`color.${label}`} />\n      </PanelLabel>\n    </div>\n    {type === 'select' && (\n      <div className=\"color-palette__config__select\">\n        <ItemSelector\n          selectedItems={value}\n          options={options}\n          multiSelect={false}\n          searchable={false}\n          onChange={onChange}\n        />\n      </div>\n    )}\n    {type === 'switch' && (\n      <Switch\n        checked={value as boolean}\n        id={`${label}-toggle`}\n        onChange={() => onChange(!value)}\n        secondary\n      />\n    )}\n  </StyledPaletteConfig>\n);\n\nconst StyledColorRange = styled.div.attrs({\n  className: 'color-palette-outer'\n})`\n  padding: 0 8px;\n  :hover {\n    background-color: ${props => props.theme.panelBackgroundHover};\n    cursor: pointer;\n  }\n`;\n\nexport const ColorPaletteGroup: React.FC<ColorPaletteGroupProps> = ({\n  reversed,\n  onSelect,\n  selected,\n  colorRanges\n}) => (\n  <div className=\"color-palette__group\">\n    {colorRanges.map((colorRange, i) => (\n      <StyledColorRange\n        key={`${colorRange.name}-${i}`}\n        onClick={e =>\n          onSelect(reversed ? (reverseColorRange(true, colorRange) as ColorRange) : colorRange, e)\n        }\n      >\n        <ColorPalette\n          colors={colorRange.colors}\n          isReversed={reversed}\n          isSelected={colorRange.name === selected.name && reversed === Boolean(selected.reversed)}\n        />\n      </StyledColorRange>\n    ))}\n  </div>\n);\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {Add} from '../../common/icons';\nimport {Button} from '../../common/styled-components';\n\nimport SourceDataCatalogFactory from '../common/source-data-catalog';\nimport {UIStateActions, VisStateActions, ActionHandler} from '@kepler.gl/actions';\nimport {Datasets} from '@kepler.gl/table';\n\ntype AddDataButtonProps = {\n  onClick: () => void;\n  isInactive: boolean;\n};\n\ntype DatasetSectionProps = {\n  datasets: Datasets;\n  showDatasetList?: boolean;\n  showDeleteDataset?: boolean;\n  showDatasetTable: ActionHandler<typeof VisStateActions.showDatasetTable>;\n  updateTableColor: ActionHandler<typeof VisStateActions.updateTableColor>;\n  removeDataset: ActionHandler<typeof UIStateActions.openDeleteModal>;\n  showAddDataModal: () => void;\n};\n\nconst StyledDatasetTitle = styled.div<{showDatasetList?: boolean}>`\n  line-height: ${props => props.theme.sidePanelTitleLineHeight};\n  font-weight: 400;\n  letter-spacing: 1.25px;\n  color: ${props => props.theme.subtextColor};\n  font-size: 11px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: ${props => (props.showDatasetList ? '16px' : '4px')};\n`;\n\nconst StyledDatasetSection = styled.div`\n  border-bottom: 1px solid ${props => props.theme.sidePanelBorderColor};\n`;\n\nexport function AddDataButtonFactory() {\n  const AddDataButton: React.FC<AddDataButtonProps> = React.memo(({onClick, isInactive}) => (\n    <Button\n      className=\"add-data-button\"\n      onClick={onClick}\n      inactive={!isInactive}\n      width=\"105px\"\n      secondary\n    >\n      <Add height=\"12px\" />\n      <FormattedMessage id={'layerManager.addData'} />\n    </Button>\n  ));\n  AddDataButton.displayName = 'AddDataButton';\n  return AddDataButton;\n}\n\nDatasetSectionFactory.deps = [SourceDataCatalogFactory, AddDataButtonFactory];\n\nfunction DatasetSectionFactory(\n  SourceDataCatalog: ReturnType<typeof SourceDataCatalogFactory>,\n  AddDataButton: ReturnType<typeof AddDataButtonFactory>\n) {\n  const DatasetSection: React.FC<DatasetSectionProps> = props => {\n    const {\n      datasets,\n      showDatasetTable,\n      updateTableColor,\n      showDeleteDataset,\n      removeDataset,\n      showDatasetList,\n      showAddDataModal\n    } = props;\n    const datasetCount = Object.keys(datasets).length;\n\n    return (\n      <StyledDatasetSection>\n        <StyledDatasetTitle showDatasetList={showDatasetList}>\n          <span>Datasets{datasetCount ? `(${datasetCount})` : ''}</span>\n          <AddDataButton onClick={showAddDataModal} isInactive={!datasetCount} />\n        </StyledDatasetTitle>\n        {showDatasetList && (\n          <SourceDataCatalog\n            datasets={datasets}\n            showDatasetTable={showDatasetTable}\n            updateTableColor={updateTableColor}\n            removeDataset={removeDataset}\n            showDeleteDataset={showDeleteDataset}\n          />\n        )}\n      </StyledDatasetSection>\n    );\n  };\n\n  return DatasetSection;\n}\n\nexport default DatasetSectionFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\n/* eslint-disable quote-props */\nconst COLORS = {\n  grey_7: '#898989',\n  brick_20: '#B77B6A',\n  brick_21: '#8B574F',\n  brick_22: '#392421',\n  lime_8: '#7DC240',\n  lime_9: '#76B73D',\n  lime_4: '#CFEDB5',\n  lime_5: '#B6E490',\n  lime_6: '#9EDB6B',\n  lime_7: '#8ECF56',\n  lime_1: '#F3FBED',\n  lime_2: '#EBF8E1',\n  lime_3: '#E3F5D4',\n  orange_22: '#32221D',\n  orange_20: '#DDA37C',\n  orange_21: '#A2705B',\n  stone_9: '#716852',\n  stone_8: '#776E57',\n  stone_20: '#4D4A44',\n  stone_1: '#F3F2EF',\n  amber_22: '#32251D',\n  stone_21: '#282623',\n  amber_20: '#DDB27C',\n  amber_21: '#A2785B',\n  navy_17: '#CAD1E6',\n  navy_16: '#18264D',\n  navy_15: '#132559',\n  navy_14: '#162A65',\n  navy_13: '#1A3177',\n  navy_12: '#1E3788',\n  navy_11: '#223F9A',\n  navy_10: '#2647AC',\n  navy_19: '#7989B7',\n  navy_18: '#9CAAD3',\n  teal_9: '#1C8EB4',\n  teal_8: '#1E96BE',\n  teal_5: '#79C7E3',\n  teal_4: '#A6DAEC',\n  teal_7: '#35A6CC',\n  teal_6: '#4DB5D9',\n  teal_1: '#E9F6FA',\n  teal_3: '#CBE9F4',\n  teal_2: '#DAF0F7',\n  teal_19: '#73A6B7',\n  teal_18: '#96C3D2',\n  teal_11: '#17779A',\n  teal_10: '#1A85AB',\n  teal_13: '#125C77',\n  teal_12: '#146988',\n  teal_15: '#0D4559',\n  teal_14: '#0F4E65',\n  teal_17: '#C7DDE5',\n  teal_16: '#103B49',\n  gold_20: '#DDBE7C',\n  gold_21: '#A27E5B',\n  gold_22: '#32271D',\n  olive_9: '#B8C436',\n  olive_8: '#C3D039',\n  olive_7: '#CFDC4F',\n  olive_6: '#DBE765',\n  olive_5: '#E4ED8B',\n  olive_4: '#EDF3B2',\n  olive_3: '#F5F8D2',\n  olive_2: '#F8FADF',\n  olive_1: '#FBFCEC',\n  green_22: '#212A1F',\n  green_20: '#5A735A',\n  green_21: '#2F3C2F',\n  indigo_17: '#CCC7E4',\n  indigo_16: '#1B1247',\n  indigo_15: '#1C0F58',\n  indigo_14: '#201163',\n  indigo_13: '#261474',\n  indigo_12: '#2C1685',\n  indigo_11: '#321A97',\n  indigo_10: '#371DA8',\n  indigo_19: '#7E71B2',\n  indigo_18: '#A095CF',\n  blue_22: '#222A34',\n  blue_20: '#536A81',\n  blue_21: '#2D3946',\n  olive_22: '#28291C',\n  olive_20: '#878A5E',\n  olive_21: '#484A32',\n  violet_16: '#510E30',\n  violet_17: '#E0C1D8',\n  violet_14: '#6B083F',\n  violet_15: '#620736',\n  violet_12: '#860A5A',\n  violet_13: '#79094D',\n  violet_10: '#A40D77',\n  violet_11: '#950C69',\n  dirt_16: '#261A10',\n  dirt_17: '#BCB6B1',\n  dirt_14: '#322113',\n  dirt_15: '#2D1D10',\n  dirt_12: '#442D19',\n  dirt_13: '#3B2716',\n  violet_18: '#C78BB8',\n  violet_19: '#B1699C',\n  stone_15: '#373227',\n  stone_14: '#3E392D',\n  stone_17: '#C6C4C0',\n  stone_16: '#2E2A22',\n  stone_11: '#5F5845',\n  stone_10: '#6A624D',\n  stone_13: '#494335',\n  stone_12: '#544D3D',\n  stone_19: '#706C63',\n  stone_18: '#938F87',\n  aqua_3: '#CAF2F4',\n  aqua_2: '#D9F6F7',\n  aqua_1: '#E8FAFA',\n  aqua_7: '#2FC5CC',\n  aqua_6: '#47D3D9',\n  aqua_5: '#75DEE3',\n  aqua_4: '#A3E9EC',\n  aqua_9: '#15AEB4',\n  aqua_8: '#17B8BE',\n  orange_7: '#FE891A',\n  orange_6: '#FF9833',\n  orange_5: '#FFB266',\n  orange_4: '#FFCB99',\n  orange_3: '#FFE1C4',\n  orange_2: '#FFEAD5',\n  orange_1: '#FFF2E6',\n  orange_9: '#FA7400',\n  orange_8: '#FD7900',\n  purple_13: '#510869',\n  purple_11: '#670B8C',\n  purple_10: '#720C9D',\n  purple_7: '#9226BE',\n  purple_6: '#A13ECD',\n  purple_5: '#B86EDA',\n  purple_4: '#D09FE6',\n  purple_3: '#E4C7F1',\n  purple_2: '#ECD7F5',\n  purple_1: '#F3E7F9',\n  blue_18: '#99B6D3',\n  blue_17: '#C9D7E6',\n  blue_16: '#16314D',\n  blue_15: '#103459',\n  blue_14: '#133B65',\n  blue_13: '#164677',\n  blue_12: '#195188',\n  purple_9: '#7A0DA6',\n  blue_10: '#2067AC',\n  orange_13: '#D65200',\n  orange_12: '#E45D00',\n  orange_11: '#ED6600',\n  orange_10: '#F26C00',\n  orange_17: '#F8E2CC',\n  orange_16: '#8C330A',\n  orange_15: '#B93C00',\n  orange_14: '#C84600',\n  orange_19: '#F6BD8A',\n  orange_18: '#F8CCA1',\n  magenta_11: '#B51241',\n  magenta_10: '#C5154A',\n  magenta_13: '#970E2D',\n  magenta_12: '#A51037',\n  magenta_15: '#7E0A1D',\n  magenta_14: '#880B23',\n  magenta_17: '#EDCAD6',\n  magenta_16: '#63101D',\n  magenta_19: '#D2809A',\n  magenta_18: '#E29DB4',\n  stone_3: '#E2E0DA',\n  stone_2: '#EBE9E4',\n  stone_5: '#B3AD9E',\n  stone_4: '#CDC9BF',\n  stone_7: '#89806B',\n  stone_6: '#9A927E',\n  blue_9: '#226DB5',\n  blue_8: '#2473BD',\n  blue_7: '#3B85CC',\n  blue_6: '#5297DA',\n  blue_5: '#7DB1E3',\n  blue_4: '#A9CBED',\n  blue_3: '#CDE1F4',\n  blue_2: '#DCEAF7',\n  blue_1: '#EAF2FA',\n  gold_9: '#FAC200',\n  gold_8: '#FDC900',\n  gold_5: '#FFE466',\n  gold_4: '#FFEB8C',\n  gold_7: '#FED21A',\n  gold_6: '#FFDB33',\n  gold_1: '#FFFBE6',\n  gold_3: '#FFF5C4',\n  gold_2: '#FFF8D5',\n  dirt_22: '#191410',\n  dirt_21: '#201B17',\n  dirt_20: '#3D342C',\n  white: '#FFFFFF',\n  gold_19: '#F6E08A',\n  gold_18: '#F8E8A1',\n  grey_8: '#777777',\n  grey_9: '#717171',\n  gold_11: '#EDAB00',\n  gold_10: '#F6BA00',\n  gold_13: '#D68800',\n  gold_12: '#E49B00',\n  gold_15: '#B96500',\n  gold_14: '#C87500',\n  gold_17: '#F8F0CC',\n  gold_16: '#8C500A',\n  grey_10: '#6A6A6A',\n  grey_11: '#5F5F5F',\n  grey_12: '#545454',\n  grey_13: '#494949',\n  grey_14: '#3E3E3E',\n  grey_15: '#373636',\n  grey_16: '#2E2D2D',\n  grey_17: '#C6C6C6',\n  grey_18: '#939393',\n  grey_19: '#707070',\n  dirt_19: '#5B4D42',\n  yellow_20: '#DDC97C',\n  yellow_21: '#A2845B',\n  yellow_22: '#32291D',\n  dirt_10: '#573921',\n  dirt_11: '#4E331D',\n  brown_8: '#986232',\n  brown_9: '#905D2F',\n  stone_22: '#1C1A18',\n  brown_6: '#B7885E',\n  brown_7: '#A87548',\n  brick_1: '#FEEEE8',\n  brick_3: '#FCD6C8',\n  brick_2: '#FDE2D8',\n  brick_5: '#F89570',\n  brick_4: '#FAB8A0',\n  brick_7: '#EF5D28',\n  brick_6: '#F57141',\n  brick_9: '#DF4916',\n  brick_8: '#E7531F',\n  amber_7: '#FEB31A',\n  amber_6: '#FFBE33',\n  amber_5: '#FFCE66',\n  amber_4: '#FFDF99',\n  amber_3: '#FFECC4',\n  amber_2: '#FFF2D5',\n  amber_1: '#FFF7E6',\n  amber_9: '#FAA100',\n  amber_8: '#FDA700',\n  grey_2: '#F1F1F1',\n  grey_3: '#E5E5E4',\n  violet_22: '#301C25',\n  violet_21: '#51303F',\n  violet_20: '#7F4B6D',\n  grey_1: '#F8F8F9',\n  red_19: '#D37676',\n  red_18: '#E49595',\n  red_15: '#880000',\n  red_14: '#910000',\n  red_17: '#EEC7C7',\n  red_16: '#6D0A0A',\n  red_11: '#BB0000',\n  red_10: '#C90000',\n  red_13: '#9F0000',\n  red_12: '#AC0000',\n  black: '#000000',\n  grey_4: '#D6D6D5',\n  grey_5: '#C0C0C0',\n  navy_7: '#4265CC',\n  navy_6: '#5879DA',\n  navy_5: '#829AE3',\n  navy_4: '#ABBCED',\n  navy_3: '#CFD8F4',\n  navy_2: '#DDE3F7',\n  navy_1: '#EBEFFA',\n  navy_9: '#294CB5',\n  navy_8: '#2C51BE',\n  yellow_15: '#B97600',\n  yellow_14: '#C88900',\n  yellow_17: '#F8F6CC',\n  yellow_16: '#8C5C0A',\n  yellow_11: '#EDC800',\n  yellow_10: '#F6DA00',\n  yellow_13: '#D6A000',\n  yellow_12: '#E4B600',\n  yellow_19: '#F6EF8A',\n  yellow_18: '#F8F5A1',\n  purple_20: '#664473',\n  purple_21: '#352139',\n  magenta_1: '#FCE9EF',\n  magenta_3: '#F9CADA',\n  magenta_2: '#FBDAE4',\n  magenta_5: '#EF769E',\n  magenta_4: '#F4A3BF',\n  magenta_7: '#E1316A',\n  magenta_6: '#E9487E',\n  magenta_9: '#CF1750',\n  magenta_8: '#D91955',\n  indigo_3: '#D4CCF3',\n  indigo_2: '#E1DBF6',\n  indigo_1: '#EDE9FA',\n  indigo_7: '#5438C8',\n  indigo_6: '#694FD6',\n  indigo_5: '#8F7BE0',\n  indigo_4: '#B4A7EB',\n  indigo_9: '#3B1EB1',\n  indigo_8: '#482BBD',\n  magenta_20: '#9E5F70',\n  magenta_21: '#6D4046',\n  magenta_22: '#2C1B1E',\n  purple_22: '#231727',\n  red_9: '#D20000',\n  red_8: '#DA0000',\n  red_5: '#F06D6D',\n  red_4: '#F59999',\n  red_7: '#E31A1A',\n  red_6: '#EA4444',\n  red_1: '#FDE6E6',\n  red_3: '#F9C4C4',\n  red_2: '#FBD5D5',\n  grey_21: '#282727',\n  grey_20: '#4D4D4D',\n  grey_22: '#1C1B1B',\n  lime_16: '#30471D',\n  lime_17: '#D9E6CE',\n  lime_14: '#406422',\n  lime_15: '#39581E',\n  lime_12: '#57882E',\n  lime_13: '#4C7628',\n  lime_10: '#6EAC3A',\n  lime_11: '#639A34',\n  lime_18: '#BAD4A4',\n  lime_19: '#9EBB84',\n  dirt_18: '#81746B',\n  violet_8: '#B80F87',\n  violet_9: '#AE0E7F',\n  violet_4: '#E79FD5',\n  violet_5: '#DA70BF',\n  violet_6: '#CE40AA',\n  violet_7: '#C32899',\n  violet_1: '#F9E8F5',\n  violet_2: '#F5D8EE',\n  violet_3: '#F1C8E6',\n  red_20: '#A55C5C',\n  red_21: '#784343',\n  red_22: '#361F1F',\n  amber_19: '#F6D18A',\n  amber_18: '#F8DCA1',\n  amber_13: '#D67100',\n  amber_12: '#E48000',\n  amber_11: '#ED8D00',\n  amber_10: '#F69A00',\n  amber_17: '#F8EACC',\n  amber_16: '#8C440A',\n  amber_15: '#B95300',\n  amber_14: '#C86100',\n  green_17: '#CDDDCD',\n  green_16: '#254325',\n  green_15: '#274F28',\n  green_14: '#2C5A2E',\n  green_13: '#356A36',\n  green_12: '#3D7A3E',\n  green_11: '#458A46',\n  green_10: '#4C9A4E',\n  green_19: '#82A682',\n  green_18: '#A2C2A2',\n  turquoise_19: '#77AC9B',\n  turquoise_18: '#99C7B9',\n  turquoise_15: '#185240',\n  turquoise_14: '#1B5D48',\n  turquoise_17: '#C9E0D9',\n  turquoise_16: '#1A4538',\n  turquoise_11: '#2B8F70',\n  turquoise_10: '#309F7D',\n  turquoise_13: '#216E56',\n  turquoise_12: '#267E63',\n  aqua_22: '#1A2C2B',\n  aqua_20: '#4F7E81',\n  aqua_21: '#2B4447',\n  yellow_9: '#FAE300',\n  yellow_8: '#FDEC00',\n  yellow_5: '#FFFA66',\n  yellow_4: '#FFFB98',\n  yellow_7: '#FEF21A',\n  yellow_6: '#FFF833',\n  yellow_1: '#FFFEE6',\n  yellow_3: '#FFFDC4',\n  yellow_2: '#FFFED5',\n  teal_20: '#507481',\n  teal_21: '#2C3F46',\n  teal_22: '#152629',\n  indigo_22: '#1A1724',\n  purple_12: '#5C097A',\n  indigo_20: '#59507E',\n  indigo_21: '#312C45',\n  purple_17: '#D5C1DF',\n  purple_16: '#360B40',\n  purple_15: '#3F054C',\n  purple_14: '#460658',\n  purple_19: '#9563A8',\n  purple_18: '#B389C6',\n  blue_19: '#7597B6',\n  lime_22: '#1E241A',\n  lime_21: '#3A4531',\n  lime_20: '#6C815B',\n  turquoise_1: '#ECF9F5',\n  turquoise_3: '#D2F1E7',\n  turquoise_2: '#DFF5EE',\n  turquoise_5: '#89DAC1',\n  turquoise_4: '#B1E7D6',\n  turquoise_7: '#4DC19C',\n  turquoise_6: '#62CEAD',\n  turquoise_9: '#34A984',\n  turquoise_8: '#37B38B',\n  brown_4: '#DBC3AF',\n  brown_5: '#C9A686',\n  brown_2: '#F0E7DE',\n  brown_3: '#EADDD0',\n  brown_1: '#F6F0EB',\n  blue_11: '#1C5C9A',\n  brown_14: '#4F3319',\n  purple_8: '#820DAF',\n  brown_15: '#452D16',\n  brown_16: '#3C2A18',\n  brown_18: '#B09C8A',\n  brick_19: '#E19D84',\n  brick_18: '#EEB5A1',\n  brick_15: '#9B1C04',\n  brick_14: '#A42105',\n  brick_17: '#F3D7CC',\n  brick_16: '#7A1F0E',\n  brick_11: '#CB380B',\n  brick_10: '#D73F0D',\n  brick_13: '#B12907',\n  brick_12: '#BE3009',\n  olive_13: '#777E23',\n  olive_12: '#899128',\n  olive_11: '#9BA52E',\n  olive_10: '#ADB933',\n  olive_17: '#E9ECD0',\n  olive_16: '#494C1B',\n  olive_15: '#595E1A',\n  olive_14: '#656B1D',\n  olive_19: '#C3C989',\n  olive_18: '#DBE0A8',\n  navy_22: '#232734',\n  navy_20: '#555F81',\n  navy_21: '#2E3446',\n  brown_21: '#352D24',\n  brown_20: '#645446',\n  brown_22: '#29231C',\n  dirt_4: '#C3B5A9',\n  dirt_5: '#A68F7E',\n  dirt_6: '#886A53',\n  dirt_7: '#75553C',\n  dirt_1: '#F0EDEA',\n  dirt_2: '#E7E1DC',\n  dirt_3: '#DDD4CD',\n  dirt_8: '#624025',\n  dirt_9: '#5D3D23',\n  green_3: '#DAEFDA',\n  green_2: '#E4F3E4',\n  green_1: '#EFF8EF',\n  green_7: '#6ABB6B',\n  green_6: '#7DC97F',\n  green_5: '#9ED79F',\n  green_4: '#BEE4BF',\n  green_9: '#52A353',\n  green_8: '#57AD57',\n  brown_10: '#88572C',\n  brown_11: '#7A4E28',\n  brown_12: '#6B4523',\n  brown_13: '#5D3C1E',\n  turquoise_20: '#52776C',\n  turquoise_21: '#2C403A',\n  turquoise_22: '#1E2C27',\n  brown_17: '#D4CAC1',\n  grey_6: '#A6A5A5',\n  brown_19: '#917A66',\n  aqua_19: '#70B4B7',\n  aqua_18: '#94CFD2',\n  aqua_13: '#0E7077',\n  aqua_12: '#108188',\n  aqua_11: '#12939A',\n  aqua_10: '#13A4AB',\n  aqua_17: '#C6E4E5',\n  aqua_16: '#0F474A',\n  aqua_15: '#0A545A',\n  aqua_14: '#0B5F65'\n};\n/* eslint-enable quote-props */\n\nexport default COLORS;\n\nexport const ColorsByTheme = Object.keys(COLORS).reduce((accu, key) => {\n  if (!key.includes('_')) {\n    return accu;\n  }\n  const [theme, idx] = key.split('_');\n\n  return {\n    ...accu,\n    [theme]: {\n      ...accu[theme],\n      [idx]: COLORS[key]\n    }\n  };\n}, {});\n\n// theme name in order wheel order\nexport const Themes = [\n  'yellow',\n  'gold',\n  'amber',\n  'orange',\n  'brick',\n  'red',\n  'magenta',\n  'violet',\n  'purple',\n  'indigo',\n  'navy',\n  'blue',\n  'teal',\n  'aqua',\n  'turquoise',\n  'green',\n  'lime',\n  'olive',\n  'grey',\n  'stone',\n  'brown',\n  'dirt'\n];\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\n/**\n *\n * Great tool to create color palette\n * http://www.perbang.dk/rgbgradient/\n */\n\nexport const SEQ = 'sequential';\nexport const SIN = 'singlehue';\nexport const QUA = 'qualitative';\nexport const DIV = 'diverging';\n\nexport const DataVizColors = {\n  aqua: '#12939A',\n  tumbleweed: '#DDB27C',\n  mule_fawn: '#88572C',\n  tree_poppy: '#FF991F',\n  flame: '#F15C17',\n  sapphire: '#223F9A',\n  orchid: '#DA70BF',\n  chathams_blue: '#125C77',\n  med_aquamarine: '#4DC19C',\n  crocodile: '#776E57',\n  java: '#17B8BE',\n  chalky: '#F6D18A',\n  light_taupe: '#B7885E',\n  peach_orange: '#FFCB99',\n  apricot: '#F89570',\n  portage: '#829AE3',\n  light_orchid: '#E79FD5',\n  blue_green: '#1E96BE',\n  bermuda: '#89DAC1',\n  cloudy: '#B3AD9E'\n};\n\nconst quaColors = Object.values(DataVizColors);\n\nconst qualitativeColors = [\n  {\n    name: 'Uber Viz Qualitative 0',\n    type: QUA,\n    category: 'Uber',\n    colors: quaColors.slice(0, 3)\n  },\n  {\n    name: 'Uber Viz Qualitative 0.5',\n    type: QUA,\n    category: 'Uber',\n    colors: quaColors.slice(0, 4)\n  },\n  {\n    name: 'Uber Viz Qualitative 1',\n    type: QUA,\n    category: 'Uber',\n    colors: quaColors.slice(0, 5)\n  },\n  {\n    name: 'Uber Viz Qualitative 1.2',\n    type: QUA,\n    category: 'Uber',\n    colors: quaColors.slice(0, 6)\n  },\n  {\n    name: 'Uber Viz Qualitative 1.4',\n    type: QUA,\n    category: 'Uber',\n    colors: quaColors.slice(0, 7)\n  },\n  {\n    name: 'Uber Viz Qualitative 1.6',\n    type: QUA,\n    category: 'Uber',\n    colors: quaColors.slice(0, 8)\n  },\n  {\n    name: 'Uber Viz Qualitative 1.8',\n    type: QUA,\n    category: 'Uber',\n    colors: quaColors.slice(0, 9)\n  },\n  {\n    name: 'Uber Viz Qualitative 2',\n    type: QUA,\n    category: 'Uber',\n    colors: quaColors.slice(0, 10)\n  },\n  {\n    name: 'Uber Viz Qualitative 3',\n    type: QUA,\n    category: 'Uber',\n    colors: quaColors.slice(0, 15)\n  },\n  {\n    name: 'Uber Viz Qualitative 4',\n    type: QUA,\n    category: 'Uber',\n    colors: quaColors.slice(0, 20)\n  }\n];\n\nconst sequantialColors = [\n  {\n    name: 'Uber Viz Sequential 1',\n    type: SEQ,\n    category: 'Uber',\n    colors: ['#E6FAFA', '#89C6CA', '#00939C']\n  },\n  {\n    name: 'Uber Viz Sequential 2',\n    type: SEQ,\n    category: 'Uber',\n    colors: ['#E6FAFA', '#AAD7DA', '#68B4BB', '#00939C']\n  },\n  {\n    name: 'Uber Viz Sequential 3',\n    type: SEQ,\n    category: 'Uber',\n    colors: ['#E6FAFA', '#B8E0E1', '#89C6CA', '#56ACB3', '#00939C']\n  },\n  {\n    name: 'Uber Viz Sequential 4',\n    type: SEQ,\n    category: 'Uber',\n    colors: ['#E6FAFA', '#C1E5E6', '#9DD0D4', '#75BBC1', '#4BA7AF', '#00939C']\n  },\n  {\n    name: 'Uber Viz Sequential 5',\n    type: SEQ,\n    category: 'Uber',\n    colors: ['#E6FAFA', '#C1E5E6', '#9DD0D4', '#75BBC1', '#4BA7AF', '#00939C', '#108188']\n  },\n  {\n    name: 'Uber Viz Sequential 6',\n    type: SEQ,\n    category: 'Uber',\n    colors: ['#E6FAFA', '#C1E5E6', '#9DD0D4', '#75BBC1', '#4BA7AF', '#00939C', '#108188', '#0E7077']\n  }\n];\n\nconst divergingColors = [\n  {\n    name: 'Uber Viz Diverging 0',\n    type: DIV,\n    category: 'Uber',\n    colors: ['#C22E00', '#FEEEE8', '#00939C'].reverse()\n  },\n  {\n    name: 'Uber Viz Diverging 0.5',\n    type: DIV,\n    category: 'Uber',\n    colors: ['#C22E00', '#EFBEAE', '#A2D4D7', '#00939C'].reverse()\n  },\n  {\n    name: 'Uber Viz Diverging 1',\n    type: DIV,\n    category: 'Uber',\n    colors: ['#C22E00', '#EC9370', '#FEEEE8', '#85C4C8', '#00939C'].reverse()\n  },\n  {\n    name: 'Uber Viz Diverging 1.5',\n    type: DIV,\n    category: 'Uber',\n    colors: ['#C22E00', '#DD7755', '#F8C0AA', '#BAE1E2', '#5DBABF', '#00939C'].reverse()\n  },\n  {\n    name: 'Uber Viz Diverging 2',\n    type: DIV,\n    category: 'Uber',\n    colors: ['#C22E00', '#E17449', '#F5B097', '#FEEEE8', '#A2D4D7', '#65B3BA', '#00939C'].reverse()\n  },\n  {\n    name: 'Uber Viz Diverging 2.5',\n    type: DIV,\n    category: 'Uber',\n    colors: [\n      '#C22E00',\n      '#D45F39',\n      '#E68F71',\n      '#F8C0AA',\n      '#BAE1E2',\n      '#7CC7CB',\n      '#3EADB3',\n      '#00939C'\n    ].reverse()\n  },\n  {\n    name: 'Uber Viz Diverging 3',\n    type: DIV,\n    category: 'Uber',\n    colors: [\n      '#C22E00',\n      '#DA6436',\n      '#EC9370',\n      '#F8C0AA',\n      '#FEEEE8',\n      '#B2DCDF',\n      '#65B3BA',\n      '#49A6AE',\n      '#00939C'\n    ].reverse()\n  },\n  {\n    name: 'Uber Viz Diverging 3.5',\n    type: DIV,\n    category: 'Uber',\n    colors: [\n      '#C22E00',\n      '#D0532B',\n      '#DD7755',\n      '#EB9C80',\n      '#F8C0AA',\n      '#BAE1E2',\n      '#8CCED1',\n      '#5DBABF',\n      '#2FA7AE',\n      '#00939C'\n    ].reverse()\n  },\n  {\n    name: 'Uber Viz Diverging 4',\n    type: DIV,\n    category: 'Uber',\n    colors: [\n      '#C22E00',\n      '#D55A2B',\n      '#E68059',\n      '#F2A587',\n      '#F8C0AA',\n      '#FEEEE8',\n      '#BAE1E2',\n      '#97CED1',\n      '#71BABF',\n      '#49A6AE',\n      '#00939C'\n    ].reverse()\n  }\n];\n\nconst customPalette = [\n  {\n    name: 'UberPool',\n    type: DIV,\n    category: 'Uber',\n    colors: [\n      '#223F9A',\n      '#2C51BE',\n      '#482BBD',\n      '#7A0DA6',\n      '#AE0E7F',\n      '#CF1750',\n      '#E31A1A',\n      '#FD7900',\n      '#FAC200',\n      '#FAE300'\n    ]\n  },\n  {\n    name: 'UberPool 9',\n    type: DIV,\n    category: 'Uber',\n    colors: [\n      '#2C51BE',\n      '#482BBD',\n      '#7A0DA6',\n      '#AE0E7F',\n      '#CF1750',\n      '#E31A1A',\n      '#FD7900',\n      '#FAC200',\n      '#FAE300'\n    ]\n  },\n  {\n    name: 'UberPool 8',\n    type: DIV,\n    category: 'Uber',\n    colors: ['#213E9A', '#3C1FA7', '#811CB5', '#C318B0', '#D01367', '#DE0F0E', '#EC7007', '#F9E200']\n  },\n  {\n    name: 'UberPool 7',\n    type: DIV,\n    category: 'Uber',\n    colors: ['#213E9A', '#461FA9', '#9B1BBA', '#CA168E', '#DA102C', '#E95E08', '#F9E200']\n  },\n  {\n    name: 'UberPool 6',\n    type: DIV,\n    category: 'Uber',\n    colors: ['#213E9A', '#551EAD', '#C019BD', '#D31256', '#E6470A', '#F9E200']\n  },\n  {\n    name: 'UberPool 5',\n    type: DIV,\n    category: 'Uber',\n    colors: ['#213E9A', '#6E1DB2', '#CA168E', '#E2260C', '#F9E200']\n  },\n  {\n    name: 'UberPool 4',\n    type: DIV,\n    category: 'Uber',\n    colors: ['#213E9A', '#9B1BBA', '#DA102C', '#F9E200']\n  },\n  {\n    name: 'UberPool 3',\n    type: DIV,\n    category: 'Uber',\n    colors: ['#213E9A', '#CA168E', '#F9E200']\n  },\n  {\n    name: 'Ice And Fire 3',\n    type: DIV,\n    category: 'Uber',\n    colors: ['#0198BD', '#FAFEB3', '#D50255']\n  },\n  {\n    name: 'Ice And Fire 4',\n    type: DIV,\n    category: 'Uber',\n    colors: ['#0198BD', '#E8FEB5', '#FEAD54', '#D50255']\n  },\n  {\n    name: 'Ice And Fire 5',\n    type: DIV,\n    category: 'Uber',\n    colors: ['#0198BD', '#49E3CE', '#FAFEB3', '#FEAD54', '#D50255']\n  },\n  {\n    name: 'Ice And Fire',\n    type: DIV,\n    category: 'Uber',\n    colors: ['#0198BD', '#49E3CE', '#E8FEB5', '#FEEDB1', '#FEAD54', '#D50255']\n  },\n  {\n    name: 'Ice And Fire 7',\n    type: DIV,\n    category: 'Uber',\n    colors: ['#0198BD', '#54BAB9', '#A7DCB6', '#FAFEB3', '#FCD583', '#FEAD54', '#D50255']\n  },\n  {\n    name: 'Ice And Fire 8',\n    type: DIV,\n    category: 'Uber',\n    colors: ['#007A99', '#0198BD', '#49E3CE', '#E8FEB5', '#FEEDB1', '#FEAD54', '#D50255', '#7F1941']\n  },\n  {\n    name: 'Global Warming 3',\n    type: SEQ,\n    category: 'Uber',\n    colors: ['#5A1846', '#C70039', '#FFC300']\n  },\n  {\n    name: 'Global Warming 4',\n    type: SEQ,\n    category: 'Uber',\n    colors: ['#5A1846', '#831A3D', '#E3611C', '#FFC300']\n  },\n  {\n    name: 'Global Warming 5',\n    type: SEQ,\n    category: 'Uber',\n    colors: ['#5A1846', '#831A3D', '#AC1C17', '#D55D0E', '#FFC300']\n  },\n  {\n    name: 'Global Warming',\n    type: SEQ,\n    category: 'Uber',\n    colors: ['#5A1846', '#900C3F', '#C70039', '#E3611C', '#F1920E', '#FFC300']\n  },\n  {\n    name: 'Global Warming 7',\n    type: SEQ,\n    category: 'Uber',\n    colors: ['#5A1846', '#751A43', '#911932', '#AC1C17', '#C84411', '#E37B0A', '#FFC300']\n  },\n  {\n    name: 'Global Warming 8',\n    type: SEQ,\n    category: 'Uber',\n    colors: ['#4C0035', '#650031', '#7F0023', '#98000A', '#B21800', '#CB4600', '#E57F00', '#FFC300']\n  },\n  {\n    name: 'Sunrise 3',\n    type: SEQ,\n    category: 'Uber',\n    colors: ['#355C7D', '#C06C84', '#F8B195']\n  },\n  {\n    name: 'Sunrise 4',\n    type: SEQ,\n    category: 'Uber',\n    colors: ['#355C7D', '#9A627C', '#C86A7E', '#F8B195']\n  },\n  {\n    name: 'Sunrise',\n    type: SEQ,\n    category: 'Uber',\n    colors: ['#355C7D', '#6C5B7B', '#C06C84', '#F67280', '#F8B195']\n  },\n  {\n    name: 'Sunrise 6',\n    type: SEQ,\n    category: 'Uber',\n    colors: ['#355C7D', '#63617F', '#916681', '#D88185', '#E8998D', '#F8B195']\n  },\n  {\n    name: 'Sunrise 7',\n    type: SEQ,\n    category: 'Uber',\n    colors: ['#355C7D', '#63617F', '#916681', '#C06C84', '#D28389', '#E59A8F', '#F8B195']\n  },\n  {\n    name: 'Sunrise 8',\n    type: SEQ,\n    category: 'Uber',\n    colors: ['#194266', '#355C7D', '#63617F', '#916681', '#C06C84', '#D28389', '#E59A8F', '#F8B195']\n  },\n  {\n    name: 'Ocean Green 3',\n    type: SEQ,\n    category: 'Uber',\n    colors: ['#3A748A', '#3EACA8', '#E5EEc1']\n  },\n  {\n    name: 'Ocean Green 4',\n    type: SEQ,\n    category: 'Uber',\n    colors: ['#547A82', '#3EACA8', '#A2D4AB', '#E5EEc1']\n  },\n  {\n    name: 'Ocean Green 5',\n    type: SEQ,\n    category: 'Uber',\n    colors: ['#3A748A', '#54A38F', '#73BC84', '#A9D597', '#E5EEc1']\n  },\n  {\n    name: 'Ocean Green 6',\n    type: SEQ,\n    category: 'Uber',\n    colors: ['#37535E', '#3A748A', '#4095B5', '#52AEC9', '#72BFC4', '#93CFBF']\n  },\n  {\n    name: 'Ocean Green 7',\n    type: SEQ,\n    category: 'Uber',\n    colors: ['#3A748A', '#4B9A95', '#5EAB8B', '#73BC84', '#92CC8B', '#BEDDA5', '#E5EEc1']\n  },\n  {\n    name: 'Ocean Green 8',\n    type: SEQ,\n    category: 'Uber',\n    colors: ['#37535E', '#3A748A', '#4B9A95', '#5EAB8B', '#73BC84', '#92CC8B', '#BEDDA5', '#E5EEc1']\n  },\n  {\n    name: 'Pink Wine 3',\n    type: SEQ,\n    category: 'Uber',\n    colors: ['#50315E', '#956485', '#EDD1CA']\n  },\n  {\n    name: 'Pink Wine 4',\n    type: SEQ,\n    category: 'Uber',\n    colors: ['#50315E', '#774976', '#B28294', '#EDD1CA']\n  },\n  {\n    name: 'Pink Wine 5',\n    type: SEQ,\n    category: 'Uber',\n    colors: ['#50315E', '#643D68', '#956485', '#C1939D', '#EDD1CA']\n  },\n  {\n    name: 'Pink Wine 6',\n    type: SEQ,\n    category: 'Uber',\n    colors: ['#2C1E3D', '#573660', '#83537C', '#A6758E', '#C99DA4', '#EDD1CA']\n  },\n  {\n    name: 'Pink Wine 7',\n    type: SEQ,\n    category: 'Uber',\n    colors: ['#2C1E3D', '#4F315A', '#774976', '#956485', '#B28294', '#CFA4A8', '#EDD1CA']\n  },\n  {\n    name: 'Pink Wine',\n    type: SEQ,\n    category: 'Uber',\n    colors: ['#2C1E3D', '#50315E', '#764476', '#9A5B88', '#B77495', '#CF91A3', '#E0B1B3', '#EDD1CA']\n  },\n  {\n    name: 'Purple Blue Yellow 3',\n    type: SEQ,\n    category: 'Uber',\n    colors: ['#2B1E3E', '#5EA28D', '#D6DEBF']\n  },\n  {\n    name: 'Purple Blue Yellow 4',\n    type: SEQ,\n    category: 'Uber',\n    colors: ['#2B1E3E', '#466373', '#7BA889', '#D6DEBF']\n  },\n  {\n    name: 'Purple Blue Yellow 5',\n    type: SEQ,\n    category: 'Uber',\n    colors: ['#2B1E3E', '#3A4B66', '#5F8E86', '#8BB68D', '#D6DEBF']\n  },\n  {\n    name: 'Purple Blue Yellow 6',\n    type: SEQ,\n    category: 'Uber',\n    colors: ['#2B1E3E', '#343D5E', '#4F777E', '#709E87', '#99BE95', '#D6DEBF']\n  },\n  {\n    name: 'Purple Blue Yellow 7',\n    type: SEQ,\n    category: 'Uber',\n    colors: ['#2B1E3E', '#303558', '#466373', '#5F8E86', '#7BA889', '#A4C39B', '#D6DEBF']\n  },\n  {\n    name: 'Purple Blue Yellow',\n    type: SEQ,\n    category: 'Uber',\n    colors: ['#2B1E3E', '#383C65', '#3E5F7E', '#49838A', '#5EA28D', '#82BB92', '#AECEA1', '#D6DEBF']\n  }\n];\n\nexport const VizColorPalette = [\n  ...divergingColors,\n  ...sequantialColors,\n  ...qualitativeColors,\n  ...customPalette\n];\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport colorbrewer from 'colorbrewer';\nimport {HexColor} from '@kepler.gl/types';\nimport {VizColorPalette} from './custom-color-ranges';\n\nexport type ColorMap = [string[] | string | number | null, HexColor][];\n// Key is HexColor but as key we can use only string\nexport type ColorLegends = {[key: string]: string};\n\nexport type ColorRange = {\n  name?: string;\n  type?: string;\n  category?: string;\n  colors: HexColor[];\n  reversed?: boolean;\n  colorMap?: ColorMap;\n  colorLegends?: ColorLegends;\n};\n\n// Add colorbrewer color schemes (Data Science requirement)\n// See http://colorbrewer2.org/\n\nconst colorBrewerMap = Object.entries(colorbrewer.schemeGroups).reduce(\n  (accu, [type, palettes]: [string, any]) => ({\n    ...accu,\n    ...palettes.reduce(\n      (group, name) => ({\n        ...group,\n        [name]: type\n      }),\n      {}\n    )\n  }),\n  {}\n);\n\nconst colorRanges: ColorRange[] = [...VizColorPalette];\n\nfor (const [keyName, colorScheme] of Object.entries(colorbrewer)) {\n  if (keyName !== 'schemeGroups') {\n    for (const [lenKey, colors] of Object.entries(colorScheme as any)) {\n      colorRanges.push({\n        name: `ColorBrewer ${keyName}-${lenKey}`,\n        type: colorBrewerMap[keyName],\n        category: 'ColorBrewer',\n        colors: colors as HexColor[]\n      });\n    }\n  }\n}\n\nexport const COLOR_RANGES = colorRanges;\n\nexport const DEFAULT_COLOR_RANGE = colorRanges.find(({name}) => name === 'Global Warming') || {\n  name: 'Global Warming',\n  type: 'SEQ',\n  category: 'Uber',\n  colors: ['#5A1846', '#900C3F', '#C70039', '#E3611C', '#F1920E', '#FFC300']\n};\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {ValueOf} from '@kepler.gl/types';\n\nexport const TOOLTIP_FORMAT_TYPES = {\n  NONE: 'none',\n  DATE: 'date',\n  DATE_TIME: 'date_time',\n  DECIMAL: 'decimal',\n  PERCENTAGE: 'percentage',\n  BOOLEAN: 'boolean'\n};\n\nexport const TOOLTIP_KEY = 'format';\n\nexport type TooltipFormat = {\n  id: string;\n  label: string;\n  format: null | string;\n  type: ValueOf<typeof TOOLTIP_FORMAT_TYPES>;\n};\n\nexport const TOOLTIP_FORMATS = {\n  NONE: {\n    id: 'NONE',\n    label: 'None',\n    format: null,\n    type: TOOLTIP_FORMAT_TYPES.NONE\n  },\n  DECIMAL_SHORT: {\n    id: 'DECIMAL_SHORT',\n    label: '12345 → 10k',\n    format: '.1s',\n    type: TOOLTIP_FORMAT_TYPES.DECIMAL\n  },\n  DECIMAL_COMMA: {\n    id: 'DECIMAL_COMMA',\n    label: '12345 → 12,345',\n    format: ',',\n    type: TOOLTIP_FORMAT_TYPES.DECIMAL\n  },\n  DECIMAL_SHORT_COMMA: {\n    id: 'DECIMAL_SHORT_COMMA',\n    label: '12345 → 12.3k',\n    format: '.3~s',\n    type: TOOLTIP_FORMAT_TYPES.DECIMAL\n  },\n  DECIMAL_PERCENT_FULL_0: {\n    id: 'DECIMAL_PERCENT_FULL_0',\n    label: '.01 → 1%',\n    format: '.0%',\n    type: TOOLTIP_FORMAT_TYPES.DECIMAL\n  },\n  DECIMAL_PERCENT_FULL_1: {\n    id: 'DECIMAL_PERCENT_FULL_1',\n    label: '.01 → 1.0%',\n    format: '.1%',\n    type: TOOLTIP_FORMAT_TYPES.DECIMAL\n  },\n  DECIMAL_PERCENT_FULL_2: {\n    id: 'DECIMAL_PERCENT_FULL_2',\n    label: '.01 → 1.00%',\n    format: '.2%',\n    type: TOOLTIP_FORMAT_TYPES.DECIMAL\n  },\n  DECIMAL_PRECENT_REGULAR: {\n    id: 'DECIMAL_PRECENT_REGULAR',\n    label: '12.345 → 12.35%',\n    format: '~%',\n    type: TOOLTIP_FORMAT_TYPES.PERCENTAGE\n  },\n  DECIMAL_DECIMAL_FIXED_2: {\n    id: 'DECIMAL_DECIMAL_FIXED_2',\n    label: '1.2345 → 1.23',\n    format: '.2~f',\n    type: TOOLTIP_FORMAT_TYPES.DECIMAL\n  },\n  DECIMAL_DECIMAL_FIXED_3: {\n    id: 'DECIMAL_DECIMAL_FIXED_3',\n    label: '1.2345 → 1.234',\n    format: '.3~f',\n    type: TOOLTIP_FORMAT_TYPES.DECIMAL\n  },\n  DECIMAL_DECIMAL_FIXED_4: {\n    id: 'DECIMAL_DECIMAL_FIXED_4',\n    label: '1.23456 → 1.2346',\n    format: '.4~f',\n    type: TOOLTIP_FORMAT_TYPES.DECIMAL\n  },\n  DECIMAL_SCIENTIFIC_FIXED_2: {\n    id: 'DECIMAL_SCIENTIFIC_FIXED_2',\n    label: '0.12345 → 1.23e-1',\n    format: '.2~e',\n    type: TOOLTIP_FORMAT_TYPES.DECIMAL\n  },\n  DECIMAL_SCIENTIFIC_FIXED_3: {\n    id: 'DECIMAL_SCIENTIFIC_FIXED_3',\n    label: '0.12345 → 1.235e-1',\n    format: '.3~e',\n    type: TOOLTIP_FORMAT_TYPES.DECIMAL\n  },\n  DECIMAL_SCIENTIFIC_FIXED_4: {\n    id: 'DECIMAL_SCIENTIFIC_FIXED_4',\n    label: '0.123456 → 1.2346e-1',\n    format: '.4~e',\n    type: TOOLTIP_FORMAT_TYPES.DECIMAL\n  },\n  DECIMAL_INT: {\n    id: 'DECIMAL_INT',\n    label: '12345 → 12350',\n    format: '.4~r',\n    type: TOOLTIP_FORMAT_TYPES.DECIMAL\n  },\n  DECIMAL_THREE: {\n    id: 'DECIMAL_THREE',\n    label: '12345.4321 → 12,345.432',\n    format: ',.3~f',\n    type: TOOLTIP_FORMAT_TYPES.DECIMAL\n  },\n  DECIMAL_FOUR: {\n    id: 'DECIMAL_FOUR',\n    label: '12345.54321 → 12,345.5432',\n    format: ',.4~f',\n    type: TOOLTIP_FORMAT_TYPES.DECIMAL\n  },\n  DECIMAL_DELTA: {\n    id: 'DECIMAL_DELTA',\n    label: '12345.4321 → +12,345.432',\n    format: '+,.3f',\n    type: TOOLTIP_FORMAT_TYPES.DECIMAL\n  },\n  DECIMAL_CURRENCY: {\n    id: 'DECIMAL_CURRENCY',\n    label: '12345.4321 → $12,345.43',\n    format: '$,.2f',\n    type: TOOLTIP_FORMAT_TYPES.DECIMAL\n  },\n  DATE_L: {\n    // 05/29/2020\n    id: 'DATE_L',\n    label: '',\n    format: 'L',\n    type: TOOLTIP_FORMAT_TYPES.DATE\n  },\n  DATE_LL: {\n    // September 5 2016\n    id: 'DATE_LL',\n    label: '',\n    format: 'LL',\n    type: TOOLTIP_FORMAT_TYPES.DATE\n  },\n  DATE_dddd_LL: {\n    // Monday September 5, 2016\n    id: 'DATE_dddd_LL',\n    label: '',\n    format: 'dddd LL',\n    type: TOOLTIP_FORMAT_TYPES.DATE\n  },\n  DATE_ddd_LL: {\n    // Mon September 5, 2016\n    id: 'DATE_ddd_LL',\n    label: '',\n    format: 'ddd LL',\n    type: TOOLTIP_FORMAT_TYPES.DATE\n  },\n  DATE_TIME_L_LT: {\n    // 09/05/2016 12:00 AM\n    id: 'DATE_TIME_L_LT',\n    label: '',\n    format: 'L LT',\n    type: TOOLTIP_FORMAT_TYPES.DATE_TIME\n  },\n  DATE_TIME_L_LTS: {\n    // 09/05/2016 12:00:00 AM\n    id: 'DATE_TIME_L_LTS',\n    label: '',\n    format: 'L LTS',\n    type: TOOLTIP_FORMAT_TYPES.DATE_TIME\n  },\n  DATE_TIME_LLL: {\n    // September 5, 2016 12:00 AM\n    id: 'DATE_TIME_LLL',\n    label: '',\n    format: 'LLL',\n    type: TOOLTIP_FORMAT_TYPES.DATE_TIME\n  },\n  DATE_TIME_LL_LTS: {\n    // September 5, 2016 12:00:00 AM\n    id: 'DATE_TIME_LL_LTS',\n    label: '',\n    format: 'LL LTS',\n    type: TOOLTIP_FORMAT_TYPES.DATE_TIME\n  },\n  DATE_TIME_ddd_LLL: {\n    // Mon September 5, 2016 12:00 AM\n    id: 'DATE_TIME_ddd_LLL',\n    label: '',\n    format: 'ddd LLL',\n    type: TOOLTIP_FORMAT_TYPES.DATE_TIME\n  },\n  DATE_TIME_LTS: {\n    // 12:00:00 AM\n    id: 'DATE_TIME_LTS',\n    label: '',\n    format: 'LTS',\n    type: TOOLTIP_FORMAT_TYPES.DATE_TIME\n  },\n  BOOLEAN_NUM: {\n    id: 'BOOLEAN_NUM',\n    label: '0 | 1',\n    format: '01',\n    type: TOOLTIP_FORMAT_TYPES.BOOLEAN\n  },\n  BOOLEAN_Y_N: {\n    id: 'BOOLEAN_Y_N',\n    label: 'yes | no',\n    format: 'yn',\n    type: TOOLTIP_FORMAT_TYPES.BOOLEAN\n  }\n};\n\nexport const COMPARE_TYPES = {\n  ABSOLUTE: 'absolute',\n  RELATIVE: 'relative'\n};\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport keyMirror from 'keymirror';\n\nimport {\n  scaleLinear,\n  scaleQuantize,\n  scaleQuantile,\n  scaleOrdinal,\n  scaleSqrt,\n  scaleLog,\n  scalePoint\n} from 'd3-scale';\nimport {TOOLTIP_FORMAT_TYPES} from './tooltip';\nimport {RGBAColor, EffectDescription, BaseMapStyle} from '@kepler.gl/types';\n\nexport const ACTION_PREFIX = '@@kepler.gl/';\nexport const KEPLER_UNFOLDED_BUCKET = 'https://studio-public-data.foursquare.com/statics/keplergl';\nexport const BASEMAP_ICON_PREFIX = `${KEPLER_UNFOLDED_BUCKET}/geodude`;\nexport const DEFAULT_MAPBOX_API_URL = 'https://api.mapbox.com';\nexport const TRANSITION_DURATION = 0;\n\n// Modal Ids\n/**\n * Modal id: data table\n * @constant\n * @type {string}\n * @public\n */\nexport const DATA_TABLE_ID = 'dataTable';\n/**\n * Modal id: delete dataset confirm dialog\n * @constant\n * @type {string}\n * @public\n */\nexport const DELETE_DATA_ID = 'deleteData';\n/**\n * Modal id: add data modal\n * @constant\n * @type {string}\n * @public\n */\nexport const ADD_DATA_ID = 'addData';\n/**\n * Modal id: export image modal\n * @constant\n * @type {string}\n * @public\n */\nexport const EXPORT_IMAGE_ID = 'exportImage';\n/**\n * Modal id: export data modal\n * @constant\n * @type {string}\n * @public\n */\nexport const EXPORT_DATA_ID = 'exportData';\n/**\n * Modal id: add custom map style modal\n * @constant\n * @type {string}\n * @public\n */\nexport const ADD_MAP_STYLE_ID = 'addMapStyle';\n/**\n * Modal id: export map modal\n * @constant\n * @type {string}\n * @public\n */\nexport const EXPORT_MAP_ID = 'exportMap';\n/**\n * Modal id: save map modal\n * @constant\n * @type {string}\n * @public\n */\nexport const SAVE_MAP_ID = 'saveMap';\n/**\n * Modal id: confirm to overwrite saved map\n * @constant\n * @type {string}\n * @public\n */\nexport const OVERWRITE_MAP_ID = 'overwriteMap';\n/**\n * Modal id: share map url modal\n * @constant\n * @type {string}\n * @public\n */\nexport const SHARE_MAP_ID = 'shareMap';\n\nexport const KEPLER_GL_NAME = 'kepler.gl';\n\n// __PACKAGE_VERSION__ is automatically injected by Babel/Webpack during the building process\n// Since we are injecting this during the build process with babel\n// while developing VERSION is not defined, we capture the exception and return\n// an empty string which will allow us to retrieve the latest umd version\nexport const KEPLER_GL_VERSION = '__PACKAGE_VERSION__';\nexport const KEPLER_GL_WEBSITE = 'http://kepler.gl/';\n\nexport const DIMENSIONS = {\n  sidePanel: {\n    width: 300,\n    margin: {top: 20, left: 20, bottom: 30, right: 20},\n    headerHeight: 96\n  },\n  mapControl: {\n    width: 184,\n    padding: 12,\n    mapLegend: {\n      pinned: {\n        bottom: 22,\n        right: 12\n      }\n    }\n  }\n};\n\n/**\n * Theme name that can be passed to `KeplerGl` `prop.theme`.\n * Available themes are `THEME.light` and `THEME.dark`. Default theme is `THEME.dark`\n * @constant\n * @type {object}\n * @public\n * @example\n * ```js\n * const Map = () => <KeplerGl theme={THEME.light} id=\"map\"/>\n * ```\n */\nexport const THEME = keyMirror({\n  light: null,\n  dark: null,\n  base: null\n});\n\nexport const SIDEBAR_PANELS = [\n // {\n //   id: 'layer',\n //   label: 'sidebar.panels.layer',\n //   onClick: null\n // },\n  {\n    id: 'filter',\n    label: 'sidebar.panels.filter',\n    onClick: null\n  },\n // {\n //   id: 'interaction',\n //   label: 'sidebar.panels.interaction',\n //   onClick: null\n // },\n // {\n //   id: 'map',\n //   label: 'sidebar.panels.basemap',\n //   onClick: null\n  //}\n];\n\nexport const PANEL_VIEW_TOGGLES = keyMirror({\n  list: null,\n  byDataset: null\n});\n\n// backward compatibility\nexport const PANELS = SIDEBAR_PANELS;\n\n// MAP STYLES\n\nexport const DEFAULT_BLDG_COLOR = '#D1CEC7';\n\nexport const DEFAULT_BACKGROUND_COLOR = '#000000';\n\n// assists in identifying basemap background layers when auto-determining the backgroundColor\nexport const BASE_MAP_BACKGROUND_LAYER_IDS = ['background', 'bg', 'land', 'water'];\n\nexport const BACKGROUND_LAYER_GROUP_SLUG = 'Background';\n\nexport const THREE_D_BUILDING_LAYER_GROUP_SLUG = '3d building';\n\nexport type DEFAULT_LAYER_GROUP = {\n  slug: string;\n  filter: (value) => boolean;\n  defaultVisibility: boolean;\n  isVisibilityToggleAvailable?: boolean;\n  isMoveToTopAvailable?: boolean;\n  isColorPickerAvailable?: boolean;\n};\n\nexport const BACKGROUND_LAYER_GROUP: DEFAULT_LAYER_GROUP = {\n  slug: BACKGROUND_LAYER_GROUP_SLUG,\n  filter: () => false,\n  defaultVisibility: false,\n  isVisibilityToggleAvailable: false,\n  isMoveToTopAvailable: false,\n  isColorPickerAvailable: true\n};\n\nexport const DEFAULT_LAYER_GROUPS: DEFAULT_LAYER_GROUP[] = [\n  {\n    slug: 'label',\n    filter: ({id}) => id.match(/(?=(label|place-|poi-))/),\n    defaultVisibility: true,\n    isVisibilityToggleAvailable: true,\n    isMoveToTopAvailable: true,\n    isColorPickerAvailable: false\n  },\n  {\n    slug: 'road',\n    filter: ({id}) => id.match(/(?=(road|railway|tunnel|street|bridge))(?!.*label)/),\n    defaultVisibility: true,\n    isVisibilityToggleAvailable: true,\n    isMoveToTopAvailable: true,\n    isColorPickerAvailable: false\n  },\n  {\n    slug: 'border',\n    filter: ({id}) => id.match(/border|boundaries|boundary/),\n    defaultVisibility: false,\n    isVisibilityToggleAvailable: true,\n    isMoveToTopAvailable: true,\n    isColorPickerAvailable: false\n  },\n  {\n    slug: 'building',\n    filter: ({id}) => id.match(/building/),\n    defaultVisibility: true,\n    isVisibilityToggleAvailable: true,\n    isMoveToTopAvailable: true,\n    isColorPickerAvailable: false\n  },\n  {\n    slug: 'water',\n    filter: ({id}) => id.match(/(?=(water|stream|ferry))/),\n    defaultVisibility: true,\n    isVisibilityToggleAvailable: true,\n    isMoveToTopAvailable: true,\n    isColorPickerAvailable: false\n  },\n  {\n    slug: 'land',\n    filter: ({id}) => id.match(/(?=(parks|landcover|industrial|sand|hillshade))/),\n    defaultVisibility: true,\n    isVisibilityToggleAvailable: true,\n    isMoveToTopAvailable: true,\n    isColorPickerAvailable: false\n  },\n  {\n    slug: THREE_D_BUILDING_LAYER_GROUP_SLUG,\n    filter: () => false,\n    defaultVisibility: false,\n    isVisibilityToggleAvailable: true,\n    isMoveToTopAvailable: true,\n    isColorPickerAvailable: true\n  }\n];\n\nexport const BASE_MAP_COLOR_MODES = keyMirror({\n  NONE: null,\n  DARK: null,\n  LIGHT: null\n});\n\nexport const NO_MAP_ID = 'no_map';\n\n// Fallback style to use when styles are being fetched, or when\n// a style fails to fetch\nexport const EMPTY_MAPBOX_STYLE = {\n  version: 8,\n  sources: {},\n  layers: []\n};\n\nexport const NO_BASEMAP_ICON = `${BASEMAP_ICON_PREFIX}/NO_BASEMAP.png`;\n\nexport const DEFAULT_MAP_STYLES: BaseMapStyle[] = [\n  {\n    id: NO_MAP_ID,\n    label: 'No Basemap',\n    url: '',\n    icon: NO_BASEMAP_ICON,\n    layerGroups: [BACKGROUND_LAYER_GROUP],\n    colorMode: BASE_MAP_COLOR_MODES.NONE,\n    style: EMPTY_MAPBOX_STYLE\n  },\n  {\n    id: 'dark-matter',\n    label: 'DarkMatter',\n    url: 'https://basemaps.cartocdn.com/gl/dark-matter-gl-style/style.json',\n    icon: `${BASEMAP_ICON_PREFIX}/DARKMATTER.png`,\n    layerGroups: DEFAULT_LAYER_GROUPS,\n    colorMode: BASE_MAP_COLOR_MODES.DARK,\n    complimentaryStyleId: 'positron'\n  },\n  {\n    id: 'dark-matter-nolabels',\n    label: 'DarkMatterNoLabels',\n    url: 'https://basemaps.cartocdn.com/gl/dark-matter-nolabels-gl-style/style.json',\n    icon: `${BASEMAP_ICON_PREFIX}/DARKMATTER_NOLABELS.png`,\n    layerGroups: DEFAULT_LAYER_GROUPS,\n    colorMode: BASE_MAP_COLOR_MODES.DARK,\n    complimentaryStyleId: 'positron-nolabels'\n  },\n  {\n    id: 'positron',\n    label: 'Positron',\n    url: 'https://basemaps.cartocdn.com/gl/positron-gl-style/style.json',\n    icon: `${BASEMAP_ICON_PREFIX}/POSITRON.png`,\n    layerGroups: DEFAULT_LAYER_GROUPS,\n    colorMode: BASE_MAP_COLOR_MODES.LIGHT,\n    complimentaryStyleId: 'dark-matter'\n  },\n  {\n    id: 'positron-nolabels',\n    label: 'PositronNoLabels',\n    url: 'https://basemaps.cartocdn.com/gl/positron-nolabels-gl-style/style.json',\n    icon: `${BASEMAP_ICON_PREFIX}/POSITRON_NOLABELS.png`,\n    layerGroups: DEFAULT_LAYER_GROUPS,\n    colorMode: BASE_MAP_COLOR_MODES.LIGHT,\n    complimentaryStyleId: 'dark-matter-nolabels'\n  },\n  {\n    id: 'voyager',\n    label: 'Voyager',\n    url: 'https://basemaps.cartocdn.com/gl/voyager-gl-style/style.json',\n    icon: `${BASEMAP_ICON_PREFIX}/VOYAGER.png`,\n    layerGroups: DEFAULT_LAYER_GROUPS,\n    colorMode: BASE_MAP_COLOR_MODES.LIGHT,\n    complimentaryStyleId: 'dark-matter'\n  },\n  {\n    id: 'voyager-nolabels',\n    label: 'VoyagerNoLabels',\n    url: 'https://basemaps.cartocdn.com/gl/voyager-nolabels-gl-style/style.json',\n    icon: `${BASEMAP_ICON_PREFIX}/VOYAGER_NOLABELS.png`,\n    layerGroups: DEFAULT_LAYER_GROUPS,\n    colorMode: BASE_MAP_COLOR_MODES.LIGHT,\n    complimentaryStyleId: 'dark-matter-nolabels'\n  }\n];\n\nexport const GEOJSON_FIELDS = {\n  geojson: ['_geojson', 'all_points', 'geojson']\n};\n\nexport const ICON_FIELDS = {\n  icon: ['icon']\n};\n\nexport const TRIP_POINT_FIELDS: [string, string][] = [\n  ['lat', 'lng'],\n  ['lat', 'lon'],\n  ['lat', 'long'],\n  ['latitude', 'longitude']\n];\n\nexport const ALTITUDE_FIELDS = ['alt', 'altitude'];\nexport const TRIP_ARC_FIELDS = {\n  lat0: 'begintrip',\n  lng0: 'begintrip',\n  lat1: 'dropoff',\n  lng1: 'dropoff'\n};\n\nexport const FILTER_TYPES = keyMirror({\n  range: null,\n  select: null,\n  input: null,\n  timeRange: null,\n  multiSelect: null,\n  polygon: null\n});\n\nexport const FILTER_VIEW_TYPES = keyMirror({\n  side: null,\n  enlarged: null,\n  minified: null\n});\n\nexport const DEFAULT_FILTER_VIEW_TYPE = FILTER_VIEW_TYPES.side;\n\nexport const SCALE_TYPES = keyMirror({\n  ordinal: null,\n  quantile: null,\n  quantize: null,\n  linear: null,\n  sqrt: null,\n  log: null,\n\n  // ordinal domain to linear range\n  point: null\n});\n\nexport const SCALE_FUNC = {\n  [SCALE_TYPES.linear]: scaleLinear,\n  [SCALE_TYPES.quantize]: scaleQuantize,\n  [SCALE_TYPES.quantile]: scaleQuantile,\n  [SCALE_TYPES.ordinal]: scaleOrdinal,\n  [SCALE_TYPES.sqrt]: scaleSqrt,\n  [SCALE_TYPES.log]: scaleLog,\n  [SCALE_TYPES.point]: scalePoint\n};\n\nexport const ALL_FIELD_TYPES = keyMirror({\n  boolean: null,\n  date: null,\n  geojson: null,\n  integer: null,\n  real: null,\n  string: null,\n  timestamp: null,\n  point: null,\n  array: null,\n  object: null,\n  geoarrow: null\n});\n\n// Data Table\nexport const SORT_ORDER = keyMirror({\n  ASCENDING: null,\n  DESCENDING: null,\n  UNSORT: null\n});\n\nexport const TABLE_OPTION = keyMirror({\n  SORT_ASC: null,\n  SORT_DES: null,\n  UNSORT: null,\n  PIN: null,\n  UNPIN: null,\n  COPY: null,\n  FORMAT_COLUMN: null\n});\n\nexport const TABLE_OPTION_LIST = [\n  {\n    value: TABLE_OPTION.SORT_ASC,\n    display: 'Sort Ascending',\n    icon: 'ArrowUp',\n    condition: props => props.sortMode !== SORT_ORDER.ASCENDING\n  },\n  {\n    value: TABLE_OPTION.SORT_DES,\n    display: 'Sort Descending',\n    icon: 'ArrowDown',\n    condition: props => props.sortMode !== SORT_ORDER.DESCENDING\n  },\n  {\n    value: TABLE_OPTION.UNSORT,\n    display: 'Unsort Column',\n    icon: 'Cancel',\n    condition: props => props.isSorted\n  },\n  {\n    value: TABLE_OPTION.PIN,\n    display: 'Pin Column',\n    icon: 'Pin',\n    condition: props => !props.isPinned\n  },\n  {\n    value: TABLE_OPTION.UNPIN,\n    display: 'Unpin Column',\n    icon: 'Cancel',\n    condition: props => props.isPinned\n  },\n  {value: TABLE_OPTION.COPY, display: 'Copy Column', icon: 'Clipboard'},\n  {value: TABLE_OPTION.FORMAT_COLUMN, display: 'Format Column', icon: 'Hash'}\n];\n\nconst YELLOW = '248, 194, 28';\nconst PINK = '242, 152, 163';\nconst PURPLE = '160, 106, 206';\nconst BLUE = '140, 210, 205';\nconst BLUE2 = '106, 160, 206';\nconst BLUE3 = '0, 172, 237';\nconst GREEN = '106, 160, 56';\nconst GREEN2 = '74, 165, 150';\nconst RED = '237, 88, 106';\nconst ORANGE = '231, 110, 58';\n\nexport const FIELD_TYPE_DISPLAY = {\n  [ALL_FIELD_TYPES.boolean]: {\n    label: 'bool',\n    color: PINK\n  },\n  [ALL_FIELD_TYPES.date]: {\n    label: 'date',\n    color: PURPLE\n  },\n  [ALL_FIELD_TYPES.geojson]: {\n    label: 'geo',\n    color: BLUE2\n  },\n  [ALL_FIELD_TYPES.geoarrow]: {\n    label: 'geo',\n    color: BLUE2\n  },\n  [ALL_FIELD_TYPES.integer]: {\n    label: 'int',\n    color: YELLOW\n  },\n  [ALL_FIELD_TYPES.real]: {\n    label: 'float',\n    color: YELLOW\n  },\n  [ALL_FIELD_TYPES.string]: {\n    label: 'string',\n    color: BLUE\n  },\n  [ALL_FIELD_TYPES.timestamp]: {\n    label: 'time',\n    color: GREEN\n  },\n  // field pairs\n  [ALL_FIELD_TYPES.point]: {\n    label: 'point',\n    color: BLUE3\n  },\n  [ALL_FIELD_TYPES.array]: {\n    label: 'array',\n    color: ORANGE\n  },\n  [ALL_FIELD_TYPES.object]: {\n    label: 'object',\n    color: GREEN2\n  }\n};\n\nexport const FIELD_COLORS = {\n  default: RED\n};\nexport const HIGHLIGH_COLOR_3D: RGBAColor = [255, 255, 255, 60];\nexport const CHANNEL_SCALES = keyMirror({\n  color: null,\n  radius: null,\n  size: null,\n  colorAggr: null,\n  sizeAggr: null\n});\n\nexport const AGGREGATION_TYPES: {\n  // default\n  count: 'count';\n  // linear\n  average: 'average';\n  maximum: 'maximum';\n  minimum: 'minimum';\n  median: 'median';\n  stdev: 'stdev';\n  sum: 'sum';\n  variance: 'variance';\n  // ordinal\n  mode: 'mode';\n  countUnique: 'countUnique';\n} = {\n  // default\n  count: 'count',\n  // linear\n  average: 'average',\n  maximum: 'maximum',\n  minimum: 'minimum',\n  median: 'median',\n  stdev: 'stdev',\n  sum: 'sum',\n  variance: 'variance',\n  // ordinal\n  mode: 'mode',\n  countUnique: 'countUnique'\n};\n\nexport const AGGREGATION_TYPE_OPTIONS: {id: string; label: string}[] = Object.entries(\n  AGGREGATION_TYPES\n).map(([key, value]) => ({\n  id: key,\n  label:\n    key === 'stdev'\n      ? 'Std Deviation'\n      : key === 'countUnique'\n      ? 'Count Unique'\n      : typeof value === 'string'\n      ? value.charAt(0).toUpperCase() + value.slice(1)\n      : value\n}));\n\nexport const linearFieldScaleFunctions = {\n  [CHANNEL_SCALES.color]: [SCALE_TYPES.quantize, SCALE_TYPES.quantile],\n  [CHANNEL_SCALES.radius]: [SCALE_TYPES.sqrt],\n  [CHANNEL_SCALES.size]: [SCALE_TYPES.linear, SCALE_TYPES.sqrt, SCALE_TYPES.log]\n};\n\nexport const linearFieldAggrScaleFunctions = {\n  [CHANNEL_SCALES.colorAggr]: {\n    [AGGREGATION_TYPES.average]: [SCALE_TYPES.quantize, SCALE_TYPES.quantile],\n    [AGGREGATION_TYPES.maximum]: [SCALE_TYPES.quantize, SCALE_TYPES.quantile],\n    [AGGREGATION_TYPES.minimum]: [SCALE_TYPES.quantize, SCALE_TYPES.quantile],\n    [AGGREGATION_TYPES.median]: [SCALE_TYPES.quantize, SCALE_TYPES.quantile],\n    [AGGREGATION_TYPES.stdev]: [SCALE_TYPES.quantize, SCALE_TYPES.quantile],\n    [AGGREGATION_TYPES.sum]: [SCALE_TYPES.quantize, SCALE_TYPES.quantile],\n    [AGGREGATION_TYPES.variance]: [SCALE_TYPES.quantize, SCALE_TYPES.quantile]\n  },\n\n  [CHANNEL_SCALES.sizeAggr]: {\n    [AGGREGATION_TYPES.average]: [SCALE_TYPES.linear, SCALE_TYPES.sqrt, SCALE_TYPES.log],\n    [AGGREGATION_TYPES.maximum]: [SCALE_TYPES.linear, SCALE_TYPES.sqrt, SCALE_TYPES.log],\n    [AGGREGATION_TYPES.minimum]: [SCALE_TYPES.linear, SCALE_TYPES.sqrt, SCALE_TYPES.log],\n    [AGGREGATION_TYPES.median]: [SCALE_TYPES.linear, SCALE_TYPES.sqrt, SCALE_TYPES.log],\n    [AGGREGATION_TYPES.stdev]: [SCALE_TYPES.linear, SCALE_TYPES.sqrt, SCALE_TYPES.log],\n    [AGGREGATION_TYPES.sum]: [SCALE_TYPES.linear, SCALE_TYPES.sqrt, SCALE_TYPES.log],\n    [AGGREGATION_TYPES.variance]: [SCALE_TYPES.linear, SCALE_TYPES.sqrt, SCALE_TYPES.log]\n  }\n};\n\nexport const ordinalFieldScaleFunctions = {\n  [CHANNEL_SCALES.color]: [SCALE_TYPES.ordinal],\n  [CHANNEL_SCALES.radius]: [SCALE_TYPES.point],\n  [CHANNEL_SCALES.size]: [SCALE_TYPES.point]\n};\n\nexport const ordinalFieldAggrScaleFunctions = {\n  // [CHANNEL_SCALES.colorAggr]: [SCALE_TYPES.ordinal, SCALE_TYPES.linear],\n  [CHANNEL_SCALES.colorAggr]: {\n    [AGGREGATION_TYPES.mode]: [SCALE_TYPES.ordinal],\n    [AGGREGATION_TYPES.countUnique]: [SCALE_TYPES.quantize, SCALE_TYPES.quantile]\n  },\n\n  // Currently doesn't support yet\n  [CHANNEL_SCALES.sizeAggr]: {}\n};\n\nexport const notSupportedScaleOpts = {\n  [CHANNEL_SCALES.color]: [],\n  [CHANNEL_SCALES.radius]: [],\n  [CHANNEL_SCALES.size]: []\n};\n\nexport const notSupportAggrOpts = {\n  [CHANNEL_SCALES.colorAggr]: {},\n  [CHANNEL_SCALES.sizeAggr]: {}\n};\n\n/**\n * Default aggregation are based on ocunt\n */\nexport const DEFAULT_AGGREGATION = {\n  [CHANNEL_SCALES.colorAggr]: {\n    [AGGREGATION_TYPES.count]: [SCALE_TYPES.quantize, SCALE_TYPES.quantile]\n  },\n  [CHANNEL_SCALES.sizeAggr]: {\n    [AGGREGATION_TYPES.count]: [SCALE_TYPES.linear, SCALE_TYPES.sqrt, SCALE_TYPES.log]\n  }\n};\n\n/**\n * Define what type of scale operation is allowed on each type of fields\n */\nexport const FIELD_OPTS = {\n  [ALL_FIELD_TYPES.string]: {\n    type: 'categorical',\n    scale: {\n      ...ordinalFieldScaleFunctions,\n      ...ordinalFieldAggrScaleFunctions\n    },\n    format: {\n      legend: d => d,\n      tooltip: []\n    }\n  },\n  [ALL_FIELD_TYPES.real]: {\n    type: 'numerical',\n    scale: {\n      ...linearFieldScaleFunctions,\n      ...linearFieldAggrScaleFunctions\n    },\n    format: {\n      legend: d => d,\n      tooltip: [\n        TOOLTIP_FORMAT_TYPES.NONE,\n        TOOLTIP_FORMAT_TYPES.DECIMAL,\n        TOOLTIP_FORMAT_TYPES.PERCENTAGE\n      ]\n    }\n  },\n  [ALL_FIELD_TYPES.timestamp]: {\n    type: 'time',\n    scale: {\n      ...linearFieldScaleFunctions,\n      ...notSupportAggrOpts\n    },\n    format: {\n      legend: d => d,\n      tooltip: [\n        TOOLTIP_FORMAT_TYPES.NONE,\n        TOOLTIP_FORMAT_TYPES.DATE,\n        TOOLTIP_FORMAT_TYPES.DATE_TIME\n      ]\n    }\n  },\n  [ALL_FIELD_TYPES.integer]: {\n    type: 'numerical',\n    scale: {\n      ...linearFieldScaleFunctions,\n      ...linearFieldAggrScaleFunctions\n    },\n    format: {\n      legend: d => d,\n      tooltip: [\n        TOOLTIP_FORMAT_TYPES.NONE,\n        TOOLTIP_FORMAT_TYPES.DECIMAL,\n        TOOLTIP_FORMAT_TYPES.PERCENTAGE\n      ]\n    }\n  },\n  [ALL_FIELD_TYPES.boolean]: {\n    type: 'boolean',\n    scale: {\n      ...ordinalFieldScaleFunctions,\n      ...ordinalFieldAggrScaleFunctions\n    },\n    format: {\n      legend: d => d,\n      tooltip: [TOOLTIP_FORMAT_TYPES.NONE, TOOLTIP_FORMAT_TYPES.BOOLEAN]\n    }\n  },\n  [ALL_FIELD_TYPES.date]: {\n    type: 'time',\n    scale: {\n      ...ordinalFieldScaleFunctions,\n      ...ordinalFieldAggrScaleFunctions\n    },\n    format: {\n      legend: d => d,\n      tooltip: [TOOLTIP_FORMAT_TYPES.NONE, TOOLTIP_FORMAT_TYPES.DATE]\n    }\n  },\n  [ALL_FIELD_TYPES.geojson]: {\n    type: 'geometry',\n    scale: {\n      ...notSupportedScaleOpts,\n      ...notSupportAggrOpts\n    },\n    format: {\n      legend: d => '...',\n      tooltip: []\n    }\n  },\n  [ALL_FIELD_TYPES.geoarrow]: {\n    type: 'geometry',\n    scale: {\n      ...notSupportedScaleOpts,\n      ...notSupportAggrOpts\n    },\n    format: {\n      legend: d => '...',\n      tooltip: []\n    }\n  },\n  [ALL_FIELD_TYPES.object]: {\n    type: 'numerical',\n    scale: {},\n    format: {\n      legend: d => '...',\n      tooltip: []\n    }\n  },\n  [ALL_FIELD_TYPES.array]: {\n    type: 'numerical',\n    scale: {},\n    format: {\n      legend: d => '...',\n      tooltip: []\n    }\n  }\n};\n\nexport const CHANNEL_SCALE_SUPPORTED_FIELDS = Object.keys(CHANNEL_SCALES).reduce(\n  (accu, key) => ({\n    ...accu,\n    [key]: Object.keys(FIELD_OPTS).filter(\n      ft => FIELD_OPTS[ft].scale[key] && Object.keys(FIELD_OPTS[ft].scale[key]).length\n    )\n  }),\n  {} as {[id: string]: string[]}\n);\n\nexport const DEFAULT_LAYER_COLOR = {\n  tripArc: '#9226C6',\n  begintrip_lat: '#1E96BE',\n  dropoff_lat: '#FF991F',\n  request_lat: '#52A353'\n};\n\n// let user pass in default tooltip fields\nexport const DEFAULT_TOOLTIP_FIELDS: any[] = [];\n\nexport const NO_VALUE_COLOR: RGBAColor = [0, 0, 0, 0];\n\nexport const DEFAULT_PICKING_RADIUS = 3;\n\nexport const OVERLAY_BLENDINGS = {\n  normal: {\n    label: 'overlayBlending.normal',\n    value: 'normal'\n  },\n  screen: {\n    label: 'overlayBlending.screen',\n    value: 'screen'\n  },\n  darken: {\n    label: 'overlayBlending.darken',\n    value: 'darken'\n  }\n};\n\nexport const LAYER_BLENDINGS = {\n  additive: {\n    label: 'layerBlending.additive',\n    blendFunc: ['SRC_ALPHA', 'DST_ALPHA'],\n    blendEquation: 'FUNC_ADD'\n  },\n  normal: {\n    // reference to\n    // https://limnu.com/webgl-blending-youre-probably-wrong/\n    label: 'layerBlending.normal',\n    blendFunc: ['SRC_ALPHA', 'ONE_MINUS_SRC_ALPHA', 'ONE', 'ONE_MINUS_SRC_ALPHA'],\n    blendEquation: ['FUNC_ADD', 'FUNC_ADD']\n  },\n  subtractive: {\n    label: 'layerBlending.subtractive',\n    blendFunc: ['ONE', 'ONE_MINUS_DST_COLOR', 'SRC_ALPHA', 'DST_ALPHA'],\n    blendEquation: ['FUNC_SUBTRACT', 'FUNC_ADD']\n  }\n};\n\nexport const MAX_DEFAULT_TOOLTIPS = 5;\n\nexport const RESOLUTIONS = keyMirror({\n  ONE_X: null,\n  TWO_X: null\n});\n\nexport const EXPORT_IMG_RATIOS = keyMirror({\n  SCREEN: null,\n  FOUR_BY_THREE: null,\n  SIXTEEN_BY_NINE: null,\n  CUSTOM: null\n});\n\nexport type ExportImage = {\n  ratio: keyof typeof EXPORT_IMG_RATIOS;\n  resolution: keyof typeof RESOLUTIONS;\n  legend: boolean;\n  mapH: number;\n  mapW: number;\n  imageSize: {\n    zoomOffset: number;\n    scale: number;\n    imageW: number;\n    imageH: number;\n  };\n  // exporting state\n  imageDataUri: string;\n  exporting: boolean;\n  processing: boolean;\n  error: Error | false;\n  escapeXhtmlForWebpack?: boolean;\n  // This field was not in the .d.ts file\n  center: boolean;\n};\n\nexport type ImageRatioOption = {\n  id: keyof typeof EXPORT_IMG_RATIOS;\n  label: string;\n  hidden?: boolean;\n  getSize: (screenW: number, screenH: number) => {width: number; height: number};\n};\n\nexport const ScreenRatioOption: ImageRatioOption = {\n  id: EXPORT_IMG_RATIOS.SCREEN,\n  label: 'modal.exportImage.ratioOriginalScreen',\n  getSize: (screenW, screenH) => ({width: screenW, height: screenH})\n};\nexport const CustomRatioOption: ImageRatioOption = {\n  id: EXPORT_IMG_RATIOS.CUSTOM,\n  hidden: true,\n  label: 'modal.exportImage.ratioCustom',\n  getSize: (mapW, mapH) => ({width: mapW, height: mapH})\n};\nexport const FourByThreeRatioOption: ImageRatioOption = {\n  id: EXPORT_IMG_RATIOS.FOUR_BY_THREE,\n  label: 'modal.exportImage.ratio4_3',\n  getSize: (screenW, screenH) => ({\n    width: screenW,\n    height: Math.round(screenW * 0.75)\n  })\n};\nexport const SixteenByNineRatioOption: ImageRatioOption = {\n  id: EXPORT_IMG_RATIOS.SIXTEEN_BY_NINE,\n  label: 'modal.exportImage.ratio16_9',\n  getSize: (screenW, screenH) => ({\n    width: screenW,\n    height: Math.round(screenW * 0.5625)\n  })\n};\n\nexport const EXPORT_IMG_RATIO_OPTIONS: ReadonlyArray<ImageRatioOption> = [\n  ScreenRatioOption,\n  CustomRatioOption,\n  FourByThreeRatioOption,\n  SixteenByNineRatioOption\n];\n\nexport type ImageResolutionOption = {\n  id: keyof typeof RESOLUTIONS;\n  label: string;\n  available: boolean;\n  scale: number;\n  getSize: (screenW: number, screenH: number) => {width: number; height: number};\n};\n\nexport const OneXResolutionOption: ImageResolutionOption = {\n  id: RESOLUTIONS.ONE_X,\n  label: '1x',\n  available: true,\n  scale: 1,\n  getSize: (screenW, screenH) => ({\n    width: screenW,\n    height: screenH\n  })\n};\n\nexport const TwoXResolutionOption: ImageResolutionOption = {\n  id: RESOLUTIONS.TWO_X,\n  label: '2x',\n  available: true,\n  scale: 2,\n  getSize: (screenW, screenH) => ({\n    width: screenW * 2,\n    height: screenH * 2\n  })\n};\n\nexport const EXPORT_IMG_RESOLUTION_OPTIONS: ReadonlyArray<ImageResolutionOption> = [\n  OneXResolutionOption,\n  TwoXResolutionOption\n];\n\nexport const EXPORT_DATA_TYPE = keyMirror({\n  CSV: null\n  // SHAPEFILE: null,\n  // JSON: null,\n  // GEOJSON: null,\n  // TOPOJSON: null\n});\n\nexport const EXPORT_DATA_TYPE_OPTIONS = [\n  {\n    id: EXPORT_DATA_TYPE.CSV,\n    label: EXPORT_DATA_TYPE.CSV.toLowerCase(),\n    available: true\n  }\n  // {\n  //   id: EXPORT_DATA_TYPE.SHAPEFILE,\n  //   label: 'shapefile',\n  //   available: false\n  // },\n  // {\n  //   id: EXPORT_DATA_TYPE.JSON,\n  //   label: 'json',\n  //   available: false\n  // },\n  // {\n  //   id: EXPORT_DATA_TYPE.GEOJSON,\n  //   label: 'geojson',\n  //   available: false\n  // },\n  // {\n  //   id: EXPORT_DATA_TYPE.TOPOJSON,\n  //   label: 'topojson',\n  //   available: false\n  // }\n];\n\n// Export map types\nexport const EXPORT_MAP_FORMATS = keyMirror({\n  HTML: null,\n  JSON: null\n});\n\nexport const EXPORT_HTML_MAP_MODES = keyMirror({\n  READ: null,\n  EDIT: null\n});\n\n// Export map options\nexport const EXPORT_MAP_FORMAT_OPTIONS = Object.entries(EXPORT_MAP_FORMATS).map(\n  (entry: [string, any]) => ({\n    id: entry[0],\n    label: entry[1].toLowerCase(),\n    available: true\n  })\n);\n\nexport function getHTMLMapModeTileUrl(mode: string): string {\n  return `https://d1a3f4spazzrp4.cloudfront.net/kepler.gl/documentation/map-${mode.toLowerCase()}-mode.png`;\n}\n\nexport const EXPORT_HTML_MAP_MODE_OPTIONS = Object.entries(EXPORT_HTML_MAP_MODES).map(\n  (entry: [string, any]) => ({\n    id: entry[0],\n    label: `modal.exportMap.html.${entry[1].toLowerCase()}`,\n    available: true,\n    url: getHTMLMapModeTileUrl(entry[1])\n  })\n);\n\nexport const DEFAULT_UUID_COUNT = 6;\n\nexport const DEFAULT_NOTIFICATION_MESSAGE = 'MESSAGE_NOT_PROVIDED';\n\nexport const DEFAULT_NOTIFICATION_TYPES = keyMirror({\n  info: null,\n  error: null,\n  warning: null,\n  success: null\n});\n\nexport const DEFAULT_NOTIFICATION_TOPICS = keyMirror({\n  global: null,\n  file: null\n});\n\n// Minimum time between identical notifications about deck.gl errors\nexport const THROTTLE_NOTIFICATION_TIME = 330;\n\n// Animation\nexport const BASE_SPEED = 600;\nexport const FPS = 60;\n\n/**\n * 4 Animation Window Types\n * 1. free\n *  |->  |->\n * Current time is a fixed range, animation controller calls next animation frames continuously to animation a moving window\n * The increment id based on domain / BASE_SPEED * SPEED\n *\n * 2. incremental\n * |    |->\n * Same as free, current time is a growing range, only the max value of range increment during animation.\n * The increment is also based on domain / BASE_SPEED * SPEED\n *\n * 3. point\n * o -> o\n * Current time is a point, animation controller calls next animation frame continuously to animation a moving point\n * The increment is based on domain / BASE_SPEED * SPEED\n *\n * 4. interval\n * o ~> o\n * Current time is a point. An array of sorted time steps need to be provided.\n * animation controller calls next animation at a interval when the point jumps to the next step\n */\nexport const ANIMATION_WINDOW = keyMirror({\n  free: null,\n  incremental: null,\n  point: null,\n  interval: null\n});\nexport const DEFAULT_TIME_FORMAT = 'MM/DD/YY HH:mm:ssa';\nexport const SPEED_CONTROL_RANGE: [number, number] = [0, 10];\nexport const SPEED_CONTROL_STEP = 0.001;\n\n// Geocoder\nexport const GEOCODER_DATASET_NAME = 'geocoder_dataset';\nexport const GEOCODER_LAYER_ID = 'geocoder_layer';\nexport const GEOCODER_GEO_OFFSET = 0.05;\nexport const GEOCODER_ICON_COLOR: [number, number, number] = [255, 0, 0];\nexport const GEOCODER_ICON_SIZE = 80;\n\n// Editor\nexport const EDITOR_LAYER_ID = 'kepler_editor_layer';\nexport const EDITOR_LAYER_PICKING_RADIUS = 6;\nexport const EDITOR_MODES = {\n  DRAW_POLYGON: 'DRAW_POLYGON',\n  DRAW_RECTANGLE: 'DRAW_RECTANGLE',\n  EDIT: 'EDIT_VERTEX'\n};\n\nexport const PLOT_TYPES = keyMirror({\n  histogram: null,\n  lineChart: null\n});\n\n// Filter\nexport const INIT_FILTER_ITEMS_IN_DROPDOWN = 100;\n\n// GPU Filtering\n/**\n * Max number of filter value buffers that deck.gl provides\n */\nexport const MAX_GPU_FILTERS = 4;\nexport const MAP_THUMBNAIL_DIMENSION = {\n  width: 300,\n  height: 200\n};\n\nexport const MAP_INFO_CHARACTER = {\n  title: 100,\n  description: 100\n};\n\n// Load data\nexport const LOADING_METHODS = keyMirror({\n  upload: null,\n  storage: null\n});\n\nexport const DEFAULT_FEATURE_FLAGS = {};\n\nexport const DATASET_FORMATS = keyMirror({\n  row: null,\n  geojson: null,\n  csv: null,\n  keplergl: null,\n  arrow: null\n});\n\nexport const MAP_CONTROLS = keyMirror({\n  visibleLayers: null,\n  mapLegend: null,\n  toggle3d: null,\n  splitMap: null,\n  mapDraw: null,\n  mapLocale: null,\n  effect: null\n});\n\n/**\n * A multiplier for screen-space width/scale for Arc, Line, Icon and Text layers.\n * Required in order to maintain the same appearance after upgrading to deck.gl v8.5.\n * https://github.com/visgl/deck.gl/blob/master/docs/upgrade-guide.md\n */\nexport const PROJECTED_PIXEL_SIZE_MULTIPLIER = 2 / 3;\n\n/**\n * Maximum value for text outline width\n */\nexport const TEXT_OUTLINE_MULTIPLIER = 5;\n\nexport const dataTestIds: Record<string, string> = {\n  infoIcon: 'info-icon',\n  warningIcon: 'warning-icon',\n  errorIcon: 'error-icon',\n  successIcon: 'success-icon',\n  checkmarkIcon: 'checkmark-icon',\n  sortableLayerItem: 'sortable-layer-item',\n  staticLayerItem: 'static-layer-item',\n  layerTitleEditor: 'layer__title__editor',\n  removeLayerAction: 'remove-layer-action',\n  layerPanel: 'layer-panel',\n  sortableEffectItem: 'sortable-effect-item',\n  staticEffectItem: 'static-effect-item',\n  providerLoading: 'provider-loading',\n  providerMapInfoPanel: 'provider-map-info-panel',\n  providerSelect: 'provider-select',\n  cloudHeader: 'cloud-header',\n  providerShareMap: 'provider-share-map'\n};\n\n// Effects\nexport const DEFAULT_TIMEZONE = 'UTC';\nexport const DEFAULT_POST_PROCESSING_EFFECT_TYPE: string = 'ink';\n\nexport const DEFAULT_LIGHT_COLOR: [number, number, number] = [255, 255, 255];\nexport const DEFAULT_LIGHT_INTENSITY = 1;\nexport const DEFAULT_SHADOW_INTENSITY = 0.5;\nexport const DEFAULT_SHADOW_COLOR: [number, number, number] = [0, 0, 0];\n\nexport const LIGHT_AND_SHADOW_EFFECT_TIME_MODES = {\n  pick: 'pick' as 'pick',\n  current: 'current' as 'current',\n  animation: 'animation' as 'animation'\n};\nexport type LightAndShadowEffectTimeMode = 'pick' | 'current' | 'animation';\nexport const DEFAULT_LIGHT_AND_SHADOW_PROPS: {\n  timestamp: number;\n  timeMode: LightAndShadowEffectTimeMode;\n  shadowIntensity: number;\n  shadowColor: [number, number, number];\n  sunLightColor: [number, number, number];\n  sunLightIntensity: number;\n  ambientLightColor: [number, number, number];\n  ambientLightIntensity: number;\n} = {\n  timestamp: Date.now(),\n  timeMode: LIGHT_AND_SHADOW_EFFECT_TIME_MODES.pick as LightAndShadowEffectTimeMode,\n  shadowIntensity: DEFAULT_SHADOW_INTENSITY,\n  shadowColor: [...DEFAULT_SHADOW_COLOR] as [number, number, number],\n  sunLightColor: [...DEFAULT_LIGHT_COLOR] as [number, number, number],\n  sunLightIntensity: DEFAULT_LIGHT_INTENSITY,\n  ambientLightColor: [...DEFAULT_LIGHT_COLOR] as [number, number, number],\n  ambientLightIntensity: DEFAULT_LIGHT_INTENSITY\n};\n\nexport const LIGHT_AND_SHADOW_EFFECT: EffectDescription = {\n  type: 'lightAndShadow',\n  name: 'Light & Shadow',\n  parameters: [\n    {name: 'timestamp', min: 0, max: Number.MAX_SAFE_INTEGER},\n    {name: 'shadowIntensity', min: 0, max: 1, defaultValue: DEFAULT_SHADOW_INTENSITY},\n    {name: 'sunLightIntensity', min: 0, max: 1, defaultValue: DEFAULT_LIGHT_INTENSITY},\n    {name: 'ambientLightIntensity', min: 0, max: 1, defaultValue: DEFAULT_LIGHT_INTENSITY},\n    {name: 'shadowColor', type: 'color', min: 0, max: 255, defaultValue: DEFAULT_SHADOW_COLOR},\n    {name: 'sunLightColor', type: 'color', min: 0, max: 255, defaultValue: DEFAULT_LIGHT_COLOR},\n    {name: 'ambientLightColor', type: 'color', min: 0, max: 255, defaultValue: DEFAULT_LIGHT_COLOR}\n  ]\n};\n\nexport const POSTPROCESSING_EFFECTS: {[key: string]: EffectDescription} = {\n  ink: {\n    type: 'ink',\n    name: 'Ink',\n    parameters: [{name: 'strength', min: 0, max: 1}]\n  },\n  brightnessContrast: {\n    type: 'brightnessContrast',\n    name: 'Brightness & Contrast',\n    parameters: [\n      {name: 'brightness', min: -1, max: 1},\n      {name: 'contrast', min: -1, max: 1}\n    ]\n  },\n  hueSaturation: {\n    type: 'hueSaturation',\n    name: 'Hue & Saturation',\n    parameters: [\n      {name: 'hue', min: -1, max: 1},\n      {name: 'saturation', defaultValue: 0.25, min: -1, max: 1}\n    ]\n  },\n  vibrance: {\n    type: 'vibrance',\n    name: 'Vibrance',\n    parameters: [{name: 'amount', defaultValue: 0.5, min: -1, max: 1}]\n  },\n  sepia: {\n    type: 'sepia',\n    name: 'Sepia',\n    parameters: [{name: 'amount', min: 0, max: 1}]\n  },\n  dotScreen: {\n    type: 'dotScreen',\n    name: 'Dot Screen',\n    parameters: [\n      {\n        name: 'angle',\n        min: 0,\n        max: Math.PI / 2\n      },\n      {\n        name: 'size',\n        min: 1,\n        max: 20\n      },\n      {\n        name: 'center',\n        type: 'array',\n        label: ['Center X', 'Center Y'],\n        defaultValue: [0.5, 0.5],\n        min: 0,\n        max: 1\n      }\n    ]\n  },\n  colorHalftone: {\n    type: 'colorHalftone',\n    name: 'Color Halftone',\n    parameters: [\n      {\n        name: 'angle',\n        min: 0,\n        max: Math.PI / 2\n      },\n      {\n        name: 'size',\n        min: 1,\n        max: 20\n      },\n      {\n        name: 'center',\n        type: 'array',\n        label: ['Center X', 'Center Y'],\n        defaultValue: [0.5, 0.5],\n        min: 0,\n        max: 1\n      }\n    ]\n  },\n  noise: {\n    type: 'noise',\n    name: 'Noise',\n    parameters: [{name: 'amount', min: 0, max: 1}]\n  },\n  triangleBlur: {\n    type: 'triangleBlur',\n    name: 'Blur (Triangle)',\n    parameters: [{name: 'radius', min: 0, max: 100}]\n  },\n  zoomBlur: {\n    type: 'zoomBlur',\n    name: 'Blur (Zoom)',\n    parameters: [\n      {\n        name: 'strength',\n        defaultValue: 0.05,\n        min: 0,\n        max: 1\n      },\n      {\n        name: 'center',\n        type: 'array',\n        label: ['Center X', 'Center Y'],\n        defaultValue: [0.5, 0.5],\n        min: 0,\n        max: 1\n      }\n    ]\n  },\n  tiltShift: {\n    type: 'tiltShift',\n    name: 'Blur (Tilt Shift)',\n    parameters: [\n      {\n        name: 'blurRadius',\n        label: 'Blur',\n        min: 0,\n        max: 50\n      },\n      {\n        name: 'gradientRadius',\n        label: 'Gradient',\n        min: 0,\n        max: 400\n      },\n      {\n        name: 'start',\n        type: 'array',\n        label: ['Start', false],\n        defaultValue: [0.0, 0.0],\n        min: 0,\n        max: 1\n      },\n      {\n        name: 'end',\n        type: 'array',\n        label: ['End', false],\n        defaultValue: [1, 1],\n        min: 0,\n        max: 1\n      }\n    ]\n  },\n  edgeWork: {\n    type: 'edgeWork',\n    name: 'Edge work',\n    parameters: [{name: 'radius', min: 1, max: 50}]\n  },\n  vignette: {\n    type: 'vignette',\n    name: 'Vignette',\n    parameters: [\n      {name: 'amount', min: 0, max: 1},\n      {name: 'radius', min: 0, max: 1}\n    ]\n  },\n  magnify: {\n    type: 'magnify',\n    name: 'Magnify',\n    parameters: [\n      {\n        name: 'screenXY',\n        type: 'array',\n        label: ['Position X', 'Position Y'],\n        defaultValue: [0.5, 0.5],\n        min: 0,\n        max: 1\n      },\n      {\n        name: 'radiusPixels',\n        label: 'Size',\n        min: 10,\n        max: 500\n      },\n      {\n        name: 'zoom',\n        min: 0.5,\n        max: 50\n      },\n      {\n        name: 'borderWidthPixels',\n        label: 'Border Width',\n        defaultValue: 3,\n        min: 0,\n        max: 50\n      }\n    ]\n  },\n  hexagonalPixelate: {\n    type: 'hexagonalPixelate',\n    name: 'Hexagonal Pixelate',\n    parameters: [{name: 'scale', defaultValue: 20, min: 1, max: 50}]\n  }\n};\n\nexport const EFFECT_DESCRIPTIONS: EffectDescription[] = [\n  LIGHT_AND_SHADOW_EFFECT,\n  ...Object.keys(POSTPROCESSING_EFFECTS).map(keyName => POSTPROCESSING_EFFECTS[keyName])\n];\n\nexport type EffectType =\n  | 'ink'\n  | 'brightnessContrast'\n  | 'hueSaturation'\n  | 'vibrance'\n  | 'sepia'\n  | 'dotScreen'\n  | 'colorHalftone'\n  | 'noise'\n  | 'triangleBlur'\n  | 'zoomBlur'\n  | 'tiltShift'\n  | 'edgeWork'\n  | 'vignette'\n  | 'magnify'\n  | 'hexagonalPixelate'\n  | 'lightAndShadow';\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport keyMirror from 'keymirror';\n\nimport {ColorRange, DEFAULT_COLOR_RANGE} from './color-ranges';\nimport {AGGREGATION_TYPES} from './default-settings';\n\nimport {\n  ColorUI,\n  LayerTextConfig,\n  LayerTextLabel,\n  LayerVisConfigSettings,\n  RGBAColor\n} from '@kepler.gl/types';\n\nexport type AggregationTypes = keyof typeof AGGREGATION_TYPES;\n\nexport const PROPERTY_GROUPS = keyMirror({\n  color: null,\n  stroke: null,\n  radius: null,\n  height: null,\n  angle: null,\n  // for heatmap aggregation\n  cell: null,\n  precision: null,\n  display: null\n});\n\nexport const DEFAULT_LAYER_OPACITY = 0.8;\nexport const DEFAULT_HIGHLIGHT_COLOR: RGBAColor = [252, 242, 26, 255];\nexport const DEFAULT_LAYER_LABEL = 'new layer';\nexport {DEFAULT_COLOR_RANGE};\n\nexport const DEFAULT_TEXT_LABEL: LayerTextLabel = {\n  field: null,\n  color: [255, 255, 255],\n  size: 18,\n  offset: [0, 0],\n  anchor: 'start',\n  alignment: 'center',\n  outlineWidth: 0,\n  outlineColor: [255, 0, 0, 255],\n  background: false,\n  backgroundColor: [0, 0, 200, 255]\n};\n\nexport const DEFAULT_CUSTOM_PALETTE: ColorRange = {\n  name: 'color.customPalette',\n  type: 'custom',\n  category: 'Custom',\n  colors: []\n};\n\nexport const UNKNOWN_COLOR_KEY = '__unknownColor__';\n\nexport const DEFAULT_COLOR_UI: ColorUI = {\n  // customPalette in edit\n  customPalette: DEFAULT_CUSTOM_PALETTE,\n  // show color sketcher modal\n  showSketcher: false,\n  // show color range selection panel\n  showDropdown: false,\n  // color range selector config\n  colorRangeConfig: {\n    type: 'all',\n    steps: 6,\n    reversed: false,\n    custom: false\n  }\n};\n\nexport const LAYER_VIS_CONFIGS: LayerVisConfigSettings = {\n  thickness: {\n    type: 'number',\n    defaultValue: 2,\n    label: 'layerVisConfigs.strokeWidth',\n    isRanged: false,\n    range: [0, 100],\n    step: 0.1,\n    group: PROPERTY_GROUPS.stroke,\n    property: 'thickness',\n    allowCustomValue: true\n  },\n  strokeWidthRange: {\n    type: 'number',\n    defaultValue: [0, 10],\n    label: 'layerVisConfigs.strokeWidthRange',\n    isRanged: true,\n    range: [0, 200],\n    step: 0.1,\n    group: PROPERTY_GROUPS.stroke,\n    property: 'sizeRange',\n    allowCustomValue: true\n  },\n  trailLength: {\n    type: 'number',\n    defaultValue: 180,\n    label: 'layerVisConfigs.strokeWidth',\n    isRanged: false,\n    range: [1, 1000],\n    step: 1,\n    group: PROPERTY_GROUPS.stroke,\n    property: 'trailLength',\n    allowCustomValue: true\n  },\n  // radius is actually radiusScale in deck.gl\n  radius: {\n    type: 'number',\n    defaultValue: 10,\n    label: 'layerVisConfigs.radius',\n    isRanged: false,\n    range: [0, 100],\n    step: 0.1,\n    group: PROPERTY_GROUPS.radius,\n    property: 'radius',\n    allowCustomValue: true\n  },\n  fixedRadius: {\n    defaultValue: false,\n    type: 'boolean',\n    label: 'layerVisConfigs.fixedRadius',\n    description: 'layerVisConfigs.fixedRadiusDescription',\n    group: PROPERTY_GROUPS.radius,\n    property: 'fixedRadius'\n  },\n  fixedHeight: {\n    defaultValue: false,\n    type: 'boolean',\n    label: 'layerVisConfigs.fixedHeight',\n    description: 'layerVisConfigs.fixedHeightDescription',\n    group: PROPERTY_GROUPS.height,\n    property: 'fixedHeight'\n  },\n  radiusRange: {\n    type: 'number',\n    defaultValue: [0, 50],\n    isRanged: true,\n    range: [0, 500],\n    step: 0.1,\n    label: 'layerVisConfigs.radiusRange',\n    group: PROPERTY_GROUPS.radius,\n    property: 'radiusRange',\n    allowCustomValue: true\n  },\n  clusterRadius: {\n    type: 'number',\n    label: 'layerVisConfigs.clusterRadius',\n    defaultValue: 40,\n    isRanged: false,\n    range: [1, 500],\n    step: 0.1,\n    group: PROPERTY_GROUPS.radius,\n    property: 'clusterRadius',\n    allowCustomValue: true\n  },\n  clusterRadiusRange: {\n    type: 'number',\n    label: 'layerVisConfigs.radiusRangePixels',\n    defaultValue: [1, 40],\n    isRanged: true,\n    range: [1, 150],\n    step: 0.1,\n    group: PROPERTY_GROUPS.radius,\n    property: 'radiusRange',\n    allowCustomValue: true\n  },\n  opacity: {\n    type: 'number',\n    defaultValue: DEFAULT_LAYER_OPACITY,\n    label: 'layerVisConfigs.opacity',\n    isRanged: false,\n    range: [0, 1],\n    step: 0.01,\n    group: PROPERTY_GROUPS.color,\n    property: 'opacity',\n    allowCustomValue: false\n  },\n  coverage: {\n    type: 'number',\n    defaultValue: 1,\n    label: 'layerVisConfigs.coverage',\n    isRanged: false,\n    range: [0, 1],\n    step: 0.01,\n    group: PROPERTY_GROUPS.cell,\n    property: 'coverage',\n    allowCustomValue: false\n  },\n  // used in point layer\n  outline: {\n    type: 'boolean',\n    defaultValue: false,\n    label: 'layer.outline',\n    group: PROPERTY_GROUPS.display,\n    property: 'outline'\n  },\n  colorRange: {\n    type: 'color-range-select',\n    defaultValue: DEFAULT_COLOR_RANGE,\n    label: 'layerVisConfigs.colorRange',\n    group: PROPERTY_GROUPS.color,\n    property: 'colorRange'\n  },\n  strokeColorRange: {\n    type: 'color-range-select',\n    defaultValue: DEFAULT_COLOR_RANGE,\n    label: 'layerVisConfigs.strokeColorRange',\n    group: PROPERTY_GROUPS.color,\n    property: 'strokeColorRange'\n  },\n  targetColor: {\n    type: 'color-select',\n    label: 'layerVisConfigs.targetColor',\n    defaultValue: null,\n    group: PROPERTY_GROUPS.color,\n    property: 'targetColor'\n  },\n  strokeColor: {\n    type: 'color-select',\n    label: 'layerVisConfigs.strokeColor',\n    defaultValue: null,\n    group: PROPERTY_GROUPS.color,\n    property: 'strokeColor'\n  },\n  colorAggregation: {\n    type: 'select',\n    defaultValue: AGGREGATION_TYPES.average,\n    label: 'layerVisConfigs.colorAggregation',\n    // aggregation options are based on color field types\n    options: Object.keys(AGGREGATION_TYPES) as AggregationTypes[],\n    group: PROPERTY_GROUPS.color,\n    property: 'colorAggregation',\n    condition: config => Boolean(config.colorField)\n  },\n  sizeAggregation: {\n    type: 'select',\n    defaultValue: AGGREGATION_TYPES.average,\n    label: 'layerVisConfigs.heightAggregation',\n    // aggregation options are based on color field types\n    options: Object.keys(AGGREGATION_TYPES) as AggregationTypes[],\n    group: PROPERTY_GROUPS.height,\n    property: 'sizeAggregation',\n    condition: config => Boolean(config.sizeField)\n  },\n  percentile: {\n    type: 'number',\n    defaultValue: [0, 100],\n    label: config =>\n      `Filter by ${\n        config.colorField\n          ? `${config.visConfig.colorAggregation} ${config.colorField.name}`\n          : 'count'\n      } percentile`,\n    isRanged: true,\n    range: [0, 100],\n    step: 0.01,\n    group: PROPERTY_GROUPS.color,\n    property: 'percentile',\n\n    // percentile filter only makes sense with linear aggregation\n    condition: config => config.colorScale !== 'ordinal',\n    allowCustomValue: false\n  },\n  elevationPercentile: {\n    type: 'number',\n    defaultValue: [0, 100],\n    label: config =>\n      `Filter by ${\n        config.sizeField ? `${config.visConfig.sizeAggregation} ${config.sizeField.name}` : 'count'\n      } percentile`,\n    isRanged: true,\n    range: [0, 100],\n    step: 0.01,\n    group: PROPERTY_GROUPS.height,\n    property: 'elevationPercentile',\n    // percentile filter only makes sense with linear aggregation\n    condition: config =>\n      Boolean(config.visConfig.enable3d && (config.colorField || config.sizeField)),\n    allowCustomValue: false\n  },\n  resolution: {\n    type: 'number',\n    defaultValue: 8,\n    label: 'layerVisConfigs.resolution',\n    isRanged: false,\n    range: [0, 13],\n    step: 1,\n    group: PROPERTY_GROUPS.cell,\n    property: 'resolution',\n    allowCustomValue: true\n  },\n  sizeScale: {\n    type: 'number',\n    defaultValue: 10,\n    label: 'layerVisConfigs.sizeScale',\n    isRanged: false,\n    range: [1, 1000],\n    step: 1,\n    group: PROPERTY_GROUPS.stroke,\n    property: 'sizeScale',\n    allowCustomValue: true\n  },\n  angle: {\n    type: 'number',\n    label: 'layerVisConfigs.angle',\n    defaultValue: 0,\n    isRanged: false,\n    range: [0, 360],\n    group: PROPERTY_GROUPS.angle,\n    step: 1,\n    property: 'angle',\n    allowCustomValue: true\n  },\n  worldUnitSize: {\n    type: 'number',\n    defaultValue: 1,\n    label: 'layerVisConfigs.worldUnitSize',\n    isRanged: false,\n    range: [0, 500],\n    step: 0.0001,\n    group: PROPERTY_GROUPS.cell,\n    property: 'worldUnitSize',\n    allowCustomValue: true\n  },\n  elevationScale: {\n    type: 'number',\n    defaultValue: 5,\n    label: 'layerVisConfigs.elevationScale',\n    isRanged: false,\n    range: [0, 100],\n    step: 0.1,\n    group: PROPERTY_GROUPS.height,\n    property: 'elevationScale',\n    allowCustomValue: true\n  },\n  enableElevationZoomFactor: {\n    type: 'boolean',\n    defaultValue: true,\n    label: 'layerVisConfigs.enableElevationZoomFactor',\n    group: PROPERTY_GROUPS.height,\n    property: 'enableElevationZoomFactor',\n    description: 'layerVisConfigs.enableElevationZoomFactorDescription'\n  },\n  elevationRange: {\n    type: 'number',\n    defaultValue: [0, 500],\n    label: 'layerVisConfigs.heightScale',\n    isRanged: true,\n    range: [0, 1000],\n    step: 0.01,\n    group: PROPERTY_GROUPS.height,\n    property: 'sizeRange',\n    allowCustomValue: true\n  },\n  heightRange: {\n    type: 'number',\n    defaultValue: [0, 500],\n    label: 'Height Scale',\n    isRanged: true,\n    range: [0, 1000],\n    step: 0.01,\n    group: PROPERTY_GROUPS.height,\n    property: 'heightRange',\n    allowCustomValue: true\n  },\n  coverageRange: {\n    type: 'number',\n    defaultValue: [0, 1],\n    label: 'layerVisConfigs.coverageRange',\n    isRanged: true,\n    range: [0, 1],\n    step: 0.01,\n    group: PROPERTY_GROUPS.radius,\n    property: 'coverageRange',\n    allowCustomValue: false\n  },\n  // hi precision is deprecated by deck.gl\n  'hi-precision': {\n    type: 'boolean',\n    defaultValue: false,\n    label: 'layerVisConfigs.highPrecisionRendering',\n    group: PROPERTY_GROUPS.precision,\n    property: 'hi-precision',\n    description: 'layerVisConfigs.highPrecisionRenderingDescription'\n  },\n  enable3d: {\n    type: 'boolean',\n    defaultValue: false,\n    label: 'layerVisConfigs.height',\n    group: PROPERTY_GROUPS.height,\n    property: 'enable3d',\n    description: 'layerVisConfigs.heightDescription'\n  },\n  stroked: {\n    type: 'boolean',\n    label: 'layerVisConfigs.stroke',\n    defaultValue: true,\n    group: PROPERTY_GROUPS.display,\n    property: 'stroked'\n  },\n  filled: {\n    type: 'boolean',\n    label: 'layerVisConfigs.fill',\n    defaultValue: false,\n    group: PROPERTY_GROUPS.display,\n    property: 'filled'\n  },\n  extruded: {\n    type: 'boolean',\n    defaultValue: false,\n    label: 'layerVisConfigs.enablePolygonHeight',\n    group: PROPERTY_GROUPS.display,\n    property: 'extruded'\n  },\n  wireframe: {\n    type: 'boolean',\n    defaultValue: false,\n    label: 'layerVisConfigs.showWireframe',\n    group: PROPERTY_GROUPS.display,\n    property: 'wireframe'\n  },\n  // used for heatmap\n  weight: {\n    type: 'number',\n    defaultValue: 1,\n    label: 'layerVisConfigs.weightIntensity',\n    isRanged: false,\n    range: [0.01, 500],\n    step: 0.01,\n    group: PROPERTY_GROUPS.cell,\n    property: 'weight',\n    condition: config => Boolean(config.weightField),\n    allowCustomValue: true\n  },\n  heatmapRadius: {\n    type: 'number',\n    defaultValue: 20,\n    label: 'layerVisConfigs.radius',\n    isRanged: false,\n    range: [0, 100],\n    step: 0.1,\n    group: PROPERTY_GROUPS.cell,\n    property: 'radius',\n    allowCustomValue: true\n  },\n  darkBaseMapEnabled: {\n    type: 'boolean',\n    defaultValue: true,\n    label: 'layerVisConfigs.darkModeEnabled',\n    property: 'darkBaseMapEnabled',\n    group: PROPERTY_GROUPS.display\n  }\n};\n\nexport const LAYER_TEXT_CONFIGS: LayerTextConfig = {\n  fontSize: {\n    type: 'number',\n    range: [1, 100],\n    value0: 1,\n    step: 1,\n    isRanged: false,\n    label: 'Font size',\n    showInput: true\n  },\n  outlineWidth: {\n    type: 'number',\n    range: [0, 1],\n    value0: 0,\n    step: 0.01,\n    isRanged: false,\n    label: 'Outline width',\n    showInput: true\n  },\n  textAnchor: {\n    type: 'select',\n    options: ['start', 'middle', 'end'],\n    multiSelect: false,\n    searchable: false\n  },\n  textAlignment: {\n    type: 'select',\n    options: ['top', 'center', 'bottom'],\n    multiSelect: false,\n    searchable: false\n  }\n};\nexport const LAYER_TYPES = keyMirror({\n  point: null,\n  arc: null,\n  line: null,\n  grid: null,\n  hexagon: null,\n  geojson: null,\n  cluster: null,\n  icon: null,\n  heatmap: null,\n  hexagonId: null,\n  '3D': null,\n  trip: null,\n  s2: null\n});\n\nexport const EDITOR_AVAILABLE_LAYERS: string[] = [\n  LAYER_TYPES.point,\n  LAYER_TYPES.hexagon,\n  LAYER_TYPES.arc,\n  LAYER_TYPES.line,\n  LAYER_TYPES.hexagonId,\n  LAYER_TYPES.geojson\n];\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport window from 'global/window';\n/* eslint-disable no-use-before-define */\nconst KeyEvent = Object.assign({}, window.KeyEvent);\n/* eslint-enable no-use-before-define */\n\n// event event.keyCode is deprecated, should use event.key in the future\nKeyEvent.DOM_VK_UP = KeyEvent.DOM_VK_UP || 38;\nKeyEvent.DOM_VK_DOWN = KeyEvent.DOM_VK_DOWN || 40;\nKeyEvent.DOM_VK_BACK_SPACE = KeyEvent.DOM_VK_BACK_SPACE || 8;\nKeyEvent.DOM_VK_RETURN = KeyEvent.DOM_VK_RETURN || 13;\nKeyEvent.DOM_VK_ENTER = KeyEvent.DOM_VK_ENTER || 14;\nKeyEvent.DOM_VK_ESCAPE = KeyEvent.DOM_VK_ESCAPE || 27;\nKeyEvent.DOM_VK_TAB = KeyEvent.DOM_VK_TAB || 9;\nKeyEvent.DOM_VK_DELETE = KeyEvent.DOM_VK_DELETE || 46;\n\nexport default KeyEvent;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nexport const MISSING_MAPBOX_TOKEN =\n  'Mapbox Token not valid. ' +\n  '[Click here](https://github.com/keplergl/kepler.gl#mapboxapiaccesstoken-string-required)';\n\nexport const IMAGE_EXPORT_ERRORS = {\n  dataUri: `[kepler.gl] Failed to create image from data uri.\n  Copy the uri in the javascript console when reporting this bug.\n  The uri is the string starts with \"data:image/png\"`,\n  styleSheet: `[kepler.gl] Failed to fetch stylesheet when exporting image.\n    This probably will not affect the map. It might affect the legend.\n    The stylesheet failed to load is: `\n};\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nexport const USER_GUIDE_DOC = 'https://docs.kepler.gl/docs/user-guides';\nexport const ACTIONS_DOC = 'https://docs.kepler.gl/docs/api-reference/actions/actions';\nexport const API_REFERENCE_DOC = 'https://docs.kepler.gl/docs/api-reference';\n\nexport const EXPORT_HTML_MAP_DOC = `${USER_GUIDE_DOC}/k-save-and-export`;\nexport const ADD_DATA_TO_MAP_DOC = `${ACTIONS_DOC}#adddatatomap`;\nexport const MAPBOX_ACCESS_TOKEN = 'https://docs.mapbox.com/help/how-mapbox-works/access-tokens/';\n\nexport const EXPORT_HTML_MAP_MODES_DOC = `${USER_GUIDE_DOC}/k-save-and-export#export-html-map`;\nexport const GUIDES_FILE_FORMAT_DOC = `${USER_GUIDE_DOC}/b-kepler-gl-workflow/a-add-data-to-the-map#supported-file-formats`;\nexport const BUG_REPORT_LINK =\n  'https://github.com/keplergl/kepler.gl/issues/new?assignees=&labels=bug&template=bug_report.md&title=%5BBug%5D';\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {Modifiers} from '@dnd-kit/core';\nimport {restrictToVerticalAxis} from '@dnd-kit/modifiers';\n\nexport const DND_MODIFIERS: Modifiers = [restrictToVerticalAxis];\nexport const DND_EMPTY_MODIFIERS: Modifiers = [];\nexport const SORTABLE_SIDE_PANEL_TYPE = 'root';\nexport const DROPPABLE_MAP_CONTAINER_TYPE = 'map';\nexport const SORTABLE_LAYER_TYPE = 'layer';\n\nexport const SORTABLE_EFFECT_PANEL_TYPE = 'root';\nexport const SORTABLE_EFFECT_TYPE = 'effect';\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {Component, createRef, MouseEventHandler, MouseEvent, PropsWithChildren} from 'react';\nimport classnames from 'classnames';\nimport styled, {css} from 'styled-components';\nimport {\n  SortableContainer,\n  SortableContainerProps,\n  SortableElement,\n  SortableElementProps,\n  SortableHandle\n} from 'react-sortable-hoc';\nimport Portaled from '../../common/portaled';\n\nimport {Button, InlineInput} from '../../common/styled-components';\nimport {VertDots, Trash} from '../../common/icons';\nimport ColorPalette from './color-palette';\nimport CustomPicker from './custom-picker';\nimport {arrayMove} from '@kepler.gl/utils';\nimport {ColorRange} from '@kepler.gl/constants';\nimport {NestedPartial} from '@kepler.gl/types';\n\ntype CustomPaletteProps = {\n  customPalette: ColorRange;\n  showSketcher?: boolean | number;\n  setCustomPalette: (c: NestedPartial<ColorRange>) => void;\n  onCancel: () => void;\n  onToggleSketcher: (i: boolean | number) => void;\n  onApply: (p: ColorRange, e: MouseEvent) => void;\n};\n\nconst dragHandleActive = css`\n  .layer__drag-handle {\n    color: ${props => props.theme.textColorHl};\n    opacity: 1;\n    cursor: move;\n  }\n`;\n\nconst StyledSortableItem = styled.div`\n  display: flex;\n  align-items: center;\n  padding-top: 6px;\n  padding-bottom: 6px;\n  z-index: ${props => props.theme.dropdownWrapperZ + 1};\n\n  :not(.sorting) {\n    :hover {\n      background-color: ${props => props.theme.panelBackgroundHover};\n      ${dragHandleActive};\n    }\n  }\n\n  &.sorting-colors {\n    background-color: ${props => props.theme.panelBackgroundHover};\n    ${dragHandleActive};\n  }\n`;\n\nconst StyledDragHandle = styled.div`\n  display: flex;\n  align-items: center;\n  opacity: 0;\n`;\n\nconst StyledTrash = styled.div`\n  color: ${props => props.theme.textColor};\n  svg {\n    :hover {\n      color: ${props => props.theme.subtextColorActive};\n    }\n  }\n  height: 12px;\n  margin-left: auto;\n  margin-right: 12px;\n  :hover {\n    cursor: pointer;\n  }\n`;\n\nconst StyledLine = styled.div`\n  width: calc(100% - 16px);\n  height: 1px;\n  background-color: ${props => props.theme.labelColor};\n  margin-top: 8px;\n  margin-left: 8px;\n`;\n\nconst StyledSwatch = styled.div.attrs({\n  className: 'custom-palette__swatch'\n})`\n  background-color: ${props => props.color};\n  width: 32px;\n  height: 18px;\n  display: inline-block;\n  :hover {\n    box-shadow: ${props => props.theme.boxShadow};\n    cursor: pointer;\n  }\n`;\n\nconst StyledColorRange = styled.div`\n  padding: 0 8px;\n  :hover {\n    background-color: ${props => props.theme.panelBackgroundHover};\n    cursor: pointer;\n  }\n`;\n\nconst StyledButtonContainer = styled.div`\n  margin-top: 11px;\n  display: flex;\n  direction: rtl;\n`;\n\nconst StyledInlineInput = styled.div`\n  margin-left: 12px;\n  input {\n    color: ${props => props.theme.textColorHl};\n    font-size: 10px;\n  }\n`;\n\ntype SortableItemProps = SortableElementProps & {\n  children?: React.ReactNode;\n  className?: string;\n  isSorting: boolean;\n};\n\nconst SortableItem = SortableElement<SortableItemProps>(({children, isSorting}) => (\n  <StyledSortableItem\n    className={classnames('custom-palette__sortable-items', {sorting: isSorting})}\n  >\n    {children}\n  </StyledSortableItem>\n));\n\ntype WrappedSortableContainerProps = SortableContainerProps & {\n  children?: React.ReactNode;\n  className?: string;\n};\n\n// TODO: Should className be applied to the div here?\nconst WrappedSortableContainer = SortableContainer<WrappedSortableContainerProps>(\n  ({children, className}) => <div className={className}>{children}</div>\n);\n\ntype DragHandleProps = PropsWithChildren<{className?: string; listeners?: unknown}>;\n\nexport const DragHandle = SortableHandle<DragHandleProps>(({className, children}) => (\n  <StyledDragHandle className={className}>{children}</StyledDragHandle>\n));\n\nclass CustomPalette extends Component<CustomPaletteProps> {\n  state = {\n    isSorting: false\n  };\n\n  root = createRef<HTMLDivElement>();\n\n  _setColorPaletteUI(colors: string[]) {\n    this.props.setCustomPalette({\n      colors\n    });\n  }\n\n  _onPickerUpdate = (color: {hex: string}) => {\n    const {colors} = this.props.customPalette;\n    const newColors = [...colors];\n    newColors[this.props.showSketcher as number] = color.hex;\n    this._setColorPaletteUI(newColors);\n  };\n\n  _onColorDelete = (index: number) => {\n    const {colors} = this.props.customPalette;\n    const newColors = [...colors];\n    if (newColors.length > 1) {\n      newColors.splice(index, 1);\n    }\n    this._setColorPaletteUI(newColors);\n  };\n\n  _onColorAdd = () => {\n    const {colors} = this.props.customPalette;\n    // add the last color\n    const newColors = [...colors, colors[colors.length - 1]];\n    this._setColorPaletteUI(newColors);\n  };\n\n  _onSwatchClick = (index: number) => {\n    this.props.onToggleSketcher(index);\n  };\n\n  _onSwatchClose = () => {\n    this.props.onToggleSketcher(false);\n  };\n\n  _onApply: MouseEventHandler = event => {\n    event.stopPropagation();\n    event.preventDefault();\n\n    this.props.onCancel();\n    this.props.onApply(this.props.customPalette, event);\n  };\n\n  _onSortEnd = ({oldIndex, newIndex}) => {\n    const {colors} = this.props.customPalette;\n    const newColors = arrayMove(colors, oldIndex, newIndex);\n    this._setColorPaletteUI(newColors);\n    this.setState({isSorting: false});\n  };\n\n  _onSortStart = () => {\n    this.setState({isSorting: true});\n  };\n\n  _inputColorHex = (index: number, {target: {value}}) => {\n    const {colors} = this.props.customPalette;\n    const newColors = [...colors];\n    newColors[index] = value.toUpperCase();\n    this._setColorPaletteUI(newColors);\n  };\n\n  render() {\n    const {colors} = this.props.customPalette;\n\n    return (\n      <div className=\"custom-palette-panel\" ref={this.root}>\n        <StyledColorRange>\n          <ColorPalette colors={colors} />\n        </StyledColorRange>\n        <WrappedSortableContainer\n          className=\"custom-palette-container\"\n          onSortEnd={this._onSortEnd}\n          onSortStart={this._onSortStart}\n          lockAxis=\"y\"\n          helperClass=\"sorting-colors\"\n          useDragHandle\n        >\n          {colors.map((color, index) => (\n            <SortableItem key={index} index={index} isSorting={this.state.isSorting}>\n              <DragHandle className=\"layer__drag-handle\">\n                <VertDots height=\"20px\" />\n              </DragHandle>\n              <StyledSwatch color={color} onClick={() => this._onSwatchClick(index)} />\n              <StyledInlineInput>\n                <InlineInput\n                  type=\"text\"\n                  className=\"custom-palette-hex__input\"\n                  value={color.toUpperCase()}\n                  onClick={e => {\n                    e.stopPropagation();\n                  }}\n                  onChange={e => this._inputColorHex(index, e)}\n                  id={`input-layer-label-${index}`}\n                />\n              </StyledInlineInput>\n              <StyledTrash onClick={() => this._onColorDelete(index)}>\n                <Trash className=\"trashbin\" />\n              </StyledTrash>\n            </SortableItem>\n          ))}\n        </WrappedSortableContainer>\n        {/* Add Step Button */}\n        <Button className=\"add-step__button\" link onClick={this._onColorAdd}>\n          + Add Step\n        </Button>\n        <StyledLine />\n        {/* Cancel or Confirm Buttons */}\n        <StyledButtonContainer>\n          <Button className=\"confirm-apply__button\" link onClick={this._onApply}>\n            Confirm\n          </Button>\n          <Button link onClick={this.props.onCancel}>\n            Cancel\n          </Button>\n        </StyledButtonContainer>\n\n        <Portaled isOpened={this.props.showSketcher !== false} left={280} top={-300}>\n          <CustomPicker\n            color={colors[this.props.showSketcher as number]}\n            onChange={this._onPickerUpdate}\n            onSwatchClose={this._onSwatchClose}\n          />\n        </Portaled>\n      </div>\n    );\n  }\n}\n\nexport default CustomPalette;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React from 'react';\nimport styled, {withTheme} from 'styled-components';\nimport DatasetLabel from '../common/dataset-label';\nimport DataTableFactory from '../common/data-table';\nimport {createSelector} from 'reselect';\nimport {renderedSize} from '../common/data-table/cell-size';\nimport CanvasHack from '../common/data-table/canvas';\nimport KeplerTable, {Datasets} from '@kepler.gl/table';\nimport {UIStateActions} from '@kepler.gl/actions';\nimport {UiState} from '@kepler.gl/types';\nimport {Gear} from '../common/icons';\nimport Portaled from '../common/portaled';\nimport DataTableConfigFactory from '../common/data-table/display-format';\n\nconst MIN_STATS_CELL_SIZE = 122;\nconst DEFAULT_SORT_COLUMN = {};\n\n// sidePadding changes from 38 to 68, 30px for configuration button\nconst dgSettings = {\n  sidePadding: '68px',\n  verticalPadding: '16px',\n  height: '36px'\n};\n\nconst StyledModal = styled.div`\n  min-height: 85vh;\n  overflow: hidden;\n  display: flex;\n`;\n\nconst DatasetCatalog = styled.div`\n  display: flex;\n  padding: ${dgSettings.verticalPadding} ${dgSettings.sidePadding} 0 0;\n\n  .overflow-horizontal {\n    display: flex;\n    overflow-x: auto;\n    overflow-y: hidden;\n    flex-direction: row;\n    ${props => props.theme.modalScrollBar}\n  }\n`;\n\ninterface DatasetModalTabProps {\n  active?: boolean;\n}\n\nexport const DatasetModalTab = styled.div<DatasetModalTabProps>`\n  align-items: center;\n  border-bottom: 3px solid ${props => (props.active ? 'black' : 'transparent')};\n  cursor: pointer;\n  display: flex;\n  height: 35px;\n  margin: 0 3px;\n  padding: 0 5px;\n\n  :hover {\n    border-bottom: 3px solid black;\n  }\n`;\n\nconst StyledConfigureButton = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  position: absolute;\n  top: 24px;\n  right: 48px;\n  svg {\n    stroke: black;\n  }\n  cursor: pointer;\n`;\n\ninterface DatasetTabsUnmemoizedProps {\n  activeDataset: KeplerTable;\n  datasets: Datasets;\n  showDatasetTable: (id: string) => void;\n}\n\nconst DatasetTabsUnmemoized: React.FC<DatasetTabsUnmemoizedProps> = ({\n  activeDataset,\n  datasets,\n  showDatasetTable\n}) => (\n  <DatasetCatalog className=\"dataset-modal-catalog\">\n    <div className=\"overflow-horizontal\">\n      {Object.values(datasets).map(dataset => (\n        <DatasetModalTab\n          className=\"dataset-modal-tab\"\n          active={dataset === activeDataset}\n          key={dataset.id}\n          onClick={() => showDatasetTable(dataset.id)}\n        >\n          <DatasetLabel dataset={dataset} />\n        </DatasetModalTab>\n      ))}\n    </div>\n  </DatasetCatalog>\n);\n\nexport const DatasetTabs = React.memo(DatasetTabsUnmemoized);\n\nDatasetTabs.displayName = 'DatasetTabs';\n\nDataTableModalFactory.deps = [DataTableFactory, DataTableConfigFactory];\n\nconst TableContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  min-height: 100%;\n  max-height: 100%;\n  max-width: 100%;\n`;\n\ninterface DataTableModalProps {\n  theme: any;\n  dataId?: string;\n  sortTableColumn: (id: string, column: string, mode?: string) => void;\n  pinTableColumn: (id: string, column: string) => void;\n  copyTableColumn: (id: string, column: string) => void;\n  datasets: Datasets;\n  showDatasetTable: (id: string) => void;\n  showTab?: boolean;\n  setColumnDisplayFormat: (\n    dataId: string,\n    formats: {\n      column: string;\n      displayFormat: string;\n    }\n  ) => void;\n  uiStateActions: typeof UIStateActions;\n  uiState: UiState;\n}\n\nfunction DataTableModalFactory(\n  DataTable: ReturnType<typeof DataTableFactory>,\n  DataTableConfig: ReturnType<typeof DataTableConfigFactory>\n): React.ComponentType<Omit<DataTableModalProps, 'theme'>> {\n  class DataTableModal extends React.Component<DataTableModalProps> {\n    state = {\n      showConfig: false\n    };\n\n    datasetCellSizeCache = {};\n    dataId = ({dataId = ''}: DataTableModalProps) => dataId;\n    datasets = (props: DataTableModalProps) => props.datasets;\n    fields = ({datasets, dataId = ''}: DataTableModalProps) => (datasets[dataId] || {}).fields;\n    columns = createSelector(this.fields, fields => fields.map(f => f.name));\n    colMeta = createSelector([this.fields, this.datasets], fields =>\n      fields.reduce(\n        (acc, {name, displayName, type, filterProps, format, displayFormat}) => ({\n          ...acc,\n          [name]: {\n            name: displayName || name,\n            type,\n            ...(format ? {format} : {}),\n            ...(displayFormat ? {displayFormat} : {}),\n            ...(filterProps?.columnStats ? {columnStats: filterProps.columnStats} : {})\n          }\n        }),\n        {}\n      )\n    );\n\n    cellSizeCache = createSelector(this.dataId, this.datasets, (dataId, datasets) => {\n      if (!datasets[dataId]) {\n        return {};\n      }\n      const {fields, dataContainer} = datasets[dataId];\n\n      let showCalculate: boolean | null = null;\n      if (!this.datasetCellSizeCache[dataId]) {\n        showCalculate = true;\n      } else if (\n        this.datasetCellSizeCache[dataId].fields !== fields ||\n        this.datasetCellSizeCache[dataId].dataContainer !== dataContainer\n      ) {\n        showCalculate = true;\n      }\n\n      if (!showCalculate) {\n        return this.datasetCellSizeCache[dataId].cellSizeCache;\n      }\n\n      const cellSizeCache = fields.reduce(\n        (acc, field, colIdx) => ({\n          ...acc,\n          [field.name]: renderedSize({\n            text: {\n              dataContainer,\n              column: field.displayName\n            },\n            colIdx,\n            type: field.type,\n            fontSize: this.props.theme.cellFontSize,\n            font: this.props.theme.fontFamily,\n            minCellSize: MIN_STATS_CELL_SIZE\n          })\n        }),\n        {}\n      );\n      // save it to cache\n      this.datasetCellSizeCache[dataId] = {\n        cellSizeCache,\n        fields,\n        dataContainer\n      };\n      return cellSizeCache;\n    });\n\n    copyTableColumn = (column: string) => {\n      const {dataId = '', copyTableColumn} = this.props;\n      copyTableColumn(dataId, column);\n    };\n\n    pinTableColumn = (column: string) => {\n      const {dataId = '', pinTableColumn} = this.props;\n      pinTableColumn(dataId, column);\n    };\n\n    sortTableColumn = (column: string, mode?: string) => {\n      const {dataId = '', sortTableColumn} = this.props;\n      sortTableColumn(dataId, column, mode);\n    };\n\n    setColumnDisplayFormat = formats => {\n      const {dataId, setColumnDisplayFormat} = this.props;\n      if (dataId) setColumnDisplayFormat(dataId, formats);\n    };\n\n    onOpenConfig = () => {\n      this.setState({showConfig: true});\n    };\n\n    onCloseConfig = () => {\n      this.setState({showConfig: false});\n    };\n\n    render() {\n      const {datasets, dataId, showDatasetTable, showTab = true} = this.props;\n      if (!datasets || !dataId) {\n        return null;\n      }\n      const activeDataset = datasets[dataId];\n      const columns = this.columns(this.props);\n      const colMeta = this.colMeta(this.props);\n      const cellSizeCache = this.cellSizeCache(this.props);\n\n      return (\n        <StyledModal className=\"dataset-modal\" id=\"dataset-modal\">\n          <CanvasHack />\n          <TableContainer>\n            {showTab ? (\n              <DatasetTabs\n                activeDataset={activeDataset}\n                datasets={datasets}\n                showDatasetTable={showDatasetTable}\n              />\n            ) : null}\n            <StyledConfigureButton className=\"display-config-button\">\n              <Gear onClick={this.onOpenConfig} />\n              <Portaled\n                right={240}\n                top={20}\n                isOpened={this.state.showConfig}\n                onClose={this.onCloseConfig}\n              >\n                <DataTableConfig\n                  columns={columns}\n                  colMeta={colMeta}\n                  setColumnDisplayFormat={this.setColumnDisplayFormat}\n                  onClose={this.onCloseConfig}\n                />\n              </Portaled>\n            </StyledConfigureButton>\n            {datasets[dataId] ? (\n              <DataTable\n                key={dataId}\n                dataId={dataId}\n                columns={columns}\n                colMeta={colMeta}\n                cellSizeCache={cellSizeCache}\n                dataContainer={activeDataset.dataContainer}\n                pinnedColumns={activeDataset.pinnedColumns}\n                sortOrder={activeDataset.sortOrder}\n                sortColumn={activeDataset.sortColumn || DEFAULT_SORT_COLUMN}\n                copyTableColumn={this.copyTableColumn}\n                pinTableColumn={this.pinTableColumn}\n                sortTableColumn={this.sortTableColumn}\n                setColumnDisplayFormat={this.setColumnDisplayFormat}\n                hasStats={false}\n              />\n            ) : null}\n          </TableContainer>\n        </StyledModal>\n      );\n    }\n  }\n  return withTheme(DataTableModal);\n}\n\nexport default DataTableModalFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useMemo} from 'react';\nimport styled from 'styled-components';\nimport classnames from 'classnames';\n\nimport {Layer, LayerClassesType} from '@kepler.gl/layers';\nimport {Datasets} from '@kepler.gl/table';\nimport {UIStateActions, VisStateActions, MapStateActions} from '@kepler.gl/actions';\n\nimport {useSortable, SortableContext, verticalListSortingStrategy} from '@dnd-kit/sortable';\nimport {CSS} from '@dnd-kit/utilities';\nimport LayerPanelFactory from './layer-panel';\nimport {findById} from '@kepler.gl/utils';\nimport {dataTestIds, SORTABLE_LAYER_TYPE, SORTABLE_SIDE_PANEL_TYPE} from '@kepler.gl/constants';\n\nexport type LayerListProps = {\n  datasets: Datasets;\n  layers: Layer[];\n  layerOrder: string[];\n  layerClasses: LayerClassesType;\n  isSortable?: boolean;\n  uiStateActions: typeof UIStateActions;\n  visStateActions: typeof VisStateActions;\n  mapStateActions: typeof MapStateActions;\n};\n\nexport type LayerListFactoryDeps = [typeof LayerPanelFactory];\n\n// make sure the element is always visible while is being dragged\n// item being dragged is appended in body, here to reset its global style\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\ninterface SortableStyledItemProps {\n  transition?: string;\n  transform?: string;\n}\n\nconst SortableStyledItem = styled.div<SortableStyledItemProps>`\n  z-index: ${props => props.theme.dropdownWrapperZ + 1};\n  transition: ${props => props.transition};\n  transform: ${props => props.transform};\n  &.sorting {\n    opacity: 0.3;\n    pointer-events: none;\n  }\n  &.sorting-layers .layer-panel__header {\n    background-color: ${props => props.theme.panelBackgroundHover};\n    font-family: ${props => props.theme.fontFamily};\n    font-weight: ${props => props.theme.fontWeight};\n    font-size: ${props => props.theme.fontSize};\n    line-height: ${props => props.theme.lineHeight};\n    *,\n    *:before,\n    *:after {\n      box-sizing: border-box;\n    }\n    .layer__drag-handle {\n      opacity: 1;\n      color: ${props => props.theme.textColorHl};\n    }\n  }\n`;\n\nconst INITIAL_LAYERS_TO_SHOW: Layer[] = [];\n\nLayerListFactory.deps = [LayerPanelFactory];\n\nfunction LayerListFactory(LayerPanel: ReturnType<typeof LayerPanelFactory>) {\n  // By wrapping layer panel using a sortable element we don't have to implement the drag and drop logic into the panel itself;\n  // Developers can provide any layer panel implementation and it will still be sortable\n  const SortableItem = ({layer, idx, panelProps, layerActions, disabled}) => {\n    const {attributes, listeners, setNodeRef, isDragging, transform, transition} = useSortable({\n      id: layer.id,\n      data: {\n        type: SORTABLE_LAYER_TYPE,\n        parent: SORTABLE_SIDE_PANEL_TYPE\n      },\n      disabled\n    });\n\n    return (\n      <SortableStyledItem\n        ref={setNodeRef}\n        className={classnames(\n          {[dataTestIds.sortableLayerItem]: !disabled},\n          {[dataTestIds.staticLayerItem]: disabled},\n          {sorting: isDragging}\n        )}\n        data-testid={disabled ? dataTestIds.staticLayerItem : dataTestIds.sortableLayerItem}\n        transform={CSS.Transform.toString(transform)}\n        transition={transition}\n        {...attributes}\n      >\n        <LayerPanel\n          {...panelProps}\n          {...layerActions}\n          key={layer.id}\n          idx={idx}\n          layer={layer}\n          listeners={listeners}\n          isDraggable={!disabled}\n        />\n      </SortableStyledItem>\n    );\n  };\n\n  const LayerList: React.FC<LayerListProps> = props => {\n    const {\n      layers,\n      datasets,\n      layerOrder,\n      uiStateActions,\n      visStateActions,\n      mapStateActions,\n      layerClasses,\n      isSortable = true\n    } = props;\n    const {toggleModal: openModal} = uiStateActions;\n\n    const layersToShow = useMemo(() => {\n      return layerOrder.reduce((acc, layerId) => {\n        const layer = findById(layerId)(layers.filter(Boolean));\n        if (!layer) {\n          return acc;\n        }\n        return !layer.config.hidden ? [...acc, layer] : acc;\n      }, INITIAL_LAYERS_TO_SHOW);\n    }, [layers, layerOrder]);\n\n    const sidePanelDndItems = useMemo(() => {\n      return layersToShow.map(({id}) => id);\n    }, [layersToShow]);\n\n    const layerTypeOptions = useMemo(\n      () =>\n        Object.keys(layerClasses).map(key => {\n          const layer = new layerClasses[key]({dataId: ''});\n          return {\n            id: key,\n            label: layer.name,\n            icon: layer.layerIcon,\n            requireData: layer.requireData\n          };\n        }),\n      [layerClasses]\n    );\n\n    const layerActions = useMemo(\n      () => ({\n        layerColorUIChange: visStateActions.layerColorUIChange,\n        layerConfigChange: visStateActions.layerConfigChange,\n        layerVisualChannelConfigChange: visStateActions.layerVisualChannelConfigChange,\n        layerTypeChange: visStateActions.layerTypeChange,\n        layerVisConfigChange: visStateActions.layerVisConfigChange,\n        layerTextLabelChange: visStateActions.layerTextLabelChange,\n        removeLayer: visStateActions.removeLayer,\n        zoomToLayer: mapStateActions.fitBounds,\n        duplicateLayer: visStateActions.duplicateLayer,\n        layerSetIsValid: visStateActions.layerSetIsValid\n      }),\n      [visStateActions, mapStateActions]\n    );\n\n    const panelProps = useMemo(\n      () => ({\n        datasets,\n        openModal,\n        layerTypeOptions\n      }),\n      [datasets, openModal, layerTypeOptions]\n    );\n\n    return (\n      <Container>\n        <SortableContext\n          id={SORTABLE_SIDE_PANEL_TYPE}\n          items={sidePanelDndItems}\n          strategy={verticalListSortingStrategy}\n          disabled={!isSortable}\n        >\n          {/* warning: containerId should be similar to the first key in dndItems defined in kepler-gl.js*/}\n          {layersToShow.map(layer => (\n            <SortableItem\n              key={layer.id}\n              layer={layer}\n              idx={layers.findIndex(l => l?.id === layer.id)}\n              panelProps={panelProps}\n              layerActions={layerActions}\n              disabled={!isSortable}\n            />\n          ))}\n        </SortableContext>\n      </Container>\n    );\n  };\n  return LayerList;\n}\nexport default LayerListFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useMemo} from 'react';\nimport styled from 'styled-components';\nimport OrderByList from '../common/icons/order-by-list';\nimport OrderByDataset from '../common/icons/order-by-dataset';\nimport {Tooltip} from '../common/styled-components';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {PanelListView} from '@kepler.gl/types';\nimport {PANEL_VIEW_TOGGLES} from '@kepler.gl/constants';\n\ntype ToggleOptionProps = {\n  isActive: boolean;\n  onClick: () => void;\n  option: typeof TOGGLE_OPTIONS[0];\n};\n\ntype PanelViewListToggleProps = {\n  mode: PanelListView;\n  togglePanelListView: (view: string) => void;\n};\n\nconst PanelViewListToggleContainer = styled.div.attrs({\n  className: 'panel-view-list-toggle'\n})``;\n\n// changes done\n\nconst PanelViewListToggleWrapper = styled.div.attrs({\n  className: 'panel-view-list-toggle-inner'\n})`\n  display: flex;\n  justify-content: flex-end;\n  align-content: center;\n  gap: 10px;\n  display:none;\n`;\n\nexport const StyledToggleOption = styled.div.attrs({\n  className: 'layer-panel-toggle-option'\n})<{active: boolean}>`\n  color: ${props => (props.active ? props.theme.subtextColorActive : props.theme.panelTabColor)};\n  :hover {\n    cursor: pointer;\n    color: ${props => props.theme.subtextColorActive};\n  }\n`;\n\nfunction ToggleOptionFactory() {\n  const ToggleOption: React.FC<ToggleOptionProps> = ({isActive, onClick, option}) => (\n    <StyledToggleOption\n      data-tip\n      data-for={`${option.id}-toggle-option`}\n      active={isActive}\n      onClick={onClick}\n    >\n      <option.iconComponent height=\"20px\" />\n      <Tooltip id={`${option.id}-toggle-option`} effect=\"solid\" delayShow={500} place=\"bottom\">\n        <span>\n          <FormattedMessage id={option.label} />\n        </span>\n      </Tooltip>\n    </StyledToggleOption>\n  );\n\n  return ToggleOption;\n}\n\nconst TOGGLE_OPTIONS = [\n  {\n    id: PANEL_VIEW_TOGGLES.list,\n    iconComponent: OrderByList,\n    label: 'sidebar.panelViewToggle.list'\n  },\n  {\n    id: PANEL_VIEW_TOGGLES.byDataset,\n    iconComponent: OrderByDataset,\n    label: 'sidebar.panelViewToggle.byDataset'\n  }\n];\n\nPanelViewListToggleFactory.deps = [ToggleOptionFactory];\n\nfunction PanelViewListToggleFactory(ToggleOption: ReturnType<typeof ToggleOptionFactory>) {\n  const PanelViewListToggle: React.FC<PanelViewListToggleProps> = ({mode, togglePanelListView}) => {\n    const toggleListView = listView => togglePanelListView(listView);\n\n    const options = useMemo(\n      () => TOGGLE_OPTIONS.map(opt => ({...opt, isActive: mode === opt.id})),\n      [mode]\n    );\n\n    return (\n      <PanelViewListToggleContainer>\n        <PanelViewListToggleWrapper>\n          {options.map(opt => (\n            <ToggleOption\n              key={opt.id}\n              onClick={() => toggleListView(opt.id)}\n              option={opt}\n              isActive={opt.isActive}\n            />\n          ))}\n        </PanelViewListToggleWrapper>\n      </PanelViewListToggleContainer>\n    );\n  };\n\n  return PanelViewListToggle;\n}\n\nexport default PanelViewListToggleFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {Component} from 'react';\nimport styled from 'styled-components';\nimport {Delete, Info, Warning, Checkmark} from '../common/icons';\nimport ReactMarkdown from 'react-markdown';\nimport {dataTestIds} from '@kepler.gl/constants';\nimport {ActionHandler, removeNotification as removeNotificationActions} from '@kepler.gl/actions';\n\ninterface NotificationItemContentBlockProps {\n  isExpanded?: boolean;\n}\n\nconst NotificationItemContentBlock = styled.div.attrs({\n  className: 'notification-item--content-block'\n})<NotificationItemContentBlockProps>`\n  display: block;\n  position: relative;\n  width: ${props => props.theme.notificationPanelItemWidth * (1 + Number(props.isExpanded))}px;\n  margin-left: auto;\n`;\n\ninterface NotificationItemContentProps {\n  type: string;\n  isExpanded?: boolean;\n}\n\nconst NotificationItemContent = styled.div<NotificationItemContentProps>`\n  background-color: ${props => props.theme.notificationColors[props.type] || '#000'};\n  color: #fff;\n  display: flex;\n  flex-direction: row;\n  width: ${props => props.theme.notificationPanelItemWidth * (1 + Number(props.isExpanded))}px;\n  height: ${props => props.theme.notificationPanelItemHeight * (1 + Number(props.isExpanded))}px;\n  font-size: 11px;\n  margin-bottom: 1rem;\n  padding: 1em;\n  border-radius: 4px;\n  box-shadow: ${props => props.theme.boxShadow};\n  cursor: pointer;\n`;\n\nconst DeleteIcon = styled(Delete)`\n  cursor: pointer;\n  width: 13px;\n  height: 13px;\n`;\n\ninterface NotificationCounterProps {\n  type: string;\n}\n\nconst NotificationCounter = styled.div.attrs({\n  className: 'notification-item--counter'\n})<NotificationCounterProps>`\n  position: absolute;\n  font-size: 11px;\n  font-weight: bold;\n  text-align: center;\n  left: -4px;\n  bottom: -4px;\n  border-radius: 50%;\n  width: 20px;\n  height: 20px;\n  background-color: #ffffff;\n  border: 1px solid ${props => props.theme.notificationColors[props.type] || '#000'};\n  color: ${props => props.theme.notificationColors[props.type] || '#000'};\n  box-shadow: ${props => props.theme.boxShadow};\n`;\n\ninterface NotificationMessageProps {\n  isExpanded?: boolean;\n}\n\nconst NotificationMessage = styled.div.attrs({\n  className: 'notification-item--message'\n})<NotificationMessageProps>`\n  flex-grow: 2;\n  width: ${props => props.theme.notificationPanelItemWidth}px;\n  margin: 0 1em;\n  overflow: ${props => (props.isExpanded ? 'auto' : 'hidden')};\n  padding-right: ${props => (props.isExpanded ? '1em' : 0)};\n\n  p {\n    margin-top: 0;\n    a {\n      color: #fff;\n      text-decoration: underline;\n    }\n  }\n`;\n\nconst NotificationIcon = styled.div`\n  svg {\n    vertical-align: text-top;\n  }\n`;\n\nconst icons = {\n  info: <Info data-testid={dataTestIds.infoIcon} />,\n  warning: <Warning data-testid={dataTestIds.warningIcon} />,\n  error: <Warning data-testid={dataTestIds.errorIcon} />,\n  success: <Checkmark data-testid={dataTestIds.successIcon} />\n};\n\nconst LinkRenderer = props => {\n  return (\n    <a href={props.href} target=\"_blank\" rel=\"noopener noreferrer\">\n      {props.children}\n    </a>\n  );\n};\n\ninterface NotificationItemProps {\n  notification: {\n    id: string;\n    type: string;\n    message: string;\n    count?: number;\n  };\n  isExpanded?: boolean;\n  removeNotification?: ActionHandler<typeof removeNotificationActions>;\n  theme?: any;\n}\n\nexport default function NotificationItemFactory() {\n  return class NotificationItem extends Component<NotificationItemProps> {\n    state = {\n      isExpanded: false\n    };\n\n    componentDidMount() {\n      if (this.props.isExpanded) {\n        this.setState({isExpanded: true});\n      }\n    }\n\n    render() {\n      const {notification, removeNotification} = this.props;\n      const {isExpanded} = this.state;\n\n      return (\n        <NotificationItemContentBlock isExpanded={isExpanded} theme={this.props.theme}>\n          {(notification.count || 0) > 1 ? (\n            <NotificationCounter type={notification.type} theme={this.props.theme}>\n              {notification.count}\n            </NotificationCounter>\n          ) : null}\n          <NotificationItemContent\n            className=\"notification-item\"\n            type={notification.type}\n            isExpanded={isExpanded}\n            onClick={() => this.setState({isExpanded: !isExpanded})}\n          >\n            <NotificationIcon className=\"notification-item--icon\">\n              {icons[notification.type]}\n            </NotificationIcon>\n            <NotificationMessage isExpanded={isExpanded} theme={this.props.theme}>\n              <ReactMarkdown source={notification.message} renderers={{link: LinkRenderer}} />\n            </NotificationMessage>\n            {typeof removeNotification === 'function' ? (\n              <div className=\"notification-item--action\">\n                <DeleteIcon height=\"10px\" onClick={() => removeNotification(notification.id)} />\n              </div>\n            ) : null}\n          </NotificationItemContent>\n        </NotificationItemContentBlock>\n      );\n    }\n  };\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport LoadingSpinner from '../common/loading-spinner';\nimport {FormattedMessage} from '@kepler.gl/localization';\n\nconst StyledSpinner = styled.div`\n  text-align: center;\n\n  span {\n    margin: 0 auto;\n  }\n`;\n\nconst StyledLoadingDialog = styled.div.attrs({\n  className: 'data-loading-dialog'\n})`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-grow: 1;\n\n  .loading-content {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .loading-message {\n    margin-left: 32px;\n    color: ${props => props.theme.titleColorLT};\n    font-weight: 500;\n    font-size: 14px;\n  }\n`;\n\ninterface LoadingDialogProps {\n  size?: number;\n  message?: string;\n}\n\nconst LoadingDialog: React.FC<LoadingDialogProps> = ({\n  size = 64,\n  message = 'modal.loadingDialog.loading'\n}) => (\n  <StyledLoadingDialog>\n    <div className=\"loading-content\">\n      <StyledSpinner>\n        <LoadingSpinner size={size} />\n      </StyledSpinner>\n      <div className=\"loading-message\">\n        <FormattedMessage id={message} />\n      </div>\n    </div>\n  </StyledLoadingDialog>\n);\n\nexport default LoadingDialog;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useEffect} from 'react';\nimport get from 'lodash.get';\n\nimport {MAP_THUMBNAIL_DIMENSION, EXPORT_IMG_RATIOS} from '@kepler.gl/constants';\nimport {SetExportImageSettingUpdaterAction} from '@kepler.gl/actions';\nimport {Provider} from '@kepler.gl/cloud-providers';\n\nexport type ImageModalContainerProps = {\n  provider?: Provider | null;\n  onUpdateImageSetting: (newSetting: SetExportImageSettingUpdaterAction['payload']) => void;\n  cleanupExportImage: () => void;\n  children?: React.ReactNode;\n};\n\n// TODO: this should be turned into a custom hook\n/**\n * A wrapper component in modals contain a image preview of the map with cloud providers\n * It sets export image size based on provider thumbnail size\n * @type {React.FunctionComponent<ImageModalContainerProps>}\n */\nconst ImageModalContainer: React.FC<ImageModalContainerProps> = ({\n  onUpdateImageSetting,\n  cleanupExportImage,\n  provider,\n  children\n}) => {\n  useEffect(() => {\n    onUpdateImageSetting({exporting: true});\n    return () => {\n      cleanupExportImage();\n    };\n  }, [onUpdateImageSetting, cleanupExportImage]);\n\n  useEffect(() => {\n    if (provider) {\n      if (provider.thumbnail) {\n        onUpdateImageSetting({\n          mapW: get(provider, ['thumbnail', 'width']) || MAP_THUMBNAIL_DIMENSION.width,\n          mapH: get(provider, ['thumbnail', 'height']) || MAP_THUMBNAIL_DIMENSION.height,\n          ratio: EXPORT_IMG_RATIOS.CUSTOM,\n          legend: false\n        });\n      }\n    } else {\n      onUpdateImageSetting({\n        mapW: MAP_THUMBNAIL_DIMENSION.width,\n        mapH: MAP_THUMBNAIL_DIMENSION.height,\n        ratio: EXPORT_IMG_RATIOS.CUSTOM,\n        legend: false\n      });\n    }\n  }, [provider, onUpdateImageSetting]);\n\n  return <>{children}</>;\n};\n\nexport default ImageModalContainer;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport CloudTile from '../cloud-tile';\nimport React from 'react';\nimport styled from 'styled-components';\nimport {Provider} from '@kepler.gl/cloud-providers';\nimport {dataTestIds} from '@kepler.gl/constants';\n\nconst StyledProviderSection = styled.div.attrs({\n  className: 'provider-selection'\n})`\n  display: flex;\n  gap: 8px;\n`;\n\ntype ProviderSelectProps = {\n  cloudProviders: Provider[];\n};\n\nexport const ProviderSelect: React.FC<ProviderSelectProps> = ({cloudProviders = []}) => (\n  <div data-testid={dataTestIds.providerSelect}>\n    {cloudProviders.length ? (\n      <StyledProviderSection>\n        {cloudProviders.map(provider => (\n          <CloudTile key={provider.name} provider={provider} />\n        ))}\n      </StyledProviderSection>\n    ) : (\n      <p>No storage provider available</p>\n    )}\n  </div>\n);\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {Component} from 'react';\nimport styled from 'styled-components';\nimport {ArrowRight} from '../common/icons';\n\nexport type CollapseButtonProps = {\n  isOpen: boolean;\n  onClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n};\n\nexport type SideBarProps = {\n  width: number;\n  isOpen: boolean;\n  minifiedWidth: number;\n  onOpenOrClose: (arg: {isOpen: boolean}) => void;\n  shouldShowCollapseButton?: boolean | null;\n  children?: React.ReactNode;\n};\n\nconst StyledSidePanelContainer = styled.div<{width: number}>`\n  z-index: 99;\n  height: 100%;\n  width: ${props => props.width + 2 * props.theme.sidePanel.margin.left}px;\n  display: flex;\n  transition: width 250ms;\n  position: absolute;\n  padding-top: ${props => props.theme.sidePanel.margin.top}px;\n  padding-right: ${props => props.theme.sidePanel.margin.right}px;\n  padding-bottom: ${props => props.theme.sidePanel.margin.bottom}px;\n  padding-left: ${props => props.theme.sidePanel.margin.left}px;\n  pointer-events: none; /* prevent padding from blocking input */\n  & > * {\n    /* all children should allow input */\n    pointer-events: all;\n  }\n`;\n\nconst SideBarContainer = styled.div<{left: number}>`\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);\n  transition: left 250ms, right 250ms;\n  left: ${props => props.left}px;\n  align-items: stretch;\n  flex-grow: 1;\n`;\n\nconst SideBarInner = styled.div`\n  background-color: ${props => props.theme.sidePanelBg};\n  border-radius: 1px;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  border-left: ${props => props.theme.sidePanelBorder}px solid\n    ${props => props.theme.sidePanelBorderColor};\n`;\n\nconst StyledCollapseButton = styled.div`\n  align-items: center;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);\n  justify-content: center;\n  background-color: ${props => props.theme.sideBarCloseBtnBgd};\n  border-radius: 1px;\n  color: ${props => props.theme.sideBarCloseBtnColor};\n  display: flex;\n  height: 20px;\n  position: absolute;\n  right: -8px;\n  top: ${props => props.theme.sidePanel.margin.top}px;\n  width: 20px;\n\n  :hover {\n    cursor: pointer;\n    box-shadow: none;\n    background-color: ${props => props.theme.sideBarCloseBtnBgdHover};\n  }\n`;\n\nexport const CollapseButtonFactory = () => {\n  const CollapseButton = ({onClick, isOpen}: CollapseButtonProps) => (\n    <StyledCollapseButton className=\"side-bar__close\" onClick={onClick}>\n      <ArrowRight height=\"12px\" style={{transform: `rotate(${isOpen ? 180 : 0}deg)`}} />\n    </StyledCollapseButton>\n  );\n  return CollapseButton;\n};\n\nSidebarFactory.deps = [CollapseButtonFactory];\n\nfunction SidebarFactory(CollapseButton: ReturnType<typeof CollapseButtonFactory>) {\n  return class SideBar extends Component<SideBarProps> {\n    static defaultProps = {\n      width: 300,\n      minifiedWidth: 0,\n      isOpen: true,\n      onOpenOrClose: function noop() {},\n      shouldShowCollapseButton: true\n    };\n\n    _onOpenOrClose = () => {\n      window.localStorage.setItem(\"issidebarshow\",this.props.isOpen?\"0\":\"1\");\n      if (this.props.isOpen){\n          window.localStorage.setItem(\"actedupon1\",\"Yes\");\n          window.localStorage.setItem(\"actedupon3\",\"Yes\");\n      }else{\n          window.localStorage.setItem(\"actedupon2\",\"No\");\n          window.localStorage.setItem(\"actedupon4\",\"No\");\n      } \n      this.props.onOpenOrClose({isOpen: !this.props.isOpen});\n    };\n\n    render() {\n      const {isOpen, minifiedWidth, width, shouldShowCollapseButton} = this.props;\n      const horizontalOffset = isOpen ? 0 : minifiedWidth - width;\n\n      return (\n        <StyledSidePanelContainer width={isOpen ? width : 0} className=\"side-panel--container\">\n          <SideBarContainer\n            className=\"side-bar\"\n            style={{width: `${width}px`}}\n            left={horizontalOffset}\n          >\n            {isOpen ? (\n              <SideBarInner className=\"side-bar__inner\">{this.props.children}</SideBarInner>\n            ) : null}\n            {shouldShowCollapseButton ? (\n              <CollapseButton isOpen={isOpen} onClick={this._onOpenOrClose} />\n            ) : null}\n          </SideBarContainer>\n        </StyledSidePanelContainer>\n      );\n    }\n  };\n}\n\nexport default SidebarFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {Component, useCallback} from 'react';\n\nimport {injectIntl, WrappedComponentProps} from 'react-intl';\nimport styled from 'styled-components';\nimport {FormattedMessage} from '@kepler.gl/localization';\n\nimport LayerListFactory from './layer-panel/layer-list';\nimport DatasetLayerGroupFactory from './layer-panel/dataset-layer-group';\nimport PanelViewListToggleFactory from './panel-view-list-toggle';\nimport PanelTitleFactory from './panel-title';\nimport DatasetSectionFactory from './layer-panel/dataset-section';\nimport AddLayerButtonFactory from './layer-panel/add-layer-button';\n\nimport ItemSelector from '../common/item-selector/item-selector';\nimport {PanelLabel, SidePanelDivider, SidePanelSection} from '../common/styled-components';\nimport InfoHelperFactory from '../common/info-helper';\n\nimport {LAYER_BLENDINGS, OVERLAY_BLENDINGS, PANEL_VIEW_TOGGLES} from '@kepler.gl/constants';\nimport {Layer, LayerClassesType} from '@kepler.gl/layers';\nimport {UIStateActions, VisStateActions, MapStateActions, ActionHandler} from '@kepler.gl/actions';\nimport {SidePanelItem} from '../types';\nimport {PanelListView} from '@kepler.gl/types';\nimport {Datasets} from '@kepler.gl/table';\n\ntype LayerBlendingSelectorProps = {\n  layerBlending: string;\n  updateLayerBlending: ActionHandler<typeof VisStateActions.updateLayerBlending>;\n} & WrappedComponentProps;\n\ntype OverlayBlendingSelectorProps = {\n  overlayBlending: string;\n  updateOverlayBlending: ActionHandler<typeof VisStateActions.updateOverlayBlending>;\n  infoHelper: React.ReactNode;\n} & WrappedComponentProps;\n\ntype LayerManagerProps = {\n  datasets: Datasets;\n  layers: Layer[];\n  layerOrder: string[];\n  layerClasses: LayerClassesType;\n  layerBlending: string;\n  overlayBlending: string;\n  uiStateActions: typeof UIStateActions;\n  visStateActions: typeof VisStateActions;\n  mapStateActions: typeof MapStateActions;\n  showAddDataModal: () => void;\n  removeDataset: ActionHandler<typeof UIStateActions.openDeleteModal>;\n  showDatasetTable: ActionHandler<typeof VisStateActions.showDatasetTable>;\n  updateTableColor: ActionHandler<typeof VisStateActions.updateTableColor>;\n  panelListView: PanelListView;\n  panelMetadata: SidePanelItem;\n} & WrappedComponentProps;\n\nexport const LayerBlendingSelector = React.memo(\n  ({layerBlending, updateLayerBlending, intl}: LayerBlendingSelectorProps) => {\n    const labeledLayerBlendings = Object.keys(LAYER_BLENDINGS).reduce(\n      (acc, current) => ({\n        ...acc,\n        [intl.formatMessage({id: LAYER_BLENDINGS[current].label})]: current\n      }),\n      {}\n    );\n\n    const onChange = useCallback(blending => updateLayerBlending(labeledLayerBlendings[blending]), [\n      updateLayerBlending,\n      labeledLayerBlendings\n    ]);\n\n    return (\n      <SidePanelSection>\n        <PanelLabel>\n          <FormattedMessage id=\"layerBlending.title\" />\n        </PanelLabel>\n        <ItemSelector\n          selectedItems={intl.formatMessage({id: LAYER_BLENDINGS[layerBlending].label})}\n          options={Object.keys(labeledLayerBlendings)}\n          multiSelect={false}\n          searchable={false}\n          onChange={onChange}\n        />\n      </SidePanelSection>\n    );\n  }\n);\nLayerBlendingSelector.displayName = 'LayerBlendingSelector';\n\nconst InfoHelperWrapper = styled.div`\n  float: right;\n`;\n\nconst OverlayBlendingSelectorTitleRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst OverlayBlendingSelector = React.memo(\n  ({overlayBlending, updateOverlayBlending, intl, infoHelper}: OverlayBlendingSelectorProps) => {\n    const labeledOverlayBlendings = Object.keys(OVERLAY_BLENDINGS).reduce(\n      (acc, current) => ({\n        ...acc,\n        [intl.formatMessage({id: OVERLAY_BLENDINGS[current].label})]: current\n      }),\n      {}\n    );\n\n    const onChange = useCallback(\n      blending => updateOverlayBlending(labeledOverlayBlendings[blending]),\n      [updateOverlayBlending, labeledOverlayBlendings]\n    );\n\n    return (\n      <SidePanelSection>\n        <OverlayBlendingSelectorTitleRow>\n          <PanelLabel>\n            <FormattedMessage id=\"overlayBlending.title\" />\n          </PanelLabel>\n          <InfoHelperWrapper>{infoHelper}</InfoHelperWrapper>\n        </OverlayBlendingSelectorTitleRow>\n        <ItemSelector\n          selectedItems={intl.formatMessage({id: OVERLAY_BLENDINGS[overlayBlending].label})}\n          options={Object.keys(labeledOverlayBlendings)}\n          multiSelect={false}\n          searchable={false}\n          onChange={onChange}\n        />\n      </SidePanelSection>\n    );\n  }\n);\nOverlayBlendingSelector.displayName = 'OverlayBlendingSelector';\n\nLayerManagerFactory.deps = [\n  LayerListFactory,\n  DatasetLayerGroupFactory,\n  PanelViewListToggleFactory,\n  PanelTitleFactory,\n  DatasetSectionFactory,\n  AddLayerButtonFactory,\n  InfoHelperFactory\n];\n\nfunction LayerManagerFactory(\n  LayerList: ReturnType<typeof LayerListFactory>,\n  DatasetLayerGroup: ReturnType<typeof DatasetLayerGroupFactory>,\n  PanelViewListToggle: ReturnType<typeof PanelViewListToggleFactory>,\n  PanelTitle: ReturnType<typeof PanelTitleFactory>,\n  DatasetSection: ReturnType<typeof DatasetSectionFactory>,\n  AddLayerButton: ReturnType<typeof AddLayerButtonFactory>,\n  InfoHelper: ReturnType<typeof InfoHelperFactory>\n) {\n  class LayerManager extends Component<LayerManagerProps> {\n    _addLayer = (dataset: string) => {\n      const {visStateActions} = this.props;\n      visStateActions.addLayer(undefined, dataset);\n    };\n\n    _togglePanelListView = (listView: string) => {\n      const {uiStateActions} = this.props;\n      uiStateActions.togglePanelListView({panelId: 'layer', listView});\n    };\n\n    render() {\n      const {\n        layers,\n        datasets,\n        intl,\n        layerOrder,\n        showAddDataModal,\n        updateTableColor,\n        showDatasetTable,\n        removeDataset,\n        uiStateActions,\n        visStateActions,\n        mapStateActions,\n        panelListView,\n        panelMetadata\n      } = this.props;\n\n      const isSortByDatasetMode = panelListView === PANEL_VIEW_TOGGLES.byDataset;\n\n      return (\n        <div className=\"layer-manager\">\n          <SidePanelSection>\n            <PanelViewListToggle\n              togglePanelListView={this._togglePanelListView}\n              mode={panelListView}\n            />\n          </SidePanelSection>\n          <DatasetSection\n            datasets={datasets}\n            showDatasetTable={showDatasetTable}\n            updateTableColor={updateTableColor}\n            removeDataset={removeDataset}\n            showDeleteDataset\n            showDatasetList={!isSortByDatasetMode}\n            showAddDataModal={showAddDataModal}\n          />\n          <SidePanelDivider />\n          <SidePanelSection>\n            <PanelTitle\n              className=\"layer-manager-title\"\n              title={intl.formatMessage({id: panelMetadata.label})}\n            >\n              <AddLayerButton datasets={datasets} onAdd={this._addLayer} />\n            </PanelTitle>\n          </SidePanelSection>\n          <SidePanelSection>\n            {isSortByDatasetMode ? (\n              <DatasetLayerGroup\n                datasets={datasets}\n                showDatasetTable={showDatasetTable}\n                layers={layers}\n                updateTableColor={updateTableColor}\n                removeDataset={removeDataset}\n                layerOrder={layerOrder}\n                layerClasses={this.props.layerClasses}\n                uiStateActions={uiStateActions}\n                visStateActions={visStateActions}\n                mapStateActions={mapStateActions}\n                showDeleteDataset\n              />\n            ) : (\n              // TODO replace ignore\n              // @ts-ignore\n              <LayerList\n                layers={layers}\n                datasets={datasets}\n                layerOrder={layerOrder}\n                uiStateActions={uiStateActions}\n                visStateActions={visStateActions}\n                mapStateActions={mapStateActions}\n                layerClasses={this.props.layerClasses}\n              />\n            )}\n          </SidePanelSection>\n          <LayerBlendingSelector\n            layerBlending={this.props.layerBlending}\n            updateLayerBlending={visStateActions.updateLayerBlending}\n            intl={intl}\n          />\n          <OverlayBlendingSelector\n            overlayBlending={this.props.overlayBlending}\n            updateOverlayBlending={visStateActions.updateOverlayBlending}\n            intl={intl}\n            infoHelper={\n              <InfoHelper\n                id={`overlayBlending-description`}\n                description={'overlayBlending.description'}\n              />\n            }\n          />\n        </div>\n      );\n    }\n  }\n  return injectIntl(LayerManager);\n}\n\nexport default LayerManagerFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useCallback} from 'react';\nimport classnames from 'classnames';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport {media} from '@kepler.gl/styles';\nimport {FormattedMessage, useIntl} from 'react-intl';\nimport {LoadingMethod} from './load-data-modal';\n\nconst ModalTab = styled.div`\n  align-items: flex-end;\n  display: flex;\n  border-bottom: 1px solid #d8d8d8;\n  margin-bottom: 32px;\n  justify-content: space-between;\n\n  .load-data-modal__tab__inner {\n    display: flex;\n    width: 100%;\n  }\n\n  .load-data-modal__tab__item.active {\n    color: ${props => props.theme.textColorLT};\n    border-bottom: 3px solid ${props => props.theme.textColorLT};\n    font-weight: 500;\n  }\n\n  ${media.portable`\n    font-size: 12px;\n  `};\n`;\n\nconst StyledLoadDataModalTabItem = styled.div`\n  border-bottom: 3px solid transparent;\n  cursor: pointer;\n  margin-left: 32px;\n  padding: 16px 0;\n  font-size: 14px;\n  font-weight: 400;\n  color: ${props => props.theme.subtextColorLT};\n\n  ${media.portable`\n    margin-left: 16px;\n    font-size: 12px;\n  `};\n\n  :first-child {\n    margin-left: 0;\n    padding-left: 0;\n  }\n\n  :hover {\n    color: ${props => props.theme.textColorLT};\n  }\n`;\n\nconst noop = () => {};\n\ninterface ModalTabItemProps {\n  currentMethod?: string;\n  method: LoadingMethod;\n  toggleMethod: (method: LoadingMethod) => void;\n}\n\nexport const ModalTabItem: React.FC<ModalTabItemProps> = ({\n  currentMethod,\n  method,\n  toggleMethod\n}) => {\n  const onClick = useCallback(() => toggleMethod(method), [method, toggleMethod]);\n  const intl = useIntl();\n\n  return method.tabElementType ? (\n    <method.tabElementType onClick={onClick} intl={intl} />\n  ) : (\n    <StyledLoadDataModalTabItem\n      className={classnames('load-data-modal__tab__item', {\n        active: currentMethod && method.id === currentMethod\n      })}\n      onClick={onClick}\n    >\n      <div>{method.label ? <FormattedMessage id={method.label} /> : method.id}</div>\n    </StyledLoadDataModalTabItem>\n  );\n};\n\nfunction ModalTabsFactory() {\n  const ModalTabs = ({currentMethod, toggleMethod, loadingMethods}) => (\n    <ModalTab className=\"load-data-modal__tab\">\n      <div className=\"load-data-modal__tab__inner\">\n        {loadingMethods.map(method => (\n          <ModalTabItem\n            key={method.id}\n            method={method}\n            currentMethod={currentMethod}\n            toggleMethod={toggleMethod}\n          />\n        ))}\n      </div>\n    </ModalTab>\n  );\n\n  ModalTabs.propTypes = {\n    toggleMethod: PropTypes.func.isRequired,\n    currentMethod: PropTypes.string,\n    loadingMethods: PropTypes.arrayOf(PropTypes.object)\n  };\n\n  ModalTabs.defaultProps = {\n    toggleMethod: noop,\n    currentMethod: null,\n    loadingMethods: []\n  };\n\n  return ModalTabs;\n}\n\nexport default ModalTabsFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useEffect, useState} from 'react';\nimport styled, {ThemeProvider} from 'styled-components';\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\nimport {themeLT} from '@kepler.gl/styles';\nimport ImageModalContainer, {ImageModalContainerProps} from './image-modal-container';\n\nimport {\n  StyledModalContent,\n  StyledExportSection,\n  InputLight,\n  Button\n} from '../common/styled-components';\nimport StatusPanel from './status-panel';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {useCloudListProvider} from '../hooks/use-cloud-list-provider';\nimport {ProviderSelect} from './cloud-components/provider-select';\nimport {Provider} from '@kepler.gl/cloud-providers';\nimport {cleanupExportImage as cleanupExportImageAction} from '@kepler.gl/actions';\nimport {dataTestIds} from '@kepler.gl/constants';\n\nexport const StyledInputLabel = styled.label`\n  font-size: 12px;\n  color: ${props => props.theme.textColorLT};\n  letter-spacing: 0.2px;\n`;\n\nexport const StyleSharingUrl = styled.div.attrs({\n  className: 'sharing-url'\n})`\n  width: 100%;\n  display: flex;\n  margin-bottom: 14px;\n  flex-direction: column;\n\n  input {\n    border-right: 0;\n  }\n\n  .button {\n    border-top-left-radius: 0;\n    border-bottom-left-radius: 0;\n  }\n`;\n\ninterface SharingUrlProps {\n  url: string;\n  message?: string;\n}\n\nexport const SharingUrl: React.FC<SharingUrlProps> = ({url, message = ''}) => {\n  const [copied, setCopy] = useState(false);\n  return (\n    <StyleSharingUrl>\n      <StyledInputLabel>{message}</StyledInputLabel>\n      <div style={{display: 'flex'}}>\n        <InputLight type=\"text\" value={url} readOnly />\n        <CopyToClipboard text={url} onCopy={() => setCopy(true)}>\n          <Button width=\"80px\">{copied ? 'Copied!' : 'Copy'}</Button>\n        </CopyToClipboard>\n      </div>\n    </StyleSharingUrl>\n  );\n};\nconst nop = () => {};\n\nconst StyledShareMapModal = styled(StyledModalContent)`\n  padding: 24px 72px 40px 72px;\n  margin: 0 -72px -40px -72px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst StyledInnerDiv = styled.div`\n  min-height: 500px;\n`;\n\nconst UNDERLINE_TEXT_DECORATION_STYLE = {textDecoration: 'underline'};\n\nconst ShareMapHeader = ({cloudProviders}) => {\n  return (\n    <StyledExportSection>\n      <div className=\"description\">\n        <div className=\"title\">\n          <FormattedMessage id={'modal.shareMap.title'} />\n        </div>\n      </div>\n      <ProviderSelect cloudProviders={cloudProviders} />\n    </StyledExportSection>\n  );\n};\n\ninterface ShareMapUrlModalFactoryProps {\n  isProviderLoading?: boolean;\n  onExport?: (provider: Provider) => void;\n  providerError?: string;\n  successInfo?: {shareUrl?: string; folderLink?: string};\n  onUpdateImageSetting: ImageModalContainerProps['onUpdateImageSetting'];\n  cleanupExportImage: typeof cleanupExportImageAction;\n}\n\nexport default function ShareMapUrlModalFactory() {\n  const ShareMapUrlModal: React.FC<ShareMapUrlModalFactoryProps> = ({\n    isProviderLoading = false,\n    onExport = nop,\n    providerError = null,\n    successInfo = {},\n    onUpdateImageSetting = nop,\n    cleanupExportImage\n  }) => {\n    const {provider, cloudProviders} = useCloudListProvider();\n    const {shareUrl, folderLink} = successInfo;\n\n    useEffect(() => {\n      if (provider) {\n        onExport(provider);\n      }\n    }, [provider]);\n\n    return (\n      <ThemeProvider theme={themeLT}>\n        <ImageModalContainer\n          provider={provider}\n          onUpdateImageSetting={onUpdateImageSetting}\n          cleanupExportImage={cleanupExportImage}\n        >\n          <StyledShareMapModal className=\"export-cloud-modal\">\n            <ShareMapHeader cloudProviders={cloudProviders} />\n            {provider?.hasSharingUrl() ? (\n              <StyledInnerDiv data-testid={dataTestIds.providerShareMap}>\n                <StyledExportSection>\n                  <div className=\"description\">\n                    <div className=\"title\">\n                      <FormattedMessage id={'modal.shareMap.shareUriTitle'} />\n                    </div>\n                    <div className=\"subtitle\">\n                      <FormattedMessage id={'modal.shareMap.shareUriSubtitle'} />\n                    </div>\n                  </div>\n                  <div className=\"selection\">\n                    <div className=\"title warning\">\n                      <FormattedMessage id={'modal.shareMap.shareDisclaimer'} />\n                    </div>\n                  </div>\n                </StyledExportSection>\n                <StyledExportSection disabled={isProviderLoading}>\n                  <div className=\"description\">\n                    <div className=\"title\">\n                      <FormattedMessage id={'modal.shareMap.cloudTitle'} />\n                    </div>\n                    <div className=\"subtitle\">\n                      <FormattedMessage id={'modal.shareMap.cloudSubtitle'} />\n                    </div>\n                  </div>\n                </StyledExportSection>\n                {isProviderLoading || providerError ? (\n                  <StatusPanel\n                    isLoading={isProviderLoading}\n                    error={providerError}\n                    providerIcon={provider.icon}\n                  />\n                ) : null}\n                {shareUrl && (\n                  <StyledExportSection>\n                    <div className=\"description\">\n                      <div className=\"title\">Share Url</div>\n                    </div>\n                    <div className=\"selection\">\n                      <SharingUrl key={0} url={shareUrl} />\n                      {provider && folderLink && (\n                        <a\n                          key={1}\n                          href={folderLink}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          style={UNDERLINE_TEXT_DECORATION_STYLE}\n                        >\n                          {provider.name}\n                        </a>\n                      )}\n                    </div>\n                  </StyledExportSection>\n                )}\n              </StyledInnerDiv>\n            ) : null}\n          </StyledShareMapModal>\n        </ImageModalContainer>\n      </ThemeProvider>\n    );\n  };\n\n  return ShareMapUrlModal;\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useState, useCallback, useEffect, useRef} from 'react';\nimport styled from 'styled-components';\n\nimport {PanelLabel, SidePanelSection} from '../../common/styled-components';\nimport RangeSliderFactory from '../../common/range-slider';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {KeyEvent} from '@kepler.gl/constants';\nimport {Checkbox} from '../..';\nimport {Layer, LayerBaseConfig} from '@kepler.gl/layers';\nimport {isInRange, clamp} from '@kepler.gl/utils';\n\ntype LazyInputProps = {\n  value: string | [string, string];\n  name: string;\n  onChange: (n: string | [string, string], v?: string | [string, string]) => void;\n};\n\ntype CustomInputProps = {\n  value: string | [string, string];\n  isRanged: boolean;\n  onChangeCustomInput: (v: [string, string]) => void;\n};\n\ntype VisConfigSliderProps = {\n  layer: Layer;\n  property: string;\n  onChange: (v: Record<string, number | string | number[] | string[]>) => void;\n  label?: string | ((c: LayerBaseConfig) => string);\n  range: [number, number];\n  step?: number;\n  isRanged: boolean;\n  disabled?: boolean;\n  inputTheme?: string;\n  allowCustomValue?: boolean;\n};\n\nconst InputWrapper = styled.div`\n  display: flex;\n  line-height: 12px;\n  margin-bottom: 12px;\n`;\n\nconst CustomInputWrapper = styled.div`\n  display: flex;\n`;\n\nconst CustomInputLabel = styled.label`\n  color: ${props => props.theme.textColor};\n  font-weight: 500;\n  letter-spacing: 0.2px;\n  font-size: ${props => props.theme.layerConfigGroupLabelLabelFontSize};\n  padding-right: 15px;\n\n  &:last-child {\n    position: absolute;\n    right: 0;\n    padding: 0;\n  }\n`;\n\nconst RangeInput = styled.input`\n  ${props => props.theme.input};\n  font-size: ${props => props.theme.sliderInputFontSize};\n  width: 44px;\n  overflow: auto;\n  height: 20px;\n  margin-top: 5px;\n`;\n\nconst LazyInput: React.FC<LazyInputProps> = ({value, onChange, name}) => {\n  const [stateValue, setValue] = useState(value);\n  const inputRef = useRef(null);\n  useEffect(() => {\n    setValue(value);\n  }, [value]);\n\n  const onKeyDown = useCallback(\n    e => {\n      switch (e.keyCode) {\n        case KeyEvent.DOM_VK_ENTER:\n        case KeyEvent.DOM_VK_RETURN:\n          onChange(stateValue);\n          if (inputRef !== null) {\n            // @ts-ignore\n            inputRef?.current.blur();\n          }\n          break;\n        default:\n          break;\n      }\n    },\n    [onChange, stateValue]\n  );\n\n  const _onChange = useCallback(e => setValue(e.target.value), [setValue]);\n  const onBlur = useCallback(() => onChange(name, stateValue), [onChange, name, stateValue]);\n\n  return (\n    <RangeInput\n      type=\"number\"\n      ref={inputRef}\n      value={stateValue}\n      onChange={_onChange}\n      onBlur={onBlur}\n      onKeyDown={onKeyDown}\n      id={name}\n    />\n  );\n};\n\nconst CustomInput: React.FC<CustomInputProps> = ({isRanged, value, onChangeCustomInput}) => {\n  const onChangeInput = useCallback(\n    (name, v) => {\n      if (isRanged) onChangeCustomInput(name === 'value0' ? [v, value[1]] : [value[0], v]);\n      else onChangeCustomInput(v);\n    },\n    [isRanged, value, onChangeCustomInput]\n  );\n\n  return (\n    <CustomInputWrapper>\n      {isRanged ? (\n        <InputWrapper>\n          <CustomInputLabel>\n            min\n            <LazyInput name=\"value0\" value={value[0]} onChange={onChangeInput} />\n          </CustomInputLabel>\n          <CustomInputLabel>\n            max\n            <LazyInput name=\"value1\" value={value[1]} onChange={onChangeInput} />\n          </CustomInputLabel>\n        </InputWrapper>\n      ) : (\n        <InputWrapper>\n          <LazyInput name=\"value\" value={value} onChange={onChangeInput} />\n        </InputWrapper>\n      )}\n    </CustomInputWrapper>\n  );\n};\n\nVisConfigSliderFactory.deps = [RangeSliderFactory];\n\nexport default function VisConfigSliderFactory(RangeSlider: ReturnType<typeof RangeSliderFactory>) {\n  const VisConfigSlider: React.FC<VisConfigSliderProps> = ({\n    layer: {config},\n    property,\n    label,\n    range,\n    step,\n    isRanged,\n    allowCustomValue,\n    disabled,\n    onChange,\n    inputTheme\n  }) => {\n    const value = config.visConfig[property];\n    const [custom, setCustom] = useState(false || !isInRange(value, range));\n\n    const onChangeCheckbox = useCallback(() => {\n      if (custom) {\n        // we are swithcing from custom to not custom\n        // adjust value to range\n        const adjustedValue = isRanged\n          ? [clamp(range, value[0]), clamp(range, value[1])]\n          : clamp(range, value);\n        onChange({[property]: adjustedValue});\n      }\n      setCustom(!custom);\n    }, [onChange, property, isRanged, value, range, custom, setCustom]);\n\n    return (\n      <SidePanelSection disabled={Boolean(disabled)}>\n        {label ? (\n          <PanelLabel>\n            {typeof label === 'string' ? (\n              <FormattedMessage id={label} />\n            ) : typeof label === 'function' ? (\n              <FormattedMessage id={label(config)} />\n            ) : (\n              <FormattedMessage id={`property.${property}`} />\n            )}\n          </PanelLabel>\n        ) : null}\n\n        {allowCustomValue ? (\n          <InputWrapper>\n            <CustomInputLabel>custom input</CustomInputLabel>\n            <Checkbox id={`property.${property}`} checked={custom} onChange={onChangeCheckbox} />\n          </InputWrapper>\n        ) : null}\n\n        {!custom ? (\n          <RangeSlider\n            range={range}\n            value0={isRanged ? value[0] : range[0]}\n            value1={isRanged ? value[1] : value}\n            step={step}\n            isRanged={Boolean(isRanged)}\n            onChange={v => onChange({[property]: isRanged ? v : v[1]})}\n            inputTheme={inputTheme}\n            showInput\n          />\n        ) : (\n          <CustomInput\n            isRanged={isRanged}\n            value={value}\n            onChangeCustomInput={v => onChange({[property]: v})}\n          />\n        )}\n      </SidePanelSection>\n    );\n  };\n\n  return VisConfigSlider;\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport InfoHelperFactory from '../../common/info-helper';\nimport Switch from '../../common/switch';\nimport {SidePanelSection, PanelLabel} from '../../common/styled-components';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {capitalizeFirstLetter} from '@kepler.gl/utils';\nimport {Layer} from '@kepler.gl/layers';\n\ntype VisConfigSwitchProps = {\n  layer: Layer;\n  property: string;\n  onChange: (v: Record<string, boolean>) => void;\n  label?: string;\n  description?: string;\n  disabled?: boolean;\n};\n\nconst StyledVisConfigSwitch = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  .vis-config-switch__title {\n    display: flex;\n  }\n`;\n\nVisConfigSwitchFactory.deps = [InfoHelperFactory];\nfunction VisConfigSwitchFactory(InfoHelper: ReturnType<typeof InfoHelperFactory>) {\n  const VisConfigSwitch: React.FC<VisConfigSwitchProps> = ({\n    layer: {id, config},\n    property,\n    onChange,\n    label,\n    description,\n    disabled\n  }) => (\n    <SidePanelSection disabled={Boolean(disabled)}>\n      <StyledVisConfigSwitch className=\"vis-config-switch\">\n        <div className=\"vis-config-switch__title\">\n          {label ? (\n            <PanelLabel>\n              {(label && <FormattedMessage id={label} />) || capitalizeFirstLetter(property)}\n            </PanelLabel>\n          ) : null}\n          {description ? (\n            <div>\n              <InfoHelper description={description} id={`${id}-${property}-description`} />\n            </div>\n          ) : null}\n        </div>\n        <div className=\"vis-config-switch__switch\">\n          <Switch\n            checked={config.visConfig[property]}\n            id={`${id}-${property}-switch`}\n            onChange={() => onChange({[property]: !config.visConfig[property]})}\n          />\n        </div>\n      </StyledVisConfigSwitch>\n    </SidePanelSection>\n  );\n\n  return VisConfigSwitch;\n}\nexport default VisConfigSwitchFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useCallback, useMemo} from 'react';\nimport styled from 'styled-components';\n\nimport {ColumnPairs, LayerColumns, LayerBaseConfig} from '@kepler.gl/layers';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {FieldPair, Field} from '@kepler.gl/types';\nimport {toArray} from '@kepler.gl/utils';\n\nimport ColumnSelectorFactory from './column-selector';\nimport {MinimalField} from '../../common/field-selector';\nimport {PanelLabel, SidePanelSection} from '../../common/styled-components';\n\nexport type LayerColumnConfigProps<FieldOption extends MinimalField> = {\n  columns: LayerColumns;\n  fields: FieldOption[];\n  assignColumnPairs: (key: string, pair: string) => LayerColumns;\n  assignColumn: (key: string, field: FieldOption) => LayerColumns;\n  updateLayerConfig: (newConfig: Partial<LayerBaseConfig>) => void;\n  columnPairs?: ColumnPairs | null;\n  fieldPairs?: FieldPair[];\n  columnLabels?: Record<string, string>;\n};\n\nexport type EnhancedFieldPair = {\n  name: string;\n  type: 'point';\n  pair: FieldPair['pair'];\n};\n\nconst TopRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\n/**\n * only provide suggested field pairs if there is a match,\n * otherwise the user can select a suggested field pair that will create invalid columns and a hard crash\n */\nfunction getValidFieldPairsSuggestionsForColumn(\n  enhancedFieldPairs: EnhancedFieldPair[] | null,\n  columnPairs: ColumnPairs | null | undefined,\n  columnKey: string\n): EnhancedFieldPair[] | null {\n  if (enhancedFieldPairs && columnPairs?.[columnKey]) {\n    const columnPair = columnPairs[columnKey];\n    const matchingFieldPairs = enhancedFieldPairs.filter(({pair}) => {\n      return toArray(columnPair.fieldPairKey).some(fieldPairKey =>\n        pair.hasOwnProperty(fieldPairKey)\n      );\n    });\n    return matchingFieldPairs.length > 0 ? matchingFieldPairs : null;\n  } else {\n    return null;\n  }\n}\n\nLayerColumnConfigFactory.deps = [ColumnSelectorFactory];\n\nfunction LayerColumnConfigFactory(ColumnSelector: ReturnType<typeof ColumnSelectorFactory>) {\n  const LayerColumnConfig: React.FC<LayerColumnConfigProps<Field>> = ({\n    columnPairs,\n    fieldPairs,\n    columns,\n    columnLabels,\n    fields,\n    updateLayerConfig,\n    assignColumn,\n    assignColumnPairs\n  }) => {\n    const enhancedFieldPairs: EnhancedFieldPair[] | null = useMemo(\n      () =>\n        columnPairs && fieldPairs\n          ? fieldPairs.map(fp => ({\n              name: fp.defaultName,\n              type: 'point',\n              pair: fp.pair\n            }))\n          : null,\n      [columnPairs, fieldPairs]\n    );\n\n    const onUpdateColumn = useCallback(\n      (key, value) => {\n        const assignedColumns =\n          value && value.pair && columnPairs\n            ? assignColumnPairs(key, value.pair)\n            : assignColumn(key, value);\n\n        updateLayerConfig({columns: assignedColumns});\n      },\n      [updateLayerConfig, columnPairs, assignColumnPairs, assignColumn]\n    );\n\n    if (!Object.keys(columns).length) {\n      // don't render if columns is empty\n      return <div />;\n    }\n\n    return (\n      <div>\n        <SidePanelSection>\n          <div className=\"layer-config__column\">\n            <TopRow>\n              <PanelLabel>\n                <FormattedMessage id={'columns.title'} />\n              </PanelLabel>\n              <PanelLabel>\n                <FormattedMessage id=\"layer.required\" />\n              </PanelLabel>\n            </TopRow>\n            {Object.keys(columns).map(key => (\n              <ColumnSelector\n                column={columns[key]}\n                columns={columns}\n                label={(columnLabels && columnLabels[key]) || key}\n                key={key}\n                allFields={fields}\n                fieldPairs={getValidFieldPairsSuggestionsForColumn(\n                  enhancedFieldPairs,\n                  columnPairs,\n                  key\n                )}\n                onSelect={val => onUpdateColumn(key, val)}\n              />\n            ))}\n          </div>\n        </SidePanelSection>\n      </div>\n    );\n  };\n\n  return LayerColumnConfig;\n}\n\nexport default LayerColumnConfigFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {ComponentType} from 'react';\nimport styled, {withTheme} from 'styled-components';\nimport {KEPLER_UNFOLDED_BUCKET} from '@kepler.gl/constants';\nimport classNames from 'classnames';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {BaseProps} from '../../common/icons';\n\nexport type LayerTypeListItemProps = {\n  value: {\n    icon: ComponentType<Partial<BaseProps>>;\n    label: string;\n  };\n  isTile?: boolean;\n  className?: string;\n};\n\ntype WithThemeProps = LayerTypeListItemProps & {theme: Record<string, string>};\n\nexport type LayerTypeListItemType = React.FC<LayerTypeListItemProps>;\n\nconst StyledListItem = styled.div`\n  &.list {\n    display: flex;\n    align-items: center;\n\n    .layer-type-selector__item__icon {\n      color: ${props => props.theme.activeColor};\n      background-size: ${props => props.theme.layerTypeIconSizeSM}px\n        ${props => props.theme.layerTypeIconSizeSM}px;\n      height: ${props => props.theme.layerTypeIconSizeSM}px;\n      width: ${props => props.theme.layerTypeIconSizeSM}px;\n      margin-right: 12px;\n    }\n  }\n\n  .layer-type-selector__item__icon {\n    color: ${props => props.theme.labelColor};\n    display: flex;\n    background-image: url(${`${KEPLER_UNFOLDED_BUCKET}/images/kepler.gl-layer-icon-bg.png`});\n    background-size: ${props => props.theme.layerTypeIconSizeL}px\n      ${props => props.theme.layerTypeIconSizeL}px;\n    height: ${props => props.theme.layerTypeIconSizeL}px;\n    width: ${props => props.theme.layerTypeIconSizeL}px;\n  }\n\n  .layer-type-selector__item__label {\n    text-transform: capitalize;\n    font-size: 12px;\n    text-align: center;\n    color: ${props => props.theme.selectColor};\n  }\n`;\n\nexport function LayerTypeListItemFactory() {\n  const LayerTypeListItem: React.FC<WithThemeProps> = ({value, isTile, theme}) => (\n    <StyledListItem\n      className={classNames('layer-type-selector__item__inner', {\n        list: !isTile\n      })}\n    >\n      <div className=\"layer-type-selector__item__icon\">\n        <value.icon height={`${isTile ? theme.layerTypeIconSizeL : theme.layerTypeIconSizeSM}px`} />\n      </div>\n      <div className=\"layer-type-selector__item__label\">\n        <FormattedMessage\n          id={`layer.type.${value.label.toLowerCase()}`}\n          defaultMessage={value.label}\n        />\n      </div>\n    </StyledListItem>\n  );\n\n  return withTheme(LayerTypeListItem);\n}\n\nexport default LayerTypeListItemFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {PanelLabel} from '../../common/styled-components';\nimport FieldSelectorFactory from '../../common/field-selector';\nimport {validateColumn} from '@kepler.gl/reducers';\nimport {LayerColumn, LayerColumns} from '@kepler.gl/layers';\nimport {Field, FieldPair} from '@kepler.gl/types';\n\ntype Pair = {\n  name: string;\n  type: string;\n  pair: FieldPair['pair'];\n};\n\ntype ColumnSelectorProps = {\n  column: LayerColumn;\n  columns: LayerColumns;\n  label: string;\n  allFields: Field[];\n  onSelect: (\n    items:\n      | ReadonlyArray<string | number | boolean | object>\n      | string\n      | number\n      | boolean\n      | object\n      | null\n  ) => void;\n  fieldPairs?: Pair[] | null;\n};\n\nconst ColumnRow = styled.div`\n  display: flex;\n  margin-bottom: 8px;\n  align-items: center;\n`;\n\nconst ColumnName = styled.div`\n  width: 27%;\n  line-height: 1.2;\n  padding-right: 6px;\n`;\n\nconst ColumnSelect = styled.div`\n  width: 73%;\n`;\n\nColumnSelectorFactory.deps = [FieldSelectorFactory];\n\nfunction ColumnSelectorFactory(FieldSelector: ReturnType<typeof FieldSelectorFactory>) {\n  const ColumnSelector: React.FC<ColumnSelectorProps> = ({\n    column,\n    columns,\n    label,\n    allFields,\n    onSelect,\n    fieldPairs\n  }) => (\n    <ColumnRow className=\"layer-config__column__selector\">\n      <ColumnName className=\"layer-config__column__name\">\n        <PanelLabel>\n          <FormattedMessage id={`columns.${label}`} />\n          {!column.optional ? `  *` : null}\n        </PanelLabel>\n      </ColumnName>\n      <ColumnSelect className=\"layer-config__column__select\">\n        <FieldSelector\n          suggested={fieldPairs}\n          error={!validateColumn(column, columns, allFields)}\n          fields={allFields}\n          value={column.value}\n          erasable={Boolean(column.optional)}\n          onSelect={onSelect}\n        />\n      </ColumnSelect>\n    </ColumnRow>\n  );\n  return ColumnSelector;\n}\n\nexport default ColumnSelectorFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useMemo} from 'react';\nimport styled, {withTheme} from 'styled-components';\n\nimport LayerTypeDropdownListFactory, {LayerTypeOption} from './layer-type-dropdown-list';\nimport LayerTypeListItemFactory from './layer-type-list-item';\nimport ItemSelector from '../../common/item-selector/item-selector';\n\nimport {SidePanelSection} from '../../common/styled-components';\n\ntype Option = {\n  id: string;\n  label: string;\n  icon: any; //\n  requireData: any; //\n};\n\nexport type LayerTypeSelectorProps = {\n  selected: string | null;\n  onSelect: (\n    items:\n      | readonly (string | number | boolean | object)[]\n      | string\n      | number\n      | boolean\n      | object\n      | null\n  ) => void;\n  options: LayerTypeOption[];\n  // TODO add correct type after Theme typing\n  theme: Record<string, string>;\n  disabled: boolean;\n};\n\nconst StyledLayerTypeSelector = styled.div`\n  .item-selector .item-selector__dropdown {\n    padding: 4px 10px 4px 10px;\n  }\n`;\n\nLayerTypeSelectorFactory.deps = [LayerTypeListItemFactory, LayerTypeDropdownListFactory];\n\nconst getDisplayOption = (op: Option) => op.label;\nconst getOptionValue = (op: Option) => op.id;\n\nfunction LayerTypeSelectorFactory(\n  LayerTypeListItem: ReturnType<typeof LayerTypeListItemFactory>,\n  LayerTypeDropdownList: ReturnType<typeof LayerTypeDropdownListFactory>\n) {\n  const LayerTypeSelector: React.FC<LayerTypeSelectorProps> = ({\n    selected,\n    options,\n    onSelect,\n    disabled\n  }) => {\n    const selectedItems = useMemo(() => options.find(op => op.id === selected), [\n      options,\n      selected\n    ]);\n\n    return (\n      <SidePanelSection>\n        <StyledLayerTypeSelector className=\"layer-config__type\">\n          <ItemSelector\n            selectedItems={selectedItems}\n            options={options}\n            multiSelect={false}\n            disabled={disabled}\n            placeholder=\"placeholder.selectType\"\n            onChange={onSelect}\n            getOptionValue={getOptionValue}\n            filterOption=\"label\"\n            displayOption={getDisplayOption}\n            DropDownLineItemRenderComponent={LayerTypeListItem}\n            DropDownRenderComponent={LayerTypeDropdownList}\n          />\n        </StyledLayerTypeSelector>\n      </SidePanelSection>\n    );\n  };\n\n  return withTheme(LayerTypeSelector);\n}\n\nexport default LayerTypeSelectorFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useCallback, MouseEvent} from 'react';\nimport styled from 'styled-components';\nimport classNames from 'classnames';\nimport {classList} from '../../common/item-selector/dropdown-list';\n\nexport type LayerTypeOption = {\n  disabled?: boolean;\n  id: string;\n  label: string;\n  icon: React.ElementType;\n};\n\ntype LayerTypeDropdownListProps = {\n  onOptionSelected: (\n    value: {\n      icon: React.ElementType;\n      label: string;\n    },\n    e: MouseEvent\n  ) => void;\n  options: LayerTypeOption[];\n  selectedItems: LayerTypeOption[];\n  selectionIndex: number | null;\n  customListItemComponent: React.FC<{value: LayerTypeOption; isTile?: boolean}>;\n};\n\nconst DropdownListWrapper = styled.div`\n  ${props => props.theme.dropdownList};\n  background-color: ${props => props.theme.dropdownListBgd};\n  border-top: 1px solid ${props => props.theme.dropdownListBorderTop};\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  padding: ${props => props.theme.layerTypeIconPdL}px 0 0 ${props => props.theme.layerTypeIconPdL}px;\n`;\n\nconst StyledDropdownListItem = styled.div`\n  padding-bottom: ${props => props.theme.layerTypeIconPdL}px;\n  padding-right: ${props => props.theme.layerTypeIconPdL}px;\n\n  &.disabled {\n    pointer-events: none;\n    opacity: 0.3;\n  }\n\n  &.selected {\n    .layer-type-selector__item__icon {\n      border: 1px solid #caf2f4;\n    }\n  }\n\n  :hover,\n  &.selected {\n    cursor: pointer;\n    .layer-type-selector__item__icon {\n      color: ${props => props.theme.activeColor};\n    }\n\n    .layer-type-selector__item__label {\n      color: ${props => props.theme.textColor};\n    }\n  }\n`;\n\nexport function LayerTypeDropdownListFactory() {\n  const LayerTypeDropdownList: React.FC<LayerTypeDropdownListProps> = ({\n    onOptionSelected,\n    options,\n    selectedItems,\n    selectionIndex,\n    customListItemComponent\n  }) => {\n    const onSelectOption = useCallback(\n      (e, value) => {\n        e.preventDefault();\n        onOptionSelected(value, e);\n      },\n      [onOptionSelected]\n    );\n\n    const ListItemComponent = customListItemComponent;\n\n    return (\n      <DropdownListWrapper className={classList.list}>\n        {options.map((value, i) => (\n          <StyledDropdownListItem\n            className={classNames('layer-type-selector__item', {\n              selected: selectedItems.find(it => it.id === value.id),\n              hover: selectionIndex === i,\n              disabled: value.disabled\n            })}\n            key={`${value.id}_${i}`}\n            onMouseDown={(e: MouseEvent) => onSelectOption(e, value)}\n            onClick={(e: MouseEvent) => onSelectOption(e, value)}\n          >\n            <ListItemComponent value={value} isTile />\n          </StyledDropdownListItem>\n        ))}\n      </DropdownListWrapper>\n    );\n  };\n\n  return LayerTypeDropdownList;\n}\n\nexport default LayerTypeDropdownListFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {Component} from 'react';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {ColorRange} from '@kepler.gl/constants';\nimport styled from 'styled-components';\n\nimport {\n  Button,\n  PanelLabel,\n  SBFlexboxItem,\n  SidePanelSection,\n  SpaceBetweenFlexbox\n} from '../../common/styled-components';\nimport {Add} from '../../common/icons';\nimport ColorSelectorFactory from './color-selector';\nimport Switch from '../../common/switch';\nimport ItemSelector from '../../common/item-selector/item-selector';\nimport LayerConfigGroupFactory, {\n  ConfigGroupCollapsibleContent,\n  ConfigGroupCollapsibleHeader\n} from './layer-config-group';\nimport RangeSliderFactory from '../../common/range-slider';\n\nimport FieldSelectorFactory from '../../common/field-selector';\nimport {RGBColor, RGBAColor, LayerTextLabel, Field} from '@kepler.gl/types';\nimport {LAYER_TEXT_CONFIGS} from '@kepler.gl/constants';\n\nconst SwitchWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  line-height: 11px;\n  margin-bottom: 8px;\n`;\n\ntype TextLabelPanelProps = {\n  id?: string;\n  fields: Field[];\n  textLabel: LayerTextLabel[];\n  updateLayerTextLabel: (idx: number | 'all', prop: string, value: any) => void;\n};\n\nTextLabelPanelFactory.deps = [\n  RangeSliderFactory,\n  LayerConfigGroupFactory,\n  FieldSelectorFactory,\n  ColorSelectorFactory\n];\n\nfunction TextLabelPanelFactory(\n  RangeSlider: ReturnType<typeof RangeSliderFactory>,\n  LayerConfigGroup: ReturnType<typeof LayerConfigGroupFactory>,\n  FieldSelector: ReturnType<typeof FieldSelectorFactory>,\n  ColorSelector: ReturnType<typeof ColorSelectorFactory>\n): React.ComponentType<TextLabelPanelProps> {\n  class TextLabelPanel extends Component<TextLabelPanelProps> {\n    render() {\n      const {updateLayerTextLabel, textLabel, fields} = this.props;\n      const currentFields = textLabel.map(tl => tl.field && tl.field.name).filter(d => Boolean(d));\n\n      return (\n        <LayerConfigGroup label={'panel.text.label'} collapsible>\n          <ConfigGroupCollapsibleHeader>\n            <FieldSelector\n              fields={fields}\n              value={currentFields as string[]}\n              onSelect={selected => updateLayerTextLabel('all', 'fields', selected)}\n              multiSelect\n            />\n          </ConfigGroupCollapsibleHeader>\n          <ConfigGroupCollapsibleContent>\n            {textLabel.map((tl, idx) => (\n              <div key={tl.field ? tl.field.name : `null-${idx}`}>\n                <PanelLabel>\n                  <FormattedMessage id={'panel.text.labelWithId'} values={{labelId: idx + 1}} />\n                </PanelLabel>\n                <SidePanelSection>\n                  <FieldSelector\n                    fields={fields}\n                    value={(tl.field && tl.field.name) || 'placeholder.selectField'}\n                    placeholder={'placeholder.empty'}\n                    onSelect={v => updateLayerTextLabel(idx, 'field', v)}\n                    erasable\n                  />\n                </SidePanelSection>\n                <SidePanelSection>\n                  <PanelLabel>\n                    <FormattedMessage id=\"panel.text.fontSize\" />\n                  </PanelLabel>\n                  <RangeSlider\n                    {...LAYER_TEXT_CONFIGS.fontSize}\n                    value1={tl.size}\n                    isRanged={false}\n                    onChange={v => updateLayerTextLabel(idx, 'size', v[1])}\n                  />\n                </SidePanelSection>\n                <SidePanelSection>\n                  <PanelLabel>\n                    <FormattedMessage id=\"panel.text.fontColor\" />\n                  </PanelLabel>\n                  <ColorSelector\n                    colorSets={[\n                      {\n                        selectedColor: tl.color,\n                        setColor: (v: RGBColor | RGBAColor | ColorRange) =>\n                          updateLayerTextLabel(idx, 'color', v)\n                      }\n                    ]}\n                  />\n                </SidePanelSection>\n\n                <SidePanelSection>\n                  <PanelLabel>\n                    <FormattedMessage id=\"panel.text.outlineWidth\" />\n                  </PanelLabel>\n                  <RangeSlider\n                    {...LAYER_TEXT_CONFIGS.outlineWidth}\n                    value1={tl.outlineWidth}\n                    isRanged={false}\n                    onChange={v => updateLayerTextLabel(idx, 'outlineWidth', v[1])}\n                  />\n                </SidePanelSection>\n                <SidePanelSection>\n                  <PanelLabel>\n                    <FormattedMessage id=\"panel.text.outlineColor\" />\n                  </PanelLabel>\n                  <ColorSelector\n                    colorSets={[\n                      {\n                        selectedColor: tl.outlineColor,\n                        setColor: v => updateLayerTextLabel(idx, 'outlineColor', v)\n                      }\n                    ]}\n                    useOpacity={true}\n                  />\n                </SidePanelSection>\n\n                <SidePanelSection>\n                  <SwitchWrapper>\n                    <PanelLabel>\n                      <FormattedMessage id=\"panel.text.backgroundColor\" />\n                    </PanelLabel>\n                    <Switch\n                      checked={tl.background}\n                      id={`${this.props.id}-textBackgroundEnabled-${idx}`}\n                      onChange={() => updateLayerTextLabel(idx, 'background', !tl.background)}\n                    />\n                  </SwitchWrapper>\n\n                  <ColorSelector\n                    colorSets={[\n                      {\n                        selectedColor: tl.backgroundColor,\n                        setColor: v => updateLayerTextLabel(idx, 'backgroundColor', v)\n                      }\n                    ]}\n                    useOpacity={true}\n                    disabled={!tl.background}\n                  />\n                </SidePanelSection>\n\n                <SidePanelSection>\n                  <SpaceBetweenFlexbox>\n                    <SBFlexboxItem>\n                      <PanelLabel>\n                        <FormattedMessage id=\"panel.text.textAnchor\" />\n                      </PanelLabel>\n                      <ItemSelector\n                        {...LAYER_TEXT_CONFIGS.textAnchor}\n                        selectedItems={tl.anchor}\n                        onChange={val => updateLayerTextLabel(idx, 'anchor', val)}\n                      />\n                    </SBFlexboxItem>\n                    <SBFlexboxItem>\n                      <PanelLabel>\n                        <FormattedMessage id=\"panel.text.alignment\" />\n                      </PanelLabel>\n                      <ItemSelector\n                        {...LAYER_TEXT_CONFIGS.textAlignment}\n                        selectedItems={tl.alignment}\n                        onChange={val => updateLayerTextLabel(idx, 'alignment', val)}\n                      />\n                    </SBFlexboxItem>\n                  </SpaceBetweenFlexbox>\n                </SidePanelSection>\n              </div>\n            ))}\n            <SidePanelSection>\n              <Button link onClick={() => updateLayerTextLabel(textLabel.length, '', null)}>\n                <Add height=\"12px\" />\n                <FormattedMessage id=\"panel.text.addMoreLabel\" />\n              </Button>\n            </SidePanelSection>\n          </ConfigGroupCollapsibleContent>\n        </LayerConfigGroup>\n      );\n    }\n  }\n\n  return TextLabelPanel;\n}\n\nexport default TextLabelPanelFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {MouseEvent} from 'react';\nimport {range} from 'd3-array';\nimport styled from 'styled-components';\nimport {hexToRgb} from '@kepler.gl/utils';\n\nimport {ColorsByTheme, Themes, ColorRange} from '@kepler.gl/constants';\nimport {RGBColor} from '@kepler.gl/types';\n\nexport type SingleColorPaletteProps = {\n  onSelectColor: (color: RGBColor | ColorRange, e: MouseEvent) => void;\n  // hex value\n  selectedColor: string;\n};\n\nconst PALETTE_HEIGHT = '8px';\nconst ROWS = 22;\n\nconst StyledColorPalette = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  padding: 12px;\n\n  :hover {\n    cursor: pointer;\n  }\n`;\n\nconst StyledColorColumn = styled.div`\n  display: flex;\n  flex-grow: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nconst StyledColorBlock = styled.div<{selected: boolean}>`\n  flex-grow: 1;\n  height: ${PALETTE_HEIGHT};\n  border-width: 1px;\n  border-style: solid;\n`;\n\nconst SingleColorPalette: React.FC<SingleColorPaletteProps> = ({selectedColor, onSelectColor}) => (\n  <StyledColorPalette className=\"single-color-palette\">\n    {Themes.map((theme, col) => (\n      <StyledColorColumn key={theme} className=\"single-color-palette__column\">\n        {range(1, ROWS + 1, 1).map((key, i) => (\n          <StyledColorBlock\n            className=\"single-color-palette__block\"\n            style={{\n              backgroundColor: ColorsByTheme[theme][key],\n              borderColor:\n                selectedColor === ColorsByTheme[theme][key].toUpperCase()\n                  ? 'white'\n                  : ColorsByTheme[theme][key]\n            }}\n            key={`${theme}_${key}`}\n            selected={selectedColor === ColorsByTheme[theme][key].toUpperCase()}\n            onClick={e => onSelectColor(hexToRgb(ColorsByTheme[theme][key]), e)}\n          />\n        ))}\n      </StyledColorColumn>\n    ))}\n  </StyledColorPalette>\n);\n\nexport default SingleColorPalette;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {MouseEventHandler} from 'react';\nimport styled from 'styled-components';\nimport {FormattedMessage} from '@kepler.gl/localization';\n\nimport {Button} from '../../common/styled-components';\n\nconst StyledHowToButton = styled.div`\n  position: absolute;\n  right: 12px;\n  top: -4px;\n`;\n\nexport type HowToButtonProps = {\n  onClick: MouseEventHandler;\n};\n\nexport const HowToButton: React.FC<HowToButtonProps> = ({onClick}: HowToButtonProps) => (\n  <StyledHowToButton>\n    <Button link small onClick={onClick}>\n      <FormattedMessage id={'layerConfiguration.howTo'} />\n    </Button>\n  </StyledHowToButton>\n);\n\nexport default HowToButton;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useCallback, useMemo} from 'react';\n\nimport {\n  EXPORT_DATA_ID,\n  EXPORT_MAP_ID,\n  SHARE_MAP_ID,\n  SIDEBAR_PANELS,\n  OVERWRITE_MAP_ID,\n  SAVE_MAP_ID,\n  EXPORT_IMAGE_ID,\n  ADD_DATA_ID,\n  ADD_MAP_STYLE_ID\n} from '@kepler.gl/constants';\n\nimport {CursorClick, Layers, FilterFunnel, Settings} from './common/icons';\n\nimport SidebarFactory from './side-panel/side-bar';\nimport PanelHeaderFactory from './side-panel/panel-header';\nimport PanelToggleFactory from './side-panel/panel-toggle';\nimport LayerManagerFactory from './side-panel/layer-manager';\nimport FilterManagerFactory from './side-panel/filter-manager';\nimport InteractionManagerFactory from './side-panel/interaction-manager';\nimport MapManagerFactory from './side-panel/map-manager';\nimport CustomPanelsFactory from './side-panel/custom-panel';\n\nimport styled from 'styled-components';\nimport get from 'lodash.get';\nimport {SidePanelProps, SidePanelItem} from './types';\n\nexport const StyledSidePanelContent = styled.div`\n  ${props => props.theme.sidePanelScrollBar};\n  flex-grow: 1;\n  padding: ${props => props.theme.sidePanelInnerPadding}px;\n  overflow-y: scroll;\n  overflow-x: hidden;\n\n  .side-panel__content__inner {\n    display: flex;\n    height: 100%;\n    flex-direction: column;\n  }\n`;\n\nSidePanelFactory.deps = [\n  SidebarFactory,\n  PanelHeaderFactory,\n  PanelToggleFactory,\n  LayerManagerFactory,\n  FilterManagerFactory,\n  InteractionManagerFactory,\n  MapManagerFactory,\n  CustomPanelsFactory\n];\n\n/**\n * Vertical sidebar containing input components for the rendering layers\n */\nexport default function SidePanelFactory(\n  Sidebar: ReturnType<typeof SidebarFactory>,\n  PanelHeader: ReturnType<typeof PanelHeaderFactory>,\n  PanelToggle: ReturnType<typeof PanelToggleFactory>,\n  LayerManager: ReturnType<typeof LayerManagerFactory>,\n  FilterManager: ReturnType<typeof FilterManagerFactory>,\n  InteractionManager: ReturnType<typeof InteractionManagerFactory>,\n  MapManager: ReturnType<typeof MapManagerFactory>,\n  CustomPanels: ReturnType<typeof CustomPanelsFactory>\n) {\n  // inject components\n  const SIDEBAR_COMPONENTS = {\n    layer: LayerManager,\n    filter: FilterManager,\n    interaction: InteractionManager,\n    map: MapManager\n  };\n\n  const SIDEBAR_ICONS = {\n    layer: Layers,\n    filter: FilterFunnel,\n    interaction: Settings,\n    map: CursorClick\n  };\n\n  // We should defined sidebar panels here but keeping them for backward compatible\n  const fullPanels: SidePanelItem[] = SIDEBAR_PANELS.map(component => ({\n    ...component,\n    component: SIDEBAR_COMPONENTS[component.id],\n    iconComponent: SIDEBAR_ICONS[component.id]\n  }));\n\n  const getCustomPanelProps = get(CustomPanels, ['defaultProps', 'getProps']) || (() => ({}));\n\n  // eslint-disable-next-line max-statements\n  const SidePanel: React.FC<SidePanelProps> = (props: SidePanelProps) => {\n    const {\n      appName,\n      appWebsite,\n      availableProviders = {},\n      datasets,\n      filters,\n      layers,\n      layerBlending,\n      overlayBlending,\n      layerClasses,\n      layerOrder,\n      interactionConfig,\n      panels = fullPanels,\n      mapInfo,\n      mapSaved,\n      mapStateActions,\n      mapStyle,\n      mapStyleActions,\n      onSaveMap,\n      uiState,\n      uiStateActions,\n      visStateActions,\n      version,\n      width\n    } = props;\n    const {openDeleteModal, toggleModal, toggleSidePanel} = uiStateActions;\n    const {activeSidePanel} = uiState;\n    const {setMapInfo, showDatasetTable, updateTableColor} = visStateActions;\n    const {hasShare, hasStorage} = availableProviders;\n\n    const {title} = mapInfo;\n\n    const isOpen = Boolean(activeSidePanel);\n// changes made\n    const _onOpenOrClose = useCallback(() => toggleSidePanel(activeSidePanel ? '' : 'filter'), [\n      activeSidePanel,\n      toggleSidePanel\n    ]);\n\n    const onClickExportImage = useCallback(() => toggleModal(EXPORT_IMAGE_ID), [toggleModal]);\n    const onClickExportData = useCallback(() => toggleModal(EXPORT_DATA_ID), [toggleModal]);\n    const onClickExportMap = useCallback(() => toggleModal(EXPORT_MAP_ID), [toggleModal]);\n    const onClickSaveToStorage = useCallback(\n      () => toggleModal(mapSaved ? OVERWRITE_MAP_ID : SAVE_MAP_ID),\n      [mapSaved, toggleModal]\n    );\n    const onClickSaveAsToStorage = useCallback(() => {\n      setMapInfo({\n        title: `${title || 'Kepler.gl'} (Copy)`\n      });\n\n      toggleModal(SAVE_MAP_ID);\n    }, [title, setMapInfo, toggleModal]);\n    const onClickShareMap = useCallback(() => toggleModal(SHARE_MAP_ID), [toggleModal]);\n    const onShowDatasetTable = useCallback(dataId => showDatasetTable(dataId), [showDatasetTable]);\n    const onUpdateTableColor = useCallback(\n      (dataId, newColor) => updateTableColor(dataId, newColor),\n      [updateTableColor]\n    );\n    const onShowAddDataModal = useCallback(() => toggleModal(ADD_DATA_ID), [toggleModal]);\n    const onShowAddMapStyleModal = useCallback(() => toggleModal(ADD_MAP_STYLE_ID), [toggleModal]);\n    const onRemoveDataset = useCallback(dataId => openDeleteModal(dataId), [openDeleteModal]);\n    const currentPanel = useMemo(() => panels.find(({id}) => id === activeSidePanel) || null, [\n      activeSidePanel,\n      panels\n    ]);\n\n    const customPanelProps = useMemo(() => getCustomPanelProps(props), [props]);\n    const PanelComponent = currentPanel?.component;\n\n\n    return (\n      <Sidebar\n        width={width}\n        isOpen={isOpen}\n        shouldShowCollapseButton={uiState.isSidePanelCloseButtonVisible}\n        minifiedWidth={0}\n        onOpenOrClose={_onOpenOrClose}\n      >\n        <PanelHeader\n          appName={appName}\n          version={version}\n          appWebsite={appWebsite}\n          visibleDropdown={uiState.visibleDropdown}\n          showExportDropdown={uiStateActions.showExportDropdown}\n          hideExportDropdown={uiStateActions.hideExportDropdown}\n          onExportImage={onClickExportImage}\n          onExportData={onClickExportData}\n          onExportMap={onClickExportMap}\n          onSaveMap={hasStorage ? onSaveMap : undefined}\n          onSaveToStorage={hasStorage ? onClickSaveToStorage : null}\n          onSaveAsToStorage={hasStorage && mapSaved ? onClickSaveAsToStorage : null}\n          onShareMap={hasShare ? onClickShareMap : null}\n        />\n        {/* the next two components should be moved into one */}\n        {/* but i am keeping them because of backward compatibility */}\n        <PanelToggle\n          panels={panels}\n          activePanel={activeSidePanel}\n          togglePanel={uiStateActions.toggleSidePanel}\n        />\n        <StyledSidePanelContent className=\"side-panel__content\">\n          <div className=\"side-panel__content__inner\">\n            {PanelComponent ? (\n              <PanelComponent\n                datasets={datasets}\n                filters={filters}\n                layers={layers}\n                layerClasses={layerClasses}\n                layerOrder={layerOrder}\n                layerBlending={layerBlending}\n                overlayBlending={overlayBlending}\n                mapStyle={mapStyle}\n                mapStyleActions={mapStyleActions}\n                mapStateActions={mapStateActions}\n                interactionConfig={interactionConfig}\n                removeDataset={onRemoveDataset}\n                showDatasetTable={onShowDatasetTable}\n                updateTableColor={onUpdateTableColor}\n                showAddDataModal={onShowAddDataModal}\n                showAddMapStyleModal={onShowAddMapStyleModal}\n                uiStateActions={uiStateActions}\n                visStateActions={visStateActions}\n                panelMetadata={currentPanel}\n                panelListView={\n                  currentPanel?.id === 'layer'\n                    ? uiState.layerPanelListView\n                    : currentPanel?.id === 'filter'\n                    ? uiState.filterPanelListView\n                    : null\n                }\n              />\n            ) : null}\n            <CustomPanels\n              {...customPanelProps}\n              activeSidePanel={activeSidePanel}\n              updateTableColor={onUpdateTableColor}\n            />\n          </div>\n        </StyledSidePanelContent>\n      </Sidebar>\n    );\n  };\n\n  SidePanel.defaultProps = {\n    panels: fullPanels,\n    mapInfo: {}\n  };\n\n  return SidePanel;\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useCallback} from 'react';\nimport styled from 'styled-components';\nimport PanelTabFactory, {PanelItem} from './panel-tab';\nimport {toggleSidePanel, ActionHandler} from '@kepler.gl/actions';\n\ntype PanelToggleProps = {\n  panels: PanelItem[];\n  activePanel: string | null;\n  togglePanel: ActionHandler<typeof toggleSidePanel>;\n};\n//changes made\nconst PanelHeaderBottom = styled.div.attrs({\n  className: 'side-side-panel__header__bottom'\n})`\n  background-color: ${props => props.theme.sidePanelHeaderBg};\n  border-bottom: 1px solid ${props => props.theme.sidePanelHeaderBorder};\n  padding: 0 16px;\n  display: flex;\n  min-height: 0px;\n  display:none;\n`;\n\nPanelToggleFactory.deps = [PanelTabFactory];\n\nfunction PanelToggleFactory(PanelTab: ReturnType<typeof PanelTabFactory>) {\n  const PanelToggle: React.FC<PanelToggleProps> = ({activePanel, panels, togglePanel}) => {\n    const onClick = useCallback(\n      panel => {\n        const callback = panel.onClick || togglePanel;\n        callback(panel.id);\n      },\n      [togglePanel]\n    );\n\n    return (\n      <PanelHeaderBottom>\n        {panels.map(panel => (\n          <PanelTab\n            key={panel.id}\n            panel={panel}\n            isActive={activePanel === panel.id}\n            onClick={() => onClick(panel)}\n          />\n        ))}\n      </PanelHeaderBottom>\n    );\n  };\n\n  return PanelToggle;\n}\n\nexport default PanelToggleFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport {Tooltip} from '../common/styled-components';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {BaseProps} from '../common/icons';\n\ntype StyledPanelTabProps = {\n  active?: boolean;\n};\n\nexport type PanelItem = {\n  id: string;\n  label: string;\n  iconComponent: React.ComponentType<Partial<BaseProps>>;\n};\n\nexport type PanelTabProps = {\n  isActive: boolean;\n  panel: PanelItem;\n  onClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n};\n\nexport const StyledPanelTab = styled.div.attrs({\n  className: 'side-panel__tab'\n})<StyledPanelTabProps>`\n  align-items: flex-end;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: ${props =>\n    props.active ? props.theme.panelToggleBorderColor : 'transparent'};\n  color: ${props => (props.active ? props.theme.subtextColorActive : props.theme.panelTabColor)};\n  display: flex;\n  justify-content: center;\n  margin-right: ${props => props.theme.panelToggleMarginRight}px;\n  padding-bottom: ${props => props.theme.panelToggleBottomPadding}px;\n  width: ${props => props.theme.panelTabWidth};\n\n  :hover {\n    cursor: pointer;\n    color: ${props => props.theme.textColorHl};\n  }\n`;\n\nexport function PanelTabFactory() {\n  const PanelTab: React.FC<PanelTabProps> = ({isActive, onClick, panel}) => (\n    <StyledPanelTab data-tip data-for={`${panel.id}-nav`} active={isActive} onClick={onClick}>\n      <panel.iconComponent height=\"20px\" />\n      <Tooltip id={`${panel.id}-nav`} effect=\"solid\" delayShow={500} place=\"bottom\">\n        <span>\n          <FormattedMessage id={panel.label || panel.id} />\n        </span>\n      </Tooltip>\n    </StyledPanelTab>\n  );\n\n  return PanelTab;\n}\n\nexport default PanelTabFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {\n  Component,\n  MouseEventHandler,\n  TouchEventHandler,\n  CSSProperties,\n  ChangeEventHandler\n} from 'react';\nimport styled from 'styled-components';\n\nimport LayerConfiguratorFactory from './layer-configurator';\nimport LayerPanelHeaderFactory from './layer-panel-header';\nimport {dataTestIds} from '@kepler.gl/constants';\nimport {NestedPartial, LayerVisConfig, ColorUI} from '@kepler.gl/types';\nimport {Layer, LayerBaseConfig} from '@kepler.gl/layers';\nimport {toggleModal, VisStateActions, MapStateActions, ActionHandler} from '@kepler.gl/actions';\nimport {Datasets} from '@kepler.gl/table';\n\ntype LayerPanelProps = {\n  className?: string;\n  style?: CSSProperties;\n  onMouseDown?: MouseEventHandler;\n  onTouchStart?: TouchEventHandler;\n  layer: Layer;\n  datasets: Datasets;\n  layerTypeOptions: {\n    id: string;\n    label: string;\n    icon: any; //\n    requireData: any; //\n  }[];\n  isDraggable?: boolean;\n  idx: number;\n  openModal: ActionHandler<typeof toggleModal>;\n  layerColorUIChange: ActionHandler<typeof VisStateActions.layerColorUIChange>;\n  layerConfigChange: ActionHandler<typeof VisStateActions.layerConfigChange>;\n  layerVisualChannelConfigChange: ActionHandler<\n    typeof VisStateActions.layerVisualChannelConfigChange\n  >;\n  layerSetIsValid: ActionHandler<typeof VisStateActions.layerSetIsValid>;\n  layerTypeChange: ActionHandler<typeof VisStateActions.layerTypeChange>;\n  layerVisConfigChange: ActionHandler<typeof VisStateActions.layerVisConfigChange>;\n  layerTextLabelChange: ActionHandler<typeof VisStateActions.layerTextLabelChange>;\n  removeLayer: ActionHandler<typeof VisStateActions.removeLayer>;\n  zoomToLayer: ActionHandler<typeof MapStateActions.fitBounds>;\n  duplicateLayer: ActionHandler<typeof VisStateActions.duplicateLayer>;\n  listeners?: React.ElementType;\n};\n\nconst PanelWrapper = styled.div<{active: boolean}>`\n  font-size: 12px;\n  border-radius: 1px;\n  z-index: 1000;\n  &.dragging {\n    cursor: move;\n  }\n`;\n\nLayerPanelFactory.deps = [LayerConfiguratorFactory, LayerPanelHeaderFactory];\n\nfunction LayerPanelFactory(\n  LayerConfigurator: ReturnType<typeof LayerConfiguratorFactory>,\n  LayerPanelHeader: ReturnType<typeof LayerPanelHeaderFactory>\n): React.ComponentType<LayerPanelProps> {\n  class LayerPanel extends Component<LayerPanelProps> {\n    updateLayerConfig = (newProp: Partial<LayerBaseConfig>) => {\n      this.props.layerConfigChange(this.props.layer, newProp);\n    };\n\n    updateLayerType = (newType: string) => {\n      this.props.layerTypeChange(this.props.layer, newType);\n    };\n\n    updateLayerVisConfig = (newVisConfig: Partial<LayerVisConfig>) => {\n      this.props.layerVisConfigChange(this.props.layer, newVisConfig);\n    };\n\n    updateLayerColorUI = (...args: [string, NestedPartial<ColorUI>]) => {\n      this.props.layerColorUIChange(this.props.layer, ...args);\n    };\n\n    updateLayerTextLabel = (...args: [number | 'all', string, any]) => {\n      this.props.layerTextLabelChange(this.props.layer, ...args);\n    };\n\n    updateLayerVisualChannelConfig = (newConfig: Partial<LayerBaseConfig>, channel: string) => {\n      this.props.layerVisualChannelConfigChange(this.props.layer, newConfig, channel);\n    };\n\n    _updateLayerLabel: ChangeEventHandler<HTMLInputElement> = ({target: {value}}) => {\n      this.updateLayerConfig({label: value});\n    };\n\n    _toggleVisibility: MouseEventHandler = e => {\n      e.stopPropagation();\n      const isVisible = !this.props.layer.config.isVisible;\n      this.updateLayerConfig({isVisible});\n    };\n\n    _resetIsValid: MouseEventHandler = e => {\n      e?.stopPropagation();\n      // Make the layer valid and visible again after an error\n      this.props.layerSetIsValid(this.props.layer, true);\n    };\n\n    _toggleEnableConfig: MouseEventHandler = e => {\n      e?.stopPropagation();\n      const {\n        layer: {\n          config: {isConfigActive}\n        }\n      } = this.props;\n      this.updateLayerConfig({isConfigActive: !isConfigActive});\n    };\n\n    _removeLayer: MouseEventHandler = e => {\n      e?.stopPropagation();\n      this.props.removeLayer(this.props.layer.id);\n    };\n\n    _zoomToLayer: MouseEventHandler = e => {\n      e?.stopPropagation();\n      const bounds = this.props.layer?.meta?.bounds;\n      bounds && this.props.zoomToLayer(bounds);\n    };\n\n    _duplicateLayer: MouseEventHandler = e => {\n      e?.stopPropagation();\n      this.props.duplicateLayer(this.props.layer.id);\n    };\n\n    render() {\n      const {layer, datasets, isDraggable, layerTypeOptions, listeners} = this.props;\n      const {config, isValid} = layer;\n      const {isConfigActive} = config;\n      const allowDuplicate = typeof layer.isValidToSave === 'function' && layer.isValidToSave();\n\n      return (\n        <PanelWrapper\n          active={isConfigActive}\n          className={`layer-panel ${this.props.className}`}\n          data-testid={dataTestIds.layerPanel}\n          style={this.props.style}\n          onMouseDown={this.props.onMouseDown}\n          onTouchStart={this.props.onTouchStart}\n        >\n          <LayerPanelHeader\n            isConfigActive={isConfigActive}\n            layerId={layer.id}\n            isVisible={config.isVisible}\n            isValid={isValid}\n            label={config.label}\n            labelRCGColorValues={config.dataId ? datasets[config.dataId].color : null}\n            layerType={layer.type}\n            allowDuplicate={allowDuplicate}\n            onToggleEnableConfig={this._toggleEnableConfig}\n            onToggleVisibility={this._toggleVisibility}\n            onResetIsValid={this._resetIsValid}\n            onUpdateLayerLabel={this._updateLayerLabel}\n            onRemoveLayer={this._removeLayer}\n            onZoomToLayer={this._zoomToLayer}\n            onDuplicateLayer={this._duplicateLayer}\n            isDragNDropEnabled={isDraggable}\n            listeners={listeners}\n          />\n          {isConfigActive && (\n            <LayerConfigurator\n              layer={layer}\n              datasets={datasets}\n              layerTypeOptions={layerTypeOptions}\n              openModal={this.props.openModal}\n              updateLayerColorUI={this.updateLayerColorUI}\n              updateLayerConfig={this.updateLayerConfig}\n              updateLayerVisualChannelConfig={this.updateLayerVisualChannelConfig}\n              updateLayerType={this.updateLayerType}\n              updateLayerTextLabel={this.updateLayerTextLabel}\n              updateLayerVisConfig={this.updateLayerVisConfig}\n            />\n          )}\n        </PanelWrapper>\n      );\n    }\n  }\n\n  return LayerPanel;\n}\n\nexport default LayerPanelFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useMemo} from 'react';\n\nimport DatasetLayerSectionFactory from './dataset-layer-section';\nimport {Layer, LayerClassesType} from '@kepler.gl/layers';\nimport {UIStateActions, VisStateActions, ActionHandler, MapStateActions} from '@kepler.gl/actions';\nimport {KeplerTable, Datasets} from '@kepler.gl/table';\n\ntype DatasetLayerGroupProps = {\n  datasets: Datasets;\n  layers: Layer[];\n  layerOrder: string[];\n  layerClasses: LayerClassesType;\n  showDeleteDataset: boolean;\n  removeDataset: ActionHandler<typeof UIStateActions.openDeleteModal>;\n  showDatasetTable: ActionHandler<typeof VisStateActions.showDatasetTable>;\n  updateTableColor: ActionHandler<typeof VisStateActions.updateTableColor>;\n  uiStateActions: typeof UIStateActions;\n  visStateActions: typeof VisStateActions;\n  mapStateActions: typeof MapStateActions;\n};\n\nDatasetLayerGroupFactory.deps = [DatasetLayerSectionFactory];\n\nfunction DatasetLayerGroupFactory(\n  DatasetLayerSection: ReturnType<typeof DatasetLayerSectionFactory>\n) {\n  const DatasetLayerGroup: React.FC<DatasetLayerGroupProps> = props => {\n    const {\n      datasets,\n      showDatasetTable,\n      layers,\n      updateTableColor,\n      showDeleteDataset,\n      removeDataset,\n      layerOrder,\n      layerClasses,\n      uiStateActions,\n      visStateActions,\n      mapStateActions\n    } = props;\n\n    const datasetLayerSectionData = useMemo(() => {\n      return Object.values(datasets).map((dataset: KeplerTable) => {\n        // Global layer order will contain the correct order of layers\n        // We just empty the positions in layers array (for each dataset)\n        // where the layer doesn't belong to a dataset and set it to null\n        const datasetLayers = layers\n          .map(layer => (layer.config.dataId === dataset.id ? layer : null))\n          .filter(layer => Boolean(layer));\n\n        return {dataset, datasetLayers};\n      });\n    }, [datasets, layers]);\n\n    return (\n      <>\n        {datasetLayerSectionData.map(dlsData => (\n          <DatasetLayerSection\n            key={dlsData.dataset.id}\n            dataset={dlsData.dataset}\n            layers={dlsData.datasetLayers as Layer[]}\n            datasets={datasets}\n            showDatasetTable={showDatasetTable}\n            updateTableColor={updateTableColor}\n            showDeleteDataset={showDeleteDataset}\n            removeDataset={removeDataset}\n            layerOrder={layerOrder}\n            layerClasses={layerClasses}\n            uiStateActions={uiStateActions}\n            visStateActions={visStateActions}\n            mapStateActions={mapStateActions}\n          />\n        ))}\n      </>\n    );\n  };\n\n  return DatasetLayerGroup;\n}\n\nexport default DatasetLayerGroupFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useMemo} from 'react';\nimport styled from 'styled-components';\n\nimport SourceDataCatalogFactory from '../common/source-data-catalog';\nimport LayerListFactory from './layer-list';\nimport {Layer, LayerClassesType} from '@kepler.gl/layers';\nimport {UIStateActions, ActionHandler, VisStateActions, MapStateActions} from '@kepler.gl/actions';\nimport {KeplerTable, Datasets} from '@kepler.gl/table';\n\ntype DatasetLayerSectionProps = {\n  datasets: Datasets;\n  dataset: KeplerTable;\n  layers: Layer[];\n  layerOrder: string[];\n  layerClasses: LayerClassesType;\n  showDeleteDataset: boolean;\n  showDatasetTable: ActionHandler<typeof VisStateActions.showDatasetTable>;\n  updateTableColor: ActionHandler<typeof VisStateActions.updateTableColor>;\n  removeDataset: ActionHandler<typeof UIStateActions.openDeleteModal>;\n  uiStateActions: typeof UIStateActions;\n  visStateActions: typeof VisStateActions;  \n  mapStateActions: typeof MapStateActions;\n};\n\nconst DatasetLayerSectionWrapper = styled.div.attrs({\n  className: 'dataset-layer-section'\n})`\n  margin-bottom: 16px;\n`;\n\nDatasetLayerSectionFactory.deps = [SourceDataCatalogFactory, LayerListFactory];\n\nfunction DatasetLayerSectionFactory(\n  SourceDataCatalog: ReturnType<typeof SourceDataCatalogFactory>,\n  LayerList: ReturnType<typeof LayerListFactory>\n) {\n  const DatasetLayerSection: React.FC<DatasetLayerSectionProps> = props => {\n    const {\n      dataset,\n      datasets,\n      showDatasetTable,\n      layers,\n      updateTableColor,\n      showDeleteDataset,\n      removeDataset,\n      layerOrder,\n      layerClasses,\n      uiStateActions,\n      visStateActions,\n      mapStateActions\n    } = props;\n\n    const datasetCatalog = useMemo(() => {\n      return {[dataset.id]: dataset};\n    }, [dataset]);\n\n    return (\n      <DatasetLayerSectionWrapper>\n        <SourceDataCatalog\n          datasets={datasetCatalog}\n          showDatasetTable={showDatasetTable}\n          updateTableColor={updateTableColor}\n          removeDataset={removeDataset}\n          showDeleteDataset={showDeleteDataset}\n        />\n        <LayerList\n          datasets={datasets}\n          layerOrder={layerOrder}\n          layers={layers}\n          layerClasses={layerClasses}\n          uiStateActions={uiStateActions}\n          visStateActions={visStateActions}\n          mapStateActions={mapStateActions}\n          isSortable={false}\n        />\n      </DatasetLayerSectionWrapper>\n    );\n  };\n\n  return DatasetLayerSection;\n}\n\nexport default DatasetLayerSectionFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useCallback, useRef, useState} from 'react';\nimport styled from 'styled-components';\nimport {FormattedMessage} from '@kepler.gl/localization';\n\nimport {Table} from '@kepler.gl/layers';\nimport {CenterFlexbox, Tooltip} from '../../common/styled-components';\nimport {ArrowRight, Trash} from '../../common/icons';\nimport DatasetTagFactory from './dataset-tag';\nimport CustomPicker from '../layer-panel/custom-picker';\nimport {Portaled} from '../..';\nimport {rgbToHex} from '@kepler.gl/utils';\nimport {openDeleteModal, VisStateActions, ActionHandler} from '@kepler.gl/actions';\nimport {RGBColor} from '@kepler.gl/types';\nimport {StyledDatasetTitleProps, RemoveDatasetProps, ShowDataTableProps} from './types';\n\nconst StyledDatasetTitle = styled.div<StyledDatasetTitleProps>`\n  color: ${props => props.theme.textColor};\n  display: flex;\n  align-items: flex-start;\n\n  .source-data-arrow {\n    height: 16px;\n  }\n  :hover {\n    cursor: ${props => (props.clickable ? 'pointer' : 'auto')};\n\n    .dataset-name {\n      color: ${props => (props.clickable ? props.theme.textColorHl : props.theme.textColor)};\n    }\n\n    .dataset-action {\n      color: ${props => props.theme.textColor};\n      opacity: 1;\n    }\n\n    .dataset-action:hover {\n      color: ${props => props.theme.textColorHl};\n    }\n  }\n`;\n\nconst DataTagAction = styled.div`\n  margin-left: 12px;\n  height: 16px;\n  opacity: 0;\n`;\n\ntype MiniDataset = {\n  id: string;\n  color: RGBColor;\n  label?: string;\n};\n\nexport type DatasetTitleProps = {\n  dataset: MiniDataset;\n  showDeleteDataset: boolean;\n  onTitleClick?: () => void;\n  showDatasetTable?: ActionHandler<typeof VisStateActions.showDatasetTable>;\n  updateTableColor: ActionHandler<typeof VisStateActions.updateTableColor>;\n  removeDataset?: ActionHandler<typeof openDeleteModal>;\n};\n\nconst ShowDataTable = ({id, showDatasetTable}: ShowDataTableProps) => (\n  <DataTagAction className=\"dataset-action show-data-table\" data-tip data-for={`data-table-${id}`}>\n    <Table\n      height=\"16px\"\n      onClick={e => {\n        e.stopPropagation();\n        showDatasetTable?.(id);\n      }}\n    />\n    <Tooltip id={`data-table-${id}`} effect=\"solid\">\n      <span>\n        <FormattedMessage id={'datasetTitle.showDataTable'} />\n      </span>\n    </Tooltip>\n  </DataTagAction>\n);\n\nconst RemoveDataset = ({datasetKey, removeDataset}: RemoveDatasetProps) => (\n  <DataTagAction\n    className=\"dataset-action remove-dataset\"\n    data-tip\n    data-for={`delete-${datasetKey}`}\n  >\n    <Trash\n      height=\"16px\"\n      onClick={e => {\n        e.stopPropagation();\n        removeDataset?.(datasetKey);\n      }}\n    />\n    <Tooltip id={`delete-${datasetKey}`} effect=\"solid\" type=\"error\">\n      <span>\n        <FormattedMessage id={'datasetTitle.removeDataset'} />\n      </span>\n    </Tooltip>\n  </DataTagAction>\n);\n\nDatasetTitleFactory.deps = [DatasetTagFactory];\n\nexport default function DatasetTitleFactory(\n  DatasetTag: ReturnType<typeof DatasetTagFactory>\n): React.FC<DatasetTitleProps> {\n  const DatasetTitle: React.FC<DatasetTitleProps> = ({\n    showDatasetTable,\n    showDeleteDataset,\n    onTitleClick,\n    removeDataset,\n    dataset,\n    updateTableColor\n  }) => {\n    const [displayColorPicker, setDisplayColorPicker] = useState(false);\n    const root = useRef(null);\n    const datasetId = dataset.id;\n    const _handleClick = useCallback(() => {\n      setDisplayColorPicker(!displayColorPicker);\n    }, [setDisplayColorPicker, displayColorPicker]);\n\n    const _handleClosePicker = useCallback(() => {\n      setDisplayColorPicker(false);\n    }, [setDisplayColorPicker]);\n    const _handleCustomPicker = useCallback(\n      (color: {rgb: Record<string, number>}) => {\n        updateTableColor(datasetId, [color.rgb.r, color.rgb.g, color.rgb.b]);\n      },\n      [updateTableColor, datasetId]\n    );\n\n    const _onClickTitle = useCallback(\n      (e: React.MouseEvent<HTMLDivElement>) => {\n        e.stopPropagation();\n        if (typeof onTitleClick === 'function') {\n          onTitleClick();\n        } else if (typeof showDatasetTable === 'function') {\n          showDatasetTable(datasetId);\n        }\n      },\n      [onTitleClick, showDatasetTable, datasetId]\n    );\n\n    return (\n      <div className=\"custom-palette-panel\" ref={root}>\n        <StyledDatasetTitle\n          className=\"source-data-title\"\n          clickable={Boolean(showDatasetTable || onTitleClick)}\n        >\n          <DatasetTag\n            dataset={dataset}\n            onClick={_onClickTitle}\n            updateTableColor={updateTableColor}\n            onClickSquare={_handleClick}\n          />\n          <Portaled\n            isOpened={displayColorPicker !== false}\n            left={110}\n            top={-50}\n            onClose={_handleClosePicker}\n          >\n            <CustomPicker\n              color={rgbToHex(dataset.color)}\n              onChange={_handleCustomPicker}\n              onSwatchClose={_handleClosePicker}\n            />\n          </Portaled>\n          {showDatasetTable ? (\n            <CenterFlexbox className=\"source-data-arrow\">\n              <ArrowRight height=\"12px\" />\n            </CenterFlexbox>\n          ) : null}\n          {showDatasetTable ? (\n            <ShowDataTable id={datasetId} showDatasetTable={showDatasetTable} />\n          ) : null}\n          {showDeleteDataset ? (\n            <RemoveDataset datasetKey={datasetId} removeDataset={removeDataset} />\n          ) : null}\n        </StyledDatasetTitle>\n      </div>\n    );\n  };\n\n  return DatasetTitle;\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport {format} from 'd3-format';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {DataContainerInterface} from '@kepler.gl/utils';\n\nconst numFormat = format(',');\n\ntype MiniDataset = {\n  dataContainer: DataContainerInterface;\n};\n\nexport type DatasetInfoProps = {\n  dataset: MiniDataset;\n};\n\nconst StyledDataRowCount = styled.div`\n  font-size: 11px;\n  color: ${props => props.theme.subtextColor};\n  padding-left: 19px;\n`;\n\nexport default function DatasetInfoFactory() {\n  const DatasetInfo: React.FC<DatasetInfoProps> = ({dataset}: DatasetInfoProps) => (\n    <StyledDataRowCount className=\"source-data-rows\">\n      <FormattedMessage\n        id={'datasetInfo.rowCount'}\n        values={{rowCount: numFormat(dataset.dataContainer.numRows())}}\n      />\n    </StyledDataRowCount>\n  );\n\n  return DatasetInfo;\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React from 'react';\nimport AddByDatasetButton from '../add-by-dataset-button';\nimport {Datasets} from '@kepler.gl/table';\n\nexport type AddLayerButtonProps = {\n  datasets: Datasets;\n  onAdd: (dataId: string) => void;\n};\n\nfunction AddLayerButtonFactory() {\n  const AddLayerButton: React.FC<AddLayerButtonProps> = ({datasets, onAdd}) => {\n    return (\n      <AddByDatasetButton\n        datasets={datasets}\n        className=\"add-layer-button\"\n        width=\"110px\"\n        onAdd={onAdd}\n        buttonIntlId=\"layerManager.addLayer\"\n      />\n    );\n  };\n\n  return AddLayerButton;\n}\nexport default AddLayerButtonFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useCallback, useMemo} from 'react';\nimport {useIntl} from 'react-intl';\nimport {SidePanelDivider, SidePanelSection} from '../common/styled-components';\nimport SourceDataCatalogFactory from './common/source-data-catalog';\nimport FilterPanelFactory from './filter-panel/filter-panel';\nimport {FILTER_VIEW_TYPES, PANEL_VIEW_TOGGLES} from '@kepler.gl/constants';\nimport {Filter} from '@kepler.gl/types';\nimport {Layer} from '@kepler.gl/layers';\nimport {isSideFilter} from '@kepler.gl/utils';\nimport {VisStateActions, ActionHandler, UIStateActions, ActionHandlers} from '@kepler.gl/actions';\nimport {Datasets} from '@kepler.gl/table';\n\nimport PanelViewListToggleFactory from './panel-view-list-toggle';\nimport PanelTitleFactory from './panel-title';\nimport AddFilterButtonFactory from './filter-panel/add-filter-button';\nimport DatasetSectionFactory from './layer-panel/dataset-section';\nimport {PanelMeta} from './common/types';\n\ntype VisStateActionHandlers = ActionHandlers<typeof VisStateActions>;\ntype UiStateActionHandlers = ActionHandlers<typeof UIStateActions>;\n\nexport type FilterManagerProps = {\n  filters: Filter[];\n  datasets: Datasets;\n  layers: Layer[];\n  showDatasetTable: ActionHandler<typeof VisStateActions.showDatasetTable>;\n  updateTableColor: ActionHandler<typeof VisStateActions.updateTableColor>;\n  removeDataset: ActionHandler<typeof VisStateActions.removeDataset>;\n  showAddDataModal: () => void;\n\n  panelMetadata: PanelMeta;\n  panelListView: string;\n  visStateActions: VisStateActionHandlers;\n  uiStateActions: UiStateActionHandlers;\n};\n\ntype FilterListProps = {\n  filters: Filter[];\n  datasets: Datasets;\n  layers: Layer[];\n  filtersByIndex: {\n    filter: Filter;\n    idx: number;\n  }[];\n  isAnyFilterAnimating: boolean;\n  visStateActions: VisStateActionHandlers;\n};\n\nFilterManagerFactory.deps = [\n  DatasetSectionFactory,\n  FilterPanelFactory,\n  PanelTitleFactory,\n  AddFilterButtonFactory,\n  PanelViewListToggleFactory,\n  SourceDataCatalogFactory\n];\n\nfunction FilterManagerFactory(\n  DatasetSection: ReturnType<typeof DatasetSectionFactory>,\n  FilterPanel: ReturnType<typeof FilterPanelFactory>,\n  PanelTitle: ReturnType<typeof PanelTitleFactory>,\n  AddFilterButton: ReturnType<typeof AddFilterButtonFactory>,\n  PanelViewListToggle: ReturnType<typeof PanelViewListToggleFactory>,\n  SourceDataCatalog: ReturnType<typeof SourceDataCatalogFactory>\n) {\n  const FilterList = ({\n    filtersByIndex,\n    filters,\n    datasets,\n    layers,\n    isAnyFilterAnimating,\n    visStateActions\n  }: FilterListProps) => {\n    const {\n      removeFilter,\n      setFilter,\n      toggleFilterAnimation,\n      toggleFilterFeature,\n      setFilterView\n    } = visStateActions;\n\n    const filterPanelCallbacks = useMemo(() => {\n      return filtersByIndex.reduce(\n        (accu, {filter, idx}) => ({\n          ...accu,\n          [filter.id]: {\n            removeFilter: () => removeFilter(idx),\n            toggleFilterView: () =>\n              setFilterView(\n                idx,\n                isSideFilter(filter) ? FILTER_VIEW_TYPES.enlarged : FILTER_VIEW_TYPES.side\n              ),\n            toggleAnimation: () => toggleFilterAnimation(idx),\n            toggleFilterFeature: () => toggleFilterFeature(idx)\n          }\n        }),\n        {}\n      );\n    }, [filtersByIndex, removeFilter, setFilterView, toggleFilterAnimation, toggleFilterFeature]);\n\n    return (\n      <SidePanelSection>\n        {[...filtersByIndex].reverse().map(({filter, idx}) => (\n          <FilterPanel\n            key={`${filter.id}-${idx}`}\n            idx={idx}\n            filters={filters}\n            filter={filter}\n            datasets={datasets}\n            layers={layers}\n            isAnyFilterAnimating={isAnyFilterAnimating}\n            removeFilter={filterPanelCallbacks[filter.id].removeFilter}\n            enlargeFilter={filterPanelCallbacks[filter.id].toggleFilterView}\n            toggleAnimation={filterPanelCallbacks[filter.id].toggleAnimation}\n            toggleFilterFeature={filterPanelCallbacks[filter.id].toggleFilterFeature}\n            setFilter={setFilter}\n          />\n        ))}\n      </SidePanelSection>\n    );\n  };\n\n  const DatasetFilterSection = ({\n    filtersByIndex,\n    filters,\n    dataset,\n    datasets,\n    layers,\n    isAnyFilterAnimating,\n    visStateActions,\n    showDatasetTable,\n    updateTableColor,\n    removeDataset,\n    showDeleteDataset\n  }) => {\n    const datasetCatalog = useMemo(() => {\n      return {[dataset.id]: dataset};\n    }, [dataset]);\n\n    return (\n      <>\n        <SourceDataCatalog\n          datasets={datasetCatalog}\n          showDatasetTable={showDatasetTable}\n          updateTableColor={updateTableColor}\n          removeDataset={removeDataset}\n          showDeleteDataset={showDeleteDataset}\n        />\n        <FilterList\n          filtersByIndex={filtersByIndex}\n          filters={filters}\n          datasets={datasets}\n          layers={layers}\n          isAnyFilterAnimating={isAnyFilterAnimating}\n          visStateActions={visStateActions}\n        />\n      </>\n    );\n  };\n\n  const FilterManager: React.FC<FilterManagerProps> = ({\n    filters = [],\n    datasets,\n    layers,\n    showDatasetTable,\n    updateTableColor,\n    removeDataset,\n    showAddDataModal,\n    panelMetadata,\n    panelListView,\n    visStateActions,\n    uiStateActions\n  }) => {\n    const {addFilter} = visStateActions;\n    const {togglePanelListView} = uiStateActions;\n    const isAnyFilterAnimating = filters.some(f => f.isAnimating);\n    const onClickAddFilter = useCallback(dataset => addFilter(dataset), [addFilter]);\n    const isSortByDatasetMode = panelListView === PANEL_VIEW_TOGGLES.byDataset;\n    const filtersByIndex = useMemo(\n      () =>\n        filters.map((f, idx) => ({\n          filter: f,\n          idx\n        })),\n      [filters]\n    );\n    const filtersByDatasets = useMemo(\n      () =>\n        Object.keys(datasets).reduce(\n          (accu, dataId) => ({\n            ...accu,\n            // if synced filter, show it unfder its the first dataset\n            [dataId]: filtersByIndex.filter(\n              fidx => fidx.filter.dataId && fidx.filter.dataId[0] === dataId\n            )\n          }),\n          {}\n        ),\n      [datasets, filtersByIndex]\n    );\n    const _TogglePanelListView = useCallback(\n      listView => {\n        togglePanelListView({panelId: 'filter', listView});\n      },\n      [togglePanelListView]\n    );\n\n    const intl = useIntl();\n    const filterListProps = {\n      datasets,\n      filters,\n      layers,\n      isAnyFilterAnimating,\n      visStateActions\n    };\n\n    const sourceDataCatalogProps = {\n      showDatasetTable,\n      updateTableColor,\n      removeDataset,\n      showDeleteDataset: true\n    };\n    //changes done\n    const displaythis = false;\n\n    return (\n      <div className=\"filter-manager\">\n        <SidePanelSection>\n          <PanelViewListToggle togglePanelListView={_TogglePanelListView} mode={panelListView} />\n        </SidePanelSection>\n        {displaythis?<DatasetSection\n          datasets={datasets}\n          {...sourceDataCatalogProps}\n          showDatasetList={!isSortByDatasetMode}\n          showAddDataModal={showAddDataModal}\n        />:''}        \n        <SidePanelDivider />\n        <SidePanelSection>\n          <PanelTitle\n            className=\"filter-manager-title\"\n            title={intl.formatMessage({id: panelMetadata.label})}\n          >\n            <AddFilterButton datasets={datasets} onAdd={onClickAddFilter} />\n          </PanelTitle>\n        </SidePanelSection>\n        <SidePanelSection>\n          {isSortByDatasetMode ? (\n            Object.keys(filtersByDatasets).map(dataId => (\n              <DatasetFilterSection\n                key={dataId}\n                filtersByIndex={filtersByDatasets[dataId]}\n                dataset={datasets[dataId]}\n                {...filterListProps}\n                {...sourceDataCatalogProps}\n              />\n            ))\n          ) : (\n            <FilterList filtersByIndex={filtersByIndex} {...filterListProps} />\n          )}\n        </SidePanelSection>\n      </div>\n    );\n  };\n\n  return FilterManager;\n}\n\nexport default FilterManagerFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {Component} from 'react';\nimport {createSelector} from 'reselect';\nimport styled from 'styled-components';\nimport get from 'lodash.get';\nimport {ALL_FIELD_TYPES, FILTER_TYPES} from '@kepler.gl/constants';\n\nimport NewFilterPanelFactory from '../../filters/filter-panels/new-filter-panel';\nimport TimeRangeFilterPanelFactory from '../../filters/filter-panels/time-range-filter-panel';\nimport SingleSelectFilterPanelFactory from '../../filters/filter-panels/single-select-filter-panel';\nimport MultiSelectFilterPanelFactory from '../../filters/filter-panels/multi-select-filter-panel';\nimport RangeFilterPanelFactory from '../../filters/filter-panels/range-filter-panel';\nimport PolygonFilterPanelFactory from '../../filters/filter-panels/polygon-filter-panel';\nimport {Field, Filter} from '@kepler.gl/types';\nimport {FilterPanelProps} from '../../filters/filter-panels/types';\nimport {Layer} from '@kepler.gl/layers';\n\nconst StyledFilterPanel = styled.div`\n  margin-bottom: 12px;\n  border-radius: 1px;\n`;\n\ninterface FilterPanelPropsImpl extends Omit<FilterPanelProps, 'allAvailableFields'> {\n  filters: Filter[];\n  layers: ReadonlyArray<Layer>;\n  isAnyFilterAnimating: boolean;\n  enlargeFilter: () => void;\n  toggleAnimation: () => void;\n  toggleFilterFeature: () => void;\n}\n\nFilterPanelFactory.deps = [\n  NewFilterPanelFactory,\n  TimeRangeFilterPanelFactory,\n  SingleSelectFilterPanelFactory,\n  MultiSelectFilterPanelFactory,\n  RangeFilterPanelFactory,\n  PolygonFilterPanelFactory\n];\n\nfunction FilterPanelFactory(\n  NewFilterPanel: ReturnType<typeof NewFilterPanelFactory>,\n  TimeRangeFilterPanel: ReturnType<typeof TimeRangeFilterPanelFactory>,\n  SingleSelectFilterPanel: ReturnType<typeof SingleSelectFilterPanelFactory>,\n  MultiSelectFilterPanel: ReturnType<typeof MultiSelectFilterPanelFactory>,\n  RangeFilterPanel: ReturnType<typeof RangeFilterPanelFactory>,\n  PolygonFilterPanel: ReturnType<typeof PolygonFilterPanelFactory>\n): React.ComponentType<FilterPanelPropsImpl> {\n  const FilterPanelComponents = {\n    default: NewFilterPanel,\n    [FILTER_TYPES.timeRange]: TimeRangeFilterPanel,\n    [FILTER_TYPES.select]: SingleSelectFilterPanel,\n    [FILTER_TYPES.multiSelect]: MultiSelectFilterPanel,\n    [FILTER_TYPES.range]: RangeFilterPanel,\n    [FILTER_TYPES.polygon]: PolygonFilterPanel\n  };\n\n  return class FilterPanel extends Component<FilterPanelPropsImpl> {\n    /* selectors */\n    fieldsSelector = (props: FilterPanelPropsImpl) => {\n      const datasetId = props.filter.dataId[0];\n      if (!datasetId) {\n        return [];\n      }\n      return get(props, ['datasets', datasetId, 'fields'], []);\n    };\n\n    filterSelector = (props: FilterPanelPropsImpl) => props.filters;\n    nameSelector = (props: FilterPanelPropsImpl) => props.filter.name;\n    dataIdSelector = (props: FilterPanelPropsImpl) => props.filter.dataId[0];\n\n    // only show current field and field that's not already been used as a filter\n    availableFieldsSelector = createSelector(\n      this.fieldsSelector,\n      this.filterSelector,\n      this.nameSelector,\n      this.dataIdSelector,\n      (fields, filters, name, dataId) =>\n        fields.filter(\n          (f: Field) =>\n            f.type &&\n            f.type !== ALL_FIELD_TYPES.geojson &&\n            (name.includes(f.name) ||\n              !filters.find(d => d.name.includes(f.name) && d.dataId.includes(dataId)))\n        )\n    );\n\n    render() {\n      const {filter} = this.props;\n\n      const {type} = filter;\n      const FilterFilterComponent =\n        (type && FilterPanelComponents[type]) || FilterPanelComponents.default;\n      const allAvailableFields = this.availableFieldsSelector(this.props);\n\n      return (\n        <StyledFilterPanel className=\"filter-panel\">\n          <FilterFilterComponent allAvailableFields={allAvailableFields} {...this.props} />\n        </StyledFilterPanel>\n      );\n    }\n  };\n}\n\nexport default FilterPanelFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React from 'react';\nimport {Datasets} from '@kepler.gl/table';\nimport AddByDatasetButton from '../add-by-dataset-button';\n\nexport type AddFilterButtonProps = {\n  datasets: Datasets;\n  onAdd: (dataId: string) => void;\n};\n\n\nfunction AddFilterButtonFactory() {\n  const AddFilterButton: React.FC<AddFilterButtonProps> = ({datasets, onAdd}) => {\n    return (\n      <AddByDatasetButton\n        datasets={datasets}\n        className=\"add-filter-button\"\n        width=\"105px\"\n        onAdd={onAdd}\n        buttonIntlId=\"filterManager.addFilter\"\n      />\n    );\n  };\n\n  return AddFilterButton;\n}\n\nexport default AddFilterButtonFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React from 'react';\nimport RangeSliderFactory from '../../common/range-slider';\n\nimport {PanelLabel, SidePanelSection} from '../../common/styled-components';\nimport {BRUSH_CONFIG} from '@kepler.gl/reducers';\nimport {FormattedMessage} from '@kepler.gl/localization';\n\nBrushConfigFactory.deps = [RangeSliderFactory];\n\ntype BrushConfigProps = {\n  config: {\n    size: number;\n  };\n  onChange: (config: {size: number}) => void;\n};\n\nfunction BrushConfigFactory(RangeSlider: ReturnType<typeof RangeSliderFactory>) {\n  const BrushConfig = ({config, onChange}: BrushConfigProps) => (\n    <SidePanelSection>\n      <PanelLabel>\n        <FormattedMessage id={'misc.brushRadius'} />\n      </PanelLabel>\n      <RangeSlider\n        range={BRUSH_CONFIG.range}\n        value0={0}\n        value1={config.size || 10 / 2}\n        step={0.1}\n        isRanged={false}\n        onChange={value => onChange({...config, size: value[1]})}\n        inputTheme=\"secondary\"\n      />\n    </SidePanelSection>\n  );\n\n  return BrushConfig;\n}\n\nexport default BrushConfigFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {Component} from 'react';\nimport {createSelector} from 'reselect';\n\nimport {Button} from '../common/styled-components';\nimport MapStyleSelectorFactory from './map-style-panel/map-style-selector';\nimport LayerGroupSelectorFactory from './map-style-panel/map-layer-selector';\nimport PanelTitleFactory from '../side-panel/panel-title';\n\nimport {Add, Trash} from '../common/icons';\nimport {PanelMeta} from './common/types';\nimport {injectIntl, WrappedComponentProps} from 'react-intl';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {MapStyle} from '@kepler.gl/reducers';\nimport {MapStyleActions} from '@kepler.gl/actions';\nimport {MapStyles} from '@kepler.gl/types';\n\nexport type MapManagerProps = {\n  mapStyle: MapStyle;\n  mapStyleActions: {\n    mapStyleChange: typeof MapStyleActions.mapStyleChange;\n    mapConfigChange: typeof MapStyleActions.mapConfigChange;\n    set3dBuildingColor: typeof MapStyleActions.set3dBuildingColor;\n    setBackgroundColor: typeof MapStyleActions.setBackgroundColor;\n    removeCustomMapStyle: typeof MapStyleActions.removeCustomMapStyle;\n  };\n  showAddMapStyleModal: () => void;\n  panelMetadata: PanelMeta;\n} & WrappedComponentProps;\n\nMapManagerFactory.deps = [MapStyleSelectorFactory, LayerGroupSelectorFactory, PanelTitleFactory];\n\nfunction MapManagerFactory(\n  MapStyleSelector: ReturnType<typeof MapStyleSelectorFactory>,\n  LayerGroupSelector: ReturnType<typeof LayerGroupSelectorFactory>,\n  PanelTitle: ReturnType<typeof PanelTitleFactory>\n) {\n  class MapManager extends Component<MapManagerProps> {\n    state = {\n      isSelecting: false\n    };\n\n    _toggleSelecting = () => {\n      this.setState({isSelecting: !this.state.isSelecting});\n    };\n\n    _selectStyle = (val: string) => {\n      const {mapStyleActions} = this.props;\n      const {mapStyleChange} = mapStyleActions;\n      mapStyleChange(val);\n      this._toggleSelecting();\n    };\n\n    getCustomMapStylesActions = createSelector(\n      (props: MapManagerProps) => props.mapStyle.mapStyles,\n      (props: MapManagerProps) => props.mapStyleActions,\n      (mapStyles: MapStyles, mapStyleActions) => {\n        const actionsPerCustomStyle = {};\n        Object.values(mapStyles)\n          .filter(mapStyle => {\n            return Boolean(mapStyle.custom);\n          })\n          .forEach(({id}) => {\n            actionsPerCustomStyle[id] = [\n              {\n                id: `remove-map-style-${id}`,\n                IconComponent: Trash,\n                tooltip: 'tooltip.removeBaseMapStyle',\n                onClick: () => mapStyleActions.removeCustomMapStyle({id})\n              }\n            ];\n          });\n        return actionsPerCustomStyle;\n      }\n    );\n\n    render() {\n      const {mapStyle, intl, mapStyleActions, showAddMapStyleModal, panelMetadata} = this.props;\n      const currentStyle = mapStyle.mapStyles[mapStyle.styleType] || {};\n      const editableLayers = currentStyle.layerGroups || [];\n      const customMapStylesActions = this.getCustomMapStylesActions(this.props);\n\n      return (\n        <div className=\"map-style-panel\">\n          <PanelTitle\n            className=\"map-manager-title\"\n            title={intl.formatMessage({id: panelMetadata.label})}\n          >\n            <Button className=\"add-map-style-button\" onClick={showAddMapStyleModal}>\n              <Add height=\"12px\" />\n              <FormattedMessage id={'mapManager.addMapStyle'} />\n            </Button>\n          </PanelTitle>\n          <div>\n            <MapStyleSelector\n              mapStyle={mapStyle}\n              isSelecting={this.state.isSelecting}\n              onChange={this._selectStyle}\n              toggleActive={this._toggleSelecting}\n              customMapStylesActions={customMapStylesActions}\n            />\n            {editableLayers.length ? (\n              <LayerGroupSelector\n                layers={mapStyle.visibleLayerGroups}\n                editableLayers={editableLayers}\n                topLayers={mapStyle.topLayerGroups}\n                onChange={mapStyleActions.mapConfigChange}\n                threeDBuildingColor={mapStyle.threeDBuildingColor}\n                on3dBuildingColorChange={mapStyleActions.set3dBuildingColor}\n                backgroundColor={mapStyle.backgroundColor}\n                onBackgroundColorChange={mapStyleActions.setBackgroundColor}\n              />\n            ) : null}\n          </div>\n        </div>\n      );\n    }\n  }\n  return injectIntl(MapManager);\n}\n\nexport default MapManagerFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {ComponentType} from 'react';\nimport styled from 'styled-components';\nimport classnames from 'classnames';\n\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {MapStyle} from '@kepler.gl/reducers';\nimport {NO_BASEMAP_ICON} from '@kepler.gl/constants';\nimport {MapStyles} from '@kepler.gl/types';\n\nimport {ArrowDown} from '../../common/icons';\nimport PanelHeaderActionFactory from '../panel-header-action';\nimport {\n  PanelHeaderContent,\n  PanelHeaderTitle,\n  PanelLabel,\n  StyledPanelHeader,\n  StyledPanelHeaderProps\n} from '../../common/styled-components';\nimport {BaseProps} from '../../common/icons';\nimport {PanelHeaderActionIcon} from '../panel-header-action';\n\ntype StyledMapDropdownProps = StyledPanelHeaderProps & {hasCallout: boolean};\n\nconst StyledMapDropdown = styled(StyledPanelHeader)<StyledMapDropdownProps>`\n  height: 48px;\n  margin-bottom: 5px;\n  opacity: 1;\n  position: relative;\n  transition: opacity 0.05s ease-in, height 0.25s ease-out;\n\n  &.collapsed {\n    height: 0;\n    margin-bottom: 0;\n    opacity: 0;\n  }\n\n  :hover {\n    cursor: pointer;\n    background-color: ${props => props.theme.panelBackgroundHover};\n  }\n\n  .map-title-block img {\n    margin-right: 12px;\n  }\n\n  .map-preview {\n    border-radius: 3px;\n    height: 30px;\n    width: 40px;\n  }\n\n  &.selected {\n    outline: 1px solid #caf2f4;\n  }\n\n  /* show callout dot if props.hasCallout and theme provides calloutDot base styles */\n  :after {\n    ${({theme}) => theme.calloutDot}\n    background-color: #00ACF5;\n    top: 12px;\n    left: 15px;\n    display: ${({theme, hasCallout}) => (theme.calloutDot && hasCallout ? 'block' : 'none')};\n  }\n\n  .custom-style-actions {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n`;\n\nexport type MapStyleSelectorProps = {\n  mapStyle: MapStyle;\n  onChange: (payload: string) => void;\n  toggleActive: () => void;\n  isSelecting: boolean;\n  customMapStylesActions?: Record<\n    string,\n    {\n      id: string;\n      IconComponent: PanelHeaderActionIcon;\n      tooltip: string;\n      onClick: () => void;\n    }[]\n  >;\n  actionIcons?: Record<string, ComponentType<Partial<BaseProps>>>;\n};\n\nMapStyleSelectorFactory.deps = [PanelHeaderActionFactory];\n\nfunction MapStyleSelectorFactory(PanelHeaderAction: ReturnType<typeof PanelHeaderActionFactory>) {\n  const defaultActionIcons = {\n    arrowDown: ArrowDown\n  };\n\n  const MapStyleSelector = ({\n    mapStyle,\n    onChange,\n    toggleActive,\n    isSelecting,\n    customMapStylesActions,\n    actionIcons = defaultActionIcons\n  }: MapStyleSelectorProps) => {\n    const {mapStyles, styleType}: {mapStyles: MapStyles; styleType: string} = mapStyle;\n\n    return (\n      <div>\n        <PanelLabel>\n          <FormattedMessage id={'mapManager.mapStyle'} />\n        </PanelLabel>\n\n        {Object.values(mapStyles).map(\n          ({id, custom, icon = NO_BASEMAP_ICON, label = 'Untitled'}) => (\n            <StyledMapDropdown\n              className={classnames('map-dropdown-option', {\n                collapsed: !isSelecting && id !== styleType,\n                selected: isSelecting && id === styleType\n              })}\n              key={id}\n              onClick={isSelecting ? () => onChange(id) : toggleActive}\n              hasCallout={Boolean(custom)}\n            >\n              <PanelHeaderContent className=\"map-title-block\">\n                <img className=\"map-preview\" src={icon} />\n                <PanelHeaderTitle className=\"map-preview-name\">{label}</PanelHeaderTitle>\n              </PanelHeaderContent>\n              {!isSelecting ? (\n                <PanelHeaderAction\n                  className=\"map-dropdown-option__enable-config\"\n                  id=\"map-enable-config\"\n                  IconComponent={actionIcons.arrowDown}\n                  tooltip={'tooltip.selectBaseMapStyle'}\n                  onClick={toggleActive}\n                />\n              ) : null}\n              {isSelecting && custom ? (\n                <div className=\"custom-style-actions\">\n                  {(customMapStylesActions?.[id] || []).map(action => (\n                    <PanelHeaderAction\n                      key={action.id}\n                      className=\"map-dropdown-option__enable-config\"\n                      id={action.id}\n                      IconComponent={action.IconComponent}\n                      tooltip={action.tooltip}\n                      onClick={e => {\n                        e.stopPropagation();\n                        action.onClick();\n                      }}\n                    />\n                  ))}\n                </div>\n              ) : null}\n            </StyledMapDropdown>\n          )\n        )}\n      </div>\n    );\n  };\n\n  return MapStyleSelector;\n}\n\nexport default MapStyleSelectorFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useCallback, useState} from 'react';\nimport styled, {css} from 'styled-components';\n\nimport {rgbToHex} from '@kepler.gl/utils';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {RGBColor} from '@kepler.gl/types';\n\nimport {Portaled} from '../..';\nimport {Tooltip} from '../../common/styled-components';\nimport CustomPicker from '../layer-panel/custom-picker';\nimport {ColorBlock} from '../layer-panel/color-selector';\n\nconst LayerGroupColorPickerWrapper = styled.div<{extraMarginRight?: boolean; disabled?: boolean}>`\n  margin-right: ${props => (props.extraMarginRight ? 0 : 24)}px;\n  cursor: pointer;\n  ${props =>\n    props.disabled &&\n    css`\n      cursor: none;\n      pointer-events: none;\n      opacity: 0.3;\n    `}\n`;\n\nexport type LayerGroupColorPickerProps = {\n  slug: string;\n  color: RGBColor;\n  onColorChange: (pd: RGBColor) => void;\n  extraMarginRight: boolean;\n  disabled: boolean;\n};\n\nLayerGroupColorPickerFactory.deps = [];\n\nfunction LayerGroupColorPickerFactory() {\n  const LayerGroupColorPicker: React.FC<LayerGroupColorPickerProps> = ({\n    slug,\n    color,\n    onColorChange,\n    extraMarginRight,\n    disabled\n  }) => {\n    const [displayColorPicker, setDisplayColorPicker] = useState(false);\n\n    const onColorBlockClick = useCallback(() => {\n      setDisplayColorPicker(!displayColorPicker);\n    }, [setDisplayColorPicker, displayColorPicker]);\n\n    const onClosePicker = useCallback(() => {\n      setDisplayColorPicker(false);\n    }, [setDisplayColorPicker]);\n\n    const onCustomPickerChange = useCallback(\n      newColor => {\n        onColorChange([newColor.rgb.r, newColor.rgb.g, newColor.rgb.b]);\n      },\n      [onColorChange]\n    );\n\n    return (\n      <LayerGroupColorPickerWrapper extraMarginRight={extraMarginRight} disabled={disabled}>\n        <ColorBlock\n          backgroundcolor={color}\n          onClick={onColorBlockClick}\n          className=\"color-selector__selector__block\"\n          data-tip\n          data-for={`update-color-${slug}`}\n        />\n        <Tooltip id={`update-color-${slug}`} effect=\"solid\" delayShow={500}>\n          <span>\n            <FormattedMessage id={'Update color'} />\n          </span>\n        </Tooltip>\n        <Portaled\n          isOpened={displayColorPicker !== false}\n          left={110}\n          top={-50}\n          onClose={onClosePicker}\n        >\n          <CustomPicker\n            color={rgbToHex(color)}\n            onChange={onCustomPickerChange}\n            onSwatchClose={onClosePicker}\n          />\n        </Portaled>\n      </LayerGroupColorPickerWrapper>\n    );\n  };\n\n  return LayerGroupColorPicker;\n}\n\nexport default LayerGroupColorPickerFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React from 'react';\nimport {SidePanelItem} from '../types';\n\nexport type CustomPanelsProps<P> = {\n  panels: SidePanelItem[];\n  getProps?: (props: SidePanelItem) => P;\n};\n\n// This is a dummy component that can be replaced to inject more side panel sub panels into the side bar\nfunction CustomPanelsFactory<P>() {\n  const CustomPanels: React.FC<CustomPanelsProps<P>> = props => {\n    return <div />;\n  };\n\n  CustomPanels.defaultProps = {\n    // provide a list of additional panels\n    panels: [\n      // {\n      //   id: 'rocket',\n      //   label: 'Rocket',\n      //   iconComponent: Icons.Rocket\n      // },\n      // {\n      //   id: 'chart',\n      //   label: 'Chart',\n      //   iconComponent: Icons.LineChart\n      // }\n    ],\n    // prop selector from side panel props\n    getProps: (sidePanelProps: SidePanelItem) => ({} as P)\n  };\n\n  return CustomPanels;\n}\n\nexport default CustomPanelsFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport Modal from '../common/modal';\n\nconst ModalDialogFactory = () => Modal;\n\nexport default ModalDialogFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport DatasetLabel from '../common/dataset-label';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {Layer} from '@kepler.gl/layers';\nimport {KeplerTable} from '@kepler.gl/table';\n\nconst StyledMsg = styled.div`\n  margin-top: 24px;\n`;\n\nexport interface DeleteDatasetModalProps {\n  dataset: KeplerTable;\n  layers: Layer[];\n}\n\nexport const DeleteDatasetModal: React.FC<DeleteDatasetModalProps> = ({dataset, layers = []}) => {\n  // retrieve only layers related to the current dataset\n  const currDatasetLayers = layers.filter(layer => layer.config.dataId === (dataset && dataset.id));\n\n  return (\n    <div className=\"delete-dataset-modal\">\n      <DatasetLabel dataset={dataset} />\n      <StyledMsg className=\"delete-dataset-msg\">\n        <FormattedMessage\n          id={'modal.deleteData.warning'}\n          values={{length: currDatasetLayers.length}}\n        />\n      </StyledMsg>\n    </div>\n  );\n};\n\nconst DeleteDatasetModalFactory = () => DeleteDatasetModal;\nexport default DeleteDatasetModalFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useState} from 'react';\nimport styled from 'styled-components';\nimport get from 'lodash.get';\nimport {IntlShape, useIntl} from 'react-intl';\n\nimport FileUploadFactory from '../common/file-uploader/file-upload';\nimport LoadStorageMapFactory from './load-storage-map';\nimport ModalTabsFactory from './modal-tabs';\nimport LoadingDialog from './loading-dialog';\n\nimport {LOADING_METHODS} from '@kepler.gl/constants';\nimport {FileLoading, FileLoadingProgress, LoadFiles} from '@kepler.gl/types';\n\n/** @typedef {import('./load-data-modal').LoadDataModalProps} LoadDataModalProps */\n\nconst StyledLoadDataModal = styled.div.attrs({\n  className: 'load-data-modal'\n})`\n  padding: ${props => props.theme.modalPadding};\n  min-height: 440px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst noop = () => {};\nconst getDefaultMethod = <T,>(methods: T[] = []) =>\n  Array.isArray(methods) ? get(methods, [0]) : null;\nexport interface LoadingMethod {\n  id: string;\n  label: string;\n  elementType: React.ComponentType<any>;\n  tabElementType?: React.ComponentType<{onClick: React.MouseEventHandler; intl: IntlShape}>;\n}\n\ntype LoadDataModalProps = {\n  // call backs\n  onFileUpload: (files: File[]) => void;\n  onLoadCloudMap: (provider: any, vis: any) => void;\n  fileLoading: FileLoading | false;\n  loadingMethods?: LoadingMethod[];\n  /** A list of names of supported formats suitable to present to user */\n  fileFormatNames: string[];\n  /** A list of typically 3 letter extensions (without '.') for file matching */\n  fileExtensions: string[];\n  isCloudMapLoading: boolean;\n  /** Set to true if app wants to do its own file filtering */\n  disableExtensionFilter?: boolean;\n  onClose?: (...args: any) => any;\n\n  loadFiles: LoadFiles;\n  fileLoadingProgress: FileLoadingProgress;\n};\n\nLoadDataModalFactory.deps = [ModalTabsFactory, FileUploadFactory, LoadStorageMapFactory];\n\nexport function LoadDataModalFactory(\n  ModalTabs: ReturnType<typeof ModalTabsFactory>,\n  FileUpload: ReturnType<typeof FileUploadFactory>,\n  LoadStorageMap: ReturnType<typeof LoadStorageMapFactory>\n) {\n  /** @type {React.FunctionComponent<LoadDataModalProps>} */\n  const LoadDataModal: React.FC<LoadDataModalProps> = props => {\n    const intl = useIntl();\n    const {loadingMethods, isCloudMapLoading} = props;\n    const [currentMethod, toggleMethod] = useState(getDefaultMethod(loadingMethods));\n\n    const ElementType = currentMethod?.elementType;\n\n    return (\n      <StyledLoadDataModal>\n        <ModalTabs\n          currentMethod={currentMethod?.id}\n          loadingMethods={loadingMethods}\n          toggleMethod={toggleMethod}\n        />\n        {isCloudMapLoading ? (\n          <LoadingDialog size={64} />\n        ) : (\n          ElementType && <ElementType key={currentMethod?.id} intl={intl} {...props} />\n        )}\n      </StyledLoadDataModal>\n    );\n  };\n\n  LoadDataModal.defaultProps = {\n    onFileUpload: noop,\n    fileLoading: false,\n    loadingMethods: [\n      {\n        id: LOADING_METHODS.upload,\n        label: 'modal.loadData.upload',\n        elementType: FileUpload\n      },\n      {\n        id: LOADING_METHODS.storage,\n        label: 'modal.loadData.storage',\n        elementType: LoadStorageMap\n      }\n    ]\n  };\n\n  return LoadDataModal;\n}\n\nexport default LoadDataModalFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useCallback, useEffect, useState} from 'react';\nimport styled from 'styled-components';\nimport {Logout, Login} from '../common/icons';\nimport {CenterVerticalFlexbox, Button, CheckMark} from '../common/styled-components';\nimport {Provider, CloudUser} from '@kepler.gl/cloud-providers';\nimport {useCloudListProvider} from '../hooks/use-cloud-list-provider';\n\ninterface StyledTileWrapperProps {\n  selected?: boolean;\n}\n\nconst StyledTileWrapper = styled.div.attrs({\n  className: 'provider-tile__wrapper'\n})<StyledTileWrapperProps>`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n  border-radius: 2px;\n  border: 1px solid\n    ${props => (props.selected ? props.theme.primaryBtnBgd : props.theme.selectBorderColorLT)};\n  color: ${props => (props.selected ? props.theme.primaryBtnBgd : props.theme.selectBorderColorLT)};\n  cursor: pointer;\n  font-weight: 500;\n  width: 120px;\n  height: 168px;\n  background-color: #ffffff;\n  transition: ${props => props.theme.transition};\n  position: relative;\n  :hover {\n    border: 1px solid ${props => props.theme.primaryBtnBgd};\n    color: ${props => props.theme.primaryBtnBgd};\n  }\n\n  .button {\n    margin-top: 20px;\n  }\n`;\n\nconst StyledBox = styled(CenterVerticalFlexbox)`\n  margin-right: 12px;\n  position: relative;\n`;\n\nconst StyledCloudName = styled.div`\n  font-size: 12px;\n  margin-top: 12px;\n  margin-bottom: 4px;\n`;\n\nconst StyledUserName = styled.div`\n  font-size: 11px;\n  margin-top: 8px;\n  text-align: center;\n  color: ${props => props.theme.primaryBtnActBgd};\n  overflow: hidden;\n  width: 100px;\n  text-overflow: ellipsis;\n`;\n\ninterface OnClickProps {\n  onClick?: React.MouseEventHandler<HTMLButtonElement>;\n}\n\nconst LoginButton = ({onClick}: OnClickProps) => (\n  <Button className=\"login-button\" link small onClick={onClick}>\n    <Login />\n    Login\n  </Button>\n);\n\nconst LogoutButton = ({onClick}: OnClickProps) => (\n  <Button className=\"logout-button\" link small onClick={onClick}>\n    <Logout />\n    Logout\n  </Button>\n);\n\nconst NewTag = styled.div`\n  width: 37px;\n  height: 19px;\n  display: flex;\n  align-content: center;\n  justify-content: center;\n  border-radius: 8px;\n  padding: 4px 8px;\n  background-color: #EDE9F9;\n  color: #8863F8;\n  position: absolute;\n  left: 35%;\n  top: -8px\n  z-index: 500;\n  font-size: 11px;\n  line-height: 10px;\n`;\n\nexport const StyledWarning = styled.span`\n  color: ${props => props.theme.errorColor};\n  font-weight: ${props => props.theme.selectFontWeightBold};\n`;\n\ninterface CloudTileProps {\n  actionName?: string | null;\n  // cloud provider class\n  provider: Provider;\n}\n\n/**\n * this component display a provider and allows users to select and set the current provider\n * @param provider\n * @param actionName\n * @constructor\n */\nconst CloudTile: React.FC<CloudTileProps> = ({provider, actionName}) => {\n  const [user, setUser] = useState<CloudUser | null>(null);\n  const [error, setError] = useState<Error | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const {provider: currentProvider, setProvider} = useCloudListProvider();\n  const isSelected = provider === currentProvider;\n\n  useEffect(() => {\n    if (!provider) {\n      return;\n    }\n    setError(null);\n    setIsLoading(true);\n    setError(null);\n    provider\n      .getUser()\n      .then(setUser)\n      .catch(setError)\n      .finally(() => {\n        setError(null);\n        setIsLoading(false);\n      });\n  }, [provider]);\n\n  const onLogin = useCallback(async () => {\n    setError(null);\n    setIsLoading(true);\n    try {\n      const user = await provider.login();\n      setUser(user);\n      setProvider(provider);\n    } catch (error) {\n      setError(error as Error);\n    }\n    setIsLoading(false);\n  }, [provider]);\n\n  const onSelect = useCallback(async () => {\n    if (isLoading) {\n      return;\n    }\n    if (user) {\n      setProvider(provider);\n      return;\n    }\n    try {\n      await onLogin();\n      setProvider(provider);\n    } catch (err) {\n      setError(err as Error);\n      setProvider(null);\n    }\n  }, [setProvider, provider, user, isLoading]);\n\n  const onLogout = useCallback(async () => {\n    setIsLoading(true);\n    try {\n      await provider.logout();\n    } catch (error) {\n      setError(error as Error);\n    }\n    setIsLoading(false);\n    setUser(null);\n    setProvider(null);\n  }, [provider]);\n\n  const {displayName, name} = provider;\n\n  return (\n    <StyledBox>\n      {provider.isNew ? <NewTag>New</NewTag> : null}\n      <div></div>\n      <StyledTileWrapper onClick={onSelect} selected={isSelected}>\n        <StyledCloudName>{displayName || name}</StyledCloudName>\n        {provider.icon ? <provider.icon height=\"64px\" /> : null}\n        {isLoading ? (\n          <div>Loading ...</div>\n        ) : (\n          <>{user ? <StyledUserName>{actionName || user.name}</StyledUserName> : null}</>\n        )}\n        {isSelected ? <CheckMark /> : null}\n      </StyledTileWrapper>\n      {user || error ? <LogoutButton onClick={onLogout} /> : <LoginButton onClick={onLogin} />}\n      {error ? <StyledWarning>{error.message}</StyledWarning> : null}\n    </StyledBox>\n  );\n};\n\nexport default CloudTile;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useEffect} from 'react';\nimport styled from 'styled-components';\nimport ImagePreview from '../common/image-preview';\nimport {SetExportImageSettingUpdaterAction} from '@kepler.gl/actions';\n\nimport {\n  EXPORT_IMG_RATIO_OPTIONS,\n  EXPORT_IMG_RESOLUTION_OPTIONS,\n  ExportImage\n} from '@kepler.gl/constants';\n\nimport {StyledModalContent, SelectionButton, CheckMark} from '../common/styled-components';\nimport Switch from '../common/switch';\nimport {injectIntl, IntlShape} from 'react-intl';\nimport {FormattedMessage} from '@kepler.gl/localization';\n\nconst ImageOptionList = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  width: 250px;\n\n  .image-option-section {\n    .image-option-section-title {\n      font-weight: 500;\n      font-size: 14px;\n    }\n  }\n\n  .button-list {\n    display: flex;\n    flex-direction: row;\n    padding: 8px 0px;\n  }\n\n  input {\n    margin-right: 8px;\n  }\n`;\n\nexport interface ExportImageModalProps {\n  exportImage: ExportImage;\n  mapW: number;\n  mapH: number;\n  onUpdateImageSetting: (payload: SetExportImageSettingUpdaterAction['payload']) => void;\n  cleanupExportImage: () => void;\n  intl: IntlShape;\n}\n\nconst ExportImageModalFactory = () => {\n  /** @type {typeof import('./export-image-modal').ExportImageModal} */\n  const ExportImageModal: React.FC<ExportImageModalProps> = ({\n    mapW,\n    mapH,\n    exportImage,\n    onUpdateImageSetting,\n    cleanupExportImage,\n    intl\n  }) => {\n    const {legend, ratio, resolution} = exportImage;\n\n    useEffect(() => {\n      onUpdateImageSetting({\n        exporting: true\n      });\n      return cleanupExportImage;\n    }, [onUpdateImageSetting, cleanupExportImage]);\n\n    useEffect(() => {\n      if (mapH !== exportImage.mapH || mapW !== exportImage.mapW) {\n        onUpdateImageSetting({\n          mapH,\n          mapW\n        });\n      }\n    }, [mapH, mapW, exportImage, onUpdateImageSetting]);\n\n    return (\n      <StyledModalContent className=\"export-image-modal\">\n        <ImageOptionList>\n          <div className=\"image-option-section\">\n            <div className=\"image-option-section-title\">\n              <FormattedMessage id={'modal.exportImage.ratioTitle'} />\n            </div>\n            <FormattedMessage id={'modal.exportImage.ratioDescription'} />\n            <div className=\"button-list\" id=\"export-image-modal__option_ratio\">\n              {EXPORT_IMG_RATIO_OPTIONS.filter(op => !op.hidden).map(op => (\n                <SelectionButton\n                  key={op.id}\n                  selected={ratio === op.id}\n                  onClick={() => onUpdateImageSetting({ratio: op.id})}\n                >\n                  <FormattedMessage id={op.label} />\n                  {ratio === op.id && <CheckMark />}\n                </SelectionButton>\n              ))}\n            </div>\n          </div>\n          <div className=\"image-option-section\">\n            <div className=\"image-option-section-title\">\n              <FormattedMessage id={'modal.exportImage.resolutionTitle'} />\n            </div>\n            <FormattedMessage id={'modal.exportImage.resolutionDescription'} />\n            <div className=\"button-list\" id=\"export-image-modal__option_resolution\">\n              {EXPORT_IMG_RESOLUTION_OPTIONS.map(op => (\n                <SelectionButton\n                  key={op.id}\n                  selected={resolution === op.id}\n                  onClick={() => op.available && onUpdateImageSetting({resolution: op.id})}\n                >\n                  {op.label}\n                  {resolution === op.id && <CheckMark />}\n                </SelectionButton>\n              ))}\n            </div>\n          </div>\n          <div className=\"image-option-section\">\n            <div className=\"image-option-section-title\">\n              <FormattedMessage id={'modal.exportImage.mapLegendTitle'} />\n            </div>\n            <Switch\n              type=\"checkbox\"\n              id=\"add-map-legend\"\n              checked={legend}\n              label={intl.formatMessage({id: 'modal.exportImage.mapLegendAdd'})}\n              onChange={() => onUpdateImageSetting({legend: !legend})}\n            />\n          </div>\n        </ImageOptionList>\n        <ImagePreview exportImage={exportImage} />\n      </StyledModalContent>\n    );\n  };\n\n  return injectIntl(ExportImageModal);\n};\n\nexport default ExportImageModalFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {Component} from 'react';\n\nimport {EXPORT_DATA_TYPE_OPTIONS} from '@kepler.gl/constants';\nimport {FileType} from '../common/icons';\nimport {\n  StyledExportSection,\n  StyledFilteredOption,\n  StyledModalContent,\n  StyledType,\n  CheckMark\n} from '../common/styled-components';\nimport {injectIntl, IntlShape} from 'react-intl';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {Datasets} from '@kepler.gl/table';\n\nconst getDataRowCount = (\n  datasets: Datasets,\n  selectedDataset: string | undefined,\n  filtered: boolean,\n  intl: IntlShape\n) => {\n  if (selectedDataset === undefined) {\n    return;\n  }\n  const selectedData = datasets[selectedDataset];\n  if (!selectedData) {\n    return intl.formatMessage(\n      {id: 'modal.exportData.fileCount'},\n      {fileCount: Object.keys(datasets).length}\n    );\n  }\n  const {dataContainer, filteredIdxCPU} = selectedData;\n\n  if (filtered && !filteredIdxCPU) {\n    return '-';\n  }\n\n  const rowCount = filtered ? filteredIdxCPU?.length : dataContainer.numRows();\n\n  return intl.formatMessage(\n    {id: 'modal.exportData.rowCount'},\n    {rowCount: rowCount?.toLocaleString()}\n  );\n};\n\nexport interface ExportDataModalProps {\n  datasets: Datasets;\n  selectedDataset?: string;\n  dataType: string;\n  filtered: boolean;\n  // callbacks\n  applyCPUFilter: (filter: string | string[]) => void;\n  onChangeExportSelectedDataset: (dataset: string) => void;\n  onChangeExportDataType: (type: string) => void;\n  onChangeExportFiltered: (isFiltered: boolean) => void;\n  intl: IntlShape;\n  supportedDataTypes: {\n    id: string;\n    label: string;\n    available: boolean;\n  }[];\n}\n\nconst ExportDataModalFactory = () => {\n  class ExportDataModal extends Component<ExportDataModalProps> {\n    componentDidMount() {\n      const toCPUFilter = this.props.selectedDataset || Object.keys(this.props.datasets);\n      this.props.applyCPUFilter(toCPUFilter);\n    }\n\n    _onSelectDataset: React.ChangeEventHandler<HTMLSelectElement> = ({target: {value}}) => {\n      this.props.applyCPUFilter(value);\n      this.props.onChangeExportSelectedDataset(value);\n    };\n\n    render() {\n      const {\n        supportedDataTypes = EXPORT_DATA_TYPE_OPTIONS,\n        datasets,\n        selectedDataset,\n        dataType,\n        filtered,\n        onChangeExportDataType,\n        onChangeExportFiltered,\n        intl\n      } = this.props;\n\n      return (\n        <StyledModalContent className=\"export-data-modal\">\n          <div>\n            <StyledExportSection>\n              <div className=\"description\">\n                <div className=\"title\">\n                  <FormattedMessage id={'modal.exportData.datasetTitle'} />\n                </div>\n                <div className=\"subtitle\">\n                  <FormattedMessage id={'modal.exportData.datasetSubtitle'} />\n                </div>\n              </div>\n              <div className=\"selection\">\n                <select value={selectedDataset} onChange={this._onSelectDataset}>\n                  {[intl.formatMessage({id: 'modal.exportData.allDatasets'})]\n                    .concat(Object.keys(datasets))\n                    .map(d => (\n                      <option key={d} value={d}>\n                        {(datasets[d] && datasets[d].label) || d}\n                      </option>\n                    ))}\n                </select>\n              </div>\n            </StyledExportSection>\n            <StyledExportSection>\n              <div className=\"description\">\n                <div className=\"title\">\n                  <FormattedMessage id={'modal.exportData.dataTypeTitle'} />\n                </div>\n                <div className=\"subtitle\">\n                  <FormattedMessage id={'modal.exportData.dataTypeSubtitle'} />\n                </div>\n              </div>\n              <div className=\"selection\">\n                {supportedDataTypes.map(op => (\n                  <StyledType\n                    key={op.id}\n                    selected={dataType === op.id}\n                    onClick={() => op.available && onChangeExportDataType(op.id)}\n                  >\n                    <FileType ext={op.label} height=\"80px\" fontSize=\"11px\" />\n                    {dataType === op.id && <CheckMark />}\n                  </StyledType>\n                ))}\n              </div>\n            </StyledExportSection>\n            <StyledExportSection>\n              <div className=\"description\">\n                <div className=\"title\">\n                  <FormattedMessage id={'modal.exportData.dataTypeTitle'} />\n                </div>\n                <div className=\"subtitle\">\n                  <FormattedMessage id={'modal.exportData.filterDataSubtitle'} />\n                </div>\n              </div>\n              <div className=\"selection\">\n                <StyledFilteredOption\n                  className=\"unfiltered-option\"\n                  selected={!filtered}\n                  onClick={() => onChangeExportFiltered(false)}\n                >\n                  <div className=\"filter-option-title\">\n                    <FormattedMessage id={'modal.exportData.unfilteredData'} />\n                  </div>\n                  <div className=\"filter-option-subtitle\">\n                    {getDataRowCount(datasets, selectedDataset, false, intl)}\n                  </div>\n                  {!filtered && <CheckMark />}\n                </StyledFilteredOption>\n                <StyledFilteredOption\n                  className=\"filtered-option\"\n                  selected={filtered}\n                  onClick={() => onChangeExportFiltered(true)}\n                >\n                  <div className=\"filter-option-title\">\n                    <FormattedMessage id={'modal.exportData.filteredData'} />\n                  </div>\n                  <div className=\"filter-option-subtitle\">\n                    {getDataRowCount(datasets, selectedDataset, true, intl)}\n                  </div>\n                  {filtered && <CheckMark />}\n                </StyledFilteredOption>\n              </div>\n            </StyledExportSection>\n          </div>\n        </StyledModalContent>\n      );\n    }\n  }\n\n  return injectIntl(ExportDataModal);\n};\n\nexport default ExportDataModalFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React from 'react';\n\nimport {FileType} from '../../common/icons';\nimport {StyledModalContent, StyledType, CheckMark} from '../../common/styled-components';\nimport {EXPORT_MAP_FORMATS, EXPORT_MAP_FORMAT_OPTIONS} from '@kepler.gl/constants';\nimport {StyledExportMapSection} from './components';\nimport ExportHtmlMapFactory from './export-html-map';\nimport ExportJsonMapFactory from './export-json-map';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {ActionHandler, setExportHTMLMapMode, setUserMapboxAccessToken} from '@kepler.gl/actions';\n\ninterface ExportMapModalFactoryProps {\n  options?: {format: string};\n  config: any;\n  onEditUserMapboxAccessToken: ActionHandler<typeof setUserMapboxAccessToken>;\n  onChangeExportMapHTMLMode?: ActionHandler<typeof setExportHTMLMapMode>;\n  onChangeExportMapFormat?: (format: string) => any;\n  mapFormat?: string;\n}\n\nconst style = {width: '100%'};\n\nconst NO_OP = (...args: any[]) => ({} as any);\n\nExportMapModalFactory.deps = [ExportHtmlMapFactory, ExportJsonMapFactory];\n\nfunction ExportMapModalFactory(\n  ExportHtmlMap: ReturnType<typeof ExportHtmlMapFactory>,\n  ExportJsonMap: ReturnType<typeof ExportJsonMapFactory>\n) {\n  const ExportMapModalUnmemoized = ({\n    config = {},\n    onChangeExportMapFormat = NO_OP,\n    onChangeExportMapHTMLMode = NO_OP,\n    onEditUserMapboxAccessToken = NO_OP,\n    options = {format: ''}\n  }: ExportMapModalFactoryProps) => (\n    <StyledModalContent className=\"export-map-modal\">\n      <div style={style}>\n        <StyledExportMapSection>\n          <div className=\"description\">\n            <div className=\"title\">\n              <FormattedMessage id={'modal.exportMap.formatTitle'} />\n            </div>\n            <div className=\"subtitle\">\n              <FormattedMessage id={'modal.exportMap.formatSubtitle'} />\n            </div>\n          </div>\n          <div className=\"selection\">\n            {EXPORT_MAP_FORMAT_OPTIONS.map(op => (\n              <StyledType\n                key={op.id}\n                selected={options.format === op.id}\n                onClick={() => op.available && onChangeExportMapFormat(op.id)}\n              >\n                <FileType ext={op.label} height=\"80px\" fontSize=\"11px\" />\n\n                {options.format === op.id && <CheckMark />}\n              </StyledType>\n            ))}\n          </div>\n        </StyledExportMapSection>\n        {\n          {\n            [EXPORT_MAP_FORMATS.HTML]: (\n              <ExportHtmlMap\n                onChangeExportMapHTMLMode={onChangeExportMapHTMLMode}\n                onEditUserMapboxAccessToken={onEditUserMapboxAccessToken}\n                options={options[options.format]}\n              />\n            ),\n            [EXPORT_MAP_FORMATS.JSON]: <ExportJsonMap config={config} />\n          }[\n            // @ts-ignore\n            options.format\n          ]\n        }\n      </div>\n    </StyledModalContent>\n  );\n\n  ExportMapModalUnmemoized.displayName = 'ExportMapModal';\n\n  const ExportMapModal = React.memo(ExportMapModalUnmemoized);\n\n  return ExportMapModal;\n}\n\nexport default ExportMapModalFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React from 'react';\nimport {StyledExportSection, StyledType, CheckMark} from '../../common/styled-components';\nimport {StyledExportMapSection, StyledWarning, ExportMapLink} from './components';\nimport {\n  EXPORT_HTML_MAP_MODE_OPTIONS,\n  EXPORT_HTML_MAP_DOC,\n  EXPORT_HTML_MAP_MODES_DOC\n} from '@kepler.gl/constants';\nimport styled from 'styled-components';\nimport {injectIntl} from 'react-intl';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {IntlShape} from 'react-intl';\n\nimport {setUserMapboxAccessToken, setExportHTMLMapMode, ActionHandler} from '@kepler.gl/actions';\n\nconst ExportMapStyledExportSection = styled(StyledExportSection)`\n  .disclaimer {\n    font-size: ${props => props.theme.inputFontSize};\n    color: ${props => props.theme.inputColor};\n    margin-top: 12px;\n  }\n`;\n\ninterface StyledInputProps {\n  error?: boolean;\n}\n\nconst StyledInput = styled.input<StyledInputProps>`\n  width: 100%;\n  padding: ${props => props.theme.inputPadding};\n  color: ${props => (props.error ? 'red' : props.theme.titleColorLT)};\n  height: ${props => props.theme.inputBoxHeight};\n  outline: 0;\n  font-size: ${props => props.theme.inputFontSize};\n\n  :active,\n  :focus,\n  &.focus,\n  &.active {\n    outline: 0;\n  }\n`;\n\nconst BigStyledTile = styled(StyledType)`\n  height: unset;\n  width: unset;\n  img {\n    width: 180px;\n    height: 120px;\n  }\n`;\n\ntype ExportHtmlMapProps = {\n  onChangeExportMapHTMLMode: ActionHandler<typeof setExportHTMLMapMode>;\n  onEditUserMapboxAccessToken: ActionHandler<typeof setUserMapboxAccessToken>;\n  options: {\n    userMapboxToken?: string;\n    mode?: string;\n  };\n};\n\ntype IntlProps = {\n  intl: IntlShape;\n};\n\nfunction ExportHtmlMapFactory(): React.ComponentType<ExportHtmlMapProps> {\n  /** @type {typeof import('./export-html-map').ExportHtmlMap} */\n  const ExportHtmlMap: React.FC<ExportHtmlMapProps & IntlProps> = ({\n    onChangeExportMapHTMLMode = mode => {},\n    onEditUserMapboxAccessToken = token => {},\n    options = {},\n    intl\n  }) => (\n    <div>\n      <StyledExportMapSection>\n        <div className=\"description\" />\n        <div className=\"selection\">\n          <FormattedMessage id={'modal.exportMap.html.selection'} />\n        </div>\n      </StyledExportMapSection>\n      <ExportMapStyledExportSection className=\"export-map-modal__html-options\">\n        <div className=\"description\">\n          <div className=\"title\">\n            <FormattedMessage id={'modal.exportMap.html.tokenTitle'} />\n          </div>\n          <div className=\"subtitle\">\n            <FormattedMessage id={'modal.exportMap.html.tokenSubtitle'} />\n          </div>\n        </div>\n        <div className=\"selection\">\n          <StyledInput\n            onChange={e => onEditUserMapboxAccessToken(e.target.value)}\n            type=\"text\"\n            placeholder={intl.formatMessage({id: 'modal.exportMap.html.tokenPlaceholder'})}\n            value={options ? options.userMapboxToken : ''}\n          />\n          <div className=\"disclaimer\">\n            <StyledWarning>\n              <FormattedMessage id={'modal.exportMap.html.tokenMisuseWarning'} />\n            </StyledWarning>\n            <FormattedMessage id={'modal.exportMap.html.tokenDisclaimer'} />\n            <ExportMapLink href={EXPORT_HTML_MAP_DOC}>\n              <FormattedMessage id={'modal.exportMap.html.tokenUpdate'} />\n            </ExportMapLink>\n          </div>\n        </div>\n      </ExportMapStyledExportSection>\n      <ExportMapStyledExportSection>\n        <div className=\"description\">\n          <div className=\"title\">\n            <FormattedMessage id={'modal.exportMap.html.modeTitle'} />\n          </div>\n          <div className=\"subtitle\">\n            <FormattedMessage id={'modal.exportMap.html.modeSubtitle1'} />\n            <a href={EXPORT_HTML_MAP_MODES_DOC}>\n              <FormattedMessage id={'modal.exportMap.html.modeSubtitle2'} />\n            </a>\n          </div>\n        </div>\n        <div className=\"selection\">\n          {EXPORT_HTML_MAP_MODE_OPTIONS.map(mode => (\n            <BigStyledTile\n              key={mode.id}\n              selected={options.mode === mode.id}\n              onClick={() => mode.available && onChangeExportMapHTMLMode(mode.id)}\n            >\n              <img src={mode.url} alt=\"\" />\n              <p>\n                <FormattedMessage\n                  id={'modal.exportMap.html.modeDescription'}\n                  values={{mode: intl.formatMessage({id: mode.label})}}\n                />\n              </p>\n              {options.mode === mode.id && <CheckMark />}\n            </BigStyledTile>\n          ))}\n        </div>\n      </ExportMapStyledExportSection>\n    </div>\n  );\n\n  ExportHtmlMap.displayName = 'ExportHtmlMap';\n\n  return injectIntl(ExportHtmlMap);\n}\n\nexport default ExportHtmlMapFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useState} from 'react';\nimport JSONPretty from 'react-json-pretty';\nimport {ADD_DATA_TO_MAP_DOC} from '@kepler.gl/constants';\nimport styled from 'styled-components';\nimport {StyledExportSection, Button} from '../../common/styled-components';\nimport {StyledExportMapSection, StyledWarning, ExportMapLink} from './components';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\n\nconst StyledJsonExportSection = styled(StyledExportSection)`\n  .note {\n    color: ${props => props.theme.errorColor};\n    font-size: 11px;\n  }\n\n  .viewer {\n    position: relative;\n    border: 1px solid ${props => props.theme.selectBorderColorLT};\n    background-color: white;\n    border-radius: 2px;\n    display: inline-block;\n    font: inherit;\n    line-height: 1.5em;\n    padding: 0.5em 3.5em 0.5em 1em;\n    margin: 0;\n    box-sizing: border-box;\n    height: 180px;\n    width: 100%;\n    overflow-y: scroll;\n    overflow-x: auto;\n    white-space: pre-wrap;\n    word-wrap: break-word;\n    max-width: 600px;\n  }\n\n  .copy-button {\n    margin: 1em 1em 0 0;\n    position: absolute;\n    top: 0;\n    right: 0;\n  }\n`;\n\ntype ExportJsonPropTypes = {\n  config: any;\n};\n\nconst ExportJsonMapUnmemoized = ({config = {}}: ExportJsonPropTypes) => {\n  const [copied, setCopy] = useState(false);\n  return (\n    <div>\n      <StyledExportMapSection>\n        <div className=\"description\" />\n        <div className=\"selection\">\n          <FormattedMessage id={'modal.exportMap.json.selection'} />\n        </div>\n      </StyledExportMapSection>\n      <StyledJsonExportSection className=\"export-map-modal__json-options\">\n        <div className=\"description\">\n          <div className=\"title\">\n            <FormattedMessage id={'modal.exportMap.json.configTitle'} />\n          </div>\n          <div className=\"subtitle\">\n            <FormattedMessage id={'modal.exportMap.json.configDisclaimer'} />\n            <ExportMapLink href={ADD_DATA_TO_MAP_DOC}>addDataToMap</ExportMapLink>.\n          </div>\n        </div>\n        <div className=\"selection\">\n          <div className=\"viewer\">\n            <JSONPretty id=\"json-pretty\" json={config} />\n            <CopyToClipboard text={JSON.stringify(config)} onCopy={() => setCopy(true)}>\n              <Button width=\"80px\">{copied ? 'Copied!' : 'Copy'}</Button>\n            </CopyToClipboard>\n          </div>\n          <div className=\"disclaimer\">\n            <StyledWarning>\n              <FormattedMessage id={'modal.exportMap.json.disclaimer'} />\n            </StyledWarning>\n          </div>\n        </div>\n      </StyledJsonExportSection>\n    </div>\n  );\n};\n\nExportJsonMapUnmemoized.displayName = 'ExportJsonMap';\n\nconst ExportJsonMap = React.memo(ExportJsonMapUnmemoized);\n\nconst ExportJsonMapFactory = () => ExportJsonMap;\n\nexport default ExportJsonMapFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {Component} from 'react';\nimport {polyfill} from 'react-lifecycles-compat';\nimport classnames from 'classnames';\nimport styled from 'styled-components';\nimport MapGLMap, {MapRef} from 'react-map-gl/maplibre';\nimport {\n  StyledModalContent,\n  InputLight,\n  StyledMapContainer,\n  StyledModalVerticalPanel,\n  StyledModalSection\n} from '../common/styled-components';\nimport {media} from '@kepler.gl/styles';\n\n// Utils\nimport {transformRequest} from '@kepler.gl/utils';\nimport {injectIntl, IntlShape} from 'react-intl';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport maplibregl from 'maplibre-gl';\nimport {InputStyle, MapState} from '@kepler.gl/types';\n\nconst MapH = 190;\nconst MapW = 264;\nconst ErrorMsg = {\n  styleError:\n    'Failed to load map style, make sure it is published. For private style, paste in your access token.'\n};\n\nconst PreviewMap = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin-left: 116px;\n  flex-shrink: 0;\n\n  .preview-title {\n    font-weight: 500;\n    font-size: 10px;\n    padding: 8px 0px;\n  }\n\n  .preview-title.error {\n    color: ${props => props.theme.errorColor};\n  }\n\n  ${media.portable`\n    margin-left: 32px;\n  `};\n\n  ${media.palm`\n    margin-left: unset;\n    .preview-title {\n      margin-top: 0px;\n    }\n  `};\n`;\n\nconst StyledPreviewImage = styled.div`\n  background: ${props => props.theme.modalImagePlaceHolder};\n  border-radius: 4px;\n  box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.18);\n  width: ${MapW}px;\n  height: ${MapH}px;\n  position: relative;\n\n  .preview-image-placeholder {\n    position: absolute;\n    top: 0;\n    left: 0;\n  }\n\n  .preview-image-spinner {\n    position: absolute;\n    left: calc(50% - 25px);\n    top: calc(50% - 25px);\n  }\n`;\n\nconst InlineLink = styled.a`\n  font-weight: 500;\n\n  :hover {\n    cursor: pointer;\n  }\n`;\n\ninterface AddMapStyleModalProps {\n  inputMapStyle: Function;\n  inputStyle: InputStyle;\n  loadCustomMapStyle: Function;\n  mapboxApiAccessToken: string;\n  mapboxApiUrl?: string;\n  mapState: MapState;\n  intl: IntlShape;\n}\n\nfunction AddMapStyleModalFactory() {\n  class AddMapStyleModal extends Component<AddMapStyleModalProps> {\n    state = {\n      reRenderKey: 0,\n      previousToken: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n      if (\n        props.inputStyle &&\n        props.inputStyle.accessToken &&\n        props.inputStyle.accessToken !== state.previousToken\n      ) {\n        // toke has changed\n        // ReactMapGl doesn't re-create map when token has changed\n        // here we force the map to update\n\n        return {\n          reRenderKey: state.reRenderKey + 1,\n          previousToken: props.inputStyle.accessToken\n        };\n      }\n\n      return null;\n    }\n\n    mapRef: MapRef | null | undefined;\n    _map: maplibregl.Map | undefined;\n\n    componentDidUpdate() {\n      const map = this.mapRef && this.mapRef.getMap();\n      if (map && this._map !== map) {\n\n        this._map = map;\n\n        map.on('style.load', () => {\n          const style = map.getStyle();\n          this.loadMapStyleJson(style);\n        });\n\n        map.on('error', () => {\n          this.loadMapStyleError();\n        });\n      }\n    }\n\n    loadMapStyleJson = style => {\n      this.props.loadCustomMapStyle({style, error: false});\n    };\n\n    loadMapStyleError = () => {\n      this.props.loadCustomMapStyle({error: true});\n    };\n\n    render() {\n      const {inputStyle, mapState, mapboxApiUrl, intl} = this.props;\n\n      const mapboxApiAccessToken = inputStyle.accessToken || this.props.mapboxApiAccessToken;\n      const mapProps = {\n        ...mapState,\n        baseApiUrl: mapboxApiUrl,\n        mapboxAccessToken: mapboxApiAccessToken,\n        mapLib: maplibregl,\n        preserveDrawingBuffer: true,\n        transformRequest\n      };\n\n      return (\n        <div className=\"add-map-style-modal\">\n          <StyledModalContent>\n            <StyledModalVerticalPanel>\n              <StyledModalSection>\n                <div className=\"modal-section-title\">\n                  <FormattedMessage id={'modal.addStyle.pasteTitle'} />\n                </div>\n                <div className=\"modal-section-subtitle\">\n                  {intl.formatMessage({id: 'modal.addStyle.pasteSubtitle0'})}\n                  <InlineLink\n                    target=\"_blank\"\n                    href=\"https://www.mapbox.com/help/studio-manual-publish/#style-url\"\n                  >\n                    {' '}\n                    {intl.formatMessage({id: 'modal.addStyle.pasteSubtitle2'})}\n                  </InlineLink>{' '}\n                  {intl.formatMessage({id: 'modal.addStyle.pasteSubtitle3'})}\n                  <InlineLink\n                    target=\"_blank\"\n                    href=\"https://docs.mapbox.com/mapbox-gl-js/style-spec\"\n                  >\n                    {' '}\n                    {intl.formatMessage({id: 'modal.addStyle.pasteSubtitle4'})}\n                  </InlineLink>\n                </div>\n                <InputLight\n                  type=\"text\"\n                  value={inputStyle.url || ''}\n                  onChange={({target: {value}}) => this.props.inputMapStyle({url: value})}\n                  placeholder=\"e.g. https://basemaps.cartocdn.com/gl/positron-gl-style/style.json\"\n                />\n              </StyledModalSection>\n\n              {/* <StyledModalSection>\n                <div className=\"modal-section-title\">\n                  <FormattedMessage id={'modal.addStyle.publishTitle'} />\n                </div>\n                <div className=\"modal-section-subtitle\">\n                  {intl.formatMessage({id: 'modal.addStyle.publishSubtitle1'})}\n                  <InlineLink target=\"_blank\" href=\"https://www.mapbox.com/studio/styles/\">\n                    {' '}\n                    mapbox\n                  </InlineLink>{' '}\n                  {intl.formatMessage({id: 'modal.addStyle.publishSubtitle2'})}\n                  <InlineLink\n                    target=\"_blank\"\n                    href=\"https://www.mapbox.com/help/studio-manual-publish/\"\n                  >\n                    {' '}\n                    {intl.formatMessage({id: 'modal.addStyle.publishSubtitle3'})}\n                  </InlineLink>{' '}\n                  {intl.formatMessage({id: 'modal.addStyle.publishSubtitle4'})}\n                </div>\n\n                <div className=\"modal-section-subtitle\">\n                  {intl.formatMessage({id: 'modal.addStyle.publishSubtitle5'})}\n                  <InlineLink\n                    target=\"_blank\"\n                    href=\"https://www.mapbox.com/help/how-access-tokens-work/\"\n                  >\n                    {' '}\n                    {intl.formatMessage({id: 'modal.addStyle.publishSubtitle6'})}\n                  </InlineLink>{' '}\n                  {intl.formatMessage({id: 'modal.addStyle.publishSubtitle7'})}\n                </div>\n                <InputLight\n                  type=\"text\"\n                  value={inputStyle.accessToken || ''}\n                  onChange={({target: {value}}) => this.props.inputMapStyle({accessToken: value})}\n                  placeholder={intl.formatMessage({id: 'modal.addStyle.exampleToken'})}\n                />\n              </StyledModalSection> */}\n\n              <StyledModalSection>\n                <div className=\"modal-section-title\">\n                  <FormattedMessage id={'modal.addStyle.namingTitle'} />\n                </div>\n                <InputLight\n                  type=\"text\"\n                  value={inputStyle.label || ''}\n                  onChange={({target: {value}}) => this.props.inputMapStyle({label: value})}\n                />\n              </StyledModalSection>\n            </StyledModalVerticalPanel>\n            <PreviewMap>\n              <div\n                className={classnames('preview-title', {\n                  error: inputStyle.error\n                })}\n              >\n                {inputStyle.error\n                  ? ErrorMsg.styleError\n                  : (inputStyle.style && inputStyle.style.name) || ''}\n              </div>\n              <StyledPreviewImage className=\"preview-image\">\n                {!inputStyle.isValid ? (\n                  <div className=\"preview-image-spinner\" />\n                ) : (\n                  <StyledMapContainer>\n                    <MapGLMap\n                      {...mapProps}\n                      ref={el => {\n                        this.mapRef = el;\n                      }}\n                      key={this.state.reRenderKey}\n                      style={{\n                        width: MapW,\n                        height: MapH\n                      }}\n                      mapStyle={inputStyle.url === null ? undefined : inputStyle.url}\n                    />\n                  </StyledMapContainer>\n                )}\n              </StyledPreviewImage>\n            </PreviewMap>\n          </StyledModalContent>\n        </div>\n      );\n    }\n  }\n\n  return injectIntl(polyfill(AddMapStyleModal));\n}\n\nexport default AddMapStyleModalFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useCallback, useMemo} from 'react';\nimport styled from 'styled-components';\nimport ImageModalContainer, {ImageModalContainerProps} from './image-modal-container';\nimport {FlexContainer} from '../common/flex-container';\nimport StatusPanel, {UploadAnimation} from './status-panel';\nimport {ProviderSelect} from './cloud-components/provider-select';\nimport {\n  MAP_THUMBNAIL_DIMENSION,\n  MAP_INFO_CHARACTER,\n  ExportImage,\n  dataTestIds\n} from '@kepler.gl/constants';\n\nimport {\n  StyledModalContent,\n  InputLight,\n  TextAreaLight,\n  StyledExportSection,\n  StyledModalSection,\n  StyledModalInputFootnote\n} from '../common/styled-components';\nimport ImagePreview from '../common/image-preview';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {MapInfo} from '@kepler.gl/types';\nimport {Provider} from '@kepler.gl/cloud-providers';\nimport {setMapInfo, cleanupExportImage as cleanupExportImageAction} from '@kepler.gl/actions';\nimport {ModalFooter} from '../common/modal';\nimport {useCloudListProvider} from '../hooks/use-cloud-list-provider';\n\nconst StyledSaveMapModal = styled.div.attrs({\n  className: 'save-map-modal'\n})`\n  .save-map-modal-content {\n    min-height: 400px;\n    flex-direction: column;\n  }\n\n  .description {\n    width: 300px;\n  }\n\n  .image-preview-panel {\n    width: 300px;\n\n    .image-preview {\n      padding: 0;\n    }\n  }\n\n  .map-info-panel {\n    flex-direction: column;\n  }\n\n  .save-map-modal-description {\n    .modal-section-subtitle {\n      margin-left: 6px;\n    }\n  }\n`;\n\nconst nop = _ => {};\nconst TEXT_AREA_LIGHT_STYLE = {resize: 'none'};\n\ntype CharacterLimits = {\n  title?: number;\n  description?: number;\n};\n\ntype SaveMapModalProps = {\n  mapInfo: MapInfo;\n  exportImage: ExportImage;\n  isProviderLoading: boolean;\n  providerError?: Error;\n  characterLimits?: CharacterLimits;\n\n  // callbacks\n  onUpdateImageSetting: ImageModalContainerProps['onUpdateImageSetting'];\n  cleanupExportImage: typeof cleanupExportImageAction;\n  onSetMapInfo: typeof setMapInfo;\n  onConfirm: (provider: Provider) => void;\n  onCancel: () => void;\n};\n\ntype MapInfoPanelProps = Pick<SaveMapModalProps, 'mapInfo' | 'characterLimits'> & {\n  onChangeInput: (\n    type: string,\n    event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => void;\n};\n\nexport const MapInfoPanel: React.FC<MapInfoPanelProps> = ({\n  mapInfo,\n  characterLimits,\n  onChangeInput\n}) => {\n  const {description = '', title = ''} = mapInfo;\n  return (\n    <div className=\"selection map-info-panel\" data-testid={dataTestIds.providerMapInfoPanel}>\n      <StyledModalSection className=\"save-map-modal-name\">\n        <div className=\"modal-section-title\">Name*</div>\n        <div>\n          <InputLight\n            id=\"map-title\"\n            type=\"text\"\n            value={title}\n            onChange={e => onChangeInput('title', e)}\n            placeholder=\"Type map title\"\n          />\n        </div>\n      </StyledModalSection>\n      <StyledModalSection>\n        <FlexContainer className=\"save-map-modal-description\">\n          <div className=\"modal-section-title\">Description</div>\n          <div className=\"modal-section-subtitle\">(optional)</div>\n        </FlexContainer>\n        <div>\n          <TextAreaLight\n            rows={3}\n            id=\"map-description\"\n            style={TEXT_AREA_LIGHT_STYLE as React.CSSProperties}\n            value={description}\n            onChange={e => onChangeInput('description', e)}\n            placeholder=\"Type map description\"\n          />\n        </div>\n        <StyledModalInputFootnote\n          error={\n            Boolean(characterLimits?.description) &&\n            description.length > Number(characterLimits?.description)\n          }\n        >\n          {description.length}/{characterLimits?.description || MAP_INFO_CHARACTER.description}{' '}\n          characters\n        </StyledModalInputFootnote>\n      </StyledModalSection>\n    </div>\n  );\n};\n\nconst SaveMapHeader = ({cloudProviders}) => {\n  return (\n    <StyledExportSection>\n      <div className=\"description\">\n        <div className=\"title\">\n          <FormattedMessage id={'modal.saveMap.title'} />\n        </div>\n        <div className=\"subtitle\">\n          <FormattedMessage id={'modal.saveMap.subtitle'} />\n        </div>\n      </div>\n      <ProviderSelect cloudProviders={cloudProviders} />\n    </StyledExportSection>\n  );\n};\n\nconst STYLED_EXPORT_SECTION_STYLE = {margin: '2px 0'};\nconst PROVIDER_MANAGER_URL_STYLE = {textDecoration: 'underline'};\n\nfunction SaveMapModalFactory() {\n  const SaveMapModal: React.FC<SaveMapModalProps> = ({\n    mapInfo,\n    exportImage,\n    characterLimits = MAP_INFO_CHARACTER,\n    isProviderLoading,\n    providerError,\n    onUpdateImageSetting = nop,\n    cleanupExportImage,\n    onSetMapInfo,\n    onCancel,\n    onConfirm\n  }) => {\n    const {provider, cloudProviders} = useCloudListProvider();\n\n    const onChangeInput = (\n      key: string,\n      {target: {value}}: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n    ) => {\n      onSetMapInfo({[key]: value});\n    };\n\n    const confirmButton = useMemo(\n      () => ({\n        large: true,\n        disabled: Boolean(!(provider && mapInfo.title)),\n        children: 'modal.button.save'\n      }),\n      [provider, mapInfo]\n    );\n\n    const confirm = useCallback(() => {\n      if (provider) {\n        onConfirm(provider);\n      }\n    }, [provider]);\n\n    return (\n      <ImageModalContainer\n        provider={provider}\n        onUpdateImageSetting={onUpdateImageSetting}\n        cleanupExportImage={cleanupExportImage}\n      >\n        <StyledSaveMapModal>\n          <StyledModalContent className=\"save-map-modal-content\">\n            <SaveMapHeader cloudProviders={cloudProviders} />\n            {provider && (\n              <>\n                {provider.getManagementUrl ? (\n                  <StyledExportSection style={STYLED_EXPORT_SECTION_STYLE}>\n                    <div className=\"selection\">\n                      <a\n                        key={1}\n                        href={provider.getManagementUrl()}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        style={PROVIDER_MANAGER_URL_STYLE}\n                      >\n                        Go to your Kepler.gl {provider.displayName} page\n                      </a>\n                    </div>\n                  </StyledExportSection>\n                ) : null}\n                <StyledExportSection>\n                  <div className=\"description image-preview-panel\">\n                    <ImagePreview\n                      exportImage={exportImage}\n                      width={MAP_THUMBNAIL_DIMENSION.width}\n                      showDimension={false}\n                    />\n                  </div>\n                  {isProviderLoading ? (\n                    <div\n                      data-testid={dataTestIds.providerLoading}\n                      className=\"selection map-saving-animation\"\n                    >\n                      <UploadAnimation icon={provider && provider.icon} />\n                    </div>\n                  ) : (\n                    <MapInfoPanel\n                      mapInfo={mapInfo}\n                      characterLimits={characterLimits}\n                      onChangeInput={onChangeInput}\n                    />\n                  )}\n                </StyledExportSection>\n              </>\n            )}\n            {providerError ? (\n              <StatusPanel\n                isLoading={false}\n                error={providerError.message}\n                providerIcon={provider && provider.icon}\n              />\n            ) : null}\n          </StyledModalContent>\n        </StyledSaveMapModal>\n        <ModalFooter cancel={onCancel} confirm={confirm} confirmButton={confirmButton} />\n      </ImageModalContainer>\n    );\n  };\n\n  return SaveMapModal;\n}\n\nexport default SaveMapModalFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\n// libraries\nimport React, {Component, createRef} from 'react';\nimport {createSelector} from 'reselect';\nimport styled from 'styled-components';\nimport {Map} from 'react-map-gl/maplibre';\nimport debounce from 'lodash.debounce';\nimport {\n  exportImageError,\n  scaleMapStyleByResolution,\n  getCenterAndZoomFromBounds,\n  convertToPng,\n  getScaleFromImageSize\n} from '@kepler.gl/utils';\nimport {findMapBounds} from '@kepler.gl/reducers';\nimport MapContainerFactory from './map-container';\nimport MapsLayoutFactory from './maps-layout';\nimport {MapViewStateContextProvider} from './map-view-state-context';\n\nimport {GEOCODER_LAYER_ID, ExportImage} from '@kepler.gl/constants';\nimport {SplitMap} from '@kepler.gl/types';\nimport {\n  setExportImageDataUri,\n  setExportImageError,\n  setExportImageSetting\n} from '@kepler.gl/actions';\nimport {mapFieldsSelector} from './kepler-gl';\n\nconst CLASS_FILTER = [\n  'maplibregl-control-container',\n  'attrition-link',\n  'attrition-logo',\n  'map-control__panel-split-viewport-tools'\n];\nconst DOM_FILTER_FUNC = node => !CLASS_FILTER.includes(node.className);\nconst OUT_OF_SCREEN_POSITION = -9999;\n\nPlotContainerFactory.deps = [MapContainerFactory, MapsLayoutFactory];\n\n// Remove mapbox logo in exported map, because it contains non-ascii characters\n// Remove split viewport UI controls from exported images when the legend is shown\nconst StyledPlotContainer = styled.div`\n  .maplibregl-ctrl-bottom-left,\n  .maplibregl-ctrl-bottom-right,\n  .maplibre-attribution-container,\n  .map-control__panel-split-viewport-tools {\n    display: none;\n  }\n\n  position: absolute;\n  top: ${OUT_OF_SCREEN_POSITION}px;\n  left: ${OUT_OF_SCREEN_POSITION}px;\n`;\n\ninterface StyledMapContainerProps {\n  width?: number;\n  height?: number;\n}\n\nconst StyledMapContainer = styled.div<StyledMapContainerProps>`\n  width: ${props => props.width}px;\n  height: ${props => props.height}px;\n  display: flex;\n`;\n\ninterface PlotContainerProps {\n  width?: number;\n  height?: number;\n  exportImageSetting: ExportImage;\n  addNotification: Function;\n  mapFields: ReturnType<typeof mapFieldsSelector>;\n  setExportImageSetting: typeof setExportImageSetting;\n  setExportImageDataUri: typeof setExportImageDataUri;\n  setExportImageError: typeof setExportImageError;\n  splitMaps?: SplitMap[];\n  enableErrorNotification?: boolean;\n}\n\nexport default function PlotContainerFactory(\n  MapContainer: ReturnType<typeof MapContainerFactory>,\n  MapsLayout: ReturnType<typeof MapsLayoutFactory>\n): React.ComponentType<PlotContainerProps> {\n  class PlotContainer extends Component<PlotContainerProps> {\n    constructor(props) {\n      super(props);\n      this._onMapRender = debounce(this._onMapRender, 500);\n      this._retrieveNewScreenshot = debounce(this._retrieveNewScreenshot, 500);\n    }\n\n    componentDidMount() {\n      this.props.setExportImageSetting({processing: true});\n    }\n\n    componentDidUpdate(prevProps) {\n      // re-fetch the new screenshot only when ratio legend or resolution changes\n      const checks = ['ratio', 'resolution', 'legend'];\n      const shouldRetrieveScreenshot = checks.some(\n        item => this.props.exportImageSetting[item] !== prevProps.exportImageSetting[item]\n      );\n      if (shouldRetrieveScreenshot) {\n        this.props.setExportImageSetting({processing: true});\n        this._retrieveNewScreenshot();\n      }\n    }\n\n    plottingAreaRef = createRef<HTMLDivElement>();\n\n    mapStyleSelector = props => props.mapFields.mapStyle;\n    mapScaleSelector = props => {\n      const {imageSize} = props.exportImageSetting;\n      const {mapState} = props.mapFields;\n      if (imageSize.scale) {\n        return imageSize.scale;\n      }\n\n      const scale = getScaleFromImageSize(\n        imageSize.imageW,\n        imageSize.imageH,\n        mapState.width * (mapState.isSplit ? 2 : 1),\n        mapState.height\n      );\n\n      return scale > 0 ? scale : 1;\n    };\n\n    scaledMapStyleSelector = createSelector(\n      this.mapStyleSelector,\n      this.mapScaleSelector,\n      (mapStyle, scale) => ({\n        ...mapStyle,\n        bottomMapStyle: scaleMapStyleByResolution(mapStyle.bottomMapStyle, scale),\n        topMapStyle: scaleMapStyleByResolution(mapStyle.topMapStyle, scale)\n      })\n    );\n\n    _onMapRender = map => {\n      if (map.isStyleLoaded()) {\n        this._retrieveNewScreenshot();\n      }\n    };\n\n    _retrieveNewScreenshot = () => {\n      if (this.plottingAreaRef.current) {\n        const {imageSize, escapeXhtmlForWebpack} = this.props.exportImageSetting;\n        convertToPng(this.plottingAreaRef.current, {\n          filter: DOM_FILTER_FUNC,\n          width: imageSize.imageW,\n          height: imageSize.imageH,\n          escapeXhtmlForWebpack\n        })\n          .then(this.props.setExportImageDataUri)\n          .catch(err => {\n            this.props.setExportImageError(err);\n            if (this.props.enableErrorNotification) {\n              this.props.addNotification(exportImageError({err}));\n            }\n          });\n      }\n    };\n\n    render() {\n      const {exportImageSetting, mapFields, splitMaps = []} = this.props;\n      const {mapState, visState} = mapFields;\n      const {layers, layerData} = visState;\n      const {imageSize, legend} = exportImageSetting;\n\n      const isSplit = splitMaps && splitMaps.length > 1;\n\n      const size = {\n        width: imageSize?.imageW || 1,\n        height: imageSize?.imageH || 1\n      };\n      const width = size.width / (isSplit ? 2 : 1);\n      const height = size.height;\n      const scale = this.mapScaleSelector(this.props);\n      const newMapState = {\n        ...mapState,\n        width,\n        height,\n        zoom: mapState.zoom + (Math.log2(scale) || 0)\n      };\n\n      // center and all layer bounds\n      if (exportImageSetting.center) {\n        const renderedLayers = layers.filter(\n          (layer, idx) => layer.id !== GEOCODER_LAYER_ID && layer.shouldRenderLayer(layerData[idx])\n        );\n        const bounds = findMapBounds(renderedLayers);\n        const centerAndZoom = getCenterAndZoomFromBounds(bounds, {width, height});\n        if (centerAndZoom) {\n          const zoom = Number.isFinite(centerAndZoom.zoom) ? centerAndZoom.zoom : mapState.zoom;\n\n          newMapState.longitude = centerAndZoom.center[0];\n          newMapState.latitude = centerAndZoom.center[1];\n          newMapState.zoom = zoom + Number(Math.log2(scale) || 0);\n        }\n      }\n\n      const mapProps = {\n        ...mapFields,\n        mapStyle: this.scaledMapStyleSelector(this.props),\n\n        // override viewport based on export settings\n        mapState: newMapState,\n        mapControls: {\n          // override map legend visibility\n          mapLegend: {\n            show: legend,\n            active: true,\n          }\n        },\n        MapComponent: Map,\n        onMapRender: this._onMapRender,\n        isExport: true,\n        deckGlProps: {\n          ...mapFields.deckGlProps,\n          glOptions: {\n            preserveDrawingBuffer: true,\n            useDevicePixels: false\n          }\n        }\n      };\n\n      const mapContainers = !isSplit ? (\n        <MapContainer index={0} primary={true} {...mapProps} />\n      ) : (\n        <MapsLayout className=\"plot-container-maps\" mapState={newMapState}>\n          {splitMaps.map((settings, index) => (\n            <MapContainer key={index} index={index} primary={index === 1} {...mapProps} />\n          ))}\n        </MapsLayout>\n      );\n      return (\n        <StyledPlotContainer className=\"export-map-instance\">\n          <StyledMapContainer ref={this.plottingAreaRef} width={size.width} height={size.height}>\n            <MapViewStateContextProvider mapState={newMapState}>\n              {mapContainers}\n            </MapViewStateContextProvider>\n          </StyledMapContainer>\n        </StyledPlotContainer>\n      );\n    }\n  }\n  return PlotContainer;\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {Component} from 'react';\nimport styled from 'styled-components';\n\nimport NotificationItemFactory from './notification-panel/notification-item';\nimport {DEFAULT_NOTIFICATION_TOPICS} from '@kepler.gl/constants';\nimport {Notifications} from '@kepler.gl/types';\nimport {removeNotification} from '@kepler.gl/actions';\n\nconst NotificationPanelContent = styled.div`\n  background: transparent;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  padding: 4px;\n  overflow-y: auto;\n  overflow-x: hidden;\n  position: absolute;\n  top: 1em;\n  right: 1em;\n  z-index: 10000;\n  box-sizing: border-box;\n`;\n\nNotificationPanelFactory.deps = [NotificationItemFactory];\n\ninterface NotificationPanelProps {\n  removeNotification?: typeof removeNotification;\n  notifications: Notifications[];\n}\n\nexport default function NotificationPanelFactory(\n  NotificationItem: ReturnType<typeof NotificationItemFactory>\n): React.ComponentClass<NotificationPanelProps> {\n  class NotificationPanelUnmemoized extends Component<NotificationPanelProps> {\n    static displayName = 'NotificationPanel';\n\n    render() {\n      const globalNotifications = this.props.notifications.filter(\n        n => n.topic === DEFAULT_NOTIFICATION_TOPICS.global\n      );\n      return (\n        <NotificationPanelContent\n          className=\"notification-panel\"\n          style={{display: globalNotifications.length ? 'block' : 'none'}}\n        >\n          {globalNotifications.map(n => (\n            <NotificationItem\n              key={n.id}\n              notification={n}\n              removeNotification={this.props.removeNotification}\n            />\n          ))}\n        </NotificationPanelContent>\n      );\n    }\n  }\n\n  const NotificationPanel = (React.memo(\n    NotificationPanelUnmemoized\n  ) as unknown) as typeof NotificationPanelUnmemoized;\n  return NotificationPanel;\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useMemo} from 'react';\nimport {Button} from '../../common/styled-components';\nimport {ArrowLeft} from '../../common/icons';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport styled from 'styled-components';\nimport {dataTestIds} from '@kepler.gl/constants';\nimport {Provider} from '@kepler.gl/cloud-providers';\n\nconst StyledStorageHeader = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n  font-size: 12px;\n  line-height: 14px;\n`;\n\nconst StyledBackBtn = styled.a`\n  margin-bottom: 16px;\n  color: #3a414c;\n  cursor: pointer;\n\n  &:hover {\n    font-weight: 500;\n  }\n`;\n\nconst LINK_STYLE = {textDecoration: 'underline'};\n\nconst Title = styled.span`\n  font-size: 14px;\n  line-height: 16px;\n  font-weight: 500;\n  margin-bottom: 16px;\n\n  span {\n    text-transform: capitalize;\n  }\n`;\n\ntype CloudHeaderProps = {\n  provider: Provider;\n  onBack: () => void;\n};\n\nexport const CloudHeader: React.FC<CloudHeaderProps> = ({provider, onBack}) => {\n  const managementUrl = useMemo(() => provider.getManagementUrl(), [provider]);\n  return (\n    <div data-testid={dataTestIds.cloudHeader}>\n      <StyledStorageHeader>\n        <StyledBackBtn>\n          <Button link onClick={onBack}>\n            <ArrowLeft height=\"14px\" />\n            <FormattedMessage id={'modal.loadStorageMap.back'} />\n          </Button>\n        </StyledBackBtn>\n        {managementUrl && (\n          <a\n            key={1}\n            href={managementUrl}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            style={LINK_STYLE}\n          >\n            {provider.displayName}\n          </a>\n        )}\n      </StyledStorageHeader>\n      <Title>\n        <span>{provider.displayName}</span>\n        <FormattedMessage id={'modal.loadStorageMap.storageMaps'} />\n      </Title>\n    </div>\n  );\n};\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport moment from 'moment/moment';\nimport React from 'react';\nimport styled from 'styled-components';\nimport {Base} from '../../common/icons';\n\nconst MapIcon = props => {\n  return (\n    <div {...props}>\n      {props.children}\n      <Base height=\"32px\" viewBox={'0 0 16 16'}>\n        <path\n          fill=\"#d3d8d6\"\n          d=\"m13.6 11.572-3.2 2.1336v-9.2776l3.2-2.1336zm-12-7.144 3.2-2.1336v9.2776l-3.2 2.1336zm13.244 8.2376c0.2224-0.148 0.356-0.3984 0.356-0.6656v-11.2c0-0.2952-0.1624-0.5664-0.4224-0.7048-0.26-0.14-0.576-0.1248-0.8216 0.0392l-4.3128 2.876-3.5432-2.8352c-0.1208-0.0936-0.2952-0.1624-0.472-0.1688-0.1648-0.0064-0.348 0.0464-0.472 0.128l-4.8 3.2c-0.2224 0.1488-0.356 0.3984-0.356 0.6656v11.2c0 0.2952 0.1624 0.5664 0.4224 0.7056 0.1184 0.0632 0.248 0.0944 0.3776 0.0944 0.1552 0 0.3096-0.0448 0.444-0.1344l4.3128-2.876 3.5432 2.8352c0.1448 0.116 0.3216 0.1752 0.5 0.1752 0.1184 0 0.236-0.0248 0.3464-0.0784z\"\n        />\n      </Base>\n    </div>\n  );\n};\n\nconst PrivacyBadge = ({privateMap}) => (\n  <span className=\"vis_item-privacy\">{privateMap ? 'Private' : 'Public'}</span>\n);\n\nconst StyledVisualizationItem = styled.div`\n  flex: 0 0 auto;\n  width: 208px;\n  display: flex;\n  flex-direction: column;\n  padding: 16px 8px;\n  color: #3a414c;\n  cursor: pointer;\n  font-size: 12px;\n  line-height: 18px;\n  border: 1px solid transparent;\n\n  &:hover {\n    .vis_item-icon,\n    .vis_item-thumb,\n    .vis_item-description,\n    .vis_item-modification-date {\n      opacity: 1;\n    }\n    border: 1px solid #bbbbbb;\n  }\n\n  .vis_item-icon,\n  .vis_item-thumb,\n  .vis_item-description,\n  .vis_item-modification-date {\n    opacity: 0.9;\n    transition: opacity 0.4s ease;\n  }\n\n  .vis_item-icon {\n    position: relative;\n    flex: 0 0 108px;\n    background-color: #6a7484;\n    border-radius: 4px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n  }\n\n  .vis_item-thumb {\n    position: relative;\n    flex: 0 0 108px;\n    background-size: cover;\n    background-position: center;\n    border-radius: 4px;\n  }\n\n  .vis_item-privacy {\n    position: absolute;\n    top: 0;\n    left: 0;\n    padding: 3px 6px;\n    border-radius: 4px 0;\n    background-color: rgba(58, 65, 76, 0.7);\n    color: #fff;\n    font-size: 11px;\n    line-height: 18px;\n  }\n\n  .vis_item-title {\n    margin-top: 16px;\n    font-weight: 500;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n\n  .vis_item-description {\n    flex: 1 1 auto;\n    margin-top: 8px;\n  }\n\n  .vis_item-modification-date {\n    margin-top: 16px;\n    flex: 1 0 auto;\n    color: #6a7484;\n    line-height: 15px;\n  }\n`;\n\nexport const CloudItem = ({vis, onClick}) => {\n  const thumbnailStyle = {backgroundImage: `url(${vis.thumbnail})`};\n  return (\n    <StyledVisualizationItem onClick={onClick}>\n      {vis.thumbnail ? (\n        <div role=\"thumbnail-wrapper\" className=\"vis_item-thumb\" style={thumbnailStyle}>\n          {vis.hasOwnProperty('privateMap') ? <PrivacyBadge privateMap={vis.privateMap} /> : null}\n        </div>\n      ) : (\n        <MapIcon role=\"map-icon\" className=\"vis_item-icon\">\n          {vis.hasOwnProperty('privateMap') ? <PrivacyBadge privateMap={vis.privateMap} /> : null}\n        </MapIcon>\n      )}\n      <span className=\"vis_item-title\">{vis.title}</span>\n      {vis.description?.length && <span className=\"vis_item-description\">{vis.description}</span>}\n      <span className=\"vis_item-modification-date\">\n        Last modified {moment.utc(vis.updatedAt).fromNow()}\n      </span>\n    </StyledVisualizationItem>\n  );\n};\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport LoadingDialog from '../loading-dialog';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {CloudItem} from './cloud-item';\nimport {FlexContainer} from '../../common/flex-container';\n\nconst StyledSpinner = styled.div`\n  text-align: center;\n  span {\n    margin: 0 auto;\n  }\n`;\n\nconst StyledFlexContainer = styled(FlexContainer)`\n  justify-content: flex-start;\n  flex-wrap: wrap;\n`;\n\nexport const CloudMaps = ({provider, onSelectMap, isLoading, maps, error}) => {\n  if (error) {\n    return <div>Error while fetching maps: {error.message}</div>;\n  }\n\n  if (isLoading) {\n    return (\n      <StyledSpinner>\n        <LoadingDialog size={64} />\n      </StyledSpinner>\n    );\n  }\n\n  return (\n    <StyledFlexContainer>\n      {(maps ?? []).length ? (\n        maps.map(vis => (\n          <CloudItem key={vis.id} onClick={() => onSelectMap(provider, vis)} vis={vis} />\n        ))\n      ) : (\n        <div className=\"visualization-list__message\">\n          <FormattedMessage id={'modal.loadStorageMap.noSavedMaps'} />\n        </div>\n      )}\n    </StyledFlexContainer>\n  );\n};\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useCallback, useState, useEffect} from 'react';\nimport {CloudHeader} from './cloud-components/cloud-header';\nimport {CloudMaps} from './cloud-components/cloud-maps';\nimport {useCloudListProvider} from '../hooks/use-cloud-list-provider';\nimport {ProviderSelect} from './cloud-components/provider-select';\nimport {FlexColContainer} from '../common/flex-container';\nimport {Provider, MapListItem} from '@kepler.gl/cloud-providers';\n\nfunction LoadStorageMapFactory() {\n  const LoadStorageMap = ({onLoadCloudMap}) => {\n    const {provider: currentProvider, setProvider, cloudProviders} = useCloudListProvider();\n    const [isLoading, setIsLoading] = useState(false);\n    const [maps, setMaps] = useState<MapListItem[] | null>(null);\n    const [error, setError] = useState(null);\n\n    const setProviderInfo = useCallback((provider: Provider | null) => {\n      setMaps(null);\n      setError(null);\n      if (provider) {\n        setIsLoading(true);\n        provider\n          .listMaps()\n          .then(setMaps)\n          .catch(setError)\n          .finally(() => setIsLoading(false));\n      } else {\n        setIsLoading(false);\n      }\n    }, []);\n\n    useEffect(() => {\n      setProviderInfo(currentProvider);\n    }, [currentProvider]);\n\n    const onSelectMap = useCallback((provider, map) => {\n      onLoadCloudMap({\n        loadParams: map.loadParams,\n        provider\n      });\n    }, []);\n\n    return (\n      <FlexColContainer>\n        {!currentProvider ? (\n          <ProviderSelect cloudProviders={cloudProviders} />\n        ) : (\n          <>\n            <CloudHeader provider={currentProvider} onBack={() => setProvider(null)} />\n            <CloudMaps\n              isLoading={isLoading}\n              onSelectMap={onSelectMap}\n              provider={currentProvider}\n              error={error}\n              maps={maps}\n            />\n          </>\n        )}\n      </FlexColContainer>\n    );\n  };\n\n  return LoadStorageMap;\n}\n\nexport default LoadStorageMapFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useState, ComponentType, ReactElement, useCallback} from 'react';\nimport styled from 'styled-components';\nimport Switch from '../../common/switch';\nimport PanelTitleFactory from '../panel-title';\nimport BrushConfigFactory from './brush-config';\nimport TooltipConfigFactory from './tooltip-config';\nimport {Datasets} from '@kepler.gl/table';\nimport {InteractionConfig, ValueOf} from '@kepler.gl/types';\nimport {\n  setColumnDisplayFormat as setColumnDisplayFormatAction,\n  ActionHandler\n} from '@kepler.gl/actions';\n\nimport {\n  StyledPanelHeader,\n  PanelHeaderTitle,\n  PanelHeaderContent,\n  PanelContent\n} from '../../common/styled-components';\nimport {Messages, Crosshairs, CursorClick, Pin} from '../../common/icons';\n\nimport {FormattedMessage} from '@kepler.gl/localization';\n\ninterface InteractionPanelProps {\n  datasets: Datasets;\n  config: ValueOf<InteractionConfig>;\n  onConfigChange: any;\n  interactionConfigIcons?: {\n    [key: string]: React.ElementType;\n  };\n  setColumnDisplayFormat: ActionHandler<typeof setColumnDisplayFormatAction>;\n}\n\nconst StyledInteractionPanel = styled.div`\n  padding-bottom: 6px;\n`;\n\nInteractionPanelFactory.deps = [TooltipConfigFactory, BrushConfigFactory, PanelTitleFactory];\n\nconst INTERACTION_CONFIG_ICONS: {[key: string]: React.ElementType} = {\n  tooltip: Messages,\n  geocoder: Pin,\n  brush: Crosshairs,\n  coordinate: CursorClick\n};\n\nfunction InteractionPanelFactory(\n  TooltipConfig: ReturnType<typeof TooltipConfigFactory>,\n  BrushConfig: ReturnType<typeof BrushConfigFactory>,\n  PanelTitle: ReturnType<typeof PanelTitleFactory>\n): ComponentType<InteractionPanelProps> {\n  const InteractionPanel: React.FC<InteractionPanelProps> = ({\n    config,\n    onConfigChange,\n    datasets,\n    setColumnDisplayFormat,\n    interactionConfigIcons = INTERACTION_CONFIG_ICONS\n  }) => {\n    const [isConfigActive, setIsConfigAction] = useState(false);\n\n    const _updateConfig = useCallback(\n      newProp => {\n        onConfigChange({\n          ...config,\n          ...newProp\n        });\n      },\n      [onConfigChange, config]\n    );\n\n    const onDisplayFormatChange = useCallback(\n      (dataId, column, displayFormat) => {\n        setColumnDisplayFormat(dataId, {[column]: displayFormat});\n      },\n      [setColumnDisplayFormat]\n    );\n\n    const togglePanelActive = useCallback(() => {\n      setIsConfigAction(!isConfigActive);\n    }, [setIsConfigAction, isConfigActive]);\n\n    const {enabled} = config;\n    const toggleEnableConfig = useCallback(() => {\n      _updateConfig({enabled: !enabled});\n    }, [_updateConfig, enabled]);\n\n    const onChange = useCallback(newConfig => _updateConfig({config: newConfig}), [_updateConfig]);\n\n    const IconComponent = interactionConfigIcons[config.id];\n\n    let template: ReactElement | null = null;\n\n    switch (config.id) {\n      case 'tooltip':\n        template = (\n          <TooltipConfig\n            datasets={datasets}\n            config={config.config}\n            onChange={onChange}\n            onDisplayFormatChange={onDisplayFormatChange}\n          />\n        );\n        break;\n      case 'brush':\n        template = <BrushConfig config={config.config} onChange={onChange} />;\n        break;\n\n      default:\n        break;\n    }\n    return (\n      <StyledInteractionPanel className=\"interaction-panel\">\n        <StyledPanelHeader className=\"interaction-panel__header\" onClick={togglePanelActive}>\n          <PanelHeaderContent className=\"interaction-panel__header__content\">\n            <div className=\"interaction-panel__header__icon icon\">\n              {IconComponent ? <IconComponent height=\"16px\" /> : null}\n            </div>\n            <div className=\"interaction-panel__header__title\">\n              <PanelHeaderTitle>\n                <FormattedMessage id={config.label} />\n              </PanelHeaderTitle>\n            </div>\n          </PanelHeaderContent>\n          <div className=\"interaction-panel__header__actions\">\n            <Switch\n              checked={config.enabled}\n              id={`${config.id}-toggle`}\n              onChange={toggleEnableConfig}\n              secondary\n            />\n          </div>\n        </StyledPanelHeader>\n        {config.enabled && template && (\n          <PanelContent className=\"interaction-panel__content\">{template}</PanelContent>\n        )}\n      </StyledInteractionPanel>\n    );\n  };\n\n  return InteractionPanel;\n}\n\nexport default InteractionPanelFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React from 'react';\nimport {useIntl} from 'react-intl';\n\nimport {InteractionConfig} from '@kepler.gl/types';\nimport {VisStateActions} from '@kepler.gl/actions';\nimport {Datasets} from '@kepler.gl/table';\n\nimport InteractionPanelFactory from './interaction-panel/interaction-panel';\nimport PanelTitleFactory from './panel-title';\n\nimport {PanelMeta} from './common/types';\n\ntype InteractionManagerProps = {\n  interactionConfig: InteractionConfig;\n  datasets: Datasets;\n  visStateActions: typeof VisStateActions;\n  panelMetadata: PanelMeta;\n};\n\nInteractionManagerFactory.deps = [InteractionPanelFactory, PanelTitleFactory];\n\nfunction InteractionManagerFactory(\n  InteractionPanel: ReturnType<typeof InteractionPanelFactory>,\n  PanelTitle: ReturnType<typeof PanelTitleFactory>\n) {\n  const InteractionManager: React.FC<InteractionManagerProps> = ({\n    interactionConfig,\n    datasets,\n    visStateActions,\n    panelMetadata\n  }) => {\n    const {interactionConfigChange: onConfigChange, setColumnDisplayFormat} = visStateActions;\n    const intl = useIntl();\n    return (\n      <div className=\"interaction-manager\">\n        <PanelTitle\n          className=\"interaction-manager-title\"\n          title={intl.formatMessage({id: panelMetadata.label})}\n        />\n        {Object.keys(interactionConfig).map(key => (\n          <InteractionPanel\n            datasets={datasets}\n            config={interactionConfig[key]}\n            key={key}\n            onConfigChange={onConfigChange}\n            setColumnDisplayFormat={setColumnDisplayFormat}\n          />\n        ))}\n      </div>\n    );\n  };\n\n  return InteractionManager;\n}\n\nexport default InteractionManagerFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {Component, ComponentType} from 'react';\nimport styled from 'styled-components';\nimport classnames from 'classnames';\nimport {DraggableAttributes} from '@dnd-kit/core';\nimport {CSS, Transform} from '@dnd-kit/utilities';\nimport {ChickletButton} from '../../../common/item-selector/chickleted-input';\nimport {Hash, Delete, VertDots} from '../../../common/icons';\nimport DropdownList from '../../../common/item-selector/dropdown-list';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {TimeLabelFormat, TooltipFields} from '@kepler.gl/types';\nimport {getFormatValue, getFormatLabels} from '@kepler.gl/utils';\nimport onClickOutside from 'react-onclickoutside';\nimport TippyTooltip from '../../../common/tippy-tooltip';\n\ninterface TooltipChickletProps {\n  disabled: boolean;\n  item: {name: string};\n  displayOption: Function;\n  remove: any;\n\n  attributes: DraggableAttributes;\n  listeners: any;\n  setNodeRef: (node: HTMLElement | null) => void;\n  transform: Transform | null;\n  transition?: string;\n  isDragging: boolean;\n}\n\ntype TooltipConfig = {\n  fieldsToShow: {\n    [key: string]: {name: string; format: string | null}[];\n  };\n  compareMode: boolean;\n  compareType: string | null;\n};\n\ntype IconDivProps = {\n  status: string | null;\n};\n\nconst ChickletAddonWrapper = styled.div`\n  position: relative;\n`;\n\nconst ChickletAddon = styled.div`\n  margin-right: 4px;\n`;\n\nconst StyledPopover = styled.div`\n  margin-left: -64px;\n  position: absolute;\n  top: 20px;\n  width: 140px;\n  z-index: 101;\n`;\n\nconst hashStyles = {\n  SHOW: 'SHOW',\n  ACTIVE: 'ACTIVE'\n};\n\nconst IconDiv = styled.div.attrs({\n  className: 'tooltip-chicklet__icon'\n})<IconDivProps>`\n  color: ${props =>\n    props.status === hashStyles.SHOW\n      ? props.theme.subtextColorActive\n      : props.status === hashStyles.ACTIVE\n      ? props.theme.activeColor\n      : props.theme.textColor};\n`;\n\ntype SortableStyledItemProps = {\n  transition?: string;\n  transform?: string;\n};\nconst SortableStyledItem = styled.div<SortableStyledItemProps>`\n  transition: ${props => props.transition};\n  transform: ${props => props.transform};\n  &.sorting {\n    opacity: 0.3;\n    pointer-events: none;\n  }\n  :hover {\n    .tooltip-chicklet__drag-handler {\n      opacity: 1;\n    }\n  }\n`;\n\nconst StyledDragHandle = styled.div.attrs({\n  className: 'tooltip-chicklet__drag-handler'\n})`\n  display: flex;\n  align-items: center;\n  z-index: 1000;\n  opacity: 0;\n  margin-left: -5px;\n  :hover {\n    cursor: move;\n    color: ${props => props.theme.tooltipVerticalLineColor};\n  }\n`;\n\nconst StyledTag = styled.span`\n  margin-right: 5px;\n  text-overflow: ellipsis;\n  width: 100%;\n  overflow: hidden;\n  max-width: 160px;\n`;\n\nfunction getFormatTooltip(formatLabels: TimeLabelFormat[], format: string | null) {\n  if (!format) {\n    return null;\n  }\n  const formatLabel = formatLabels.find(fl => getFormatValue(fl) === format);\n  if (formatLabel) {\n    return formatLabel.label;\n  }\n  return typeof format === 'object' ? JSON.stringify(format, null, 2) : String(format);\n}\n\nfunction TooltipChickletFactory(\n  dataId: string,\n  config: TooltipConfig,\n  onChange: (cfg: TooltipConfig) => void,\n  fields: TooltipFields[],\n  onDisplayFormatChange\n): ComponentType<TooltipChickletProps> {\n  class TooltipChicklet extends Component<TooltipChickletProps> {\n    state = {\n      show: false\n    };\n    private node!: HTMLDivElement | null;\n\n    componentDidMount() {\n      document.addEventListener('mousedown', this.handleClickOutside, false);\n    }\n\n    componentWillUnmount() {\n      document.removeEventListener('mousedown', this.handleClickOutside, false);\n    }\n\n    handleClickOutside = (e: any) => {\n      if (this.node?.contains(e.target)) {\n        return;\n      }\n    };\n\n    render() {\n      const {\n        disabled,\n        item,\n        displayOption,\n        remove,\n        attributes,\n        listeners,\n        setNodeRef,\n        transform,\n        transition,\n        isDragging\n      } = this.props;\n\n      const {show} = this.state;\n      const tooltipField = config.fieldsToShow[dataId].find(\n        fieldToShow => fieldToShow.name === item.name\n      );\n      if (!tooltipField) {\n        return null;\n      }\n      const field = fields.find(f => f.name === tooltipField.name);\n      if (!field) {\n        return null;\n      }\n      const formatLabels = getFormatLabels(fields, tooltipField.name);\n      const hasFormat = Boolean(field.displayFormat);\n      const selectionIndex = formatLabels.findIndex(\n        fl => getFormatValue(fl) === field.displayFormat\n      );\n      const hashStyle = show ? hashStyles.SHOW : hasFormat ? hashStyles.ACTIVE : null;\n\n      return (\n        <SortableStyledItem\n          ref={setNodeRef}\n          className={classnames('sortable-layer-items', {sorting: isDragging})}\n          transform={CSS.Translate.toString(transform)}\n          transition={transition || ''}\n          {...attributes}\n        >\n          <ChickletButton ref={node => (this.node = node)}>\n            <StyledDragHandle {...listeners}>\n              <VertDots height=\"12px\" />\n            </StyledDragHandle>\n            <StyledTag title={displayOption(item)}>{displayOption(item)}</StyledTag>\n            {formatLabels.length > 1 && (\n              <ChickletAddonWrapper>\n                <TippyTooltip\n                  placement=\"top\"\n                  render={() => (\n                    <span>\n                      {hasFormat ? (\n                        getFormatTooltip(formatLabels, field.displayName)\n                      ) : (\n                        <FormattedMessage id={'fieldSelector.formatting'} />\n                      )}\n                    </span>\n                  )}\n                >\n                  <ChickletAddon>\n                    <IconDiv status={hashStyle}>\n                      <Hash\n                        height=\"8px\"\n                        onClick={e => {\n                          e.stopPropagation();\n                          this.setState({show: Boolean(!show)});\n                        }}\n                      />\n                    </IconDiv>\n                  </ChickletAddon>\n                </TippyTooltip>\n                {show && (\n                  <StyledPopover>\n                    <DropdownList\n                      options={formatLabels}\n                      selectionIndex={selectionIndex}\n                      displayOption={({label}) => label}\n                      onOptionSelected={(result, e) => {\n                        e.stopPropagation();\n                        this.setState({\n                          show: false\n                        });\n\n                        const displayFormat = getFormatValue(result);\n                        const oldFieldsToShow = config.fieldsToShow[dataId];\n                        const fieldsToShow = oldFieldsToShow.map(fieldToShow => {\n                          return fieldToShow.name === tooltipField.name\n                            ? {\n                                name: tooltipField.name,\n                                format: displayFormat\n                              }\n                            : fieldToShow;\n                        });\n                        const newConfig = {\n                          ...config,\n                          fieldsToShow: {\n                            ...config.fieldsToShow,\n                            [dataId]: fieldsToShow\n                          }\n                        };\n                        onChange(newConfig);\n                        onDisplayFormatChange(dataId, field.name, displayFormat);\n                      }}\n                    />\n                  </StyledPopover>\n                )}\n              </ChickletAddonWrapper>\n            )}\n            <Delete onClick={disabled ? null : remove} />\n          </ChickletButton>\n        </SortableStyledItem>\n      );\n    }\n  }\n  return onClickOutside(TooltipChicklet);\n}\n\nexport default TooltipChickletFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useCallback} from 'react';\nimport styled from 'styled-components';\nimport {injectIntl, IntlShape} from 'react-intl';\nimport {FormattedMessage} from '@kepler.gl/localization';\n\nimport {\n  SidePanelSection,\n  SBFlexboxNoMargin,\n  Button,\n  PanelLabel\n} from '../../common/styled-components';\nimport DatasetTagFactory from '../common/dataset-tag';\nimport TooltipChickletFactory from './tooltip-config/tooltip-chicklet';\nimport Switch from '../../common/switch';\nimport ItemSelector from '../../common/item-selector/item-selector';\nimport {COMPARE_TYPES, GEOCODER_DATASET_NAME} from '@kepler.gl/constants';\nimport FieldSelectorFactory from '../../common/field-selector';\nimport KeplerTable, {Datasets} from '@kepler.gl/table';\n\nconst TooltipConfigWrapper = styled.div`\n  .item-selector > div > div {\n    overflow: visible;\n  }\n`;\n\nconst ButtonWrapper = styled.div`\n  display: inherit;\n  padding: 0;\n\n  .button.clear-all {\n    background: transparent;\n    color: ${props => props.theme.subtextColor};\n    margin: 0 0 0 8px;\n    padding: 0;\n\n    &:hover {\n      color: ${props => props.theme.textColor};\n    }\n  }\n`;\n\nconst CompareSwitchWrapper = styled.div`\n  color: ${props => props.theme.labelColor};\n  display: flex;\n  font-size: ${props => props.theme.inputFontSize};\n  justify-content: space-between;\n  line-height: 11px;\n  margin-bottom: 8px;\n`;\n\ntype TooltipConfigProps = {\n  config: {\n    fieldsToShow: {\n      [key: string]: {name: string; format: string | null}[];\n    };\n    compareMode: boolean;\n    compareType: string | null;\n  };\n  onChange: (config: {\n    fieldsToShow: {\n      [key: string]: {name: string; format: string | null}[];\n    };\n    compareMode: boolean;\n    compareType: string | null;\n  }) => void;\n  datasets: Datasets;\n  intl: IntlShape;\n  onDisplayFormatChange: (dataId, column, displayFormat) => void;\n};\n\ntype DatasetTooltipConfigProps = {\n  config: {\n    fieldsToShow: {\n      [key: string]: {name: string; format: string | null}[];\n    };\n    compareMode: boolean;\n    compareType: string | null;\n  };\n  onChange: (config: {\n    fieldsToShow: {\n      [key: string]: {name: string; format: string | null}[];\n    };\n    compareMode: boolean;\n    compareType: string | null;\n  }) => void;\n  dataset: KeplerTable;\n  onDisplayFormatChange: (dataId, column, displayFormat) => void;\n};\n\nTooltipConfigFactory.deps = [DatasetTagFactory, FieldSelectorFactory];\nfunction TooltipConfigFactory(\n  DatasetTag: ReturnType<typeof DatasetTagFactory>,\n  FieldSelector: ReturnType<typeof FieldSelectorFactory>\n) {\n  const DatasetTooltipConfig = ({\n    config,\n    onChange,\n    dataset,\n    onDisplayFormatChange\n  }: DatasetTooltipConfigProps) => {\n    const dataId = dataset.id;\n\n    const handleClick = useCallback(\n      () =>\n        onChange({\n          ...config,\n          fieldsToShow: {\n            ...config.fieldsToShow,\n            [dataId]: []\n          }\n        }),\n      [config, dataId, onChange]\n    );\n\n    const findSelectedHelper = useCallback((selected, tooltipFields) => {\n      return selected.map(\n        f =>\n          tooltipFields.find(tooltipField => tooltipField.name === f.name) || {\n            name: f.name,\n            // default initial tooltip is null\n            format: null\n          }\n      );\n    }, []);\n\n    const handleSelect = useCallback(\n      selected => {\n        const newConfig: DatasetTooltipConfigProps['config'] = {\n          ...config,\n          fieldsToShow: {\n            ...config.fieldsToShow,\n            [dataId]: findSelectedHelper(selected, config.fieldsToShow[dataId])\n          }\n        };\n        onChange(newConfig);\n      },\n      [config, dataId, onChange]\n    );\n\n    const handleReorderItems = useCallback(\n      newOrder =>\n        onChange({\n          ...config,\n          fieldsToShow: {\n            ...config.fieldsToShow,\n            [dataId]: newOrder\n          }\n        }),\n      [config, dataId, onChange]\n    );\n    return (\n      <SidePanelSection key={dataId}>\n        <SBFlexboxNoMargin>\n          <DatasetTag dataset={dataset} />\n          {Boolean(config.fieldsToShow[dataId].length) && (\n            <ButtonWrapper>\n              <Button className=\"clear-all\" onClick={handleClick} width=\"54px\" secondary>\n                <FormattedMessage id=\"fieldSelector.clearAll\" />\n              </Button>\n            </ButtonWrapper>\n          )}\n        </SBFlexboxNoMargin>\n        <FieldSelector\n          fields={dataset.fields}\n          value={config.fieldsToShow[dataId]}\n          onSelect={handleSelect}\n          reorderItems={handleReorderItems}\n          closeOnSelect={false}\n          multiSelect\n          inputTheme=\"secondary\"\n          CustomChickletComponent={TooltipChickletFactory(\n            dataId,\n            config,\n            onChange,\n            dataset.fields,\n            onDisplayFormatChange\n          )}\n        />\n      </SidePanelSection>\n    );\n  };\n\n  const TooltipConfig = ({\n    config,\n    datasets,\n    onChange,\n    onDisplayFormatChange,\n    intl\n  }: TooltipConfigProps) => {\n    const handleChange = useCallback(\n      (option: string | number | boolean | object | null) =>\n        onChange({\n          ...config,\n          compareType: option as string | null\n        }),\n      [config, onChange]\n    );\n\n    return (\n      <TooltipConfigWrapper>\n        {Object.keys(config.fieldsToShow).map(dataId =>\n          dataId === GEOCODER_DATASET_NAME ? null : (\n            <DatasetTooltipConfig\n              key={dataId}\n              config={config}\n              onChange={onChange}\n              dataset={datasets[dataId]}\n              onDisplayFormatChange={onDisplayFormatChange}\n            />\n          )\n        )}\n        <CompareSwitchWrapper>\n          <FormattedMessage id=\"compare.modeLabel\" />\n          <Switch\n            checked={config.compareMode}\n            id=\"compare-mode-toggle\"\n            onChange={() => {\n              const newConfig = {\n                ...config,\n                compareMode: !config.compareMode\n              };\n              onChange(newConfig);\n            }}\n            secondary\n          />\n        </CompareSwitchWrapper>\n        <SidePanelSection>\n          <PanelLabel>\n            <FormattedMessage id=\"compare.typeLabel\" />\n          </PanelLabel>\n          <ItemSelector\n            disabled={!config.compareMode}\n            displayOption={d =>\n              intl.formatMessage({\n                id: `compare.types.${d}`\n              })\n            }\n            selectedItems={config.compareType}\n            options={Object.values(COMPARE_TYPES)}\n            multiSelect={false}\n            searchable={false}\n            inputTheme={'secondary'}\n            getOptionValue={d => d}\n            onChange={handleChange}\n          />\n        </SidePanelSection>\n      </TooltipConfigWrapper>\n    );\n  };\n\n  return injectIntl(TooltipConfig);\n}\n\nexport default TooltipConfigFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useCallback} from 'react';\nimport styled from 'styled-components';\n\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {camelize} from '@kepler.gl/utils';\nimport {RGBColor} from '@kepler.gl/types';\nimport {MapConfigChangeUpdaterAction} from '@kepler.gl/actions';\nimport {MapStyle} from '@kepler.gl/reducers';\n\nimport LayerGroupColorPickerFactory from './map-layer-group-color-picker';\nimport {PanelHeaderActionProps, PanelHeaderActionIcon} from '../panel-header-action';\nimport {PanelLabelBold, CenterFlexbox, PanelLabelWrapper} from '../../common/styled-components';\n\nconst StyledLayerGroupItem = styled.div`\n  margin-bottom: 10px;\n  display: flex;\n  justify-content: space-between;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n\n  .layer-group__visibility-toggle {\n    margin-right: 12px;\n  }\n`;\n\nconst LayerLabel = styled(PanelLabelBold)<{active: boolean}>`\n  color: ${props => (props.active ? props.theme.textColor : props.theme.labelColor)};\n`;\n\nexport type LayerGroupItemActionIcons = {\n  visible: PanelHeaderActionIcon;\n  hidden: PanelHeaderActionIcon;\n  top: PanelHeaderActionIcon;\n};\n\nexport type LayerGroupItemProps = {\n  PanelHeaderAction: React.FC<PanelHeaderActionProps>;\n  onChange: (pd: MapConfigChangeUpdaterAction['payload']) => void;\n  slug: string;\n  layers: MapStyle['visibleLayerGroups'];\n  topLayers: MapStyle['topLayerGroups'];\n  actionIcons: LayerGroupItemActionIcons;\n  color: RGBColor | null;\n  onColorChange: (pd: RGBColor) => void;\n  isVisibilityToggleAvailable?: boolean;\n  isMoveToTopAvailable?: boolean;\n  isColorPickerAvailable?: boolean;\n};\n\nLayerGroupItemFactory.deps = [LayerGroupColorPickerFactory];\n\nfunction LayerGroupItemFactory(LayerGroupColorPicker) {\n  const LayerGroupItem: React.FC<LayerGroupItemProps> = ({\n    PanelHeaderAction,\n    onChange,\n    slug,\n    layers,\n    topLayers,\n    actionIcons,\n    color,\n    onColorChange,\n    isVisibilityToggleAvailable = true,\n    isMoveToTopAvailable = true,\n    isColorPickerAvailable = false\n  }) => {\n    const onVisibilityToggle = useCallback(() => {\n      onChange({\n        visibleLayerGroups: {\n          ...layers,\n          [slug]: !layers[slug]\n        }\n      });\n    }, [onChange, layers, slug]);\n\n    const onMoveToTopToggle = useCallback(() => {\n      onChange({\n        topLayerGroups: {\n          ...topLayers,\n          [slug]: !topLayers[slug]\n        }\n      });\n    }, [onChange, topLayers, slug]);\n\n    return (\n      <StyledLayerGroupItem className=\"layer-group__select\">\n        {isVisibilityToggleAvailable ? (\n          <PanelLabelWrapper>\n            <PanelHeaderAction\n              className=\"layer-group__visibility-toggle\"\n              id={`${slug}-toggle`}\n              tooltip={layers[slug] ? 'tooltip.hide' : 'tooltip.show'}\n              onClick={onVisibilityToggle}\n              IconComponent={layers[slug] ? actionIcons.visible : actionIcons.hidden}\n              active={layers[slug]}\n              flush\n            />\n            <LayerLabel active={layers[slug]}>\n              <FormattedMessage id={`mapLayers.${camelize(slug)}`} />\n            </LayerLabel>\n          </PanelLabelWrapper>\n        ) : (\n          <CenterFlexbox>\n            <LayerLabel style={{marginLeft: '28px'}} active={true}>\n              <FormattedMessage id={`mapLayers.${camelize(slug)}`} />\n            </LayerLabel>\n          </CenterFlexbox>\n        )}\n        <CenterFlexbox className=\"layer-group__trailing-actions\">\n          {isColorPickerAvailable && color ? (\n            <LayerGroupColorPicker\n              slug={slug}\n              color={color}\n              onColorChange={onColorChange}\n              extraMarginRight={isMoveToTopAvailable}\n              disabled={isVisibilityToggleAvailable && !layers[slug]}\n            />\n          ) : null}\n          {isMoveToTopAvailable ? (\n            <PanelHeaderAction\n              id={`${slug}-top`}\n              tooltip=\"tooltip.moveToTop\"\n              disabled={!layers[slug]}\n              IconComponent={actionIcons.top}\n              active={topLayers[slug]}\n              onClick={onMoveToTopToggle}\n            />\n          ) : null}\n        </CenterFlexbox>\n      </StyledLayerGroupItem>\n    );\n  };\n\n  return LayerGroupItem;\n}\n\nexport default LayerGroupItemFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport PanelHeaderActionFactory from '../panel-header-action';\nimport LayerGroupItemFactory, {LayerGroupItemActionIcons} from './map-layer-group-item';\nimport {EyeSeen, EyeUnseen} from '../../common/icons';\n\nimport {PanelLabel, PanelContent} from '../../common/styled-components';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {VisibleLayerGroups} from '@kepler.gl/types';\nimport {Upload} from '@kepler.gl/cloud-providers';\nimport {\n  THREE_D_BUILDING_LAYER_GROUP_SLUG,\n  BACKGROUND_LAYER_GROUP_SLUG,\n  DEFAULT_LAYER_GROUP\n} from '@kepler.gl/constants';\nimport {\n  MapConfigChangeUpdaterAction,\n  Set3dBuildingColorUpdaterAction,\n  SetBackgroundColorUpdaterAction\n} from '@kepler.gl/actions';\nimport {MapStyle} from '@kepler.gl/reducers';\n\nfunction noop() {}\n\nconst StyledInteractionPanel = styled.div`\n  padding-bottom: 12px;\n`;\n\nexport type LayerGroupSelectorProps = {\n  layers: VisibleLayerGroups;\n  editableLayers: DEFAULT_LAYER_GROUP[];\n  onChange: (payload: MapConfigChangeUpdaterAction['payload']) => void;\n  topLayers: MapStyle['topLayerGroups'];\n  threeDBuildingColor: MapStyle['threeDBuildingColor'];\n  on3dBuildingColorChange: (pd: Set3dBuildingColorUpdaterAction['payload']) => void;\n  backgroundColor: MapStyle['backgroundColor'];\n  onBackgroundColorChange: (pd: SetBackgroundColorUpdaterAction['payload']) => void;\n  actionIcons?: LayerGroupItemActionIcons;\n};\n\nLayerGroupSelectorFactory.deps = [PanelHeaderActionFactory, LayerGroupItemFactory];\n\nfunction LayerGroupSelectorFactory(\n  PanelHeaderAction: ReturnType<typeof PanelHeaderActionFactory>,\n  LayerGroupItem: ReturnType<typeof LayerGroupItemFactory>\n) {\n  const defaultActionIcons: LayerGroupItemActionIcons = {\n    visible: EyeSeen,\n    hidden: EyeUnseen,\n    top: Upload\n  };\n  const LayerGroupSelector = ({\n    layers,\n    editableLayers,\n    onChange,\n    topLayers,\n    threeDBuildingColor,\n    on3dBuildingColorChange,\n    backgroundColor,\n    onBackgroundColorChange,\n    actionIcons = defaultActionIcons\n  }: LayerGroupSelectorProps) => {\n    return (\n      <StyledInteractionPanel className=\"map-style__layer-group__selector\">\n        <div className=\"layer-group__header\">\n          <PanelLabel>\n            <FormattedMessage id={'mapLayers.title'} />\n          </PanelLabel>\n        </div>\n        <PanelContent className=\"map-style__layer-group\">\n          {editableLayers.map(\n            ({slug, isVisibilityToggleAvailable, isMoveToTopAvailable, isColorPickerAvailable}) => (\n              <LayerGroupItem\n                key={slug}\n                PanelHeaderAction={PanelHeaderAction}\n                onChange={onChange}\n                slug={slug}\n                layers={layers}\n                topLayers={topLayers}\n                actionIcons={actionIcons}\n                isVisibilityToggleAvailable={isVisibilityToggleAvailable}\n                isMoveToTopAvailable={isMoveToTopAvailable}\n                isColorPickerAvailable={isColorPickerAvailable}\n                color={\n                  isColorPickerAvailable && slug === THREE_D_BUILDING_LAYER_GROUP_SLUG\n                    ? threeDBuildingColor\n                    : slug === BACKGROUND_LAYER_GROUP_SLUG\n                    ? backgroundColor\n                    : null\n                }\n                onColorChange={\n                  isColorPickerAvailable && slug === THREE_D_BUILDING_LAYER_GROUP_SLUG\n                    ? on3dBuildingColorChange\n                    : slug === BACKGROUND_LAYER_GROUP_SLUG\n                    ? onBackgroundColorChange\n                    : noop\n                }\n              />\n            )\n          )}\n        </PanelContent>\n      </StyledInteractionPanel>\n    );\n  };\n\n  return LayerGroupSelector;\n}\n\nexport default LayerGroupSelectorFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useMemo} from 'react';\nimport styled from 'styled-components';\nimport {CenterVerticalFlexbox} from '../common/styled-components';\nimport {UploadAnimation} from './status-panel';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport ImageModalContainer, {ImageModalContainerProps} from './image-modal-container';\nimport {Provider} from '@kepler.gl/cloud-providers';\nimport {cleanupExportImage as cleanupExportImageAction} from '@kepler.gl/actions';\nimport {useCloudListProvider} from '../hooks/use-cloud-list-provider';\nimport {ModalFooter} from '../common/modal';\n\nconst StyledMsg = styled.div`\n  margin-top: 24px;\n  font-size: 14px;\n`;\n\nconst StyledTitle = styled.span`\n  font-weight: 600;\n  color: black;\n`;\n\nconst StyledIcon = styled.div`\n  margin-top: 24px;\n`;\n\nconst StyledOverwriteMapModal = styled(CenterVerticalFlexbox)`\n  padding: 24px 12px;\n  min-height: 220px;\n`;\n\ntype OverwriteMapModalProps = {\n  mapSaved: string | null;\n  title: string;\n  isProviderLoading: boolean;\n\n  // callbacks\n  onUpdateImageSetting: ImageModalContainerProps['onUpdateImageSetting'];\n  cleanupExportImage: typeof cleanupExportImageAction;\n  onConfirm: (provider: Provider) => void;\n  onCancel: () => void;\n};\n\nconst CONFIRM_BUTTON = {\n  large: true,\n  children: 'Yes',\n  disabled: false\n};\n\nconst OverwriteMapModalFactory = () => {\n  /**\n   * @type {React.FunctionComponent<OverwriteMapModalProps>}\n   */\n  const OverwriteMapModal: React.FC<OverwriteMapModalProps> = ({\n    mapSaved,\n    title,\n    isProviderLoading,\n    onUpdateImageSetting,\n    cleanupExportImage,\n    onCancel,\n    onConfirm\n  }) => {\n    const {provider} = useCloudListProvider();\n\n    const confirmButton = useMemo(\n      () => ({\n        ...CONFIRM_BUTTON,\n        disabled: !provider\n      }),\n      [provider]\n    );\n\n    return (\n      <ImageModalContainer\n        provider={provider}\n        onUpdateImageSetting={onUpdateImageSetting}\n        cleanupExportImage={cleanupExportImage}\n      >\n        <StyledOverwriteMapModal className=\"overwrite-map-modal\">\n          {isProviderLoading ? (\n            <StyledMsg>\n              <StyledTitle>\n                <FormattedMessage id={'modal.overwriteMap.title'} />\n              </StyledTitle>\n              <UploadAnimation icon={provider && provider.icon} />\n            </StyledMsg>\n          ) : (\n            <>\n              <StyledIcon>\n                {provider && provider.icon ? <provider.icon height=\"64px\" /> : null}\n              </StyledIcon>\n              <StyledMsg className=\"overwrite-map-msg\">\n                <StyledTitle>{title} </StyledTitle>\n                <FormattedMessage id={'modal.overwriteMap.alreadyExists'} values={{mapSaved}} />\n              </StyledMsg>\n            </>\n          )}\n        </StyledOverwriteMapModal>\n        <ModalFooter\n          cancel={onCancel}\n          confirm={() => provider && onConfirm(provider)}\n          confirmButton={confirmButton}\n        />\n      </ImageModalContainer>\n    );\n  };\n  return OverwriteMapModal;\n};\n\nexport const OverwriteMapModal = OverwriteMapModalFactory();\nexport default OverwriteMapModalFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {Component} from 'react';\nimport {css} from 'styled-components';\nimport get from 'lodash.get';\nimport document from 'global/document';\n\nimport ModalDialogFactory from './modals/modal-dialog';\nimport {exportHtml, exportMap, exportJson, exportImage} from '@kepler.gl/utils';\nimport {\n  exportData,\n  getFileFormatNames,\n  getFileExtensions,\n  MapStyle,\n  ProviderState\n} from '@kepler.gl/reducers';\n\n// modals\nimport DeleteDatasetModalFactory from './modals/delete-data-modal';\nimport OverWriteMapModalFactory from './modals/overwrite-map-modal';\nimport DataTableModalFactory from './modals/data-table-modal';\nimport LoadDataModalFactory from './modals/load-data-modal';\nimport ExportImageModalFactory from './modals/export-image-modal';\nimport ExportDataModalFactory from './modals/export-data-modal';\nimport ExportMapModalFactory from './modals/export-map-modal/export-map-modal';\nimport AddMapStyleModalFactory from './modals/add-map-style-modal';\nimport SaveMapModalFactory from './modals/save-map-modal';\nimport ShareMapModalFactory from './modals/share-map-modal';\n\n// Breakpoints\nimport {media} from '@kepler.gl/styles';\n\n// Template\nimport {\n  EXPORT_DATA_TYPE_OPTIONS,\n  EXPORT_MAP_FORMATS,\n  KeyEvent,\n  ADD_DATA_ID,\n  DATA_TABLE_ID,\n  DELETE_DATA_ID,\n  EXPORT_DATA_ID,\n  EXPORT_IMAGE_ID,\n  EXPORT_MAP_ID,\n  ADD_MAP_STYLE_ID,\n  SAVE_MAP_ID,\n  SHARE_MAP_ID,\n  OVERWRITE_MAP_ID\n} from '@kepler.gl/constants';\n\nimport {MapState, UiState, OnSuccessCallBack, OnErrorCallBack} from '@kepler.gl/types';\n\nimport {\n  VisStateActions,\n  UIStateActions,\n  MapStyleActions,\n  ProviderActions\n} from '@kepler.gl/actions';\nimport {ModalDialogProps} from './common/modal';\nimport {Provider} from '@kepler.gl/cloud-providers';\nimport {findDOMNode} from 'react-dom';\nimport {VisState} from '@kepler.gl/schemas';\n\nconst DataTableModalStyle = css`\n  top: 70px;\n  padding: 0;\n  width: 90vw;\n  max-width: 90vw;\n\n  ${media.portable`\n    padding: 0;\n  `} ${media.palm`\n    padding: 0;\n    margin: 0 auto;\n  `};\n`;\nconst smallModalCss = css`\n  width: 40%;\n  padding: 40px 40px 32px 40px;\n`;\n\nconst LoadDataModalStyle = css`\n  top: 60px;\n`;\n\nconst DefaultStyle = css`\n  max-width: 960px;\n`;\n\nexport type ModalContainerProps = {\n  appName: string;\n  rootNode: React.ReactInstance | null | undefined;\n  containerW: number;\n  containerH: number;\n  mapboxApiAccessToken: string;\n  mapboxApiUrl?: string;\n  mapState: MapState;\n  mapStyle: MapStyle;\n  uiState: UiState;\n  visState: VisState;\n  providerState: ProviderState;\n  visStateActions: typeof VisStateActions;\n  uiStateActions: typeof UIStateActions;\n  mapStyleActions: typeof MapStyleActions;\n  providerActions: typeof ProviderActions;\n  onSaveToStorage?: () => void;\n  cloudProviders: Provider[];\n  onLoadCloudMapSuccess?: OnSuccessCallBack;\n  onLoadCloudMapError?: OnErrorCallBack;\n  onExportToCloudSuccess?: OnSuccessCallBack;\n  onExportToCloudError?: OnErrorCallBack;\n};\n\nModalContainerFactory.deps = [\n  DeleteDatasetModalFactory,\n  OverWriteMapModalFactory,\n  DataTableModalFactory,\n  LoadDataModalFactory,\n  ExportImageModalFactory,\n  ExportDataModalFactory,\n  ExportMapModalFactory,\n  AddMapStyleModalFactory,\n  ModalDialogFactory,\n  SaveMapModalFactory,\n  ShareMapModalFactory\n];\n\nexport default function ModalContainerFactory(\n  DeleteDatasetModal: ReturnType<typeof DeleteDatasetModalFactory>,\n  OverWriteMapModal: ReturnType<typeof OverWriteMapModalFactory>,\n  DataTableModal: ReturnType<typeof DataTableModalFactory>,\n  LoadDataModal: ReturnType<typeof LoadDataModalFactory>,\n  ExportImageModal: ReturnType<typeof ExportImageModalFactory>,\n  ExportDataModal: ReturnType<typeof ExportDataModalFactory>,\n  ExportMapModal: ReturnType<typeof ExportMapModalFactory>,\n  AddMapStyleModal: ReturnType<typeof AddMapStyleModalFactory>,\n  ModalDialog: ReturnType<typeof ModalDialogFactory>,\n  SaveMapModal: ReturnType<typeof SaveMapModalFactory>,\n  ShareMapModal: ReturnType<typeof ShareMapModalFactory>\n): React.ElementType<ModalContainerProps> {\n  /** @augments React.Component<ModalContainerProps> */\n  class ModalContainer extends Component<ModalContainerProps> {\n    // TODO - remove when prop types are fully exported\n    componentDidMount = () => {\n      document.addEventListener('keyup', this._onKeyUp);\n    };\n    componentWillUnmount() {\n      document.removeEventListener('keyup', this._onKeyUp);\n    }\n\n    _onKeyUp = event => {\n      const keyCode = event.keyCode;\n      if (keyCode === KeyEvent.DOM_VK_ESCAPE) {\n        this._closeModal();\n      }\n    };\n\n    _closeModal = () => {\n      this.props.uiStateActions.toggleModal(null);\n    };\n\n    _deleteDataset = key => {\n      this.props.visStateActions.removeDataset(key);\n      this._closeModal();\n    };\n\n    _onAddCustomMapStyle = () => {\n      this.props.mapStyleActions.addCustomMapStyle();\n      this._closeModal();\n    };\n\n    _onFileUpload = fileList => {\n      this.props.visStateActions.loadFiles(fileList);\n    };\n\n    _onExportImage = () => {\n      if (!this.props.uiState.exportImage.processing) {\n        exportImage(this.props.uiState.exportImage, `${this.props.appName}.png`);\n        this.props.uiStateActions.cleanupExportImage();\n        this._closeModal();\n      }\n    };\n\n    _onExportData = () => {\n      exportData(this.props, this.props.uiState.exportData);\n      this._closeModal();\n    };\n\n    _onExportMap = () => {\n      const {uiState} = this.props;\n      const {format} = uiState.exportMap;\n      (format === EXPORT_MAP_FORMATS.HTML ? exportHtml : exportJson)(\n        this.props,\n        this.props.uiState.exportMap[format] || {}\n      );\n      this._closeModal();\n    };\n\n    _exportFileToCloud = ({provider, isPublic, overwrite, closeModal}) => {\n      const toSave = exportMap(this.props);\n\n      this.props.providerActions.exportFileToCloud({\n        // @ts-ignore\n        mapData: toSave,\n        provider,\n        options: {\n          isPublic,\n          overwrite\n        },\n        closeModal,\n        onSuccess: this.props.onExportToCloudSuccess,\n        onError: this.props.onExportToCloudError\n      });\n    };\n\n    _onSaveMap = (provider, overwrite = false) => {\n      this._exportFileToCloud({\n        provider,\n        isPublic: false,\n        overwrite,\n        closeModal: true\n      });\n    };\n\n    _onOverwriteMap = () => {\n      this._onSaveMap(true);\n    };\n\n    _onShareMapUrl = provider => {\n      this._exportFileToCloud({provider, isPublic: true, overwrite: false, closeModal: false});\n    };\n\n    _onCloseSaveMap = () => {\n      this.props.providerActions.resetProviderStatus();\n      this._closeModal();\n    };\n\n    _onLoadCloudMap = payload => {\n      this.props.providerActions.loadCloudMap({\n        ...payload,\n        onSuccess: this.props.onLoadCloudMapSuccess,\n        onError: this.props.onLoadCloudMapError\n      });\n    };\n\n    /* eslint-disable complexity */\n    render() {\n      const {\n        containerW,\n        containerH,\n        mapStyle,\n        mapState,\n        uiState,\n        visState,\n        rootNode,\n        visStateActions,\n        uiStateActions,\n        providerState\n      } = this.props;\n      const {currentModal, datasetKeyToRemove} = uiState;\n      const {datasets, layers, editingDataset} = visState;\n\n      let template: JSX.Element | null = null;\n      let modalProps: Partial<ModalDialogProps> = {};\n\n      // TODO - currentModal is a string\n      // @ts-ignore\n      if (currentModal && currentModal.id && currentModal.template) {\n        // if currentMdoal template is already provided\n        // TODO: need to check whether template is valid\n        // @ts-ignore\n        template = <currentModal.template />;\n        // @ts-ignore\n        modalProps = currentModal.modalProps;\n      } else {\n        switch (currentModal) {\n          case DATA_TABLE_ID:\n            const width = containerW * 0.9;\n            template = (\n              <DataTableModal\n                datasets={datasets}\n                dataId={editingDataset}\n                showDatasetTable={visStateActions.showDatasetTable}\n                sortTableColumn={visStateActions.sortTableColumn}\n                pinTableColumn={visStateActions.pinTableColumn}\n                copyTableColumn={visStateActions.copyTableColumn}\n                setColumnDisplayFormat={visStateActions.setColumnDisplayFormat}\n                uiStateActions={uiStateActions}\n                uiState={uiState}\n              />\n            );\n\n            // TODO: we need to make this width consistent with the css rule defined modal.js:32 max-width: 70vw\n            // @ts-ignore // TODO fix this after add types to Theme\n            modalProps.cssStyle = css`\n              ${DataTableModalStyle};\n              ${media.palm`\n                width: ${width}px;\n              `};\n            `;\n            break;\n          case DELETE_DATA_ID:\n            // validate options\n            if (datasetKeyToRemove && datasets && datasets[datasetKeyToRemove]) {\n              template = (\n                <DeleteDatasetModal dataset={datasets[datasetKeyToRemove]} layers={layers} />\n              );\n              modalProps = {\n                title: 'modal.title.deleteDataset',\n                cssStyle: smallModalCss,\n                footer: true,\n                onConfirm: () => this._deleteDataset(datasetKeyToRemove),\n                onCancel: this._closeModal,\n                confirmButton: {\n                  negative: true,\n                  large: true,\n                  children: 'modal.button.delete'\n                }\n              };\n            }\n            break; // in case we add a new case after this one\n          case ADD_DATA_ID:\n            template = (\n              <LoadDataModal\n                {...providerState}\n                onClose={this._closeModal}\n                onFileUpload={this._onFileUpload}\n                onLoadCloudMap={this._onLoadCloudMap}\n                loadFiles={uiState.loadFiles}\n                fileLoading={visState.fileLoading}\n                fileLoadingProgress={visState.fileLoadingProgress}\n                fileFormatNames={getFileFormatNames(this.props.visState)}\n                fileExtensions={getFileExtensions(this.props.visState)}\n              />\n            );\n            modalProps = {\n              title: 'modal.title.addDataToMap',\n              cssStyle: LoadDataModalStyle,\n              footer: false,\n              onConfirm: this._closeModal\n            };\n            break;\n          case EXPORT_IMAGE_ID:\n            template = (\n              <ExportImageModal\n                exportImage={uiState.exportImage}\n                mapW={containerW}\n                mapH={containerH}\n                onUpdateImageSetting={uiStateActions.setExportImageSetting}\n                cleanupExportImage={uiStateActions.cleanupExportImage}\n              />\n            );\n            modalProps = {\n              title: 'modal.title.exportImage',\n              cssStyle: '',\n              footer: true,\n              onCancel: this._closeModal,\n              onConfirm: this._onExportImage,\n              confirmButton: {\n                large: true,\n                disabled: uiState.exportImage.processing,\n                children: 'modal.button.download'\n              }\n            };\n            break;\n          case EXPORT_DATA_ID:\n            template = (\n              <ExportDataModal\n                {...uiState.exportData}\n                supportedDataTypes={EXPORT_DATA_TYPE_OPTIONS}\n                datasets={datasets}\n                applyCPUFilter={this.props.visStateActions.applyCPUFilter}\n                onChangeExportDataType={uiStateActions.setExportDataType}\n                onChangeExportSelectedDataset={uiStateActions.setExportSelectedDataset}\n                onChangeExportFiltered={uiStateActions.setExportFiltered}\n              />\n            );\n            modalProps = {\n              title: 'modal.title.exportData',\n              cssStyle: '',\n              footer: true,\n              onCancel: this._closeModal,\n              onConfirm: this._onExportData,\n              confirmButton: {\n                large: true,\n                children: 'modal.button.export'\n              }\n            };\n            break;\n          case EXPORT_MAP_ID:\n            const keplerGlConfig = visState.schema.getConfigToSave({\n              mapStyle,\n              visState,\n              mapState,\n              uiState\n            });\n            template = (\n              <ExportMapModal\n                config={keplerGlConfig}\n                options={uiState.exportMap}\n                onChangeExportMapFormat={uiStateActions.setExportMapFormat}\n                onEditUserMapboxAccessToken={uiStateActions.setUserMapboxAccessToken}\n                onChangeExportMapHTMLMode={uiStateActions.setExportHTMLMapMode}\n              />\n            );\n            modalProps = {\n              title: 'modal.title.exportMap',\n              cssStyle: '',\n              footer: true,\n              onCancel: this._closeModal,\n              onConfirm: this._onExportMap,\n              confirmButton: {\n                large: true,\n                children: 'modal.button.export'\n              }\n            };\n            break;\n          case ADD_MAP_STYLE_ID:\n            template = (\n              <AddMapStyleModal\n                mapboxApiAccessToken={this.props.mapboxApiAccessToken}\n                mapboxApiUrl={this.props.mapboxApiUrl}\n                mapState={this.props.mapState}\n                inputStyle={mapStyle.inputStyle}\n                inputMapStyle={this.props.mapStyleActions.inputMapStyle}\n                loadCustomMapStyle={this.props.mapStyleActions.loadCustomMapStyle}\n              />\n            );\n            modalProps = {\n              title: 'modal.title.addCustomMapboxStyle',\n              cssStyle: '',\n              footer: true,\n              onCancel: this._closeModal,\n              onConfirm: this._onAddCustomMapStyle,\n              confirmButton: {\n                large: true,\n                disabled: !mapStyle.inputStyle.style,\n                children: 'modal.button.addStyle'\n              }\n            };\n            break;\n          case SAVE_MAP_ID:\n            template = (\n              <SaveMapModal\n                {...providerState}\n                exportImage={uiState.exportImage}\n                mapInfo={visState.mapInfo}\n                onSetMapInfo={visStateActions.setMapInfo}\n                cleanupExportImage={uiStateActions.cleanupExportImage}\n                onUpdateImageSetting={uiStateActions.setExportImageSetting}\n                onCancel={this._closeModal}\n                onConfirm={provider => this._onSaveMap(provider, false)}\n              />\n            );\n            modalProps = {\n              title: 'modal.title.saveMap',\n              cssStyle: '',\n              footer: false\n            };\n            break;\n          case OVERWRITE_MAP_ID:\n            template = (\n              <OverWriteMapModal\n                {...providerState}\n                title={get(visState, ['mapInfo', 'title'])}\n                onUpdateImageSetting={uiStateActions.setExportImageSetting}\n                cleanupExportImage={uiStateActions.cleanupExportImage}\n                onConfirm={this._onOverwriteMap}\n                onCancel={this._closeModal}\n              />\n            );\n            modalProps = {\n              title: 'Overwrite Existing File?',\n              cssStyle: smallModalCss,\n              footer: false\n            };\n            break;\n          case SHARE_MAP_ID:\n            template = (\n              <ShareMapModal\n                {...providerState}\n                onExport={this._onShareMapUrl}\n                cleanupExportImage={uiStateActions.cleanupExportImage}\n                onUpdateImageSetting={uiStateActions.setExportImageSetting}\n              />\n            );\n            modalProps = {\n              title: 'modal.title.shareURL',\n              cssStyle: '',\n              onCancel: this._onCloseSaveMap\n            };\n            break;\n          default:\n            break;\n        }\n      }\n\n      return rootNode ? (\n        <ModalDialog\n          parentSelector={() => findDOMNode(rootNode) as HTMLElement}\n          isOpen={Boolean(currentModal)}\n          onCancel={this._closeModal}\n          {...modalProps}\n          cssStyle={DefaultStyle.concat(modalProps.cssStyle)}\n        >\n          {template}\n        </ModalDialog>\n      ) : null;\n    }\n    /* eslint-enable complexity */\n  }\n\n  return ModalContainer;\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useCallback, useState} from 'react';\nimport styled from 'styled-components';\nimport classnames from 'classnames';\nimport {FormattedMessage} from 'react-intl';\nimport Switch from '../../common/switch';\nimport InfoHelperFactory from '../../common/info-helper';\nimport {VertThreeDots} from '../../common/icons';\nimport {Layer} from '@kepler.gl/layers';\nimport {LayerVisConfig} from '@kepler.gl/types';\n\nexport type LayerConfigGroupLabelProps = {\n  label?: string;\n  description?: string;\n  collapsed?: boolean;\n};\n\nexport type LayerConfigGroupProps = {\n  layer?: Layer;\n  label: string;\n  property?: string;\n  description?: string;\n  collapsible?: boolean;\n  expanded?: boolean;\n  disabled?: boolean;\n  onChange?: (newVisConfig: Partial<LayerVisConfig>) => void;\n  IconComponent?: React.ElementType;\n  children?: React.ReactNode;\n};\n\nexport const StyledLayerConfigGroupAction = styled.div`\n  display: flex;\n  align-items: center;\n  color: ${props => props.theme.textColor};\n`;\n\nexport const ConfigGroupCollapsibleContent = styled.div.attrs({\n  className: 'layer-config-group__content__collapsible'\n})`\n  transition: max-height 0.3s ease-out;\n  height: max-content;\n  max-height: 1200px;\n  overflow: auto;\n`;\n\nexport const ConfigGroupCollapsibleHeader = styled.div.attrs({\n  className: 'layer-config-group__header__collapsible'\n})`\n  overflow: visible;\n  overflow: hidden;\n  max-height: 0;\n`;\n\nexport const StyledLayerConfigGroup = styled.div`\n  padding-left: ${props => props.theme.layerConfigGroupPaddingLeft}px;\n  margin-bottom: ${props => props.theme.layerConfigGroupMarginBottom}px;\n\n  &.disabled {\n    opacity: 0.3;\n    pointer-events: none;\n  }\n  &.collapsed {\n    .layer-config-group__header__collapsible {\n      overflow: visible;\n      max-height: 600px;\n    }\n    .layer-config-group__content {\n      .layer-config-group__content__collapsible {\n        overflow: hidden;\n        max-height: 0;\n      }\n    }\n  }\n`;\n\ninterface StyledConfigGroupHeaderProps {\n  collapsible?: boolean;\n}\n\nexport const StyledConfigGroupHeader = styled.div.attrs({\n  className: 'layer-config-group__header'\n})<StyledConfigGroupHeaderProps>`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 12px;\n  cursor: default;\n\n  :hover {\n    ${props => props.collapsible && 'cursor: pointer;'}\n    .layer-config-group__label {\n      color: ${props => props.theme.textColorHl};\n    }\n\n    .layer-config-group__action {\n      color: ${props => props.theme.textColorHl};\n    }\n  }\n`;\n\nconst ConfigGroupContent = styled.div`\n  &.disabled {\n    opacity: 0.3;\n    pointer-events: none;\n    * {\n      pointer-events: none;\n    }\n  }\n`;\n\nLayerConfigGroupLabelFactory.deps = [InfoHelperFactory];\n\nexport function LayerConfigGroupLabelFactory(InfoHelper: ReturnType<typeof InfoHelperFactory>) {\n  const StyledLayerConfigGroupLabel = styled.div`\n    border-left: ${props => props.theme.layerConfigGroupLabelBorderLeft} solid\n      ${props => props.theme.labelColor};\n    line-height: 12px;\n    margin-left: ${props => props.theme.layerConfigGroupLabelMargin};\n    padding-left: ${props => props.theme.layerConfigGroupLabelPadding};\n\n    display: flex;\n    align-items: center;\n\n    span {\n      color: ${props => props.theme.textColor};\n      font-weight: 500;\n      letter-spacing: 0.2px;\n      text-transform: capitalize;\n      margin-left: ${props => props.theme.layerConfigGroupLabelLabelMargin};\n      font-size: ${props => props.theme.layerConfigGroupLabelLabelFontSize};\n    }\n  `;\n\n  const LayerConfigGroupLabel: React.FC<LayerConfigGroupLabelProps> = ({label, description}) => (\n    <StyledLayerConfigGroupLabel className=\"layer-config-group__label\">\n      <span>\n        <FormattedMessage id={label || 'misc.empty'} defaultMessage={label} />\n      </span>\n      {description && <InfoHelper description={description} id={label} />}\n    </StyledLayerConfigGroupLabel>\n  );\n\n  return LayerConfigGroupLabel;\n}\n\nLayerConfigGroupFactory.deps = [LayerConfigGroupLabelFactory];\n\nfunction LayerConfigGroupFactory(\n  LayerConfigGroupLabel: ReturnType<typeof LayerConfigGroupLabelFactory>\n) {\n  const LayerConfigGroup: React.FC<LayerConfigGroupProps> = ({\n    label,\n    children,\n    property,\n    layer,\n    onChange,\n    collapsible,\n    description,\n    disabled,\n    expanded,\n    IconComponent = VertThreeDots\n  }) => {\n    const [collapsed, toggleCollapsed] = useState(!expanded);\n    const onToggleCollapsed = useCallback(() => {\n      collapsible && toggleCollapsed(!collapsed);\n    }, [collapsed, toggleCollapsed, collapsible]);\n\n    return (\n      <StyledLayerConfigGroup className={classnames('layer-config-group', {collapsed, disabled})}>\n        <StyledConfigGroupHeader onClick={onToggleCollapsed} collapsible={collapsible}>\n          <LayerConfigGroupLabel label={label} description={description} collapsed={collapsed} />\n          <StyledLayerConfigGroupAction className=\"layer-config-group__action\">\n            {property ? (\n              <Switch\n                checked={layer?.config.visConfig[property]}\n                id={`${layer?.id}-${property}`}\n                onChange={() => onChange?.({[property]: !layer?.config.visConfig[property]})}\n              />\n            ) : null}\n            {collapsible ? <IconComponent height=\"18px\" /> : null}\n          </StyledLayerConfigGroupAction>\n        </StyledConfigGroupHeader>\n        <ConfigGroupContent\n          className={classnames('layer-config-group__content', {\n            disabled: property && !layer?.config.visConfig[property]\n          })}\n        >\n          {children}\n        </ConfigGroupContent>\n      </StyledLayerConfigGroup>\n    );\n  };\n\n  LayerConfigGroup.defaultProps = {\n    collapsible: false,\n    expanded: false,\n    onChange: () => {},\n    description: '',\n    disabled: false\n  };\n  return LayerConfigGroup;\n}\n\nexport default LayerConfigGroupFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useCallback, useEffect, useMemo, useState} from 'react';\nimport styled from 'styled-components';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {Datasets} from '@kepler.gl/table';\n\nimport Tippy from '@tippyjs/react';\nimport {Add} from '../common/icons';\nimport {Button, DatasetSquare} from '../common/styled-components';\nimport Typeahead from '../common/item-selector/typeahead';\nimport Accessor from '../common/item-selector/accessor';\nimport {useIntl} from 'react-intl';\nimport {RootContext} from '../context';\n\nconst DropdownContainer = styled.div.attrs({\n  className: 'add-layer-menu-dropdown'\n})`\n  .list-selector {\n    border-top: 1px solid ${props => props.theme.secondaryInputBorderColor};\n    width: 100%;\n    /* disable scrolling, currently set to 280px internally */\n    max-height: unset;\n  }\n  .list__item > div {\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    line-height: 18px;\n    padding: 0;\n    svg {\n      margin-right: 10px;\n    }\n  }\n`;\n\nconst DropdownMenu = styled.div.attrs({\n  className: 'dropdown-menu'\n})`\n  display: flex;\n  flex-direction: column;\n  min-width: 240px;\n  max-width: 240px;\n  position: absolute;\n  top: 100%;\n  left: -53px;\n  z-index: 5;\n`;\n\nconst ListItemWrapper = styled.div.attrs({\n  className: 'dropdown-menu-list-item-wrapper'\n})`\n  display: flex;\n  color: ${props => props.theme.textColor};\n  font-size: 11px;\n  letter-spacing: 0.2px;\n  overflow: auto;\n  .dataset-color {\n    flex-shrink: 0;\n    margin-top: 3px;\n  }\n  .dataset-name {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`;\n\nconst TYPEAHEAD_CLASS = 'typeahead';\nconst TYPEAHEAD_INPUT_CLASS = 'typeahead__input';\n\nexport type AddByDatasetButtonProps = {\n  datasets: Datasets;\n  onAdd: (dataId: string) => void;\n  width: string;\n  buttonIntlId: string;\n  inactive?: boolean;\n  className?: string;\n};\n\nconst ListItem = ({value}) => (\n  <ListItemWrapper>\n    <DatasetSquare className=\"dataset-color\" backgroundColor={value.color} />\n    <div className=\"dataset-name\" title={value.label}>\n      {value.label}\n    </div>\n  </ListItemWrapper>\n);\n\nconst AddByDatasetButton: React.FC<AddByDatasetButtonProps> = ({\n  datasets,\n  onAdd,\n  buttonIntlId,\n  width,\n  className,\n  inactive\n}) => {\n  const [tippyInstance, setTippyInstance] = useState();\n\n  let options = useMemo(() => {\n    return Object.values(datasets).map(ds => ({\n      label: ds.label,\n      value: ds.id,\n      color: ds.color\n    }));\n  }, [datasets]);\n\n  //options = [];\n\n  const onClickBtn = useCallback(() => {\n    if (options.length === 1) {\n        onAdd(options[0].value);\n    }\n    return;\n  }, [options, onAdd]);\n\n  // changes done\n  useEffect(()=>{\n    if (localStorage.getItem(\"cprops\")){\n        let addinterval = setInterval(()=>{\n           console.log(\"hit interval\");\n           if (options.length === 0 || (options[0] && options[0].value === \"external_data\")) {\n               console.log(options);\n               clearInterval(addinterval);\n               if (window.localStorage.getItem(\"actedupon1\") === \"No\"){\n                   onAdd('external_data');\n               }     \n               window.localStorage.setItem(\"actedupon1\",\"No\");             \n           }else{\n               clearInterval(addinterval);\n           }\n        },500);\n    }       \n  },[localStorage.getItem(\"cprops\"),localStorage.getItem(\"sprops\")]);\n\n  const onOptionSelected = useCallback(\n    option => {\n      onAdd(option.value);\n      if (tippyInstance) {\n        // @ts-ignore\n        tippyInstance.hide();\n      }\n    },\n    [onAdd, tippyInstance]\n  );\n\n  const intl = useIntl();\n\n  const buttonRendered = (\n    <Button\n      tabIndex={-1}\n      className={className || 'add-by-dataset-button'}\n      width={width}\n      onClick={onClickBtn}\n      disabled={!options.length || inactive}\n    >\n      <Add height=\"12px\" />\n      <FormattedMessage id={buttonIntlId} />\n    </Button>\n  );\n\n  return options.length === 1 ? (\n    buttonRendered\n  ) : (\n    <RootContext.Consumer>\n      {context => (\n        <Tippy\n          trigger=\"click\"\n          arrow={false}\n          interactive\n          placement=\"bottom\"\n          appendTo={context?.current || 'parent'}\n          // @ts-ignore\n          onCreate={setTippyInstance}\n          duration={0}\n          content={\n            <DropdownMenu>\n              <DropdownContainer>\n                <Typeahead\n                  className={TYPEAHEAD_CLASS}\n                  customClasses={{\n                    results: 'list-selector',\n                    input: TYPEAHEAD_INPUT_CLASS,\n                    listItem: 'list__item'\n                  }}\n                  placeholder={intl ? intl.formatMessage({id: 'placeholder.search'}) : 'Search'}\n                  selectedItems={null}\n                  options={options}\n                  displayOption={Accessor.generateOptionToStringFor('label')}\n                  filterOption={'label'}\n                  searchable\n                  onOptionSelected={onOptionSelected}\n                  customListItemComponent={ListItem}\n                />\n              </DropdownContainer>\n            </DropdownMenu>\n          }\n        >\n          {buttonRendered}\n        </Tippy>\n      )}\n    </RootContext.Consumer>\n  );\n};\n\nexport default AddByDatasetButton;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {generateHashId, validateEffectParameters} from '@kepler.gl/utils';\nimport {\n  Effect as EffectInterface,\n  EffectProps,\n  EffectPropsPartial,\n  EffectParameterDescription\n} from '@kepler.gl/types';\nimport {\n  DEFAULT_POST_PROCESSING_EFFECT_TYPE,\n  POSTPROCESSING_EFFECTS,\n  LIGHT_AND_SHADOW_EFFECT\n} from '@kepler.gl/constants';\n\nexport class Effect implements EffectInterface {\n  id: string;\n  type: string;\n  isEnabled: boolean;\n  // effect specific parameters for a deck.gl effect (uniforms)\n  parameters: {[key: string]: any};\n  // runtime props\n  isConfigActive: boolean;\n  isJsonEditorActive: boolean;\n  deckEffect: any;\n  _uiConfig: EffectParameterDescription[];\n\n  constructor(props: EffectPropsPartial = {}) {\n    this.id = props.id || `e_${generateHashId(6)}`;\n\n    const _props = this.getDefaultProps(props);\n    this.type = _props.type;\n    this.isEnabled = _props.isEnabled;\n    this.isConfigActive = _props.isConfigActive;\n    this.isJsonEditorActive = _props.isJsonEditorActive;\n\n    this._uiConfig =\n      LIGHT_AND_SHADOW_EFFECT.type === this.type\n        ? LIGHT_AND_SHADOW_EFFECT.parameters\n        : POSTPROCESSING_EFFECTS[this.type]?.parameters || [];\n    this.parameters = validateEffectParameters(_props.parameters, this._uiConfig);\n\n    this.deckEffect = null;\n    this._initializeEffect();\n  }\n\n  _initializeEffect() {\n    // implemented in subclasses\n  }\n\n  getDefaultProps(props: EffectPropsPartial = {}): EffectProps {\n    return {\n      id: props.id || `e_${generateHashId(6)}`,\n      type: props.type || DEFAULT_POST_PROCESSING_EFFECT_TYPE,\n      isEnabled: props.isEnabled ?? true,\n      isConfigActive: props.isConfigActive ?? true,\n      isJsonEditorActive: props.isJsonEditorActive ?? false,\n      parameters: {...props.parameters}\n    };\n  }\n\n  setProps(props: EffectPropsPartial) {\n    this.id = props.id ?? this.id;\n    this.type = props.type ?? this.type;\n    this.isEnabled = props.isEnabled ?? this.isEnabled;\n    this.isConfigActive = props.isConfigActive ?? this.isConfigActive;\n    this.isJsonEditorActive = props.isJsonEditorActive ?? this.isJsonEditorActive;\n    this.parameters = {\n      ...this.parameters,\n      ...validateEffectParameters(props.parameters, this._uiConfig)\n    };\n  }\n\n  isValidToSave() {\n    return Boolean(this.type && this.id && this.deckEffect);\n  }\n\n  /**\n   * Effect specific list of configurable parameters.\n   * @returns All parameters are in preffered order.\n   */\n  getParameterDescriptions() {\n    return this._uiConfig || [];\n  }\n}\n\nexport default Effect;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\n// @ts-nocheck This is a hack, don't check types\n\nimport {console as Console} from 'global/window';\nimport {LightingEffect, shadow} from '@deck.gl/core';\nimport {Texture2D, ProgramManager} from '@luma.gl/core';\n\n/**\n * Inserts shader code before detected part.\n * @param {string} vs Original shader code.\n * @param {string} type Debug string.\n * @param {string} insertBeforeText Text chunk to insert before.\n * @param {string} textToInsert Text to insert.\n * @returns Modified shader code.\n */\nexport function insertBefore(vs, type, insertBeforeText, textToInsert) {\n  const at = vs.indexOf(insertBeforeText);\n  if (at < 0) {\n    Console.error(`Cannot edit ${type} layer shader`);\n    return vs;\n  }\n\n  return vs.slice(0, at) + textToInsert + vs.slice(at);\n}\n\nconst CustomShadowModule = shadow ? {...shadow} : undefined;\n\n/**\n * Custom shadow module\n * 1) Add u_outputUniformShadow uniform\n * 2) always produce full shadow when the uniform is set to true.\n */\nCustomShadowModule.fs = insertBefore(\n  CustomShadowModule.fs,\n  'custom shadow #1',\n  'uniform vec4 shadow_uColor;',\n  'uniform bool u_outputUniformShadow;'\n);\n\nCustomShadowModule.fs = insertBefore(\n  CustomShadowModule.fs,\n  'custom shadow #1',\n  'vec4 rgbaDepth = texture2D(shadowMap, position.xy);',\n  'if(u_outputUniformShadow) return 1.0;'\n);\n\nCustomShadowModule.getUniforms = (opts = {}, context = {}) => {\n  const u = shadow.getUniforms(opts, context);\n  if (opts.outputUniformShadow !== undefined) {\n    u['u_outputUniformShadow'] = opts.outputUniformShadow;\n  }\n  return u;\n};\n\n/**\n * Custom LightingEffect\n * 1) adds CustomShadowModule\n * 2) pass outputUniformShadow as module parameters\n * 3) properly removes CustomShadowModule\n */\nclass CustomDeckLightingEffect extends LightingEffect {\n  constructor(props) {\n    super(props);\n    this.useOutputUniformShadow = false;\n  }\n\n  preRender(gl, {layers, layerFilter, viewports, onViewportActive, views}) {\n    if (!this.shadow) return;\n\n    // create light matrix every frame to make sure always updated from light source\n    this.shadowMatrices = this._calculateMatrices();\n\n    if (this.shadowPasses.length === 0) {\n      this._createShadowPasses(gl);\n    }\n    if (!this.programManager) {\n      this.programManager = ProgramManager.getDefaultProgramManager(gl);\n      if (CustomShadowModule) {\n        this.programManager.addDefaultModule(CustomShadowModule);\n      }\n    }\n\n    if (!this.dummyShadowMap) {\n      this.dummyShadowMap = new Texture2D(gl, {\n        width: 1,\n        height: 1\n      });\n    }\n\n    for (let i = 0; i < this.shadowPasses.length; i++) {\n      const shadowPass = this.shadowPasses[i];\n      shadowPass.render({\n        layers,\n        layerFilter,\n        viewports,\n        onViewportActive,\n        views,\n        moduleParameters: {\n          shadowLightId: i,\n          dummyShadowMap: this.dummyShadowMap,\n          shadowMatrices: this.shadowMatrices,\n          useOutputUniformShadow: false\n        }\n      });\n    }\n  }\n\n  getModuleParameters(layer) {\n    const parameters = super.getModuleParameters(layer);\n    parameters.outputUniformShadow = this.outputUniformShadow;\n    return parameters;\n  }\n\n  cleanup() {\n    for (const shadowPass of this.shadowPasses) {\n      shadowPass.delete();\n    }\n    this.shadowPasses.length = 0;\n    this.shadowMaps.length = 0;\n\n    if (this.dummyShadowMap) {\n      this.dummyShadowMap.delete();\n      this.dummyShadowMap = null;\n    }\n\n    if (this.shadow && this.programManager) {\n      this.programManager.removeDefaultModule(CustomShadowModule);\n      this.programManager = null;\n    }\n  }\n}\n\nexport default CustomDeckLightingEffect;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {AmbientLight, _SunLight as SunLight} from '@deck.gl/core';\nimport moment from 'moment-timezone';\n\nimport {LIGHT_AND_SHADOW_EFFECT, DEFAULT_LIGHT_AND_SHADOW_PROPS} from '@kepler.gl/constants';\nimport {normalizeColor} from '@kepler.gl/utils';\nimport {EffectProps, EffectPropsPartial} from '@kepler.gl/types';\n\nimport Effect from './effect';\nimport CustomDeckLightingEffect from './custom-deck-lighting-effect';\n\nconst LIGHT_AND_SHADOW_EFFECT_DESC = {\n  ...LIGHT_AND_SHADOW_EFFECT,\n  class: null\n};\n\nclass LightingEffect extends Effect {\n  // deckEffect: PostProcessEffect | LightingEffect | null;\n\n  constructor(props: EffectPropsPartial) {\n    super(props);\n  }\n\n  _initializeEffect() {\n    this.parameters = {\n      ...DEFAULT_LIGHT_AND_SHADOW_PROPS,\n      timezone: moment.tz.guess(true),\n      ...this.parameters\n    };\n    const {parameters} = this;\n\n    const ambientLight = new AmbientLight({\n      color: parameters.ambientLightColor,\n      intensity: parameters.ambientLightIntensity\n    });\n\n    const sunLight = new SunLight({\n      timestamp: parameters.timestamp,\n      color: parameters.sunLightColor,\n      intensity: parameters.sunLightIntensity,\n      _shadow: true\n    });\n\n    this.deckEffect = new CustomDeckLightingEffect({\n      ambientLight,\n      sunLight\n    });\n    if (this.deckEffect) {\n      this.deckEffect.shadowColor = [\n        ...normalizeColor(parameters.shadowColor),\n        parameters.shadowIntensity\n      ];\n    }\n  }\n\n  getDefaultProps(props: EffectPropsPartial = {}): EffectProps {\n    return super.getDefaultProps({type: LIGHT_AND_SHADOW_EFFECT_DESC.type, ...props});\n  }\n\n  setProps(props: EffectPropsPartial) {\n    super.setProps(props);\n\n    // any uniform updated?\n    if (props.parameters) {\n      const {parameters} = this;\n\n      if (this.type === LIGHT_AND_SHADOW_EFFECT_DESC.type) {\n        /** @type {LightingEffect} */\n        const effect = this.deckEffect;\n        if (effect) {\n          effect.shadowColor = [\n            ...normalizeColor(parameters.shadowColor),\n            parameters.shadowIntensity\n          ];\n\n          effect.ambientLight.intensity = parameters.ambientLightIntensity;\n          effect.ambientLight.color = parameters.ambientLightColor.slice();\n\n          const sunLight = effect.directionalLights[0];\n          if (sunLight) {\n            sunLight.intensity = parameters.sunLightIntensity;\n            sunLight.color = parameters.sunLightColor.slice();\n            sunLight.timestamp = parameters.timestamp;\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default LightingEffect;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {PostProcessEffect as DeckPostProcessEffect} from '@deck.gl/core';\nimport {\n  brightnessContrast,\n  ink,\n  triangleBlur,\n  hueSaturation,\n  vibrance,\n  colorHalftone,\n  dotScreen,\n  edgeWork,\n  noise,\n  sepia,\n  tiltShift,\n  vignette,\n  zoomBlur,\n  magnify,\n  hexagonalPixelate\n} from '@luma.gl/shadertools';\n\nimport {POSTPROCESSING_EFFECTS, DEFAULT_POST_PROCESSING_EFFECT_TYPE} from '@kepler.gl/constants';\nimport {EffectPropsPartial, EffectParameterDescription} from '@kepler.gl/types';\n\nimport Effect from './effect';\n\nconst POSTPROCESSING_EFFECTS_DESCS = [\n  {\n    ...POSTPROCESSING_EFFECTS.ink,\n    class: ink\n  },\n  {\n    ...POSTPROCESSING_EFFECTS.brightnessContrast,\n    class: brightnessContrast\n  },\n  {\n    ...POSTPROCESSING_EFFECTS.hueSaturation,\n    class: hueSaturation\n  },\n  {\n    ...POSTPROCESSING_EFFECTS.vibrance,\n    class: vibrance\n  },\n  {\n    ...POSTPROCESSING_EFFECTS.sepia,\n    class: sepia\n  },\n  {\n    ...POSTPROCESSING_EFFECTS.dotScreen,\n    class: dotScreen\n  },\n  {\n    ...POSTPROCESSING_EFFECTS.colorHalftone,\n    class: colorHalftone\n  },\n  {\n    ...POSTPROCESSING_EFFECTS.noise,\n    class: noise\n  },\n  {\n    ...POSTPROCESSING_EFFECTS.triangleBlur,\n    class: triangleBlur\n  },\n  {\n    ...POSTPROCESSING_EFFECTS.zoomBlur,\n    class: zoomBlur\n  },\n  {\n    ...POSTPROCESSING_EFFECTS.tiltShift,\n    class: tiltShift\n  },\n  {\n    ...POSTPROCESSING_EFFECTS.edgeWork,\n    class: edgeWork\n  },\n  {\n    ...POSTPROCESSING_EFFECTS.vignette,\n    class: vignette\n  },\n  {\n    ...POSTPROCESSING_EFFECTS.magnify,\n    class: magnify\n  },\n  {\n    ...POSTPROCESSING_EFFECTS.hexagonalPixelate,\n    class: hexagonalPixelate\n  }\n];\n\n/**\n * Returns default parameter value based on effect description.\n * @param name Name of the parameter.\n * @param effectDescription Effect's description.\n * @param uniformsDesc Effect's uniforms.\n * @returns\n */\nexport const getDefaultValueForParameter = (\n  name: string,\n  effectDescription: EffectParameterDescription[],\n  uniformsDesc: any\n) => {\n  const description = effectDescription.find(param => param.name === name);\n  const uniform = uniformsDesc[name];\n  return description?.defaultValue ?? uniform?.value ?? uniform ?? description?.min;\n};\n\nclass PostProcessingEffect extends Effect {\n  // deckEffect: PostProcessEffect | LightingEffect | null;\n\n  constructor(props: EffectPropsPartial) {\n    super(props);\n  }\n\n  _initializeEffect() {\n    const effectDesc = POSTPROCESSING_EFFECTS_DESCS.find(desc => desc.type === this.type);\n    if (effectDesc) {\n      this.deckEffect = new DeckPostProcessEffect(effectDesc.class, this.parameters);\n\n      const uniforms = this.deckEffect?.module?.uniforms;\n      if (uniforms) {\n        // get default parameters\n        const keys = Object.keys(uniforms);\n        const defaultParameters = {};\n        keys.forEach(key => {\n          defaultParameters[key] = getDefaultValueForParameter(key, this._uiConfig, uniforms);\n        });\n        this.parameters = {...defaultParameters, ...this.parameters};\n        this.deckEffect?.setProps(this.parameters);\n      }\n    }\n  }\n\n  getDefaultProps(props: EffectPropsPartial = {}) {\n    return super.getDefaultProps({type: DEFAULT_POST_PROCESSING_EFFECT_TYPE, ...props});\n  }\n\n  setProps(props: EffectPropsPartial) {\n    super.setProps(props);\n\n    // any uniform updated?\n    if (props.parameters) {\n      this.deckEffect?.setProps(this.parameters);\n    }\n  }\n}\n\nexport default PostProcessingEffect;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {Effect as EffectInterface, EffectPropsPartial} from '@kepler.gl/types';\nimport {LIGHT_AND_SHADOW_EFFECT} from '@kepler.gl/constants';\n\nimport LightingEffect from './lighting-effect';\nimport PostProcessEffect from './post-processing-effect';\n\nexport function createEffect(params: EffectPropsPartial): EffectInterface {\n  if (params?.type === LIGHT_AND_SHADOW_EFFECT.type) {\n    return new LightingEffect(params);\n  } else {\n    return new PostProcessEffect(params);\n  }\n}\n"],"sourceRoot":""}