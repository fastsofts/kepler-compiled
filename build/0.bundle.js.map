{"version":3,"sources":["webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/layer-panel/vis-config-slider.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/layer-panel/vis-config-switch.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/layer-panel/layer-column-config.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/layer-panel/column-selector.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/layer-panel/layer-type-list-item.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/layer-panel/layer-configurator.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/layer-panel/dimension-scale-selector.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/layer-panel/layer-type-selector.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/layer-panel/layer-type-dropdown-list.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/layer-panel/text-label-panel.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/layer-panel/single-color-palette.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/layer-panel/color-range-selector.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/layer-panel/custom-palette.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/layer-panel/layer-color-selector.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/layer-panel/how-to-button.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/kepler-gl.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/side-bar.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/panel-header.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/panel-toggle.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/panel-tab.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/layer-manager.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/layer-panel/layer-panel.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/layer-panel/dataset-layer-group.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/layer-panel/dataset-layer-section.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/common/dataset-title.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/common/dataset-info.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/layer-panel/add-layer-button.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/add-by-dataset-button.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/filter-manager.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/filter-panel/filter-panel.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/filters/single-select-filter.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/filters/multi-select-filter.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/filters/range-filter.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/filters/components.ts","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/filter-panel/add-filter-button.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/interaction-manager.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/interaction-panel/brush-config.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/interaction-panel/tooltip-config.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/map-manager.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/map-style-panel/map-style-selector.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/map-style-panel/map-layer-selector.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/map-style-panel/map-layer-group-color-picker.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/custom-panel.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/map/map-popover.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/map/map-popover-content.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/map/coordinate-info.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/map/map-control.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/map/split-map-button.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/map/toggle-3d-button.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/map/layer-selector-panel.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/map/map-legend-panel.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/map/map-legend.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/map/lazy-tippy.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/map/map-draw-panel.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/map/locale-panel.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/editor/editor.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/editor/feature-action-panel.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/filters/time-widget.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/filters/time-widget-top.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/filter-animation-controller.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/layer-animation-controller.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/modal-container.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/modals/modal-dialog.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/modals/delete-data-modal.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/modals/data-table-modal.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/modals/load-data-modal.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/modals/load-storage-map.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/modals/cloud-tile.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/modals/modal-tabs.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/modals/export-image-modal.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/modals/export-data-modal.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/modals/export-map-modal/export-map-modal.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/modals/export-map-modal/export-html-map.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/modals/export-map-modal/export-json-map.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/modals/add-map-style-modal.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/modals/save-map-modal.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/modals/share-map-modal.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/plot-container.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/notification-panel.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/geocoder-panel.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/geocoder/geocoder.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/effects/effect-manager.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/effects/side-panel-title.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/effects/effect-list.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/effects/effect-configurator.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/effects/effect-time-configurator.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/effects/effect-type-selector.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/dnd-context.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/hooks/use-dnd-layers.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/hooks/use-dnd-effects.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/layer-panel/vis-config-by-field-selector.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/layer-panel/layer-error-message.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/panel-dropdown.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/filters/filter-panels/time-range-filter-panel.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/filters/filter-panels/single-select-filter-panel.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/filters/filter-panels/multi-select-filter-panel.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/filters/filter-panels/range-filter-panel.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/filters/filter-panels/polygon-filter-panel.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/filters/polygon-filter.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/interaction-panel/interaction-panel.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/interaction-panel/tooltip-config/tooltip-chicklet.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/map-style-panel/map-layer-group-item.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/modals/overwrite-map-modal.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/modals/error-display.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/modals/cloud-components/cloud-header.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/modals/cloud-components/cloud-maps.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/modals/cloud-components/cloud-item.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/effects/effect-panel.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/effects/effect-panel-header.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/effects/timezone-selector.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/effects/effect-time-slider.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/effects/effect-time-selector.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/effects/compact-color-picker.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/effects/effect-type-dropdown-list.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/effects/effect-type-list-item.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/map/effects/effect-control.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/hooks/use-feature-flags.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/index.ts","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/panel-header-action.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/map/map-control-tooltip.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/hooks/use-cloud-list-provider.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/panel-title.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/injector.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/common/source-data-selector.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/common/dataset-tag.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/layer-panel/color-selector.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/layer-panel/color-palette.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/layer-panel/custom-picker.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/common/source-data-catalog.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/filter-panel/filter-panel-header.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/filters/filter-panels/filter-panel-with-field-select.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/map-view-state-context.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/modals/status-panel.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/layer-panel/layer-config-group.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/layer-panel/layer-list.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/layer-panel/layer-panel-header.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/panel-view-list-toggle.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/side-panel/layer-panel/dataset-section.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/filters/filter-panels/new-filter-panel.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/filters/time-range-filter.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/map-container.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/map/layer-hover-info.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/map/map-control-panel.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/map/map-control-toolbar.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/maps-layout.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/notification-panel/notification-item.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/modals/image-modal-container.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/modals/loading-dialog.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/modals/cloud-components/provider-select.tsx","webpack:////home/srikanth/kepler.gl/src/components/src/modals/export-map-modal/components.tsx"],"names":["_templateObject","_templateObject2","_templateObject3","_templateObject4","_react","e","r","__esModule","_typeof","t","_getRequireWildcardCache","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_interopRequireWildcard","require","_styledComponents","_interopRequireDefault","_styledComponents2","_rangeSlider","_localization","_constants","_","_utils","WeakMap","InputWrapper","div","_taggedTemplateLiteral2","CustomInputWrapper","CustomInputLabel","label","props","theme","textColor","layerConfigGroupLabelLabelFontSize","RangeInput","input","sliderInputFontSize","LazyInput","_ref","value","onChange","name","_useState","useState","_useState2","_slicedToArray2","stateValue","setValue","inputRef","useRef","useEffect","onKeyDown","useCallback","keyCode","KeyEvent","DOM_VK_ENTER","DOM_VK_RETURN","current","blur","_onChange","target","onBlur","createElement","type","ref","id","CustomInput","_ref2","isRanged","onChangeCustomInput","onChangeInput","v","VisConfigSliderFactory","RangeSlider","_ref3","config","layer","property","range","step","allowCustomValue","disabled","_onChange4","inputTheme","visConfig","_useState3","isInRange","_useState4","custom","setCustom","onChangeCheckbox","adjustedValue","clamp","_defineProperty2","SidePanelSection","Boolean","PanelLabel","FormattedMessage","concat","Checkbox","checked","value0","value1","showInput","deps","_infoHelper","_switch","StyledVisConfigSwitch","VisConfigSwitchFactory","InfoHelper","_ref$layer","_onChange2","description","className","capitalizeFirstLetter","_default","exports","_columnSelector","TopRow","getValidFieldPairsSuggestionsForColumn","enhancedFieldPairs","columnPairs","columnKey","columnPair","matchingFieldPairs","filter","pair","toArray","fieldPairKey","some","length","LayerColumnConfigFactory","ColumnSelector","fieldPairs","columns","columnLabels","fields","updateLayerConfig","assignColumn","assignColumnPairs","useMemo","map","fp","defaultName","onUpdateColumn","key","assignedColumns","keys","column","allFields","onSelect","val","_fieldSelector","_reducers","ColumnRow","ColumnName","ColumnSelect","ColumnSelectorFactory","FieldSelector","optional","suggested","error","validateColumn","erasable","_classnames","StyledListItem","activeColor","layerTypeIconSizeSM","labelColor","KEPLER_UNFOLDED_BUCKET","layerTypeIconSizeL","selectColor","LayerTypeListItemFactory","withTheme","isTile","list","icon","height","toLowerCase","defaultMessage","_itemSelector","_visConfigByFieldSelector","_layerColumnConfig","_layerTypeSelector","_dimensionScaleSelector","_sourceDataSelector","_visConfigSwitch","_visConfigSlider","_layerConfigGroup","_textLabelPanel","_layerColorSelector","_howToButton","_layerErrorMessage","ownKeys","getOwnPropertySymbols","o","enumerable","push","apply","_objectSpread","arguments","forEach","getOwnPropertyDescriptors","defineProperties","_createSuper","Derived","hasNativeReflectConstruct","prototype","valueOf","Reflect","construct","_isNativeReflectConstruct","result","Super","_getPrototypeOf2","NewTarget","constructor","_possibleConstructorReturn2","StyledLayerConfigurator","attrs","layerConfiguratorMargin","layerConfiguratorPadding","layerConfiguratorBorder","layerConfiguratorBorderColor","StyledLayerVisualConfigurator","getLayerFields","datasets","_layer$config","dataId","getLayerDataset","_layer$config2","getLayerConfiguratorProps","setColorUI","updateLayerColorUI","getVisConfiguratorProps","updateLayerVisConfig","getLayerChannelConfigProps","updateLayerVisualChannelConfig","LayerConfiguratorFactory","SourceDataSelector","VisConfigSlider","TextLabelPanel","LayerConfigGroup","ChannelByValueSelector","LayerColumnConfig","LayerTypeSelector","VisConfigSwitch","LayerColorSelector","LayerColorRangeSelector","ArcLayerColorSelector","_Component","_inherits2","LayerConfigurator","_super","_classCallCheck2","_createClass2","this","_renderScatterplotLayerConfig","visConfiguratorProps","layerChannelConfigProps","layerConfiguratorProps","_extends2","visConfigSettings","filled","collapsible","colorField","ConfigGroupCollapsibleContent","channel","visualChannels","color","opacity","LAYER_TYPES","point","outline","strokeColorField","selectedColor","strokeColor","thickness","sizeField","radiusRange","fixedRadius","radius","size","updateLayerTextLabel","textLabel","AggregationScaleSelector","colorAggregation","condition","AggregationTypeSelector","clusterRadius","weight","_renderAggregationLayerConfig","_ref4","enable3d","percentile","worldUnitSize","coverage","elevationScale","sizeRange","enableElevationZoomFactor","sizeAggregation","elevationPercentile","_ref5","strokeOpacity","coverageField","coverageRange","args","_renderLineLayerConfig","_ref6","onChangeConfig","onChangeVisConfig","sourceColor","_ref7","_layer$meta$featureTy","meta","featureTypes","polygon","stroked","trailLength","_ref8","_layer$meta$featureTy2","fixedHeight","wireframe","radiusField","_ref9","Fragment","Input","accept","files","url","URL","createObjectURL","scenegraph","sizeScale","angleX","angleY","angleZ","_ref10","heightRange","_this","_this$props","layerTypeOptions","updateLayerType","_this$props$disableTy","disableTypeSelect","_ref11","_ref11$fields","_ref11$fieldPairs","undefined","dataset","renderTemplate","layerInfoModal","onClick","openModal","expanded","hasAllColumns","selected","options","bind","errorMessage","Component","ChannelByValueSelectorFactory","VisConfigByFieldSelector","_ref12","channelScaleType","field","scale","defaultMeasure","channelSupportedFieldTypes","supportedFieldTypes","CHANNEL_SCALE_SUPPORTED_FIELDS","supportedFields","_ref13","includes","scaleOptions","getScaleOptions","showScale","isAggregated","placeholder","scaleType","selectedField","updateField","updateScale","LayerColorSelectorFactory","LayerColorRangeSelectorFactory","ArcLayerColorSelectorFactory","_ref14","Array","isArray","_ref15","aggregation","layerAggregationTypes","getAggregationOptions","aggregationOptions","AGGREGATION_TYPE_OPTIONS","_ref16","selectedAggregation","find","_ref17","values","displayName","selectedItems","displayOption","getOptionValue","multiSelect","searchable","_ref$disabled","camelize","_layerTypeDropdownList","_layerTypeListItem","StyledLayerTypeSelector","LayerTypeSelectorFactory","getDisplayOption","op","LayerTypeListItem","LayerTypeDropdownList","filterOption","DropDownLineItemRenderComponent","DropDownRenderComponent","_dropdownList","DropdownListWrapper","dropdownList","dropdownListBgd","dropdownListBorderTop","layerTypeIconPdL","StyledDropdownListItem","LayerTypeDropdownListFactory","onOptionSelected","selectionIndex","customListItemComponent","onSelectOption","preventDefault","ListItemComponent","classList","it","hover","onMouseDown","_icons","_colorSelector","SwitchWrapper","TextLabelPanelFactory","ColorSelector","currentFields","tl","d","ConfigGroupCollapsibleHeader","idx","labelId","LAYER_TEXT_CONFIGS","fontSize","colorSets","setColor","outlineWidth","outlineColor","useOpacity","background","backgroundColor","SpaceBetweenFlexbox","SBFlexboxItem","textAnchor","anchor","textAlignment","alignment","Button","link","Add","_d3Array","StyledColorPalette","StyledColorColumn","StyledColorBlock","onSelectColor","Themes","col","ROWS","style","ColorsByTheme","borderColor","toUpperCase","hexToRgb","_lodash","_reselect","_colorPalette","_customPalette","ALL_TYPES","COLOR_RANGES","c","ctype","ALL_STEPS","colors","sort","numberSort","StyledColorConfig","StyledColorRangeSelector","StyledPaletteConfig","secondaryInput","CONFIG_SETTINGS","steps","reversed","ColorRangeSelector","_len","_key","_assertThisInitialized2","colorPaletteUI","colorRangeConfig","createSelector","configTypeSelector","configStepSelector","colorRange","isType","isStep","Number","_setColorRangeConfig","setColorPaletteUI","customPalette","newConfig","showSketcher","_this2","_this$props$colorPale","filteredColorRanges","filteredColorRange","PaletteConfig","_updateConfig","onApply","onSelectColorRange","onToggleSketcher","_onToggleSketcher","setCustomPalette","_onSetCustomPalette","onCancel","_onCustomPaletteCancel","ColorPaletteGroup","colorRanges","selectedColorRange","_ref2$config","stopPropagation","secondary","StyledColorRange","panelBackgroundHover","reverseColorRange","isReversed","isSelected","_templateObject5","_templateObject6","_templateObject7","_templateObject8","_templateObject9","_reactSortableHoc","_portaled","_customPicker","dragHandleActive","css","textColorHl","StyledSortableItem","dropdownWrapperZ","StyledDragHandle","StyledTrash","subtextColorActive","StyledLine","StyledSwatch","boxShadow","StyledButtonContainer","StyledInlineInput","SortableItem","SortableElement","children","isSorting","sorting","WrappedSortableContainer","SortableContainer","DragHandle","SortableHandle","CustomPalette","createRef","newColors","_toConsumableArray2","hex","_setColorPaletteUI","index","splice","event","oldIndex","newIndex","arrayMove","setState","root","onSortEnd","_onSortEnd","onSortStart","_onSortStart","lockAxis","helperClass","useDragHandle","state","VertDots","_onSwatchClick","InlineInput","_inputColorHex","_onColorDelete","Trash","_onColorAdd","_onApply","isOpened","left","top","_onPickerUpdate","onSwatchClose","_onSwatchClose","_ref$property","onSetColorUI","rgbValue","colorUI","_ref2$property","isRange","_ref3$property","targetColor","StyledHowToButton","HowToButton","small","_console","_redux","_keplerglConnect","_reactIntl","_context","_actions","_sidePanel","_mapContainer2","_mapsLayout","_bottomWidget","_modalContainer","_plotContainer","_notificationPanel","_geocoderPanel","_effectManager","_dndContext","_useCloudListProvider","_styles","_typeof3","GlobalStyle","fontFamily","fontWeight","lineHeight","BottomWidgetOuter","absolute","isViewportDisjointed","mapState","isSplit","isViewportSynced","splitMapViewports","mapStateSelector","isFinite","mapFieldsSelector","getMapboxRef","mapboxApiAccessToken","mapboxApiUrl","DEFAULT_KEPLER_GL_PROPS","mapStyle","onDeckInitialized","onViewStateChange","onMouseMove","deckGlProps","uiStateActions","visStateActions","mapStateActions","visState","activeSidePanel","uiState","mapControls","readOnly","locale","topMapContainerProps","bottomMapContainerProps","transformRequest","getVisibleDatasets","filterObjectByPredicate","GEOCODER_DATASET_NAME","sidePanelSelector","availableProviders","filteredDatasets","appName","version","appWebsite","onSaveMap","mapStyleActions","filters","layers","layerOrder","layerClasses","interactionConfig","mapInfo","layerBlending","overlayBlending","width","sidePanelWidth","mapSaved","providerState","plotContainerSelector","exportImageSetting","exportImage","mapFields","addNotification","setExportImageSetting","setExportImageDataUri","setExportImageError","splitMaps","isSplitSelector","bottomWidgetSelector","animationConfig","toggleModal","sidePanel","margin","modalContainerSelector","rootNode","providerActions","cloudProviders","onExportToCloudSuccess","onLoadCloudMapSuccess","onLoadCloudMapError","onExportToCloudError","geoCoderPanelSelector","dimensions","isGeocoderEnabled","geocoder","enabled","updateVisData","removeDataset","updateMap","appWidth","notificationPanelSelector","removeNotification","notifications","mapStyles","mapStylesReplaceDefault","DEFAULT_MAPBOX_API_URL","KEPLER_GL_NAME","KEPLER_GL_VERSION","DIMENSIONS","featureFlags","KeplerGlFactory","BottomWidget","GeoCoderPanel","MapContainer","MapsLayout","ModalContainer","SidePanel","PlotContainer","NotificationPanel","DndContext","KeplerGL","themeSelector","_typeof2","THEME","light","themeLT","base","themeBS","datasetsSelector","providers","hasStorage","p","hasPrivateStorage","hasShare","hasSharingUrl","localeMessages","customMessages","mergeMessages","messages","defaultStyles","customStyles","ms","generateHashId","allStyles","reduce","accu","loadMapStyles","containerId","layerId","toggleLayerForMap","_validateMapboxToken","_loadMapStyle","onKeplerGlInitialized","HTMLElement","observeDimensions","_handleResize","unobserveDimensions","validateToken","warn","MISSING_MAPBOX_TOKEN","_this$props$id","_this$props$width","_this$props$height","_this$props$cloudProv","availableThemeSelector","localeMessagesSelector","isExportingImage","exporting","filteredDatasetsSelector","sideFields","plotContainerFields","bottomWidgetFields","modalContainerFields","geoCoderPanelFields","notificationPanelFields","mapContainers","settings","primary","deleteMapLabels","_deleteMapLabels","RootContext","Provider","FeatureFlagsContextProvider","IntlProvider","ThemeProvider","CloudListProvider","display","flexDirection","position","unsyncedViewports","_mapContainer","hasPortableWidth","breakPointValues","rootRef","bottomWidgetRef","containerW","containerH","connect","mapStateToProps","makeMapDispatchToProps","defaultUserActions","getDispatch","dispatch","getUserActions","actions","makeGetActionCreators","userActions","_map","VisStateActions","MapStateActions","MapStyleActions","UIStateActions","ProviderActions","bindActionCreators","overrides","_key2","mergeActions","_map2","getActionCreators","ownProps","_sideBar","_panelHeader","_panelToggle","_layerManager","_filterManager","_interactionManager","_mapManager","_customPanel","StyledSidePanelContent","sidePanelScrollBar","sidePanelInnerPadding","SidePanelFactory","Sidebar","PanelHeader","PanelToggle","LayerManager","FilterManager","InteractionManager","MapManager","CustomPanels","SIDEBAR_COMPONENTS","interaction","SIDEBAR_ICONS","Layers","FilterFunnel","Settings","CursorClick","fullPanels","SIDEBAR_PANELS","component","iconComponent","getCustomPanelProps","_props$availableProvi","_props$panels","panels","openDeleteModal","toggleSidePanel","setMapInfo","showDatasetTable","updateTableColor","title","isOpen","_onOpenOrClose","onClickExportImage","EXPORT_IMAGE_ID","onClickExportData","EXPORT_DATA_ID","onClickExportMap","EXPORT_MAP_ID","onClickSaveToStorage","OVERWRITE_MAP_ID","SAVE_MAP_ID","onClickSaveAsToStorage","onClickShareMap","SHARE_MAP_ID","onShowDatasetTable","onUpdateTableColor","newColor","onShowAddDataModal","ADD_DATA_ID","onShowAddMapStyleModal","ADD_MAP_STYLE_ID","onRemoveDataset","currentPanel","customPanelProps","PanelComponent","shouldShowCollapseButton","isSidePanelCloseButtonVisible","minifiedWidth","onOpenOrClose","visibleDropdown","showExportDropdown","hideExportDropdown","onExportImage","onExportData","onExportMap","onSaveToStorage","onSaveAsToStorage","onShareMap","activePanel","togglePanel","showAddDataModal","showAddMapStyleModal","panelMetadata","panelListView","layerPanelListView","filterPanelListView","defaultProps","StyledSidePanelContainer","right","bottom","SideBarContainer","SideBarInner","sidePanelBg","sidePanelBorder","sidePanelBorderColor","StyledCollapseButton","sideBarCloseBtnBgd","sideBarCloseBtnColor","sideBarCloseBtnBgdHover","CollapseButtonFactory","ArrowRight","transform","SidebarFactory","CollapseButton","_class","SideBar","horizontalOffset","_logo","_panelDropdown","_toolbar","_toolbarItem","StyledPanelHeader","sidePanelHeaderBg","StyledPanelHeaderTop","StyledPanelTopActions","StyledPanelAction","active","subtextColor","StyledToolbar","PanelAction","memo","item","dropdownComponent","data-tip","data-for","blank","href","rel","iconComponentProps","tooltip","Tooltip","place","delayShow","effect","PanelHeaderDropdownFactory","items","show","onClose","getDropdownItemsSelector","l","SaveExportDropdownFactory","PanelHeaderDropdown","dropdownItemsSelector","SaveExportDropdown","Picture","DataTable","Map","Save2","Share","CloudStorageDropdownFactory","CloudStorageDropdown","PanelHeaderFactory","actionItems","dropdownCallbacks","_objectWithoutProperties2","ai","logoComponent","Db","Save","_panelTab","PanelHeaderBottom","sidePanelHeaderBorder","PanelToggleFactory","PanelTab","_onClick","panel","isActive","StyledPanelTab","panelToggleBorderColor","panelTabColor","panelToggleMarginRight","panelToggleBottomPadding","panelTabWidth","PanelTabFactory","_layerList","_datasetLayerGroup","_panelViewListToggle","_panelTitle","_datasetSection","_addLayerButton","LayerBlendingSelector","updateLayerBlending","intl","labeledLayerBlendings","LAYER_BLENDINGS","acc","formatMessage","blending","InfoHelperWrapper","OverlayBlendingSelectorTitleRow","OverlayBlendingSelector","updateOverlayBlending","infoHelper","labeledOverlayBlendings","OVERLAY_BLENDINGS","LayerManagerFactory","LayerList","DatasetLayerGroup","PanelViewListToggle","PanelTitle","DatasetSection","AddLayerButton","addLayer","listView","togglePanelListView","panelId","isSortByDatasetMode","PANEL_VIEW_TOGGLES","byDataset","_togglePanelListView","mode","showDeleteDataset","showDatasetList","SidePanelDivider","onAdd","_addLayer","injectIntl","_layerConfigurator","_layerPanelHeader","PanelWrapper","LayerPanelFactory","LayerPanelHeader","LayerPanel","_args","newProp","layerConfigChange","newType","layerTypeChange","newVisConfig","layerVisConfigChange","_len2","layerColorUIChange","_this$props2","_len3","_key3","layerTextLabelChange","layerVisualChannelConfigChange","isVisible","layerSetIsValid","isConfigActive","removeLayer","_this$props$layer","_this$props$layer$met","bounds","zoomToLayer","duplicateLayer","_this$props3","isDraggable","listeners","isValid","allowDuplicate","isValidToSave","data-testid","dataTestIds","layerPanel","onTouchStart","labelRCGColorValues","layerType","onToggleEnableConfig","_toggleEnableConfig","onToggleVisibility","_toggleVisibility","onResetIsValid","_resetIsValid","onUpdateLayerLabel","_updateLayerLabel","onRemoveLayer","_removeLayer","onZoomToLayer","_zoomToLayer","onDuplicateLayer","_duplicateLayer","isDragNDropEnabled","_datasetLayerSection","DatasetLayerGroupFactory","DatasetLayerSection","datasetLayerSectionData","datasetLayers","dlsData","_sourceDataCatalog","DatasetLayerSectionWrapper","DatasetLayerSectionFactory","SourceDataCatalog","datasetCatalog","isSortable","_layers","_datasetTag","StyledDatasetTitle","clickable","DataTagAction","ShowDataTable","Table","RemoveDataset","datasetKey","DatasetTitleFactory","DatasetTag","onTitleClick","displayColorPicker","setDisplayColorPicker","datasetId","_handleClick","_handleClosePicker","_handleCustomPicker","rgb","g","b","_onClickTitle","onClickSquare","Portaled","rgbToHex","CenterFlexbox","StyledDataRowCount","rowCount","numFormat","dataContainer","numRows","_d3Format","format","_addByDatasetButton","buttonIntlId","_react2","_typeahead","_accessor","DropdownContainer","secondaryInputBorderColor","DropdownMenu","ListItemWrapper","ListItem","DatasetSquare","inactive","tippyInstance","setTippyInstance","ds","onClickBtn","option","hide","useIntl","buttonRendered","tabIndex","Consumer","context","trigger","arrow","interactive","placement","appendTo","onCreate","duration","content","customClasses","results","listItem","generateOptionToStringFor","_filterPanel","_addFilterButton","FilterManagerFactory","FilterPanel","AddFilterButton","FilterList","filtersByIndex","isAnyFilterAnimating","_removeFilter","removeFilter","setFilter","toggleFilterAnimation","_toggleFilterFeature","toggleFilterFeature","setFilterView","filterPanelCallbacks","toggleFilterView","isSideFilter","FILTER_VIEW_TYPES","enlarged","side","toggleAnimation","reverse","enlargeFilter","DatasetFilterSection","_ref6$filters","addFilter","f","isAnimating","onClickAddFilter","filtersByDatasets","fidx","_TogglePanelListView","filterListProps","sourceDataCatalogProps","_newFilterPanel","_timeRangeFilterPanel","_singleSelectFilterPanel","_multiSelectFilterPanel","_rangeFilterPanel","_polygonFilterPanel","StyledFilterPanel","FilterPanelFactory","NewFilterPanel","TimeRangeFilterPanel","SingleSelectFilterPanel","MultiSelectFilterPanel","RangeFilterPanel","PolygonFilterPanel","_FilterPanelComponent","FilterPanelComponents","default","FILTER_TYPES","timeRange","select","fieldsSelector","filterSelector","nameSelector","dataIdSelector","ALL_FIELD_TYPES","geojson","FilterFilterComponent","allAvailableFields","availableFieldsSelector","SingleSelectFilter","domain","String","htmlFor","RangeFilterFactory","histogram","isEnlarged","view","_interactionPanel","InteractionManagerFactory","InteractionPanel","onConfigChange","interactionConfigChange","setColumnDisplayFormat","BrushConfigFactory","BRUSH_CONFIG","_tooltipChicklet","TooltipConfigWrapper","ButtonWrapper","CompareSwitchWrapper","inputFontSize","TooltipConfigFactory","DatasetTooltipConfig","onDisplayFormatChange","handleClick","fieldsToShow","findSelectedHelper","tooltipFields","tooltipField","handleSelect","handleReorderItems","newOrder","SBFlexboxNoMargin","reorderItems","closeOnSelect","CustomChickletComponent","handleChange","compareType","compareMode","COMPARE_TYPES","_mapStyleSelector","_mapLayerSelector","MapManagerFactory","MapStyleSelector","LayerGroupSelector","isSelecting","mapStyleChange","_toggleSelecting","actionsPerCustomStyle","IconComponent","removeCustomMapStyle","editableLayers","styleType","layerGroups","customMapStylesActions","getCustomMapStylesActions","_selectStyle","toggleActive","visibleLayerGroups","topLayers","topLayerGroups","mapConfigChange","threeDBuildingColor","on3dBuildingColorChange","set3dBuildingColor","onBackgroundColorChange","setBackgroundColor","_panelHeaderAction","StyledMapDropdown","calloutDot","hasCallout","MapStyleSelectorFactory","PanelHeaderAction","defaultActionIcons","arrowDown","ArrowDown","_ref3$actionIcons","actionIcons","_ref4$icon","NO_BASEMAP_ICON","_ref4$label","collapsed","PanelHeaderContent","src","PanelHeaderTitle","action","_mapLayerGroupItem","_cloudProviders","noop","StyledInteractionPanel","LayerGroupSelectorFactory","LayerGroupItem","visible","EyeSeen","hidden","EyeUnseen","Upload","_ref$actionIcons","PanelContent","slug","isVisibilityToggleAvailable","isMoveToTopAvailable","isColorPickerAvailable","THREE_D_BUILDING_LAYER_GROUP_SLUG","BACKGROUND_LAYER_GROUP_SLUG","onColorChange","LayerGroupColorPickerWrapper","extraMarginRight","LayerGroupColorPickerFactory","onColorBlockClick","onClosePicker","onCustomPickerChange","ColorBlock","backgroundcolor","getProps","sidePanelProps","_mapPopoverContent","_headless","SELECTABLE_LAYERS","hexagonId","StyledMapPopover","scrollBar","panelBackground","panelBoxShadow","notificationColors","success","PinnedButtons","PopoverContent","StyledIcon","linkBtnColor","StyledSelectGeometry","getOffsetForPlacement","gap","reference","popper","getPopperOptions","container","modifiers","boundary","getSelectedFeature","layerHoverProp","_layer$config$columns","_layer$config$columns2","_layerHoverProp$data","_layer$config2$column","_layer$config2$column2","_layerHoverProp$data2","fieldIdx","selectedFeature","hex_id","idToPolygonGeo","data","isClosed","parseGeoJsonRawFeature","MapPopoverFactory","MapPopoverContent","x","y","frozen","coordinate","isBase","zoom","onSetFeatures","setSelectedFeature","featureCollection","horizontalPlacement","setHorizontalPlacement","moveLeft","moveRight","onSetSelectedFeature","clickContext","mapIndex","rightClick","updatedFeatures","features","popperOptions","zIndex","getReferenceClientRect","getBoundingClientRect","toJSON","createVirtualReference","offset","document","body","render","_layerHoverProp$layer","_layerHoverProp$layer2","ArrowLeft","Pin","CursorPoint","_layerHoverInfo","_coordinateInfo","MapPopoverContentFactory","LayerHoverInfo","CoordinateInfo","StyledLayerName","preciseRound","_splitMapButton","_toggle3dButton","_layerSelectorPanel","_mapLegendPanel","_mapDrawPanel","_localePanel","StyledMapControl","mapControl","padding","LegendLogo","MapControlFactory","SplitMapButton","Toggle3dButton","LayerSelectorPanel","MapLegendPanel","MapDrawPanel","LocalePanel","DEFAULT_ACTIONS","MapControl","_ref$actionComponents","actionComponents","ActionComponent","_mapControlTooltip","SplitMapButtonFactory","MapControlTooltip","delete","Delete","split","Split","onToggleSplitMap","splitMap","message","MapControlButton","Toggle3dButtonFactory","cube","Cube3d","dragRotate","onTogglePerspective","toggle3d","map3d","_mapControlPanel","LayerSelectorPanelFactory","MapControlPanel","onMapToggleLayer","onToggleMapControl","layersToRender","visibleLayers","disableClose","legendLayers","onToggleMenuPanel","header","_mapLegend","_lazyTippy","_reactDom","MapLegendPanelFactory","PinToBottom","mapLegend","pinned","offsetRight","media","portable","MapLegend","legend","Legend","isExport","mapHeight","onToggleSplitMapViewport","onClickControlBtn","_ref$isViewportUnsync","isViewportUnsyncAllowed","isPinned","_mapControls$mapDraw","mapDraw","onCloseClick","onPinClick","mapControlPanel","pinnable","rootContext","useContext","pinnedPanel","createPortal","_d3Color","_colorLegend","StyledMapControlLegend","panelBorderColor","last","VisualChannelMetric","LayerSizeLegend","SINGLE_COLOR_DOMAIN","SingleColorLegend","displayLabel","fieldType","toString","LayerColorLegend","colorChannel","enableColorBy","measure","k","colorScale","colorDomain","isColorChannel","visualChannel","CHANNEL_SCALES","colorAggr","LayerLegendHeaderFactory","showLayerName","LayerLegendContentFactory","colorChannels","nonColorChannels","vc","getVisualChannelDescription","matchCondition","MapLegendFactory","LayerLegendHeader","LayerLegendContent","_ref7$layers","maxHeight","isTestEnv","isTest","forwardRef","mounted","setMounted","lazyPlugin","fn","onMount","onHidden","computedProps","plugins","_mapControlToolbar","MapDrawPanelFactory","MapControlToolbar","DrawPolygon","cursor","innerPolygon","Polygon","rectangle","Rectangle","_mapControls$mapDraw2","editor","onSetEditorMode","EDITOR_MODES","EDIT","DRAW_POLYGON","DRAW_RECTANGLE","LocalePanelFactory","availableLocales","onSetLocale","currentLocal","mapLocale","onClickItem","onClickButton","getLabel","_window","_featureActionPanel","StyledWrapper","editorLayerFilter","EDITOR_AVAILABLE_LAYERS","EditorFactory","FeatureActionPanel","PortalEditor","visiblePanel","currentFilter","onDeleteFeature","onToggleLayer","_context$current","EditorUnmemoized","selectedFeatureIdSelector","selectedFeatureId","layerSelector","GEOCODER_LAYER_ID","editorFeatureSelector","editorFeatures","_document$activeEleme","activeElement","isInFocus","DOM_VK_DELETE","DOM_VK_BACK_SPACE","_onDeleteSelectedFeature","DOM_VK_ESCAPE","EditorLayerUtils","isDrawingActive","onTogglePolygonFilter","addEventListener","_onKeyPressed","removeEventListener","selectionContext","currentFilterSelector","availableLayers","availableLayersSelector","_closeFeatureAction","_togglePolygonFilter","Editor","_actionPanel","_copyToClipboard","StyledActionsLayer","remove","copy","Copy","copied","Checkmark","PureFeatureActionPanelFactory","setCopied","_ref2$layerId","_useFloating","useFloating","open","onOpenChange","refs","dismiss","useDismiss","getFloatingProps","useInteractions","copyGeometry","geometry","JSON","stringify","setFloating","ActionPanelItem","Icon","isSelection","FeatureActionPanelFactory","_timeRangeSlider","_floatingTimeDisplay","_timeRangeFilter","_timeWidgetTop","TimeBottomWidgetInner","BottomWidgetInner","TimeWidgetFactory","TimeRangeSlider","FloatingTimeDisplay","TimeWidgetTop","TimeWidget","showTimeDisplay","setFilterAnimationTime","resetAnimation","isAnimatable","updateAnimationSpeed","setFilterPlot","setFilterAnimationWindow","timeline","isMinified","setMinified","_updateAnimationSpeed","speed","_toggleAnimation","_onToggleMinify","_setFilterAnimationWindow","animationWindow","timeSliderOnChange","onToggleMinify","timeRangeSliderFieldsSelector","hideTimeTitle","currentTime","defaultTimeFormat","timeFormat","timezone","TopSectionWrapper","hoverColor","StyledTitle","StyledCenterBox","TimeWidgetTopFactory","yAxisFields","_setFilterPlotYAxis","yAxis","Clock","SelectTextBold","LineChart","showToken","IconRoundSmall","ArrowUp","Close","_animationController","FilterAnimationControllerFactory","AnimationController","filterIdx","intervalBins","getIntervalBins","x0","updateAnimation","ANIMATION_WINDOW","interval","_idx","x1","getTimelineFromFilter","setTimelineValue","LayerAnimationControllerFactory","setLayerAnimationTime","timeSteps","snapToMarks","getTimelineFromAnimationConfig","_document","_modalDialog","_deleteDataModal","_overwriteMapModal","_dataTableModal","_loadDataModal","_exportImageModal","_exportDataModal","_exportMapModal","_addMapStyleModal","_saveMapModal","_shareMapModal","DataTableModalStyle","palm","smallModalCss","LoadDataModalStyle","DefaultStyle","ModalContainerFactory","DeleteDatasetModal","OverWriteMapModal","DataTableModal","LoadDataModal","ExportImageModal","ExportDataModal","ExportMapModal","AddMapStyleModal","ModalDialog","SaveMapModal","ShareMapModal","_onKeyUp","_closeModal","addCustomMapStyle","fileList","loadFiles","processing","cleanupExportImage","exportData","exportMap","EXPORT_MAP_FORMATS","HTML","exportHtml","exportJson","provider","isPublic","overwrite","closeModal","toSave","exportFileToCloud","mapData","onSuccess","onError","_exportFileToCloud","_onSaveMap","resetProviderStatus","payload","loadCloudMap","currentModal","datasetKeyToRemove","editingDataset","template","modalProps","DATA_TABLE_ID","sortTableColumn","pinTableColumn","copyTableColumn","cssStyle","DELETE_DATA_ID","footer","onConfirm","_deleteDataset","confirmButton","negative","large","onFileUpload","_onFileUpload","onLoadCloudMap","_onLoadCloudMap","fileLoading","fileLoadingProgress","fileFormatNames","getFileFormatNames","fileExtensions","getFileExtensions","mapW","mapH","onUpdateImageSetting","_onExportImage","supportedDataTypes","EXPORT_DATA_TYPE_OPTIONS","applyCPUFilter","onChangeExportDataType","setExportDataType","onChangeExportSelectedDataset","setExportSelectedDataset","onChangeExportFiltered","setExportFiltered","_onExportData","keplerGlConfig","schema","getConfigToSave","onChangeExportMapFormat","setExportMapFormat","onEditUserMapboxAccessToken","setUserMapboxAccessToken","onChangeExportMapHTMLMode","setExportHTMLMapMode","_onExportMap","inputStyle","inputMapStyle","loadCustomMapStyle","_onAddCustomMapStyle","onSetMapInfo","_onOverwriteMap","onExport","_onShareMapUrl","_onCloseSaveMap","parentSelector","findDOMNode","_modal","_datasetLabel","StyledMsg","_ref$layers","currDatasetLayers","_dataTable","_cellSize","_canvas","_displayFormat","DEFAULT_SORT_COLUMN","dgSettings","StyledModal","DatasetCatalog","modalScrollBar","DatasetModalTab","StyledConfigureButton","DatasetTabsUnmemoized","activeDataset","DatasetTabs","DataTableModalFactory","TableContainer","DataTableConfig","_React$Component","showConfig","_ref2$dataId","_ref3$dataId","filterProps","displayFormat","columnStats","_datasets$dataId","showCalculate","datasetCellSizeCache","cellSizeCache","colIdx","renderedSize","text","cellFontSize","font","minCellSize","_this$props$dataId","_this$props2$dataId","_this$props3$dataId","formats","_this$props4","_this$props5","_this$props5$showTab","showTab","colMeta","Gear","onOpenConfig","onCloseConfig","pinnedColumns","sortOrder","sortColumn","hasStats","_fileUpload","_loadStorageMap","_modalTabs","_loadingDialog","StyledLoadDataModal","modalPadding","LoadDataModalFactory","ModalTabs","FileUpload","LoadStorageMap","loadingMethods","isCloudMapLoading","methods","getDefaultMethod","currentMethod","toggleMethod","ElementType","elementType","LOADING_METHODS","upload","storage","_cloudHeader","_cloudMaps","_useCloudListProvider2","_providerSelect","_flexContainer","useCloudListProvider","currentProvider","setProvider","isLoading","setIsLoading","maps","setMaps","_useState5","_useState6","setError","setProviderInfo","listMaps","then","onSelectMap","loadParams","FlexColContainer","CloudHeader","onBack","CloudMaps","ProviderSelect","StyledTileWrapper","primaryBtnBgd","selectBorderColorLT","transition","StyledBox","CenterVerticalFlexbox","StyledCloudName","StyledUserName","primaryBtnActBgd","LoginButton","Login","LogoutButton","Logout","NewTag","StyledWarning","span","errorColor","selectFontWeightBold","actionName","user","setUser","getUser","onLogin","_asyncToGenerator2","_regenerator","mark","_callee","_user","wrap","prev","next","login","sent","t0","stop","_callee2","_context2","abrupt","onLogout","_callee3","_context3","logout","isNew","CheckMark","_propTypes","ModalTab","textColorLT","StyledLoadDataModalTabItem","subtextColorLT","ModalTabItem","method","tabElementType","propTypes","func","isRequired","string","arrayOf","object","_imagePreview","ImageOptionList","ratio","resolution","StyledModalContent","EXPORT_IMG_RATIO_OPTIONS","SelectionButton","EXPORT_IMG_RESOLUTION_OPTIONS","available","getDataRowCount","selectedDataset","filtered","selectedData","fileCount","filteredIdxCPU","toLocaleString","toCPUFilter","_this$props$supported","dataType","StyledExportSection","_onSelectDataset","StyledType","FileType","ext","StyledFilteredOption","_components","_exportHtmlMap","_exportJsonMap","NO_OP","ExportMapModalFactory","ExportHtmlMap","ExportJsonMap","ExportMapModalUnmemoized","_EXPORT_MAP_FORMATS$H","_ref$config","_ref$onChangeExportMa","_ref$onChangeExportMa2","_ref$onEditUserMapbox","_ref$options","StyledExportMapSection","EXPORT_MAP_FORMAT_OPTIONS","ExportMapStyledExportSection","inputColor","StyledInput","inputPadding","titleColorLT","inputBoxHeight","BigStyledTile","token","userMapboxToken","ExportMapLink","EXPORT_HTML_MAP_DOC","EXPORT_HTML_MAP_MODES_DOC","EXPORT_HTML_MAP_MODE_OPTIONS","alt","_reactJsonPretty","_reactCopyToClipboard","StyledJsonExportSection","ExportJsonMapUnmemoized","setCopy","ADD_DATA_TO_MAP_DOC","json","CopyToClipboard","onCopy","_reactLifecyclesCompat","_maplibre","_maplibreGl","ErrorMsg","PreviewMap","StyledPreviewImage","modalImagePlaceHolder","InlineLink","reRenderKey","previousToken","mapRef","getMap","on","getStyle","loadMapStyleJson","loadMapStyleError","_this3","accessToken","mapProps","baseApiUrl","mapboxAccessToken","mapLib","preserveDrawingBuffer","StyledModalVerticalPanel","StyledModalSection","InputLight","StyledMapContainer","el","polyfill","_imageModalContainer","_statusPanel","StyledSaveMapModal","nop","TEXT_AREA_LIGHT_STYLE","resize","MapInfoPanel","characterLimits","_mapInfo$description","_mapInfo$title","providerMapInfoPanel","FlexContainer","TextAreaLight","rows","StyledModalInputFootnote","MAP_INFO_CHARACTER","SaveMapHeader","STYLED_EXPORT_SECTION_STYLE","PROVIDER_MANAGER_URL_STYLE","textDecoration","_ref3$characterLimits","isProviderLoading","providerError","_ref3$onUpdateImageSe","confirm","getManagementUrl","MAP_THUMBNAIL_DIMENSION","showDimension","providerLoading","UploadAnimation","providerIcon","ModalFooter","cancel","_ref3$isProviderLoadi","_ref3$onExport","_ref3$providerError","_ref3$successInfo","successInfo","shareUrl","folderLink","StyledShareMapModal","ShareMapHeader","StyledInnerDiv","providerShareMap","SharingUrl","UNDERLINE_TEXT_DECORATION_STYLE","StyledInputLabel","StyleSharingUrl","_ref$message","_mapViewStateContext","CLASS_FILTER","DOM_FILTER_FUNC","node","PlotContainerFactory","StyledPlotContainer","_props","imageSize","getScaleFromImageSize","imageW","imageH","mapStyleSelector","mapScaleSelector","bottomMapStyle","scaleMapStyleByResolution","topMapStyle","isStyleLoaded","_retrieveNewScreenshot","plottingAreaRef","_this$props$exportIma","escapeXhtmlForWebpack","convertToPng","err","enableErrorNotification","exportImageError","_onMapRender","prevProps","_this$props$splitMaps","layerData","newMapState","Math","log2","center","renderedLayers","shouldRenderLayer","findMapBounds","centerAndZoom","getCenterAndZoomFromBounds","longitude","latitude","scaledMapStyleSelector","MapComponent","onMapRender","glOptions","useDevicePixels","MapViewStateContextProvider","_notificationItem","NotificationPanelContent","NotificationPanelFactory","NotificationItem","NotificationPanelUnmemoized","globalNotifications","topic","DEFAULT_NOTIFICATION_TOPICS","global","notification","GeocoderPanel","transitionDuration","geoItem","_geoItem$center","lon","lat","bbox","removeGeocoderDataset","getUpdateVisDataPayload","generateConfig","GEOCODER_GEO_OFFSET","pitch","bearing","transitionInterpolator","_core","FlyToInterpolator","StyledGeocoderPanel","test","_geocoder","onSelected","onDeleteMarker","removeMarker","_processors","ICON_LAYER","GEOCODER_ICON_COLOR","lng","GEOCODER_ICON_SIZE","geocoderTop","geocoderRight","geocoderWidth","generateGeocoderDataset","processRowObject","lt","ln","info","keepExistingConfig","_geocoding","_viewportMercatorProject","COORDINATE_REGEX","RegExp","PLACEHOLDER","debounceTimeout","testForCoordinates","query","trim","tokens","StyledContainer","geocoderInputHeight","dropdownWapperMargin","dropdownListItem","textTruncate","dropdownListHighlightBg","_ref$className","_ref$limit","limit","_ref$timeout","timeout","_ref$formatItem","formatItem","place_name","viewport","pointZoom","inputValue","setInputValue","showResults","setShowResults","showDelete","setShowDelete","_useState7","_useState8","setResults","_useState9","_useState10","selectedIndex","setSelectedIndex","client","queryString","resultCoordinates","_resultCoordinates","clearTimeout","setTimeout","response","forwardGeocode","send","console","log","onFocus","onItemSelected","newViewport","WebMercatorViewport","gotoViewport","fitBounds","onMarkDeleted","DOM_VK_UP","DOM_VK_DOWN","Search","_injector","_sidePanelTitle","_effectList","_effectTypeSelector","StyledEffectPanelContainer","StyledEffectPanel","StyledEffectPanelHeader","effectPanelPaddingTop","effectPanelPaddingSide","effectPanelWidth","StyledEffectPanelContent","extended","EffectManagerFactory","EffectList","SidePanelTitle","EffectTypeSelector","withState","demo","keplerGl","effects","effectOrder","addEffect","updateEffect","removeEffect","reorderEffect","typeSelectorOpened","setTypeSelectorOpened","effectOptions","hasShadow","LIGHT_AND_SHADOW_EFFECT","EFFECT_DESCRIPTIONS","desc","onAddEffect","onTypeSelectOpen","onTypeSelectClose","onOpen","StyledSidePanelTitle","titleTextColor","sidePanelTitleFontsize","sidePanelTitleLineHeight","PanelHeaderRow","_classnames3","_utilities","_sortable","_effectPanel","Container","SortableStyledItem","EffectListFactory","EffectPanel","panelProps","_useSortable","useSortable","SORTABLE_EFFECT_TYPE","parent","SORTABLE_EFFECT_PANEL_TYPE","attributes","setNodeRef","isDragging","sortableEffectItem","staticEffectItem","CSS","Transform","effectsToShow","effectId","findById","sidePanelDndItems","SortableContext","strategy","verticalListSortingStrategy","findIndex","_templateObject10","_templateObject11","_templateObject12","_effectTimeConfigurator","_compactColorPicker","StyledEffectConfigurator","effectConfiguratorMargin","effectConfiguratorPadding","PanelLabelWrapper","StyledColorSelectorWrapper","StyledVerticalSeparator","inputBgd","_props$marginBottom","marginBottom","StyledConfigSection","SectionTitle","effectPanelTextSecondary1","SectionSubTitle","effectPanelTextSecondary2","StyleSliderWrapper","RegularOuterWrapper","RegularSectionTitleWrapper","RegularSliderWrapper","COMMON_SLIDER_PROPS","EffectConfiguratorFactory","EffectTimeConfigurator","updateEffectConfig","renderShadowEffectConfigurator","parameters","sliderProps","propName","onTimeParametersChanged","timestamp","timeMode","colorPickerProps","onSetColor","ArrowDownSmall","renderPostProcessingEffectConfigurator","_effect$deckEffect","uniforms","deckEffect","module","parameterDescriptions","getParameterDescriptions","flatParameterDescriptions","defaultValue","_description$label","controls","paramName","uniform","_desc$min","_desc$max","_desc$min2","_desc$min3","_desc$max2","_desc$min4","prevValue","newValue","isNumber","min","max","softMin","softMax","parameterIndex","control","_momentTimezone","_suncalc","_checkbox","_button","_timezoneSelector","_effectTimeSlider","_effectTimeSelector","SliderWrapper","StyledButton","effectPanelTextMain","inputBgdHover","StyledRadio","StyledEffectTimeConfigurator","StyledDatePicker","WithIconWrapper","StyledExtraIcon","TextBlock","getTimestamp","dateStr","timeStr","curr","tz","utc","getDayRatio","date","hours","minutes","EffectTimeConfiguratorFactory","TimezoneSelector","EffectTimeSlider","EffectTimeSelector","mapStateLens","_timezone","names","DEFAULT_TIMEZONE","_useMemo","currentMoment","dayProgress","Date","setFullYear","year","month","setHours","toDate","_useMemo2","datePickerDate","fullDate","formattedTime","formattedDate","dayTimeProgress","timeSliderConfig","times","getTimes","dawn","sunrise","sunset","dusk","sunriseTime","sunsetTime","onTimeSliderChange","floor","newFormattedTime","newTimestamp","setDate","newDate","newFormattedDate","setTime","newTime","setTimezone","newTimezone","setCurrentDateTime","formatShortWeekday","getDay","disableDateTimePick","LIGHT_AND_SHADOW_EFFECT_TIME_MODES","pick","LocationMarker","minDetail","Calendar","Globe","animation","_effectTypeDropdownList","_effectTypeListItem","DropdownWrapper","StyledEffectTypeSelector","secondaryBtnBgd","primaryBtnRadius","primaryBtnFontSizeDefault","secondaryBtnBgdHover","secondaryBtnActColor","EffectTypeSelectorFactory","EffectTypeListItem","EffectTypeDropdownList","DUMMY_ITEM_ID","DropDownWrapperComponent","_useDndLayers2","_useDndEffects2","DragItem","radioButtonRadius","DndContextFactory","LayerPanelOverlay","visStateLens","_useDndLayers","activeLayer","onLayerDragStart","onDragStart","onLayerDragEnd","onDragEnd","_useDndEffects","onEffectDragStart","onEffectDragEnd","dndModifiers","DND_EMPTY_MODIFIERS","DND_MODIFIERS","_event$active$data","_event$active$data$cu","activeType","SORTABLE_LAYER_TYPE","_event$active$data2","_event$active$data2$c","DragOverlay","dropAnimation","_reactRedux","useDispatch","setActiveLayer","newActiveLayer","_over$data","_over$data$current","_over$data$current$in","_over$data$current2","over","activeLayerId","overType","DROPPABLE_MAP_CONTAINER_TYPE","newLayerOrder","reorderLayerOrder","reorderLayer","SORTABLE_SIDE_PANEL_TYPE","activeEffect","setActiveEffect","newActiveEffect","activeEffectId","reorderEffectOrder","VisConfigByFieldSelectorFactory","_this$props$scaleOpti","_updateVisByField","LayerErrorMessageContent","_reactOnclickoutside","ClickOutsideCloseDropdown","StyledPanelDropdown","_filterPanelWithFieldSelect","TimeRangeFilterPanelFactory","FieldPanelWithFieldSelect","TimeRangeFilter","StyledFieldPanelWithFieldSelect","onSetFilter","panelActions","_singleSelectFilter","SingleSelectFilterPanelFactory","_multiSelectFilter","MultiSelectFilterPanelFactory","MultiSelectFilterComponent","_rangeFilter","RangeFilterPanelFactory","RangeFilterComponent","_polygonFilter","_filterPanelHeader","PolygonFilterPanelFactory","FilterPanelHeader","PolygonFilter","filterDatasets","onSetLayers","featureType","StyledFilterContent","setLayers","setNewLayers","newLayers","selectedLayers","_filter$layerId","layerFilter","isAlreadySelected","searchOptions","searchStr","_l$config","_l$config$label","indexOf","_brushConfig","_tooltipConfig","InteractionPanelFactory","INTERACTION_CONFIG_ICONS","Messages","brush","Crosshairs","TooltipConfig","BrushConfig","_ref$interactionConfi","interactionConfigIcons","setIsConfigAction","togglePanelActive","toggleEnableConfig","_chickletedInput","_tippyTooltip","ChickletAddonWrapper","ChickletAddon","StyledPopover","hashStyles","IconDiv","status","tooltipVerticalLineColor","StyledTag","TooltipChicklet","_this$node","contains","handleClickOutside","fieldToShow","formatLabels","getFormatLabels","hasFormat","fl","getFormatValue","hashStyle","Translate","ChickletButton","formatLabel","getFormatTooltip","Hash","_mapLayerGroupColorPicker","StyledLayerGroupItem","LayerLabel","PanelLabelBold","LayerGroupItemFactory","LayerGroupColorPicker","_ref$isVisibilityTogg","_ref$isMoveToTopAvail","_ref$isColorPickerAva","onVisibilityToggle","onMoveToTopToggle","flush","marginLeft","StyledOverwriteMapModal","CONFIRM_BUTTON","OverwriteMapModalFactory","OverwriteMapModal","_errorBoundary","isExpanded","StyledStorageHeader","StyledBackBtn","LINK_STYLE","Title","managementUrl","cloudHeader","_cloudItem","StyledSpinner","StyledFlexContainer","vis","CloudItem","_moment","MapIcon","Base","viewBox","fill","PrivacyBadge","privateMap","StyledVisualizationItem","_vis$description","thumbnailStyle","backgroundImage","thumbnail","role","updatedAt","fromNow","_effectPanelHeader","_effectConfigurator","EffectPanelFactory","EffectPanelHeader","EffectConfigurator","isEnabled","isJsonEditorActive","sortingAllowed","effectPanel","onToggleEnabled","_toggleEnabled","onRemoveEffect","_removeEffect","_toggleConfigActive","showSortHandle","_updateEffectConfig","bool","_defaultEffectIcons","enableConfig","disableConfig","defaultEffectIcons","LightAndShadowEffectIcon","POSTPROCESSING_EFFECTS","ink","InkEffectIcon","brightnessContrast","BrightnessContrastEffectIcon","hueSaturation","HueSaturationEffectIcon","vibrance","VibranceEffectIcon","sepia","SepiaEffectIcon","dotScreen","DotScreenEffectIcon","colorHalftone","ColorHalftoneEffectIcon","noise","NoiseEffectIcon","triangleBlur","TriangleBlurEffectIcon","zoomBlur","ZoomBlurEffectIcon","tiltShift","TiltShiftEffectIcon","edgeWork","EdgeWorkEffectIcon","vignette","VignetteEffectIcon","magnify","MagnifyEffectIcon","hexagonalPixelate","HexagonalPixelateEffectIcon","effectPanelHeaderHeight","HeaderActionSection","StyledPanelHeaderHiddenActions","EffectPanelHeaderActionSectionFactory","_props$actionIcons","effectActionItems","isHidden","tooltipType","classNames","testId","StyledEffectTitleSection","IconPlaceholder","EffectIconWrapper","EffectPanelHeaderFactory","EffectPanelHeaderActionSection","_props$showSortHandle","_description","EffectIcon","getValue","StyledItemSelector","defaultTimezones","showArrow","TimeSliderWrapper","TopRowWrapper","effectPanelElementColorHovered","effectPanelElementColor","effectPanelElementColorActive","effectPanelElementColorSun","BottomRowWrapper","BackgroundBlock","StyledBottomIcon","RangeSliderWrapper","Text","MODES","getUIBlocks","updatedBlocks","start","end","block","existingBottomBlocks","TopRowIcon","Sun","Moon","existingBlock","BottomRowIcon","Sunrise","Sunset","EffectTimeSliderFactory","rangeSliderValue","uiBlocks","rangeSliderProps","StyledEffectTimeSelector","StyledLabel","effectPanelElementColorSelected","timeOptions","m","utcOffset","hour","minute","second","millisecond","out","add","EffectTimeListItem","StyledTimePicker","disableClock","EffectTimeDropdownList","EffectTimeSelectorFactory","_e$target","panelDropdownScrollBar","panelBorderRadius","StyledDropdownButtonWrapper","DEFAULT_OFFSET","SingleColorPickerDropdown","_ref$offset","onSelectColorCb","SingleColorPalette","_React$useState","_React$useState2","isColorPickerOpened","setIsColorPickerOpened","hexColor","colorBlockStyle","borderRadius","toggleDropdown","closeDropdown","EffectTypeDropdownListFactory","effectTypeIconBgHoverColor","effectTypeIconSizeL","StyledAddButton","StyledPlaceholderButton","effectPanelAddEffectFontFamily","EffectTypeListItemFactory","kebab","replace","$","ofs","EffectControlFactory","effectsIcon","MagicWand","EffectControl","_mapControls$effect","_mapControls$effect2","FeatureFlagsContext","_fieldToken","_container","_keplerGl","_layerAnimationController","_filterAnimationController","_colorRangeSelector","_layerPanel","_singleColorPalette","_exportNames","_datasetTitle","_datasetInfo","_mapPopover","_mapControl","_animationControl","_playbackControls","_windowActionControl","_playControl","_resetControl","_speedControl","_animationWindowControl","_animationSpeedSlider","_rangePlot","_histogramPlot","_lineChart","_rangeBrush","_timeSliderMarker","_timeRangeSliderTimeTitle","_iconButton","_timeWidget","_editor","_cloudTile","_fileDrop","_uploadButton","_effectControl","_loadingSpinner","_progressBar","_fileUploadProgress","_slider","_sliderHandle","_sliderBarHandle","_headerCell","_optionDropdown","_mapLayerSelector2","_verticalToolbar","_common","_useFeatureFlags","appInjector","FieldToken","FieldListItemFactory","FieldListItemFactoryFactory","HeaderActionWrapper","dataTestId","panelHeaderIconActive","panelHeaderIcon","panelHeaderIconHover","PanelHeaderActionFactory","PanelHeaderActionUnmemoized","_ref$active","_ref$providers","currentCloudProvider","setCurrentCloudProvider","CloudProviderContext","StyledPanelTitle","injector","cache","fac","factory","ERROR_MSG","noDep","MissingComp","instances","dep","provide","replacement","typeCheckRecipe","recipes","provided","inj","recipe","_inj","flattenDeps","ij","lenses","identity","totalState","lens","selector","wrongRecipeType","notFunc","allDeps","addToDeps","_recipe","SourceDataSelectorFactory","DatasetItem","dsOptions","_ref2$onClick","_ref2$onClickSquare","DatasetTagWrapper","UpdateTableColor","_2","DatasetColorPicker","OpacitySliderWrapper","OPACITY_SLIDER_PROPS","slice","join","ColorSelectorInput","inputPlaceholderColor","InputBoxContainer","ColorSelectorFactory","showDropdown","isInteger","_closePanelDropdown","_getEditing","editing","colorSet","_setColor","round","currentEditing","cSet","_showDropdown","_onSelectColor","_onSelectOpacity","PaletteWrapper","PaletteContainer","ColorPalette","_reactColor","StyledPicker","secondaryInputBgd","PRESET_COLORS","CustomPicker","picker","boxSizing","pickerStyle","pickerStyleSelector","SketchPicker","presetColors","styles","disableAlpha","SourceDataCatalogWrapper","SourceDataCatalogFactory","DatasetTitle","DatasetInfo","_ref$showDeleteDatase","StyledFilterHeader","$labelRCGColorValues","createLinearGradient","StyledChildrenContainer","FilterPanelHeaderFactory","FieldPanelWithFieldSelectFactory","FilterPanelWithFieldSelect","_ref$panelActions","onFieldSelector","onSourceDataSelector","fieldValue","getSupportedFilterFields","supportedFilterTypes","panelAction","freeze","_lodash2","MapViewStateContext","createContext","getInternalViewState","setInternalViewState","viewState","viewStates","setViewStates","primaryState","_mapState$splitMapVie","startsWith","hasChanged","s","pickViewportPropsFromMapState","_viewStates$index","newViewState","prevViewStates","nextViewStates","_errorDisplay","StyledUploader","StyledMapIcon","StyledSvg","svg","Line","y1","x2","y2","StyledLayerConfigGroupAction","StyledLayerConfigGroup","layerConfigGroupPaddingLeft","layerConfigGroupMarginBottom","StyledConfigGroupHeader","ConfigGroupContent","LayerConfigGroupLabelFactory","StyledLayerConfigGroupLabel","layerConfigGroupLabelBorderLeft","layerConfigGroupLabelMargin","layerConfigGroupLabelPadding","layerConfigGroupLabelLabelMargin","LayerConfigGroupFactory","LayerConfigGroupLabel","_ref2$IconComponent","VertThreeDots","toggleCollapsed","onToggleCollapsed","INITIAL_LAYERS_TO_SHOW","LayerListFactory","layerActions","sortableLayerItem","staticLayerItem","_props$isSortable","layersToShow","layerIcon","requireData","showRemoveLayer","getBorderCss","StyledLayerPanelHeader","layerPanelHeaderHeight","warning","HeaderLabelSection","isEditingLabel","noOp","LayerLabelEditor","onEdit","layerTitleEditor","LayerTitleSectionFactory","StyledLayerTitleSection","LayerPanelHeaderActionSectionFactory","duplicate","crosshairs","resetIsValid","StyledHeaderWaring","HeaderWarning","WarningSign","Reset","LayerPanelHeaderFactory","LayerTitleSection","LayerPanelHeaderActionSection","setIsEditingLabel","_orderByList","_orderByDataset","PanelViewListToggleContainer","PanelViewListToggleWrapper","StyledToggleOption","TOGGLE_OPTIONS","PanelViewListToggleFactory","ToggleOption","opt","StyledDatasetSection","AddDataButtonFactory","AddDataButton","isInactive","DatasetSectionFactory","datasetCount","NewFilterPanelFactory","DEFAULT_TIME_FORMAT","bins","plotType","lineChart","enlargedHistogram","minified","TimeRangeFilterFactory","_core2","MAP_STYLE","pointerEvents","LOCALE_CODES_ARRAY","LOCALE_CODES","StyledMap","_ref$mixBlendMode","mixBlendMode","MapLibreLogo","aria-label","StyledDroppable","isOver","dndOverBackgroundColor","Droppable","_useDroppable","useDroppable","StyledDatasetAttributionsContainer","isPalm","DatasetAttributions","datasetAttributions","Attribution","_ref4$showMapboxLogo","showMapboxLogo","_ref4$showOsmBasemapA","showOsmBasemapAttribution","hasMobileWidth","StyledAttrbution","EndHorizontalFlexbox","MapContainerFactory","MapPopover","showMapboxAttribution","splitMapSelector","splitMapIndexSelector","getMapLayersFromSplitMaps","layersSelector","layerDataSelector","mapLayersSelector","prepareLayersToRender","prepareLayersForDeck","filtersSelector","polygonFiltersSelector","featuresSelector","polygonFilters","featureCollectionSelector","selectedFeatureSelector","collection","_props$generateMapbox","generateMapboxLayers","layerOrderSelector","layersToRenderSelector","generateMapboxLayerMethodSelector","generateMapboxLayerMethod","mapStyleTypeSelector","mapStyleBackgroundColorSelector","NO_MAP_ID","onLayerClick","onLayerHover","_this$props2$index","update","previousLayers","_updateMapboxLayers","isStyleUsingMapboxTiles","onMapStyleLoaded","mapbox","_onMapboxStyleUpdate","gl","setLayerBlending","layerMessage","errorMessageFull","lastShown","_deckGLErrorsElapsed","now","THROTTLE_NOTIFICATION_TIME","extraLayerMessage","_topMostLayer$props","topMostLayer","errorNotification","_this$context","onViewPortChange","_onViewportChangePropagateDebounced","normalizeEvent","toggleMapControl","_this$_map","_this$_map2","off","_deck","viewIndex","_this$_deck","_this$_deck$viewManag","_this$_deck$viewManag2","viewManager","_viewports","_this$props$visState$","hoverInfo","_this$props4$visState","clicked","_this$props4$visState2","mousePos","mousePosition","getLayerHoverProp","pinnedPosition","layerPinnedProp","_viewport","getViewportFromMapState","lngLat","_getHoverXY","primaryData","commonProp","_onCloseMapPopover","canvas","setFeatures","screenCoord","project","layersForDeck","_this$context2","primaryMap","deckRenderCallbacks","generateDeckGLLayers","isInteractive","_ref6$active","editorMenuActive","isEditorDrawingMode","internalViewState","internalMapState","editorFeatureSelectedIndex","selectedPolygonIndexSelector","generateDeckGLLayersMethod","computeDeckLayers","deckGlLayers","editorInfo","selectedFeatureIndexes","selectedFeatureIndexArraySelector","_onLayerHover","onSetLayerDomain","_onLayerSetDomain","extraDeckParams","getTooltip","getCursor","editorCursor","_isOKToRenderEffects","computeDeckEffects","views","MapView","legacyMeterSizes","allDeckGlProps","pickingRadius","DEFAULT_PICKING_RADIUS","onDeckRender","_onMouseMoveDebounced","onLoad","onDeckLoad","controller","doubleClickZoom","initialViewState","onBeforeRender","_onBeforeRender","_onViewportChange","onHover","_onLayerHoverDebounced","srcEvent","_onDeckError","comp","deck","onWebGLInitialized","_onDeckInitialized","onAfterRender","onDeckAfterRender","mapboxLayers","mapboxLayersSelector","updateMapboxLayers","_mapStyle$mapStyles","_this$context3","_mapStyle$bottomMapSt","_this$props6","_this$props6$MapCompo","_this$props6$datasetA","_this$props6$containe","layersForDeckSelector","currentStyle","hasGeocoderLayer","_renderDeckOverlay","EMPTY_MAPBOX_STYLE","_setMapboxMap","mapControlTop","togglePerspective","toggleSplitMap","_handleMapToggleLayer","_toggleMapControl","toggleSplitMapViewport","setEditorMode","setLocale","onToggleEditorVisibility","toggleEditorVisibility","_renderMapboxOverlays","deleteFeature","setPolygonFilterLayer","_renderMapPopover","mapContent","_renderMap","styleSelector","onContextMenu","StyledTable","table","negativeBtnActBgd","StyledDivider","Row","deltaValue","match","asImg","notNullorUndefined","charAt","EntryInfo","EntryInfoRow","valueAt","displayValue","getTooltipDisplayValue","displayDeltaValue","getTooltipDisplayDeltaValue","CellInfo","colorValue","elevationValue","colorMeasure","sizeMeasure","points","hasFieldsToShow","fieldValues","labelMessage","any","oneOfType","StyledMapControlPanel","mapPanelBackgroundColor","StyledMapControlPanelContent","dropdownScrollBar","StyledMapControlPanelHeader","mapPanelHeaderBackgroundColor","StyledMapControlPanelHeaderSplitViewportsTools","StyledSBCenterFlexbox","StyledDisableableText","StyledDisableableSwitch","_ref$scale","isZoomLocked","onUnlockViewportChange","onSyncZoomChange","paddingBottom","verticalAlign","Outer","MapsLayoutFactory","NotificationItemContentBlock","count","NotificationCounter","NotificationItemContent","NotificationIcon","icons","NotificationMessage","_reactMarkdown","source","renderers","LinkRenderer","DeleteIcon","notificationPanelItemWidth","notificationPanelItemHeight","Info","infoIcon","Warning","warningIcon","errorIcon","successIcon","EXPORT_IMG_RATIOS","CUSTOM","StyledLoadingDialog","_ref$size","StyledProviderSection","_ref$cloudProviders","providerSelect","exportIntraSectionMargin","StyledExportLink"],"mappings":"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","file":"0.bundle.js","sourcesContent":["// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useState, useCallback, useEffect, useRef} from 'react';\nimport styled from 'styled-components';\n\nimport {PanelLabel, SidePanelSection} from '../../common/styled-components';\nimport RangeSliderFactory from '../../common/range-slider';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {KeyEvent} from '@kepler.gl/constants';\nimport {Checkbox} from '../..';\nimport {Layer, LayerBaseConfig} from '@kepler.gl/layers';\nimport {isInRange, clamp} from '@kepler.gl/utils';\n\ntype LazyInputProps = {\n  value: string | [string, string];\n  name: string;\n  onChange: (n: string | [string, string], v?: string | [string, string]) => void;\n};\n\ntype CustomInputProps = {\n  value: string | [string, string];\n  isRanged: boolean;\n  onChangeCustomInput: (v: [string, string]) => void;\n};\n\ntype VisConfigSliderProps = {\n  layer: Layer;\n  property: string;\n  onChange: (v: Record<string, number | string | number[] | string[]>) => void;\n  label?: string | ((c: LayerBaseConfig) => string);\n  range: [number, number];\n  step?: number;\n  isRanged: boolean;\n  disabled?: boolean;\n  inputTheme?: string;\n  allowCustomValue?: boolean;\n};\n\nconst InputWrapper = styled.div`\n  display: flex;\n  line-height: 12px;\n  margin-bottom: 12px;\n`;\n\nconst CustomInputWrapper = styled.div`\n  display: flex;\n`;\n\nconst CustomInputLabel = styled.label`\n  color: ${props => props.theme.textColor};\n  font-weight: 500;\n  letter-spacing: 0.2px;\n  font-size: ${props => props.theme.layerConfigGroupLabelLabelFontSize};\n  padding-right: 15px;\n\n  &:last-child {\n    position: absolute;\n    right: 0;\n    padding: 0;\n  }\n`;\n\nconst RangeInput = styled.input`\n  ${props => props.theme.input};\n  font-size: ${props => props.theme.sliderInputFontSize};\n  width: 44px;\n  overflow: auto;\n  height: 20px;\n  margin-top: 5px;\n`;\n\nconst LazyInput: React.FC<LazyInputProps> = ({value, onChange, name}) => {\n  const [stateValue, setValue] = useState(value);\n  const inputRef = useRef(null);\n  useEffect(() => {\n    setValue(value);\n  }, [value]);\n\n  const onKeyDown = useCallback(\n    e => {\n      switch (e.keyCode) {\n        case KeyEvent.DOM_VK_ENTER:\n        case KeyEvent.DOM_VK_RETURN:\n          onChange(stateValue);\n          if (inputRef !== null) {\n            // @ts-ignore\n            inputRef?.current.blur();\n          }\n          break;\n        default:\n          break;\n      }\n    },\n    [onChange, stateValue]\n  );\n\n  const _onChange = useCallback(e => setValue(e.target.value), [setValue]);\n  const onBlur = useCallback(() => onChange(name, stateValue), [onChange, name, stateValue]);\n\n  return (\n    <RangeInput\n      type=\"number\"\n      ref={inputRef}\n      value={stateValue}\n      onChange={_onChange}\n      onBlur={onBlur}\n      onKeyDown={onKeyDown}\n      id={name}\n    />\n  );\n};\n\nconst CustomInput: React.FC<CustomInputProps> = ({isRanged, value, onChangeCustomInput}) => {\n  const onChangeInput = useCallback(\n    (name, v) => {\n      if (isRanged) onChangeCustomInput(name === 'value0' ? [v, value[1]] : [value[0], v]);\n      else onChangeCustomInput(v);\n    },\n    [isRanged, value, onChangeCustomInput]\n  );\n\n  return (\n    <CustomInputWrapper>\n      {isRanged ? (\n        <InputWrapper>\n          <CustomInputLabel>\n            min\n            <LazyInput name=\"value0\" value={value[0]} onChange={onChangeInput} />\n          </CustomInputLabel>\n          <CustomInputLabel>\n            max\n            <LazyInput name=\"value1\" value={value[1]} onChange={onChangeInput} />\n          </CustomInputLabel>\n        </InputWrapper>\n      ) : (\n        <InputWrapper>\n          <LazyInput name=\"value\" value={value} onChange={onChangeInput} />\n        </InputWrapper>\n      )}\n    </CustomInputWrapper>\n  );\n};\n\nVisConfigSliderFactory.deps = [RangeSliderFactory];\n\nexport default function VisConfigSliderFactory(RangeSlider: ReturnType<typeof RangeSliderFactory>) {\n  const VisConfigSlider: React.FC<VisConfigSliderProps> = ({\n    layer: {config},\n    property,\n    label,\n    range,\n    step,\n    isRanged,\n    allowCustomValue,\n    disabled,\n    onChange,\n    inputTheme\n  }) => {\n    const value = config.visConfig[property];\n    const [custom, setCustom] = useState(false || !isInRange(value, range));\n\n    const onChangeCheckbox = useCallback(() => {\n      if (custom) {\n        // we are swithcing from custom to not custom\n        // adjust value to range\n        const adjustedValue = isRanged\n          ? [clamp(range, value[0]), clamp(range, value[1])]\n          : clamp(range, value);\n        onChange({[property]: adjustedValue});\n      }\n      setCustom(!custom);\n    }, [onChange, property, isRanged, value, range, custom, setCustom]);\n\n    return (\n      <SidePanelSection disabled={Boolean(disabled)}>\n        {label ? (\n          <PanelLabel>\n            {typeof label === 'string' ? (\n              <FormattedMessage id={label} />\n            ) : typeof label === 'function' ? (\n              <FormattedMessage id={label(config)} />\n            ) : (\n              <FormattedMessage id={`property.${property}`} />\n            )}\n          </PanelLabel>\n        ) : null}\n\n        {allowCustomValue ? (\n          <InputWrapper>\n            <CustomInputLabel>custom input</CustomInputLabel>\n            <Checkbox id={`property.${property}`} checked={custom} onChange={onChangeCheckbox} />\n          </InputWrapper>\n        ) : null}\n\n        {!custom ? (\n          <RangeSlider\n            range={range}\n            value0={isRanged ? value[0] : range[0]}\n            value1={isRanged ? value[1] : value}\n            step={step}\n            isRanged={Boolean(isRanged)}\n            onChange={v => onChange({[property]: isRanged ? v : v[1]})}\n            inputTheme={inputTheme}\n            showInput\n          />\n        ) : (\n          <CustomInput\n            isRanged={isRanged}\n            value={value}\n            onChangeCustomInput={v => onChange({[property]: v})}\n          />\n        )}\n      </SidePanelSection>\n    );\n  };\n\n  return VisConfigSlider;\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport InfoHelperFactory from '../../common/info-helper';\nimport Switch from '../../common/switch';\nimport {SidePanelSection, PanelLabel} from '../../common/styled-components';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {capitalizeFirstLetter} from '@kepler.gl/utils';\nimport {Layer} from '@kepler.gl/layers';\n\ntype VisConfigSwitchProps = {\n  layer: Layer;\n  property: string;\n  onChange: (v: Record<string, boolean>) => void;\n  label?: string;\n  description?: string;\n  disabled?: boolean;\n};\n\nconst StyledVisConfigSwitch = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  .vis-config-switch__title {\n    display: flex;\n  }\n`;\n\nVisConfigSwitchFactory.deps = [InfoHelperFactory];\nfunction VisConfigSwitchFactory(InfoHelper: ReturnType<typeof InfoHelperFactory>) {\n  const VisConfigSwitch: React.FC<VisConfigSwitchProps> = ({\n    layer: {id, config},\n    property,\n    onChange,\n    label,\n    description,\n    disabled\n  }) => (\n    <SidePanelSection disabled={Boolean(disabled)}>\n      <StyledVisConfigSwitch className=\"vis-config-switch\">\n        <div className=\"vis-config-switch__title\">\n          {label ? (\n            <PanelLabel>\n              {(label && <FormattedMessage id={label} />) || capitalizeFirstLetter(property)}\n            </PanelLabel>\n          ) : null}\n          {description ? (\n            <div>\n              <InfoHelper description={description} id={`${id}-${property}-description`} />\n            </div>\n          ) : null}\n        </div>\n        <div className=\"vis-config-switch__switch\">\n          <Switch\n            checked={config.visConfig[property]}\n            id={`${id}-${property}-switch`}\n            onChange={() => onChange({[property]: !config.visConfig[property]})}\n          />\n        </div>\n      </StyledVisConfigSwitch>\n    </SidePanelSection>\n  );\n\n  return VisConfigSwitch;\n}\nexport default VisConfigSwitchFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useCallback, useMemo} from 'react';\nimport styled from 'styled-components';\n\nimport {ColumnPairs, LayerColumns, LayerBaseConfig} from '@kepler.gl/layers';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {FieldPair, Field} from '@kepler.gl/types';\nimport {toArray} from '@kepler.gl/utils';\n\nimport ColumnSelectorFactory from './column-selector';\nimport {MinimalField} from '../../common/field-selector';\nimport {PanelLabel, SidePanelSection} from '../../common/styled-components';\n\nexport type LayerColumnConfigProps<FieldOption extends MinimalField> = {\n  columns: LayerColumns;\n  fields: FieldOption[];\n  assignColumnPairs: (key: string, pair: string) => LayerColumns;\n  assignColumn: (key: string, field: FieldOption) => LayerColumns;\n  updateLayerConfig: (newConfig: Partial<LayerBaseConfig>) => void;\n  columnPairs?: ColumnPairs | null;\n  fieldPairs?: FieldPair[];\n  columnLabels?: Record<string, string>;\n};\n\nexport type EnhancedFieldPair = {\n  name: string;\n  type: 'point';\n  pair: FieldPair['pair'];\n};\n\nconst TopRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\n/**\n * only provide suggested field pairs if there is a match,\n * otherwise the user can select a suggested field pair that will create invalid columns and a hard crash\n */\nfunction getValidFieldPairsSuggestionsForColumn(\n  enhancedFieldPairs: EnhancedFieldPair[] | null,\n  columnPairs: ColumnPairs | null | undefined,\n  columnKey: string\n): EnhancedFieldPair[] | null {\n  if (enhancedFieldPairs && columnPairs?.[columnKey]) {\n    const columnPair = columnPairs[columnKey];\n    const matchingFieldPairs = enhancedFieldPairs.filter(({pair}) => {\n      return toArray(columnPair.fieldPairKey).some(fieldPairKey =>\n        pair.hasOwnProperty(fieldPairKey)\n      );\n    });\n    return matchingFieldPairs.length > 0 ? matchingFieldPairs : null;\n  } else {\n    return null;\n  }\n}\n\nLayerColumnConfigFactory.deps = [ColumnSelectorFactory];\n\nfunction LayerColumnConfigFactory(ColumnSelector: ReturnType<typeof ColumnSelectorFactory>) {\n  const LayerColumnConfig: React.FC<LayerColumnConfigProps<Field>> = ({\n    columnPairs,\n    fieldPairs,\n    columns,\n    columnLabels,\n    fields,\n    updateLayerConfig,\n    assignColumn,\n    assignColumnPairs\n  }) => {\n    const enhancedFieldPairs: EnhancedFieldPair[] | null = useMemo(\n      () =>\n        columnPairs && fieldPairs\n          ? fieldPairs.map(fp => ({\n              name: fp.defaultName,\n              type: 'point',\n              pair: fp.pair\n            }))\n          : null,\n      [columnPairs, fieldPairs]\n    );\n\n    const onUpdateColumn = useCallback(\n      (key, value) => {\n        const assignedColumns =\n          value && value.pair && columnPairs\n            ? assignColumnPairs(key, value.pair)\n            : assignColumn(key, value);\n\n        updateLayerConfig({columns: assignedColumns});\n      },\n      [updateLayerConfig, columnPairs, assignColumnPairs, assignColumn]\n    );\n\n    if (!Object.keys(columns).length) {\n      // don't render if columns is empty\n      return <div />;\n    }\n\n    return (\n      <div>\n        <SidePanelSection>\n          <div className=\"layer-config__column\">\n            <TopRow>\n              <PanelLabel>\n                <FormattedMessage id={'columns.title'} />\n              </PanelLabel>\n              <PanelLabel>\n                <FormattedMessage id=\"layer.required\" />\n              </PanelLabel>\n            </TopRow>\n            {Object.keys(columns).map(key => (\n              <ColumnSelector\n                column={columns[key]}\n                columns={columns}\n                label={(columnLabels && columnLabels[key]) || key}\n                key={key}\n                allFields={fields}\n                fieldPairs={getValidFieldPairsSuggestionsForColumn(\n                  enhancedFieldPairs,\n                  columnPairs,\n                  key\n                )}\n                onSelect={val => onUpdateColumn(key, val)}\n              />\n            ))}\n          </div>\n        </SidePanelSection>\n      </div>\n    );\n  };\n\n  return LayerColumnConfig;\n}\n\nexport default LayerColumnConfigFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {PanelLabel} from '../../common/styled-components';\nimport FieldSelectorFactory from '../../common/field-selector';\nimport {validateColumn} from '@kepler.gl/reducers';\nimport {LayerColumn, LayerColumns} from '@kepler.gl/layers';\nimport {Field, FieldPair} from '@kepler.gl/types';\n\ntype Pair = {\n  name: string;\n  type: string;\n  pair: FieldPair['pair'];\n};\n\ntype ColumnSelectorProps = {\n  column: LayerColumn;\n  columns: LayerColumns;\n  label: string;\n  allFields: Field[];\n  onSelect: (\n    items:\n      | ReadonlyArray<string | number | boolean | object>\n      | string\n      | number\n      | boolean\n      | object\n      | null\n  ) => void;\n  fieldPairs?: Pair[] | null;\n};\n\nconst ColumnRow = styled.div`\n  display: flex;\n  margin-bottom: 8px;\n  align-items: center;\n`;\n\nconst ColumnName = styled.div`\n  width: 27%;\n  line-height: 1.2;\n  padding-right: 6px;\n`;\n\nconst ColumnSelect = styled.div`\n  width: 73%;\n`;\n\nColumnSelectorFactory.deps = [FieldSelectorFactory];\n\nfunction ColumnSelectorFactory(FieldSelector: ReturnType<typeof FieldSelectorFactory>) {\n  const ColumnSelector: React.FC<ColumnSelectorProps> = ({\n    column,\n    columns,\n    label,\n    allFields,\n    onSelect,\n    fieldPairs\n  }) => (\n    <ColumnRow className=\"layer-config__column__selector\">\n      <ColumnName className=\"layer-config__column__name\">\n        <PanelLabel>\n          <FormattedMessage id={`columns.${label}`} />\n          {!column.optional ? `  *` : null}\n        </PanelLabel>\n      </ColumnName>\n      <ColumnSelect className=\"layer-config__column__select\">\n        <FieldSelector\n          suggested={fieldPairs}\n          error={!validateColumn(column, columns, allFields)}\n          fields={allFields}\n          value={column.value}\n          erasable={Boolean(column.optional)}\n          onSelect={onSelect}\n        />\n      </ColumnSelect>\n    </ColumnRow>\n  );\n  return ColumnSelector;\n}\n\nexport default ColumnSelectorFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {ComponentType} from 'react';\nimport styled, {withTheme} from 'styled-components';\nimport {KEPLER_UNFOLDED_BUCKET} from '@kepler.gl/constants';\nimport classNames from 'classnames';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {BaseProps} from '../../common/icons';\n\nexport type LayerTypeListItemProps = {\n  value: {\n    icon: ComponentType<Partial<BaseProps>>;\n    label: string;\n  };\n  isTile?: boolean;\n  className?: string;\n};\n\ntype WithThemeProps = LayerTypeListItemProps & {theme: Record<string, string>};\n\nexport type LayerTypeListItemType = React.FC<LayerTypeListItemProps>;\n\nconst StyledListItem = styled.div`\n  &.list {\n    display: flex;\n    align-items: center;\n\n    .layer-type-selector__item__icon {\n      color: ${props => props.theme.activeColor};\n      background-size: ${props => props.theme.layerTypeIconSizeSM}px\n        ${props => props.theme.layerTypeIconSizeSM}px;\n      height: ${props => props.theme.layerTypeIconSizeSM}px;\n      width: ${props => props.theme.layerTypeIconSizeSM}px;\n      margin-right: 12px;\n    }\n  }\n\n  .layer-type-selector__item__icon {\n    color: ${props => props.theme.labelColor};\n    display: flex;\n    background-image: url(${`${KEPLER_UNFOLDED_BUCKET}/images/kepler.gl-layer-icon-bg.png`});\n    background-size: ${props => props.theme.layerTypeIconSizeL}px\n      ${props => props.theme.layerTypeIconSizeL}px;\n    height: ${props => props.theme.layerTypeIconSizeL}px;\n    width: ${props => props.theme.layerTypeIconSizeL}px;\n  }\n\n  .layer-type-selector__item__label {\n    text-transform: capitalize;\n    font-size: 12px;\n    text-align: center;\n    color: ${props => props.theme.selectColor};\n  }\n`;\n\nexport function LayerTypeListItemFactory() {\n  const LayerTypeListItem: React.FC<WithThemeProps> = ({value, isTile, theme}) => (\n    <StyledListItem\n      className={classNames('layer-type-selector__item__inner', {\n        list: !isTile\n      })}\n    >\n      <div className=\"layer-type-selector__item__icon\">\n        <value.icon height={`${isTile ? theme.layerTypeIconSizeL : theme.layerTypeIconSizeSM}px`} />\n      </div>\n      <div className=\"layer-type-selector__item__label\">\n        <FormattedMessage\n          id={`layer.type.${value.label.toLowerCase()}`}\n          defaultMessage={value.label}\n        />\n      </div>\n    </StyledListItem>\n  );\n\n  return withTheme(LayerTypeListItem);\n}\n\nexport default LayerTypeListItemFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\n/* eslint-disable complexity */\nimport React, {Component, Fragment} from 'react';\nimport styled from 'styled-components';\nimport {FormattedMessage} from '@kepler.gl/localization';\n\nimport {Input, PanelLabel, SidePanelSection} from '../../common/styled-components';\nimport ItemSelector from '../../common/item-selector/item-selector';\n\nimport VisConfigByFieldSelectorFactory from './vis-config-by-field-selector';\nimport LayerColumnConfigFactory from './layer-column-config';\nimport LayerTypeSelectorFactory from './layer-type-selector';\nimport DimensionScaleSelector from './dimension-scale-selector';\nimport SourceDataSelectorFactory from '../common/source-data-selector';\nimport VisConfigSwitchFactory from './vis-config-switch';\nimport VisConfigSliderFactory from './vis-config-slider';\nimport LayerConfigGroupFactory, {ConfigGroupCollapsibleContent} from './layer-config-group';\nimport TextLabelPanelFactory from './text-label-panel';\nimport {\n  LayerColorSelectorFactory,\n  LayerColorRangeSelectorFactory,\n  ArcLayerColorSelectorFactory\n} from './layer-color-selector';\nimport HowToButton from './how-to-button';\nimport LayerErrorMessage from './layer-error-message';\n\nimport {capitalizeFirstLetter} from '@kepler.gl/utils';\n\nimport {\n  CHANNEL_SCALE_SUPPORTED_FIELDS,\n  LAYER_TYPES,\n  AGGREGATION_TYPE_OPTIONS\n} from '@kepler.gl/constants';\nimport {Layer, LayerBaseConfig, VisualChannel, AggregationLayer} from '@kepler.gl/layers';\n\nimport {NestedPartial, LayerVisConfig, ColorUI, Field} from '@kepler.gl/types';\nimport {toggleModal, ActionHandler} from '@kepler.gl/actions';\nimport {Datasets} from '@kepler.gl/table';\n\ntype LayerConfiguratorProps = {\n  layer: Layer;\n  datasets: Datasets;\n  layerTypeOptions: {\n    id: string;\n    label: string;\n    icon: React.ElementType;\n    requireData: boolean;\n  }[];\n  openModal: ActionHandler<typeof toggleModal>;\n  updateLayerConfig: (newConfig: Partial<LayerBaseConfig>) => void;\n  updateLayerType: (newType: string) => void;\n  updateLayerVisConfig: (newVisConfig: Partial<LayerVisConfig>) => void;\n  updateLayerVisualChannelConfig: (\n    newConfig: Partial<LayerBaseConfig>,\n    channel: string,\n    newVisConfig?: Partial<LayerVisConfig>\n  ) => void;\n  updateLayerColorUI: (prop: string, newConfig: NestedPartial<ColorUI>) => void;\n  updateLayerTextLabel: (idx: number | 'all', prop: string, value: any) => void;\n  disableTypeSelect?: boolean;\n};\n\ntype ChannelByValueSelectorProps = {\n  layer: Layer;\n  channel: VisualChannel;\n  onChange: (\n    val: Record<\n      string,\n      string | number | boolean | object | readonly (string | number | boolean | object)[] | null\n    >,\n    key: string\n  ) => void;\n  fields: Field[];\n  description: string;\n};\n\ntype AggregationSelectorProps = {\n  channel: VisualChannel;\n  layer: AggregationLayer;\n  onChange: (\n    val: Record<\n      string,\n      string | number | boolean | object | readonly (string | number | boolean | object)[] | null\n    >,\n    key: string\n  ) => void;\n};\n\nconst StyledLayerConfigurator = styled.div.attrs({\n  className: 'layer-panel__config'\n})`\n  position: relative;\n  margin-top: ${props => props.theme.layerConfiguratorMargin};\n  padding: ${props => props.theme.layerConfiguratorPadding};\n  border-left: ${props => props.theme.layerConfiguratorBorder} dashed\n    ${props => props.theme.layerConfiguratorBorderColor};\n`;\n\nconst StyledLayerVisualConfigurator = styled.div.attrs({\n  className: 'layer-panel__config__visualC-config'\n})`\n  margin-top: 12px;\n`;\n\nexport const getLayerFields = (datasets: Datasets, layer: Layer) =>\n  layer.config?.dataId && datasets[layer.config.dataId] ? datasets[layer.config.dataId].fields : [];\n\n/** Return any to be able to customize the Dataset entity */\nexport const getLayerDataset = (datasets: Datasets, layer: Layer): any =>\n  layer.config?.dataId && datasets[layer.config.dataId] ? datasets[layer.config.dataId] : null;\n\nexport const getLayerConfiguratorProps = (props: LayerConfiguratorProps) => ({\n  layer: props.layer,\n  fields: getLayerFields(props.datasets, props.layer),\n  onChange: props.updateLayerConfig,\n  setColorUI: props.updateLayerColorUI\n});\n\nexport const getVisConfiguratorProps = (props: LayerConfiguratorProps) => ({\n  layer: props.layer,\n  fields: getLayerFields(props.datasets, props.layer),\n  onChange: props.updateLayerVisConfig,\n  setColorUI: props.updateLayerColorUI\n});\n\nexport const getLayerChannelConfigProps = (props: LayerConfiguratorProps) => ({\n  layer: props.layer,\n  fields: getLayerFields(props.datasets, props.layer),\n  onChange: props.updateLayerVisualChannelConfig\n});\n\nLayerConfiguratorFactory.deps = [\n  SourceDataSelectorFactory,\n  VisConfigSliderFactory,\n  TextLabelPanelFactory,\n  LayerConfigGroupFactory,\n  ChannelByValueSelectorFactory,\n  LayerColumnConfigFactory,\n  LayerTypeSelectorFactory,\n  VisConfigSwitchFactory,\n  LayerColorSelectorFactory,\n  LayerColorRangeSelectorFactory,\n  ArcLayerColorSelectorFactory\n];\n\nexport default function LayerConfiguratorFactory(\n  SourceDataSelector: ReturnType<typeof SourceDataSelectorFactory>,\n  VisConfigSlider: ReturnType<typeof VisConfigSliderFactory>,\n  TextLabelPanel: ReturnType<typeof TextLabelPanelFactory>,\n  LayerConfigGroup: ReturnType<typeof LayerConfigGroupFactory>,\n  ChannelByValueSelector: ReturnType<typeof ChannelByValueSelectorFactory>,\n  LayerColumnConfig: ReturnType<typeof LayerColumnConfigFactory>,\n  LayerTypeSelector: ReturnType<typeof LayerTypeSelectorFactory>,\n  VisConfigSwitch: ReturnType<typeof VisConfigSwitchFactory>,\n  LayerColorSelector: ReturnType<typeof LayerColorSelectorFactory>,\n  LayerColorRangeSelector: ReturnType<typeof LayerColorRangeSelectorFactory>,\n  ArcLayerColorSelector: ReturnType<typeof ArcLayerColorSelectorFactory>\n): React.ComponentType<LayerConfiguratorProps> {\n  class LayerConfigurator extends Component<LayerConfiguratorProps> {\n    _renderPointLayerConfig(props) {\n      return this._renderScatterplotLayerConfig(props);\n    }\n\n    _renderIconLayerConfig(props) {\n      return this._renderScatterplotLayerConfig(props);\n    }\n\n    _renderScatterplotLayerConfig({\n      layer,\n      visConfiguratorProps,\n      layerChannelConfigProps,\n      layerConfiguratorProps\n    }) {\n      return (\n        <StyledLayerVisualConfigurator>\n          {/* Fill Color */}\n          <LayerConfigGroup\n            {...(layer.visConfigSettings.filled || {label: 'layer.color'})}\n            {...visConfiguratorProps}\n            collapsible\n          >\n            {layer.config.colorField ? (\n              <LayerColorRangeSelector {...visConfiguratorProps} />\n            ) : (\n              <LayerColorSelector {...layerConfiguratorProps} />\n            )}\n            <ConfigGroupCollapsibleContent>\n              <ChannelByValueSelector\n                channel={layer.visualChannels.color}\n                {...layerChannelConfigProps}\n              />\n              <VisConfigSlider {...layer.visConfigSettings.opacity} {...visConfiguratorProps} />\n            </ConfigGroupCollapsibleContent>\n          </LayerConfigGroup>\n\n          {/* outline color */}\n          {layer.type === LAYER_TYPES.point ? (\n            <LayerConfigGroup\n              {...layer.visConfigSettings.outline}\n              {...visConfiguratorProps}\n              collapsible\n            >\n              {layer.config.strokeColorField ? (\n                <LayerColorRangeSelector {...visConfiguratorProps} property=\"strokeColorRange\" />\n              ) : (\n                <LayerColorSelector\n                  {...visConfiguratorProps}\n                  selectedColor={layer.config.visConfig.strokeColor}\n                  property=\"strokeColor\"\n                />\n              )}\n              <ConfigGroupCollapsibleContent>\n                <ChannelByValueSelector\n                  channel={layer.visualChannels.strokeColor}\n                  {...layerChannelConfigProps}\n                />\n                <VisConfigSlider\n                  {...layer.visConfigSettings.thickness}\n                  {...visConfiguratorProps}\n                  disabled={!layer.config.visConfig.outline}\n                />\n              </ConfigGroupCollapsibleContent>\n            </LayerConfigGroup>\n          ) : null}\n\n          {/* Radius */}\n          <LayerConfigGroup label={'layer.radius'} collapsible>\n            {!layer.config.sizeField ? (\n              <VisConfigSlider\n                {...layer.visConfigSettings.radius}\n                {...visConfiguratorProps}\n                label={false}\n                disabled={Boolean(layer.config.sizeField)}\n              />\n            ) : (\n              <VisConfigSlider\n                {...layer.visConfigSettings.radiusRange}\n                {...visConfiguratorProps}\n                label={false}\n                disabled={!layer.config.sizeField || layer.config.visConfig.fixedRadius}\n              />\n            )}\n            <ConfigGroupCollapsibleContent>\n              <ChannelByValueSelector\n                channel={layer.visualChannels.size}\n                {...layerChannelConfigProps}\n              />\n              {layer.config.sizeField ? (\n                <VisConfigSwitch\n                  {...layer.visConfigSettings.fixedRadius}\n                  {...visConfiguratorProps}\n                />\n              ) : null}\n            </ConfigGroupCollapsibleContent>\n          </LayerConfigGroup>\n\n          {/* text label */}\n          <TextLabelPanel\n            id={layer.id}\n            fields={visConfiguratorProps.fields}\n            updateLayerTextLabel={this.props.updateLayerTextLabel}\n            textLabel={layer.config.textLabel}\n          />\n        </StyledLayerVisualConfigurator>\n      );\n    }\n\n    _renderClusterLayerConfig({\n      layer,\n      visConfiguratorProps,\n      layerConfiguratorProps,\n      layerChannelConfigProps\n    }) {\n      return (\n        <StyledLayerVisualConfigurator>\n          {/* Color */}\n          <LayerConfigGroup label={'layer.color'} collapsible>\n            <LayerColorRangeSelector {...visConfiguratorProps} />\n            <ConfigGroupCollapsibleContent>\n              <AggregationScaleSelector\n                {...layerConfiguratorProps}\n                channel={layer.visualChannels.color}\n              />\n              <ChannelByValueSelector\n                channel={layer.visualChannels.color}\n                {...layerChannelConfigProps}\n              />\n              {layer.visConfigSettings.colorAggregation.condition(layer.config) ? (\n                <AggregationTypeSelector\n                  {...layer.visConfigSettings.colorAggregation}\n                  {...layerChannelConfigProps}\n                  channel={layer.visualChannels.color}\n                />\n              ) : null}\n              <VisConfigSlider {...layer.visConfigSettings.opacity} {...visConfiguratorProps} />\n            </ConfigGroupCollapsibleContent>\n          </LayerConfigGroup>\n\n          {/* Cluster Radius */}\n          <LayerConfigGroup label={'layer.radius'} collapsible>\n            <VisConfigSlider {...layer.visConfigSettings.clusterRadius} {...visConfiguratorProps} />\n            <ConfigGroupCollapsibleContent>\n              <VisConfigSlider {...layer.visConfigSettings.radiusRange} {...visConfiguratorProps} />\n            </ConfigGroupCollapsibleContent>\n          </LayerConfigGroup>\n        </StyledLayerVisualConfigurator>\n      );\n    }\n\n    _renderHeatmapLayerConfig({\n      layer,\n      visConfiguratorProps,\n      layerConfiguratorProps,\n      layerChannelConfigProps\n    }) {\n      return (\n        <StyledLayerVisualConfigurator>\n          {/* Color */}\n          <LayerConfigGroup label={'layer.color'} collapsible>\n            <LayerColorRangeSelector {...visConfiguratorProps} />\n            <ConfigGroupCollapsibleContent>\n              <VisConfigSlider {...layer.visConfigSettings.opacity} {...visConfiguratorProps} />\n            </ConfigGroupCollapsibleContent>\n          </LayerConfigGroup>\n          {/* Radius */}\n          <LayerConfigGroup label={'layer.radius'}>\n            <VisConfigSlider\n              {...layer.visConfigSettings.radius}\n              {...visConfiguratorProps}\n              label={false}\n            />\n          </LayerConfigGroup>\n          {/* Weight */}\n          <LayerConfigGroup label={'layer.weight'}>\n            <ChannelByValueSelector\n              channel={layer.visualChannels.weight}\n              {...layerChannelConfigProps}\n            />\n          </LayerConfigGroup>\n        </StyledLayerVisualConfigurator>\n      );\n    }\n\n    _renderGridLayerConfig(props) {\n      return this._renderAggregationLayerConfig(props);\n    }\n\n    _renderHexagonLayerConfig(props) {\n      return this._renderAggregationLayerConfig(props);\n    }\n\n    _renderAggregationLayerConfig({\n      layer,\n      visConfiguratorProps,\n      layerConfiguratorProps,\n      layerChannelConfigProps\n    }) {\n      const {config} = layer;\n      const {\n        visConfig: {enable3d}\n      } = config;\n      const elevationByDescription = 'layer.elevationByDescription';\n      const colorByDescription = 'layer.colorByDescription';\n\n      return (\n        <StyledLayerVisualConfigurator>\n          {/* Color */}\n          <LayerConfigGroup label={'layer.color'} collapsible>\n            <LayerColorRangeSelector {...visConfiguratorProps} />\n            <ConfigGroupCollapsibleContent>\n              <AggregationScaleSelector\n                {...layerConfiguratorProps}\n                channel={layer.visualChannels.color}\n              />\n              <ChannelByValueSelector\n                channel={layer.visualChannels.color}\n                {...layerChannelConfigProps}\n              />\n              {layer.visConfigSettings.colorAggregation.condition(layer.config) ? (\n                <AggregationTypeSelector\n                  {...layer.visConfigSettings.colorAggregation}\n                  {...layerChannelConfigProps}\n                  description={colorByDescription}\n                  channel={layer.visualChannels.color}\n                />\n              ) : null}\n              {layer.visConfigSettings.percentile &&\n              layer.visConfigSettings.percentile.condition(layer.config) ? (\n                <VisConfigSlider\n                  {...layer.visConfigSettings.percentile}\n                  {...visConfiguratorProps}\n                />\n              ) : null}\n              <VisConfigSlider {...layer.visConfigSettings.opacity} {...visConfiguratorProps} />\n            </ConfigGroupCollapsibleContent>\n          </LayerConfigGroup>\n\n          {/* Cell size */}\n          <LayerConfigGroup label={'layer.radius'} collapsible>\n            <VisConfigSlider {...layer.visConfigSettings.worldUnitSize} {...visConfiguratorProps} />\n            <ConfigGroupCollapsibleContent>\n              <VisConfigSlider {...layer.visConfigSettings.coverage} {...visConfiguratorProps} />\n            </ConfigGroupCollapsibleContent>\n          </LayerConfigGroup>\n\n          {/* Elevation */}\n          {layer.visConfigSettings.enable3d ? (\n            <LayerConfigGroup\n              {...layer.visConfigSettings.enable3d}\n              {...visConfiguratorProps}\n              collapsible\n            >\n              <VisConfigSlider\n                {...layer.visConfigSettings.elevationScale}\n                {...visConfiguratorProps}\n                label=\"layerVisConfigs.heightMultiplier\"\n              />\n              <ConfigGroupCollapsibleContent>\n                <ChannelByValueSelector\n                  {...layerChannelConfigProps}\n                  channel={layer.visualChannels.size}\n                  description={elevationByDescription}\n                  disabled={!enable3d}\n                />\n                <AggregationScaleSelector\n                  {...layerConfiguratorProps}\n                  channel={layer.visualChannels.size}\n                />\n                <VisConfigSlider\n                  {...layer.visConfigSettings.sizeRange}\n                  {...visConfiguratorProps}\n                  label=\"layerVisConfigs.heightRange\"\n                />\n                <VisConfigSwitch\n                  {...layer.visConfigSettings.enableElevationZoomFactor}\n                  {...visConfiguratorProps}\n                  label=\"layerVisConfigs.enableHeightZoomFactor\"\n                />\n                {layer.visConfigSettings.sizeAggregation.condition(layer.config) ? (\n                  <AggregationTypeSelector\n                    {...layer.visConfigSettings.sizeAggregation}\n                    {...layerChannelConfigProps}\n                    channel={layer.visualChannels.size}\n                  />\n                ) : null}\n                {layer.visConfigSettings.elevationPercentile.condition(layer.config) ? (\n                  <VisConfigSlider\n                    {...layer.visConfigSettings.elevationPercentile}\n                    {...visConfiguratorProps}\n                  />\n                ) : null}\n              </ConfigGroupCollapsibleContent>\n            </LayerConfigGroup>\n          ) : null}\n        </StyledLayerVisualConfigurator>\n      );\n    }\n\n    // TODO: Shan move these into layer class\n    _renderHexagonIdLayerConfig({\n      layer,\n      visConfiguratorProps,\n      layerConfiguratorProps,\n      layerChannelConfigProps\n    }) {\n      return (\n        <StyledLayerVisualConfigurator>\n          {/* Fill */}\n          <LayerConfigGroup\n            {...layer.visConfigSettings.filled}\n            {...visConfiguratorProps}\n            label={'layer.fillColor'}\n            collapsible\n          >\n            {layer.config.colorField ? (\n              <LayerColorRangeSelector {...visConfiguratorProps} />\n            ) : (\n              <LayerColorSelector {...layerConfiguratorProps} />\n            )}\n            <ConfigGroupCollapsibleContent>\n              <ChannelByValueSelector\n                channel={layer.visualChannels.color}\n                {...layerChannelConfigProps}\n              />\n              <VisConfigSlider\n                {...layer.visConfigSettings.opacity}\n                {...visConfiguratorProps}\n                disabled={!layer.config.visConfig.filled}\n              />\n            </ConfigGroupCollapsibleContent>\n          </LayerConfigGroup>\n\n          {/* Outline */}\n          <LayerConfigGroup\n            {...layer.visConfigSettings.outline}\n            {...visConfiguratorProps}\n            collapsible\n          >\n            <ChannelByValueSelector\n              channel={layer.visualChannels.strokeColor}\n              {...layerChannelConfigProps}\n            />\n            {layer.config.strokeColorField ? (\n              <LayerColorRangeSelector {...visConfiguratorProps} property=\"strokeColorRange\" />\n            ) : (\n              <LayerColorSelector\n                {...visConfiguratorProps}\n                selectedColor={layer.config.visConfig.strokeColor}\n                property=\"strokeColor\"\n              />\n            )}\n            <ConfigGroupCollapsibleContent>\n              <VisConfigSlider\n                {...layer.visConfigSettings.strokeOpacity}\n                {...visConfiguratorProps}\n                disabled={!layer.config.visConfig.outline}\n              />\n              <VisConfigSlider\n                {...layer.visConfigSettings.thickness}\n                {...visConfiguratorProps}\n                disabled={!layer.config.visConfig.outline}\n              />\n            </ConfigGroupCollapsibleContent>\n          </LayerConfigGroup>\n\n          {/* Coverage */}\n          <LayerConfigGroup label={'layer.coverage'} collapsible>\n            {!layer.config.coverageField ? (\n              <VisConfigSlider\n                {...layer.visConfigSettings.coverage}\n                {...visConfiguratorProps}\n                label={false}\n              />\n            ) : (\n              <VisConfigSlider\n                {...layer.visConfigSettings.coverageRange}\n                {...visConfiguratorProps}\n                label={false}\n              />\n            )}\n            <ConfigGroupCollapsibleContent>\n              <ChannelByValueSelector\n                channel={layer.visualChannels.coverage}\n                {...layerChannelConfigProps}\n              />\n            </ConfigGroupCollapsibleContent>\n          </LayerConfigGroup>\n\n          {/* height */}\n          <LayerConfigGroup\n            {...layer.visConfigSettings.enable3d}\n            {...visConfiguratorProps}\n            collapsible\n          >\n            <ChannelByValueSelector\n              channel={layer.visualChannels.size}\n              {...layerChannelConfigProps}\n            />\n            <ConfigGroupCollapsibleContent>\n              <VisConfigSlider\n                {...layer.visConfigSettings.elevationScale}\n                {...visConfiguratorProps}\n              />\n              <VisConfigSlider\n                {...layer.visConfigSettings.sizeRange}\n                {...visConfiguratorProps}\n                label=\"layerVisConfigs.heightRange\"\n              />\n              <VisConfigSwitch\n                {...layer.visConfigSettings.enableElevationZoomFactor}\n                {...visConfiguratorProps}\n              />\n            </ConfigGroupCollapsibleContent>\n          </LayerConfigGroup>\n\n          {/* text label */}\n          <TextLabelPanel\n            id={layer.id}\n            fields={visConfiguratorProps.fields}\n            updateLayerTextLabel={this.props.updateLayerTextLabel}\n            textLabel={layer.config.textLabel}\n          />\n        </StyledLayerVisualConfigurator>\n      );\n    }\n\n    _renderArcLayerConfig(args) {\n      return this._renderLineLayerConfig(args);\n    }\n\n    _renderLineLayerConfig({\n      layer,\n      visConfiguratorProps,\n      layerConfiguratorProps,\n      layerChannelConfigProps\n    }) {\n      return (\n        <StyledLayerVisualConfigurator>\n          {/* Color */}\n          <LayerConfigGroup label={'layer.color'} collapsible>\n            {layer.config.colorField ? (\n              <LayerColorRangeSelector {...visConfiguratorProps} />\n            ) : (\n              <ArcLayerColorSelector\n                layer={layer}\n                setColorUI={layerConfiguratorProps.setColorUI}\n                onChangeConfig={layerConfiguratorProps.onChange}\n                onChangeVisConfig={visConfiguratorProps.onChange}\n              />\n            )}\n            <ConfigGroupCollapsibleContent>\n              <ChannelByValueSelector\n                channel={layer.visualChannels.sourceColor}\n                {...layerChannelConfigProps}\n              />\n              <VisConfigSlider {...layer.visConfigSettings.opacity} {...visConfiguratorProps} />\n            </ConfigGroupCollapsibleContent>\n          </LayerConfigGroup>\n\n          {/* thickness */}\n          <LayerConfigGroup label={'layer.stroke'} collapsible>\n            {layer.config.sizeField ? (\n              <VisConfigSlider\n                {...layer.visConfigSettings.sizeRange}\n                {...visConfiguratorProps}\n                disabled={!layer.config.sizeField}\n                label={false}\n              />\n            ) : (\n              <VisConfigSlider\n                {...layer.visConfigSettings.thickness}\n                {...visConfiguratorProps}\n                label={false}\n              />\n            )}\n            <ConfigGroupCollapsibleContent>\n              <ChannelByValueSelector\n                channel={layer.visualChannels.size}\n                {...layerChannelConfigProps}\n              />\n            </ConfigGroupCollapsibleContent>\n          </LayerConfigGroup>\n\n          {/* elevation scale */}\n          {layer.visConfigSettings.elevationScale ? (\n            <LayerConfigGroup label=\"layerVisConfigs.elevationScale\" collapsible>\n              <VisConfigSlider\n                {...layer.visConfigSettings.elevationScale}\n                {...visConfiguratorProps}\n              />\n            </LayerConfigGroup>\n          ) : null}\n        </StyledLayerVisualConfigurator>\n      );\n    }\n\n    _renderTripLayerConfig({\n      layer,\n      visConfiguratorProps,\n      layerConfiguratorProps,\n      layerChannelConfigProps\n    }) {\n      const {\n        meta: {featureTypes = {}}\n      } = layer;\n\n      return (\n        <StyledLayerVisualConfigurator>\n          {/* Color */}\n          <LayerConfigGroup label={'layer.color'} collapsible>\n            {layer.config.colorField ? (\n              <LayerColorRangeSelector {...visConfiguratorProps} />\n            ) : (\n              <LayerColorSelector {...layerConfiguratorProps} />\n            )}\n            <ConfigGroupCollapsibleContent>\n              <ChannelByValueSelector\n                channel={layer.visualChannels.color}\n                {...layerChannelConfigProps}\n              />\n              <VisConfigSlider {...layer.visConfigSettings.opacity} {...visConfiguratorProps} />\n            </ConfigGroupCollapsibleContent>\n          </LayerConfigGroup>\n\n          {/* Stroke Width */}\n          <LayerConfigGroup {...visConfiguratorProps} label=\"layer.strokeWidth\" collapsible>\n            {layer.config.sizeField ? (\n              <VisConfigSlider\n                {...layer.visConfigSettings.sizeRange}\n                {...visConfiguratorProps}\n                label={false}\n              />\n            ) : (\n              <VisConfigSlider\n                {...layer.visConfigSettings.thickness}\n                {...visConfiguratorProps}\n                label={false}\n              />\n            )}\n\n            <ConfigGroupCollapsibleContent>\n              <ChannelByValueSelector\n                channel={layer.visualChannels.size}\n                {...layerChannelConfigProps}\n              />\n            </ConfigGroupCollapsibleContent>\n          </LayerConfigGroup>\n\n          {/* Trail Length*/}\n          <LayerConfigGroup\n            {...visConfiguratorProps}\n            {...(featureTypes.polygon ? layer.visConfigSettings.stroked : {})}\n            label=\"layer.trailLength\"\n            description=\"layer.trailLengthDescription\"\n          >\n            <VisConfigSlider\n              {...layer.visConfigSettings.trailLength}\n              {...visConfiguratorProps}\n              label={false}\n            />\n          </LayerConfigGroup>\n        </StyledLayerVisualConfigurator>\n      );\n    }\n\n    _renderGeojsonLayerConfig({\n      layer,\n      visConfiguratorProps,\n      layerConfiguratorProps,\n      layerChannelConfigProps\n    }) {\n      const {\n        meta: {featureTypes = {}},\n        config: {visConfig}\n      } = layer;\n\n      return (\n        <StyledLayerVisualConfigurator>\n          {/* Fill Color */}\n          {featureTypes.polygon || featureTypes.point ? (\n            <LayerConfigGroup\n              {...layer.visConfigSettings.filled}\n              {...visConfiguratorProps}\n              label=\"layer.fillColor\"\n              collapsible\n            >\n              {layer.config.colorField ? (\n                <LayerColorRangeSelector {...visConfiguratorProps} />\n              ) : (\n                <LayerColorSelector {...layerConfiguratorProps} />\n              )}\n              <ConfigGroupCollapsibleContent>\n                <ChannelByValueSelector\n                  channel={layer.visualChannels.color}\n                  {...layerChannelConfigProps}\n                />\n                <VisConfigSlider {...layer.visConfigSettings.opacity} {...visConfiguratorProps} />\n              </ConfigGroupCollapsibleContent>\n            </LayerConfigGroup>\n          ) : null}\n\n          {/* stroke color */}\n          <LayerConfigGroup\n            {...layer.visConfigSettings.stroked}\n            {...visConfiguratorProps}\n            label=\"layer.strokeColor\"\n            collapsible\n          >\n            {layer.config.strokeColorField ? (\n              <LayerColorRangeSelector {...visConfiguratorProps} property=\"strokeColorRange\" />\n            ) : (\n              <LayerColorSelector\n                {...visConfiguratorProps}\n                selectedColor={layer.config.visConfig.strokeColor}\n                property=\"strokeColor\"\n              />\n            )}\n            <ConfigGroupCollapsibleContent>\n              <ChannelByValueSelector\n                channel={layer.visualChannels.strokeColor}\n                {...layerChannelConfigProps}\n              />\n              <VisConfigSlider\n                {...layer.visConfigSettings.strokeOpacity}\n                {...visConfiguratorProps}\n              />\n            </ConfigGroupCollapsibleContent>\n          </LayerConfigGroup>\n\n          {/* Stroke Width */}\n          <LayerConfigGroup\n            {...visConfiguratorProps}\n            {...(featureTypes.polygon ? layer.visConfigSettings.stroked : {})}\n            label=\"layer.strokeWidth\"\n            collapsible\n          >\n            {layer.config.sizeField ? (\n              <VisConfigSlider\n                {...layer.visConfigSettings.sizeRange}\n                {...visConfiguratorProps}\n                label={false}\n              />\n            ) : (\n              <VisConfigSlider\n                {...layer.visConfigSettings.thickness}\n                {...visConfiguratorProps}\n                label={false}\n              />\n            )}\n            <ConfigGroupCollapsibleContent>\n              <ChannelByValueSelector\n                channel={layer.visualChannels.size}\n                {...layerChannelConfigProps}\n              />\n            </ConfigGroupCollapsibleContent>\n          </LayerConfigGroup>\n\n          {/* Elevation */}\n          {featureTypes.polygon ? (\n            <LayerConfigGroup\n              {...visConfiguratorProps}\n              {...layer.visConfigSettings.enable3d}\n              disabled={!visConfig.filled}\n              collapsible\n            >\n              <VisConfigSlider\n                {...layer.visConfigSettings.elevationScale}\n                {...visConfiguratorProps}\n                label={false}\n              />\n              <ConfigGroupCollapsibleContent>\n                <ChannelByValueSelector\n                  channel={layer.visualChannels.height}\n                  {...layerChannelConfigProps}\n                />\n                <VisConfigSwitch\n                  {...layer.visConfigSettings.fixedHeight}\n                  {...visConfiguratorProps}\n                />\n                <VisConfigSwitch {...visConfiguratorProps} {...layer.visConfigSettings.wireframe} />\n              </ConfigGroupCollapsibleContent>\n            </LayerConfigGroup>\n          ) : null}\n\n          {/* Radius */}\n          {featureTypes.point ? (\n            <LayerConfigGroup label={'layer.radius'} collapsible>\n              {!layer.config.radiusField ? (\n                <VisConfigSlider\n                  {...layer.visConfigSettings.radius}\n                  {...visConfiguratorProps}\n                  label={false}\n                  disabled={Boolean(layer.config.radiusField)}\n                />\n              ) : (\n                <VisConfigSlider\n                  {...layer.visConfigSettings.radiusRange}\n                  {...visConfiguratorProps}\n                  label={false}\n                  disabled={!layer.config.radiusField}\n                />\n              )}\n              <ConfigGroupCollapsibleContent>\n                <ChannelByValueSelector\n                  channel={layer.visualChannels.radius}\n                  {...layerChannelConfigProps}\n                />\n              </ConfigGroupCollapsibleContent>\n            </LayerConfigGroup>\n          ) : null}\n        </StyledLayerVisualConfigurator>\n      );\n    }\n\n    _render3DLayerConfig({layer, visConfiguratorProps}) {\n      return (\n        <Fragment>\n          <LayerConfigGroup label={'layer.3DModel'} collapsible>\n            <Input\n              type=\"file\"\n              accept=\".glb,.gltf\"\n              onChange={e => {\n                if (e.target.files && e.target.files[0]) {\n                  const url = URL.createObjectURL(e.target.files[0]);\n                  visConfiguratorProps.onChange({scenegraph: url});\n                }\n              }}\n            />\n          </LayerConfigGroup>\n          <LayerConfigGroup label={'layer.3DModelOptions'} collapsible>\n            <VisConfigSlider\n              {...layer.visConfigSettings.sizeScale}\n              {...visConfiguratorProps}\n              disabled={false}\n            />\n            <VisConfigSlider\n              {...layer.visConfigSettings.angleX}\n              {...visConfiguratorProps}\n              disabled={false}\n            />\n            <VisConfigSlider\n              {...layer.visConfigSettings.angleY}\n              {...visConfiguratorProps}\n              disabled={false}\n            />\n            <VisConfigSlider\n              {...layer.visConfigSettings.angleZ}\n              {...visConfiguratorProps}\n              disabled={false}\n            />\n          </LayerConfigGroup>\n        </Fragment>\n      );\n    }\n\n    _renderS2LayerConfig({\n      layer,\n      visConfiguratorProps,\n      layerConfiguratorProps,\n      layerChannelConfigProps\n    }) {\n      const {\n        config: {visConfig}\n      } = layer;\n\n      return (\n        <StyledLayerVisualConfigurator>\n          {/* Color */}\n          <LayerConfigGroup\n            {...layer.visConfigSettings.filled}\n            {...visConfiguratorProps}\n            label=\"layer.fillColor\"\n            collapsible\n          >\n            {layer.config.colorField ? (\n              <LayerColorRangeSelector {...visConfiguratorProps} />\n            ) : (\n              <LayerColorSelector {...layerConfiguratorProps} />\n            )}\n            <ConfigGroupCollapsibleContent>\n              <ChannelByValueSelector\n                channel={layer.visualChannels.color}\n                {...layerChannelConfigProps}\n              />\n              <VisConfigSlider {...layer.visConfigSettings.opacity} {...visConfiguratorProps} />\n            </ConfigGroupCollapsibleContent>\n          </LayerConfigGroup>\n\n          {/* Stroke */}\n          <LayerConfigGroup\n            {...layer.visConfigSettings.stroked}\n            {...visConfiguratorProps}\n            label=\"layer.strokeColor\"\n            collapsible\n          >\n            {layer.config.strokeColorField ? (\n              <LayerColorRangeSelector {...visConfiguratorProps} property=\"strokeColorRange\" />\n            ) : (\n              <LayerColorSelector\n                {...visConfiguratorProps}\n                selectedColor={layer.config.visConfig.strokeColor}\n                property=\"strokeColor\"\n              />\n            )}\n            <ConfigGroupCollapsibleContent>\n              <ChannelByValueSelector\n                channel={layer.visualChannels.strokeColor}\n                {...layerChannelConfigProps}\n              />\n            </ConfigGroupCollapsibleContent>\n          </LayerConfigGroup>\n\n          {/* Stroke Width */}\n          <LayerConfigGroup {...visConfiguratorProps} label=\"layer.strokeWidth\" collapsible>\n            {layer.config.sizeField ? (\n              <VisConfigSlider\n                {...layer.visConfigSettings.sizeRange}\n                {...visConfiguratorProps}\n                label={false}\n              />\n            ) : (\n              <VisConfigSlider\n                {...layer.visConfigSettings.thickness}\n                {...visConfiguratorProps}\n                label={false}\n              />\n            )}\n            <ConfigGroupCollapsibleContent>\n              <ChannelByValueSelector\n                channel={layer.visualChannels.size}\n                {...layerChannelConfigProps}\n              />\n            </ConfigGroupCollapsibleContent>\n          </LayerConfigGroup>\n\n          {/* Elevation */}\n          <LayerConfigGroup\n            {...visConfiguratorProps}\n            {...layer.visConfigSettings.enable3d}\n            disabled={!visConfig.filled}\n            collapsible\n          >\n            <ChannelByValueSelector\n              channel={layer.visualChannels.height}\n              {...layerChannelConfigProps}\n            />\n            <VisConfigSlider\n              {...layer.visConfigSettings.elevationScale}\n              {...visConfiguratorProps}\n              label=\"layerVisConfigs.elevationScale\"\n            />\n            <ConfigGroupCollapsibleContent>\n              <VisConfigSlider\n                {...layer.visConfigSettings.heightRange}\n                {...visConfiguratorProps}\n                label=\"layerVisConfigs.heightRange\"\n              />\n              <VisConfigSwitch\n                {...layer.visConfigSettings.enableElevationZoomFactor}\n                {...visConfiguratorProps}\n              />\n              <VisConfigSwitch {...visConfiguratorProps} {...layer.visConfigSettings.wireframe} />\n            </ConfigGroupCollapsibleContent>\n          </LayerConfigGroup>\n        </StyledLayerVisualConfigurator>\n      );\n    }\n\n    render() {\n      const {\n        layer,\n        datasets,\n        updateLayerConfig,\n        layerTypeOptions,\n        updateLayerType,\n        disableTypeSelect = false\n      } = this.props;\n      const {fields = [], fieldPairs = undefined} = layer.config.dataId\n        ? datasets[layer.config.dataId]\n        : {};\n      const {config} = layer;\n\n      const visConfiguratorProps = getVisConfiguratorProps(this.props);\n      const layerConfiguratorProps = getLayerConfiguratorProps(this.props);\n      const layerChannelConfigProps = getLayerChannelConfigProps(this.props);\n      const dataset = getLayerDataset(datasets, layer);\n      const renderTemplate = layer.type && `_render${capitalizeFirstLetter(layer.type)}LayerConfig`;\n\n      return (\n        <StyledLayerConfigurator>\n          {layer.layerInfoModal ? (\n            <HowToButton onClick={() => this.props.openModal(layer.layerInfoModal)} />\n          ) : null}\n          <LayerConfigGroup label={'layer.basic'} collapsible expanded={!layer.hasAllColumns()}>\n            <LayerTypeSelector\n              selected={layer.type}\n              disabled={disableTypeSelect}\n              options={layerTypeOptions}\n              // @ts-ignore\n              onSelect={updateLayerType}\n            />\n            <ConfigGroupCollapsibleContent>\n              <SourceDataSelector\n                datasets={datasets}\n                id={layer.id}\n                dataId={config.dataId}\n                // @ts-ignore\n                onSelect={(value: string) => updateLayerConfig({dataId: value})}\n              />\n              <LayerColumnConfig\n                columnPairs={layer.columnPairs}\n                columns={layer.config.columns}\n                assignColumnPairs={layer.assignColumnPairs.bind(layer)}\n                assignColumn={layer.assignColumn.bind(layer)}\n                // @ts-ignore\n                columnLabels={layer.columnLabels}\n                fields={fields}\n                fieldPairs={fieldPairs}\n                updateLayerConfig={updateLayerConfig}\n              />\n            </ConfigGroupCollapsibleContent>\n            {layer.errorMessage ? <LayerErrorMessage errorMessage={layer.errorMessage} /> : null}\n          </LayerConfigGroup>\n          {renderTemplate &&\n            this[renderTemplate] &&\n            this[renderTemplate]({\n              layer,\n              dataset,\n              visConfiguratorProps,\n              layerChannelConfigProps,\n              layerConfiguratorProps\n            })}\n        </StyledLayerConfigurator>\n      );\n    }\n  }\n\n  return LayerConfigurator;\n}\n\nChannelByValueSelectorFactory.deps = [VisConfigByFieldSelectorFactory];\n\nexport function ChannelByValueSelectorFactory(\n  VisConfigByFieldSelector: ReturnType<typeof VisConfigByFieldSelectorFactory>\n) {\n  const ChannelByValueSelector = ({\n    layer,\n    channel,\n    onChange,\n    fields,\n    description\n  }: ChannelByValueSelectorProps) => {\n    const {\n      channelScaleType,\n      field,\n      key,\n      property,\n      scale,\n      defaultMeasure,\n      supportedFieldTypes\n    } = channel;\n    const channelSupportedFieldTypes =\n      supportedFieldTypes || CHANNEL_SCALE_SUPPORTED_FIELDS[channelScaleType];\n    const supportedFields = fields.filter(({type}) => channelSupportedFieldTypes.includes(type));\n    const scaleOptions = layer.getScaleOptions(channel.key);\n    const showScale = !layer.isAggregated && layer.config[scale] && scaleOptions.length > 1;\n    const defaultDescription = 'layerConfiguration.defaultDescription';\n\n    return (\n      <VisConfigByFieldSelector\n        channel={channel.key}\n        description={description || defaultDescription}\n        fields={supportedFields}\n        id={layer.id}\n        key={`${key}-channel-selector`}\n        property={property}\n        placeholder={defaultMeasure || 'placeholder.selectField'}\n        scaleOptions={scaleOptions}\n        scaleType={scale ? layer.config[scale] : null}\n        selectedField={layer.config[field]}\n        showScale={showScale}\n        updateField={val => onChange({[field]: val}, key)}\n        updateScale={val => onChange({[scale]: val}, key)}\n      />\n    );\n  };\n\n  return ChannelByValueSelector;\n}\n\nexport const AggregationScaleSelector = ({channel, layer, onChange}: AggregationSelectorProps) => {\n  const {scale, key} = channel;\n  const scaleOptions = layer.getScaleOptions(key);\n\n  return Array.isArray(scaleOptions) && scaleOptions.length > 1 ? (\n    <DimensionScaleSelector\n      label={`${key} Scale`}\n      options={scaleOptions}\n      scaleType={layer.config[scale]}\n      onSelect={val => onChange({[scale]: val}, key)}\n    />\n  ) : null;\n};\n\nexport const AggregationTypeSelector = ({channel, layer, onChange}: AggregationSelectorProps) => {\n  const {field, aggregation, key} = channel;\n  const selectedField = layer.config[field];\n  const {visConfig} = layer.config;\n\n  // aggregation should only be selectable when field is selected\n  const layerAggregationTypes = layer.getAggregationOptions(key);\n\n  const aggregationOptions = AGGREGATION_TYPE_OPTIONS.filter(({id}) =>\n    layerAggregationTypes.includes(id)\n  );\n\n  const selectedAggregation = aggregation\n    ? aggregationOptions.find(({id}) => id === visConfig[aggregation])\n    : [];\n\n  return (\n    <SidePanelSection>\n      <PanelLabel>\n        <FormattedMessage\n          id={'layer.aggregateBy'}\n          values={{\n            field: selectedField.displayName\n          }}\n        />\n      </PanelLabel>\n      <ItemSelector\n        selectedItems={selectedAggregation}\n        options={aggregationOptions}\n        displayOption=\"label\"\n        getOptionValue=\"id\"\n        multiSelect={false}\n        searchable={false}\n        onChange={value =>\n          onChange(\n            {\n              visConfig: {\n                ...layer.config.visConfig,\n                [aggregation as string]: value\n              }\n            },\n            channel.key\n          )\n        }\n      />\n    </SidePanelSection>\n  );\n};\n/* eslint-enable max-params */\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React from 'react';\nimport {PanelLabel, SidePanelSection} from '../../common/styled-components';\nimport ItemSelector from '../../common/item-selector/item-selector';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {camelize} from '@kepler.gl/utils';\n\ntype DimensionScaleSelectorProps = {\n  label: string;\n  onSelect: (\n    val: readonly (string | number | boolean | object)[] | string | number | boolean | object | null\n  ) => void;\n  options: string[];\n  scaleType?: string;\n  disabled?: boolean;\n};\n\nconst DimensionScaleSelector: React.FC<DimensionScaleSelectorProps> = ({\n  label,\n  onSelect,\n  options,\n  scaleType,\n  disabled = false\n}) => {\n  return (\n    <SidePanelSection>\n      <PanelLabel>\n        <FormattedMessage\n          id={label ? `scale.${camelize(label)}` : 'misc.scale'}\n          defaultMessage={label}\n        />\n      </PanelLabel>\n      <ItemSelector\n        disabled={disabled}\n        selectedItems={scaleType}\n        options={options}\n        multiSelect={false}\n        searchable={false}\n        onChange={onSelect}\n      />\n    </SidePanelSection>\n  );\n};\n\nexport default DimensionScaleSelector;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useMemo} from 'react';\nimport styled, {withTheme} from 'styled-components';\n\nimport LayerTypeDropdownListFactory, {LayerTypeOption} from './layer-type-dropdown-list';\nimport LayerTypeListItemFactory from './layer-type-list-item';\nimport ItemSelector from '../../common/item-selector/item-selector';\n\nimport {SidePanelSection} from '../../common/styled-components';\n\ntype Option = {\n  id: string;\n  label: string;\n  icon: any; //\n  requireData: any; //\n};\n\nexport type LayerTypeSelectorProps = {\n  selected: string | null;\n  onSelect: (\n    items:\n      | readonly (string | number | boolean | object)[]\n      | string\n      | number\n      | boolean\n      | object\n      | null\n  ) => void;\n  options: LayerTypeOption[];\n  // TODO add correct type after Theme typing\n  theme: Record<string, string>;\n  disabled: boolean;\n};\n\nconst StyledLayerTypeSelector = styled.div`\n  .item-selector .item-selector__dropdown {\n    padding: 4px 10px 4px 10px;\n  }\n`;\n\nLayerTypeSelectorFactory.deps = [LayerTypeListItemFactory, LayerTypeDropdownListFactory];\n\nconst getDisplayOption = (op: Option) => op.label;\nconst getOptionValue = (op: Option) => op.id;\n\nfunction LayerTypeSelectorFactory(\n  LayerTypeListItem: ReturnType<typeof LayerTypeListItemFactory>,\n  LayerTypeDropdownList: ReturnType<typeof LayerTypeDropdownListFactory>\n) {\n  const LayerTypeSelector: React.FC<LayerTypeSelectorProps> = ({\n    selected,\n    options,\n    onSelect,\n    disabled\n  }) => {\n    const selectedItems = useMemo(() => options.find(op => op.id === selected), [\n      options,\n      selected\n    ]);\n\n    return (\n      <SidePanelSection>\n        <StyledLayerTypeSelector className=\"layer-config__type\">\n          <ItemSelector\n            selectedItems={selectedItems}\n            options={options}\n            multiSelect={false}\n            disabled={disabled}\n            placeholder=\"placeholder.selectType\"\n            onChange={onSelect}\n            getOptionValue={getOptionValue}\n            filterOption=\"label\"\n            displayOption={getDisplayOption}\n            DropDownLineItemRenderComponent={LayerTypeListItem}\n            DropDownRenderComponent={LayerTypeDropdownList}\n          />\n        </StyledLayerTypeSelector>\n      </SidePanelSection>\n    );\n  };\n\n  return withTheme(LayerTypeSelector);\n}\n\nexport default LayerTypeSelectorFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useCallback, MouseEvent} from 'react';\nimport styled from 'styled-components';\nimport classNames from 'classnames';\nimport {classList} from '../../common/item-selector/dropdown-list';\n\nexport type LayerTypeOption = {\n  disabled?: boolean;\n  id: string;\n  label: string;\n  icon: React.ElementType;\n};\n\ntype LayerTypeDropdownListProps = {\n  onOptionSelected: (\n    value: {\n      icon: React.ElementType;\n      label: string;\n    },\n    e: MouseEvent\n  ) => void;\n  options: LayerTypeOption[];\n  selectedItems: LayerTypeOption[];\n  selectionIndex: number | null;\n  customListItemComponent: React.FC<{value: LayerTypeOption; isTile?: boolean}>;\n};\n\nconst DropdownListWrapper = styled.div`\n  ${props => props.theme.dropdownList};\n  background-color: ${props => props.theme.dropdownListBgd};\n  border-top: 1px solid ${props => props.theme.dropdownListBorderTop};\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  padding: ${props => props.theme.layerTypeIconPdL}px 0 0 ${props => props.theme.layerTypeIconPdL}px;\n`;\n\nconst StyledDropdownListItem = styled.div`\n  padding-bottom: ${props => props.theme.layerTypeIconPdL}px;\n  padding-right: ${props => props.theme.layerTypeIconPdL}px;\n\n  &.disabled {\n    pointer-events: none;\n    opacity: 0.3;\n  }\n\n  &.selected {\n    .layer-type-selector__item__icon {\n      border: 1px solid #caf2f4;\n    }\n  }\n\n  :hover,\n  &.selected {\n    cursor: pointer;\n    .layer-type-selector__item__icon {\n      color: ${props => props.theme.activeColor};\n    }\n\n    .layer-type-selector__item__label {\n      color: ${props => props.theme.textColor};\n    }\n  }\n`;\n\nexport function LayerTypeDropdownListFactory() {\n  const LayerTypeDropdownList: React.FC<LayerTypeDropdownListProps> = ({\n    onOptionSelected,\n    options,\n    selectedItems,\n    selectionIndex,\n    customListItemComponent\n  }) => {\n    const onSelectOption = useCallback(\n      (e, value) => {\n        e.preventDefault();\n        onOptionSelected(value, e);\n      },\n      [onOptionSelected]\n    );\n\n    const ListItemComponent = customListItemComponent;\n\n    return (\n      <DropdownListWrapper className={classList.list}>\n        {options.map((value, i) => (\n          <StyledDropdownListItem\n            className={classNames('layer-type-selector__item', {\n              selected: selectedItems.find(it => it.id === value.id),\n              hover: selectionIndex === i,\n              disabled: value.disabled\n            })}\n            key={`${value.id}_${i}`}\n            onMouseDown={(e: MouseEvent) => onSelectOption(e, value)}\n            onClick={(e: MouseEvent) => onSelectOption(e, value)}\n          >\n            <ListItemComponent value={value} isTile />\n          </StyledDropdownListItem>\n        ))}\n      </DropdownListWrapper>\n    );\n  };\n\n  return LayerTypeDropdownList;\n}\n\nexport default LayerTypeDropdownListFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {Component} from 'react';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {ColorRange} from '@kepler.gl/constants';\nimport styled from 'styled-components';\n\nimport {\n  Button,\n  PanelLabel,\n  SBFlexboxItem,\n  SidePanelSection,\n  SpaceBetweenFlexbox\n} from '../../common/styled-components';\nimport {Add} from '../../common/icons';\nimport ColorSelectorFactory from './color-selector';\nimport Switch from '../../common/switch';\nimport ItemSelector from '../../common/item-selector/item-selector';\nimport LayerConfigGroupFactory, {\n  ConfigGroupCollapsibleContent,\n  ConfigGroupCollapsibleHeader\n} from './layer-config-group';\nimport RangeSliderFactory from '../../common/range-slider';\n\nimport FieldSelectorFactory from '../../common/field-selector';\nimport {RGBColor, RGBAColor, LayerTextLabel, Field} from '@kepler.gl/types';\nimport {LAYER_TEXT_CONFIGS} from '@kepler.gl/constants';\n\nconst SwitchWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  line-height: 11px;\n  margin-bottom: 8px;\n`;\n\ntype TextLabelPanelProps = {\n  id?: string;\n  fields: Field[];\n  textLabel: LayerTextLabel[];\n  updateLayerTextLabel: (idx: number | 'all', prop: string, value: any) => void;\n};\n\nTextLabelPanelFactory.deps = [\n  RangeSliderFactory,\n  LayerConfigGroupFactory,\n  FieldSelectorFactory,\n  ColorSelectorFactory\n];\n\nfunction TextLabelPanelFactory(\n  RangeSlider: ReturnType<typeof RangeSliderFactory>,\n  LayerConfigGroup: ReturnType<typeof LayerConfigGroupFactory>,\n  FieldSelector: ReturnType<typeof FieldSelectorFactory>,\n  ColorSelector: ReturnType<typeof ColorSelectorFactory>\n): React.ComponentType<TextLabelPanelProps> {\n  class TextLabelPanel extends Component<TextLabelPanelProps> {\n    render() {\n      const {updateLayerTextLabel, textLabel, fields} = this.props;\n      const currentFields = textLabel.map(tl => tl.field && tl.field.name).filter(d => Boolean(d));\n\n      return (\n        <LayerConfigGroup label={'panel.text.label'} collapsible>\n          <ConfigGroupCollapsibleHeader>\n            <FieldSelector\n              fields={fields}\n              value={currentFields as string[]}\n              onSelect={selected => updateLayerTextLabel('all', 'fields', selected)}\n              multiSelect\n            />\n          </ConfigGroupCollapsibleHeader>\n          <ConfigGroupCollapsibleContent>\n            {textLabel.map((tl, idx) => (\n              <div key={tl.field ? tl.field.name : `null-${idx}`}>\n                <PanelLabel>\n                  <FormattedMessage id={'panel.text.labelWithId'} values={{labelId: idx + 1}} />\n                </PanelLabel>\n                <SidePanelSection>\n                  <FieldSelector\n                    fields={fields}\n                    value={(tl.field && tl.field.name) || 'placeholder.selectField'}\n                    placeholder={'placeholder.empty'}\n                    onSelect={v => updateLayerTextLabel(idx, 'field', v)}\n                    erasable\n                  />\n                </SidePanelSection>\n                <SidePanelSection>\n                  <PanelLabel>\n                    <FormattedMessage id=\"panel.text.fontSize\" />\n                  </PanelLabel>\n                  <RangeSlider\n                    {...LAYER_TEXT_CONFIGS.fontSize}\n                    value1={tl.size}\n                    isRanged={false}\n                    onChange={v => updateLayerTextLabel(idx, 'size', v[1])}\n                  />\n                </SidePanelSection>\n                <SidePanelSection>\n                  <PanelLabel>\n                    <FormattedMessage id=\"panel.text.fontColor\" />\n                  </PanelLabel>\n                  <ColorSelector\n                    colorSets={[\n                      {\n                        selectedColor: tl.color,\n                        setColor: (v: RGBColor | RGBAColor | ColorRange) =>\n                          updateLayerTextLabel(idx, 'color', v)\n                      }\n                    ]}\n                  />\n                </SidePanelSection>\n\n                <SidePanelSection>\n                  <PanelLabel>\n                    <FormattedMessage id=\"panel.text.outlineWidth\" />\n                  </PanelLabel>\n                  <RangeSlider\n                    {...LAYER_TEXT_CONFIGS.outlineWidth}\n                    value1={tl.outlineWidth}\n                    isRanged={false}\n                    onChange={v => updateLayerTextLabel(idx, 'outlineWidth', v[1])}\n                  />\n                </SidePanelSection>\n                <SidePanelSection>\n                  <PanelLabel>\n                    <FormattedMessage id=\"panel.text.outlineColor\" />\n                  </PanelLabel>\n                  <ColorSelector\n                    colorSets={[\n                      {\n                        selectedColor: tl.outlineColor,\n                        setColor: v => updateLayerTextLabel(idx, 'outlineColor', v)\n                      }\n                    ]}\n                    useOpacity={true}\n                  />\n                </SidePanelSection>\n\n                <SidePanelSection>\n                  <SwitchWrapper>\n                    <PanelLabel>\n                      <FormattedMessage id=\"panel.text.backgroundColor\" />\n                    </PanelLabel>\n                    <Switch\n                      checked={tl.background}\n                      id={`${this.props.id}-textBackgroundEnabled-${idx}`}\n                      onChange={() => updateLayerTextLabel(idx, 'background', !tl.background)}\n                    />\n                  </SwitchWrapper>\n\n                  <ColorSelector\n                    colorSets={[\n                      {\n                        selectedColor: tl.backgroundColor,\n                        setColor: v => updateLayerTextLabel(idx, 'backgroundColor', v)\n                      }\n                    ]}\n                    useOpacity={true}\n                    disabled={!tl.background}\n                  />\n                </SidePanelSection>\n\n                <SidePanelSection>\n                  <SpaceBetweenFlexbox>\n                    <SBFlexboxItem>\n                      <PanelLabel>\n                        <FormattedMessage id=\"panel.text.textAnchor\" />\n                      </PanelLabel>\n                      <ItemSelector\n                        {...LAYER_TEXT_CONFIGS.textAnchor}\n                        selectedItems={tl.anchor}\n                        onChange={val => updateLayerTextLabel(idx, 'anchor', val)}\n                      />\n                    </SBFlexboxItem>\n                    <SBFlexboxItem>\n                      <PanelLabel>\n                        <FormattedMessage id=\"panel.text.alignment\" />\n                      </PanelLabel>\n                      <ItemSelector\n                        {...LAYER_TEXT_CONFIGS.textAlignment}\n                        selectedItems={tl.alignment}\n                        onChange={val => updateLayerTextLabel(idx, 'alignment', val)}\n                      />\n                    </SBFlexboxItem>\n                  </SpaceBetweenFlexbox>\n                </SidePanelSection>\n              </div>\n            ))}\n            <SidePanelSection>\n              <Button link onClick={() => updateLayerTextLabel(textLabel.length, '', null)}>\n                <Add height=\"12px\" />\n                <FormattedMessage id=\"panel.text.addMoreLabel\" />\n              </Button>\n            </SidePanelSection>\n          </ConfigGroupCollapsibleContent>\n        </LayerConfigGroup>\n      );\n    }\n  }\n\n  return TextLabelPanel;\n}\n\nexport default TextLabelPanelFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {MouseEvent} from 'react';\nimport {range} from 'd3-array';\nimport styled from 'styled-components';\nimport {hexToRgb} from '@kepler.gl/utils';\n\nimport {ColorsByTheme, Themes, ColorRange} from '@kepler.gl/constants';\nimport {RGBColor} from '@kepler.gl/types';\n\nexport type SingleColorPaletteProps = {\n  onSelectColor: (color: RGBColor | ColorRange, e: MouseEvent) => void;\n  // hex value\n  selectedColor: string;\n};\n\nconst PALETTE_HEIGHT = '8px';\nconst ROWS = 22;\n\nconst StyledColorPalette = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  padding: 12px;\n\n  :hover {\n    cursor: pointer;\n  }\n`;\n\nconst StyledColorColumn = styled.div`\n  display: flex;\n  flex-grow: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nconst StyledColorBlock = styled.div<{selected: boolean}>`\n  flex-grow: 1;\n  height: ${PALETTE_HEIGHT};\n  border-width: 1px;\n  border-style: solid;\n`;\n\nconst SingleColorPalette: React.FC<SingleColorPaletteProps> = ({selectedColor, onSelectColor}) => (\n  <StyledColorPalette className=\"single-color-palette\">\n    {Themes.map((theme, col) => (\n      <StyledColorColumn key={theme} className=\"single-color-palette__column\">\n        {range(1, ROWS + 1, 1).map((key, i) => (\n          <StyledColorBlock\n            className=\"single-color-palette__block\"\n            style={{\n              backgroundColor: ColorsByTheme[theme][key],\n              borderColor:\n                selectedColor === ColorsByTheme[theme][key].toUpperCase()\n                  ? 'white'\n                  : ColorsByTheme[theme][key]\n            }}\n            key={`${theme}_${key}`}\n            selected={selectedColor === ColorsByTheme[theme][key].toUpperCase()}\n            onClick={e => onSelectColor(hexToRgb(ColorsByTheme[theme][key]), e)}\n          />\n        ))}\n      </StyledColorColumn>\n    ))}\n  </StyledColorPalette>\n);\n\nexport default SingleColorPalette;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {Component, MouseEvent} from 'react';\nimport uniq from 'lodash.uniq';\nimport styled from 'styled-components';\nimport {createSelector} from 'reselect';\n\nimport ItemSelector from '../../common/item-selector/item-selector';\nimport {PanelLabel} from '../../common/styled-components';\nimport Switch from '../../common/switch';\nimport ColorPalette from './color-palette';\nimport CustomPalette from './custom-palette';\nimport {COLOR_RANGES, ColorRange} from '@kepler.gl/constants';\nimport {reverseColorRange, numberSort} from '@kepler.gl/utils';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {NestedPartial, ColorUI} from '@kepler.gl/types';\n\ntype ColorRangeSelectorProps = {\n  colorPaletteUI: ColorUI;\n  selectedColorRange: ColorRange;\n  onSelectColorRange: (p: ColorRange, e: MouseEvent) => void;\n  setColorPaletteUI: (newConfig: NestedPartial<ColorUI>) => void;\n};\n\ntype PaletteConfigProps = {\n  label: string;\n  value: string | number | boolean;\n  config: {\n    type: string;\n    options: (string | number | boolean)[];\n  };\n  onChange: (v: string | number | boolean | object | null) => void;\n};\n\ntype ColorPaletteGroupProps = {\n  reversed?: boolean;\n  selected: ColorRange;\n  colorRanges: ColorRange[];\n  onSelect: (p: ColorRange, e: MouseEvent) => void;\n};\n\nexport const ALL_TYPES: string[] = uniq(\n  COLOR_RANGES.map(c => c.type)\n    .filter(ctype => ctype)\n    .concat(['all', 'custom']) as string[]\n);\n\nexport const ALL_STEPS: number[] = uniq(COLOR_RANGES.map(d => d.colors.length)).sort(numberSort);\n\nconst StyledColorConfig = styled.div`\n  padding: 12px 12px 0 12px;\n`;\n\nconst StyledColorRangeSelector = styled.div.attrs({\n  className: 'color-range-selector'\n})`\n  padding-bottom: 12px;\n`;\n\nconst StyledPaletteConfig = styled.div`\n  margin-bottom: 8px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  .color-palette__config__label {\n    flex-grow: 1;\n  }\n  .color-palette__config__select {\n    flex-grow: 1;\n  }\n  .item-selector .item-selector__dropdown {\n    ${props => props.theme.secondaryInput};\n  }\n`;\n\nconst CONFIG_SETTINGS = {\n  type: {\n    type: 'select',\n    options: ALL_TYPES\n  },\n  steps: {\n    type: 'select',\n    options: ALL_STEPS\n  },\n  reversed: {\n    type: 'switch',\n    options: [true, false]\n  },\n  custom: {\n    label: 'customPalette',\n    type: 'switch',\n    options: [true, false]\n  }\n};\n\nexport default class ColorRangeSelector extends Component<ColorRangeSelectorProps> {\n  static defaultProps = {\n    onSelectColorRange: () => {},\n    setColorPaletteUI: () => {}\n  };\n\n  configTypeSelector = (props: ColorRangeSelectorProps) =>\n    props.colorPaletteUI.colorRangeConfig.type;\n  configStepSelector = (props: ColorRangeSelectorProps) =>\n    props.colorPaletteUI.colorRangeConfig.steps;\n  filteredColorRange = createSelector(\n    this.configTypeSelector,\n    this.configStepSelector,\n    (type, steps) => {\n      return COLOR_RANGES.filter(colorRange => {\n        const isType = type === 'all' || type === colorRange.type;\n        const isStep = Number(steps) === colorRange.colors.length;\n\n        return isType && isStep;\n      });\n    }\n  );\n\n  _updateConfig = ({\n    key,\n    value\n  }: {\n    key: string;\n    value: string | number | boolean | object | null;\n  }) => {\n    this._setColorRangeConfig({[key]: value});\n  };\n\n  _onSetCustomPalette = (config: NestedPartial<ColorRange>) => {\n    this.props.setColorPaletteUI({\n      customPalette: config\n    });\n  };\n\n  _setColorRangeConfig = (newConfig: Record<string, string | number | boolean | object | null>) => {\n    this.props.setColorPaletteUI({\n      colorRangeConfig: newConfig\n    });\n  };\n\n  _onCustomPaletteCancel = () => {\n    this.props.setColorPaletteUI({\n      showSketcher: false,\n      colorRangeConfig: {custom: false}\n    });\n  };\n\n  _onToggleSketcher = (val: boolean | number) => {\n    this.props.setColorPaletteUI({\n      showSketcher: val\n    });\n  };\n\n  render() {\n    const {customPalette, showSketcher, colorRangeConfig} = this.props.colorPaletteUI;\n\n    const filteredColorRanges = this.filteredColorRange(this.props);\n\n    return (\n      <StyledColorRangeSelector>\n        <StyledColorConfig>\n          {(colorRangeConfig.custom ? ['custom'] : Object.keys(colorRangeConfig)).map(key => (\n            <PaletteConfig\n              key={key}\n              label={CONFIG_SETTINGS[key].label || key}\n              config={CONFIG_SETTINGS[key]}\n              value={colorRangeConfig[key]}\n              onChange={value => this._updateConfig({key, value})}\n            />\n          ))}\n        </StyledColorConfig>\n\n        {colorRangeConfig.custom ? (\n          <CustomPalette\n            customPalette={customPalette}\n            showSketcher={showSketcher}\n            onApply={this.props.onSelectColorRange}\n            onToggleSketcher={this._onToggleSketcher}\n            setCustomPalette={this._onSetCustomPalette}\n            onCancel={this._onCustomPaletteCancel}\n          />\n        ) : (\n          <ColorPaletteGroup\n            colorRanges={filteredColorRanges}\n            onSelect={this.props.onSelectColorRange}\n            selected={this.props.selectedColorRange}\n            reversed={colorRangeConfig.reversed}\n          />\n        )}\n      </StyledColorRangeSelector>\n    );\n  }\n}\n\nexport const PaletteConfig: React.FC<PaletteConfigProps> = ({\n  label,\n  value,\n  config: {type, options},\n  onChange\n}) => (\n  <StyledPaletteConfig className=\"color-palette__config\" onClick={e => e.stopPropagation()}>\n    <div className=\"color-palette__config__label\">\n      <PanelLabel>\n        <FormattedMessage id={`color.${label}`} />\n      </PanelLabel>\n    </div>\n    {type === 'select' && (\n      <div className=\"color-palette__config__select\">\n        <ItemSelector\n          selectedItems={value}\n          options={options}\n          multiSelect={false}\n          searchable={false}\n          onChange={onChange}\n        />\n      </div>\n    )}\n    {type === 'switch' && (\n      <Switch\n        checked={value as boolean}\n        id={`${label}-toggle`}\n        onChange={() => onChange(!value)}\n        secondary\n      />\n    )}\n  </StyledPaletteConfig>\n);\n\nconst StyledColorRange = styled.div.attrs({\n  className: 'color-palette-outer'\n})`\n  padding: 0 8px;\n  :hover {\n    background-color: ${props => props.theme.panelBackgroundHover};\n    cursor: pointer;\n  }\n`;\n\nexport const ColorPaletteGroup: React.FC<ColorPaletteGroupProps> = ({\n  reversed,\n  onSelect,\n  selected,\n  colorRanges\n}) => (\n  <div className=\"color-palette__group\">\n    {colorRanges.map((colorRange, i) => (\n      <StyledColorRange\n        key={`${colorRange.name}-${i}`}\n        onClick={e =>\n          onSelect(reversed ? (reverseColorRange(true, colorRange) as ColorRange) : colorRange, e)\n        }\n      >\n        <ColorPalette\n          colors={colorRange.colors}\n          isReversed={reversed}\n          isSelected={colorRange.name === selected.name && reversed === Boolean(selected.reversed)}\n        />\n      </StyledColorRange>\n    ))}\n  </div>\n);\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {Component, createRef, MouseEventHandler, MouseEvent, PropsWithChildren} from 'react';\nimport classnames from 'classnames';\nimport styled, {css} from 'styled-components';\nimport {\n  SortableContainer,\n  SortableContainerProps,\n  SortableElement,\n  SortableElementProps,\n  SortableHandle\n} from 'react-sortable-hoc';\nimport Portaled from '../../common/portaled';\n\nimport {Button, InlineInput} from '../../common/styled-components';\nimport {VertDots, Trash} from '../../common/icons';\nimport ColorPalette from './color-palette';\nimport CustomPicker from './custom-picker';\nimport {arrayMove} from '@kepler.gl/utils';\nimport {ColorRange} from '@kepler.gl/constants';\nimport {NestedPartial} from '@kepler.gl/types';\n\ntype CustomPaletteProps = {\n  customPalette: ColorRange;\n  showSketcher?: boolean | number;\n  setCustomPalette: (c: NestedPartial<ColorRange>) => void;\n  onCancel: () => void;\n  onToggleSketcher: (i: boolean | number) => void;\n  onApply: (p: ColorRange, e: MouseEvent) => void;\n};\n\nconst dragHandleActive = css`\n  .layer__drag-handle {\n    color: ${props => props.theme.textColorHl};\n    opacity: 1;\n    cursor: move;\n  }\n`;\n\nconst StyledSortableItem = styled.div`\n  display: flex;\n  align-items: center;\n  padding-top: 6px;\n  padding-bottom: 6px;\n  z-index: ${props => props.theme.dropdownWrapperZ + 1};\n\n  :not(.sorting) {\n    :hover {\n      background-color: ${props => props.theme.panelBackgroundHover};\n      ${dragHandleActive};\n    }\n  }\n\n  &.sorting-colors {\n    background-color: ${props => props.theme.panelBackgroundHover};\n    ${dragHandleActive};\n  }\n`;\n\nconst StyledDragHandle = styled.div`\n  display: flex;\n  align-items: center;\n  opacity: 0;\n`;\n\nconst StyledTrash = styled.div`\n  color: ${props => props.theme.textColor};\n  svg {\n    :hover {\n      color: ${props => props.theme.subtextColorActive};\n    }\n  }\n  height: 12px;\n  margin-left: auto;\n  margin-right: 12px;\n  :hover {\n    cursor: pointer;\n  }\n`;\n\nconst StyledLine = styled.div`\n  width: calc(100% - 16px);\n  height: 1px;\n  background-color: ${props => props.theme.labelColor};\n  margin-top: 8px;\n  margin-left: 8px;\n`;\n\nconst StyledSwatch = styled.div.attrs({\n  className: 'custom-palette__swatch'\n})`\n  background-color: ${props => props.color};\n  width: 32px;\n  height: 18px;\n  display: inline-block;\n  :hover {\n    box-shadow: ${props => props.theme.boxShadow};\n    cursor: pointer;\n  }\n`;\n\nconst StyledColorRange = styled.div`\n  padding: 0 8px;\n  :hover {\n    background-color: ${props => props.theme.panelBackgroundHover};\n    cursor: pointer;\n  }\n`;\n\nconst StyledButtonContainer = styled.div`\n  margin-top: 11px;\n  display: flex;\n  direction: rtl;\n`;\n\nconst StyledInlineInput = styled.div`\n  margin-left: 12px;\n  input {\n    color: ${props => props.theme.textColorHl};\n    font-size: 10px;\n  }\n`;\n\ntype SortableItemProps = SortableElementProps & {\n  children?: React.ReactNode;\n  className?: string;\n  isSorting: boolean;\n};\n\nconst SortableItem = SortableElement<SortableItemProps>(({children, isSorting}) => (\n  <StyledSortableItem\n    className={classnames('custom-palette__sortable-items', {sorting: isSorting})}\n  >\n    {children}\n  </StyledSortableItem>\n));\n\ntype WrappedSortableContainerProps = SortableContainerProps & {\n  children?: React.ReactNode;\n  className?: string;\n};\n\n// TODO: Should className be applied to the div here?\nconst WrappedSortableContainer = SortableContainer<WrappedSortableContainerProps>(\n  ({children, className}) => <div className={className}>{children}</div>\n);\n\ntype DragHandleProps = PropsWithChildren<{className?: string; listeners?: unknown}>;\n\nexport const DragHandle = SortableHandle<DragHandleProps>(({className, children}) => (\n  <StyledDragHandle className={className}>{children}</StyledDragHandle>\n));\n\nclass CustomPalette extends Component<CustomPaletteProps> {\n  state = {\n    isSorting: false\n  };\n\n  root = createRef<HTMLDivElement>();\n\n  _setColorPaletteUI(colors: string[]) {\n    this.props.setCustomPalette({\n      colors\n    });\n  }\n\n  _onPickerUpdate = (color: {hex: string}) => {\n    const {colors} = this.props.customPalette;\n    const newColors = [...colors];\n    newColors[this.props.showSketcher as number] = color.hex;\n    this._setColorPaletteUI(newColors);\n  };\n\n  _onColorDelete = (index: number) => {\n    const {colors} = this.props.customPalette;\n    const newColors = [...colors];\n    if (newColors.length > 1) {\n      newColors.splice(index, 1);\n    }\n    this._setColorPaletteUI(newColors);\n  };\n\n  _onColorAdd = () => {\n    const {colors} = this.props.customPalette;\n    // add the last color\n    const newColors = [...colors, colors[colors.length - 1]];\n    this._setColorPaletteUI(newColors);\n  };\n\n  _onSwatchClick = (index: number) => {\n    this.props.onToggleSketcher(index);\n  };\n\n  _onSwatchClose = () => {\n    this.props.onToggleSketcher(false);\n  };\n\n  _onApply: MouseEventHandler = event => {\n    event.stopPropagation();\n    event.preventDefault();\n\n    this.props.onCancel();\n    this.props.onApply(this.props.customPalette, event);\n  };\n\n  _onSortEnd = ({oldIndex, newIndex}) => {\n    const {colors} = this.props.customPalette;\n    const newColors = arrayMove(colors, oldIndex, newIndex);\n    this._setColorPaletteUI(newColors);\n    this.setState({isSorting: false});\n  };\n\n  _onSortStart = () => {\n    this.setState({isSorting: true});\n  };\n\n  _inputColorHex = (index: number, {target: {value}}) => {\n    const {colors} = this.props.customPalette;\n    const newColors = [...colors];\n    newColors[index] = value.toUpperCase();\n    this._setColorPaletteUI(newColors);\n  };\n\n  render() {\n    const {colors} = this.props.customPalette;\n\n    return (\n      <div className=\"custom-palette-panel\" ref={this.root}>\n        <StyledColorRange>\n          <ColorPalette colors={colors} />\n        </StyledColorRange>\n        <WrappedSortableContainer\n          className=\"custom-palette-container\"\n          onSortEnd={this._onSortEnd}\n          onSortStart={this._onSortStart}\n          lockAxis=\"y\"\n          helperClass=\"sorting-colors\"\n          useDragHandle\n        >\n          {colors.map((color, index) => (\n            <SortableItem key={index} index={index} isSorting={this.state.isSorting}>\n              <DragHandle className=\"layer__drag-handle\">\n                <VertDots height=\"20px\" />\n              </DragHandle>\n              <StyledSwatch color={color} onClick={() => this._onSwatchClick(index)} />\n              <StyledInlineInput>\n                <InlineInput\n                  type=\"text\"\n                  className=\"custom-palette-hex__input\"\n                  value={color.toUpperCase()}\n                  onClick={e => {\n                    e.stopPropagation();\n                  }}\n                  onChange={e => this._inputColorHex(index, e)}\n                  id={`input-layer-label-${index}`}\n                />\n              </StyledInlineInput>\n              <StyledTrash onClick={() => this._onColorDelete(index)}>\n                <Trash className=\"trashbin\" />\n              </StyledTrash>\n            </SortableItem>\n          ))}\n        </WrappedSortableContainer>\n        {/* Add Step Button */}\n        <Button className=\"add-step__button\" link onClick={this._onColorAdd}>\n          + Add Step\n        </Button>\n        <StyledLine />\n        {/* Cancel or Confirm Buttons */}\n        <StyledButtonContainer>\n          <Button className=\"confirm-apply__button\" link onClick={this._onApply}>\n            Confirm\n          </Button>\n          <Button link onClick={this.props.onCancel}>\n            Cancel\n          </Button>\n        </StyledButtonContainer>\n\n        <Portaled isOpened={this.props.showSketcher !== false} left={280} top={-300}>\n          <CustomPicker\n            color={colors[this.props.showSketcher as number]}\n            onChange={this._onPickerUpdate}\n            onSwatchClose={this._onSwatchClose}\n          />\n        </Portaled>\n      </div>\n    );\n  }\n}\n\nexport default CustomPalette;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useCallback} from 'react';\n\nimport {ColorRange} from '@kepler.gl/constants';\nimport {Layer} from '@kepler.gl/layers';\nimport {NestedPartial, RGBColor, ColorUI} from '@kepler.gl/types';\n\nimport ColorSelectorFactory from './color-selector';\nimport {SidePanelSection} from '../../common/styled-components';\n\ntype LayerColorSelectorProps = {\n  layer: Layer;\n  onChange: (v: Record<string, RGBColor>) => void;\n  selectedColor?: RGBColor;\n  property?: string;\n  setColorUI: (prop: string, newConfig: NestedPartial<ColorUI>) => void;\n};\n\ntype ArcLayerColorSelectorProps = {\n  layer: Layer;\n  onChangeConfig: (v: {color: RGBColor}) => void;\n  onChangeVisConfig: (v: {targetColor: RGBColor}) => void;\n  property?: string;\n  setColorUI: (prop: string, newConfig: NestedPartial<ColorUI>) => void;\n};\n\ntype LayerColorRangeSelectorProps = {\n  layer: Layer;\n  onChange: (v: Record<string, ColorRange>) => void;\n  property?: string;\n  setColorUI: (prop: string, newConfig: NestedPartial<ColorUI>) => void;\n};\n\nLayerColorSelectorFactory.deps = [ColorSelectorFactory];\nexport function LayerColorSelectorFactory(ColorSelector) {\n  const LayerColorSelector = ({\n    layer,\n    onChange,\n    selectedColor,\n    property = 'color',\n    setColorUI\n  }: LayerColorSelectorProps) => {\n    const onSetColorUI = useCallback(newConfig => setColorUI(property, newConfig), [\n      setColorUI,\n      property\n    ]);\n\n    return (\n      <SidePanelSection>\n        <ColorSelector\n          colorSets={[\n            {\n              selectedColor: selectedColor || layer.config.color,\n              setColor: (rgbValue: RGBColor) => onChange({[property]: rgbValue})\n            }\n          ]}\n          colorUI={layer.config.colorUI[property]}\n          setColorUI={onSetColorUI}\n        />\n      </SidePanelSection>\n    );\n  };\n  return LayerColorSelector;\n}\n\nLayerColorRangeSelectorFactory.deps = [ColorSelectorFactory];\nexport function LayerColorRangeSelectorFactory(ColorSelector) {\n  const LayerColorRangeSelector = ({\n    layer,\n    onChange,\n    property = 'colorRange',\n    setColorUI\n  }: LayerColorRangeSelectorProps) => {\n    const onSetColorUI = useCallback(newConfig => setColorUI(property, newConfig), [\n      setColorUI,\n      property\n    ]);\n\n    return (\n      <SidePanelSection>\n        <ColorSelector\n          colorSets={[\n            {\n              selectedColor: layer.config.visConfig[property],\n              isRange: true,\n              setColor: (colorRange: ColorRange) => onChange({[property]: colorRange})\n            }\n          ]}\n          colorUI={layer.config.colorUI[property]}\n          setColorUI={onSetColorUI}\n        />\n      </SidePanelSection>\n    );\n  };\n  return LayerColorRangeSelector;\n}\n\nArcLayerColorSelectorFactory.deps = [ColorSelectorFactory];\nexport function ArcLayerColorSelectorFactory(ColorSelector) {\n  const ArcLayerColorSelector = ({\n    layer,\n    onChangeConfig,\n    onChangeVisConfig,\n    property = 'color',\n    setColorUI\n  }: ArcLayerColorSelectorProps) => {\n    const onSetColorUI = useCallback(newConfig => setColorUI(property, newConfig), [\n      setColorUI,\n      property\n    ]);\n\n    return (\n      <SidePanelSection>\n        <ColorSelector\n          colorSets={[\n            {\n              selectedColor: layer.config.color,\n              setColor: (rgbValue: RGBColor) => onChangeConfig({color: rgbValue}),\n              label: 'Source'\n            },\n            {\n              selectedColor: layer.config.visConfig.targetColor || layer.config.color,\n              setColor: (rgbValue: RGBColor) => onChangeVisConfig({targetColor: rgbValue}),\n              label: 'Target'\n            }\n          ]}\n          colorUI={layer.config.colorUI[property]}\n          setColorUI={onSetColorUI}\n        />\n      </SidePanelSection>\n    );\n  };\n  return ArcLayerColorSelector;\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {MouseEventHandler} from 'react';\nimport styled from 'styled-components';\nimport {FormattedMessage} from '@kepler.gl/localization';\n\nimport {Button} from '../../common/styled-components';\n\nconst StyledHowToButton = styled.div`\n  position: absolute;\n  right: 12px;\n  top: -4px;\n`;\n\nexport type HowToButtonProps = {\n  onClick: MouseEventHandler;\n};\n\nexport const HowToButton: React.FC<HowToButtonProps> = ({onClick}: HowToButtonProps) => (\n  <StyledHowToButton>\n    <Button link small onClick={onClick}>\n      <FormattedMessage id={'layerConfiguration.howTo'} />\n    </Button>\n  </StyledHowToButton>\n);\n\nexport default HowToButton;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {Component, createRef, Dispatch} from 'react';\nimport Console from 'global/console';\nimport {bindActionCreators} from 'redux';\nimport styled, {ThemeProvider, withTheme} from 'styled-components';\nimport {createSelector} from 'reselect';\nimport {connect as keplerGlConnect} from './connect/keplergl-connect';\nimport {IntlProvider} from 'react-intl';\nimport {messages} from '@kepler.gl/localization';\nimport {RootContext, FeatureFlagsContextProvider, FeatureFlags} from './context';\nimport {OnErrorCallBack, OnSuccessCallBack, Viewport} from '@kepler.gl/types';\n\nimport {\n  MapStateActions,\n  MapStyleActions,\n  ProviderActions,\n  UIStateActions,\n  VisStateActions\n} from '@kepler.gl/actions';\n\ntype KeplerGlActions = {\n  visStateActions: typeof VisStateActions;\n  mapStateActions: typeof MapStateActions;\n  mapStyleActions: typeof MapStyleActions;\n  uiStateActions: typeof UIStateActions;\n  providerActions: typeof ProviderActions;\n};\n\nimport {\n  DIMENSIONS,\n  KEPLER_GL_NAME,\n  KEPLER_GL_VERSION,\n  THEME,\n  DEFAULT_MAPBOX_API_URL,\n  GEOCODER_DATASET_NAME,\n  MISSING_MAPBOX_TOKEN\n} from '@kepler.gl/constants';\n\nimport SidePanelFactory from './side-panel';\nimport MapContainerFactory from './map-container';\nimport MapsLayoutFactory from './maps-layout';\nimport BottomWidgetFactory from './bottom-widget';\nimport ModalContainerFactory from './modal-container';\nimport PlotContainerFactory from './plot-container';\nimport NotificationPanelFactory from './notification-panel';\nimport GeoCoderPanelFactory from './geocoder-panel';\nimport EffectManagerFactory from './effects/effect-manager';\nimport DndContextFactory from './dnd-context';\nimport {CloudListProvider} from './hooks/use-cloud-list-provider';\n\nimport {\n  filterObjectByPredicate,\n  generateHashId,\n  validateToken,\n  mergeMessages,\n  observeDimensions,\n  unobserveDimensions,\n  hasPortableWidth\n} from '@kepler.gl/utils';\n\nimport {theme as basicTheme, themeLT, themeBS, breakPointValues} from '@kepler.gl/styles';\nimport {KeplerGlState} from '@kepler.gl/reducers';\nimport {Provider} from '@kepler.gl/cloud-providers';\n\n// Maybe we should think about exporting this or creating a variable\n// as part of the base.js theme\nconst GlobalStyle = styled.div`\n  font-family: ${props => props.theme.fontFamily};\n  font-weight: ${props => props.theme.fontWeight};\n  font-size: ${props => props.theme.fontSize};\n  line-height: ${props => props.theme.lineHeight};\n\n  *,\n  *:before,\n  *:after {\n    -webkit-box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    box-sizing: border-box;\n  }\n\n  ul {\n    margin: 0;\n    padding: 0;\n  }\n\n  li {\n    margin: 0;\n  }\n\n  a {\n    text-decoration: none;\n    color: ${props => props.theme.labelColor};\n  }\n\n  .maplibregl-ctrl .maplibregl-ctrl-logo {\n    display: none;\n  }\n`;\n\ninterface BottomWidgetOuterProps {\n  absolute?: boolean;\n}\n\nconst BottomWidgetOuter = styled.div<BottomWidgetOuterProps>(\n  ({absolute}) => `\n  ${absolute ? 'position: absolute; bottom: 0; right: 0;' : ''}\n  pointer-events: none; /* prevent padding from blocking input */\n  & > * {\n    /* all children should allow input */\n    pointer-events: all;\n  }`\n);\n\nexport const isViewportDisjointed = props => {\n  return (\n    props.mapState.isSplit &&\n    !props.mapState.isViewportSynced &&\n    props.mapState.splitMapViewports.length > 1\n  );\n};\n\nexport const mapStateSelector = (props: any, index: number): any => {\n  if (!Number.isFinite(index)) {\n    // either no index arg or an invalid index was provided\n    // it is expected to be either 0 or 1 when in split mode\n    // only use the mapState\n    return props.mapState;\n  }\n\n  return isViewportDisjointed(props)\n    ? // mix together the viewport properties intended for this disjointed <MapContainer> with the other necessary mapState properties\n      {...props.mapState, ...props.mapState.splitMapViewports[index]}\n    : // otherwise only use the mapState\n      props.mapState;\n};\n\nexport const mapFieldsSelector = (props: KeplerGLProps, index: number = 0) => ({\n  getMapboxRef: props.getMapboxRef,\n  mapboxApiAccessToken: props.mapboxApiAccessToken,\n  mapboxApiUrl: props.mapboxApiUrl ? props.mapboxApiUrl : DEFAULT_KEPLER_GL_PROPS.mapboxApiUrl,\n  mapState: mapStateSelector(props, index),\n  mapStyle: props.mapStyle,\n  onDeckInitialized: props.onDeckInitialized,\n  onViewStateChange: props.onViewStateChange,\n  onMouseMove: props.onMouseMove,\n  deckGlProps: props.deckGlProps,\n  uiStateActions: props.uiStateActions,\n  visStateActions: props.visStateActions,\n  mapStateActions: props.mapStateActions,\n\n  // visState\n  visState: props.visState,\n\n  // uiState\n  activeSidePanel: props.uiState.activeSidePanel,\n  mapControls: props.uiState.mapControls,\n  readOnly: props.uiState.readOnly,\n  locale: props.uiState.locale,\n\n  // mapStyle\n  topMapContainerProps: props.topMapContainerProps,\n  bottomMapContainerProps: props.bottomMapContainerProps,\n\n  // transformRequest for Mapbox basemaps\n  transformRequest: props.transformRequest\n});\n\nexport function getVisibleDatasets(datasets) {\n  // We don't want Geocoder dataset to be present in SidePanel dataset list\n  return filterObjectByPredicate(datasets, (key, value) => key !== GEOCODER_DATASET_NAME);\n}\n\nexport const sidePanelSelector = (props: KeplerGLProps, availableProviders, filteredDatasets) => ({\n  appName: props.appName ? props.appName : DEFAULT_KEPLER_GL_PROPS.appName,\n  version: props.version ? props.version : DEFAULT_KEPLER_GL_PROPS.version,\n  appWebsite: props.appWebsite,\n  mapStyle: props.mapStyle,\n  onSaveMap: props.onSaveMap,\n  uiState: props.uiState,\n  mapStyleActions: props.mapStyleActions,\n  visStateActions: props.visStateActions,\n  uiStateActions: props.uiStateActions,\n  mapStateActions: props.mapStateActions,\n\n  datasets: filteredDatasets,\n  filters: props.visState.filters,\n  layers: props.visState.layers,\n  layerOrder: props.visState.layerOrder,\n  layerClasses: props.visState.layerClasses,\n  interactionConfig: props.visState.interactionConfig,\n  mapInfo: props.visState.mapInfo,\n  layerBlending: props.visState.layerBlending,\n  overlayBlending: props.visState.overlayBlending,\n\n  width: props.sidePanelWidth ? props.sidePanelWidth : DEFAULT_KEPLER_GL_PROPS.width,\n  availableProviders,\n  mapSaved: props.providerState.mapSaved\n});\n\nexport const plotContainerSelector = (props: KeplerGLProps) => ({\n  width: props.width,\n  height: props.height,\n  exportImageSetting: props.uiState.exportImage,\n  mapFields: mapFieldsSelector(props),\n  addNotification: props.uiStateActions.addNotification,\n  setExportImageSetting: props.uiStateActions.setExportImageSetting,\n  setExportImageDataUri: props.uiStateActions.setExportImageDataUri,\n  setExportImageError: props.uiStateActions.setExportImageError,\n  splitMaps: props.visState.splitMaps\n});\n\nexport const isSplitSelector = (props: KeplerGLProps) =>\n  props.visState.splitMaps && props.visState.splitMaps.length > 1;\n\nexport const bottomWidgetSelector = (props: KeplerGLProps, theme) => ({\n  filters: props.visState.filters,\n  datasets: props.visState.datasets,\n  uiState: props.uiState,\n  layers: props.visState.layers,\n  animationConfig: props.visState.animationConfig,\n  visStateActions: props.visStateActions,\n  toggleModal: props.uiStateActions.toggleModal,\n  sidePanelWidth: props.uiState.readOnly ? 0 : props.sidePanelWidth + theme.sidePanel.margin.left\n});\n\nexport const modalContainerSelector = (props: KeplerGLProps, rootNode) => ({\n  appName: props.appName ? props.appName : DEFAULT_KEPLER_GL_PROPS.appName,\n  mapStyle: props.mapStyle,\n  visState: props.visState,\n  mapState: props.mapState,\n  uiState: props.uiState,\n  providerState: props.providerState,\n\n  mapboxApiAccessToken: props.mapboxApiAccessToken,\n  mapboxApiUrl: props.mapboxApiUrl,\n  visStateActions: props.visStateActions,\n  uiStateActions: props.uiStateActions,\n  mapStyleActions: props.mapStyleActions,\n  providerActions: props.providerActions,\n\n  rootNode,\n  // User defined cloud provider props\n  cloudProviders: props.cloudProviders\n    ? props.cloudProviders\n    : DEFAULT_KEPLER_GL_PROPS.cloudProviders,\n  onExportToCloudSuccess: props.onExportToCloudSuccess,\n  onLoadCloudMapSuccess: props.onLoadCloudMapSuccess,\n  onLoadCloudMapError: props.onLoadCloudMapError,\n  onExportToCloudError: props.onExportToCloudError\n});\n\nexport const geoCoderPanelSelector = (\n  props: KeplerGLProps,\n  dimensions: {width: number; height: number}\n) => ({\n  isGeocoderEnabled: props.visState.interactionConfig.geocoder.enabled,\n  mapboxApiAccessToken: props.mapboxApiAccessToken,\n  mapState: props.mapState,\n  uiState: props.uiState,\n  layerOrder: props.visState.layerOrder,\n  updateVisData: props.visStateActions.updateVisData,\n  removeDataset: props.visStateActions.removeDataset,\n  updateMap: props.mapStateActions.updateMap,\n  appWidth: dimensions.width\n});\n\nexport const notificationPanelSelector = (props: KeplerGLProps) => ({\n  removeNotification: props.uiStateActions.removeNotification,\n  notifications: props.uiState.notifications\n});\n\nexport const DEFAULT_KEPLER_GL_PROPS = {\n  mapStyles: [],\n  mapStylesReplaceDefault: false,\n  mapboxApiUrl: DEFAULT_MAPBOX_API_URL,\n  width: 800,\n  height: 800,\n  appName: KEPLER_GL_NAME,\n  version: KEPLER_GL_VERSION,\n  sidePanelWidth: DIMENSIONS.sidePanel.width,\n  theme: {},\n  cloudProviders: [],\n  readOnly: false,\n  featureFlags: {}\n};\n\ntype KeplerGLBasicProps = {\n  mapboxApiAccessToken: string;\n  mapboxApiUrl?: string;\n  id: string;\n  width?: number;\n  height?: number;\n\n  appWebsite?: any;\n  onSaveMap?: () => void;\n  onViewStateChange?: (viewState: Viewport) => void;\n  onDeckInitialized?: () => void;\n  onKeplerGlInitialized?: () => void;\n  getMapboxRef?: () => React.RefObject<any>;\n  mapStyles?: {id: string; style?: object}[];\n  mapStylesReplaceDefault?: boolean;\n  appName?: string;\n  version?: string;\n  sidePanelWidth?: number;\n  theme?: object;\n  cloudProviders?: Provider[];\n  deckGlProps?: object;\n  onLoadCloudMapSuccess?: OnSuccessCallBack;\n  onLoadCloudMapError?: OnErrorCallBack;\n  onMouseMove?: (event: React.MouseEvent & {lngLat?: [number, number]}) => void;\n  onExportToCloudSuccess?: OnSuccessCallBack;\n  onExportToCloudError?: OnErrorCallBack;\n  readOnly?: boolean;\n  featureFlags?: FeatureFlags;\n\n  localeMessages?: {[key: string]: {[key: string]: string}};\n  dispatch: Dispatch<any>;\n\n  topMapContainerProps?: object;\n  bottomMapContainerProps?: object;\n\n  transformRequest?: (url: string) => {url: string};\n};\n\ntype KeplerGLProps = KeplerGlState & KeplerGlActions & KeplerGLBasicProps;\ntype KeplerGLCompState = {\n  dimensions: {width: number; height: number} | null;\n};\n\nKeplerGlFactory.deps = [\n  BottomWidgetFactory,\n  GeoCoderPanelFactory,\n  MapContainerFactory,\n  MapsLayoutFactory,\n  ModalContainerFactory,\n  SidePanelFactory,\n  PlotContainerFactory,\n  NotificationPanelFactory,\n  DndContextFactory,\n  EffectManagerFactory\n];\n\nfunction KeplerGlFactory(\n  BottomWidget: ReturnType<typeof BottomWidgetFactory>,\n  GeoCoderPanel: ReturnType<typeof GeoCoderPanelFactory>,\n  MapContainer: ReturnType<typeof MapContainerFactory>,\n  MapsLayout: ReturnType<typeof MapsLayoutFactory>,\n  ModalContainer: ReturnType<typeof ModalContainerFactory>,\n  SidePanel: ReturnType<typeof SidePanelFactory>,\n  PlotContainer: ReturnType<typeof PlotContainerFactory>,\n  NotificationPanel: ReturnType<typeof NotificationPanelFactory>,\n  DndContext: ReturnType<typeof DndContextFactory>\n): React.ComponentType<KeplerGLBasicProps & {selector: (...args: any[]) => KeplerGlState}> {\n  /** @typedef {import('./kepler-gl').UnconnectedKeplerGlProps} KeplerGlProps */\n  /** @augments React.Component<KeplerGlProps> */\n  class KeplerGL extends Component<\n    KeplerGLProps & {selector: (...args: any[]) => KeplerGlState},\n    KeplerGLCompState\n  > {\n    static defaultProps = DEFAULT_KEPLER_GL_PROPS;\n\n    state: KeplerGLCompState = {\n      dimensions: null\n    };\n\n    componentDidMount() {\n      this._validateMapboxToken();\n      this._loadMapStyle();\n      if (typeof this.props.onKeplerGlInitialized === 'function') {\n        this.props.onKeplerGlInitialized();\n      }\n      if (this.root.current instanceof HTMLElement) {\n        observeDimensions(this.root.current, this._handleResize);\n      }\n    }\n\n    componentWillUnmount() {\n      if (this.root.current instanceof HTMLElement) {\n        unobserveDimensions(this.root.current);\n      }\n    }\n\n    _handleResize = dimensions => {\n      this.setState({dimensions});\n    };\n\n    static contextType = RootContext;\n\n    root = createRef<HTMLDivElement>();\n    bottomWidgetRef = createRef<HTMLDivElement>();\n\n    /* selectors */\n    themeSelector = props => props.theme;\n    availableThemeSelector = createSelector(this.themeSelector, theme =>\n      typeof theme === 'object'\n        ? {\n            ...basicTheme,\n            ...theme\n          }\n        : theme === THEME.light\n        ? themeLT\n        : theme === THEME.base\n        ? themeBS\n        : theme\n    );\n\n    datasetsSelector = props => props.visState.datasets;\n    filteredDatasetsSelector = createSelector(this.datasetsSelector, getVisibleDatasets);\n\n    availableProviders = createSelector(\n      (props: KeplerGLProps) => props.cloudProviders,\n      providers =>\n        Array.isArray(providers) && providers.length\n          ? {\n              hasStorage: providers.some(p => p.hasPrivateStorage()),\n              hasShare: providers.some(p => p.hasSharingUrl())\n            }\n          : {}\n    );\n\n    localeMessagesSelector = createSelector(\n      (props: KeplerGLProps) => props.localeMessages,\n      customMessages => (customMessages ? mergeMessages(messages, customMessages) : messages)\n    );\n\n    /* private methods */\n    _validateMapboxToken() {\n      const {mapboxApiAccessToken} = this.props;\n      if (!validateToken(mapboxApiAccessToken)) {\n        Console.warn(MISSING_MAPBOX_TOKEN);\n      }\n    }\n\n    _loadMapStyle = () => {\n      const defaultStyles = Object.values(this.props.mapStyle.mapStyles);\n      // add id to custom map styles if not given\n      const customStyles = (this.props.mapStyles || []).map(ms => ({\n        ...ms,\n        id: ms.id || generateHashId()\n      }));\n\n      const allStyles = [...customStyles, ...defaultStyles].reduce((accu, style) => {\n        accu[style.id] = style;\n        return accu;\n      }, {});\n\n      this.props.mapStyleActions.loadMapStyles(allStyles);\n    };\n\n    _deleteMapLabels = (containerId, layerId) => {\n      this.props.visStateActions.toggleLayerForMap(containerId, layerId);\n    };\n\n    // eslint-disable-next-line complexity\n    render() {\n      const {\n        id = 'map',\n        width = DEFAULT_KEPLER_GL_PROPS.width,\n        height = DEFAULT_KEPLER_GL_PROPS.height,\n        uiState,\n        visState,\n        // readOnly override\n        readOnly,\n\n        // features\n        featureFlags,\n\n        // cloud providers\n        cloudProviders = []\n      } = this.props;\n\n      const dimensions = this.state.dimensions || {width, height};\n      const {\n        splitMaps, // this will store support for split map view is necessary\n        interactionConfig\n      } = visState;\n\n      const isSplit = isSplitSelector(this.props);\n      const theme = this.availableThemeSelector(this.props);\n      const localeMessages = this.localeMessagesSelector(this.props);\n      const isExportingImage = uiState.exportImage.exporting;\n      const availableProviders = this.availableProviders(this.props);\n\n      const filteredDatasets = this.filteredDatasetsSelector(this.props);\n      const sideFields = sidePanelSelector(this.props, availableProviders, filteredDatasets);\n      const plotContainerFields = plotContainerSelector(this.props);\n      const bottomWidgetFields = bottomWidgetSelector(this.props, theme);\n      const modalContainerFields = modalContainerSelector(this.props, this.root.current);\n      const geoCoderPanelFields = geoCoderPanelSelector(this.props, dimensions);\n      const notificationPanelFields = notificationPanelSelector(this.props);\n      const mapContainers = !isSplit\n        ? [\n            <MapContainer\n              primary={true}\n              key={0}\n              index={0}\n              {...mapFieldsSelector(this.props)}\n              containerId={0}\n              deleteMapLabels={this._deleteMapLabels}\n            />\n          ]\n        : splitMaps.map((settings, index) => (\n            <MapContainer\n              key={index}\n              index={index}\n              primary={index === 1}\n              {...mapFieldsSelector(this.props, index)}\n              containerId={index}\n              deleteMapLabels={this._deleteMapLabels}\n            />\n          ));\n\n      return (\n        <RootContext.Provider value={this.root}>\n          <FeatureFlagsContextProvider featureFlags={featureFlags}>\n            <IntlProvider locale={uiState.locale} messages={localeMessages[uiState.locale]}>\n              <ThemeProvider theme={theme}>\n                <CloudListProvider providers={cloudProviders}>\n                  <GlobalStyle\n                    className=\"kepler-gl\"\n                    id={`kepler-gl__${id}`}\n                    style={{\n                      display: 'flex',\n                      flexDirection: 'column',\n                      position: 'relative',\n                      width: `${width}px`,\n                      height: `${height}px`\n                    }}\n                    ref={this.root}\n                  >\n                    <NotificationPanel {...notificationPanelFields} />\n                    <DndContext>\n                      {!uiState.readOnly && !readOnly && <SidePanel {...sideFields} />}\n                      <MapsLayout className=\"maps\" mapState={this.props.mapState}>\n                        {mapContainers}\n                      </MapsLayout>\n                    </DndContext>\n                    {isExportingImage && <PlotContainer {...plotContainerFields} />}\n                    {/* 1 geocoder: single mode OR split mode and synced viewports */}\n                    {!isViewportDisjointed(this.props) && interactionConfig.geocoder.enabled && (\n                      <GeoCoderPanel {...geoCoderPanelFields} index={0} unsyncedViewports={false} />\n                    )}\n                    {/* 2 geocoders: split mode and unsynced viewports */}\n                    {isViewportDisjointed(this.props) &&\n                      interactionConfig.geocoder.enabled &&\n                      mapContainers.map((_mapContainer, index) => (\n                        <GeoCoderPanel\n                          key={index}\n                          {...geoCoderPanelFields}\n                          index={index}\n                          unsyncedViewports={true}\n                        />\n                      ))}\n                    <BottomWidgetOuter absolute={!hasPortableWidth(breakPointValues)}>\n                      <BottomWidget\n                        rootRef={this.bottomWidgetRef}\n                        {...bottomWidgetFields}\n                        containerW={dimensions.width}\n                        theme={theme}\n                      />\n                    </BottomWidgetOuter>\n                    <ModalContainer\n                      {...modalContainerFields}\n                      containerW={dimensions.width}\n                      containerH={dimensions.height}\n                    />\n                  </GlobalStyle>\n                </CloudListProvider>\n              </ThemeProvider>\n            </IntlProvider>\n          </FeatureFlagsContextProvider>\n        </RootContext.Provider>\n      );\n    }\n  }\n\n  return keplerGlConnect(\n    mapStateToProps,\n    makeMapDispatchToProps\n  )(withTheme(KeplerGL)) as ReturnType<typeof KeplerGlFactory>;\n}\n\nexport function mapStateToProps(state: KeplerGlState, props: KeplerGLProps) {\n  return {\n    ...props,\n    visState: state.visState,\n    mapStyle: state.mapStyle,\n    mapState: state.mapState,\n    uiState: state.uiState,\n    providerState: state.providerState\n  };\n}\n\nconst defaultUserActions = {};\n\nconst getDispatch = (dispatch, props) => dispatch;\nconst getUserActions = (dispatch, props) => props.actions || defaultUserActions;\n\n/** @type {() => import('reselect').OutputParametricSelector<any, any, any, any>} */\nexport function makeGetActionCreators() {\n  return createSelector([getDispatch, getUserActions], (dispatch, userActions) => {\n    const [visStateActions, mapStateActions, mapStyleActions, uiStateActions, providerActions] = [\n      VisStateActions,\n      MapStateActions,\n      MapStyleActions,\n      UIStateActions,\n      ProviderActions\n    ].map(actions => bindActionCreators(mergeActions(actions, userActions), dispatch));\n\n    return {\n      visStateActions,\n      mapStateActions,\n      mapStyleActions,\n      uiStateActions,\n      providerActions,\n      dispatch\n    };\n  });\n}\n\nfunction makeMapDispatchToProps() {\n  const getActionCreators = makeGetActionCreators();\n  const mapDispatchToProps = (dispatch, ownProps) => {\n    const groupedActionCreators = getActionCreators(dispatch, ownProps);\n\n    return {\n      ...groupedActionCreators,\n      dispatch\n    };\n  };\n\n  return mapDispatchToProps;\n}\n\n/**\n * Override default kepler.gl actions with user defined actions using the same key\n */\nfunction mergeActions(actions, userActions) {\n  const overrides = {};\n  for (const key in userActions) {\n    if (userActions.hasOwnProperty(key) && actions.hasOwnProperty(key)) {\n      overrides[key] = userActions[key];\n    }\n  }\n\n  return {...actions, ...overrides};\n}\n\nexport default KeplerGlFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useCallback, useMemo} from 'react';\n\nimport {\n  EXPORT_DATA_ID,\n  EXPORT_MAP_ID,\n  SHARE_MAP_ID,\n  SIDEBAR_PANELS,\n  OVERWRITE_MAP_ID,\n  SAVE_MAP_ID,\n  EXPORT_IMAGE_ID,\n  ADD_DATA_ID,\n  ADD_MAP_STYLE_ID\n} from '@kepler.gl/constants';\n\nimport {CursorClick, Layers, FilterFunnel, Settings} from './common/icons';\n\nimport SidebarFactory from './side-panel/side-bar';\nimport PanelHeaderFactory from './side-panel/panel-header';\nimport PanelToggleFactory from './side-panel/panel-toggle';\nimport LayerManagerFactory from './side-panel/layer-manager';\nimport FilterManagerFactory from './side-panel/filter-manager';\nimport InteractionManagerFactory from './side-panel/interaction-manager';\nimport MapManagerFactory from './side-panel/map-manager';\nimport CustomPanelsFactory from './side-panel/custom-panel';\n\nimport styled from 'styled-components';\nimport get from 'lodash.get';\nimport {SidePanelProps, SidePanelItem} from './types';\n\nexport const StyledSidePanelContent = styled.div`\n  ${props => props.theme.sidePanelScrollBar};\n  flex-grow: 1;\n  padding: ${props => props.theme.sidePanelInnerPadding}px;\n  overflow-y: scroll;\n  overflow-x: hidden;\n\n  .side-panel__content__inner {\n    display: flex;\n    height: 100%;\n    flex-direction: column;\n  }\n`;\n\nSidePanelFactory.deps = [\n  SidebarFactory,\n  PanelHeaderFactory,\n  PanelToggleFactory,\n  LayerManagerFactory,\n  FilterManagerFactory,\n  InteractionManagerFactory,\n  MapManagerFactory,\n  CustomPanelsFactory\n];\n\n/**\n * Vertical sidebar containing input components for the rendering layers\n */\nexport default function SidePanelFactory(\n  Sidebar: ReturnType<typeof SidebarFactory>,\n  PanelHeader: ReturnType<typeof PanelHeaderFactory>,\n  PanelToggle: ReturnType<typeof PanelToggleFactory>,\n  LayerManager: ReturnType<typeof LayerManagerFactory>,\n  FilterManager: ReturnType<typeof FilterManagerFactory>,\n  InteractionManager: ReturnType<typeof InteractionManagerFactory>,\n  MapManager: ReturnType<typeof MapManagerFactory>,\n  CustomPanels: ReturnType<typeof CustomPanelsFactory>\n) {\n  // inject components\n  const SIDEBAR_COMPONENTS = {\n    layer: LayerManager,\n    filter: FilterManager,\n    interaction: InteractionManager,\n    map: MapManager\n  };\n\n  const SIDEBAR_ICONS = {\n    layer: Layers,\n    filter: FilterFunnel,\n    interaction: Settings,\n    map: CursorClick\n  };\n\n  // We should defined sidebar panels here but keeping them for backward compatible\n  const fullPanels: SidePanelItem[] = SIDEBAR_PANELS.map(component => ({\n    ...component,\n    component: SIDEBAR_COMPONENTS[component.id],\n    iconComponent: SIDEBAR_ICONS[component.id]\n  }));\n\n  const getCustomPanelProps = get(CustomPanels, ['defaultProps', 'getProps']) || (() => ({}));\n\n  // eslint-disable-next-line max-statements\n  const SidePanel: React.FC<SidePanelProps> = (props: SidePanelProps) => {\n    const {\n      appName,\n      appWebsite,\n      availableProviders = {},\n      datasets,\n      filters,\n      layers,\n      layerBlending,\n      overlayBlending,\n      layerClasses,\n      layerOrder,\n      interactionConfig,\n      panels = fullPanels,\n      mapInfo,\n      mapSaved,\n      mapStateActions,\n      mapStyle,\n      mapStyleActions,\n      onSaveMap,\n      uiState,\n      uiStateActions,\n      visStateActions,\n      version,\n      width\n    } = props;\n    const {openDeleteModal, toggleModal, toggleSidePanel} = uiStateActions;\n    const {activeSidePanel} = uiState;\n    const {setMapInfo, showDatasetTable, updateTableColor} = visStateActions;\n    const {hasShare, hasStorage} = availableProviders;\n\n    const {title} = mapInfo;\n\n    const isOpen = Boolean(activeSidePanel);\n\n    const _onOpenOrClose = useCallback(() => toggleSidePanel(activeSidePanel ? '' : 'layer'), [\n      activeSidePanel,\n      toggleSidePanel\n    ]);\n\n    const onClickExportImage = useCallback(() => toggleModal(EXPORT_IMAGE_ID), [toggleModal]);\n    const onClickExportData = useCallback(() => toggleModal(EXPORT_DATA_ID), [toggleModal]);\n    const onClickExportMap = useCallback(() => toggleModal(EXPORT_MAP_ID), [toggleModal]);\n    const onClickSaveToStorage = useCallback(\n      () => toggleModal(mapSaved ? OVERWRITE_MAP_ID : SAVE_MAP_ID),\n      [mapSaved, toggleModal]\n    );\n    const onClickSaveAsToStorage = useCallback(() => {\n      setMapInfo({\n        title: `${title || 'Kepler.gl'} (Copy)`\n      });\n\n      toggleModal(SAVE_MAP_ID);\n    }, [title, setMapInfo, toggleModal]);\n    const onClickShareMap = useCallback(() => toggleModal(SHARE_MAP_ID), [toggleModal]);\n    const onShowDatasetTable = useCallback(dataId => showDatasetTable(dataId), [showDatasetTable]);\n    const onUpdateTableColor = useCallback(\n      (dataId, newColor) => updateTableColor(dataId, newColor),\n      [updateTableColor]\n    );\n    const onShowAddDataModal = useCallback(() => toggleModal(ADD_DATA_ID), [toggleModal]);\n    const onShowAddMapStyleModal = useCallback(() => toggleModal(ADD_MAP_STYLE_ID), [toggleModal]);\n    const onRemoveDataset = useCallback(dataId => openDeleteModal(dataId), [openDeleteModal]);\n\n    const currentPanel = useMemo(() => panels.find(({id}) => id === activeSidePanel) || null, [\n      activeSidePanel,\n      panels\n    ]);\n\n    const customPanelProps = useMemo(() => getCustomPanelProps(props), [props]);\n    const PanelComponent = currentPanel?.component;\n\n    return (\n      <Sidebar\n        width={width}\n        isOpen={isOpen}\n        shouldShowCollapseButton={uiState.isSidePanelCloseButtonVisible}\n        minifiedWidth={0}\n        onOpenOrClose={_onOpenOrClose}\n      >\n        <PanelHeader\n          appName={appName}\n          version={version}\n          appWebsite={appWebsite}\n          visibleDropdown={uiState.visibleDropdown}\n          showExportDropdown={uiStateActions.showExportDropdown}\n          hideExportDropdown={uiStateActions.hideExportDropdown}\n          onExportImage={onClickExportImage}\n          onExportData={onClickExportData}\n          onExportMap={onClickExportMap}\n          onSaveMap={hasStorage ? onSaveMap : undefined}\n          onSaveToStorage={hasStorage ? onClickSaveToStorage : null}\n          onSaveAsToStorage={hasStorage && mapSaved ? onClickSaveAsToStorage : null}\n          onShareMap={hasShare ? onClickShareMap : null}\n        />\n        {/* the next two components should be moved into one */}\n        {/* but i am keeping them because of backward compatibility */}\n        <PanelToggle\n          panels={panels}\n          activePanel={activeSidePanel}\n          togglePanel={uiStateActions.toggleSidePanel}\n        />\n        <StyledSidePanelContent className=\"side-panel__content\">\n          <div className=\"side-panel__content__inner\">\n            {PanelComponent ? (\n              <PanelComponent\n                datasets={datasets}\n                filters={filters}\n                layers={layers}\n                layerClasses={layerClasses}\n                layerOrder={layerOrder}\n                layerBlending={layerBlending}\n                overlayBlending={overlayBlending}\n                mapStyle={mapStyle}\n                mapStyleActions={mapStyleActions}\n                mapStateActions={mapStateActions}\n                interactionConfig={interactionConfig}\n                removeDataset={onRemoveDataset}\n                showDatasetTable={onShowDatasetTable}\n                updateTableColor={onUpdateTableColor}\n                showAddDataModal={onShowAddDataModal}\n                showAddMapStyleModal={onShowAddMapStyleModal}\n                uiStateActions={uiStateActions}\n                visStateActions={visStateActions}\n                panelMetadata={currentPanel}\n                panelListView={\n                  currentPanel?.id === 'layer'\n                    ? uiState.layerPanelListView\n                    : currentPanel?.id === 'filter'\n                    ? uiState.filterPanelListView\n                    : null\n                }\n              />\n            ) : null}\n            <CustomPanels\n              {...customPanelProps}\n              activeSidePanel={activeSidePanel}\n              updateTableColor={onUpdateTableColor}\n            />\n          </div>\n        </StyledSidePanelContent>\n      </Sidebar>\n    );\n  };\n\n  SidePanel.defaultProps = {\n    panels: fullPanels,\n    mapInfo: {}\n  };\n\n  return SidePanel;\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {Component} from 'react';\nimport styled from 'styled-components';\nimport {ArrowRight} from '../common/icons';\n\nexport type CollapseButtonProps = {\n  isOpen: boolean;\n  onClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n};\n\nexport type SideBarProps = {\n  width: number;\n  isOpen: boolean;\n  minifiedWidth: number;\n  onOpenOrClose: (arg: {isOpen: boolean}) => void;\n  shouldShowCollapseButton?: boolean | null;\n  children?: React.ReactNode;\n};\n\nconst StyledSidePanelContainer = styled.div<{width: number}>`\n  z-index: 99;\n  height: 100%;\n  width: ${props => props.width + 2 * props.theme.sidePanel.margin.left}px;\n  display: flex;\n  transition: width 250ms;\n  position: absolute;\n  padding-top: ${props => props.theme.sidePanel.margin.top}px;\n  padding-right: ${props => props.theme.sidePanel.margin.right}px;\n  padding-bottom: ${props => props.theme.sidePanel.margin.bottom}px;\n  padding-left: ${props => props.theme.sidePanel.margin.left}px;\n  pointer-events: none; /* prevent padding from blocking input */\n  & > * {\n    /* all children should allow input */\n    pointer-events: all;\n  }\n`;\n\nconst SideBarContainer = styled.div<{left: number}>`\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);\n  transition: left 250ms, right 250ms;\n  left: ${props => props.left}px;\n  align-items: stretch;\n  flex-grow: 1;\n`;\n\nconst SideBarInner = styled.div`\n  background-color: ${props => props.theme.sidePanelBg};\n  border-radius: 1px;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  border-left: ${props => props.theme.sidePanelBorder}px solid\n    ${props => props.theme.sidePanelBorderColor};\n`;\n\nconst StyledCollapseButton = styled.div`\n  align-items: center;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);\n  justify-content: center;\n  background-color: ${props => props.theme.sideBarCloseBtnBgd};\n  border-radius: 1px;\n  color: ${props => props.theme.sideBarCloseBtnColor};\n  display: flex;\n  height: 20px;\n  position: absolute;\n  right: -8px;\n  top: ${props => props.theme.sidePanel.margin.top}px;\n  width: 20px;\n\n  :hover {\n    cursor: pointer;\n    box-shadow: none;\n    background-color: ${props => props.theme.sideBarCloseBtnBgdHover};\n  }\n`;\n\nexport const CollapseButtonFactory = () => {\n  const CollapseButton = ({onClick, isOpen}: CollapseButtonProps) => (\n    <StyledCollapseButton className=\"side-bar__close\" onClick={onClick}>\n      <ArrowRight height=\"12px\" style={{transform: `rotate(${isOpen ? 180 : 0}deg)`}} />\n    </StyledCollapseButton>\n  );\n  return CollapseButton;\n};\n\nSidebarFactory.deps = [CollapseButtonFactory];\n\nfunction SidebarFactory(CollapseButton: ReturnType<typeof CollapseButtonFactory>) {\n  return class SideBar extends Component<SideBarProps> {\n    static defaultProps = {\n      width: 300,\n      minifiedWidth: 0,\n      isOpen: true,\n      onOpenOrClose: function noop() {},\n      shouldShowCollapseButton: true\n    };\n\n    _onOpenOrClose = () => {\n      this.props.onOpenOrClose({isOpen: !this.props.isOpen});\n    };\n\n    render() {\n      const {isOpen, minifiedWidth, width, shouldShowCollapseButton} = this.props;\n      const horizontalOffset = isOpen ? 0 : minifiedWidth - width;\n\n      return (\n        <StyledSidePanelContainer width={isOpen ? width : 0} className=\"side-panel--container\">\n          <SideBarContainer\n            className=\"side-bar\"\n            style={{width: `${width}px`}}\n            left={horizontalOffset}\n          >\n            {isOpen ? (\n              <SideBarInner className=\"side-bar__inner\">{this.props.children}</SideBarInner>\n            ) : null}\n            {shouldShowCollapseButton ? (\n              <CollapseButton isOpen={isOpen} onClick={this._onOpenOrClose} />\n            ) : null}\n          </SideBarContainer>\n        </StyledSidePanelContainer>\n      );\n    }\n  };\n}\n\nexport default SidebarFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {Component, useCallback} from 'react';\nimport styled from 'styled-components';\nimport classnames from 'classnames';\nimport {createSelector} from 'reselect';\nimport {Tooltip} from '../common/styled-components';\nimport KeplerGlLogo from '../common/logo';\nimport {Save, DataTable, Save2, Picture, Db, Map as MapIcon, Share} from '../common/icons';\nimport ClickOutsideCloseDropdown from './panel-dropdown';\nimport Toolbar from '../common/toolbar';\nimport ToolbarItem, {ToolbarItemProps} from '../common/toolbar-item';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {UiState} from '@kepler.gl/types';\nimport {BaseProps} from '../common/icons';\n\ntype StyledPanelActionProps = {\n  active?: boolean;\n};\n\ntype ActionItem = {\n  id: string;\n  label?: string;\n  blank?: boolean;\n  href?: string;\n  tooltip?: string;\n  iconComponent: React.ComponentType<Partial<BaseProps>>;\n  iconComponentProps?: BaseProps;\n  dropdownComponent?: React.ComponentType<DropdownComponentProps>;\n  onClick?: () => void;\n};\n\ntype PanelActionProps = {\n  item: ActionItem;\n  showExportDropdown: (string) => void;\n};\n\ntype PanelHeaderDropdownProps = {\n  items: ToolbarItemProps[];\n  show?: boolean;\n  onClose: () => void;\n  id: string;\n};\n\ntype LogoComponentProps = {\n  appName: string;\n  appWebsite: string;\n  version: string;\n};\n\ntype DropdownCallbacks = {\n  logoComponent?: React.FC<LogoComponentProps> | React.ComponentType<LogoComponentProps>;\n  onExportImage: () => void;\n  onExportData: () => void;\n  onExportConfig?: () => void;\n  onExportMap: () => void;\n  onSaveToStorage: (() => void) | null;\n  onSaveAsToStorage: (() => void) | null;\n  onSaveMap?: () => void;\n  onShareMap: (() => void) | null;\n};\n\ntype Item = {\n  label: string;\n  icon: React.ComponentType<Partial<BaseProps>>;\n  key: string;\n  onClick: (p: DropdownComponentProps) => (() => void) | null;\n};\n\ntype DropdownComponentProps = {\n  show: boolean;\n  onClose: () => void;\n  items?: Item[];\n} & DropdownCallbacks;\n\nexport type PanelHeaderProps = {\n  appName: string;\n  appWebsite: string;\n  version: string;\n  visibleDropdown: UiState['visibleDropdown'];\n  actionItems?: ActionItem[];\n  showExportDropdown: (i: string) => void;\n  hideExportDropdown: () => void;\n} & DropdownCallbacks;\n\nconst StyledPanelHeader = styled.div.attrs(props => ({\n  className: classnames('side-side-panel__header', props.className)\n}))`\n  background-color: ${props => props.theme.sidePanelHeaderBg};\n  padding: 12px 16px 0 16px;\n`;\n\nconst StyledPanelHeaderTop = styled.div.attrs(props => ({\n  className: classnames('side-panel__header__top', props.className)\n}))`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 16px;\n  width: 100%;\n`;\n\nconst StyledPanelTopActions = styled.div.attrs({\n  className: 'side-panel__top__actions'\n})`\n  display: flex;\n`;\n\nconst StyledPanelAction = styled.div.attrs({\n  className: 'side-panel__panel-header__action'\n})<StyledPanelActionProps>`\n  align-items: center;\n  border-radius: 2px;\n  color: ${props => (props.active ? props.theme.textColorHl : props.theme.subtextColor)};\n  display: flex;\n  height: 26px;\n  justify-content: space-between;\n  margin-left: 4px;\n  padding: 5px;\n  font-weight: bold;\n  p {\n    display: inline-block;\n    margin-right: 6px;\n  }\n  a {\n    height: 20px;\n  }\n\n  :hover {\n    cursor: pointer;\n    color: ${props => props.theme.textColorHl};\n\n    a {\n      color: ${props => props.theme.textColorHl};\n    }\n  }\n`;\n\nconst StyledToolbar = styled(Toolbar)`\n  position: absolute;\n`;\n\nconst PanelAction: React.FC<PanelActionProps> = React.memo(({item, showExportDropdown}) => {\n  const onClick = useCallback(() => {\n    if (item.dropdownComponent) {\n      showExportDropdown(item.id);\n    } else {\n      item.onClick && item.onClick();\n    }\n  }, [item, showExportDropdown]);\n\n  return (\n    <StyledPanelAction\n      id={`${item.id}-action`}\n      data-tip\n      data-for={`${item.id}-action`}\n      onClick={onClick}\n    >\n      {item.label ? <p>{item.label}</p> : null}\n      <a target={item.blank ? '_blank' : ''} href={item.href} rel=\"noreferrer\">\n        <item.iconComponent height=\"20px\" {...item.iconComponentProps} />\n      </a>\n      {item.tooltip ? (\n        <Tooltip id={`${item.id}-action`} place=\"bottom\" delayShow={500} effect=\"solid\">\n          <FormattedMessage id={item.tooltip} />\n        </Tooltip>\n      ) : null}\n    </StyledPanelAction>\n  );\n});\nPanelAction.displayName = 'PanelAction';\nexport {PanelAction};\n\nexport const PanelHeaderDropdownFactory = () => {\n  const PanelHeaderDropdown: React.FC<PanelHeaderDropdownProps> = ({items, show, onClose, id}) => {\n    return (\n      <StyledToolbar show={show} className={`${id}-dropdown`}>\n        <ClickOutsideCloseDropdown\n          className=\"panel-header-dropdown__inner\"\n          show={show}\n          onClose={onClose}\n        >\n          {items.map(item => (\n            <ToolbarItem\n              id={item.key}\n              key={item.key}\n              label={item.label}\n              icon={item.icon}\n              onClick={item.onClick}\n              onClose={onClose}\n            />\n          ))}\n        </ClickOutsideCloseDropdown>\n      </StyledToolbar>\n    );\n  };\n\n  return PanelHeaderDropdown;\n};\n\nconst getDropdownItemsSelector = () =>\n  createSelector(\n    (props: DropdownComponentProps) => props,\n    props =>\n      (props.items || [])\n        .map(t => ({\n          ...t,\n          onClick: t.onClick && t.onClick(props) ? t.onClick(props) : null\n        }))\n        .filter(l => l.onClick)\n  );\n\nexport const SaveExportDropdownFactory = (\n  PanelHeaderDropdown: ReturnType<typeof PanelHeaderDropdownFactory>\n) => {\n  const dropdownItemsSelector = getDropdownItemsSelector();\n\n  const SaveExportDropdown: React.FC<DropdownComponentProps> & {\n    defaultProps: {items: ToolbarItemProps[]};\n  } = props => (\n    <PanelHeaderDropdown\n      items={dropdownItemsSelector(props)}\n      show={props.show}\n      onClose={props.onClose}\n      id=\"save-export\"\n    />\n  );\n\n  SaveExportDropdown.defaultProps = {\n    items: [\n      {\n        label: 'toolbar.exportImage',\n        icon: Picture,\n        key: 'image',\n        onClick: props => props.onExportImage\n      },\n      {\n        label: 'toolbar.exportData',\n        icon: DataTable,\n        key: 'data',\n        onClick: props => props.onExportData\n      },\n      {\n        label: 'toolbar.exportMap',\n        icon: MapIcon,\n        key: 'map',\n        onClick: props => props.onExportMap\n      },\n      {\n        label: 'toolbar.saveMap',\n        icon: Save2,\n        key: 'save',\n        onClick: props => props.onSaveMap!\n      },\n      {\n        label: 'toolbar.shareMapURL',\n        icon: Share,\n        key: 'share',\n        onClick: props => props.onShareMap\n      }\n    ]\n  };\n\n  return SaveExportDropdown;\n};\nSaveExportDropdownFactory.deps = [PanelHeaderDropdownFactory];\n\nexport const CloudStorageDropdownFactory = (\n  PanelHeaderDropdown: ReturnType<typeof PanelHeaderDropdownFactory>\n) => {\n  const dropdownItemsSelector = getDropdownItemsSelector();\n\n  const CloudStorageDropdown: React.FC<DropdownComponentProps> = props => (\n    <PanelHeaderDropdown\n      items={dropdownItemsSelector(props)}\n      show={props.show}\n      onClose={props.onClose}\n      id=\"cloud-storage\"\n    />\n  );\n  CloudStorageDropdown.defaultProps = {\n    items: [\n      {\n        label: 'Save',\n        icon: Save2,\n        key: 'save',\n        onClick: props => props.onSaveToStorage\n      },\n      {\n        label: 'Save As',\n        icon: Save2,\n        key: 'saveAs',\n        onClick: props => props.onSaveAsToStorage\n      }\n    ]\n  };\n  return CloudStorageDropdown;\n};\nCloudStorageDropdownFactory.deps = [PanelHeaderDropdownFactory];\n\nPanelHeaderFactory.deps = [SaveExportDropdownFactory, CloudStorageDropdownFactory];\n\nfunction PanelHeaderFactory(\n  SaveExportDropdown: ReturnType<typeof SaveExportDropdownFactory>,\n  CloudStorageDropdown: ReturnType<typeof CloudStorageDropdownFactory>\n): React.ComponentType<PanelHeaderProps> {\n  return class PanelHeader extends Component<PanelHeaderProps> {\n    static defaultProps = {\n      logoComponent: KeplerGlLogo,\n      actionItems: [\n        {\n          id: 'storage',\n          iconComponent: Db,\n          tooltip: 'tooltip.cloudStorage',\n          onClick: () => {},\n          dropdownComponent: CloudStorageDropdown\n        },\n        {\n          id: 'save',\n          iconComponent: Save,\n          onClick: () => {},\n          label: 'Share',\n          dropdownComponent: SaveExportDropdown\n        }\n      ]\n    };\n\n    render() {\n      const {\n        appName,\n        appWebsite,\n        version,\n        actionItems,\n        visibleDropdown,\n        showExportDropdown,\n        hideExportDropdown,\n        ...dropdownCallbacks\n      } = this.props;\n      let items = actionItems || [];\n\n      // don't render cloud storage icon if onSaveToStorage is not provided\n      if (typeof this.props.onSaveToStorage !== 'function') {\n        items = items.filter(ai => ai.id !== 'storage');\n      }\n\n      return (\n        <StyledPanelHeader className=\"side-panel__panel-header\">\n          <StyledPanelHeaderTop className=\"side-panel__panel-header__top\">\n            {this.props.logoComponent && (\n              <this.props.logoComponent\n                appName={appName}\n                version={version}\n                appWebsite={appWebsite}\n              />\n            )}\n            <StyledPanelTopActions>\n              {items.map(item => (\n                <div\n                  className=\"side-panel__panel-header__right\"\n                  key={item.id}\n                  style={{position: 'relative'}}\n                >\n                  <PanelAction item={item} showExportDropdown={showExportDropdown} />\n                  {item.dropdownComponent ? (\n                    <item.dropdownComponent\n                      onClose={hideExportDropdown}\n                      show={visibleDropdown === item.id}\n                      {...dropdownCallbacks}\n                    />\n                  ) : null}\n                </div>\n              ))}\n            </StyledPanelTopActions>\n          </StyledPanelHeaderTop>\n        </StyledPanelHeader>\n      );\n    }\n  };\n}\n\nexport default PanelHeaderFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useCallback} from 'react';\nimport styled from 'styled-components';\nimport PanelTabFactory, {PanelItem} from './panel-tab';\nimport {toggleSidePanel, ActionHandler} from '@kepler.gl/actions';\n\ntype PanelToggleProps = {\n  panels: PanelItem[];\n  activePanel: string | null;\n  togglePanel: ActionHandler<typeof toggleSidePanel>;\n};\n\nconst PanelHeaderBottom = styled.div.attrs({\n  className: 'side-side-panel__header__bottom'\n})`\n  background-color: ${props => props.theme.sidePanelHeaderBg};\n  border-bottom: 1px solid ${props => props.theme.sidePanelHeaderBorder};\n  padding: 0 16px;\n  display: flex;\n  min-height: 30px;\n`;\n\nPanelToggleFactory.deps = [PanelTabFactory];\n\nfunction PanelToggleFactory(PanelTab: ReturnType<typeof PanelTabFactory>) {\n  const PanelToggle: React.FC<PanelToggleProps> = ({activePanel, panels, togglePanel}) => {\n    const onClick = useCallback(\n      panel => {\n        const callback = panel.onClick || togglePanel;\n        callback(panel.id);\n      },\n      [togglePanel]\n    );\n\n    return (\n      <PanelHeaderBottom>\n        {panels.map(panel => (\n          <PanelTab\n            key={panel.id}\n            panel={panel}\n            isActive={activePanel === panel.id}\n            onClick={() => onClick(panel)}\n          />\n        ))}\n      </PanelHeaderBottom>\n    );\n  };\n\n  return PanelToggle;\n}\n\nexport default PanelToggleFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport {Tooltip} from '../common/styled-components';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {BaseProps} from '../common/icons';\n\ntype StyledPanelTabProps = {\n  active?: boolean;\n};\n\nexport type PanelItem = {\n  id: string;\n  label: string;\n  iconComponent: React.ComponentType<Partial<BaseProps>>;\n};\n\nexport type PanelTabProps = {\n  isActive: boolean;\n  panel: PanelItem;\n  onClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n};\n\nexport const StyledPanelTab = styled.div.attrs({\n  className: 'side-panel__tab'\n})<StyledPanelTabProps>`\n  align-items: flex-end;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: ${props =>\n    props.active ? props.theme.panelToggleBorderColor : 'transparent'};\n  color: ${props => (props.active ? props.theme.subtextColorActive : props.theme.panelTabColor)};\n  display: flex;\n  justify-content: center;\n  margin-right: ${props => props.theme.panelToggleMarginRight}px;\n  padding-bottom: ${props => props.theme.panelToggleBottomPadding}px;\n  width: ${props => props.theme.panelTabWidth};\n\n  :hover {\n    cursor: pointer;\n    color: ${props => props.theme.textColorHl};\n  }\n`;\n\nexport function PanelTabFactory() {\n  const PanelTab: React.FC<PanelTabProps> = ({isActive, onClick, panel}) => (\n    <StyledPanelTab data-tip data-for={`${panel.id}-nav`} active={isActive} onClick={onClick}>\n      <panel.iconComponent height=\"20px\" />\n      <Tooltip id={`${panel.id}-nav`} effect=\"solid\" delayShow={500} place=\"bottom\">\n        <span>\n          <FormattedMessage id={panel.label || panel.id} />\n        </span>\n      </Tooltip>\n    </StyledPanelTab>\n  );\n\n  return PanelTab;\n}\n\nexport default PanelTabFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {Component, useCallback} from 'react';\n\nimport {injectIntl, WrappedComponentProps} from 'react-intl';\nimport styled from 'styled-components';\nimport {FormattedMessage} from '@kepler.gl/localization';\n\nimport LayerListFactory from './layer-panel/layer-list';\nimport DatasetLayerGroupFactory from './layer-panel/dataset-layer-group';\nimport PanelViewListToggleFactory from './panel-view-list-toggle';\nimport PanelTitleFactory from './panel-title';\nimport DatasetSectionFactory from './layer-panel/dataset-section';\nimport AddLayerButtonFactory from './layer-panel/add-layer-button';\n\nimport ItemSelector from '../common/item-selector/item-selector';\nimport {PanelLabel, SidePanelDivider, SidePanelSection} from '../common/styled-components';\nimport InfoHelperFactory from '../common/info-helper';\n\nimport {LAYER_BLENDINGS, OVERLAY_BLENDINGS, PANEL_VIEW_TOGGLES} from '@kepler.gl/constants';\nimport {Layer, LayerClassesType} from '@kepler.gl/layers';\nimport {UIStateActions, VisStateActions, MapStateActions, ActionHandler} from '@kepler.gl/actions';\nimport {SidePanelItem} from '../types';\nimport {PanelListView} from '@kepler.gl/types';\nimport {Datasets} from '@kepler.gl/table';\n\ntype LayerBlendingSelectorProps = {\n  layerBlending: string;\n  updateLayerBlending: ActionHandler<typeof VisStateActions.updateLayerBlending>;\n} & WrappedComponentProps;\n\ntype OverlayBlendingSelectorProps = {\n  overlayBlending: string;\n  updateOverlayBlending: ActionHandler<typeof VisStateActions.updateOverlayBlending>;\n  infoHelper: React.ReactNode;\n} & WrappedComponentProps;\n\ntype LayerManagerProps = {\n  datasets: Datasets;\n  layers: Layer[];\n  layerOrder: string[];\n  layerClasses: LayerClassesType;\n  layerBlending: string;\n  overlayBlending: string;\n  uiStateActions: typeof UIStateActions;\n  visStateActions: typeof VisStateActions;\n  mapStateActions: typeof MapStateActions;\n  showAddDataModal: () => void;\n  removeDataset: ActionHandler<typeof UIStateActions.openDeleteModal>;\n  showDatasetTable: ActionHandler<typeof VisStateActions.showDatasetTable>;\n  updateTableColor: ActionHandler<typeof VisStateActions.updateTableColor>;\n  panelListView: PanelListView;\n  panelMetadata: SidePanelItem;\n} & WrappedComponentProps;\n\nexport const LayerBlendingSelector = React.memo(\n  ({layerBlending, updateLayerBlending, intl}: LayerBlendingSelectorProps) => {\n    const labeledLayerBlendings = Object.keys(LAYER_BLENDINGS).reduce(\n      (acc, current) => ({\n        ...acc,\n        [intl.formatMessage({id: LAYER_BLENDINGS[current].label})]: current\n      }),\n      {}\n    );\n\n    const onChange = useCallback(blending => updateLayerBlending(labeledLayerBlendings[blending]), [\n      updateLayerBlending,\n      labeledLayerBlendings\n    ]);\n\n    return (\n      <SidePanelSection>\n        <PanelLabel>\n          <FormattedMessage id=\"layerBlending.title\" />\n        </PanelLabel>\n        <ItemSelector\n          selectedItems={intl.formatMessage({id: LAYER_BLENDINGS[layerBlending].label})}\n          options={Object.keys(labeledLayerBlendings)}\n          multiSelect={false}\n          searchable={false}\n          onChange={onChange}\n        />\n      </SidePanelSection>\n    );\n  }\n);\nLayerBlendingSelector.displayName = 'LayerBlendingSelector';\n\nconst InfoHelperWrapper = styled.div`\n  float: right;\n`;\n\nconst OverlayBlendingSelectorTitleRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst OverlayBlendingSelector = React.memo(\n  ({overlayBlending, updateOverlayBlending, intl, infoHelper}: OverlayBlendingSelectorProps) => {\n    const labeledOverlayBlendings = Object.keys(OVERLAY_BLENDINGS).reduce(\n      (acc, current) => ({\n        ...acc,\n        [intl.formatMessage({id: OVERLAY_BLENDINGS[current].label})]: current\n      }),\n      {}\n    );\n\n    const onChange = useCallback(\n      blending => updateOverlayBlending(labeledOverlayBlendings[blending]),\n      [updateOverlayBlending, labeledOverlayBlendings]\n    );\n\n    return (\n      <SidePanelSection>\n        <OverlayBlendingSelectorTitleRow>\n          <PanelLabel>\n            <FormattedMessage id=\"overlayBlending.title\" />\n          </PanelLabel>\n          <InfoHelperWrapper>{infoHelper}</InfoHelperWrapper>\n        </OverlayBlendingSelectorTitleRow>\n        <ItemSelector\n          selectedItems={intl.formatMessage({id: OVERLAY_BLENDINGS[overlayBlending].label})}\n          options={Object.keys(labeledOverlayBlendings)}\n          multiSelect={false}\n          searchable={false}\n          onChange={onChange}\n        />\n      </SidePanelSection>\n    );\n  }\n);\nOverlayBlendingSelector.displayName = 'OverlayBlendingSelector';\n\nLayerManagerFactory.deps = [\n  LayerListFactory,\n  DatasetLayerGroupFactory,\n  PanelViewListToggleFactory,\n  PanelTitleFactory,\n  DatasetSectionFactory,\n  AddLayerButtonFactory,\n  InfoHelperFactory\n];\n\nfunction LayerManagerFactory(\n  LayerList: ReturnType<typeof LayerListFactory>,\n  DatasetLayerGroup: ReturnType<typeof DatasetLayerGroupFactory>,\n  PanelViewListToggle: ReturnType<typeof PanelViewListToggleFactory>,\n  PanelTitle: ReturnType<typeof PanelTitleFactory>,\n  DatasetSection: ReturnType<typeof DatasetSectionFactory>,\n  AddLayerButton: ReturnType<typeof AddLayerButtonFactory>,\n  InfoHelper: ReturnType<typeof InfoHelperFactory>\n) {\n  class LayerManager extends Component<LayerManagerProps> {\n    _addLayer = (dataset: string) => {\n      const {visStateActions} = this.props;\n      visStateActions.addLayer(undefined, dataset);\n    };\n\n    _togglePanelListView = (listView: string) => {\n      const {uiStateActions} = this.props;\n      uiStateActions.togglePanelListView({panelId: 'layer', listView});\n    };\n\n    render() {\n      const {\n        layers,\n        datasets,\n        intl,\n        layerOrder,\n        showAddDataModal,\n        updateTableColor,\n        showDatasetTable,\n        removeDataset,\n        uiStateActions,\n        visStateActions,\n        mapStateActions,\n        panelListView,\n        panelMetadata\n      } = this.props;\n\n      const isSortByDatasetMode = panelListView === PANEL_VIEW_TOGGLES.byDataset;\n\n      return (\n        <div className=\"layer-manager\">\n          <SidePanelSection>\n            <PanelViewListToggle\n              togglePanelListView={this._togglePanelListView}\n              mode={panelListView}\n            />\n          </SidePanelSection>\n          <DatasetSection\n            datasets={datasets}\n            showDatasetTable={showDatasetTable}\n            updateTableColor={updateTableColor}\n            removeDataset={removeDataset}\n            showDeleteDataset\n            showDatasetList={!isSortByDatasetMode}\n            showAddDataModal={showAddDataModal}\n          />\n          <SidePanelDivider />\n          <SidePanelSection>\n            <PanelTitle\n              className=\"layer-manager-title\"\n              title={intl.formatMessage({id: panelMetadata.label})}\n            >\n              <AddLayerButton datasets={datasets} onAdd={this._addLayer} />\n            </PanelTitle>\n          </SidePanelSection>\n          <SidePanelSection>\n            {isSortByDatasetMode ? (\n              <DatasetLayerGroup\n                datasets={datasets}\n                showDatasetTable={showDatasetTable}\n                layers={layers}\n                updateTableColor={updateTableColor}\n                removeDataset={removeDataset}\n                layerOrder={layerOrder}\n                layerClasses={this.props.layerClasses}\n                uiStateActions={uiStateActions}\n                visStateActions={visStateActions}\n                mapStateActions={mapStateActions}\n                showDeleteDataset\n              />\n            ) : (\n              // TODO replace ignore\n              // @ts-ignore\n              <LayerList\n                layers={layers}\n                datasets={datasets}\n                layerOrder={layerOrder}\n                uiStateActions={uiStateActions}\n                visStateActions={visStateActions}\n                mapStateActions={mapStateActions}\n                layerClasses={this.props.layerClasses}\n              />\n            )}\n          </SidePanelSection>\n          <LayerBlendingSelector\n            layerBlending={this.props.layerBlending}\n            updateLayerBlending={visStateActions.updateLayerBlending}\n            intl={intl}\n          />\n          <OverlayBlendingSelector\n            overlayBlending={this.props.overlayBlending}\n            updateOverlayBlending={visStateActions.updateOverlayBlending}\n            intl={intl}\n            infoHelper={\n              <InfoHelper\n                id={`overlayBlending-description`}\n                description={'overlayBlending.description'}\n              />\n            }\n          />\n        </div>\n      );\n    }\n  }\n  return injectIntl(LayerManager);\n}\n\nexport default LayerManagerFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {\n  Component,\n  MouseEventHandler,\n  TouchEventHandler,\n  CSSProperties,\n  ChangeEventHandler\n} from 'react';\nimport styled from 'styled-components';\n\nimport LayerConfiguratorFactory from './layer-configurator';\nimport LayerPanelHeaderFactory from './layer-panel-header';\nimport {dataTestIds} from '@kepler.gl/constants';\nimport {NestedPartial, LayerVisConfig, ColorUI} from '@kepler.gl/types';\nimport {Layer, LayerBaseConfig} from '@kepler.gl/layers';\nimport {toggleModal, VisStateActions, MapStateActions, ActionHandler} from '@kepler.gl/actions';\nimport {Datasets} from '@kepler.gl/table';\n\ntype LayerPanelProps = {\n  className?: string;\n  style?: CSSProperties;\n  onMouseDown?: MouseEventHandler;\n  onTouchStart?: TouchEventHandler;\n  layer: Layer;\n  datasets: Datasets;\n  layerTypeOptions: {\n    id: string;\n    label: string;\n    icon: any; //\n    requireData: any; //\n  }[];\n  isDraggable?: boolean;\n  idx: number;\n  openModal: ActionHandler<typeof toggleModal>;\n  layerColorUIChange: ActionHandler<typeof VisStateActions.layerColorUIChange>;\n  layerConfigChange: ActionHandler<typeof VisStateActions.layerConfigChange>;\n  layerVisualChannelConfigChange: ActionHandler<\n    typeof VisStateActions.layerVisualChannelConfigChange\n  >;\n  layerSetIsValid: ActionHandler<typeof VisStateActions.layerSetIsValid>;\n  layerTypeChange: ActionHandler<typeof VisStateActions.layerTypeChange>;\n  layerVisConfigChange: ActionHandler<typeof VisStateActions.layerVisConfigChange>;\n  layerTextLabelChange: ActionHandler<typeof VisStateActions.layerTextLabelChange>;\n  removeLayer: ActionHandler<typeof VisStateActions.removeLayer>;\n  zoomToLayer: ActionHandler<typeof MapStateActions.fitBounds>;\n  duplicateLayer: ActionHandler<typeof VisStateActions.duplicateLayer>;\n  listeners?: React.ElementType;\n};\n\nconst PanelWrapper = styled.div<{active: boolean}>`\n  font-size: 12px;\n  border-radius: 1px;\n  z-index: 1000;\n  &.dragging {\n    cursor: move;\n  }\n`;\n\nLayerPanelFactory.deps = [LayerConfiguratorFactory, LayerPanelHeaderFactory];\n\nfunction LayerPanelFactory(\n  LayerConfigurator: ReturnType<typeof LayerConfiguratorFactory>,\n  LayerPanelHeader: ReturnType<typeof LayerPanelHeaderFactory>\n): React.ComponentType<LayerPanelProps> {\n  class LayerPanel extends Component<LayerPanelProps> {\n    updateLayerConfig = (newProp: Partial<LayerBaseConfig>) => {\n      this.props.layerConfigChange(this.props.layer, newProp);\n    };\n\n    updateLayerType = (newType: string) => {\n      this.props.layerTypeChange(this.props.layer, newType);\n    };\n\n    updateLayerVisConfig = (newVisConfig: Partial<LayerVisConfig>) => {\n      this.props.layerVisConfigChange(this.props.layer, newVisConfig);\n    };\n\n    updateLayerColorUI = (...args: [string, NestedPartial<ColorUI>]) => {\n      this.props.layerColorUIChange(this.props.layer, ...args);\n    };\n\n    updateLayerTextLabel = (...args: [number | 'all', string, any]) => {\n      this.props.layerTextLabelChange(this.props.layer, ...args);\n    };\n\n    updateLayerVisualChannelConfig = (newConfig: Partial<LayerBaseConfig>, channel: string) => {\n      this.props.layerVisualChannelConfigChange(this.props.layer, newConfig, channel);\n    };\n\n    _updateLayerLabel: ChangeEventHandler<HTMLInputElement> = ({target: {value}}) => {\n      this.updateLayerConfig({label: value});\n    };\n\n    _toggleVisibility: MouseEventHandler = e => {\n      e.stopPropagation();\n      const isVisible = !this.props.layer.config.isVisible;\n      this.updateLayerConfig({isVisible});\n    };\n\n    _resetIsValid: MouseEventHandler = e => {\n      e?.stopPropagation();\n      // Make the layer valid and visible again after an error\n      this.props.layerSetIsValid(this.props.layer, true);\n    };\n\n    _toggleEnableConfig: MouseEventHandler = e => {\n      e?.stopPropagation();\n      const {\n        layer: {\n          config: {isConfigActive}\n        }\n      } = this.props;\n      this.updateLayerConfig({isConfigActive: !isConfigActive});\n    };\n\n    _removeLayer: MouseEventHandler = e => {\n      e?.stopPropagation();\n      this.props.removeLayer(this.props.layer.id);\n    };\n\n    _zoomToLayer: MouseEventHandler = e => {\n      e?.stopPropagation();\n      const bounds = this.props.layer?.meta?.bounds;\n      bounds && this.props.zoomToLayer(bounds);\n    };\n\n    _duplicateLayer: MouseEventHandler = e => {\n      e?.stopPropagation();\n      this.props.duplicateLayer(this.props.layer.id);\n    };\n\n    render() {\n      const {layer, datasets, isDraggable, layerTypeOptions, listeners} = this.props;\n      const {config, isValid} = layer;\n      const {isConfigActive} = config;\n      const allowDuplicate = typeof layer.isValidToSave === 'function' && layer.isValidToSave();\n\n      return (\n        <PanelWrapper\n          active={isConfigActive}\n          className={`layer-panel ${this.props.className}`}\n          data-testid={dataTestIds.layerPanel}\n          style={this.props.style}\n          onMouseDown={this.props.onMouseDown}\n          onTouchStart={this.props.onTouchStart}\n        >\n          <LayerPanelHeader\n            isConfigActive={isConfigActive}\n            layerId={layer.id}\n            isVisible={config.isVisible}\n            isValid={isValid}\n            label={config.label}\n            labelRCGColorValues={config.dataId ? datasets[config.dataId].color : null}\n            layerType={layer.type}\n            allowDuplicate={allowDuplicate}\n            onToggleEnableConfig={this._toggleEnableConfig}\n            onToggleVisibility={this._toggleVisibility}\n            onResetIsValid={this._resetIsValid}\n            onUpdateLayerLabel={this._updateLayerLabel}\n            onRemoveLayer={this._removeLayer}\n            onZoomToLayer={this._zoomToLayer}\n            onDuplicateLayer={this._duplicateLayer}\n            isDragNDropEnabled={isDraggable}\n            listeners={listeners}\n          />\n          {isConfigActive && (\n            <LayerConfigurator\n              layer={layer}\n              datasets={datasets}\n              layerTypeOptions={layerTypeOptions}\n              openModal={this.props.openModal}\n              updateLayerColorUI={this.updateLayerColorUI}\n              updateLayerConfig={this.updateLayerConfig}\n              updateLayerVisualChannelConfig={this.updateLayerVisualChannelConfig}\n              updateLayerType={this.updateLayerType}\n              updateLayerTextLabel={this.updateLayerTextLabel}\n              updateLayerVisConfig={this.updateLayerVisConfig}\n            />\n          )}\n        </PanelWrapper>\n      );\n    }\n  }\n\n  return LayerPanel;\n}\n\nexport default LayerPanelFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useMemo} from 'react';\n\nimport DatasetLayerSectionFactory from './dataset-layer-section';\nimport {Layer, LayerClassesType} from '@kepler.gl/layers';\nimport {UIStateActions, VisStateActions, ActionHandler, MapStateActions} from '@kepler.gl/actions';\nimport {KeplerTable, Datasets} from '@kepler.gl/table';\n\ntype DatasetLayerGroupProps = {\n  datasets: Datasets;\n  layers: Layer[];\n  layerOrder: string[];\n  layerClasses: LayerClassesType;\n  showDeleteDataset: boolean;\n  removeDataset: ActionHandler<typeof UIStateActions.openDeleteModal>;\n  showDatasetTable: ActionHandler<typeof VisStateActions.showDatasetTable>;\n  updateTableColor: ActionHandler<typeof VisStateActions.updateTableColor>;\n  uiStateActions: typeof UIStateActions;\n  visStateActions: typeof VisStateActions;\n  mapStateActions: typeof MapStateActions;\n};\n\nDatasetLayerGroupFactory.deps = [DatasetLayerSectionFactory];\n\nfunction DatasetLayerGroupFactory(\n  DatasetLayerSection: ReturnType<typeof DatasetLayerSectionFactory>\n) {\n  const DatasetLayerGroup: React.FC<DatasetLayerGroupProps> = props => {\n    const {\n      datasets,\n      showDatasetTable,\n      layers,\n      updateTableColor,\n      showDeleteDataset,\n      removeDataset,\n      layerOrder,\n      layerClasses,\n      uiStateActions,\n      visStateActions,\n      mapStateActions\n    } = props;\n\n    const datasetLayerSectionData = useMemo(() => {\n      return Object.values(datasets).map((dataset: KeplerTable) => {\n        // Global layer order will contain the correct order of layers\n        // We just empty the positions in layers array (for each dataset)\n        // where the layer doesn't belong to a dataset and set it to null\n        const datasetLayers = layers\n          .map(layer => (layer.config.dataId === dataset.id ? layer : null))\n          .filter(layer => Boolean(layer));\n\n        return {dataset, datasetLayers};\n      });\n    }, [datasets, layers]);\n\n    return (\n      <>\n        {datasetLayerSectionData.map(dlsData => (\n          <DatasetLayerSection\n            key={dlsData.dataset.id}\n            dataset={dlsData.dataset}\n            layers={dlsData.datasetLayers as Layer[]}\n            datasets={datasets}\n            showDatasetTable={showDatasetTable}\n            updateTableColor={updateTableColor}\n            showDeleteDataset={showDeleteDataset}\n            removeDataset={removeDataset}\n            layerOrder={layerOrder}\n            layerClasses={layerClasses}\n            uiStateActions={uiStateActions}\n            visStateActions={visStateActions}\n            mapStateActions={mapStateActions}\n          />\n        ))}\n      </>\n    );\n  };\n\n  return DatasetLayerGroup;\n}\n\nexport default DatasetLayerGroupFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useMemo} from 'react';\nimport styled from 'styled-components';\n\nimport SourceDataCatalogFactory from '../common/source-data-catalog';\nimport LayerListFactory from './layer-list';\nimport {Layer, LayerClassesType} from '@kepler.gl/layers';\nimport {UIStateActions, ActionHandler, VisStateActions, MapStateActions} from '@kepler.gl/actions';\nimport {KeplerTable, Datasets} from '@kepler.gl/table';\n\ntype DatasetLayerSectionProps = {\n  datasets: Datasets;\n  dataset: KeplerTable;\n  layers: Layer[];\n  layerOrder: string[];\n  layerClasses: LayerClassesType;\n  showDeleteDataset: boolean;\n  showDatasetTable: ActionHandler<typeof VisStateActions.showDatasetTable>;\n  updateTableColor: ActionHandler<typeof VisStateActions.updateTableColor>;\n  removeDataset: ActionHandler<typeof UIStateActions.openDeleteModal>;\n  uiStateActions: typeof UIStateActions;\n  visStateActions: typeof VisStateActions;  \n  mapStateActions: typeof MapStateActions;\n};\n\nconst DatasetLayerSectionWrapper = styled.div.attrs({\n  className: 'dataset-layer-section'\n})`\n  margin-bottom: 16px;\n`;\n\nDatasetLayerSectionFactory.deps = [SourceDataCatalogFactory, LayerListFactory];\n\nfunction DatasetLayerSectionFactory(\n  SourceDataCatalog: ReturnType<typeof SourceDataCatalogFactory>,\n  LayerList: ReturnType<typeof LayerListFactory>\n) {\n  const DatasetLayerSection: React.FC<DatasetLayerSectionProps> = props => {\n    const {\n      dataset,\n      datasets,\n      showDatasetTable,\n      layers,\n      updateTableColor,\n      showDeleteDataset,\n      removeDataset,\n      layerOrder,\n      layerClasses,\n      uiStateActions,\n      visStateActions,\n      mapStateActions\n    } = props;\n\n    const datasetCatalog = useMemo(() => {\n      return {[dataset.id]: dataset};\n    }, [dataset]);\n\n    return (\n      <DatasetLayerSectionWrapper>\n        <SourceDataCatalog\n          datasets={datasetCatalog}\n          showDatasetTable={showDatasetTable}\n          updateTableColor={updateTableColor}\n          removeDataset={removeDataset}\n          showDeleteDataset={showDeleteDataset}\n        />\n        <LayerList\n          datasets={datasets}\n          layerOrder={layerOrder}\n          layers={layers}\n          layerClasses={layerClasses}\n          uiStateActions={uiStateActions}\n          visStateActions={visStateActions}\n          mapStateActions={mapStateActions}\n          isSortable={false}\n        />\n      </DatasetLayerSectionWrapper>\n    );\n  };\n\n  return DatasetLayerSection;\n}\n\nexport default DatasetLayerSectionFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useCallback, useRef, useState} from 'react';\nimport styled from 'styled-components';\nimport {FormattedMessage} from '@kepler.gl/localization';\n\nimport {Table} from '@kepler.gl/layers';\nimport {CenterFlexbox, Tooltip} from '../../common/styled-components';\nimport {ArrowRight, Trash} from '../../common/icons';\nimport DatasetTagFactory from './dataset-tag';\nimport CustomPicker from '../layer-panel/custom-picker';\nimport {Portaled} from '../..';\nimport {rgbToHex} from '@kepler.gl/utils';\nimport {openDeleteModal, VisStateActions, ActionHandler} from '@kepler.gl/actions';\nimport {RGBColor} from '@kepler.gl/types';\nimport {StyledDatasetTitleProps, RemoveDatasetProps, ShowDataTableProps} from './types';\n\nconst StyledDatasetTitle = styled.div<StyledDatasetTitleProps>`\n  color: ${props => props.theme.textColor};\n  display: flex;\n  align-items: flex-start;\n\n  .source-data-arrow {\n    height: 16px;\n  }\n  :hover {\n    cursor: ${props => (props.clickable ? 'pointer' : 'auto')};\n\n    .dataset-name {\n      color: ${props => (props.clickable ? props.theme.textColorHl : props.theme.textColor)};\n    }\n\n    .dataset-action {\n      color: ${props => props.theme.textColor};\n      opacity: 1;\n    }\n\n    .dataset-action:hover {\n      color: ${props => props.theme.textColorHl};\n    }\n  }\n`;\n\nconst DataTagAction = styled.div`\n  margin-left: 12px;\n  height: 16px;\n  opacity: 0;\n`;\n\ntype MiniDataset = {\n  id: string;\n  color: RGBColor;\n  label?: string;\n};\n\nexport type DatasetTitleProps = {\n  dataset: MiniDataset;\n  showDeleteDataset: boolean;\n  onTitleClick?: () => void;\n  showDatasetTable?: ActionHandler<typeof VisStateActions.showDatasetTable>;\n  updateTableColor: ActionHandler<typeof VisStateActions.updateTableColor>;\n  removeDataset?: ActionHandler<typeof openDeleteModal>;\n};\n\nconst ShowDataTable = ({id, showDatasetTable}: ShowDataTableProps) => (\n  <DataTagAction className=\"dataset-action show-data-table\" data-tip data-for={`data-table-${id}`}>\n    <Table\n      height=\"16px\"\n      onClick={e => {\n        e.stopPropagation();\n        showDatasetTable?.(id);\n      }}\n    />\n    <Tooltip id={`data-table-${id}`} effect=\"solid\">\n      <span>\n        <FormattedMessage id={'datasetTitle.showDataTable'} />\n      </span>\n    </Tooltip>\n  </DataTagAction>\n);\n\nconst RemoveDataset = ({datasetKey, removeDataset}: RemoveDatasetProps) => (\n  <DataTagAction\n    className=\"dataset-action remove-dataset\"\n    data-tip\n    data-for={`delete-${datasetKey}`}\n  >\n    <Trash\n      height=\"16px\"\n      onClick={e => {\n        e.stopPropagation();\n        removeDataset?.(datasetKey);\n      }}\n    />\n    <Tooltip id={`delete-${datasetKey}`} effect=\"solid\" type=\"error\">\n      <span>\n        <FormattedMessage id={'datasetTitle.removeDataset'} />\n      </span>\n    </Tooltip>\n  </DataTagAction>\n);\n\nDatasetTitleFactory.deps = [DatasetTagFactory];\n\nexport default function DatasetTitleFactory(\n  DatasetTag: ReturnType<typeof DatasetTagFactory>\n): React.FC<DatasetTitleProps> {\n  const DatasetTitle: React.FC<DatasetTitleProps> = ({\n    showDatasetTable,\n    showDeleteDataset,\n    onTitleClick,\n    removeDataset,\n    dataset,\n    updateTableColor\n  }) => {\n    const [displayColorPicker, setDisplayColorPicker] = useState(false);\n    const root = useRef(null);\n    const datasetId = dataset.id;\n    const _handleClick = useCallback(() => {\n      setDisplayColorPicker(!displayColorPicker);\n    }, [setDisplayColorPicker, displayColorPicker]);\n\n    const _handleClosePicker = useCallback(() => {\n      setDisplayColorPicker(false);\n    }, [setDisplayColorPicker]);\n    const _handleCustomPicker = useCallback(\n      (color: {rgb: Record<string, number>}) => {\n        updateTableColor(datasetId, [color.rgb.r, color.rgb.g, color.rgb.b]);\n      },\n      [updateTableColor, datasetId]\n    );\n\n    const _onClickTitle = useCallback(\n      (e: React.MouseEvent<HTMLDivElement>) => {\n        e.stopPropagation();\n        if (typeof onTitleClick === 'function') {\n          onTitleClick();\n        } else if (typeof showDatasetTable === 'function') {\n          showDatasetTable(datasetId);\n        }\n      },\n      [onTitleClick, showDatasetTable, datasetId]\n    );\n\n    return (\n      <div className=\"custom-palette-panel\" ref={root}>\n        <StyledDatasetTitle\n          className=\"source-data-title\"\n          clickable={Boolean(showDatasetTable || onTitleClick)}\n        >\n          <DatasetTag\n            dataset={dataset}\n            onClick={_onClickTitle}\n            updateTableColor={updateTableColor}\n            onClickSquare={_handleClick}\n          />\n          <Portaled\n            isOpened={displayColorPicker !== false}\n            left={110}\n            top={-50}\n            onClose={_handleClosePicker}\n          >\n            <CustomPicker\n              color={rgbToHex(dataset.color)}\n              onChange={_handleCustomPicker}\n              onSwatchClose={_handleClosePicker}\n            />\n          </Portaled>\n          {showDatasetTable ? (\n            <CenterFlexbox className=\"source-data-arrow\">\n              <ArrowRight height=\"12px\" />\n            </CenterFlexbox>\n          ) : null}\n          {showDatasetTable ? (\n            <ShowDataTable id={datasetId} showDatasetTable={showDatasetTable} />\n          ) : null}\n          {showDeleteDataset ? (\n            <RemoveDataset datasetKey={datasetId} removeDataset={removeDataset} />\n          ) : null}\n        </StyledDatasetTitle>\n      </div>\n    );\n  };\n\n  return DatasetTitle;\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport {format} from 'd3-format';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {DataContainerInterface} from '@kepler.gl/utils';\n\nconst numFormat = format(',');\n\ntype MiniDataset = {\n  dataContainer: DataContainerInterface;\n};\n\nexport type DatasetInfoProps = {\n  dataset: MiniDataset;\n};\n\nconst StyledDataRowCount = styled.div`\n  font-size: 11px;\n  color: ${props => props.theme.subtextColor};\n  padding-left: 19px;\n`;\n\nexport default function DatasetInfoFactory() {\n  const DatasetInfo: React.FC<DatasetInfoProps> = ({dataset}: DatasetInfoProps) => (\n    <StyledDataRowCount className=\"source-data-rows\">\n      <FormattedMessage\n        id={'datasetInfo.rowCount'}\n        values={{rowCount: numFormat(dataset.dataContainer.numRows())}}\n      />\n    </StyledDataRowCount>\n  );\n\n  return DatasetInfo;\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React from 'react';\nimport AddByDatasetButton from '../add-by-dataset-button';\nimport {Datasets} from '@kepler.gl/table';\n\nexport type AddLayerButtonProps = {\n  datasets: Datasets;\n  onAdd: (dataId: string) => void;\n};\n\nfunction AddLayerButtonFactory() {\n  const AddLayerButton: React.FC<AddLayerButtonProps> = ({datasets, onAdd}) => {\n    return (\n      <AddByDatasetButton\n        datasets={datasets}\n        className=\"add-layer-button\"\n        width=\"110px\"\n        onAdd={onAdd}\n        buttonIntlId=\"layerManager.addLayer\"\n      />\n    );\n  };\n\n  return AddLayerButton;\n}\nexport default AddLayerButtonFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useCallback, useMemo, useState} from 'react';\nimport styled from 'styled-components';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {Datasets} from '@kepler.gl/table';\n\nimport Tippy from '@tippyjs/react';\nimport {Add} from '../common/icons';\nimport {Button, DatasetSquare} from '../common/styled-components';\nimport Typeahead from '../common/item-selector/typeahead';\nimport Accessor from '../common/item-selector/accessor';\nimport {useIntl} from 'react-intl';\nimport {RootContext} from '../context';\n\nconst DropdownContainer = styled.div.attrs({\n  className: 'add-layer-menu-dropdown'\n})`\n  .list-selector {\n    border-top: 1px solid ${props => props.theme.secondaryInputBorderColor};\n    width: 100%;\n    /* disable scrolling, currently set to 280px internally */\n    max-height: unset;\n  }\n  .list__item > div {\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    line-height: 18px;\n    padding: 0;\n    svg {\n      margin-right: 10px;\n    }\n  }\n`;\n\nconst DropdownMenu = styled.div.attrs({\n  className: 'dropdown-menu'\n})`\n  display: flex;\n  flex-direction: column;\n  min-width: 240px;\n  max-width: 240px;\n  position: absolute;\n  top: 100%;\n  left: -53px;\n  z-index: 5;\n`;\n\nconst ListItemWrapper = styled.div.attrs({\n  className: 'dropdown-menu-list-item-wrapper'\n})`\n  display: flex;\n  color: ${props => props.theme.textColor};\n  font-size: 11px;\n  letter-spacing: 0.2px;\n  overflow: auto;\n  .dataset-color {\n    flex-shrink: 0;\n    margin-top: 3px;\n  }\n  .dataset-name {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`;\n\nconst TYPEAHEAD_CLASS = 'typeahead';\nconst TYPEAHEAD_INPUT_CLASS = 'typeahead__input';\n\nexport type AddByDatasetButtonProps = {\n  datasets: Datasets;\n  onAdd: (dataId: string) => void;\n  width: string;\n  buttonIntlId: string;\n  inactive?: boolean;\n  className?: string;\n};\n\nconst ListItem = ({value}) => (\n  <ListItemWrapper>\n    <DatasetSquare className=\"dataset-color\" backgroundColor={value.color} />\n    <div className=\"dataset-name\" title={value.label}>\n      {value.label}\n    </div>\n  </ListItemWrapper>\n);\n\nconst AddByDatasetButton: React.FC<AddByDatasetButtonProps> = ({\n  datasets,\n  onAdd,\n  buttonIntlId,\n  width,\n  className,\n  inactive\n}) => {\n  const [tippyInstance, setTippyInstance] = useState();\n\n  const options = useMemo(() => {\n    return Object.values(datasets).map(ds => ({\n      label: ds.label,\n      value: ds.id,\n      color: ds.color\n    }));\n  }, [datasets]);\n\n  const onClickBtn = useCallback(() => {\n    if (options.length === 1) {\n      onAdd(options[0].value);\n    }\n\n    return;\n  }, [options, onAdd]);\n\n  const onOptionSelected = useCallback(\n    option => {\n      onAdd(option.value);\n      if (tippyInstance) {\n        // @ts-ignore\n        tippyInstance.hide();\n      }\n    },\n    [onAdd, tippyInstance]\n  );\n\n  const intl = useIntl();\n\n  const buttonRendered = (\n    <Button\n      tabIndex={-1}\n      className={className || 'add-by-dataset-button'}\n      width={width}\n      onClick={onClickBtn}\n      disabled={!options.length || inactive}\n    >\n      <Add height=\"12px\" />\n      <FormattedMessage id={buttonIntlId} />\n    </Button>\n  );\n\n  return options.length === 1 ? (\n    buttonRendered\n  ) : (\n    <RootContext.Consumer>\n      {context => (\n        <Tippy\n          trigger=\"click\"\n          arrow={false}\n          interactive\n          placement=\"bottom\"\n          appendTo={context?.current || 'parent'}\n          // @ts-ignore\n          onCreate={setTippyInstance}\n          duration={0}\n          content={\n            <DropdownMenu>\n              <DropdownContainer>\n                <Typeahead\n                  className={TYPEAHEAD_CLASS}\n                  customClasses={{\n                    results: 'list-selector',\n                    input: TYPEAHEAD_INPUT_CLASS,\n                    listItem: 'list__item'\n                  }}\n                  placeholder={intl ? intl.formatMessage({id: 'placeholder.search'}) : 'Search'}\n                  selectedItems={null}\n                  options={options}\n                  displayOption={Accessor.generateOptionToStringFor('label')}\n                  filterOption={'label'}\n                  searchable\n                  onOptionSelected={onOptionSelected}\n                  customListItemComponent={ListItem}\n                />\n              </DropdownContainer>\n            </DropdownMenu>\n          }\n        >\n          {buttonRendered}\n        </Tippy>\n      )}\n    </RootContext.Consumer>\n  );\n};\n\nexport default AddByDatasetButton;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useCallback, useMemo} from 'react';\nimport {useIntl} from 'react-intl';\nimport {SidePanelDivider, SidePanelSection} from '../common/styled-components';\nimport SourceDataCatalogFactory from './common/source-data-catalog';\nimport FilterPanelFactory from './filter-panel/filter-panel';\nimport {FILTER_VIEW_TYPES, PANEL_VIEW_TOGGLES} from '@kepler.gl/constants';\nimport {Filter} from '@kepler.gl/types';\nimport {Layer} from '@kepler.gl/layers';\nimport {isSideFilter} from '@kepler.gl/utils';\nimport {VisStateActions, ActionHandler, UIStateActions, ActionHandlers} from '@kepler.gl/actions';\nimport {Datasets} from '@kepler.gl/table';\n\nimport PanelViewListToggleFactory from './panel-view-list-toggle';\nimport PanelTitleFactory from './panel-title';\nimport AddFilterButtonFactory from './filter-panel/add-filter-button';\nimport DatasetSectionFactory from './layer-panel/dataset-section';\nimport {PanelMeta} from './common/types';\n\ntype VisStateActionHandlers = ActionHandlers<typeof VisStateActions>;\ntype UiStateActionHandlers = ActionHandlers<typeof UIStateActions>;\n\nexport type FilterManagerProps = {\n  filters: Filter[];\n  datasets: Datasets;\n  layers: Layer[];\n  showDatasetTable: ActionHandler<typeof VisStateActions.showDatasetTable>;\n  updateTableColor: ActionHandler<typeof VisStateActions.updateTableColor>;\n  removeDataset: ActionHandler<typeof VisStateActions.removeDataset>;\n  showAddDataModal: () => void;\n\n  panelMetadata: PanelMeta;\n  panelListView: string;\n  visStateActions: VisStateActionHandlers;\n  uiStateActions: UiStateActionHandlers;\n};\n\ntype FilterListProps = {\n  filters: Filter[];\n  datasets: Datasets;\n  layers: Layer[];\n  filtersByIndex: {\n    filter: Filter;\n    idx: number;\n  }[];\n  isAnyFilterAnimating: boolean;\n  visStateActions: VisStateActionHandlers;\n};\n\nFilterManagerFactory.deps = [\n  DatasetSectionFactory,\n  FilterPanelFactory,\n  PanelTitleFactory,\n  AddFilterButtonFactory,\n  PanelViewListToggleFactory,\n  SourceDataCatalogFactory\n];\n\nfunction FilterManagerFactory(\n  DatasetSection: ReturnType<typeof DatasetSectionFactory>,\n  FilterPanel: ReturnType<typeof FilterPanelFactory>,\n  PanelTitle: ReturnType<typeof PanelTitleFactory>,\n  AddFilterButton: ReturnType<typeof AddFilterButtonFactory>,\n  PanelViewListToggle: ReturnType<typeof PanelViewListToggleFactory>,\n  SourceDataCatalog: ReturnType<typeof SourceDataCatalogFactory>\n) {\n  const FilterList = ({\n    filtersByIndex,\n    filters,\n    datasets,\n    layers,\n    isAnyFilterAnimating,\n    visStateActions\n  }: FilterListProps) => {\n    const {\n      removeFilter,\n      setFilter,\n      toggleFilterAnimation,\n      toggleFilterFeature,\n      setFilterView\n    } = visStateActions;\n\n    const filterPanelCallbacks = useMemo(() => {\n      return filtersByIndex.reduce(\n        (accu, {filter, idx}) => ({\n          ...accu,\n          [filter.id]: {\n            removeFilter: () => removeFilter(idx),\n            toggleFilterView: () =>\n              setFilterView(\n                idx,\n                isSideFilter(filter) ? FILTER_VIEW_TYPES.enlarged : FILTER_VIEW_TYPES.side\n              ),\n            toggleAnimation: () => toggleFilterAnimation(idx),\n            toggleFilterFeature: () => toggleFilterFeature(idx)\n          }\n        }),\n        {}\n      );\n    }, [filtersByIndex, removeFilter, setFilterView, toggleFilterAnimation, toggleFilterFeature]);\n\n    return (\n      <SidePanelSection>\n        {[...filtersByIndex].reverse().map(({filter, idx}) => (\n          <FilterPanel\n            key={`${filter.id}-${idx}`}\n            idx={idx}\n            filters={filters}\n            filter={filter}\n            datasets={datasets}\n            layers={layers}\n            isAnyFilterAnimating={isAnyFilterAnimating}\n            removeFilter={filterPanelCallbacks[filter.id].removeFilter}\n            enlargeFilter={filterPanelCallbacks[filter.id].toggleFilterView}\n            toggleAnimation={filterPanelCallbacks[filter.id].toggleAnimation}\n            toggleFilterFeature={filterPanelCallbacks[filter.id].toggleFilterFeature}\n            setFilter={setFilter}\n          />\n        ))}\n      </SidePanelSection>\n    );\n  };\n\n  const DatasetFilterSection = ({\n    filtersByIndex,\n    filters,\n    dataset,\n    datasets,\n    layers,\n    isAnyFilterAnimating,\n    visStateActions,\n    showDatasetTable,\n    updateTableColor,\n    removeDataset,\n    showDeleteDataset\n  }) => {\n    const datasetCatalog = useMemo(() => {\n      return {[dataset.id]: dataset};\n    }, [dataset]);\n\n    return (\n      <>\n        <SourceDataCatalog\n          datasets={datasetCatalog}\n          showDatasetTable={showDatasetTable}\n          updateTableColor={updateTableColor}\n          removeDataset={removeDataset}\n          showDeleteDataset={showDeleteDataset}\n        />\n        <FilterList\n          filtersByIndex={filtersByIndex}\n          filters={filters}\n          datasets={datasets}\n          layers={layers}\n          isAnyFilterAnimating={isAnyFilterAnimating}\n          visStateActions={visStateActions}\n        />\n      </>\n    );\n  };\n\n  const FilterManager: React.FC<FilterManagerProps> = ({\n    filters = [],\n    datasets,\n    layers,\n    showDatasetTable,\n    updateTableColor,\n    removeDataset,\n    showAddDataModal,\n    panelMetadata,\n    panelListView,\n    visStateActions,\n    uiStateActions\n  }) => {\n    const {addFilter} = visStateActions;\n    const {togglePanelListView} = uiStateActions;\n    const isAnyFilterAnimating = filters.some(f => f.isAnimating);\n    const onClickAddFilter = useCallback(dataset => addFilter(dataset), [addFilter]);\n    const isSortByDatasetMode = panelListView === PANEL_VIEW_TOGGLES.byDataset;\n    const filtersByIndex = useMemo(\n      () =>\n        filters.map((f, idx) => ({\n          filter: f,\n          idx\n        })),\n      [filters]\n    );\n    const filtersByDatasets = useMemo(\n      () =>\n        Object.keys(datasets).reduce(\n          (accu, dataId) => ({\n            ...accu,\n            // if synced filter, show it unfder its the first dataset\n            [dataId]: filtersByIndex.filter(\n              fidx => fidx.filter.dataId && fidx.filter.dataId[0] === dataId\n            )\n          }),\n          {}\n        ),\n      [datasets, filtersByIndex]\n    );\n    const _TogglePanelListView = useCallback(\n      listView => {\n        togglePanelListView({panelId: 'filter', listView});\n      },\n      [togglePanelListView]\n    );\n\n    const intl = useIntl();\n    const filterListProps = {\n      datasets,\n      filters,\n      layers,\n      isAnyFilterAnimating,\n      visStateActions\n    };\n\n    const sourceDataCatalogProps = {\n      showDatasetTable,\n      updateTableColor,\n      removeDataset,\n      showDeleteDataset: true\n    };\n\n    return (\n      <div className=\"filter-manager\">\n        <SidePanelSection>\n          <PanelViewListToggle togglePanelListView={_TogglePanelListView} mode={panelListView} />\n        </SidePanelSection>\n        <DatasetSection\n          datasets={datasets}\n          {...sourceDataCatalogProps}\n          showDatasetList={!isSortByDatasetMode}\n          showAddDataModal={showAddDataModal}\n        />\n        <SidePanelDivider />\n        <SidePanelSection>\n          <PanelTitle\n            className=\"filter-manager-title\"\n            title={intl.formatMessage({id: panelMetadata.label})}\n          >\n            <AddFilterButton datasets={datasets} onAdd={onClickAddFilter} />\n          </PanelTitle>\n        </SidePanelSection>\n        <SidePanelSection>\n          {isSortByDatasetMode ? (\n            Object.keys(filtersByDatasets).map(dataId => (\n              <DatasetFilterSection\n                key={dataId}\n                filtersByIndex={filtersByDatasets[dataId]}\n                dataset={datasets[dataId]}\n                {...filterListProps}\n                {...sourceDataCatalogProps}\n              />\n            ))\n          ) : (\n            <FilterList filtersByIndex={filtersByIndex} {...filterListProps} />\n          )}\n        </SidePanelSection>\n      </div>\n    );\n  };\n\n  return FilterManager;\n}\n\nexport default FilterManagerFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {Component} from 'react';\nimport {createSelector} from 'reselect';\nimport styled from 'styled-components';\nimport get from 'lodash.get';\nimport {ALL_FIELD_TYPES, FILTER_TYPES} from '@kepler.gl/constants';\n\nimport NewFilterPanelFactory from '../../filters/filter-panels/new-filter-panel';\nimport TimeRangeFilterPanelFactory from '../../filters/filter-panels/time-range-filter-panel';\nimport SingleSelectFilterPanelFactory from '../../filters/filter-panels/single-select-filter-panel';\nimport MultiSelectFilterPanelFactory from '../../filters/filter-panels/multi-select-filter-panel';\nimport RangeFilterPanelFactory from '../../filters/filter-panels/range-filter-panel';\nimport PolygonFilterPanelFactory from '../../filters/filter-panels/polygon-filter-panel';\nimport {Field, Filter} from '@kepler.gl/types';\nimport {FilterPanelProps} from '../../filters/filter-panels/types';\nimport {Layer} from '@kepler.gl/layers';\n\nconst StyledFilterPanel = styled.div`\n  margin-bottom: 12px;\n  border-radius: 1px;\n`;\n\ninterface FilterPanelPropsImpl extends Omit<FilterPanelProps, 'allAvailableFields'> {\n  filters: Filter[];\n  layers: ReadonlyArray<Layer>;\n  isAnyFilterAnimating: boolean;\n  enlargeFilter: () => void;\n  toggleAnimation: () => void;\n  toggleFilterFeature: () => void;\n}\n\nFilterPanelFactory.deps = [\n  NewFilterPanelFactory,\n  TimeRangeFilterPanelFactory,\n  SingleSelectFilterPanelFactory,\n  MultiSelectFilterPanelFactory,\n  RangeFilterPanelFactory,\n  PolygonFilterPanelFactory\n];\n\nfunction FilterPanelFactory(\n  NewFilterPanel: ReturnType<typeof NewFilterPanelFactory>,\n  TimeRangeFilterPanel: ReturnType<typeof TimeRangeFilterPanelFactory>,\n  SingleSelectFilterPanel: ReturnType<typeof SingleSelectFilterPanelFactory>,\n  MultiSelectFilterPanel: ReturnType<typeof MultiSelectFilterPanelFactory>,\n  RangeFilterPanel: ReturnType<typeof RangeFilterPanelFactory>,\n  PolygonFilterPanel: ReturnType<typeof PolygonFilterPanelFactory>\n): React.ComponentType<FilterPanelPropsImpl> {\n  const FilterPanelComponents = {\n    default: NewFilterPanel,\n    [FILTER_TYPES.timeRange]: TimeRangeFilterPanel,\n    [FILTER_TYPES.select]: SingleSelectFilterPanel,\n    [FILTER_TYPES.multiSelect]: MultiSelectFilterPanel,\n    [FILTER_TYPES.range]: RangeFilterPanel,\n    [FILTER_TYPES.polygon]: PolygonFilterPanel\n  };\n\n  return class FilterPanel extends Component<FilterPanelPropsImpl> {\n    /* selectors */\n    fieldsSelector = (props: FilterPanelPropsImpl) => {\n      const datasetId = props.filter.dataId[0];\n      if (!datasetId) {\n        return [];\n      }\n      return get(props, ['datasets', datasetId, 'fields'], []);\n    };\n\n    filterSelector = (props: FilterPanelPropsImpl) => props.filters;\n    nameSelector = (props: FilterPanelPropsImpl) => props.filter.name;\n    dataIdSelector = (props: FilterPanelPropsImpl) => props.filter.dataId[0];\n\n    // only show current field and field that's not already been used as a filter\n    availableFieldsSelector = createSelector(\n      this.fieldsSelector,\n      this.filterSelector,\n      this.nameSelector,\n      this.dataIdSelector,\n      (fields, filters, name, dataId) =>\n        fields.filter(\n          (f: Field) =>\n            f.type &&\n            f.type !== ALL_FIELD_TYPES.geojson &&\n            (name.includes(f.name) ||\n              !filters.find(d => d.name.includes(f.name) && d.dataId.includes(dataId)))\n        )\n    );\n\n    render() {\n      const {filter} = this.props;\n\n      const {type} = filter;\n      const FilterFilterComponent =\n        (type && FilterPanelComponents[type]) || FilterPanelComponents.default;\n      const allAvailableFields = this.availableFieldsSelector(this.props);\n\n      return (\n        <StyledFilterPanel className=\"filter-panel\">\n          <FilterFilterComponent allAvailableFields={allAvailableFields} {...this.props} />\n        </StyledFilterPanel>\n      );\n    }\n  };\n}\n\nexport default FilterPanelFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React from 'react';\nimport ItemSelector from '../common/item-selector/item-selector';\nimport {PanelLabel, SidePanelSection} from '../common/styled-components';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {SingleSelectFilterProps} from './types';\n\nexport default function SingleSelectFilterFactory() {\n  const SingleSelectFilter: React.FC<SingleSelectFilterProps> = ({filter, setFilter}) => (\n    <SidePanelSection>\n      <PanelLabel>\n        <FormattedMessage id={'misc.valueEquals'} />\n      </PanelLabel>\n      <ItemSelector\n        selectedItems={filter.value}\n        placeholder=\"placeholder.selectValue\"\n        options={filter.domain}\n        multiSelect={false}\n        searchable={false}\n        displayOption={d => String(d)}\n        getOptionValue={d => d}\n        onChange={setFilter}\n        inputTheme=\"secondary\"\n      />\n    </SidePanelSection>\n  );\n\n  SingleSelectFilter.displayName = 'SingleSelectFilter';\n\n  return SingleSelectFilter;\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React from 'react';\nimport ItemSelector from '../common/item-selector/item-selector';\nimport {PanelLabel} from '../common/styled-components';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {MultiSelectFilterProps} from './types';\n\nexport default function MultiSelectFilterFactory() {\n  const MultiSelectFilter: React.FC<MultiSelectFilterProps> = ({filter, setFilter}) => (\n    <div>\n      <PanelLabel htmlFor={`filter-${filter.id}`}>\n        <FormattedMessage id={'misc.valuesIn'} />\n      </PanelLabel>\n      <ItemSelector options={filter.domain} selectedItems={filter.value} onChange={setFilter} />\n    </div>\n  );\n  return MultiSelectFilter;\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React from 'react';\nimport RangeSliderFactory from '../common/range-slider';\nimport {FILTER_VIEW_TYPES} from '@kepler.gl/constants';\nimport {RangeFilterProps} from './types';\n\nRangeFilterFactory.deps = [RangeSliderFactory];\n\nexport default function RangeFilterFactory(RangeSlider: ReturnType<typeof RangeSliderFactory>) {\n  const RangeFilter: React.FC<RangeFilterProps> = ({filter, setFilter}) => (\n    <div>\n      <RangeSlider\n        range={filter.domain}\n        value0={filter.value[0]}\n        value1={filter.value[1]}\n        step={filter.step}\n        histogram={filter.histogram}\n        isEnlarged={filter.view === FILTER_VIEW_TYPES.enlarged}\n        onChange={setFilter}\n        inputTheme=\"secondary\"\n      />\n    </div>\n  );\n\n  return RangeFilter;\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport styled from 'styled-components';\nimport {PanelLabel} from '../common/styled-components';\n\nexport const StyledFilterPanel = styled(PanelLabel)`\n  font-weight: 500;\n  color: white;\n  flex: 1;\n`;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React from 'react';\nimport {Datasets} from '@kepler.gl/table';\nimport AddByDatasetButton from '../add-by-dataset-button';\n\nexport type AddFilterButtonProps = {\n  datasets: Datasets;\n  onAdd: (dataId: string) => void;\n};\n\nfunction AddFilterButtonFactory() {\n  const AddFilterButton: React.FC<AddFilterButtonProps> = ({datasets, onAdd}) => {\n    return (\n      <AddByDatasetButton\n        datasets={datasets}\n        className=\"add-filter-button\"\n        width=\"105px\"\n        onAdd={onAdd}\n        buttonIntlId=\"filterManager.addFilter\"\n      />\n    );\n  };\n\n  return AddFilterButton;\n}\n\nexport default AddFilterButtonFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React from 'react';\nimport {useIntl} from 'react-intl';\n\nimport {InteractionConfig} from '@kepler.gl/types';\nimport {VisStateActions} from '@kepler.gl/actions';\nimport {Datasets} from '@kepler.gl/table';\n\nimport InteractionPanelFactory from './interaction-panel/interaction-panel';\nimport PanelTitleFactory from './panel-title';\n\nimport {PanelMeta} from './common/types';\n\ntype InteractionManagerProps = {\n  interactionConfig: InteractionConfig;\n  datasets: Datasets;\n  visStateActions: typeof VisStateActions;\n  panelMetadata: PanelMeta;\n};\n\nInteractionManagerFactory.deps = [InteractionPanelFactory, PanelTitleFactory];\n\nfunction InteractionManagerFactory(\n  InteractionPanel: ReturnType<typeof InteractionPanelFactory>,\n  PanelTitle: ReturnType<typeof PanelTitleFactory>\n) {\n  const InteractionManager: React.FC<InteractionManagerProps> = ({\n    interactionConfig,\n    datasets,\n    visStateActions,\n    panelMetadata\n  }) => {\n    const {interactionConfigChange: onConfigChange, setColumnDisplayFormat} = visStateActions;\n    const intl = useIntl();\n    return (\n      <div className=\"interaction-manager\">\n        <PanelTitle\n          className=\"interaction-manager-title\"\n          title={intl.formatMessage({id: panelMetadata.label})}\n        />\n        {Object.keys(interactionConfig).map(key => (\n          <InteractionPanel\n            datasets={datasets}\n            config={interactionConfig[key]}\n            key={key}\n            onConfigChange={onConfigChange}\n            setColumnDisplayFormat={setColumnDisplayFormat}\n          />\n        ))}\n      </div>\n    );\n  };\n\n  return InteractionManager;\n}\n\nexport default InteractionManagerFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React from 'react';\nimport RangeSliderFactory from '../../common/range-slider';\n\nimport {PanelLabel, SidePanelSection} from '../../common/styled-components';\nimport {BRUSH_CONFIG} from '@kepler.gl/reducers';\nimport {FormattedMessage} from '@kepler.gl/localization';\n\nBrushConfigFactory.deps = [RangeSliderFactory];\n\ntype BrushConfigProps = {\n  config: {\n    size: number;\n  };\n  onChange: (config: {size: number}) => void;\n};\n\nfunction BrushConfigFactory(RangeSlider: ReturnType<typeof RangeSliderFactory>) {\n  const BrushConfig = ({config, onChange}: BrushConfigProps) => (\n    <SidePanelSection>\n      <PanelLabel>\n        <FormattedMessage id={'misc.brushRadius'} />\n      </PanelLabel>\n      <RangeSlider\n        range={BRUSH_CONFIG.range}\n        value0={0}\n        value1={config.size || 10 / 2}\n        step={0.1}\n        isRanged={false}\n        onChange={value => onChange({...config, size: value[1]})}\n        inputTheme=\"secondary\"\n      />\n    </SidePanelSection>\n  );\n\n  return BrushConfig;\n}\n\nexport default BrushConfigFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useCallback} from 'react';\nimport styled from 'styled-components';\nimport {injectIntl, IntlShape} from 'react-intl';\nimport {FormattedMessage} from '@kepler.gl/localization';\n\nimport {\n  SidePanelSection,\n  SBFlexboxNoMargin,\n  Button,\n  PanelLabel\n} from '../../common/styled-components';\nimport DatasetTagFactory from '../common/dataset-tag';\nimport TooltipChickletFactory from './tooltip-config/tooltip-chicklet';\nimport Switch from '../../common/switch';\nimport ItemSelector from '../../common/item-selector/item-selector';\nimport {COMPARE_TYPES, GEOCODER_DATASET_NAME} from '@kepler.gl/constants';\nimport FieldSelectorFactory from '../../common/field-selector';\nimport KeplerTable, {Datasets} from '@kepler.gl/table';\n\nconst TooltipConfigWrapper = styled.div`\n  .item-selector > div > div {\n    overflow: visible;\n  }\n`;\n\nconst ButtonWrapper = styled.div`\n  display: inherit;\n  padding: 0;\n\n  .button.clear-all {\n    background: transparent;\n    color: ${props => props.theme.subtextColor};\n    margin: 0 0 0 8px;\n    padding: 0;\n\n    &:hover {\n      color: ${props => props.theme.textColor};\n    }\n  }\n`;\n\nconst CompareSwitchWrapper = styled.div`\n  color: ${props => props.theme.labelColor};\n  display: flex;\n  font-size: ${props => props.theme.inputFontSize};\n  justify-content: space-between;\n  line-height: 11px;\n  margin-bottom: 8px;\n`;\n\ntype TooltipConfigProps = {\n  config: {\n    fieldsToShow: {\n      [key: string]: {name: string; format: string | null}[];\n    };\n    compareMode: boolean;\n    compareType: string | null;\n  };\n  onChange: (config: {\n    fieldsToShow: {\n      [key: string]: {name: string; format: string | null}[];\n    };\n    compareMode: boolean;\n    compareType: string | null;\n  }) => void;\n  datasets: Datasets;\n  intl: IntlShape;\n  onDisplayFormatChange: (dataId, column, displayFormat) => void;\n};\n\ntype DatasetTooltipConfigProps = {\n  config: {\n    fieldsToShow: {\n      [key: string]: {name: string; format: string | null}[];\n    };\n    compareMode: boolean;\n    compareType: string | null;\n  };\n  onChange: (config: {\n    fieldsToShow: {\n      [key: string]: {name: string; format: string | null}[];\n    };\n    compareMode: boolean;\n    compareType: string | null;\n  }) => void;\n  dataset: KeplerTable;\n  onDisplayFormatChange: (dataId, column, displayFormat) => void;\n};\n\nTooltipConfigFactory.deps = [DatasetTagFactory, FieldSelectorFactory];\nfunction TooltipConfigFactory(\n  DatasetTag: ReturnType<typeof DatasetTagFactory>,\n  FieldSelector: ReturnType<typeof FieldSelectorFactory>\n) {\n  const DatasetTooltipConfig = ({\n    config,\n    onChange,\n    dataset,\n    onDisplayFormatChange\n  }: DatasetTooltipConfigProps) => {\n    const dataId = dataset.id;\n\n    const handleClick = useCallback(\n      () =>\n        onChange({\n          ...config,\n          fieldsToShow: {\n            ...config.fieldsToShow,\n            [dataId]: []\n          }\n        }),\n      [config, dataId, onChange]\n    );\n\n    const findSelectedHelper = useCallback((selected, tooltipFields) => {\n      return selected.map(\n        f =>\n          tooltipFields.find(tooltipField => tooltipField.name === f.name) || {\n            name: f.name,\n            // default initial tooltip is null\n            format: null\n          }\n      );\n    }, []);\n\n    const handleSelect = useCallback(\n      selected => {\n        const newConfig: DatasetTooltipConfigProps['config'] = {\n          ...config,\n          fieldsToShow: {\n            ...config.fieldsToShow,\n            [dataId]: findSelectedHelper(selected, config.fieldsToShow[dataId])\n          }\n        };\n        onChange(newConfig);\n      },\n      [config, dataId, onChange]\n    );\n\n    const handleReorderItems = useCallback(\n      newOrder =>\n        onChange({\n          ...config,\n          fieldsToShow: {\n            ...config.fieldsToShow,\n            [dataId]: newOrder\n          }\n        }),\n      [config, dataId, onChange]\n    );\n    return (\n      <SidePanelSection key={dataId}>\n        <SBFlexboxNoMargin>\n          <DatasetTag dataset={dataset} />\n          {Boolean(config.fieldsToShow[dataId].length) && (\n            <ButtonWrapper>\n              <Button className=\"clear-all\" onClick={handleClick} width=\"54px\" secondary>\n                <FormattedMessage id=\"fieldSelector.clearAll\" />\n              </Button>\n            </ButtonWrapper>\n          )}\n        </SBFlexboxNoMargin>\n        <FieldSelector\n          fields={dataset.fields}\n          value={config.fieldsToShow[dataId]}\n          onSelect={handleSelect}\n          reorderItems={handleReorderItems}\n          closeOnSelect={false}\n          multiSelect\n          inputTheme=\"secondary\"\n          CustomChickletComponent={TooltipChickletFactory(\n            dataId,\n            config,\n            onChange,\n            dataset.fields,\n            onDisplayFormatChange\n          )}\n        />\n      </SidePanelSection>\n    );\n  };\n\n  const TooltipConfig = ({\n    config,\n    datasets,\n    onChange,\n    onDisplayFormatChange,\n    intl\n  }: TooltipConfigProps) => {\n    const handleChange = useCallback(\n      (option: string | number | boolean | object | null) =>\n        onChange({\n          ...config,\n          compareType: option as string | null\n        }),\n      [config, onChange]\n    );\n\n    return (\n      <TooltipConfigWrapper>\n        {Object.keys(config.fieldsToShow).map(dataId =>\n          dataId === GEOCODER_DATASET_NAME ? null : (\n            <DatasetTooltipConfig\n              key={dataId}\n              config={config}\n              onChange={onChange}\n              dataset={datasets[dataId]}\n              onDisplayFormatChange={onDisplayFormatChange}\n            />\n          )\n        )}\n        <CompareSwitchWrapper>\n          <FormattedMessage id=\"compare.modeLabel\" />\n          <Switch\n            checked={config.compareMode}\n            id=\"compare-mode-toggle\"\n            onChange={() => {\n              const newConfig = {\n                ...config,\n                compareMode: !config.compareMode\n              };\n              onChange(newConfig);\n            }}\n            secondary\n          />\n        </CompareSwitchWrapper>\n        <SidePanelSection>\n          <PanelLabel>\n            <FormattedMessage id=\"compare.typeLabel\" />\n          </PanelLabel>\n          <ItemSelector\n            disabled={!config.compareMode}\n            displayOption={d =>\n              intl.formatMessage({\n                id: `compare.types.${d}`\n              })\n            }\n            selectedItems={config.compareType}\n            options={Object.values(COMPARE_TYPES)}\n            multiSelect={false}\n            searchable={false}\n            inputTheme={'secondary'}\n            getOptionValue={d => d}\n            onChange={handleChange}\n          />\n        </SidePanelSection>\n      </TooltipConfigWrapper>\n    );\n  };\n\n  return injectIntl(TooltipConfig);\n}\n\nexport default TooltipConfigFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {Component} from 'react';\nimport {createSelector} from 'reselect';\n\nimport {Button} from '../common/styled-components';\nimport MapStyleSelectorFactory from './map-style-panel/map-style-selector';\nimport LayerGroupSelectorFactory from './map-style-panel/map-layer-selector';\nimport PanelTitleFactory from '../side-panel/panel-title';\n\nimport {Add, Trash} from '../common/icons';\nimport {PanelMeta} from './common/types';\nimport {injectIntl, WrappedComponentProps} from 'react-intl';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {MapStyle} from '@kepler.gl/reducers';\nimport {MapStyleActions} from '@kepler.gl/actions';\nimport {MapStyles} from '@kepler.gl/types';\n\nexport type MapManagerProps = {\n  mapStyle: MapStyle;\n  mapStyleActions: {\n    mapStyleChange: typeof MapStyleActions.mapStyleChange;\n    mapConfigChange: typeof MapStyleActions.mapConfigChange;\n    set3dBuildingColor: typeof MapStyleActions.set3dBuildingColor;\n    setBackgroundColor: typeof MapStyleActions.setBackgroundColor;\n    removeCustomMapStyle: typeof MapStyleActions.removeCustomMapStyle;\n  };\n  showAddMapStyleModal: () => void;\n  panelMetadata: PanelMeta;\n} & WrappedComponentProps;\n\nMapManagerFactory.deps = [MapStyleSelectorFactory, LayerGroupSelectorFactory, PanelTitleFactory];\n\nfunction MapManagerFactory(\n  MapStyleSelector: ReturnType<typeof MapStyleSelectorFactory>,\n  LayerGroupSelector: ReturnType<typeof LayerGroupSelectorFactory>,\n  PanelTitle: ReturnType<typeof PanelTitleFactory>\n) {\n  class MapManager extends Component<MapManagerProps> {\n    state = {\n      isSelecting: false\n    };\n\n    _toggleSelecting = () => {\n      this.setState({isSelecting: !this.state.isSelecting});\n    };\n\n    _selectStyle = (val: string) => {\n      const {mapStyleActions} = this.props;\n      const {mapStyleChange} = mapStyleActions;\n      mapStyleChange(val);\n      this._toggleSelecting();\n    };\n\n    getCustomMapStylesActions = createSelector(\n      (props: MapManagerProps) => props.mapStyle.mapStyles,\n      (props: MapManagerProps) => props.mapStyleActions,\n      (mapStyles: MapStyles, mapStyleActions) => {\n        const actionsPerCustomStyle = {};\n        Object.values(mapStyles)\n          .filter(mapStyle => {\n            return Boolean(mapStyle.custom);\n          })\n          .forEach(({id}) => {\n            actionsPerCustomStyle[id] = [\n              {\n                id: `remove-map-style-${id}`,\n                IconComponent: Trash,\n                tooltip: 'tooltip.removeBaseMapStyle',\n                onClick: () => mapStyleActions.removeCustomMapStyle({id})\n              }\n            ];\n          });\n        return actionsPerCustomStyle;\n      }\n    );\n\n    render() {\n      const {mapStyle, intl, mapStyleActions, showAddMapStyleModal, panelMetadata} = this.props;\n      const currentStyle = mapStyle.mapStyles[mapStyle.styleType] || {};\n      const editableLayers = currentStyle.layerGroups || [];\n      const customMapStylesActions = this.getCustomMapStylesActions(this.props);\n\n      return (\n        <div className=\"map-style-panel\">\n          <PanelTitle\n            className=\"map-manager-title\"\n            title={intl.formatMessage({id: panelMetadata.label})}\n          >\n            <Button className=\"add-map-style-button\" onClick={showAddMapStyleModal}>\n              <Add height=\"12px\" />\n              <FormattedMessage id={'mapManager.addMapStyle'} />\n            </Button>\n          </PanelTitle>\n          <div>\n            <MapStyleSelector\n              mapStyle={mapStyle}\n              isSelecting={this.state.isSelecting}\n              onChange={this._selectStyle}\n              toggleActive={this._toggleSelecting}\n              customMapStylesActions={customMapStylesActions}\n            />\n            {editableLayers.length ? (\n              <LayerGroupSelector\n                layers={mapStyle.visibleLayerGroups}\n                editableLayers={editableLayers}\n                topLayers={mapStyle.topLayerGroups}\n                onChange={mapStyleActions.mapConfigChange}\n                threeDBuildingColor={mapStyle.threeDBuildingColor}\n                on3dBuildingColorChange={mapStyleActions.set3dBuildingColor}\n                backgroundColor={mapStyle.backgroundColor}\n                onBackgroundColorChange={mapStyleActions.setBackgroundColor}\n              />\n            ) : null}\n          </div>\n        </div>\n      );\n    }\n  }\n  return injectIntl(MapManager);\n}\n\nexport default MapManagerFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {ComponentType} from 'react';\nimport styled from 'styled-components';\nimport classnames from 'classnames';\n\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {MapStyle} from '@kepler.gl/reducers';\nimport {NO_BASEMAP_ICON} from '@kepler.gl/constants';\nimport {MapStyles} from '@kepler.gl/types';\n\nimport {ArrowDown} from '../../common/icons';\nimport PanelHeaderActionFactory from '../panel-header-action';\nimport {\n  PanelHeaderContent,\n  PanelHeaderTitle,\n  PanelLabel,\n  StyledPanelHeader,\n  StyledPanelHeaderProps\n} from '../../common/styled-components';\nimport {BaseProps} from '../../common/icons';\nimport {PanelHeaderActionIcon} from '../panel-header-action';\n\ntype StyledMapDropdownProps = StyledPanelHeaderProps & {hasCallout: boolean};\n\nconst StyledMapDropdown = styled(StyledPanelHeader)<StyledMapDropdownProps>`\n  height: 48px;\n  margin-bottom: 5px;\n  opacity: 1;\n  position: relative;\n  transition: opacity 0.05s ease-in, height 0.25s ease-out;\n\n  &.collapsed {\n    height: 0;\n    margin-bottom: 0;\n    opacity: 0;\n  }\n\n  :hover {\n    cursor: pointer;\n    background-color: ${props => props.theme.panelBackgroundHover};\n  }\n\n  .map-title-block img {\n    margin-right: 12px;\n  }\n\n  .map-preview {\n    border-radius: 3px;\n    height: 30px;\n    width: 40px;\n  }\n\n  &.selected {\n    outline: 1px solid #caf2f4;\n  }\n\n  /* show callout dot if props.hasCallout and theme provides calloutDot base styles */\n  :after {\n    ${({theme}) => theme.calloutDot}\n    background-color: #00ACF5;\n    top: 12px;\n    left: 15px;\n    display: ${({theme, hasCallout}) => (theme.calloutDot && hasCallout ? 'block' : 'none')};\n  }\n\n  .custom-style-actions {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n`;\n\nexport type MapStyleSelectorProps = {\n  mapStyle: MapStyle;\n  onChange: (payload: string) => void;\n  toggleActive: () => void;\n  isSelecting: boolean;\n  customMapStylesActions?: Record<\n    string,\n    {\n      id: string;\n      IconComponent: PanelHeaderActionIcon;\n      tooltip: string;\n      onClick: () => void;\n    }[]\n  >;\n  actionIcons?: Record<string, ComponentType<Partial<BaseProps>>>;\n};\n\nMapStyleSelectorFactory.deps = [PanelHeaderActionFactory];\n\nfunction MapStyleSelectorFactory(PanelHeaderAction: ReturnType<typeof PanelHeaderActionFactory>) {\n  const defaultActionIcons = {\n    arrowDown: ArrowDown\n  };\n\n  const MapStyleSelector = ({\n    mapStyle,\n    onChange,\n    toggleActive,\n    isSelecting,\n    customMapStylesActions,\n    actionIcons = defaultActionIcons\n  }: MapStyleSelectorProps) => {\n    const {mapStyles, styleType}: {mapStyles: MapStyles; styleType: string} = mapStyle;\n\n    return (\n      <div>\n        <PanelLabel>\n          <FormattedMessage id={'mapManager.mapStyle'} />\n        </PanelLabel>\n\n        {Object.values(mapStyles).map(\n          ({id, custom, icon = NO_BASEMAP_ICON, label = 'Untitled'}) => (\n            <StyledMapDropdown\n              className={classnames('map-dropdown-option', {\n                collapsed: !isSelecting && id !== styleType,\n                selected: isSelecting && id === styleType\n              })}\n              key={id}\n              onClick={isSelecting ? () => onChange(id) : toggleActive}\n              hasCallout={Boolean(custom)}\n            >\n              <PanelHeaderContent className=\"map-title-block\">\n                <img className=\"map-preview\" src={icon} />\n                <PanelHeaderTitle className=\"map-preview-name\">{label}</PanelHeaderTitle>\n              </PanelHeaderContent>\n              {!isSelecting ? (\n                <PanelHeaderAction\n                  className=\"map-dropdown-option__enable-config\"\n                  id=\"map-enable-config\"\n                  IconComponent={actionIcons.arrowDown}\n                  tooltip={'tooltip.selectBaseMapStyle'}\n                  onClick={toggleActive}\n                />\n              ) : null}\n              {isSelecting && custom ? (\n                <div className=\"custom-style-actions\">\n                  {(customMapStylesActions?.[id] || []).map(action => (\n                    <PanelHeaderAction\n                      key={action.id}\n                      className=\"map-dropdown-option__enable-config\"\n                      id={action.id}\n                      IconComponent={action.IconComponent}\n                      tooltip={action.tooltip}\n                      onClick={e => {\n                        e.stopPropagation();\n                        action.onClick();\n                      }}\n                    />\n                  ))}\n                </div>\n              ) : null}\n            </StyledMapDropdown>\n          )\n        )}\n      </div>\n    );\n  };\n\n  return MapStyleSelector;\n}\n\nexport default MapStyleSelectorFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport PanelHeaderActionFactory from '../panel-header-action';\nimport LayerGroupItemFactory, {LayerGroupItemActionIcons} from './map-layer-group-item';\nimport {EyeSeen, EyeUnseen} from '../../common/icons';\n\nimport {PanelLabel, PanelContent} from '../../common/styled-components';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {VisibleLayerGroups} from '@kepler.gl/types';\nimport {Upload} from '@kepler.gl/cloud-providers';\nimport {\n  THREE_D_BUILDING_LAYER_GROUP_SLUG,\n  BACKGROUND_LAYER_GROUP_SLUG,\n  DEFAULT_LAYER_GROUP\n} from '@kepler.gl/constants';\nimport {\n  MapConfigChangeUpdaterAction,\n  Set3dBuildingColorUpdaterAction,\n  SetBackgroundColorUpdaterAction\n} from '@kepler.gl/actions';\nimport {MapStyle} from '@kepler.gl/reducers';\n\nfunction noop() {}\n\nconst StyledInteractionPanel = styled.div`\n  padding-bottom: 12px;\n`;\n\nexport type LayerGroupSelectorProps = {\n  layers: VisibleLayerGroups;\n  editableLayers: DEFAULT_LAYER_GROUP[];\n  onChange: (payload: MapConfigChangeUpdaterAction['payload']) => void;\n  topLayers: MapStyle['topLayerGroups'];\n  threeDBuildingColor: MapStyle['threeDBuildingColor'];\n  on3dBuildingColorChange: (pd: Set3dBuildingColorUpdaterAction['payload']) => void;\n  backgroundColor: MapStyle['backgroundColor'];\n  onBackgroundColorChange: (pd: SetBackgroundColorUpdaterAction['payload']) => void;\n  actionIcons?: LayerGroupItemActionIcons;\n};\n\nLayerGroupSelectorFactory.deps = [PanelHeaderActionFactory, LayerGroupItemFactory];\n\nfunction LayerGroupSelectorFactory(\n  PanelHeaderAction: ReturnType<typeof PanelHeaderActionFactory>,\n  LayerGroupItem: ReturnType<typeof LayerGroupItemFactory>\n) {\n  const defaultActionIcons: LayerGroupItemActionIcons = {\n    visible: EyeSeen,\n    hidden: EyeUnseen,\n    top: Upload\n  };\n  const LayerGroupSelector = ({\n    layers,\n    editableLayers,\n    onChange,\n    topLayers,\n    threeDBuildingColor,\n    on3dBuildingColorChange,\n    backgroundColor,\n    onBackgroundColorChange,\n    actionIcons = defaultActionIcons\n  }: LayerGroupSelectorProps) => {\n    return (\n      <StyledInteractionPanel className=\"map-style__layer-group__selector\">\n        <div className=\"layer-group__header\">\n          <PanelLabel>\n            <FormattedMessage id={'mapLayers.title'} />\n          </PanelLabel>\n        </div>\n        <PanelContent className=\"map-style__layer-group\">\n          {editableLayers.map(\n            ({slug, isVisibilityToggleAvailable, isMoveToTopAvailable, isColorPickerAvailable}) => (\n              <LayerGroupItem\n                key={slug}\n                PanelHeaderAction={PanelHeaderAction}\n                onChange={onChange}\n                slug={slug}\n                layers={layers}\n                topLayers={topLayers}\n                actionIcons={actionIcons}\n                isVisibilityToggleAvailable={isVisibilityToggleAvailable}\n                isMoveToTopAvailable={isMoveToTopAvailable}\n                isColorPickerAvailable={isColorPickerAvailable}\n                color={\n                  isColorPickerAvailable && slug === THREE_D_BUILDING_LAYER_GROUP_SLUG\n                    ? threeDBuildingColor\n                    : slug === BACKGROUND_LAYER_GROUP_SLUG\n                    ? backgroundColor\n                    : null\n                }\n                onColorChange={\n                  isColorPickerAvailable && slug === THREE_D_BUILDING_LAYER_GROUP_SLUG\n                    ? on3dBuildingColorChange\n                    : slug === BACKGROUND_LAYER_GROUP_SLUG\n                    ? onBackgroundColorChange\n                    : noop\n                }\n              />\n            )\n          )}\n        </PanelContent>\n      </StyledInteractionPanel>\n    );\n  };\n\n  return LayerGroupSelector;\n}\n\nexport default LayerGroupSelectorFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useCallback, useState} from 'react';\nimport styled, {css} from 'styled-components';\n\nimport {rgbToHex} from '@kepler.gl/utils';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {RGBColor} from '@kepler.gl/types';\n\nimport {Portaled} from '../..';\nimport {Tooltip} from '../../common/styled-components';\nimport CustomPicker from '../layer-panel/custom-picker';\nimport {ColorBlock} from '../layer-panel/color-selector';\n\nconst LayerGroupColorPickerWrapper = styled.div<{extraMarginRight?: boolean; disabled?: boolean}>`\n  margin-right: ${props => (props.extraMarginRight ? 0 : 24)}px;\n  cursor: pointer;\n  ${props =>\n    props.disabled &&\n    css`\n      cursor: none;\n      pointer-events: none;\n      opacity: 0.3;\n    `}\n`;\n\nexport type LayerGroupColorPickerProps = {\n  slug: string;\n  color: RGBColor;\n  onColorChange: (pd: RGBColor) => void;\n  extraMarginRight: boolean;\n  disabled: boolean;\n};\n\nLayerGroupColorPickerFactory.deps = [];\n\nfunction LayerGroupColorPickerFactory() {\n  const LayerGroupColorPicker: React.FC<LayerGroupColorPickerProps> = ({\n    slug,\n    color,\n    onColorChange,\n    extraMarginRight,\n    disabled\n  }) => {\n    const [displayColorPicker, setDisplayColorPicker] = useState(false);\n\n    const onColorBlockClick = useCallback(() => {\n      setDisplayColorPicker(!displayColorPicker);\n    }, [setDisplayColorPicker, displayColorPicker]);\n\n    const onClosePicker = useCallback(() => {\n      setDisplayColorPicker(false);\n    }, [setDisplayColorPicker]);\n\n    const onCustomPickerChange = useCallback(\n      newColor => {\n        onColorChange([newColor.rgb.r, newColor.rgb.g, newColor.rgb.b]);\n      },\n      [onColorChange]\n    );\n\n    return (\n      <LayerGroupColorPickerWrapper extraMarginRight={extraMarginRight} disabled={disabled}>\n        <ColorBlock\n          backgroundcolor={color}\n          onClick={onColorBlockClick}\n          className=\"color-selector__selector__block\"\n          data-tip\n          data-for={`update-color-${slug}`}\n        />\n        <Tooltip id={`update-color-${slug}`} effect=\"solid\" delayShow={500}>\n          <span>\n            <FormattedMessage id={'Update color'} />\n          </span>\n        </Tooltip>\n        <Portaled\n          isOpened={displayColorPicker !== false}\n          left={110}\n          top={-50}\n          onClose={onClosePicker}\n        >\n          <CustomPicker\n            color={rgbToHex(color)}\n            onChange={onCustomPickerChange}\n            onSwatchClose={onClosePicker}\n          />\n        </Portaled>\n      </LayerGroupColorPickerWrapper>\n    );\n  };\n\n  return LayerGroupColorPicker;\n}\n\nexport default LayerGroupColorPickerFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React from 'react';\nimport {SidePanelItem} from '../types';\n\nexport type CustomPanelsProps<P> = {\n  panels: SidePanelItem[];\n  getProps?: (props: SidePanelItem) => P;\n};\n\n// This is a dummy component that can be replaced to inject more side panel sub panels into the side bar\nfunction CustomPanelsFactory<P>() {\n  const CustomPanels: React.FC<CustomPanelsProps<P>> = props => {\n    return <div />;\n  };\n\n  CustomPanels.defaultProps = {\n    // provide a list of additional panels\n    panels: [\n      // {\n      //   id: 'rocket',\n      //   label: 'Rocket',\n      //   iconComponent: Icons.Rocket\n      // },\n      // {\n      //   id: 'chart',\n      //   label: 'Chart',\n      //   iconComponent: Icons.LineChart\n      // }\n    ],\n    // prop selector from side panel props\n    getProps: (sidePanelProps: SidePanelItem) => ({} as P)\n  };\n\n  return CustomPanels;\n}\n\nexport default CustomPanelsFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useState, useCallback} from 'react';\nimport styled from 'styled-components';\nimport MapPopoverContentFactory from './map-popover-content';\nimport {Pin, ArrowLeft, ArrowRight, CursorPoint} from '../common/icons';\nimport {injectIntl, IntlShape} from 'react-intl';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport Tippy from '@tippyjs/react/headless';\nimport {RootContext} from '../';\nimport {parseGeoJsonRawFeature} from '@kepler.gl/layers';\nimport {idToPolygonGeo, generateHashId} from '@kepler.gl/utils';\nimport {LAYER_TYPES} from '@kepler.gl/constants';\nimport {LayerHoverProp} from '@kepler.gl/reducers';\nimport {Feature, FeatureSelectionContext} from '@kepler.gl/types';\n\nconst SELECTABLE_LAYERS: string[] = [LAYER_TYPES.hexagonId, LAYER_TYPES.geojson];\nconst MAX_WIDTH = 500;\nconst MAX_HEIGHT = 600;\n\nconst StyledMapPopover = styled.div`\n  display: flex;\n  flex-direction: column;\n  max-width: ${MAX_WIDTH}px;\n  max-height: ${MAX_HEIGHT}px;\n  padding: 14px;\n  & > * + * {\n    margin-top: 6px;\n  }\n  ${props => props.theme.scrollBar};\n  font-family: ${props => props.theme.fontFamily};\n  font-size: 11px;\n  font-weight: 500;\n  background-color: ${props => props.theme.panelBackground};\n  color: ${props => props.theme.textColor};\n  z-index: 1000;\n  overflow-x: auto;\n  box-shadow: ${props => props.theme.panelBoxShadow};\n\n  :hover {\n    background-color: ${props => `${props.theme.panelBackground}dd`};\n  }\n\n  .primary-label {\n    color: ${props => props.theme.notificationColors.success};\n    font-size: 10px;\n  }\n\n  .map-popover__layer-info,\n  .coordingate-hover-info {\n    & > * + * {\n      margin-top: 7px;\n    }\n  }\n\n  table {\n    width: auto;\n    display: grid;\n    border-collapse: collapse;\n    row-gap: 5px;\n    column-gap: 5px;\n  }\n\n  .coordingate-hover-info > table {\n    grid-template-columns: auto auto auto;\n  }\n  .map-popover__layer-info > table {\n    grid-template-columns: auto auto;\n  }\n\n  tbody,\n  tr {\n    display: contents;\n  }\n\n  td {\n    border-color: transparent;\n    color: ${props => props.theme.textColor};\n  }\n\n  td.row__value {\n    text-align: right;\n    font-weight: 500;\n    color: ${props => props.theme.textColorHl};\n  }\n`;\n\nconst PinnedButtons = styled.div`\n  display: flex;\n  align-self: center;\n  align-items: center;\n  justify-items: center;\n  & > * + * {\n    margin-left: 10px;\n  }\n`;\n\nconst PopoverContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  & > * + * {\n    margin-top: 12px;\n  }\n`;\n\nconst StyledIcon = styled.div`\n  color: ${props => props.theme.activeColor};\n\n  :hover {\n    cursor: pointer;\n    color: ${props => props.theme.linkBtnColor};\n  }\n`;\n\nconst StyledSelectGeometry = styled.div`\n  display: flex;\n  align-items: center;\n  color: ${props => props.theme.textColorHl};\n  svg {\n    margin-right: 6px;\n  }\n\n  :hover {\n    cursor: pointer;\n    color: ${props => props.theme.linkBtnColor};\n  }\n`;\n\nMapPopoverFactory.deps = [MapPopoverContentFactory];\n\nfunction createVirtualReference(container, x, y, size = 0) {\n  const bounds =\n    container && container.getBoundingClientRect ? container.getBoundingClientRect() : {};\n  const left = (bounds.left || 0) + x - size / 2;\n  const top = (bounds.top || 0) + y - size / 2;\n  return {\n    left,\n    top,\n    right: left + size,\n    bottom: top + size,\n    width: size,\n    height: size,\n    // These properties are present to meet the DOMRect interface\n    y: top,\n    x: left,\n    toJSON() {\n      return this;\n    }\n  };\n}\n\nfunction getOffsetForPlacement({placement, reference, popper}, gap = 20) {\n  switch (placement) {\n    case 'top-start':\n    case 'bottom-start':\n      return [gap, gap];\n    case 'top-end':\n    case 'bottom-end':\n      return [-gap, gap];\n    default:\n      return [0, 0];\n  }\n}\n\nfunction getPopperOptions(container) {\n  return {\n    modifiers: [\n      {\n        name: 'preventOverflow',\n        options: {\n          boundary: container\n        }\n      }\n    ]\n  };\n}\n\nexport function getSelectedFeature(layerHoverProp: LayerHoverProp | null): Feature | null {\n  const layer = layerHoverProp?.layer;\n  let fieldIdx;\n  let selectedFeature;\n  switch (layer?.type) {\n    case LAYER_TYPES.hexagonId:\n      fieldIdx = layer.config?.columns?.hex_id?.fieldIdx;\n      selectedFeature = idToPolygonGeo({id: layerHoverProp?.data?.[fieldIdx]}, {isClosed: true});\n      break;\n    case LAYER_TYPES.geojson:\n      fieldIdx = layer.config?.columns?.geojson?.fieldIdx;\n      selectedFeature = parseGeoJsonRawFeature(layerHoverProp?.data?.[fieldIdx]);\n      break;\n    default:\n      break;\n  }\n\n  return {\n    ...selectedFeature,\n    // unique id should be assigned to features in the editor\n    id: generateHashId(8)\n  };\n}\n\nexport type MapPopoverProps = {\n  x: number;\n  y: number;\n  frozen?: boolean;\n  coordinate: [number, number] | boolean;\n  layerHoverProp: LayerHoverProp | null;\n  isBase?: boolean;\n  zoom: number;\n  container?: HTMLElement | null;\n  onClose: () => void;\n  onSetFeatures: (features: Feature[]) => any;\n  setSelectedFeature: (feature: Feature | null, clickContext?: FeatureSelectionContext) => any;\n  featureCollection?: {\n    type: string;\n    features: Feature[];\n  };\n};\n\ntype IntlProps = {\n  intl: IntlShape;\n};\n\nexport default function MapPopoverFactory(\n  MapPopoverContent: ReturnType<typeof MapPopoverContentFactory>\n) {\n  const MapPopover: React.FC<MapPopoverProps & IntlProps> = ({\n    x,\n    y,\n    frozen,\n    coordinate,\n    layerHoverProp,\n    isBase,\n    zoom,\n    container,\n    onClose,\n    onSetFeatures,\n    setSelectedFeature,\n    featureCollection\n  }) => {\n    const [horizontalPlacement, setHorizontalPlacement] = useState('start');\n    const moveLeft = () => setHorizontalPlacement('end');\n    const moveRight = () => setHorizontalPlacement('start');\n\n    const onSetSelectedFeature = useCallback(() => {\n      const clickContext = {\n        mapIndex: 0,\n        rightClick: true,\n        position: {x, y}\n      };\n      const selectedFeature = getSelectedFeature(layerHoverProp);\n      if (selectedFeature) {\n        setSelectedFeature(selectedFeature, clickContext);\n        const updatedFeatures = featureCollection\n          ? [...featureCollection.features, selectedFeature]\n          : [selectedFeature];\n        onSetFeatures(updatedFeatures);\n      }\n      onClose();\n    }, [onClose, onSetFeatures, x, y, setSelectedFeature, layerHoverProp, featureCollection]);\n\n    return (\n      <RootContext.Consumer>\n        {context => (\n          <Tippy\n            popperOptions={getPopperOptions(container)}\n            zIndex={98} /* should be below side panel's z-index of 99  */\n            visible={true}\n            interactive={true}\n            // @ts-ignore\n            getReferenceClientRect={() => createVirtualReference(container, x, y)}\n            // @ts-ignore\n            placement={`bottom-${horizontalPlacement}`}\n            // @ts-ignore\n            offset={getOffsetForPlacement}\n            appendTo={context?.current || document.body}\n            render={attrs => (\n              <StyledMapPopover {...attrs} className=\"map-popover\">\n                {frozen ? (\n                  <PinnedButtons>\n                    {horizontalPlacement === 'start' && (\n                      <StyledIcon className=\"popover-arrow-left\" onClick={moveLeft}>\n                        <ArrowLeft />\n                      </StyledIcon>\n                    )}\n                    <StyledIcon className=\"popover-pin\" onClick={onClose}>\n                      <Pin height=\"16px\" />\n                    </StyledIcon>\n                    {horizontalPlacement === 'end' && (\n                      <StyledIcon className=\"popover-arrow-right\" onClick={moveRight}>\n                        <ArrowRight />\n                      </StyledIcon>\n                    )}\n                    {isBase && (\n                      <div className=\"primary-label\">\n                        <FormattedMessage id=\"mapPopover.primary\" />\n                      </div>\n                    )}\n                  </PinnedButtons>\n                ) : null}\n                <PopoverContent>\n                  <MapPopoverContent\n                    coordinate={coordinate}\n                    zoom={zoom}\n                    layerHoverProp={layerHoverProp}\n                  />\n                </PopoverContent>\n                {layerHoverProp?.layer?.type &&\n                SELECTABLE_LAYERS.includes(layerHoverProp?.layer?.type) &&\n                frozen ? (\n                  <StyledSelectGeometry className=\"select-geometry\" onClick={onSetSelectedFeature}>\n                    <CursorPoint />\n                    Select Geometry\n                  </StyledSelectGeometry>\n                ) : null}\n              </StyledMapPopover>\n            )}\n          />\n        )}\n      </RootContext.Consumer>\n    );\n  };\n  return injectIntl(MapPopover);\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React from 'react';\nimport {injectIntl, IntlShape} from 'react-intl';\nimport {LayerHoverProp} from '@kepler.gl/reducers';\nimport LayerHoverInfoFactory from './layer-hover-info';\nimport CoordinateInfoFactory from './coordinate-info';\n\nMapPopoverContentFactory.deps = [LayerHoverInfoFactory, CoordinateInfoFactory];\n\ntype MapPopoverContentProps = {\n  coordinate: [number, number] | boolean;\n  layerHoverProp: LayerHoverProp | null;\n  zoom: number;\n};\n\ntype IntlProps = {\n  intl: IntlShape;\n};\n\nexport default function MapPopoverContentFactory(\n  LayerHoverInfo: ReturnType<typeof LayerHoverInfoFactory>,\n  CoordinateInfo: ReturnType<typeof CoordinateInfoFactory>\n) {\n  const MapPopoverContent: React.FC<MapPopoverContentProps & IntlProps> = ({\n    coordinate,\n    layerHoverProp,\n    zoom\n  }) => {\n    return (\n      <>\n        {Array.isArray(coordinate) && <CoordinateInfo coordinate={coordinate} zoom={zoom} />}\n        {layerHoverProp && <LayerHoverInfo {...layerHoverProp} />}\n      </>\n    );\n  };\n  return injectIntl(MapPopoverContent);\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React from 'react';\nimport {preciseRound} from '@kepler.gl/utils';\nimport {CursorClick} from '../common/icons';\nimport {StyledLayerName} from './layer-hover-info';\n\n// 6th decimal is worth up to 0.11 m\n// https://gis.stackexchange.com/questions/8650/measuring-accuracy-of-latitude-and-longitude\nconst DECIMAL = 6;\nconst DECIMAL_Z = 1;\n\nexport interface CoordinateInfoProps {\n  coordinate: number[];\n  zoom: number;\n}\n\nconst CoordinateInfoFactory = () => {\n  const CoordinateInfo: React.FC<CoordinateInfoProps> = ({coordinate, zoom}) => (\n    <div className=\"coordingate-hover-info\">\n      <StyledLayerName className=\"map-popover__layer-name\">\n        <CursorClick height=\"12px\" />\n        Coordinate\n      </StyledLayerName>\n      <table>\n        <tbody>\n          <tr className=\"row\">\n            <td className=\"row__value\">{preciseRound(coordinate[1], DECIMAL)},</td>\n            <td className=\"row__value\">{preciseRound(coordinate[0], DECIMAL)},</td>\n            <td className=\"row__value\">{preciseRound(zoom, DECIMAL_Z)}z</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n\n  return CoordinateInfo;\n};\n\nexport default CoordinateInfoFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport KeplerGlLogo from '../common/logo';\n\n// factories\nimport SplitMapButtonFactory from './split-map-button';\nimport Toggle3dButtonFactory from './toggle-3d-button';\nimport LayerSelectorPanelFactory from './layer-selector-panel';\nimport MapLegendPanelFactory from './map-legend-panel';\nimport MapDrawPanelFactory from './map-draw-panel';\nimport LocalePanelFactory from './locale-panel';\nimport {Layer} from '@kepler.gl/layers';\nimport {Editor, MapControls, MapState} from '@kepler.gl/types';\nimport {Datasets} from '@kepler.gl/table';\nimport {MapStateActions, UIStateActions} from '@kepler.gl/actions';\n\ninterface StyledMapControlProps {\n  top?: number;\n}\n\nconst StyledMapControl = styled.div<StyledMapControlProps>`\n  right: 0;\n  padding: ${props => props.theme.mapControl.padding}px;\n  z-index: 10;\n  margin-top: ${props => props.top || 0}px;\n  position: absolute;\n  display: grid;\n  row-gap: 8px;\n  justify-items: end;\n  pointer-events: none; /* prevent padding from blocking input */\n  & > * {\n    /* all children should allow input */\n    pointer-events: all;\n  }\n`;\n\nconst LegendLogo = <KeplerGlLogo version={false} appName=\"kepler.gl\" />;\n\nexport type MapControlProps = {\n  availableLocales: ReadonlyArray<string>;\n  datasets: Datasets;\n  dragRotate: boolean;\n  isSplit: boolean;\n  primary: boolean;\n  layers: Layer[];\n  layersToRender: {[key: string]: boolean};\n  mapIndex: number;\n  mapControls: MapControls;\n  onTogglePerspective: () => void;\n  onToggleSplitMap: typeof MapStateActions.toggleSplitMap;\n  onToggleSplitMapViewport: ({\n    isViewportSynced,\n    isZoomLocked\n  }: {\n    isViewportSynced: boolean;\n    isZoomLocked: boolean;\n  }) => void;\n  onMapToggleLayer: (layerId: string) => void;\n  onToggleMapControl: (control: string) => void;\n  onSetEditorMode: (mode: string) => void;\n  onToggleEditorVisibility: () => void;\n  top: number;\n  onSetLocale: typeof UIStateActions.setLocale;\n  locale: string;\n  logoComponent?: React.FC | React.ReactNode;\n  isExport?: boolean;\n\n  // optional\n  mapState?: MapState;\n  readOnly?: boolean;\n  scale?: number;\n  mapLayers?: {[key: string]: boolean};\n  editor: Editor;\n  actionComponents?: React.ComponentType<any>[];\n  mapHeight?: number;\n};\n\nMapControlFactory.deps = [\n  SplitMapButtonFactory,\n  Toggle3dButtonFactory,\n  LayerSelectorPanelFactory,\n  MapLegendPanelFactory,\n  MapDrawPanelFactory,\n  LocalePanelFactory\n];\n\nfunction MapControlFactory(\n  SplitMapButton: ReturnType<typeof SplitMapButtonFactory>,\n  Toggle3dButton: ReturnType<typeof Toggle3dButtonFactory>,\n  LayerSelectorPanel: ReturnType<typeof LayerSelectorPanelFactory>,\n  MapLegendPanel: ReturnType<typeof MapLegendPanelFactory>,\n  MapDrawPanel: ReturnType<typeof MapDrawPanelFactory>,\n  LocalePanel: ReturnType<typeof LocalePanelFactory>\n) {\n  const DEFAULT_ACTIONS = [\n    SplitMapButton,\n    LayerSelectorPanel,\n    Toggle3dButton,\n    MapDrawPanel,\n    LocalePanel,\n    MapLegendPanel\n  ];\n\n  const MapControl: React.FC<MapControlProps> = React.memo(\n    ({actionComponents = DEFAULT_ACTIONS, ...props}) => {\n      return (\n        <StyledMapControl className=\"map-control\" top={props.top}>\n          {actionComponents.map((ActionComponent, index) => (\n            <ActionComponent key={index} className=\"map-control-action\" {...props} />\n          ))}\n        </StyledMapControl>\n      );\n    }\n  );\n\n  MapControl.defaultProps = {\n    isSplit: false,\n    top: 0,\n    mapIndex: 0,\n    logoComponent: LegendLogo,\n    actionComponents: DEFAULT_ACTIONS\n  };\n\n  MapControl.displayName = 'MapControl';\n\n  return MapControl;\n}\n\nexport default MapControlFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {ComponentType, useCallback, useMemo} from 'react';\nimport classnames from 'classnames';\nimport {MapControlButton} from '../common/styled-components';\nimport {Delete, Split} from '../common/icons';\nimport MapControlTooltipFactory from './map-control-tooltip';\nimport {MapControlItem, MapControls} from '@kepler.gl/types';\n\nSplitMapButtonFactory.deps = [MapControlTooltipFactory];\n\ninterface SplitMapButtonIcons {\n  delete: ComponentType<any>;\n  split: ComponentType<any>;\n}\n\nexport type SplitMapButtonProps = {\n  isSplit: boolean;\n  mapIndex: number;\n  onToggleSplitMap: (index?: number) => void;\n  actionIcons: SplitMapButtonIcons;\n  readOnly: boolean;\n  mapControls: MapControls;\n};\n\nfunction SplitMapButtonFactory(MapControlTooltip) {\n  const defaultActionIcons = {\n    delete: Delete,\n    split: Split\n  };\n\n  /** @type {import('./split-map-button').SplitMapButtonComponent} */\n  const SplitMapButton: React.FC<SplitMapButtonProps> = ({\n    isSplit,\n    mapIndex,\n    onToggleSplitMap,\n    actionIcons = defaultActionIcons,\n    mapControls,\n    readOnly\n  }) => {\n    const splitMap = mapControls?.splitMap || ({} as MapControlItem);\n    const onClick = useCallback(\n      event => {\n        event.preventDefault();\n        onToggleSplitMap(isSplit ? mapIndex : undefined);\n      },\n      [isSplit, mapIndex, onToggleSplitMap]\n    );\n\n    const isVisible = useMemo(() => splitMap.show && readOnly !== true, [splitMap.show, readOnly]);\n\n    if (!splitMap.show) {\n      return null;\n    }\n    return isVisible ? (\n      <MapControlTooltip\n        id=\"action-toggle\"\n        message={isSplit ? 'tooltip.closePanel' : 'tooltip.switchToDualView'}\n      >\n        <MapControlButton\n          active={isSplit}\n          onClick={onClick}\n          className={classnames('map-control-button', 'split-map', {'close-map': isSplit})}\n        >\n          {isSplit ? <actionIcons.delete height=\"18px\" /> : <actionIcons.split height=\"18px\" />}\n        </MapControlButton>\n      </MapControlTooltip>\n    ) : null;\n  };\n\n  SplitMapButton.displayName = 'SplitMapButton';\n  return React.memo(SplitMapButton);\n}\n\nexport default SplitMapButtonFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {ComponentType, useCallback, useMemo} from 'react';\nimport classnames from 'classnames';\nimport {Cube3d} from '../common/icons';\nimport {MapControlButton} from '../common/styled-components';\nimport MapControlTooltipFactory from './map-control-tooltip';\nimport {MapControls} from '@kepler.gl/types';\n\nToggle3dButtonFactory.deps = [MapControlTooltipFactory];\n\ninterface Toggle3dButtonIcons {\n  cube: ComponentType<any>;\n}\n\nexport type Toggle3dButtonProps = {\n  dragRotate: boolean;\n  onTogglePerspective: () => void;\n  actionIcons: Toggle3dButtonIcons;\n  mapControls: MapControls;\n};\n\nfunction Toggle3dButtonFactory(MapControlTooltip) {\n  const defaultActionIcons = {\n    cube: Cube3d\n  };\n  /** @type {import('./toggle-3d-button').Toggle3dButtonComponent} */\n  const Toggle3dButton: React.FC<Toggle3dButtonProps> = ({\n    dragRotate,\n    onTogglePerspective,\n    actionIcons = defaultActionIcons,\n    mapControls\n  }) => {\n    const onClick = useCallback(\n      event => {\n        event.preventDefault();\n        onTogglePerspective();\n      },\n      [onTogglePerspective]\n    );\n\n    const isVisible = useMemo(() => {\n      return (mapControls?.toggle3d || {}).show;\n    }, [mapControls]);\n\n    return isVisible ? (\n      <MapControlTooltip\n        id=\"action-3d\"\n        message={dragRotate ? 'tooltip.disable3DMap' : 'tooltip.3DMap'}\n      >\n        <MapControlButton\n          onClick={onClick}\n          active={dragRotate}\n          className={classnames('map-control-button', 'toggle-3d', {map3d: dragRotate})}\n        >\n          <actionIcons.cube height=\"22px\" />\n        </MapControlButton>\n      </MapControlTooltip>\n    ) : null;\n  };\n\n  Toggle3dButton.displayName = 'Toggle3dButton';\n  return React.memo(Toggle3dButton);\n}\n\nexport default Toggle3dButtonFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useCallback, useMemo} from 'react';\nimport classnames from 'classnames';\n\nimport {MapControlButton} from '../common/styled-components';\nimport {Layers} from '../common/icons';\nimport MapLayerSelector from '../common/map-layer-selector';\nimport MapControlTooltipFactory from './map-control-tooltip';\nimport MapControlPanelFactory from './map-control-panel';\nimport {Layer} from '@kepler.gl/layers';\nimport {MapControlItem, MapControls} from '@kepler.gl/types';\n\nLayerSelectorPanelFactory.deps = [MapControlTooltipFactory, MapControlPanelFactory];\n\nexport type LayerSelectorPanelProps = {\n  onMapToggleLayer: (layerId: string) => void;\n  onToggleMapControl: (control: string) => void;\n  layers: ReadonlyArray<Layer>;\n  layersToRender: {[key: string]: boolean};\n  isSplit: boolean;\n  mapControls: MapControls;\n  readOnly: boolean;\n};\n\nfunction LayerSelectorPanelFactory(\n  MapControlTooltip: ReturnType<typeof MapControlTooltipFactory>,\n  MapControlPanel: ReturnType<typeof MapControlPanelFactory>\n) {\n  /** @type {import('./layer-selector-panel').LayerSelectorPanelComponent} */\n  const LayerSelectorPanel: React.FC<LayerSelectorPanelProps> = ({\n    onMapToggleLayer,\n    onToggleMapControl,\n    layers,\n    layersToRender,\n    isSplit,\n    mapControls,\n    readOnly\n  }) => {\n    const visibleLayers = mapControls?.visibleLayers || ({} as MapControlItem);\n    const {active: isActive, show, disableClose} = visibleLayers || {};\n\n    const legendLayers = useMemo(\n      () =>\n        layers\n          .filter(({config}) => config.isVisible)\n          .map(({id, config}) => ({\n            id,\n            name: config.label,\n            // layer\n            isVisible: layersToRender[id]\n          })),\n      [layers, layersToRender]\n    );\n\n    const isVisible = useMemo(() => isSplit && show && readOnly !== true, [\n      isSplit,\n      show,\n      readOnly\n    ]);\n\n    const onToggleMenuPanel = useCallback(\n      event => {\n        event.preventDefault();\n        onToggleMapControl('visibleLayers');\n      },\n      [onToggleMapControl]\n    );\n\n    return isVisible ? (\n      !isActive ? (\n        <MapControlButton\n          key={1}\n          onClick={onToggleMenuPanel}\n          className={classnames('map-control-button', 'toggle-layer', {isActive})}\n          data-tip\n          data-for=\"toggle-layer\"\n        >\n          <Layers height=\"22px\" />\n          <MapControlTooltip\n            id=\"toggle-layer\"\n            message={isActive ? 'tooltip.hideLayerPanel' : 'tooltip.showLayerPanel'}\n          />\n        </MapControlButton>\n      ) : (\n        <MapControlPanel\n          header=\"header.visibleLayers\"\n          onClick={onToggleMenuPanel}\n          disableClose={disableClose}\n        >\n          <MapLayerSelector layers={legendLayers} onMapToggleLayer={onMapToggleLayer} />\n        </MapControlPanel>\n      )\n    ) : null;\n  };\n\n  LayerSelectorPanel.displayName = 'LayerSelectorPanel';\n\n  return React.memo(LayerSelectorPanel);\n}\n\nexport default LayerSelectorPanelFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {ComponentType, useCallback, useContext, useState} from 'react';\nimport styled from 'styled-components';\n\nimport {Legend} from '../common/icons';\nimport {MapControlButton} from '../common/styled-components';\nimport MapControlTooltipFactory from './map-control-tooltip';\nimport MapControlPanelFactory from './map-control-panel';\nimport MapLegendFactory from './map-legend';\nimport LazyTippy from './lazy-tippy';\nimport {createPortal} from 'react-dom';\nimport {DIMENSIONS} from '@kepler.gl/constants';\nimport {MapControlItem, MapControls, MapState} from '@kepler.gl/types';\nimport {Layer} from '@kepler.gl/layers';\nimport {media} from '@kepler.gl/styles';\nimport {ActionHandler, toggleSplitMapViewport} from '@kepler.gl/actions';\n\nimport {RootContext} from '../context';\n\nMapLegendPanelFactory.deps = [MapControlTooltipFactory, MapControlPanelFactory, MapLegendFactory];\n\nexport type MapLegendPanelFactoryDeps = [\n  typeof MapControlTooltipFactory,\n  typeof MapControlPanelFactory,\n  typeof MapLegendFactory\n];\ninterface PinToBottomProps {\n  offsetRight?: number;\n}\n\nconst PinToBottom = styled.div<PinToBottomProps>`\n  position: absolute;\n  bottom: ${DIMENSIONS.mapControl.mapLegend.pinned.bottom}px;\n  right: ${props => (props.offsetRight || 0) + DIMENSIONS.mapControl.mapLegend.pinned.right}px;\n  ${media.portable`\n    bottom: 0px;\n    right: 0px;\n    min-width: ${DIMENSIONS.mapControl.width + DIMENSIONS.mapControl.mapLegend.pinned.right}px;\n    .map-control-panel {\n      min-height: 215px;\n      margin-bottom: 0px;\n    };\n  `};\n`;\n\ninterface MapLegendPanelIcons {\n  legend: ComponentType<any>;\n}\n\nexport type MapLegendPanelProps = {\n  layers: ReadonlyArray<Layer>;\n  scale: number;\n  onToggleMapControl: (control: string) => void;\n  isExport: boolean;\n  logoComponent: Element;\n  actionIcons: MapLegendPanelIcons;\n  mapControls: MapControls;\n  mapState?: MapState;\n  mapHeight?: number;\n  offsetRight?: number;\n  onToggleSplitMapViewport?: ActionHandler<typeof toggleSplitMapViewport>;\n  isViewportUnsyncAllowed?: boolean;\n  onClickControlBtn?: (e?: MouseEvent) => void;\n};\n\nfunction MapLegendPanelFactory(MapControlTooltip, MapControlPanel, MapLegend) {\n  const defaultActionIcons = {\n    legend: Legend\n  };\n\n  const MapLegendPanel: React.FC<MapLegendPanelProps> = ({\n    layers,\n    mapControls,\n    scale,\n    onToggleMapControl,\n    isExport,\n    logoComponent,\n    actionIcons = defaultActionIcons,\n    mapState,\n    mapHeight,\n    offsetRight,\n    onToggleSplitMapViewport,\n    onClickControlBtn,\n    isViewportUnsyncAllowed = true\n  }) => {\n    const mapLegend = mapControls?.mapLegend || ({} as MapControlItem);\n    const {active: isPinned} = mapLegend || {};\n\n    const onClick = useCallback(() => {\n      onClickControlBtn?.();\n      if (mapControls?.mapDraw?.active) {\n        onToggleMapControl('mapDraw');\n      }\n    }, [onClickControlBtn, onToggleMapControl, mapControls]);\n    const [tippyInstance, setTippyInstance] = useState(null);\n    const onCloseClick = useCallback(\n      e => {\n        e.preventDefault();\n        onToggleMapControl('mapLegend');\n      },\n      [onToggleMapControl]\n    );\n    const onPinClick = useCallback(\n      e => {\n        e.preventDefault();\n        if (tippyInstance) {\n          // @ts-ignore\n          tippyInstance.hide();\n        }\n        onToggleMapControl('mapLegend');\n      },\n      [tippyInstance, onToggleMapControl]\n    );\n\n    if (!mapLegend.show) {\n      return null;\n    }\n    const mapControlPanel = (\n      <MapControlPanel\n        scale={scale}\n        header={'header.layerLegend'}\n        isPinned={true}\n        {...(isPinned\n          ? {\n              onClick: onCloseClick,\n              pinnable: false,\n              disableClose: false\n            }\n          : {\n              onPinClick,\n              pinnable: true,\n              disableClose: true\n            })}\n        isExport={isExport}\n        logoComponent={logoComponent}\n        mapState={mapState}\n        onToggleSplitMapViewport={onToggleSplitMapViewport}\n        isViewportUnsyncAllowed={isViewportUnsyncAllowed}\n      >\n        <MapLegend layers={layers} mapHeight={mapHeight} />\n      </MapControlPanel>\n    );\n\n    const rootContext = useContext(RootContext);\n    if (isPinned) {\n      // Pinned panel is not supported in export mode\n      if (isExport) {\n        return mapControlPanel;\n      }\n      const pinnedPanel = <PinToBottom offsetRight={offsetRight}>{mapControlPanel}</PinToBottom>;\n      return createPortal(pinnedPanel, rootContext?.current || document.body);\n    }\n\n    return (\n      // The outer div is to prevent an accessibility warning from Tippy\n      <div>\n        {/* \n  // @ts-ignore */}\n        <LazyTippy\n          interactive={true}\n          trigger=\"click\"\n          placement=\"left-start\"\n          onCreate={setTippyInstance}\n          render={attrs => <div {...attrs}>{mapControlPanel}</div>}\n          appendTo=\"parent\"\n        >\n          <div>\n            <MapControlTooltip id=\"show-legend\" message=\"tooltip.showLegend\">\n              <MapControlButton className=\"map-control-button show-legend\" onClick={onClick}>\n                <actionIcons.legend height=\"22px\" />\n              </MapControlButton>\n            </MapControlTooltip>\n          </div>\n        </LazyTippy>\n      </div>\n    );\n  };\n\n  MapLegendPanel.displayName = 'MapLegendPanel';\n  return MapLegendPanel;\n}\n\nexport default MapLegendPanelFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport {rgb} from 'd3-color';\nimport ColorLegend from '../common/color-legend';\nimport {CHANNEL_SCALES, DIMENSIONS} from '@kepler.gl/constants';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {Layer, LayerBaseConfig, VisualChannel, VisualChannelDescription} from '@kepler.gl/layers';\n\ninterface StyledMapControlLegendProps {\n  width?: number;\n  last?: boolean;\n}\n\nexport const StyledMapControlLegend = styled.div<StyledMapControlLegendProps>`\n  padding: 10px ${props => props.theme.mapControl.padding}px 10px\n    ${props => props.theme.mapControl.padding}px;\n  font-size: 11px;\n  font-family: ${props => props.theme.fontFamily};\n  border-bottom-color: ${props => props.theme.panelBorderColor};\n  border-bottom-style: solid;\n  border-bottom-width: ${props => (props.last ? 0 : '1px')};\n  width: ${props => props.width}px;\n  box-sizing: border-box;\n\n  .legend--layer_name {\n    font-size: 12px;\n    padding-right: ${props => props.theme.mapControl.padding}px;\n    color: ${props => props.theme.textColor};\n    font-weight: 500;\n  }\n  .legend--layer_type {\n    color: ${props => props.theme.subtextColor};\n    font-weight: 500;\n    font-size: 11px;\n    padding-right: ${props => props.theme.mapControl.padding}px;\n  }\n\n  .legend--layer__title {\n    padding-right: ${props => props.theme.mapControl.padding}px;\n  }\n\n  .legend--layer_by {\n    color: ${props => props.theme.subtextColor};\n  }\n\n  .legend--layer_color_field {\n    color: ${props => props.theme.textColorHl};\n    font-weight: 500;\n  }\n\n  .legend--layer_color-legend {\n    margin-top: 6px;\n  }\n`;\n\nexport const VisualChannelMetric = ({name}) => {\n  return (\n    <div className=\"legend--layer__title\">\n      <span className=\"legend--layer_color_field\">\n        <FormattedMessage id={name} />\n      </span>\n    </div>\n  );\n};\n\nexport type LayerSizeLegendProps = {\n  label: string;\n  name: string | undefined;\n};\n\n/** @type {typeof import('./map-legend').LayerSizeLegend} */\nexport const LayerSizeLegend: React.FC<LayerSizeLegendProps> = ({label, name}) =>\n  label ? (\n    <div className=\"legend--layer_size-schema\">\n      <p>\n        <span className=\"legend--layer_by\">{label ? <FormattedMessage id={label} /> : null}</span>\n        <span className=\"legend--layer_by\"> by </span>\n      </p>\n      {name && <VisualChannelMetric name={name} />}\n    </div>\n  ) : null;\n\nconst SINGLE_COLOR_DOMAIN = [''];\n\nexport type SingleColorLegendProps = {\n  width: number;\n  color: string;\n};\n\n/** @type {typeof import('./map-legend').SingleColorLegend} */\nexport const SingleColorLegend: React.FC<SingleColorLegendProps> = React.memo(({width, color}) => (\n  <ColorLegend\n    scaleType=\"ordinal\"\n    displayLabel={false}\n    domain={SINGLE_COLOR_DOMAIN}\n    fieldType={null}\n    range={{colors: [rgb(...color).toString()]}}\n    width={width}\n  />\n));\n\nSingleColorLegend.displayName = 'SingleColorLegend';\n\nexport type LayerColorLegendProps = {\n  description: VisualChannelDescription;\n  config: LayerBaseConfig;\n  width: number;\n  colorChannel: VisualChannel;\n};\n\n/** @type {typeof import('./map-legend').LayerColorLegend} */\nexport const LayerColorLegend: React.FC<LayerColorLegendProps> = React.memo(\n  ({description, config, width, colorChannel}) => {\n    const enableColorBy = description.measure;\n    const {scale, field, domain, range, property} = colorChannel;\n    const [colorScale, colorField, colorDomain] = [scale, field, domain].map(k => config[k]);\n    const colorRange = config.visConfig[range];\n\n    return (\n      <div>\n        <div className=\"legend--layer_color-schema\">\n          <div>\n            {enableColorBy ? <VisualChannelMetric name={enableColorBy} /> : null}\n            <div className=\"legend--layer_color-legend\">\n              {enableColorBy ? (\n                <ColorLegend\n                  scaleType={colorScale}\n                  displayLabel\n                  domain={colorDomain}\n                  fieldType={(colorField && colorField.type) || 'real'}\n                  range={colorRange}\n                  width={width}\n                />\n              ) : (\n                <SingleColorLegend\n                  color={config.visConfig[property] || config[property] || config.color}\n                  width={width}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n);\n\n// eslint-disable-next-line react/display-name\nLayerColorLegend.displayName = 'LayerColorLegend';\n\nconst isColorChannel = visualChannel =>\n  [CHANNEL_SCALES.color, CHANNEL_SCALES.colorAggr].includes(visualChannel.channelScaleType);\n\nexport type LayerLegendHeaderProps = {\n  layer: Layer;\n  options?: {\n    showLayerName?: boolean;\n  };\n};\n\nexport function LayerLegendHeaderFactory() {\n  /** @type {typeof import('./map-legend').LayerLegendHeader }> */\n  const LayerLegendHeader: React.FC<LayerLegendHeaderProps> = ({options, layer}) => {\n    return options?.showLayerName !== false ? (\n      <div className=\"legend--layer_name\">{layer.config.label}</div>\n    ) : null;\n  };\n  return LayerLegendHeader;\n}\n\nexport type LayerLegendContentProps = {\n  layer: Layer;\n  containerW: number;\n};\n\nexport function LayerLegendContentFactory() {\n  /** @type {typeof import('./map-legend').LayerLegendContent }> */\n  const LayerLegendContent: React.FC<LayerLegendContentProps> = ({layer, containerW}) => {\n    const colorChannels = Object.values(layer.visualChannels).filter(isColorChannel);\n    const nonColorChannels = Object.values(layer.visualChannels).filter(vc => !isColorChannel(vc));\n\n    return (\n      <>\n        {colorChannels.map(colorChannel =>\n          !colorChannel.condition || colorChannel.condition(layer.config) ? (\n            <LayerColorLegend\n              key={colorChannel.key}\n              description={layer.getVisualChannelDescription(colorChannel.key)}\n              config={layer.config}\n              width={containerW - 2 * DIMENSIONS.mapControl.padding}\n              colorChannel={colorChannel}\n            />\n          ) : null\n        )}\n        {nonColorChannels.map(visualChannel => {\n          const matchCondition = !visualChannel.condition || visualChannel.condition(layer.config);\n          const enabled = layer.config[visualChannel.field] || visualChannel.defaultMeasure;\n\n          const description = layer.getVisualChannelDescription(visualChannel.key);\n\n          return matchCondition && enabled ? (\n            <LayerSizeLegend\n              key={visualChannel.key}\n              label={description.label}\n              name={description.measure}\n            />\n          ) : null;\n        })}\n      </>\n    );\n  };\n\n  return LayerLegendContent;\n}\n\nexport type MapLegendProps = {\n  layers?: ReadonlyArray<Layer>;\n  width?: number;\n  mapHeight?: number;\n  options?: {\n    showLayerName?: boolean;\n  };\n};\n\nMapLegendFactory.deps = [LayerLegendHeaderFactory, LayerLegendContentFactory];\nfunction MapLegendFactory(LayerLegendHeader, LayerLegendContent) {\n  /** @type {typeof import('./map-legend').MapLegend }> */\n  const MapLegend: React.FC<MapLegendProps> = ({layers = [], width, mapHeight, options}) => (\n    <div\n      className=\"map-legend\"\n      {...(mapHeight && {\n        style: {\n          /* subtracting rough size of 4 map control buttons and padding */\n          maxHeight: mapHeight - 250\n        }\n      })}\n    >\n      {layers.map((layer, index) => {\n        if (!layer.isValidToSave() || layer.config.hidden) {\n          return null;\n        }\n        const containerW = width || DIMENSIONS.mapControl.width;\n\n        return (\n          <StyledMapControlLegend\n            className=\"legend--layer\"\n            last={index === layers.length - 1}\n            key={index}\n            width={containerW}\n          >\n            <LayerLegendHeader options={options} layer={layer} />\n            <LayerLegendContent containerW={containerW} layer={layer} />\n          </StyledMapControlLegend>\n        );\n      })}\n    </div>\n  );\n\n  MapLegend.displayName = 'MapLegend';\n\n  return MapLegend;\n}\n\nexport default MapLegendFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\n// @ts-nocheck\nimport React, {useState, forwardRef} from 'react';\nimport Tippy from '@tippyjs/react/headless';\nimport {isTest} from '@kepler.gl/utils';\n\nconst isTestEnv = isTest();\n\n/**\n * Lazy mounting tippy content\n * https://gist.github.com/atomiks/520f4b0c7b537202a23a3059d4eec908\n */\n// eslint-disable-next-line react/display-name\nconst LazyTippy = forwardRef((props, ref) => {\n  const [mounted, setMounted] = useState(isTestEnv);\n\n  const lazyPlugin = {\n    fn: () => ({\n      onMount: () => setMounted(true),\n      onHidden: () => setMounted(false)\n    })\n  };\n\n  const computedProps = {...props};\n\n  computedProps.plugins = [lazyPlugin, ...(props.plugins || [])];\n\n  if (props.render) {\n    computedProps.render = (...args) => (mounted ? props.render(...args) : '');\n  } else {\n    computedProps.content = mounted ? props.content : '';\n  }\n\n  return <Tippy {...computedProps} ref={ref} />;\n});\n\nexport default LazyTippy;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useCallback} from 'react';\nimport classnames from 'classnames';\n\nimport {EDITOR_MODES} from '@kepler.gl/constants';\nimport {CursorClick, DrawPolygon, EyeSeen, EyeUnseen, Polygon, Rectangle} from '../common/icons';\nimport {MapControlButton} from '../common/styled-components';\nimport ToolbarItem from '../common/toolbar-item';\nimport MapControlTooltipFactory from './map-control-tooltip';\nimport MapControlToolbarFactory from './map-control-toolbar';\nimport {Editor, MapControls} from '@kepler.gl/types';\nimport {BaseProps} from '../common/icons';\n\nMapDrawPanelFactory.deps = [MapControlTooltipFactory, MapControlToolbarFactory];\n\nexport type MapDrawPanelProps = {\n  editor: Editor;\n  mapControls: MapControls;\n  onToggleMapControl: (control: string) => void;\n  onSetEditorMode: (mode: string) => void;\n  onToggleEditorVisibility: () => void;\n  actionIcons: {[id: string]: React.ComponentType<Partial<BaseProps>>};\n};\n\nfunction MapDrawPanelFactory(\n  MapControlTooltip: ReturnType<typeof MapControlTooltipFactory>,\n  MapControlToolbar: ReturnType<typeof MapControlToolbarFactory>\n) {\n  const defaultActionIcons = {\n    visible: EyeSeen,\n    hidden: EyeUnseen,\n    polygon: DrawPolygon,\n    cursor: CursorClick,\n    innerPolygon: Polygon,\n    rectangle: Rectangle\n  };\n\n  const MapDrawPanel: React.FC<MapDrawPanelProps> = React.memo(\n    ({\n      editor,\n      mapControls,\n      onToggleMapControl,\n      onSetEditorMode,\n      actionIcons = defaultActionIcons\n    }) => {\n      const isActive = mapControls?.mapDraw?.active;\n      const onToggleMenuPanel = useCallback(() => onToggleMapControl('mapDraw'), [\n        onToggleMapControl\n      ]);\n      if (!mapControls?.mapDraw?.show) {\n        return null;\n      }\n      return (\n        <div className=\"map-draw-controls\" style={{position: 'relative'}}>\n          {isActive ? (\n            <MapControlToolbar show={isActive}>\n              <ToolbarItem\n                className=\"edit-feature\"\n                onClick={() => onSetEditorMode(EDITOR_MODES.EDIT)}\n                label=\"toolbar.select\"\n                icon={actionIcons.cursor}\n                active={editor.mode === EDITOR_MODES.EDIT}\n              />\n              <ToolbarItem\n                className=\"draw-feature\"\n                onClick={() => onSetEditorMode(EDITOR_MODES.DRAW_POLYGON)}\n                label=\"toolbar.polygon\"\n                icon={actionIcons.innerPolygon}\n                active={editor.mode === EDITOR_MODES.DRAW_POLYGON}\n              />\n              <ToolbarItem\n                className=\"draw-rectangle\"\n                onClick={() => onSetEditorMode(EDITOR_MODES.DRAW_RECTANGLE)}\n                label=\"toolbar.rectangle\"\n                icon={actionIcons.rectangle}\n                active={editor.mode === EDITOR_MODES.DRAW_RECTANGLE}\n              />\n            </MapControlToolbar>\n          ) : null}\n          <MapControlTooltip id=\"map-draw\" message=\"tooltip.DrawOnMap\">\n            <MapControlButton\n              className={classnames('map-control-button', 'map-draw', {isActive})}\n              onClick={e => {\n                e.preventDefault();\n                onToggleMenuPanel();\n              }}\n              active={isActive}\n            >\n              <actionIcons.polygon height=\"22px\" />\n            </MapControlButton>\n          </MapControlTooltip>\n        </div>\n      );\n    }\n  );\n\n  MapDrawPanel.displayName = 'MapDrawPanel';\n  return MapDrawPanel;\n}\n\nexport default MapDrawPanelFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useCallback} from 'react';\nimport classnames from 'classnames';\n\nimport ToolbarItem from '../common/toolbar-item';\nimport {MapControlButton} from '../common/styled-components';\nimport MapControlTooltipFactory from './map-control-tooltip';\nimport MapControlToolbarFactory from './map-control-toolbar';\nimport {MapControls} from '@kepler.gl/types';\n\nLocalePanelFactory.deps = [MapControlTooltipFactory, MapControlToolbarFactory];\n\nexport type LocalePanelProps = {\n  availableLocales: ReadonlyArray<string>;\n  onSetLocale: (locale: string) => void;\n  locale: string;\n  onToggleMapControl: (control: string) => void;\n  mapControls: MapControls;\n};\n\nfunction LocalePanelFactory(\n  MapControlTooltip: ReturnType<typeof MapControlTooltipFactory>,\n  MapControlToolbar: ReturnType<typeof MapControlToolbarFactory>\n) {\n  const LocalePanel: React.FC<LocalePanelProps> = React.memo(\n    ({availableLocales, onToggleMapControl, onSetLocale, locale: currentLocal, mapControls}) => {\n      const {active: isActive, show} = mapControls.mapLocale || {};\n\n      const onClickItem = useCallback(\n        locale => {\n          onSetLocale(locale);\n        },\n        [onSetLocale]\n      );\n\n      const onClickButton = useCallback(\n        e => {\n          e.preventDefault();\n          onToggleMapControl('mapLocale');\n        },\n        [onToggleMapControl]\n      );\n      const getLabel = useCallback(locale => `toolbar.${locale}`, []);\n\n      if (!show) {\n        return null;\n      }\n      return (\n        <div className=\"locale-panel-controls\" style={{position: 'relative'}}>\n          {isActive ? (\n            <MapControlToolbar show={isActive}>\n              {availableLocales.map(locale => (\n                <ToolbarItem\n                  key={locale}\n                  onClick={() => onClickItem(locale)}\n                  label={getLabel(locale)}\n                  active={currentLocal === locale}\n                />\n              ))}\n            </MapControlToolbar>\n          ) : null}\n          <MapControlTooltip id=\"locale\" message=\"tooltip.selectLocale\">\n            <MapControlButton\n              className={classnames('map-control-button', 'locale-panel', {isActive})}\n              onClick={onClickButton}\n              active={isActive}\n            >\n              <span className=\"map-control-button__locale\">{currentLocal.toUpperCase()}</span>\n            </MapControlButton>\n          </MapControlTooltip>\n        </div>\n      );\n    }\n  );\n\n  LocalePanel.displayName = 'LocalePanel';\n\n  return LocalePanel;\n}\n\nexport default LocalePanelFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {Component, CSSProperties, KeyboardEvent} from 'react';\nimport {createPortal} from 'react-dom';\nimport styled from 'styled-components';\nimport window from 'global/window';\nimport classnames from 'classnames';\nimport get from 'lodash.get';\nimport {createSelector} from 'reselect';\nimport FeatureActionPanelFactory, {FeatureActionPanelProps} from './feature-action-panel';\nimport {\n  EDITOR_AVAILABLE_LAYERS,\n  FILTER_TYPES,\n  EDITOR_MODES,\n  GEOCODER_LAYER_ID,\n  KeyEvent\n} from '@kepler.gl/constants';\nimport {Layer, EditorLayerUtils} from '@kepler.gl/layers';\nimport {Filter, FeatureSelectionContext, Feature} from '@kepler.gl/types';\nimport {FeatureOf, Polygon} from '@nebula.gl/edit-modes';\nimport {Datasets} from '@kepler.gl/table';\n\nimport {RootContext} from '../context';\n\nconst DECKGL_RENDER_LAYER = 'default-deckgl-overlay-wrapper';\n\nconst StyledWrapper = styled.div`\n  position: relative;\n`;\n\nconst editorLayerFilter = (layer: Layer) => EDITOR_AVAILABLE_LAYERS.includes(layer.type!);\n\nEditorFactory.deps = [FeatureActionPanelFactory];\n\ninterface EditorProps {\n  filters: Filter[];\n  layers: Layer[];\n  datasets: Datasets;\n  editor: {selectedFeature: Feature; mode: string; selectionContext?: FeatureSelectionContext};\n  index: number;\n  className?: string;\n  style: CSSProperties;\n  onSelect: (f: Feature | null) => any;\n  onSetEditorMode: (m: any) => void;\n  onDeleteFeature: (f: Feature) => any;\n  onTogglePolygonFilter: (l: Layer, f: Feature) => any;\n}\n\nexport type PortalEditorProps = FeatureActionPanelProps & {\n  visiblePanel: boolean;\n  style?: React.CSSProperties;\n};\n\nexport default function EditorFactory(\n  FeatureActionPanel: React.FC<FeatureActionPanelProps>\n): React.ComponentClass<EditorProps> {\n  const PortalEditor: React.FC<PortalEditorProps> = ({\n    visiblePanel,\n    className,\n    style,\n    selectedFeature,\n    datasets,\n    layers,\n    currentFilter,\n    onClose,\n    onDeleteFeature,\n    onToggleLayer,\n    position\n  }) => {\n    return (\n      <RootContext.Consumer>\n        {context => (\n          <>\n            {createPortal(\n              <StyledWrapper className={classnames('editor', className)} style={style}>\n                {visiblePanel ? (\n                  <FeatureActionPanel\n                    selectedFeature={selectedFeature as FeatureOf<Polygon>}\n                    datasets={datasets}\n                    layers={layers}\n                    currentFilter={currentFilter}\n                    onClose={onClose}\n                    onDeleteFeature={onDeleteFeature}\n                    onToggleLayer={onToggleLayer}\n                    position={position || null}\n                  />\n                ) : null}\n              </StyledWrapper>,\n              context?.current ?? document.body\n            )}\n          </>\n        )}\n      </RootContext.Consumer>\n    );\n  };\n  class EditorUnmemoized extends Component<EditorProps> {\n    static defaultProps = {};\n\n    static displayName = 'Editor';\n\n    state = {};\n\n    componentDidMount() {\n      window.addEventListener('keydown', this._onKeyPressed);\n    }\n\n    componentWillUnmount() {\n      window.removeEventListener('keydown', this._onKeyPressed);\n    }\n\n    layerSelector = (props: EditorProps) => props.layers;\n    filterSelector = (props: EditorProps) => props.filters;\n    selectedFeatureIdSelector = (props: EditorProps) =>\n      get(props, ['editor', 'selectedFeature', 'id']);\n    editorFeatureSelector = (props: EditorProps) => get(props, ['editor', 'features']);\n\n    currentFilterSelector = createSelector(\n      this.filterSelector,\n      this.selectedFeatureIdSelector,\n      (filters, selectedFeatureId) => filters.find(f => f.value && f.value.id === selectedFeatureId)\n    );\n\n    availableLayersSelector = createSelector(this.layerSelector, layers =>\n      layers\n        .filter(editorLayerFilter)\n        .filter(layer => layer.config?.isVisible && layer.id !== GEOCODER_LAYER_ID)\n    );\n\n    allFeaturesSelector = createSelector(\n      this.filterSelector,\n      this.editorFeatureSelector,\n      (filters, editorFeatures) =>\n        filters\n          .filter(f => f.type === FILTER_TYPES.polygon)\n          .map(f => f.value)\n          .concat(editorFeatures)\n    );\n\n    isInFocus = () => document.activeElement?.id === DECKGL_RENDER_LAYER;\n\n    _onKeyPressed = (event: KeyboardEvent) => {\n      if (this.isInFocus()) {\n        switch (event.keyCode) {\n          case KeyEvent.DOM_VK_DELETE:\n          case KeyEvent.DOM_VK_BACK_SPACE:\n            this._onDeleteSelectedFeature();\n            break;\n          case KeyEvent.DOM_VK_ESCAPE:\n            // reset active drawing\n            if (EditorLayerUtils.isDrawingActive(true, this.props.editor.mode)) {\n              this.props.onSetEditorMode(EDITOR_MODES.EDIT);\n            }\n\n            this.props.onSelect(null);\n            break;\n          default:\n            break;\n        }\n      }\n    };\n\n    _onDeleteSelectedFeature = () => {\n      const {editor} = this.props;\n      const {selectedFeature} = editor;\n      if (selectedFeature) {\n        this.props.onDeleteFeature(selectedFeature);\n      }\n    };\n\n    _closeFeatureAction = () => {\n      // reset selection context\n      const {selectedFeature} = this.props.editor;\n      this.props.onSelect(selectedFeature);\n    };\n\n    _togglePolygonFilter = (layer: Layer) => {\n      const {selectedFeature} = this.props.editor;\n      if (selectedFeature) {\n        this.props.onTogglePolygonFilter(layer, selectedFeature);\n      }\n    };\n\n    render() {\n      const {className, datasets, editor, style, index} = this.props;\n      const {selectedFeature, selectionContext} = editor;\n      const currentFilter = this.currentFilterSelector(this.props);\n      const availableLayers = this.availableLayersSelector(this.props);\n\n      const {rightClick, position, mapIndex} = selectionContext || {};\n\n      return (\n        <PortalEditor\n          selectedFeature={selectedFeature as FeatureOf<Polygon>}\n          visiblePanel={Boolean(rightClick) && selectedFeature && index === mapIndex}\n          datasets={datasets}\n          layers={availableLayers}\n          currentFilter={currentFilter}\n          onClose={this._closeFeatureAction}\n          onDeleteFeature={this._onDeleteSelectedFeature}\n          onToggleLayer={this._togglePolygonFilter}\n          position={position || null}\n          className={className}\n          style={style}\n        />\n      );\n    }\n  }\n\n  const Editor = (React.memo(EditorUnmemoized) as unknown) as typeof EditorUnmemoized;\n  Editor.displayName = 'Editor';\n  return Editor;\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useCallback, useState, ComponentType} from 'react';\nimport {useIntl} from 'react-intl';\n\nimport ActionPanel, {ActionPanelItem} from '../common/action-panel';\nimport styled from 'styled-components';\nimport classnames from 'classnames';\nimport {Trash, Layers, Copy, Checkmark} from '../common/icons';\nimport copy from 'copy-to-clipboard';\nimport {useDismiss, useFloating, useInteractions} from '@floating-ui/react';\nimport {Layer} from '@kepler.gl/layers';\nimport {Filter} from '@kepler.gl/types';\nimport {Feature} from '@nebula.gl/edit-modes';\nimport {Datasets} from '@kepler.gl/table';\n\nconst LAYOVER_OFFSET = 4;\n\nconst StyledActionsLayer = styled.div`\n  position: absolute;\n  .layer-panel-item-disabled {\n    color: ${props => props.theme.textColor};\n  }\n`;\nconst defaultActionIcons = {\n  remove: Trash,\n  layer: Layers,\n  copy: Copy,\n  copied: Checkmark\n};\nPureFeatureActionPanelFactory.deps = [];\n\nexport interface FeatureActionPanelProps {\n  className?: string;\n  datasets: Datasets;\n  selectedFeature: Feature | null;\n  position: {\n    x: number;\n    y: number;\n  } | null;\n  layers: Layer[];\n  currentFilter?: Filter;\n  onToggleLayer: (layer: Layer) => void;\n  onDeleteFeature: () => void;\n  onClose?: () => void;\n  children?: React.ReactNode;\n  actionIcons?: {\n    [id: string]: React.ElementType;\n  };\n}\n\nexport function PureFeatureActionPanelFactory(): React.FC<FeatureActionPanelProps> {\n  const FeatureActionPanel = ({\n    className,\n    datasets,\n    selectedFeature,\n    position,\n    layers,\n    currentFilter,\n    onToggleLayer,\n    onDeleteFeature,\n    actionIcons = defaultActionIcons,\n    children,\n    onClose\n  }: FeatureActionPanelProps) => {\n    const [copied, setCopied] = useState(false);\n    const {layerId = []} = currentFilter || {};\n    const intl = useIntl();\n\n    const {refs, context} = useFloating({\n      open: true,\n      onOpenChange: v => {\n        if (!v && onClose) {\n          onClose();\n        }\n      }\n    });\n    const dismiss = useDismiss(context);\n\n    const {getFloatingProps} = useInteractions([dismiss]);\n\n    const copyGeometry = useCallback(() => {\n      if (selectedFeature?.geometry) copy(JSON.stringify(selectedFeature.geometry));\n      setCopied(true);\n    }, [selectedFeature?.geometry]);\n\n    if (!position) {\n      return null;\n    }\n\n    return (\n      <StyledActionsLayer\n        ref={refs.setFloating}\n        {...getFloatingProps()}\n        className={classnames('feature-action-panel', className)}\n        style={{\n          top: `${position.y + LAYOVER_OFFSET}px`,\n          left: `${position.x + LAYOVER_OFFSET}px`\n        }}\n      >\n        <ActionPanel>\n          <ActionPanelItem\n            className=\"editor-layers-list\"\n            label={intl.formatMessage({id: 'editor.filterLayer', defaultMessage: 'Filter layers'})}\n            Icon={actionIcons.layer}\n          >\n            {layers.length ? (\n              layers.map((layer, index) => (\n                <ActionPanelItem\n                  key={index}\n                  label={layer.config.label}\n                  // @ts-ignore\n                  color={datasets[layer.config.dataId].color}\n                  isSelection={true}\n                  isActive={layerId.includes(layer.id)}\n                  onClick={() => onToggleLayer(layer)}\n                  className=\"layer-panel-item\"\n                />\n              ))\n            ) : (\n              <ActionPanelItem\n                key={'no-layers'}\n                label={intl.formatMessage({\n                  id: 'editor.noLayersToFilter',\n                  defaultMessage: 'No layers to filter'\n                })}\n                isSelection={false}\n                isActive={false}\n                className=\"layer-panel-item-disabled\"\n              />\n            )}\n          </ActionPanelItem>\n          <ActionPanelItem\n            label={intl.formatMessage({id: 'editor.copyGeometry', defaultMessage: 'Copy Geometry'})}\n            className=\"delete-panel-item\"\n            Icon={copied ? actionIcons.copied : actionIcons.copy}\n            onClick={copyGeometry}\n          />\n          {children}\n          <ActionPanelItem\n            label={intl.formatMessage({id: 'tooltip.delete', defaultMessage: 'Delete'})}\n            className=\"delete-panel-item\"\n            Icon={actionIcons.remove}\n            onClick={onDeleteFeature}\n          />\n        </ActionPanel>\n      </StyledActionsLayer>\n    );\n  };\n\n  FeatureActionPanel.displayName = 'FeatureActionPanel';\n  FeatureActionPanel.defaultProps = {\n    position: null,\n    actionIcons: defaultActionIcons\n  };\n\n  return FeatureActionPanel;\n}\n\nFeatureActionPanelFactory.deps = PureFeatureActionPanelFactory.deps;\n\nexport default function FeatureActionPanelFactory(): ComponentType<FeatureActionPanelProps> {\n  return PureFeatureActionPanelFactory();\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useCallback, useState} from 'react';\nimport styled from 'styled-components';\nimport {BottomWidgetInner} from '../common/styled-components';\nimport TimeRangeSliderFactory from '../common/time-range-slider';\nimport FloatingTimeDisplayFactory from '../common/animation-control/floating-time-display';\nimport {timeRangeSliderFieldsSelector} from './time-range-filter';\nimport {TimeWidgetProps} from './types';\nimport TimeWidgetTopFactory from './time-widget-top';\n\nconst TimeBottomWidgetInner = styled(BottomWidgetInner)`\n  padding: 6px 32px 24px 32px;\n`;\n\nTimeWidgetFactory.deps = [TimeRangeSliderFactory, FloatingTimeDisplayFactory, TimeWidgetTopFactory];\n\nfunction TimeWidgetFactory(\n  TimeRangeSlider: ReturnType<typeof TimeRangeSliderFactory>,\n  FloatingTimeDisplay: ReturnType<typeof FloatingTimeDisplayFactory>,\n  TimeWidgetTop: ReturnType<typeof TimeWidgetTopFactory>\n) {\n  const TimeWidget: React.FC<TimeWidgetProps> = ({\n    datasets,\n    filter,\n    index,\n    readOnly,\n    showTimeDisplay,\n    setFilterAnimationTime,\n    onClose,\n    resetAnimation,\n    isAnimatable,\n    updateAnimationSpeed,\n    toggleAnimation,\n    setFilterPlot,\n    setFilterAnimationWindow,\n    timeline\n  }: TimeWidgetProps) => {\n    const [isMinified, setMinified] = useState(false);\n\n    const _updateAnimationSpeed = useCallback(speed => updateAnimationSpeed(index, speed), [\n      updateAnimationSpeed,\n      index\n    ]);\n\n    const _toggleAnimation = useCallback(() => toggleAnimation(index), [toggleAnimation, index]);\n\n    const _onToggleMinify = useCallback(() => setMinified(!isMinified), [setMinified, isMinified]);\n\n    const _setFilterAnimationWindow = useCallback(\n      animationWindow => setFilterAnimationWindow({id: filter.id, animationWindow}),\n      [setFilterAnimationWindow, filter.id]\n    );\n\n    const timeSliderOnChange = useCallback(value => setFilterAnimationTime(index, 'value', value), [\n      setFilterAnimationTime,\n      index\n    ]);\n\n    return (\n      <TimeBottomWidgetInner className=\"bottom-widget--inner\">\n        <TimeWidgetTop\n          filter={filter}\n          readOnly={readOnly}\n          datasets={datasets}\n          setFilterPlot={setFilterPlot}\n          index={index}\n          onClose={onClose}\n          onToggleMinify={_onToggleMinify}\n          isMinified={isMinified}\n        />\n        {/* Once AnimationControl is able to display large timeline*/}\n        {/* we can replace TimeRangeSlider with AnimationControl*/}\n        <TimeRangeSlider\n          {...timeRangeSliderFieldsSelector(filter)}\n          onChange={timeSliderOnChange}\n          toggleAnimation={_toggleAnimation}\n          updateAnimationSpeed={_updateAnimationSpeed}\n          setFilterAnimationWindow={_setFilterAnimationWindow}\n          hideTimeTitle={showTimeDisplay}\n          resetAnimation={resetAnimation}\n          isAnimatable={isAnimatable}\n          isMinified={isMinified}\n          timeline={timeline}\n        />\n        {showTimeDisplay ? (\n          <FloatingTimeDisplay\n            currentTime={filter.value}\n            defaultTimeFormat={filter.defaultTimeFormat}\n            timeFormat={filter.timeFormat}\n            timezone={filter.timezone}\n          />\n        ) : null}\n      </TimeBottomWidgetInner>\n    );\n  };\n\n  return React.memo(TimeWidget);\n}\n\nexport default TimeWidgetFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useCallback, useMemo} from 'react';\nimport styled from 'styled-components';\nimport {Clock, Close, LineChart, ArrowDown, ArrowUp} from '../common/icons';\nimport FieldSelectorFactory from '../common/field-selector';\nimport {SelectTextBold, IconRoundSmall, CenterFlexbox} from '../common/styled-components';\nimport {TimeWidgetTopProps, TopSectionWrapperProps} from './types';\nimport {Field} from '@kepler.gl/types';\n\nconst TOP_SECTION_HEIGHT = '36px';\n\nconst TopSectionWrapper = styled.div.attrs({\n  className: 'time-widget--top'\n})<TopSectionWrapperProps>`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  color: ${props => props.theme.labelColor};\n  height: ${TOP_SECTION_HEIGHT};\n\n  .bottom-widget__y-axis {\n    flex-grow: 1;\n    margin-left: 20px;\n  }\n\n  .bottom-widget__field-select {\n    width: 160px;\n    display: inline-block;\n\n    .item-selector__dropdown {\n      background: transparent;\n      padding: 4px 10px 4px 4px;\n      border-color: transparent;\n\n      :active,\n      :focus,\n      &.focus,\n      &.active {\n        background: transparent;\n        border-color: transparent;\n      }\n    }\n\n    .item-selector__dropdown:hover {\n      background: transparent;\n      border-color: transparent;\n\n      .item-selector__dropdown__value {\n        color: ${props =>\n          props.hoverColor ? props.theme[props.hoverColor] : props.theme.textColorHl};\n      }\n    }\n  }\n\n  .animation-control__speed-control {\n    margin-right: -12px;\n\n    .animation-control__speed-slider {\n      right: calc(0% - 48px);\n    }\n  }\n`;\n\nconst StyledTitle = styled(CenterFlexbox)`\n  flex-grow: 0;\n  color: ${props => props.theme.textColor};\n  margin-right: 10px;\n\n  .bottom-widget__icon {\n    margin-right: 6px;\n  }\n  .bottom-widget__icon.speed {\n    margin-right: 0;\n  }\n`;\n\nconst StyledCenterBox = styled(CenterFlexbox)`\n  > div {\n    margin-left: 4px;\n  }\n`;\n\nTimeWidgetTopFactory.deps = [FieldSelectorFactory];\nfunction TimeWidgetTopFactory(FieldSelector: ReturnType<typeof FieldSelectorFactory>) {\n  const TimeWidgetTop: React.FC<TimeWidgetTopProps> = ({\n    filter,\n    readOnly,\n    datasets,\n    setFilterPlot,\n    index,\n    onClose,\n    isMinified,\n    onToggleMinify\n  }) => {\n    const yAxisFields = useMemo(\n      () =>\n        ((datasets[filter.dataId[0]] || {}).fields || []).filter(\n          (f: Field) => f.type === 'integer' || f.type === 'real'\n        ),\n      [datasets, filter.dataId]\n    );\n    const _setFilterPlotYAxis = useCallback(value => setFilterPlot(index, {yAxis: value}), [\n      setFilterPlot,\n      index\n    ]);\n\n    return (\n      <TopSectionWrapper>\n        <StyledTitle className=\"bottom-widget__field\">\n          <CenterFlexbox className=\"bottom-widget__icon\">\n            <Clock height=\"15px\" />\n          </CenterFlexbox>\n          <SelectTextBold>{filter.name}</SelectTextBold>\n        </StyledTitle>\n        {!isMinified ? (\n          <StyledTitle className=\"bottom-widget__y-axis\">\n            <CenterFlexbox className=\"bottom-widget__icon\">\n              <LineChart height=\"15px\" />\n            </CenterFlexbox>\n            <div className=\"bottom-widget__field-select\">\n              <FieldSelector\n                fields={yAxisFields}\n                placement=\"top\"\n                value={filter.yAxis ? filter.yAxis.name : null}\n                onSelect={_setFilterPlotYAxis}\n                placeholder=\"placeholder.yAxis\"\n                erasable\n                showToken={false}\n              />\n            </div>\n          </StyledTitle>\n        ) : null}\n        <StyledCenterBox>\n          <IconRoundSmall>\n            {isMinified ? (\n              <ArrowUp height=\"12px\" onClick={onToggleMinify} />\n            ) : (\n              <ArrowDown height=\"12px\" onClick={onToggleMinify} />\n            )}\n          </IconRoundSmall>\n          {!readOnly ? (\n            <IconRoundSmall>\n              <Close height=\"12px\" onClick={onClose} />\n            </IconRoundSmall>\n          ) : null}\n        </StyledCenterBox>\n      </TopSectionWrapper>\n    );\n  };\n  return TimeWidgetTop;\n}\n\nexport default TimeWidgetTopFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useCallback, useMemo} from 'react';\nimport {getIntervalBins, getTimelineFromFilter} from '@kepler.gl/utils';\nimport {TimeRangeFilter} from '@kepler.gl/types';\nimport {ANIMATION_WINDOW} from '@kepler.gl/constants';\nimport AnimationControllerFactory from './common/animation-control/animation-controller';\nimport {Timeline} from '@kepler.gl/types';\n\ninterface FilterAnimationControllerProps {\n  filter: TimeRangeFilter & {animationWindow?: string};\n  filterIdx: number;\n  setFilterAnimationTime: (idx: number, value: string, a: any[]) => void;\n  children?: (\n    isAnimating: boolean | undefined,\n    startAnimation: () => void,\n    pauseAnimation: () => void,\n    resetAnimation: () => void,\n    timeline: Timeline | undefined,\n    setTimelineValue: (x: any) => void\n  ) => React.ReactElement | null;\n}\n\nFilterAnimationControllerFactory.deps = [AnimationControllerFactory];\nfunction FilterAnimationControllerFactory(\n  AnimationController: ReturnType<typeof AnimationControllerFactory>\n) {\n  const FilterAnimationController: React.FC<FilterAnimationControllerProps> = ({\n    filter,\n    filterIdx,\n    setFilterAnimationTime,\n    children\n  }) => {\n    const intervalBins = useMemo(() => getIntervalBins(filter), [filter]);\n\n    const steps = useMemo(() => (intervalBins ? intervalBins.map(x => x.x0) : null), [\n      intervalBins\n    ]);\n\n    const updateAnimation = useCallback(\n      value => {\n        switch (filter.animationWindow) {\n          case ANIMATION_WINDOW.interval:\n            const idx = value[1];\n            setFilterAnimationTime(filterIdx, 'value', [\n              intervalBins[idx].x0,\n              intervalBins[idx].x1 - 1\n            ]);\n            break;\n          default:\n            setFilterAnimationTime(filterIdx, 'value', value);\n            break;\n        }\n      },\n      [filterIdx, intervalBins, filter.animationWindow, setFilterAnimationTime]\n    );\n\n    // if filter is synced merge the filter and animation config\n    const timeline = getTimelineFromFilter(filter);\n\n    return (\n      <AnimationController\n        key=\"filter-control\"\n        value={filter.value}\n        domain={filter.domain}\n        speed={filter.speed}\n        isAnimating={filter.isAnimating}\n        animationWindow={filter.animationWindow}\n        steps={steps}\n        updateAnimation={updateAnimation}\n        // @ts-expect-error different function type, goes to TimeWidget setFilterAnimationTime()\n        setTimelineValue={setFilterAnimationTime}\n        timeline={timeline}\n        children={children}\n      />\n    );\n  };\n  return FilterAnimationController;\n}\n\nexport default FilterAnimationControllerFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useCallback} from 'react';\nimport {ANIMATION_WINDOW} from '@kepler.gl/constants';\nimport {AnimationConfig, Timeline} from '@kepler.gl/types';\nimport {snapToMarks, getTimelineFromAnimationConfig, toArray} from '@kepler.gl/utils';\nimport AnimationControllerFactory from './common/animation-control/animation-controller';\n\ninterface LayerAnimationControllerProps {\n  animationConfig: AnimationConfig;\n  setLayerAnimationTime: (x: number) => void;\n  children?: (\n    isAnimating: boolean | undefined,\n    startAnimation: () => void,\n    pauseAnimation: () => void,\n    resetAnimation: () => void,\n    timeline: Timeline | undefined,\n    setTimelineValue: (x: any) => void\n  ) => React.ReactElement | null;\n}\n\nLayerAnimationControllerFactory.deps = [AnimationControllerFactory];\n\nfunction LayerAnimationControllerFactory(\n  AnimationController: ReturnType<typeof AnimationControllerFactory>\n) {\n  const LayerAnimationController: React.FC<LayerAnimationControllerProps> = ({\n    animationConfig,\n    setLayerAnimationTime,\n    children\n  }) => {\n    const {timeSteps, domain} = animationConfig;\n\n    const setTimelineValue = useCallback(\n      (value: number) => {\n        if (Array.isArray(timeSteps)) {\n          setLayerAnimationTime(snapToMarks(toArray(value)[0], timeSteps));\n\n          // TODO: merge slider in to avoid this step\n        } else if (domain && value >= domain[0] && value <= domain[1]) {\n          setLayerAnimationTime(value);\n        }\n      },\n      [domain, setLayerAnimationTime, timeSteps]\n    );\n\n    const timeline = getTimelineFromAnimationConfig(animationConfig);\n\n    return (\n      <AnimationController\n        key=\"layer-control\"\n        value={Number(animationConfig.currentTime)}\n        domain={animationConfig.domain}\n        speed={animationConfig.speed}\n        isAnimating={animationConfig.isAnimating}\n        steps={animationConfig.timeSteps}\n        animationWindow={\n          animationConfig.timeSteps ? ANIMATION_WINDOW.interval : ANIMATION_WINDOW.point\n        }\n        setTimelineValue={setTimelineValue}\n        timeline={timeline}\n        children={children}\n      />\n    );\n  };\n  return LayerAnimationController;\n}\n\nexport default LayerAnimationControllerFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {Component} from 'react';\nimport {css} from 'styled-components';\nimport get from 'lodash.get';\nimport document from 'global/document';\n\nimport ModalDialogFactory from './modals/modal-dialog';\nimport {exportHtml, exportMap, exportJson, exportImage} from '@kepler.gl/utils';\nimport {\n  exportData,\n  getFileFormatNames,\n  getFileExtensions,\n  MapStyle,\n  ProviderState\n} from '@kepler.gl/reducers';\n\n// modals\nimport DeleteDatasetModalFactory from './modals/delete-data-modal';\nimport OverWriteMapModalFactory from './modals/overwrite-map-modal';\nimport DataTableModalFactory from './modals/data-table-modal';\nimport LoadDataModalFactory from './modals/load-data-modal';\nimport ExportImageModalFactory from './modals/export-image-modal';\nimport ExportDataModalFactory from './modals/export-data-modal';\nimport ExportMapModalFactory from './modals/export-map-modal/export-map-modal';\nimport AddMapStyleModalFactory from './modals/add-map-style-modal';\nimport SaveMapModalFactory from './modals/save-map-modal';\nimport ShareMapModalFactory from './modals/share-map-modal';\n\n// Breakpoints\nimport {media} from '@kepler.gl/styles';\n\n// Template\nimport {\n  EXPORT_DATA_TYPE_OPTIONS,\n  EXPORT_MAP_FORMATS,\n  KeyEvent,\n  ADD_DATA_ID,\n  DATA_TABLE_ID,\n  DELETE_DATA_ID,\n  EXPORT_DATA_ID,\n  EXPORT_IMAGE_ID,\n  EXPORT_MAP_ID,\n  ADD_MAP_STYLE_ID,\n  SAVE_MAP_ID,\n  SHARE_MAP_ID,\n  OVERWRITE_MAP_ID\n} from '@kepler.gl/constants';\n\nimport {MapState, UiState, OnSuccessCallBack, OnErrorCallBack} from '@kepler.gl/types';\n\nimport {\n  VisStateActions,\n  UIStateActions,\n  MapStyleActions,\n  ProviderActions\n} from '@kepler.gl/actions';\nimport {ModalDialogProps} from './common/modal';\nimport {Provider} from '@kepler.gl/cloud-providers';\nimport {findDOMNode} from 'react-dom';\nimport {VisState} from '@kepler.gl/schemas';\n\nconst DataTableModalStyle = css`\n  top: 70px;\n  padding: 0;\n  width: 90vw;\n  max-width: 90vw;\n\n  ${media.portable`\n    padding: 0;\n  `} ${media.palm`\n    padding: 0;\n    margin: 0 auto;\n  `};\n`;\nconst smallModalCss = css`\n  width: 40%;\n  padding: 40px 40px 32px 40px;\n`;\n\nconst LoadDataModalStyle = css`\n  top: 60px;\n`;\n\nconst DefaultStyle = css`\n  max-width: 960px;\n`;\n\nexport type ModalContainerProps = {\n  appName: string;\n  rootNode: React.ReactInstance | null | undefined;\n  containerW: number;\n  containerH: number;\n  mapboxApiAccessToken: string;\n  mapboxApiUrl?: string;\n  mapState: MapState;\n  mapStyle: MapStyle;\n  uiState: UiState;\n  visState: VisState;\n  providerState: ProviderState;\n  visStateActions: typeof VisStateActions;\n  uiStateActions: typeof UIStateActions;\n  mapStyleActions: typeof MapStyleActions;\n  providerActions: typeof ProviderActions;\n  onSaveToStorage?: () => void;\n  cloudProviders: Provider[];\n  onLoadCloudMapSuccess?: OnSuccessCallBack;\n  onLoadCloudMapError?: OnErrorCallBack;\n  onExportToCloudSuccess?: OnSuccessCallBack;\n  onExportToCloudError?: OnErrorCallBack;\n};\n\nModalContainerFactory.deps = [\n  DeleteDatasetModalFactory,\n  OverWriteMapModalFactory,\n  DataTableModalFactory,\n  LoadDataModalFactory,\n  ExportImageModalFactory,\n  ExportDataModalFactory,\n  ExportMapModalFactory,\n  AddMapStyleModalFactory,\n  ModalDialogFactory,\n  SaveMapModalFactory,\n  ShareMapModalFactory\n];\n\nexport default function ModalContainerFactory(\n  DeleteDatasetModal: ReturnType<typeof DeleteDatasetModalFactory>,\n  OverWriteMapModal: ReturnType<typeof OverWriteMapModalFactory>,\n  DataTableModal: ReturnType<typeof DataTableModalFactory>,\n  LoadDataModal: ReturnType<typeof LoadDataModalFactory>,\n  ExportImageModal: ReturnType<typeof ExportImageModalFactory>,\n  ExportDataModal: ReturnType<typeof ExportDataModalFactory>,\n  ExportMapModal: ReturnType<typeof ExportMapModalFactory>,\n  AddMapStyleModal: ReturnType<typeof AddMapStyleModalFactory>,\n  ModalDialog: ReturnType<typeof ModalDialogFactory>,\n  SaveMapModal: ReturnType<typeof SaveMapModalFactory>,\n  ShareMapModal: ReturnType<typeof ShareMapModalFactory>\n): React.ElementType<ModalContainerProps> {\n  /** @augments React.Component<ModalContainerProps> */\n  class ModalContainer extends Component<ModalContainerProps> {\n    // TODO - remove when prop types are fully exported\n    componentDidMount = () => {\n      document.addEventListener('keyup', this._onKeyUp);\n    };\n    componentWillUnmount() {\n      document.removeEventListener('keyup', this._onKeyUp);\n    }\n\n    _onKeyUp = event => {\n      const keyCode = event.keyCode;\n      if (keyCode === KeyEvent.DOM_VK_ESCAPE) {\n        this._closeModal();\n      }\n    };\n\n    _closeModal = () => {\n      this.props.uiStateActions.toggleModal(null);\n    };\n\n    _deleteDataset = key => {\n      this.props.visStateActions.removeDataset(key);\n      this._closeModal();\n    };\n\n    _onAddCustomMapStyle = () => {\n      this.props.mapStyleActions.addCustomMapStyle();\n      this._closeModal();\n    };\n\n    _onFileUpload = fileList => {\n      this.props.visStateActions.loadFiles(fileList);\n    };\n\n    _onExportImage = () => {\n      if (!this.props.uiState.exportImage.processing) {\n        exportImage(this.props.uiState.exportImage, `${this.props.appName}.png`);\n        this.props.uiStateActions.cleanupExportImage();\n        this._closeModal();\n      }\n    };\n\n    _onExportData = () => {\n      exportData(this.props, this.props.uiState.exportData);\n      this._closeModal();\n    };\n\n    _onExportMap = () => {\n      const {uiState} = this.props;\n      const {format} = uiState.exportMap;\n      (format === EXPORT_MAP_FORMATS.HTML ? exportHtml : exportJson)(\n        this.props,\n        this.props.uiState.exportMap[format] || {}\n      );\n      this._closeModal();\n    };\n\n    _exportFileToCloud = ({provider, isPublic, overwrite, closeModal}) => {\n      const toSave = exportMap(this.props);\n\n      this.props.providerActions.exportFileToCloud({\n        // @ts-ignore\n        mapData: toSave,\n        provider,\n        options: {\n          isPublic,\n          overwrite\n        },\n        closeModal,\n        onSuccess: this.props.onExportToCloudSuccess,\n        onError: this.props.onExportToCloudError\n      });\n    };\n\n    _onSaveMap = (provider, overwrite = false) => {\n      this._exportFileToCloud({\n        provider,\n        isPublic: false,\n        overwrite,\n        closeModal: true\n      });\n    };\n\n    _onOverwriteMap = () => {\n      this._onSaveMap(true);\n    };\n\n    _onShareMapUrl = provider => {\n      this._exportFileToCloud({provider, isPublic: true, overwrite: false, closeModal: false});\n    };\n\n    _onCloseSaveMap = () => {\n      this.props.providerActions.resetProviderStatus();\n      this._closeModal();\n    };\n\n    _onLoadCloudMap = payload => {\n      this.props.providerActions.loadCloudMap({\n        ...payload,\n        onSuccess: this.props.onLoadCloudMapSuccess,\n        onError: this.props.onLoadCloudMapError\n      });\n    };\n\n    /* eslint-disable complexity */\n    render() {\n      const {\n        containerW,\n        containerH,\n        mapStyle,\n        mapState,\n        uiState,\n        visState,\n        rootNode,\n        visStateActions,\n        uiStateActions,\n        providerState\n      } = this.props;\n      const {currentModal, datasetKeyToRemove} = uiState;\n      const {datasets, layers, editingDataset} = visState;\n\n      let template: JSX.Element | null = null;\n      let modalProps: Partial<ModalDialogProps> = {};\n\n      // TODO - currentModal is a string\n      // @ts-ignore\n      if (currentModal && currentModal.id && currentModal.template) {\n        // if currentMdoal template is already provided\n        // TODO: need to check whether template is valid\n        // @ts-ignore\n        template = <currentModal.template />;\n        // @ts-ignore\n        modalProps = currentModal.modalProps;\n      } else {\n        switch (currentModal) {\n          case DATA_TABLE_ID:\n            const width = containerW * 0.9;\n            template = (\n              <DataTableModal\n                datasets={datasets}\n                dataId={editingDataset}\n                showDatasetTable={visStateActions.showDatasetTable}\n                sortTableColumn={visStateActions.sortTableColumn}\n                pinTableColumn={visStateActions.pinTableColumn}\n                copyTableColumn={visStateActions.copyTableColumn}\n                setColumnDisplayFormat={visStateActions.setColumnDisplayFormat}\n                uiStateActions={uiStateActions}\n                uiState={uiState}\n              />\n            );\n\n            // TODO: we need to make this width consistent with the css rule defined modal.js:32 max-width: 70vw\n            // @ts-ignore // TODO fix this after add types to Theme\n            modalProps.cssStyle = css`\n              ${DataTableModalStyle};\n              ${media.palm`\n                width: ${width}px;\n              `};\n            `;\n            break;\n          case DELETE_DATA_ID:\n            // validate options\n            if (datasetKeyToRemove && datasets && datasets[datasetKeyToRemove]) {\n              template = (\n                <DeleteDatasetModal dataset={datasets[datasetKeyToRemove]} layers={layers} />\n              );\n              modalProps = {\n                title: 'modal.title.deleteDataset',\n                cssStyle: smallModalCss,\n                footer: true,\n                onConfirm: () => this._deleteDataset(datasetKeyToRemove),\n                onCancel: this._closeModal,\n                confirmButton: {\n                  negative: true,\n                  large: true,\n                  children: 'modal.button.delete'\n                }\n              };\n            }\n            break; // in case we add a new case after this one\n          case ADD_DATA_ID:\n            template = (\n              <LoadDataModal\n                {...providerState}\n                onClose={this._closeModal}\n                onFileUpload={this._onFileUpload}\n                onLoadCloudMap={this._onLoadCloudMap}\n                loadFiles={uiState.loadFiles}\n                fileLoading={visState.fileLoading}\n                fileLoadingProgress={visState.fileLoadingProgress}\n                fileFormatNames={getFileFormatNames(this.props.visState)}\n                fileExtensions={getFileExtensions(this.props.visState)}\n              />\n            );\n            modalProps = {\n              title: 'modal.title.addDataToMap',\n              cssStyle: LoadDataModalStyle,\n              footer: false,\n              onConfirm: this._closeModal\n            };\n            break;\n          case EXPORT_IMAGE_ID:\n            template = (\n              <ExportImageModal\n                exportImage={uiState.exportImage}\n                mapW={containerW}\n                mapH={containerH}\n                onUpdateImageSetting={uiStateActions.setExportImageSetting}\n                cleanupExportImage={uiStateActions.cleanupExportImage}\n              />\n            );\n            modalProps = {\n              title: 'modal.title.exportImage',\n              cssStyle: '',\n              footer: true,\n              onCancel: this._closeModal,\n              onConfirm: this._onExportImage,\n              confirmButton: {\n                large: true,\n                disabled: uiState.exportImage.processing,\n                children: 'modal.button.download'\n              }\n            };\n            break;\n          case EXPORT_DATA_ID:\n            template = (\n              <ExportDataModal\n                {...uiState.exportData}\n                supportedDataTypes={EXPORT_DATA_TYPE_OPTIONS}\n                datasets={datasets}\n                applyCPUFilter={this.props.visStateActions.applyCPUFilter}\n                onChangeExportDataType={uiStateActions.setExportDataType}\n                onChangeExportSelectedDataset={uiStateActions.setExportSelectedDataset}\n                onChangeExportFiltered={uiStateActions.setExportFiltered}\n              />\n            );\n            modalProps = {\n              title: 'modal.title.exportData',\n              cssStyle: '',\n              footer: true,\n              onCancel: this._closeModal,\n              onConfirm: this._onExportData,\n              confirmButton: {\n                large: true,\n                children: 'modal.button.export'\n              }\n            };\n            break;\n          case EXPORT_MAP_ID:\n            const keplerGlConfig = visState.schema.getConfigToSave({\n              mapStyle,\n              visState,\n              mapState,\n              uiState\n            });\n            template = (\n              <ExportMapModal\n                config={keplerGlConfig}\n                options={uiState.exportMap}\n                onChangeExportMapFormat={uiStateActions.setExportMapFormat}\n                onEditUserMapboxAccessToken={uiStateActions.setUserMapboxAccessToken}\n                onChangeExportMapHTMLMode={uiStateActions.setExportHTMLMapMode}\n              />\n            );\n            modalProps = {\n              title: 'modal.title.exportMap',\n              cssStyle: '',\n              footer: true,\n              onCancel: this._closeModal,\n              onConfirm: this._onExportMap,\n              confirmButton: {\n                large: true,\n                children: 'modal.button.export'\n              }\n            };\n            break;\n          case ADD_MAP_STYLE_ID:\n            template = (\n              <AddMapStyleModal\n                mapboxApiAccessToken={this.props.mapboxApiAccessToken}\n                mapboxApiUrl={this.props.mapboxApiUrl}\n                mapState={this.props.mapState}\n                inputStyle={mapStyle.inputStyle}\n                inputMapStyle={this.props.mapStyleActions.inputMapStyle}\n                loadCustomMapStyle={this.props.mapStyleActions.loadCustomMapStyle}\n              />\n            );\n            modalProps = {\n              title: 'modal.title.addCustomMapboxStyle',\n              cssStyle: '',\n              footer: true,\n              onCancel: this._closeModal,\n              onConfirm: this._onAddCustomMapStyle,\n              confirmButton: {\n                large: true,\n                disabled: !mapStyle.inputStyle.style,\n                children: 'modal.button.addStyle'\n              }\n            };\n            break;\n          case SAVE_MAP_ID:\n            template = (\n              <SaveMapModal\n                {...providerState}\n                exportImage={uiState.exportImage}\n                mapInfo={visState.mapInfo}\n                onSetMapInfo={visStateActions.setMapInfo}\n                cleanupExportImage={uiStateActions.cleanupExportImage}\n                onUpdateImageSetting={uiStateActions.setExportImageSetting}\n                onCancel={this._closeModal}\n                onConfirm={provider => this._onSaveMap(provider, false)}\n              />\n            );\n            modalProps = {\n              title: 'modal.title.saveMap',\n              cssStyle: '',\n              footer: false\n            };\n            break;\n          case OVERWRITE_MAP_ID:\n            template = (\n              <OverWriteMapModal\n                {...providerState}\n                title={get(visState, ['mapInfo', 'title'])}\n                onUpdateImageSetting={uiStateActions.setExportImageSetting}\n                cleanupExportImage={uiStateActions.cleanupExportImage}\n                onConfirm={this._onOverwriteMap}\n                onCancel={this._closeModal}\n              />\n            );\n            modalProps = {\n              title: 'Overwrite Existing File?',\n              cssStyle: smallModalCss,\n              footer: false\n            };\n            break;\n          case SHARE_MAP_ID:\n            template = (\n              <ShareMapModal\n                {...providerState}\n                onExport={this._onShareMapUrl}\n                cleanupExportImage={uiStateActions.cleanupExportImage}\n                onUpdateImageSetting={uiStateActions.setExportImageSetting}\n              />\n            );\n            modalProps = {\n              title: 'modal.title.shareURL',\n              cssStyle: '',\n              onCancel: this._onCloseSaveMap\n            };\n            break;\n          default:\n            break;\n        }\n      }\n\n      return rootNode ? (\n        <ModalDialog\n          parentSelector={() => findDOMNode(rootNode) as HTMLElement}\n          isOpen={Boolean(currentModal)}\n          onCancel={this._closeModal}\n          {...modalProps}\n          cssStyle={DefaultStyle.concat(modalProps.cssStyle)}\n        >\n          {template}\n        </ModalDialog>\n      ) : null;\n    }\n    /* eslint-enable complexity */\n  }\n\n  return ModalContainer;\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport Modal from '../common/modal';\n\nconst ModalDialogFactory = () => Modal;\n\nexport default ModalDialogFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport DatasetLabel from '../common/dataset-label';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {Layer} from '@kepler.gl/layers';\nimport {KeplerTable} from '@kepler.gl/table';\n\nconst StyledMsg = styled.div`\n  margin-top: 24px;\n`;\n\nexport interface DeleteDatasetModalProps {\n  dataset: KeplerTable;\n  layers: Layer[];\n}\n\nexport const DeleteDatasetModal: React.FC<DeleteDatasetModalProps> = ({dataset, layers = []}) => {\n  // retrieve only layers related to the current dataset\n  const currDatasetLayers = layers.filter(layer => layer.config.dataId === (dataset && dataset.id));\n\n  return (\n    <div className=\"delete-dataset-modal\">\n      <DatasetLabel dataset={dataset} />\n      <StyledMsg className=\"delete-dataset-msg\">\n        <FormattedMessage\n          id={'modal.deleteData.warning'}\n          values={{length: currDatasetLayers.length}}\n        />\n      </StyledMsg>\n    </div>\n  );\n};\n\nconst DeleteDatasetModalFactory = () => DeleteDatasetModal;\nexport default DeleteDatasetModalFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React from 'react';\nimport styled, {withTheme} from 'styled-components';\nimport DatasetLabel from '../common/dataset-label';\nimport DataTableFactory from '../common/data-table';\nimport {createSelector} from 'reselect';\nimport {renderedSize} from '../common/data-table/cell-size';\nimport CanvasHack from '../common/data-table/canvas';\nimport KeplerTable, {Datasets} from '@kepler.gl/table';\nimport {UIStateActions} from '@kepler.gl/actions';\nimport {UiState} from '@kepler.gl/types';\nimport {Gear} from '../common/icons';\nimport Portaled from '../common/portaled';\nimport DataTableConfigFactory from '../common/data-table/display-format';\n\nconst MIN_STATS_CELL_SIZE = 122;\nconst DEFAULT_SORT_COLUMN = {};\n\n// sidePadding changes from 38 to 68, 30px for configuration button\nconst dgSettings = {\n  sidePadding: '68px',\n  verticalPadding: '16px',\n  height: '36px'\n};\n\nconst StyledModal = styled.div`\n  min-height: 85vh;\n  overflow: hidden;\n  display: flex;\n`;\n\nconst DatasetCatalog = styled.div`\n  display: flex;\n  padding: ${dgSettings.verticalPadding} ${dgSettings.sidePadding} 0 0;\n\n  .overflow-horizontal {\n    display: flex;\n    overflow-x: auto;\n    overflow-y: hidden;\n    flex-direction: row;\n    ${props => props.theme.modalScrollBar}\n  }\n`;\n\ninterface DatasetModalTabProps {\n  active?: boolean;\n}\n\nexport const DatasetModalTab = styled.div<DatasetModalTabProps>`\n  align-items: center;\n  border-bottom: 3px solid ${props => (props.active ? 'black' : 'transparent')};\n  cursor: pointer;\n  display: flex;\n  height: 35px;\n  margin: 0 3px;\n  padding: 0 5px;\n\n  :hover {\n    border-bottom: 3px solid black;\n  }\n`;\n\nconst StyledConfigureButton = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  position: absolute;\n  top: 24px;\n  right: 48px;\n  svg {\n    stroke: black;\n  }\n  cursor: pointer;\n`;\n\ninterface DatasetTabsUnmemoizedProps {\n  activeDataset: KeplerTable;\n  datasets: Datasets;\n  showDatasetTable: (id: string) => void;\n}\n\nconst DatasetTabsUnmemoized: React.FC<DatasetTabsUnmemoizedProps> = ({\n  activeDataset,\n  datasets,\n  showDatasetTable\n}) => (\n  <DatasetCatalog className=\"dataset-modal-catalog\">\n    <div className=\"overflow-horizontal\">\n      {Object.values(datasets).map(dataset => (\n        <DatasetModalTab\n          className=\"dataset-modal-tab\"\n          active={dataset === activeDataset}\n          key={dataset.id}\n          onClick={() => showDatasetTable(dataset.id)}\n        >\n          <DatasetLabel dataset={dataset} />\n        </DatasetModalTab>\n      ))}\n    </div>\n  </DatasetCatalog>\n);\n\nexport const DatasetTabs = React.memo(DatasetTabsUnmemoized);\n\nDatasetTabs.displayName = 'DatasetTabs';\n\nDataTableModalFactory.deps = [DataTableFactory, DataTableConfigFactory];\n\nconst TableContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  min-height: 100%;\n  max-height: 100%;\n  max-width: 100%;\n`;\n\ninterface DataTableModalProps {\n  theme: any;\n  dataId?: string;\n  sortTableColumn: (id: string, column: string, mode?: string) => void;\n  pinTableColumn: (id: string, column: string) => void;\n  copyTableColumn: (id: string, column: string) => void;\n  datasets: Datasets;\n  showDatasetTable: (id: string) => void;\n  showTab?: boolean;\n  setColumnDisplayFormat: (\n    dataId: string,\n    formats: {\n      column: string;\n      displayFormat: string;\n    }\n  ) => void;\n  uiStateActions: typeof UIStateActions;\n  uiState: UiState;\n}\n\nfunction DataTableModalFactory(\n  DataTable: ReturnType<typeof DataTableFactory>,\n  DataTableConfig: ReturnType<typeof DataTableConfigFactory>\n): React.ComponentType<Omit<DataTableModalProps, 'theme'>> {\n  class DataTableModal extends React.Component<DataTableModalProps> {\n    state = {\n      showConfig: false\n    };\n\n    datasetCellSizeCache = {};\n    dataId = ({dataId = ''}: DataTableModalProps) => dataId;\n    datasets = (props: DataTableModalProps) => props.datasets;\n    fields = ({datasets, dataId = ''}: DataTableModalProps) => (datasets[dataId] || {}).fields;\n    columns = createSelector(this.fields, fields => fields.map(f => f.name));\n    colMeta = createSelector([this.fields, this.datasets], fields =>\n      fields.reduce(\n        (acc, {name, displayName, type, filterProps, format, displayFormat}) => ({\n          ...acc,\n          [name]: {\n            name: displayName || name,\n            type,\n            ...(format ? {format} : {}),\n            ...(displayFormat ? {displayFormat} : {}),\n            ...(filterProps?.columnStats ? {columnStats: filterProps.columnStats} : {})\n          }\n        }),\n        {}\n      )\n    );\n\n    cellSizeCache = createSelector(this.dataId, this.datasets, (dataId, datasets) => {\n      if (!datasets[dataId]) {\n        return {};\n      }\n      const {fields, dataContainer} = datasets[dataId];\n\n      let showCalculate: boolean | null = null;\n      if (!this.datasetCellSizeCache[dataId]) {\n        showCalculate = true;\n      } else if (\n        this.datasetCellSizeCache[dataId].fields !== fields ||\n        this.datasetCellSizeCache[dataId].dataContainer !== dataContainer\n      ) {\n        showCalculate = true;\n      }\n\n      if (!showCalculate) {\n        return this.datasetCellSizeCache[dataId].cellSizeCache;\n      }\n\n      const cellSizeCache = fields.reduce(\n        (acc, field, colIdx) => ({\n          ...acc,\n          [field.name]: renderedSize({\n            text: {\n              dataContainer,\n              column: field.displayName\n            },\n            colIdx,\n            type: field.type,\n            fontSize: this.props.theme.cellFontSize,\n            font: this.props.theme.fontFamily,\n            minCellSize: MIN_STATS_CELL_SIZE\n          })\n        }),\n        {}\n      );\n      // save it to cache\n      this.datasetCellSizeCache[dataId] = {\n        cellSizeCache,\n        fields,\n        dataContainer\n      };\n      return cellSizeCache;\n    });\n\n    copyTableColumn = (column: string) => {\n      const {dataId = '', copyTableColumn} = this.props;\n      copyTableColumn(dataId, column);\n    };\n\n    pinTableColumn = (column: string) => {\n      const {dataId = '', pinTableColumn} = this.props;\n      pinTableColumn(dataId, column);\n    };\n\n    sortTableColumn = (column: string, mode?: string) => {\n      const {dataId = '', sortTableColumn} = this.props;\n      sortTableColumn(dataId, column, mode);\n    };\n\n    setColumnDisplayFormat = formats => {\n      const {dataId, setColumnDisplayFormat} = this.props;\n      if (dataId) setColumnDisplayFormat(dataId, formats);\n    };\n\n    onOpenConfig = () => {\n      this.setState({showConfig: true});\n    };\n\n    onCloseConfig = () => {\n      this.setState({showConfig: false});\n    };\n\n    render() {\n      const {datasets, dataId, showDatasetTable, showTab = true} = this.props;\n      if (!datasets || !dataId) {\n        return null;\n      }\n      const activeDataset = datasets[dataId];\n      const columns = this.columns(this.props);\n      const colMeta = this.colMeta(this.props);\n      const cellSizeCache = this.cellSizeCache(this.props);\n\n      return (\n        <StyledModal className=\"dataset-modal\" id=\"dataset-modal\">\n          <CanvasHack />\n          <TableContainer>\n            {showTab ? (\n              <DatasetTabs\n                activeDataset={activeDataset}\n                datasets={datasets}\n                showDatasetTable={showDatasetTable}\n              />\n            ) : null}\n            <StyledConfigureButton className=\"display-config-button\">\n              <Gear onClick={this.onOpenConfig} />\n              <Portaled\n                right={240}\n                top={20}\n                isOpened={this.state.showConfig}\n                onClose={this.onCloseConfig}\n              >\n                <DataTableConfig\n                  columns={columns}\n                  colMeta={colMeta}\n                  setColumnDisplayFormat={this.setColumnDisplayFormat}\n                  onClose={this.onCloseConfig}\n                />\n              </Portaled>\n            </StyledConfigureButton>\n            {datasets[dataId] ? (\n              <DataTable\n                key={dataId}\n                dataId={dataId}\n                columns={columns}\n                colMeta={colMeta}\n                cellSizeCache={cellSizeCache}\n                dataContainer={activeDataset.dataContainer}\n                pinnedColumns={activeDataset.pinnedColumns}\n                sortOrder={activeDataset.sortOrder}\n                sortColumn={activeDataset.sortColumn || DEFAULT_SORT_COLUMN}\n                copyTableColumn={this.copyTableColumn}\n                pinTableColumn={this.pinTableColumn}\n                sortTableColumn={this.sortTableColumn}\n                setColumnDisplayFormat={this.setColumnDisplayFormat}\n                hasStats={false}\n              />\n            ) : null}\n          </TableContainer>\n        </StyledModal>\n      );\n    }\n  }\n  return withTheme(DataTableModal);\n}\n\nexport default DataTableModalFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useState} from 'react';\nimport styled from 'styled-components';\nimport get from 'lodash.get';\nimport {IntlShape, useIntl} from 'react-intl';\n\nimport FileUploadFactory from '../common/file-uploader/file-upload';\nimport LoadStorageMapFactory from './load-storage-map';\nimport ModalTabsFactory from './modal-tabs';\nimport LoadingDialog from './loading-dialog';\n\nimport {LOADING_METHODS} from '@kepler.gl/constants';\nimport {FileLoading, FileLoadingProgress, LoadFiles} from '@kepler.gl/types';\n\n/** @typedef {import('./load-data-modal').LoadDataModalProps} LoadDataModalProps */\n\nconst StyledLoadDataModal = styled.div.attrs({\n  className: 'load-data-modal'\n})`\n  padding: ${props => props.theme.modalPadding};\n  min-height: 440px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst noop = () => {};\nconst getDefaultMethod = <T,>(methods: T[] = []) =>\n  Array.isArray(methods) ? get(methods, [0]) : null;\nexport interface LoadingMethod {\n  id: string;\n  label: string;\n  elementType: React.ComponentType<any>;\n  tabElementType?: React.ComponentType<{onClick: React.MouseEventHandler; intl: IntlShape}>;\n}\n\ntype LoadDataModalProps = {\n  // call backs\n  onFileUpload: (files: File[]) => void;\n  onLoadCloudMap: (provider: any, vis: any) => void;\n  fileLoading: FileLoading | false;\n  loadingMethods?: LoadingMethod[];\n  /** A list of names of supported formats suitable to present to user */\n  fileFormatNames: string[];\n  /** A list of typically 3 letter extensions (without '.') for file matching */\n  fileExtensions: string[];\n  isCloudMapLoading: boolean;\n  /** Set to true if app wants to do its own file filtering */\n  disableExtensionFilter?: boolean;\n  onClose?: (...args: any) => any;\n\n  loadFiles: LoadFiles;\n  fileLoadingProgress: FileLoadingProgress;\n};\n\nLoadDataModalFactory.deps = [ModalTabsFactory, FileUploadFactory, LoadStorageMapFactory];\n\nexport function LoadDataModalFactory(\n  ModalTabs: ReturnType<typeof ModalTabsFactory>,\n  FileUpload: ReturnType<typeof FileUploadFactory>,\n  LoadStorageMap: ReturnType<typeof LoadStorageMapFactory>\n) {\n  /** @type {React.FunctionComponent<LoadDataModalProps>} */\n  const LoadDataModal: React.FC<LoadDataModalProps> = props => {\n    const intl = useIntl();\n    const {loadingMethods, isCloudMapLoading} = props;\n    const [currentMethod, toggleMethod] = useState(getDefaultMethod(loadingMethods));\n\n    const ElementType = currentMethod?.elementType;\n\n    return (\n      <StyledLoadDataModal>\n        <ModalTabs\n          currentMethod={currentMethod?.id}\n          loadingMethods={loadingMethods}\n          toggleMethod={toggleMethod}\n        />\n        {isCloudMapLoading ? (\n          <LoadingDialog size={64} />\n        ) : (\n          ElementType && <ElementType key={currentMethod?.id} intl={intl} {...props} />\n        )}\n      </StyledLoadDataModal>\n    );\n  };\n\n  LoadDataModal.defaultProps = {\n    onFileUpload: noop,\n    fileLoading: false,\n    loadingMethods: [\n      {\n        id: LOADING_METHODS.upload,\n        label: 'modal.loadData.upload',\n        elementType: FileUpload\n      },\n      {\n        id: LOADING_METHODS.storage,\n        label: 'modal.loadData.storage',\n        elementType: LoadStorageMap\n      }\n    ]\n  };\n\n  return LoadDataModal;\n}\n\nexport default LoadDataModalFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useCallback, useState, useEffect} from 'react';\nimport {CloudHeader} from './cloud-components/cloud-header';\nimport {CloudMaps} from './cloud-components/cloud-maps';\nimport {useCloudListProvider} from '../hooks/use-cloud-list-provider';\nimport {ProviderSelect} from './cloud-components/provider-select';\nimport {FlexColContainer} from '../common/flex-container';\nimport {Provider, MapListItem} from '@kepler.gl/cloud-providers';\n\nfunction LoadStorageMapFactory() {\n  const LoadStorageMap = ({onLoadCloudMap}) => {\n    const {provider: currentProvider, setProvider, cloudProviders} = useCloudListProvider();\n    const [isLoading, setIsLoading] = useState(false);\n    const [maps, setMaps] = useState<MapListItem[] | null>(null);\n    const [error, setError] = useState(null);\n\n    const setProviderInfo = useCallback((provider: Provider | null) => {\n      setMaps(null);\n      setError(null);\n      if (provider) {\n        setIsLoading(true);\n        provider\n          .listMaps()\n          .then(setMaps)\n          .catch(setError)\n          .finally(() => setIsLoading(false));\n      } else {\n        setIsLoading(false);\n      }\n    }, []);\n\n    useEffect(() => {\n      setProviderInfo(currentProvider);\n    }, [currentProvider]);\n\n    const onSelectMap = useCallback((provider, map) => {\n      onLoadCloudMap({\n        loadParams: map.loadParams,\n        provider\n      });\n    }, []);\n\n    return (\n      <FlexColContainer>\n        {!currentProvider ? (\n          <ProviderSelect cloudProviders={cloudProviders} />\n        ) : (\n          <>\n            <CloudHeader provider={currentProvider} onBack={() => setProvider(null)} />\n            <CloudMaps\n              isLoading={isLoading}\n              onSelectMap={onSelectMap}\n              provider={currentProvider}\n              error={error}\n              maps={maps}\n            />\n          </>\n        )}\n      </FlexColContainer>\n    );\n  };\n\n  return LoadStorageMap;\n}\n\nexport default LoadStorageMapFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useCallback, useEffect, useState} from 'react';\nimport styled from 'styled-components';\nimport {Logout, Login} from '../common/icons';\nimport {CenterVerticalFlexbox, Button, CheckMark} from '../common/styled-components';\nimport {Provider, CloudUser} from '@kepler.gl/cloud-providers';\nimport {useCloudListProvider} from '../hooks/use-cloud-list-provider';\n\ninterface StyledTileWrapperProps {\n  selected?: boolean;\n}\n\nconst StyledTileWrapper = styled.div.attrs({\n  className: 'provider-tile__wrapper'\n})<StyledTileWrapperProps>`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n  border-radius: 2px;\n  border: 1px solid\n    ${props => (props.selected ? props.theme.primaryBtnBgd : props.theme.selectBorderColorLT)};\n  color: ${props => (props.selected ? props.theme.primaryBtnBgd : props.theme.selectBorderColorLT)};\n  cursor: pointer;\n  font-weight: 500;\n  width: 120px;\n  height: 168px;\n  background-color: #ffffff;\n  transition: ${props => props.theme.transition};\n  position: relative;\n  :hover {\n    border: 1px solid ${props => props.theme.primaryBtnBgd};\n    color: ${props => props.theme.primaryBtnBgd};\n  }\n\n  .button {\n    margin-top: 20px;\n  }\n`;\n\nconst StyledBox = styled(CenterVerticalFlexbox)`\n  margin-right: 12px;\n  position: relative;\n`;\n\nconst StyledCloudName = styled.div`\n  font-size: 12px;\n  margin-top: 12px;\n  margin-bottom: 4px;\n`;\n\nconst StyledUserName = styled.div`\n  font-size: 11px;\n  margin-top: 8px;\n  text-align: center;\n  color: ${props => props.theme.primaryBtnActBgd};\n  overflow: hidden;\n  width: 100px;\n  text-overflow: ellipsis;\n`;\n\ninterface OnClickProps {\n  onClick?: React.MouseEventHandler<HTMLButtonElement>;\n}\n\nconst LoginButton = ({onClick}: OnClickProps) => (\n  <Button className=\"login-button\" link small onClick={onClick}>\n    <Login />\n    Login\n  </Button>\n);\n\nconst LogoutButton = ({onClick}: OnClickProps) => (\n  <Button className=\"logout-button\" link small onClick={onClick}>\n    <Logout />\n    Logout\n  </Button>\n);\n\nconst NewTag = styled.div`\n  width: 37px;\n  height: 19px;\n  display: flex;\n  align-content: center;\n  justify-content: center;\n  border-radius: 8px;\n  padding: 4px 8px;\n  background-color: #EDE9F9;\n  color: #8863F8;\n  position: absolute;\n  left: 35%;\n  top: -8px\n  z-index: 500;\n  font-size: 11px;\n  line-height: 10px;\n`;\n\nexport const StyledWarning = styled.span`\n  color: ${props => props.theme.errorColor};\n  font-weight: ${props => props.theme.selectFontWeightBold};\n`;\n\ninterface CloudTileProps {\n  actionName?: string | null;\n  // cloud provider class\n  provider: Provider;\n}\n\n/**\n * this component display a provider and allows users to select and set the current provider\n * @param provider\n * @param actionName\n * @constructor\n */\nconst CloudTile: React.FC<CloudTileProps> = ({provider, actionName}) => {\n  const [user, setUser] = useState<CloudUser | null>(null);\n  const [error, setError] = useState<Error | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const {provider: currentProvider, setProvider} = useCloudListProvider();\n  const isSelected = provider === currentProvider;\n\n  useEffect(() => {\n    if (!provider) {\n      return;\n    }\n    setError(null);\n    setIsLoading(true);\n    setError(null);\n    provider\n      .getUser()\n      .then(setUser)\n      .catch(setError)\n      .finally(() => {\n        setError(null);\n        setIsLoading(false);\n      });\n  }, [provider]);\n\n  const onLogin = useCallback(async () => {\n    setError(null);\n    setIsLoading(true);\n    try {\n      const user = await provider.login();\n      setUser(user);\n      setProvider(provider);\n    } catch (error) {\n      setError(error as Error);\n    }\n    setIsLoading(false);\n  }, [provider]);\n\n  const onSelect = useCallback(async () => {\n    if (isLoading) {\n      return;\n    }\n    if (user) {\n      setProvider(provider);\n      return;\n    }\n    try {\n      await onLogin();\n      setProvider(provider);\n    } catch (err) {\n      setError(err as Error);\n      setProvider(null);\n    }\n  }, [setProvider, provider, user, isLoading]);\n\n  const onLogout = useCallback(async () => {\n    setIsLoading(true);\n    try {\n      await provider.logout();\n    } catch (error) {\n      setError(error as Error);\n    }\n    setIsLoading(false);\n    setUser(null);\n    setProvider(null);\n  }, [provider]);\n\n  const {displayName, name} = provider;\n\n  return (\n    <StyledBox>\n      {provider.isNew ? <NewTag>New</NewTag> : null}\n      <div></div>\n      <StyledTileWrapper onClick={onSelect} selected={isSelected}>\n        <StyledCloudName>{displayName || name}</StyledCloudName>\n        {provider.icon ? <provider.icon height=\"64px\" /> : null}\n        {isLoading ? (\n          <div>Loading ...</div>\n        ) : (\n          <>{user ? <StyledUserName>{actionName || user.name}</StyledUserName> : null}</>\n        )}\n        {isSelected ? <CheckMark /> : null}\n      </StyledTileWrapper>\n      {user || error ? <LogoutButton onClick={onLogout} /> : <LoginButton onClick={onLogin} />}\n      {error ? <StyledWarning>{error.message}</StyledWarning> : null}\n    </StyledBox>\n  );\n};\n\nexport default CloudTile;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useCallback} from 'react';\nimport classnames from 'classnames';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport {media} from '@kepler.gl/styles';\nimport {FormattedMessage, useIntl} from 'react-intl';\nimport {LoadingMethod} from './load-data-modal';\n\nconst ModalTab = styled.div`\n  align-items: flex-end;\n  display: flex;\n  border-bottom: 1px solid #d8d8d8;\n  margin-bottom: 32px;\n  justify-content: space-between;\n\n  .load-data-modal__tab__inner {\n    display: flex;\n    width: 100%;\n  }\n\n  .load-data-modal__tab__item.active {\n    color: ${props => props.theme.textColorLT};\n    border-bottom: 3px solid ${props => props.theme.textColorLT};\n    font-weight: 500;\n  }\n\n  ${media.portable`\n    font-size: 12px;\n  `};\n`;\n\nconst StyledLoadDataModalTabItem = styled.div`\n  border-bottom: 3px solid transparent;\n  cursor: pointer;\n  margin-left: 32px;\n  padding: 16px 0;\n  font-size: 14px;\n  font-weight: 400;\n  color: ${props => props.theme.subtextColorLT};\n\n  ${media.portable`\n    margin-left: 16px;\n    font-size: 12px;\n  `};\n\n  :first-child {\n    margin-left: 0;\n    padding-left: 0;\n  }\n\n  :hover {\n    color: ${props => props.theme.textColorLT};\n  }\n`;\n\nconst noop = () => {};\n\ninterface ModalTabItemProps {\n  currentMethod?: string;\n  method: LoadingMethod;\n  toggleMethod: (method: LoadingMethod) => void;\n}\n\nexport const ModalTabItem: React.FC<ModalTabItemProps> = ({\n  currentMethod,\n  method,\n  toggleMethod\n}) => {\n  const onClick = useCallback(() => toggleMethod(method), [method, toggleMethod]);\n  const intl = useIntl();\n\n  return method.tabElementType ? (\n    <method.tabElementType onClick={onClick} intl={intl} />\n  ) : (\n    <StyledLoadDataModalTabItem\n      className={classnames('load-data-modal__tab__item', {\n        active: currentMethod && method.id === currentMethod\n      })}\n      onClick={onClick}\n    >\n      <div>{method.label ? <FormattedMessage id={method.label} /> : method.id}</div>\n    </StyledLoadDataModalTabItem>\n  );\n};\n\nfunction ModalTabsFactory() {\n  const ModalTabs = ({currentMethod, toggleMethod, loadingMethods}) => (\n    <ModalTab className=\"load-data-modal__tab\">\n      <div className=\"load-data-modal__tab__inner\">\n        {loadingMethods.map(method => (\n          <ModalTabItem\n            key={method.id}\n            method={method}\n            currentMethod={currentMethod}\n            toggleMethod={toggleMethod}\n          />\n        ))}\n      </div>\n    </ModalTab>\n  );\n\n  ModalTabs.propTypes = {\n    toggleMethod: PropTypes.func.isRequired,\n    currentMethod: PropTypes.string,\n    loadingMethods: PropTypes.arrayOf(PropTypes.object)\n  };\n\n  ModalTabs.defaultProps = {\n    toggleMethod: noop,\n    currentMethod: null,\n    loadingMethods: []\n  };\n\n  return ModalTabs;\n}\n\nexport default ModalTabsFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useEffect} from 'react';\nimport styled from 'styled-components';\nimport ImagePreview from '../common/image-preview';\nimport {SetExportImageSettingUpdaterAction} from '@kepler.gl/actions';\n\nimport {\n  EXPORT_IMG_RATIO_OPTIONS,\n  EXPORT_IMG_RESOLUTION_OPTIONS,\n  ExportImage\n} from '@kepler.gl/constants';\n\nimport {StyledModalContent, SelectionButton, CheckMark} from '../common/styled-components';\nimport Switch from '../common/switch';\nimport {injectIntl, IntlShape} from 'react-intl';\nimport {FormattedMessage} from '@kepler.gl/localization';\n\nconst ImageOptionList = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  width: 250px;\n\n  .image-option-section {\n    .image-option-section-title {\n      font-weight: 500;\n      font-size: 14px;\n    }\n  }\n\n  .button-list {\n    display: flex;\n    flex-direction: row;\n    padding: 8px 0px;\n  }\n\n  input {\n    margin-right: 8px;\n  }\n`;\n\nexport interface ExportImageModalProps {\n  exportImage: ExportImage;\n  mapW: number;\n  mapH: number;\n  onUpdateImageSetting: (payload: SetExportImageSettingUpdaterAction['payload']) => void;\n  cleanupExportImage: () => void;\n  intl: IntlShape;\n}\n\nconst ExportImageModalFactory = () => {\n  /** @type {typeof import('./export-image-modal').ExportImageModal} */\n  const ExportImageModal: React.FC<ExportImageModalProps> = ({\n    mapW,\n    mapH,\n    exportImage,\n    onUpdateImageSetting,\n    cleanupExportImage,\n    intl\n  }) => {\n    const {legend, ratio, resolution} = exportImage;\n\n    useEffect(() => {\n      onUpdateImageSetting({\n        exporting: true\n      });\n      return cleanupExportImage;\n    }, [onUpdateImageSetting, cleanupExportImage]);\n\n    useEffect(() => {\n      if (mapH !== exportImage.mapH || mapW !== exportImage.mapW) {\n        onUpdateImageSetting({\n          mapH,\n          mapW\n        });\n      }\n    }, [mapH, mapW, exportImage, onUpdateImageSetting]);\n\n    return (\n      <StyledModalContent className=\"export-image-modal\">\n        <ImageOptionList>\n          <div className=\"image-option-section\">\n            <div className=\"image-option-section-title\">\n              <FormattedMessage id={'modal.exportImage.ratioTitle'} />\n            </div>\n            <FormattedMessage id={'modal.exportImage.ratioDescription'} />\n            <div className=\"button-list\" id=\"export-image-modal__option_ratio\">\n              {EXPORT_IMG_RATIO_OPTIONS.filter(op => !op.hidden).map(op => (\n                <SelectionButton\n                  key={op.id}\n                  selected={ratio === op.id}\n                  onClick={() => onUpdateImageSetting({ratio: op.id})}\n                >\n                  <FormattedMessage id={op.label} />\n                  {ratio === op.id && <CheckMark />}\n                </SelectionButton>\n              ))}\n            </div>\n          </div>\n          <div className=\"image-option-section\">\n            <div className=\"image-option-section-title\">\n              <FormattedMessage id={'modal.exportImage.resolutionTitle'} />\n            </div>\n            <FormattedMessage id={'modal.exportImage.resolutionDescription'} />\n            <div className=\"button-list\" id=\"export-image-modal__option_resolution\">\n              {EXPORT_IMG_RESOLUTION_OPTIONS.map(op => (\n                <SelectionButton\n                  key={op.id}\n                  selected={resolution === op.id}\n                  onClick={() => op.available && onUpdateImageSetting({resolution: op.id})}\n                >\n                  {op.label}\n                  {resolution === op.id && <CheckMark />}\n                </SelectionButton>\n              ))}\n            </div>\n          </div>\n          <div className=\"image-option-section\">\n            <div className=\"image-option-section-title\">\n              <FormattedMessage id={'modal.exportImage.mapLegendTitle'} />\n            </div>\n            <Switch\n              type=\"checkbox\"\n              id=\"add-map-legend\"\n              checked={legend}\n              label={intl.formatMessage({id: 'modal.exportImage.mapLegendAdd'})}\n              onChange={() => onUpdateImageSetting({legend: !legend})}\n            />\n          </div>\n        </ImageOptionList>\n        <ImagePreview exportImage={exportImage} />\n      </StyledModalContent>\n    );\n  };\n\n  return injectIntl(ExportImageModal);\n};\n\nexport default ExportImageModalFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {Component} from 'react';\n\nimport {EXPORT_DATA_TYPE_OPTIONS} from '@kepler.gl/constants';\nimport {FileType} from '../common/icons';\nimport {\n  StyledExportSection,\n  StyledFilteredOption,\n  StyledModalContent,\n  StyledType,\n  CheckMark\n} from '../common/styled-components';\nimport {injectIntl, IntlShape} from 'react-intl';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {Datasets} from '@kepler.gl/table';\n\nconst getDataRowCount = (\n  datasets: Datasets,\n  selectedDataset: string | undefined,\n  filtered: boolean,\n  intl: IntlShape\n) => {\n  if (selectedDataset === undefined) {\n    return;\n  }\n  const selectedData = datasets[selectedDataset];\n  if (!selectedData) {\n    return intl.formatMessage(\n      {id: 'modal.exportData.fileCount'},\n      {fileCount: Object.keys(datasets).length}\n    );\n  }\n  const {dataContainer, filteredIdxCPU} = selectedData;\n\n  if (filtered && !filteredIdxCPU) {\n    return '-';\n  }\n\n  const rowCount = filtered ? filteredIdxCPU?.length : dataContainer.numRows();\n\n  return intl.formatMessage(\n    {id: 'modal.exportData.rowCount'},\n    {rowCount: rowCount?.toLocaleString()}\n  );\n};\n\nexport interface ExportDataModalProps {\n  datasets: Datasets;\n  selectedDataset?: string;\n  dataType: string;\n  filtered: boolean;\n  // callbacks\n  applyCPUFilter: (filter: string | string[]) => void;\n  onChangeExportSelectedDataset: (dataset: string) => void;\n  onChangeExportDataType: (type: string) => void;\n  onChangeExportFiltered: (isFiltered: boolean) => void;\n  intl: IntlShape;\n  supportedDataTypes: {\n    id: string;\n    label: string;\n    available: boolean;\n  }[];\n}\n\nconst ExportDataModalFactory = () => {\n  class ExportDataModal extends Component<ExportDataModalProps> {\n    componentDidMount() {\n      const toCPUFilter = this.props.selectedDataset || Object.keys(this.props.datasets);\n      this.props.applyCPUFilter(toCPUFilter);\n    }\n\n    _onSelectDataset: React.ChangeEventHandler<HTMLSelectElement> = ({target: {value}}) => {\n      this.props.applyCPUFilter(value);\n      this.props.onChangeExportSelectedDataset(value);\n    };\n\n    render() {\n      const {\n        supportedDataTypes = EXPORT_DATA_TYPE_OPTIONS,\n        datasets,\n        selectedDataset,\n        dataType,\n        filtered,\n        onChangeExportDataType,\n        onChangeExportFiltered,\n        intl\n      } = this.props;\n\n      return (\n        <StyledModalContent className=\"export-data-modal\">\n          <div>\n            <StyledExportSection>\n              <div className=\"description\">\n                <div className=\"title\">\n                  <FormattedMessage id={'modal.exportData.datasetTitle'} />\n                </div>\n                <div className=\"subtitle\">\n                  <FormattedMessage id={'modal.exportData.datasetSubtitle'} />\n                </div>\n              </div>\n              <div className=\"selection\">\n                <select value={selectedDataset} onChange={this._onSelectDataset}>\n                  {[intl.formatMessage({id: 'modal.exportData.allDatasets'})]\n                    .concat(Object.keys(datasets))\n                    .map(d => (\n                      <option key={d} value={d}>\n                        {(datasets[d] && datasets[d].label) || d}\n                      </option>\n                    ))}\n                </select>\n              </div>\n            </StyledExportSection>\n            <StyledExportSection>\n              <div className=\"description\">\n                <div className=\"title\">\n                  <FormattedMessage id={'modal.exportData.dataTypeTitle'} />\n                </div>\n                <div className=\"subtitle\">\n                  <FormattedMessage id={'modal.exportData.dataTypeSubtitle'} />\n                </div>\n              </div>\n              <div className=\"selection\">\n                {supportedDataTypes.map(op => (\n                  <StyledType\n                    key={op.id}\n                    selected={dataType === op.id}\n                    onClick={() => op.available && onChangeExportDataType(op.id)}\n                  >\n                    <FileType ext={op.label} height=\"80px\" fontSize=\"11px\" />\n                    {dataType === op.id && <CheckMark />}\n                  </StyledType>\n                ))}\n              </div>\n            </StyledExportSection>\n            <StyledExportSection>\n              <div className=\"description\">\n                <div className=\"title\">\n                  <FormattedMessage id={'modal.exportData.dataTypeTitle'} />\n                </div>\n                <div className=\"subtitle\">\n                  <FormattedMessage id={'modal.exportData.filterDataSubtitle'} />\n                </div>\n              </div>\n              <div className=\"selection\">\n                <StyledFilteredOption\n                  className=\"unfiltered-option\"\n                  selected={!filtered}\n                  onClick={() => onChangeExportFiltered(false)}\n                >\n                  <div className=\"filter-option-title\">\n                    <FormattedMessage id={'modal.exportData.unfilteredData'} />\n                  </div>\n                  <div className=\"filter-option-subtitle\">\n                    {getDataRowCount(datasets, selectedDataset, false, intl)}\n                  </div>\n                  {!filtered && <CheckMark />}\n                </StyledFilteredOption>\n                <StyledFilteredOption\n                  className=\"filtered-option\"\n                  selected={filtered}\n                  onClick={() => onChangeExportFiltered(true)}\n                >\n                  <div className=\"filter-option-title\">\n                    <FormattedMessage id={'modal.exportData.filteredData'} />\n                  </div>\n                  <div className=\"filter-option-subtitle\">\n                    {getDataRowCount(datasets, selectedDataset, true, intl)}\n                  </div>\n                  {filtered && <CheckMark />}\n                </StyledFilteredOption>\n              </div>\n            </StyledExportSection>\n          </div>\n        </StyledModalContent>\n      );\n    }\n  }\n\n  return injectIntl(ExportDataModal);\n};\n\nexport default ExportDataModalFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React from 'react';\n\nimport {FileType} from '../../common/icons';\nimport {StyledModalContent, StyledType, CheckMark} from '../../common/styled-components';\nimport {EXPORT_MAP_FORMATS, EXPORT_MAP_FORMAT_OPTIONS} from '@kepler.gl/constants';\nimport {StyledExportMapSection} from './components';\nimport ExportHtmlMapFactory from './export-html-map';\nimport ExportJsonMapFactory from './export-json-map';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {ActionHandler, setExportHTMLMapMode, setUserMapboxAccessToken} from '@kepler.gl/actions';\n\ninterface ExportMapModalFactoryProps {\n  options?: {format: string};\n  config: any;\n  onEditUserMapboxAccessToken: ActionHandler<typeof setUserMapboxAccessToken>;\n  onChangeExportMapHTMLMode?: ActionHandler<typeof setExportHTMLMapMode>;\n  onChangeExportMapFormat?: (format: string) => any;\n  mapFormat?: string;\n}\n\nconst style = {width: '100%'};\n\nconst NO_OP = (...args: any[]) => ({} as any);\n\nExportMapModalFactory.deps = [ExportHtmlMapFactory, ExportJsonMapFactory];\n\nfunction ExportMapModalFactory(\n  ExportHtmlMap: ReturnType<typeof ExportHtmlMapFactory>,\n  ExportJsonMap: ReturnType<typeof ExportJsonMapFactory>\n) {\n  const ExportMapModalUnmemoized = ({\n    config = {},\n    onChangeExportMapFormat = NO_OP,\n    onChangeExportMapHTMLMode = NO_OP,\n    onEditUserMapboxAccessToken = NO_OP,\n    options = {format: ''}\n  }: ExportMapModalFactoryProps) => (\n    <StyledModalContent className=\"export-map-modal\">\n      <div style={style}>\n        <StyledExportMapSection>\n          <div className=\"description\">\n            <div className=\"title\">\n              <FormattedMessage id={'modal.exportMap.formatTitle'} />\n            </div>\n            <div className=\"subtitle\">\n              <FormattedMessage id={'modal.exportMap.formatSubtitle'} />\n            </div>\n          </div>\n          <div className=\"selection\">\n            {EXPORT_MAP_FORMAT_OPTIONS.map(op => (\n              <StyledType\n                key={op.id}\n                selected={options.format === op.id}\n                onClick={() => op.available && onChangeExportMapFormat(op.id)}\n              >\n                <FileType ext={op.label} height=\"80px\" fontSize=\"11px\" />\n\n                {options.format === op.id && <CheckMark />}\n              </StyledType>\n            ))}\n          </div>\n        </StyledExportMapSection>\n        {\n          {\n            [EXPORT_MAP_FORMATS.HTML]: (\n              <ExportHtmlMap\n                onChangeExportMapHTMLMode={onChangeExportMapHTMLMode}\n                onEditUserMapboxAccessToken={onEditUserMapboxAccessToken}\n                options={options[options.format]}\n              />\n            ),\n            [EXPORT_MAP_FORMATS.JSON]: <ExportJsonMap config={config} />\n          }[\n            // @ts-ignore\n            options.format\n          ]\n        }\n      </div>\n    </StyledModalContent>\n  );\n\n  ExportMapModalUnmemoized.displayName = 'ExportMapModal';\n\n  const ExportMapModal = React.memo(ExportMapModalUnmemoized);\n\n  return ExportMapModal;\n}\n\nexport default ExportMapModalFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React from 'react';\nimport {StyledExportSection, StyledType, CheckMark} from '../../common/styled-components';\nimport {StyledExportMapSection, StyledWarning, ExportMapLink} from './components';\nimport {\n  EXPORT_HTML_MAP_MODE_OPTIONS,\n  EXPORT_HTML_MAP_DOC,\n  EXPORT_HTML_MAP_MODES_DOC\n} from '@kepler.gl/constants';\nimport styled from 'styled-components';\nimport {injectIntl} from 'react-intl';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {IntlShape} from 'react-intl';\n\nimport {setUserMapboxAccessToken, setExportHTMLMapMode, ActionHandler} from '@kepler.gl/actions';\n\nconst ExportMapStyledExportSection = styled(StyledExportSection)`\n  .disclaimer {\n    font-size: ${props => props.theme.inputFontSize};\n    color: ${props => props.theme.inputColor};\n    margin-top: 12px;\n  }\n`;\n\ninterface StyledInputProps {\n  error?: boolean;\n}\n\nconst StyledInput = styled.input<StyledInputProps>`\n  width: 100%;\n  padding: ${props => props.theme.inputPadding};\n  color: ${props => (props.error ? 'red' : props.theme.titleColorLT)};\n  height: ${props => props.theme.inputBoxHeight};\n  outline: 0;\n  font-size: ${props => props.theme.inputFontSize};\n\n  :active,\n  :focus,\n  &.focus,\n  &.active {\n    outline: 0;\n  }\n`;\n\nconst BigStyledTile = styled(StyledType)`\n  height: unset;\n  width: unset;\n  img {\n    width: 180px;\n    height: 120px;\n  }\n`;\n\ntype ExportHtmlMapProps = {\n  onChangeExportMapHTMLMode: ActionHandler<typeof setExportHTMLMapMode>;\n  onEditUserMapboxAccessToken: ActionHandler<typeof setUserMapboxAccessToken>;\n  options: {\n    userMapboxToken?: string;\n    mode?: string;\n  };\n};\n\ntype IntlProps = {\n  intl: IntlShape;\n};\n\nfunction ExportHtmlMapFactory(): React.ComponentType<ExportHtmlMapProps> {\n  /** @type {typeof import('./export-html-map').ExportHtmlMap} */\n  const ExportHtmlMap: React.FC<ExportHtmlMapProps & IntlProps> = ({\n    onChangeExportMapHTMLMode = mode => {},\n    onEditUserMapboxAccessToken = token => {},\n    options = {},\n    intl\n  }) => (\n    <div>\n      <StyledExportMapSection>\n        <div className=\"description\" />\n        <div className=\"selection\">\n          <FormattedMessage id={'modal.exportMap.html.selection'} />\n        </div>\n      </StyledExportMapSection>\n      <ExportMapStyledExportSection className=\"export-map-modal__html-options\">\n        <div className=\"description\">\n          <div className=\"title\">\n            <FormattedMessage id={'modal.exportMap.html.tokenTitle'} />\n          </div>\n          <div className=\"subtitle\">\n            <FormattedMessage id={'modal.exportMap.html.tokenSubtitle'} />\n          </div>\n        </div>\n        <div className=\"selection\">\n          <StyledInput\n            onChange={e => onEditUserMapboxAccessToken(e.target.value)}\n            type=\"text\"\n            placeholder={intl.formatMessage({id: 'modal.exportMap.html.tokenPlaceholder'})}\n            value={options ? options.userMapboxToken : ''}\n          />\n          <div className=\"disclaimer\">\n            <StyledWarning>\n              <FormattedMessage id={'modal.exportMap.html.tokenMisuseWarning'} />\n            </StyledWarning>\n            <FormattedMessage id={'modal.exportMap.html.tokenDisclaimer'} />\n            <ExportMapLink href={EXPORT_HTML_MAP_DOC}>\n              <FormattedMessage id={'modal.exportMap.html.tokenUpdate'} />\n            </ExportMapLink>\n          </div>\n        </div>\n      </ExportMapStyledExportSection>\n      <ExportMapStyledExportSection>\n        <div className=\"description\">\n          <div className=\"title\">\n            <FormattedMessage id={'modal.exportMap.html.modeTitle'} />\n          </div>\n          <div className=\"subtitle\">\n            <FormattedMessage id={'modal.exportMap.html.modeSubtitle1'} />\n            <a href={EXPORT_HTML_MAP_MODES_DOC}>\n              <FormattedMessage id={'modal.exportMap.html.modeSubtitle2'} />\n            </a>\n          </div>\n        </div>\n        <div className=\"selection\">\n          {EXPORT_HTML_MAP_MODE_OPTIONS.map(mode => (\n            <BigStyledTile\n              key={mode.id}\n              selected={options.mode === mode.id}\n              onClick={() => mode.available && onChangeExportMapHTMLMode(mode.id)}\n            >\n              <img src={mode.url} alt=\"\" />\n              <p>\n                <FormattedMessage\n                  id={'modal.exportMap.html.modeDescription'}\n                  values={{mode: intl.formatMessage({id: mode.label})}}\n                />\n              </p>\n              {options.mode === mode.id && <CheckMark />}\n            </BigStyledTile>\n          ))}\n        </div>\n      </ExportMapStyledExportSection>\n    </div>\n  );\n\n  ExportHtmlMap.displayName = 'ExportHtmlMap';\n\n  return injectIntl(ExportHtmlMap);\n}\n\nexport default ExportHtmlMapFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useState} from 'react';\nimport JSONPretty from 'react-json-pretty';\nimport {ADD_DATA_TO_MAP_DOC} from '@kepler.gl/constants';\nimport styled from 'styled-components';\nimport {StyledExportSection, Button} from '../../common/styled-components';\nimport {StyledExportMapSection, StyledWarning, ExportMapLink} from './components';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\n\nconst StyledJsonExportSection = styled(StyledExportSection)`\n  .note {\n    color: ${props => props.theme.errorColor};\n    font-size: 11px;\n  }\n\n  .viewer {\n    position: relative;\n    border: 1px solid ${props => props.theme.selectBorderColorLT};\n    background-color: white;\n    border-radius: 2px;\n    display: inline-block;\n    font: inherit;\n    line-height: 1.5em;\n    padding: 0.5em 3.5em 0.5em 1em;\n    margin: 0;\n    box-sizing: border-box;\n    height: 180px;\n    width: 100%;\n    overflow-y: scroll;\n    overflow-x: auto;\n    white-space: pre-wrap;\n    word-wrap: break-word;\n    max-width: 600px;\n  }\n\n  .copy-button {\n    margin: 1em 1em 0 0;\n    position: absolute;\n    top: 0;\n    right: 0;\n  }\n`;\n\ntype ExportJsonPropTypes = {\n  config: any;\n};\n\nconst ExportJsonMapUnmemoized = ({config = {}}: ExportJsonPropTypes) => {\n  const [copied, setCopy] = useState(false);\n  return (\n    <div>\n      <StyledExportMapSection>\n        <div className=\"description\" />\n        <div className=\"selection\">\n          <FormattedMessage id={'modal.exportMap.json.selection'} />\n        </div>\n      </StyledExportMapSection>\n      <StyledJsonExportSection className=\"export-map-modal__json-options\">\n        <div className=\"description\">\n          <div className=\"title\">\n            <FormattedMessage id={'modal.exportMap.json.configTitle'} />\n          </div>\n          <div className=\"subtitle\">\n            <FormattedMessage id={'modal.exportMap.json.configDisclaimer'} />\n            <ExportMapLink href={ADD_DATA_TO_MAP_DOC}>addDataToMap</ExportMapLink>.\n          </div>\n        </div>\n        <div className=\"selection\">\n          <div className=\"viewer\">\n            <JSONPretty id=\"json-pretty\" json={config} />\n            <CopyToClipboard text={JSON.stringify(config)} onCopy={() => setCopy(true)}>\n              <Button width=\"80px\">{copied ? 'Copied!' : 'Copy'}</Button>\n            </CopyToClipboard>\n          </div>\n          <div className=\"disclaimer\">\n            <StyledWarning>\n              <FormattedMessage id={'modal.exportMap.json.disclaimer'} />\n            </StyledWarning>\n          </div>\n        </div>\n      </StyledJsonExportSection>\n    </div>\n  );\n};\n\nExportJsonMapUnmemoized.displayName = 'ExportJsonMap';\n\nconst ExportJsonMap = React.memo(ExportJsonMapUnmemoized);\n\nconst ExportJsonMapFactory = () => ExportJsonMap;\n\nexport default ExportJsonMapFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {Component} from 'react';\nimport {polyfill} from 'react-lifecycles-compat';\nimport classnames from 'classnames';\nimport styled from 'styled-components';\nimport MapGLMap, {MapRef} from 'react-map-gl/maplibre';\nimport {\n  StyledModalContent,\n  InputLight,\n  StyledMapContainer,\n  StyledModalVerticalPanel,\n  StyledModalSection\n} from '../common/styled-components';\nimport {media} from '@kepler.gl/styles';\n\n// Utils\nimport {transformRequest} from '@kepler.gl/utils';\nimport {injectIntl, IntlShape} from 'react-intl';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport maplibregl from 'maplibre-gl';\nimport {InputStyle, MapState} from '@kepler.gl/types';\n\nconst MapH = 190;\nconst MapW = 264;\nconst ErrorMsg = {\n  styleError:\n    'Failed to load map style, make sure it is published. For private style, paste in your access token.'\n};\n\nconst PreviewMap = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin-left: 116px;\n  flex-shrink: 0;\n\n  .preview-title {\n    font-weight: 500;\n    font-size: 10px;\n    padding: 8px 0px;\n  }\n\n  .preview-title.error {\n    color: ${props => props.theme.errorColor};\n  }\n\n  ${media.portable`\n    margin-left: 32px;\n  `};\n\n  ${media.palm`\n    margin-left: unset;\n    .preview-title {\n      margin-top: 0px;\n    }\n  `};\n`;\n\nconst StyledPreviewImage = styled.div`\n  background: ${props => props.theme.modalImagePlaceHolder};\n  border-radius: 4px;\n  box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.18);\n  width: ${MapW}px;\n  height: ${MapH}px;\n  position: relative;\n\n  .preview-image-placeholder {\n    position: absolute;\n    top: 0;\n    left: 0;\n  }\n\n  .preview-image-spinner {\n    position: absolute;\n    left: calc(50% - 25px);\n    top: calc(50% - 25px);\n  }\n`;\n\nconst InlineLink = styled.a`\n  font-weight: 500;\n\n  :hover {\n    cursor: pointer;\n  }\n`;\n\ninterface AddMapStyleModalProps {\n  inputMapStyle: Function;\n  inputStyle: InputStyle;\n  loadCustomMapStyle: Function;\n  mapboxApiAccessToken: string;\n  mapboxApiUrl?: string;\n  mapState: MapState;\n  intl: IntlShape;\n}\n\nfunction AddMapStyleModalFactory() {\n  class AddMapStyleModal extends Component<AddMapStyleModalProps> {\n    state = {\n      reRenderKey: 0,\n      previousToken: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n      if (\n        props.inputStyle &&\n        props.inputStyle.accessToken &&\n        props.inputStyle.accessToken !== state.previousToken\n      ) {\n        // toke has changed\n        // ReactMapGl doesn't re-create map when token has changed\n        // here we force the map to update\n\n        return {\n          reRenderKey: state.reRenderKey + 1,\n          previousToken: props.inputStyle.accessToken\n        };\n      }\n\n      return null;\n    }\n\n    mapRef: MapRef | null | undefined;\n    _map: maplibregl.Map | undefined;\n\n    componentDidUpdate() {\n      const map = this.mapRef && this.mapRef.getMap();\n      if (map && this._map !== map) {\n\n        this._map = map;\n\n        map.on('style.load', () => {\n          const style = map.getStyle();\n          this.loadMapStyleJson(style);\n        });\n\n        map.on('error', () => {\n          this.loadMapStyleError();\n        });\n      }\n    }\n\n    loadMapStyleJson = style => {\n      this.props.loadCustomMapStyle({style, error: false});\n    };\n\n    loadMapStyleError = () => {\n      this.props.loadCustomMapStyle({error: true});\n    };\n\n    render() {\n      const {inputStyle, mapState, mapboxApiUrl, intl} = this.props;\n\n      const mapboxApiAccessToken = inputStyle.accessToken || this.props.mapboxApiAccessToken;\n      const mapProps = {\n        ...mapState,\n        baseApiUrl: mapboxApiUrl,\n        mapboxAccessToken: mapboxApiAccessToken,\n        mapLib: maplibregl,\n        preserveDrawingBuffer: true,\n        transformRequest\n      };\n\n      return (\n        <div className=\"add-map-style-modal\">\n          <StyledModalContent>\n            <StyledModalVerticalPanel>\n              <StyledModalSection>\n                <div className=\"modal-section-title\">\n                  <FormattedMessage id={'modal.addStyle.pasteTitle'} />\n                </div>\n                <div className=\"modal-section-subtitle\">\n                  {intl.formatMessage({id: 'modal.addStyle.pasteSubtitle0'})}\n                  <InlineLink\n                    target=\"_blank\"\n                    href=\"https://www.mapbox.com/help/studio-manual-publish/#style-url\"\n                  >\n                    {' '}\n                    {intl.formatMessage({id: 'modal.addStyle.pasteSubtitle2'})}\n                  </InlineLink>{' '}\n                  {intl.formatMessage({id: 'modal.addStyle.pasteSubtitle3'})}\n                  <InlineLink\n                    target=\"_blank\"\n                    href=\"https://docs.mapbox.com/mapbox-gl-js/style-spec\"\n                  >\n                    {' '}\n                    {intl.formatMessage({id: 'modal.addStyle.pasteSubtitle4'})}\n                  </InlineLink>\n                </div>\n                <InputLight\n                  type=\"text\"\n                  value={inputStyle.url || ''}\n                  onChange={({target: {value}}) => this.props.inputMapStyle({url: value})}\n                  placeholder=\"e.g. https://basemaps.cartocdn.com/gl/positron-gl-style/style.json\"\n                />\n              </StyledModalSection>\n\n              {/* <StyledModalSection>\n                <div className=\"modal-section-title\">\n                  <FormattedMessage id={'modal.addStyle.publishTitle'} />\n                </div>\n                <div className=\"modal-section-subtitle\">\n                  {intl.formatMessage({id: 'modal.addStyle.publishSubtitle1'})}\n                  <InlineLink target=\"_blank\" href=\"https://www.mapbox.com/studio/styles/\">\n                    {' '}\n                    mapbox\n                  </InlineLink>{' '}\n                  {intl.formatMessage({id: 'modal.addStyle.publishSubtitle2'})}\n                  <InlineLink\n                    target=\"_blank\"\n                    href=\"https://www.mapbox.com/help/studio-manual-publish/\"\n                  >\n                    {' '}\n                    {intl.formatMessage({id: 'modal.addStyle.publishSubtitle3'})}\n                  </InlineLink>{' '}\n                  {intl.formatMessage({id: 'modal.addStyle.publishSubtitle4'})}\n                </div>\n\n                <div className=\"modal-section-subtitle\">\n                  {intl.formatMessage({id: 'modal.addStyle.publishSubtitle5'})}\n                  <InlineLink\n                    target=\"_blank\"\n                    href=\"https://www.mapbox.com/help/how-access-tokens-work/\"\n                  >\n                    {' '}\n                    {intl.formatMessage({id: 'modal.addStyle.publishSubtitle6'})}\n                  </InlineLink>{' '}\n                  {intl.formatMessage({id: 'modal.addStyle.publishSubtitle7'})}\n                </div>\n                <InputLight\n                  type=\"text\"\n                  value={inputStyle.accessToken || ''}\n                  onChange={({target: {value}}) => this.props.inputMapStyle({accessToken: value})}\n                  placeholder={intl.formatMessage({id: 'modal.addStyle.exampleToken'})}\n                />\n              </StyledModalSection> */}\n\n              <StyledModalSection>\n                <div className=\"modal-section-title\">\n                  <FormattedMessage id={'modal.addStyle.namingTitle'} />\n                </div>\n                <InputLight\n                  type=\"text\"\n                  value={inputStyle.label || ''}\n                  onChange={({target: {value}}) => this.props.inputMapStyle({label: value})}\n                />\n              </StyledModalSection>\n            </StyledModalVerticalPanel>\n            <PreviewMap>\n              <div\n                className={classnames('preview-title', {\n                  error: inputStyle.error\n                })}\n              >\n                {inputStyle.error\n                  ? ErrorMsg.styleError\n                  : (inputStyle.style && inputStyle.style.name) || ''}\n              </div>\n              <StyledPreviewImage className=\"preview-image\">\n                {!inputStyle.isValid ? (\n                  <div className=\"preview-image-spinner\" />\n                ) : (\n                  <StyledMapContainer>\n                    <MapGLMap\n                      {...mapProps}\n                      ref={el => {\n                        this.mapRef = el;\n                      }}\n                      key={this.state.reRenderKey}\n                      style={{\n                        width: MapW,\n                        height: MapH\n                      }}\n                      mapStyle={inputStyle.url === null ? undefined : inputStyle.url}\n                    />\n                  </StyledMapContainer>\n                )}\n              </StyledPreviewImage>\n            </PreviewMap>\n          </StyledModalContent>\n        </div>\n      );\n    }\n  }\n\n  return injectIntl(polyfill(AddMapStyleModal));\n}\n\nexport default AddMapStyleModalFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useCallback, useMemo} from 'react';\nimport styled from 'styled-components';\nimport ImageModalContainer, {ImageModalContainerProps} from './image-modal-container';\nimport {FlexContainer} from '../common/flex-container';\nimport StatusPanel, {UploadAnimation} from './status-panel';\nimport {ProviderSelect} from './cloud-components/provider-select';\nimport {\n  MAP_THUMBNAIL_DIMENSION,\n  MAP_INFO_CHARACTER,\n  ExportImage,\n  dataTestIds\n} from '@kepler.gl/constants';\n\nimport {\n  StyledModalContent,\n  InputLight,\n  TextAreaLight,\n  StyledExportSection,\n  StyledModalSection,\n  StyledModalInputFootnote\n} from '../common/styled-components';\nimport ImagePreview from '../common/image-preview';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {MapInfo} from '@kepler.gl/types';\nimport {Provider} from '@kepler.gl/cloud-providers';\nimport {setMapInfo, cleanupExportImage as cleanupExportImageAction} from '@kepler.gl/actions';\nimport {ModalFooter} from '../common/modal';\nimport {useCloudListProvider} from '../hooks/use-cloud-list-provider';\n\nconst StyledSaveMapModal = styled.div.attrs({\n  className: 'save-map-modal'\n})`\n  .save-map-modal-content {\n    min-height: 400px;\n    flex-direction: column;\n  }\n\n  .description {\n    width: 300px;\n  }\n\n  .image-preview-panel {\n    width: 300px;\n\n    .image-preview {\n      padding: 0;\n    }\n  }\n\n  .map-info-panel {\n    flex-direction: column;\n  }\n\n  .save-map-modal-description {\n    .modal-section-subtitle {\n      margin-left: 6px;\n    }\n  }\n`;\n\nconst nop = _ => {};\nconst TEXT_AREA_LIGHT_STYLE = {resize: 'none'};\n\ntype CharacterLimits = {\n  title?: number;\n  description?: number;\n};\n\ntype SaveMapModalProps = {\n  mapInfo: MapInfo;\n  exportImage: ExportImage;\n  isProviderLoading: boolean;\n  providerError?: Error;\n  characterLimits?: CharacterLimits;\n\n  // callbacks\n  onUpdateImageSetting: ImageModalContainerProps['onUpdateImageSetting'];\n  cleanupExportImage: typeof cleanupExportImageAction;\n  onSetMapInfo: typeof setMapInfo;\n  onConfirm: (provider: Provider) => void;\n  onCancel: () => void;\n};\n\ntype MapInfoPanelProps = Pick<SaveMapModalProps, 'mapInfo' | 'characterLimits'> & {\n  onChangeInput: (\n    type: string,\n    event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => void;\n};\n\nexport const MapInfoPanel: React.FC<MapInfoPanelProps> = ({\n  mapInfo,\n  characterLimits,\n  onChangeInput\n}) => {\n  const {description = '', title = ''} = mapInfo;\n  return (\n    <div className=\"selection map-info-panel\" data-testid={dataTestIds.providerMapInfoPanel}>\n      <StyledModalSection className=\"save-map-modal-name\">\n        <div className=\"modal-section-title\">Name*</div>\n        <div>\n          <InputLight\n            id=\"map-title\"\n            type=\"text\"\n            value={title}\n            onChange={e => onChangeInput('title', e)}\n            placeholder=\"Type map title\"\n          />\n        </div>\n      </StyledModalSection>\n      <StyledModalSection>\n        <FlexContainer className=\"save-map-modal-description\">\n          <div className=\"modal-section-title\">Description</div>\n          <div className=\"modal-section-subtitle\">(optional)</div>\n        </FlexContainer>\n        <div>\n          <TextAreaLight\n            rows={3}\n            id=\"map-description\"\n            style={TEXT_AREA_LIGHT_STYLE as React.CSSProperties}\n            value={description}\n            onChange={e => onChangeInput('description', e)}\n            placeholder=\"Type map description\"\n          />\n        </div>\n        <StyledModalInputFootnote\n          error={\n            Boolean(characterLimits?.description) &&\n            description.length > Number(characterLimits?.description)\n          }\n        >\n          {description.length}/{characterLimits?.description || MAP_INFO_CHARACTER.description}{' '}\n          characters\n        </StyledModalInputFootnote>\n      </StyledModalSection>\n    </div>\n  );\n};\n\nconst SaveMapHeader = ({cloudProviders}) => {\n  return (\n    <StyledExportSection>\n      <div className=\"description\">\n        <div className=\"title\">\n          <FormattedMessage id={'modal.saveMap.title'} />\n        </div>\n        <div className=\"subtitle\">\n          <FormattedMessage id={'modal.saveMap.subtitle'} />\n        </div>\n      </div>\n      <ProviderSelect cloudProviders={cloudProviders} />\n    </StyledExportSection>\n  );\n};\n\nconst STYLED_EXPORT_SECTION_STYLE = {margin: '2px 0'};\nconst PROVIDER_MANAGER_URL_STYLE = {textDecoration: 'underline'};\n\nfunction SaveMapModalFactory() {\n  const SaveMapModal: React.FC<SaveMapModalProps> = ({\n    mapInfo,\n    exportImage,\n    characterLimits = MAP_INFO_CHARACTER,\n    isProviderLoading,\n    providerError,\n    onUpdateImageSetting = nop,\n    cleanupExportImage,\n    onSetMapInfo,\n    onCancel,\n    onConfirm\n  }) => {\n    const {provider, cloudProviders} = useCloudListProvider();\n\n    const onChangeInput = (\n      key: string,\n      {target: {value}}: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n    ) => {\n      onSetMapInfo({[key]: value});\n    };\n\n    const confirmButton = useMemo(\n      () => ({\n        large: true,\n        disabled: Boolean(!(provider && mapInfo.title)),\n        children: 'modal.button.save'\n      }),\n      [provider, mapInfo]\n    );\n\n    const confirm = useCallback(() => {\n      if (provider) {\n        onConfirm(provider);\n      }\n    }, [provider]);\n\n    return (\n      <ImageModalContainer\n        provider={provider}\n        onUpdateImageSetting={onUpdateImageSetting}\n        cleanupExportImage={cleanupExportImage}\n      >\n        <StyledSaveMapModal>\n          <StyledModalContent className=\"save-map-modal-content\">\n            <SaveMapHeader cloudProviders={cloudProviders} />\n            {provider && (\n              <>\n                {provider.getManagementUrl ? (\n                  <StyledExportSection style={STYLED_EXPORT_SECTION_STYLE}>\n                    <div className=\"selection\">\n                      <a\n                        key={1}\n                        href={provider.getManagementUrl()}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        style={PROVIDER_MANAGER_URL_STYLE}\n                      >\n                        Go to your Kepler.gl {provider.displayName} page\n                      </a>\n                    </div>\n                  </StyledExportSection>\n                ) : null}\n                <StyledExportSection>\n                  <div className=\"description image-preview-panel\">\n                    <ImagePreview\n                      exportImage={exportImage}\n                      width={MAP_THUMBNAIL_DIMENSION.width}\n                      showDimension={false}\n                    />\n                  </div>\n                  {isProviderLoading ? (\n                    <div\n                      data-testid={dataTestIds.providerLoading}\n                      className=\"selection map-saving-animation\"\n                    >\n                      <UploadAnimation icon={provider && provider.icon} />\n                    </div>\n                  ) : (\n                    <MapInfoPanel\n                      mapInfo={mapInfo}\n                      characterLimits={characterLimits}\n                      onChangeInput={onChangeInput}\n                    />\n                  )}\n                </StyledExportSection>\n              </>\n            )}\n            {providerError ? (\n              <StatusPanel\n                isLoading={false}\n                error={providerError.message}\n                providerIcon={provider && provider.icon}\n              />\n            ) : null}\n          </StyledModalContent>\n        </StyledSaveMapModal>\n        <ModalFooter cancel={onCancel} confirm={confirm} confirmButton={confirmButton} />\n      </ImageModalContainer>\n    );\n  };\n\n  return SaveMapModal;\n}\n\nexport default SaveMapModalFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useEffect, useState} from 'react';\nimport styled, {ThemeProvider} from 'styled-components';\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\nimport {themeLT} from '@kepler.gl/styles';\nimport ImageModalContainer, {ImageModalContainerProps} from './image-modal-container';\n\nimport {\n  StyledModalContent,\n  StyledExportSection,\n  InputLight,\n  Button\n} from '../common/styled-components';\nimport StatusPanel from './status-panel';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {useCloudListProvider} from '../hooks/use-cloud-list-provider';\nimport {ProviderSelect} from './cloud-components/provider-select';\nimport {Provider} from '@kepler.gl/cloud-providers';\nimport {cleanupExportImage as cleanupExportImageAction} from '@kepler.gl/actions';\nimport {dataTestIds} from '@kepler.gl/constants';\n\nexport const StyledInputLabel = styled.label`\n  font-size: 12px;\n  color: ${props => props.theme.textColorLT};\n  letter-spacing: 0.2px;\n`;\n\nexport const StyleSharingUrl = styled.div.attrs({\n  className: 'sharing-url'\n})`\n  width: 100%;\n  display: flex;\n  margin-bottom: 14px;\n  flex-direction: column;\n\n  input {\n    border-right: 0;\n  }\n\n  .button {\n    border-top-left-radius: 0;\n    border-bottom-left-radius: 0;\n  }\n`;\n\ninterface SharingUrlProps {\n  url: string;\n  message?: string;\n}\n\nexport const SharingUrl: React.FC<SharingUrlProps> = ({url, message = ''}) => {\n  const [copied, setCopy] = useState(false);\n  return (\n    <StyleSharingUrl>\n      <StyledInputLabel>{message}</StyledInputLabel>\n      <div style={{display: 'flex'}}>\n        <InputLight type=\"text\" value={url} readOnly />\n        <CopyToClipboard text={url} onCopy={() => setCopy(true)}>\n          <Button width=\"80px\">{copied ? 'Copied!' : 'Copy'}</Button>\n        </CopyToClipboard>\n      </div>\n    </StyleSharingUrl>\n  );\n};\nconst nop = () => {};\n\nconst StyledShareMapModal = styled(StyledModalContent)`\n  padding: 24px 72px 40px 72px;\n  margin: 0 -72px -40px -72px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst StyledInnerDiv = styled.div`\n  min-height: 500px;\n`;\n\nconst UNDERLINE_TEXT_DECORATION_STYLE = {textDecoration: 'underline'};\n\nconst ShareMapHeader = ({cloudProviders}) => {\n  return (\n    <StyledExportSection>\n      <div className=\"description\">\n        <div className=\"title\">\n          <FormattedMessage id={'modal.shareMap.title'} />\n        </div>\n      </div>\n      <ProviderSelect cloudProviders={cloudProviders} />\n    </StyledExportSection>\n  );\n};\n\ninterface ShareMapUrlModalFactoryProps {\n  isProviderLoading?: boolean;\n  onExport?: (provider: Provider) => void;\n  providerError?: string;\n  successInfo?: {shareUrl?: string; folderLink?: string};\n  onUpdateImageSetting: ImageModalContainerProps['onUpdateImageSetting'];\n  cleanupExportImage: typeof cleanupExportImageAction;\n}\n\nexport default function ShareMapUrlModalFactory() {\n  const ShareMapUrlModal: React.FC<ShareMapUrlModalFactoryProps> = ({\n    isProviderLoading = false,\n    onExport = nop,\n    providerError = null,\n    successInfo = {},\n    onUpdateImageSetting = nop,\n    cleanupExportImage\n  }) => {\n    const {provider, cloudProviders} = useCloudListProvider();\n    const {shareUrl, folderLink} = successInfo;\n\n    useEffect(() => {\n      if (provider) {\n        onExport(provider);\n      }\n    }, [provider]);\n\n    return (\n      <ThemeProvider theme={themeLT}>\n        <ImageModalContainer\n          provider={provider}\n          onUpdateImageSetting={onUpdateImageSetting}\n          cleanupExportImage={cleanupExportImage}\n        >\n          <StyledShareMapModal className=\"export-cloud-modal\">\n            <ShareMapHeader cloudProviders={cloudProviders} />\n            {provider?.hasSharingUrl() ? (\n              <StyledInnerDiv data-testid={dataTestIds.providerShareMap}>\n                <StyledExportSection>\n                  <div className=\"description\">\n                    <div className=\"title\">\n                      <FormattedMessage id={'modal.shareMap.shareUriTitle'} />\n                    </div>\n                    <div className=\"subtitle\">\n                      <FormattedMessage id={'modal.shareMap.shareUriSubtitle'} />\n                    </div>\n                  </div>\n                  <div className=\"selection\">\n                    <div className=\"title warning\">\n                      <FormattedMessage id={'modal.shareMap.shareDisclaimer'} />\n                    </div>\n                  </div>\n                </StyledExportSection>\n                <StyledExportSection disabled={isProviderLoading}>\n                  <div className=\"description\">\n                    <div className=\"title\">\n                      <FormattedMessage id={'modal.shareMap.cloudTitle'} />\n                    </div>\n                    <div className=\"subtitle\">\n                      <FormattedMessage id={'modal.shareMap.cloudSubtitle'} />\n                    </div>\n                  </div>\n                </StyledExportSection>\n                {isProviderLoading || providerError ? (\n                  <StatusPanel\n                    isLoading={isProviderLoading}\n                    error={providerError}\n                    providerIcon={provider.icon}\n                  />\n                ) : null}\n                {shareUrl && (\n                  <StyledExportSection>\n                    <div className=\"description\">\n                      <div className=\"title\">Share Url</div>\n                    </div>\n                    <div className=\"selection\">\n                      <SharingUrl key={0} url={shareUrl} />\n                      {provider && folderLink && (\n                        <a\n                          key={1}\n                          href={folderLink}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          style={UNDERLINE_TEXT_DECORATION_STYLE}\n                        >\n                          {provider.name}\n                        </a>\n                      )}\n                    </div>\n                  </StyledExportSection>\n                )}\n              </StyledInnerDiv>\n            ) : null}\n          </StyledShareMapModal>\n        </ImageModalContainer>\n      </ThemeProvider>\n    );\n  };\n\n  return ShareMapUrlModal;\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\n// libraries\nimport React, {Component, createRef} from 'react';\nimport {createSelector} from 'reselect';\nimport styled from 'styled-components';\nimport {Map} from 'react-map-gl/maplibre';\nimport debounce from 'lodash.debounce';\nimport {\n  exportImageError,\n  scaleMapStyleByResolution,\n  getCenterAndZoomFromBounds,\n  convertToPng,\n  getScaleFromImageSize\n} from '@kepler.gl/utils';\nimport {findMapBounds} from '@kepler.gl/reducers';\nimport MapContainerFactory from './map-container';\nimport MapsLayoutFactory from './maps-layout';\nimport {MapViewStateContextProvider} from './map-view-state-context';\n\nimport {GEOCODER_LAYER_ID, ExportImage} from '@kepler.gl/constants';\nimport {SplitMap} from '@kepler.gl/types';\nimport {\n  setExportImageDataUri,\n  setExportImageError,\n  setExportImageSetting\n} from '@kepler.gl/actions';\nimport {mapFieldsSelector} from './kepler-gl';\n\nconst CLASS_FILTER = [\n  'maplibregl-control-container',\n  'attrition-link',\n  'attrition-logo',\n  'map-control__panel-split-viewport-tools'\n];\nconst DOM_FILTER_FUNC = node => !CLASS_FILTER.includes(node.className);\nconst OUT_OF_SCREEN_POSITION = -9999;\n\nPlotContainerFactory.deps = [MapContainerFactory, MapsLayoutFactory];\n\n// Remove mapbox logo in exported map, because it contains non-ascii characters\n// Remove split viewport UI controls from exported images when the legend is shown\nconst StyledPlotContainer = styled.div`\n  .maplibregl-ctrl-bottom-left,\n  .maplibregl-ctrl-bottom-right,\n  .maplibre-attribution-container,\n  .map-control__panel-split-viewport-tools {\n    display: none;\n  }\n\n  position: absolute;\n  top: ${OUT_OF_SCREEN_POSITION}px;\n  left: ${OUT_OF_SCREEN_POSITION}px;\n`;\n\ninterface StyledMapContainerProps {\n  width?: number;\n  height?: number;\n}\n\nconst StyledMapContainer = styled.div<StyledMapContainerProps>`\n  width: ${props => props.width}px;\n  height: ${props => props.height}px;\n  display: flex;\n`;\n\ninterface PlotContainerProps {\n  width?: number;\n  height?: number;\n  exportImageSetting: ExportImage;\n  addNotification: Function;\n  mapFields: ReturnType<typeof mapFieldsSelector>;\n  setExportImageSetting: typeof setExportImageSetting;\n  setExportImageDataUri: typeof setExportImageDataUri;\n  setExportImageError: typeof setExportImageError;\n  splitMaps?: SplitMap[];\n  enableErrorNotification?: boolean;\n}\n\nexport default function PlotContainerFactory(\n  MapContainer: ReturnType<typeof MapContainerFactory>,\n  MapsLayout: ReturnType<typeof MapsLayoutFactory>\n): React.ComponentType<PlotContainerProps> {\n  class PlotContainer extends Component<PlotContainerProps> {\n    constructor(props) {\n      super(props);\n      this._onMapRender = debounce(this._onMapRender, 500);\n      this._retrieveNewScreenshot = debounce(this._retrieveNewScreenshot, 500);\n    }\n\n    componentDidMount() {\n      this.props.setExportImageSetting({processing: true});\n    }\n\n    componentDidUpdate(prevProps) {\n      // re-fetch the new screenshot only when ratio legend or resolution changes\n      const checks = ['ratio', 'resolution', 'legend'];\n      const shouldRetrieveScreenshot = checks.some(\n        item => this.props.exportImageSetting[item] !== prevProps.exportImageSetting[item]\n      );\n      if (shouldRetrieveScreenshot) {\n        this.props.setExportImageSetting({processing: true});\n        this._retrieveNewScreenshot();\n      }\n    }\n\n    plottingAreaRef = createRef<HTMLDivElement>();\n\n    mapStyleSelector = props => props.mapFields.mapStyle;\n    mapScaleSelector = props => {\n      const {imageSize} = props.exportImageSetting;\n      const {mapState} = props.mapFields;\n      if (imageSize.scale) {\n        return imageSize.scale;\n      }\n\n      const scale = getScaleFromImageSize(\n        imageSize.imageW,\n        imageSize.imageH,\n        mapState.width * (mapState.isSplit ? 2 : 1),\n        mapState.height\n      );\n\n      return scale > 0 ? scale : 1;\n    };\n\n    scaledMapStyleSelector = createSelector(\n      this.mapStyleSelector,\n      this.mapScaleSelector,\n      (mapStyle, scale) => ({\n        ...mapStyle,\n        bottomMapStyle: scaleMapStyleByResolution(mapStyle.bottomMapStyle, scale),\n        topMapStyle: scaleMapStyleByResolution(mapStyle.topMapStyle, scale)\n      })\n    );\n\n    _onMapRender = map => {\n      if (map.isStyleLoaded()) {\n        this._retrieveNewScreenshot();\n      }\n    };\n\n    _retrieveNewScreenshot = () => {\n      if (this.plottingAreaRef.current) {\n        const {imageSize, escapeXhtmlForWebpack} = this.props.exportImageSetting;\n        convertToPng(this.plottingAreaRef.current, {\n          filter: DOM_FILTER_FUNC,\n          width: imageSize.imageW,\n          height: imageSize.imageH,\n          escapeXhtmlForWebpack\n        })\n          .then(this.props.setExportImageDataUri)\n          .catch(err => {\n            this.props.setExportImageError(err);\n            if (this.props.enableErrorNotification) {\n              this.props.addNotification(exportImageError({err}));\n            }\n          });\n      }\n    };\n\n    render() {\n      const {exportImageSetting, mapFields, splitMaps = []} = this.props;\n      const {mapState, visState} = mapFields;\n      const {layers, layerData} = visState;\n      const {imageSize, legend} = exportImageSetting;\n\n      const isSplit = splitMaps && splitMaps.length > 1;\n\n      const size = {\n        width: imageSize?.imageW || 1,\n        height: imageSize?.imageH || 1\n      };\n      const width = size.width / (isSplit ? 2 : 1);\n      const height = size.height;\n      const scale = this.mapScaleSelector(this.props);\n      const newMapState = {\n        ...mapState,\n        width,\n        height,\n        zoom: mapState.zoom + (Math.log2(scale) || 0)\n      };\n\n      // center and all layer bounds\n      if (exportImageSetting.center) {\n        const renderedLayers = layers.filter(\n          (layer, idx) => layer.id !== GEOCODER_LAYER_ID && layer.shouldRenderLayer(layerData[idx])\n        );\n        const bounds = findMapBounds(renderedLayers);\n        const centerAndZoom = getCenterAndZoomFromBounds(bounds, {width, height});\n        if (centerAndZoom) {\n          const zoom = Number.isFinite(centerAndZoom.zoom) ? centerAndZoom.zoom : mapState.zoom;\n\n          newMapState.longitude = centerAndZoom.center[0];\n          newMapState.latitude = centerAndZoom.center[1];\n          newMapState.zoom = zoom + Number(Math.log2(scale) || 0);\n        }\n      }\n\n      const mapProps = {\n        ...mapFields,\n        mapStyle: this.scaledMapStyleSelector(this.props),\n\n        // override viewport based on export settings\n        mapState: newMapState,\n        mapControls: {\n          // override map legend visibility\n          mapLegend: {\n            show: legend,\n            active: true\n          }\n        },\n        MapComponent: Map,\n        onMapRender: this._onMapRender,\n        isExport: true,\n        deckGlProps: {\n          ...mapFields.deckGlProps,\n          glOptions: {\n            preserveDrawingBuffer: true,\n            useDevicePixels: false\n          }\n        }\n      };\n\n      const mapContainers = !isSplit ? (\n        <MapContainer index={0} primary={true} {...mapProps} />\n      ) : (\n        <MapsLayout className=\"plot-container-maps\" mapState={newMapState}>\n          {splitMaps.map((settings, index) => (\n            <MapContainer key={index} index={index} primary={index === 1} {...mapProps} />\n          ))}\n        </MapsLayout>\n      );\n      return (\n        <StyledPlotContainer className=\"export-map-instance\">\n          <StyledMapContainer ref={this.plottingAreaRef} width={size.width} height={size.height}>\n            <MapViewStateContextProvider mapState={newMapState}>\n              {mapContainers}\n            </MapViewStateContextProvider>\n          </StyledMapContainer>\n        </StyledPlotContainer>\n      );\n    }\n  }\n  return PlotContainer;\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {Component} from 'react';\nimport styled from 'styled-components';\n\nimport NotificationItemFactory from './notification-panel/notification-item';\nimport {DEFAULT_NOTIFICATION_TOPICS} from '@kepler.gl/constants';\nimport {Notifications} from '@kepler.gl/types';\nimport {removeNotification} from '@kepler.gl/actions';\n\nconst NotificationPanelContent = styled.div`\n  background: transparent;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  padding: 4px;\n  overflow-y: auto;\n  overflow-x: hidden;\n  position: absolute;\n  top: 1em;\n  right: 1em;\n  z-index: 10000;\n  box-sizing: border-box;\n`;\n\nNotificationPanelFactory.deps = [NotificationItemFactory];\n\ninterface NotificationPanelProps {\n  removeNotification?: typeof removeNotification;\n  notifications: Notifications[];\n}\n\nexport default function NotificationPanelFactory(\n  NotificationItem: ReturnType<typeof NotificationItemFactory>\n): React.ComponentClass<NotificationPanelProps> {\n  class NotificationPanelUnmemoized extends Component<NotificationPanelProps> {\n    static displayName = 'NotificationPanel';\n\n    render() {\n      const globalNotifications = this.props.notifications.filter(\n        n => n.topic === DEFAULT_NOTIFICATION_TOPICS.global\n      );\n      return (\n        <NotificationPanelContent\n          className=\"notification-panel\"\n          style={{display: globalNotifications.length ? 'block' : 'none'}}\n        >\n          {globalNotifications.map(n => (\n            <NotificationItem\n              key={n.id}\n              notification={n}\n              removeNotification={this.props.removeNotification}\n            />\n          ))}\n        </NotificationPanelContent>\n      );\n    }\n  }\n\n  const NotificationPanel = (React.memo(\n    NotificationPanelUnmemoized\n  ) as unknown) as typeof NotificationPanelUnmemoized;\n  return NotificationPanel;\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {Component, ComponentType} from 'react';\nimport styled from 'styled-components';\nimport classnames from 'classnames';\nimport {processRowObject} from '@kepler.gl/processors';\nimport {FlyToInterpolator} from '@deck.gl/core';\nimport {getCenterAndZoomFromBounds} from '@kepler.gl/utils';\n\nimport Geocoder, {Result} from './geocoder/geocoder';\nimport {\n  GEOCODER_DATASET_NAME,\n  GEOCODER_LAYER_ID,\n  GEOCODER_GEO_OFFSET,\n  GEOCODER_ICON_COLOR,\n  GEOCODER_ICON_SIZE\n} from '@kepler.gl/constants';\nimport {MapState, UiState, Viewport} from '@kepler.gl/types';\n\nconst ICON_LAYER = {\n  id: GEOCODER_LAYER_ID,\n  type: 'icon',\n  config: {\n    label: 'Geocoder Layer',\n    color: GEOCODER_ICON_COLOR,\n    dataId: GEOCODER_DATASET_NAME,\n    columns: {\n      lat: 'lt',\n      lng: 'ln',\n      icon: 'icon',\n      label: 'text'\n    },\n    isVisible: true,\n    hidden: true,\n    visConfig: {\n      radius: GEOCODER_ICON_SIZE\n    }\n  }\n};\n\nfunction generateConfig(layerOrder) {\n  return {\n    visState: {\n      layers: [ICON_LAYER],\n      layerOrder: [ICON_LAYER.id, ...layerOrder]\n    }\n  };\n}\n\ninterface StyledGeocoderPanelProps {\n  width?: number;\n  unsyncedViewports: any;\n  index: any;\n}\n\nconst StyledGeocoderPanel = styled.div<StyledGeocoderPanelProps>`\n  position: absolute;\n  top: ${props => props.theme.geocoderTop}px;\n  right: ${props =>\n    props.unsyncedViewports\n      ? // 2 geocoders: split mode and unsynced viewports\n        Number.isFinite(props.index) && props.index === 0\n        ? `calc(50% + ${props.theme.geocoderRight}px)` // unsynced left geocoder (index 0)\n        : `${props.theme.geocoderRight}px` // unsynced right geocoder (index 1)\n      : // 1 geocoder: single mode OR split mode and synced viewports\n        `${props.theme.geocoderRight}px`};\n  width: ${props => (Number.isFinite(props.width) ? props.width : props.theme.geocoderWidth)}px;\n  box-shadow: ${props => props.theme.boxShadow};\n  z-index: 100;\n`;\n\nfunction generateGeocoderDataset(lat, lon, text) {\n  return {\n    data: processRowObject([\n      {\n        lt: lat,\n        ln: lon,\n        icon: 'place',\n        text\n      }\n    ]),\n    id: GEOCODER_DATASET_NAME,\n    info: {\n      hidden: true,\n      id: GEOCODER_DATASET_NAME,\n      label: GEOCODER_DATASET_NAME\n    }\n  };\n}\n\nfunction isValid(key) {\n  return /pk\\..*\\..*/.test(key);\n}\n\nexport function getUpdateVisDataPayload(lat, lon, text) {\n  return [\n    [generateGeocoderDataset(lat, lon, text)],\n    {\n      keepExistingConfig: true\n    }\n  ];\n}\n\ninterface GeocoderPanelProps {\n  isGeocoderEnabled: boolean;\n  mapState: MapState;\n  uiState: UiState;\n  mapboxApiAccessToken: string;\n  updateVisData: Function;\n  removeDataset: Function;\n  updateMap: Function;\n  layerOrder: string[];\n\n  transitionDuration?: number;\n  width?: number;\n  appWidth: number;\n  className?: string;\n  index: number;\n  unsyncedViewports: boolean;\n}\n\nexport default function GeocoderPanelFactory(): ComponentType<GeocoderPanelProps> {\n  class GeocoderPanel extends Component<GeocoderPanelProps> {\n    defaultProps = {\n      transitionDuration: 3000\n    };\n\n    removeGeocoderDataset() {\n      this.props.removeDataset(GEOCODER_DATASET_NAME);\n    }\n\n    onSelected = (viewport: Viewport | null = null, geoItem: Result) => {\n      const {\n        center: [lon, lat],\n        text,\n        bbox\n      } = geoItem;\n      const {layerOrder} = this.props;\n\n      this.removeGeocoderDataset();\n      this.props.updateVisData(\n        ...getUpdateVisDataPayload(lat, lon, text),\n        generateConfig(layerOrder)\n      );\n      const bounds = bbox || [\n        lon - GEOCODER_GEO_OFFSET,\n        lat - GEOCODER_GEO_OFFSET,\n        lon + GEOCODER_GEO_OFFSET,\n        lat + GEOCODER_GEO_OFFSET\n      ];\n      const centerAndZoom = getCenterAndZoomFromBounds(bounds, {\n        width: this.props.mapState.width,\n        height: this.props.mapState.height\n      });\n\n      if (!centerAndZoom) {\n        // failed to fit bounds\n        return;\n      }\n\n      this.props.updateMap(\n        {\n          latitude: centerAndZoom.center[1],\n          longitude: centerAndZoom.center[0],\n          // For marginal or invalid bounds, zoom may be NaN. Make sure to provide a valid value in order\n          // to avoid corrupt state and potential crashes as zoom is expected to be a number\n          ...(Number.isFinite(centerAndZoom.zoom) ? {zoom: centerAndZoom.zoom} : {}),\n          pitch: 0,\n          bearing: 0,\n          transitionDuration: this.props.transitionDuration,\n          transitionInterpolator: new FlyToInterpolator()\n        },\n        this.props.index\n      );\n    };\n\n    removeMarker = () => {\n      this.removeGeocoderDataset();\n    };\n\n    render() {\n      const {\n        className,\n        isGeocoderEnabled,\n        mapboxApiAccessToken,\n        width,\n        index,\n        unsyncedViewports\n      } = this.props;\n      return (\n        <StyledGeocoderPanel\n          className={classnames('geocoder-panel', className)}\n          width={width}\n          index={index}\n          unsyncedViewports={unsyncedViewports}\n          style={{display: isGeocoderEnabled ? 'block' : 'none'}}\n        >\n          {isValid(mapboxApiAccessToken) && (\n            <Geocoder\n              mapboxApiAccessToken={mapboxApiAccessToken}\n              onSelected={this.onSelected}\n              onDeleteMarker={this.removeMarker}\n              width={width}\n            />\n          )}\n        </StyledGeocoderPanel>\n      );\n    }\n  }\n\n  return GeocoderPanel;\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useCallback, useMemo, useState} from 'react';\nimport styled from 'styled-components';\nimport classnames from 'classnames';\nimport geocoderService from '@mapbox/mapbox-sdk/services/geocoding';\nimport {injectIntl, IntlShape} from 'react-intl';\nimport {WebMercatorViewport} from 'viewport-mercator-project';\nimport {KeyEvent} from '@kepler.gl/constants';\nimport {Input} from '../common/styled-components';\nimport {Search, Delete} from '../common/icons';\nimport {Viewport} from '@kepler.gl/types';\n\ntype StyledContainerProps = {\n  width?: number;\n};\n\n// matches only valid coordinates\nconst COORDINATE_REGEX_STRING =\n  '^[-+]?([1-8]?\\\\d(\\\\.\\\\d+)?|90(\\\\.0+)?),\\\\s*[-+]?(180(\\\\.0+)?|((1[0-7]\\\\d)|([1-9]?\\\\d))(\\\\.\\\\d+)?)';\nconst COORDINATE_REGEX = RegExp(COORDINATE_REGEX_STRING);\n\nconst PLACEHOLDER = 'Enter an address or coordinates, ex 37.79,-122.40';\n\nlet debounceTimeout: NodeJS.Timeout | null = null;\n\nexport const testForCoordinates = (query: string): [true, number, number] | [false, string] => {\n  const isValid = COORDINATE_REGEX.test(query.trim());\n\n  if (!isValid) {\n    return [isValid, query];\n  }\n\n  const tokens = query.trim().split(',');\n\n  return [isValid, Number(tokens[0]), Number(tokens[1])];\n};\n\nconst StyledContainer = styled.div<StyledContainerProps>`\n  position: relative;\n  color: ${props => props.theme.textColor};\n\n  .geocoder-input {\n    box-shadow: ${props => props.theme.boxShadow};\n\n    .geocoder-input__search {\n      position: absolute;\n      height: ${props => props.theme.geocoderInputHeight}px;\n      width: 30px;\n      padding-left: 6px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      color: ${props => props.theme.subtextColor};\n    }\n\n    input {\n      padding: 4px 36px;\n      height: ${props => props.theme.geocoderInputHeight}px;\n      caret-color: unset;\n    }\n  }\n\n  .geocoder-results {\n    box-shadow: ${props => props.theme.boxShadow};\n    background-color: ${props => props.theme.panelBackground};\n    position: absolute;\n    width: ${props => (Number.isFinite(props.width) ? props.width : props.theme.geocoderWidth)}px;\n    margin-top: ${props => props.theme.dropdownWapperMargin}px;\n  }\n\n  .geocoder-item {\n    ${props => props.theme.dropdownListItem};\n    ${props => props.theme.textTruncate};\n\n    &.active {\n      background-color: ${props => props.theme.dropdownListHighlightBg};\n    }\n  }\n\n  .remove-result {\n    position: absolute;\n    right: 16px;\n    top: 0px;\n    height: ${props => props.theme.geocoderInputHeight}px;\n    display: flex;\n    align-items: center;\n\n    :hover {\n      cursor: pointer;\n      color: ${props => props.theme.textColorHl};\n    }\n  }\n`;\n\nexport interface Result {\n  center: [number, number];\n  place_name: string;\n  bbox?: [number, number, number, number];\n  text?: string;\n}\n\nexport type Results = ReadonlyArray<Result>;\n\ntype GeocoderProps = {\n  mapboxApiAccessToken: string;\n  className?: string;\n  limit?: number;\n  timeout?: number;\n  formatItem?: (item: Result) => string;\n  viewport?: Viewport;\n  onSelected: (viewport: Viewport | null, item: Result) => void;\n  onDeleteMarker?: () => void;\n  transitionDuration?: number;\n  pointZoom?: number;\n  width?: number;\n};\n\ntype IntlProps = {\n  intl: IntlShape;\n};\n\n/** @type {import('./geocoder').GeocoderComponent} */\nconst GeoCoder: React.FC<GeocoderProps & IntlProps> = ({\n  mapboxApiAccessToken,\n  className = '',\n  limit = 5,\n  timeout = 300,\n  formatItem = item => item.place_name,\n  viewport,\n  onSelected,\n  onDeleteMarker,\n  transitionDuration,\n  pointZoom,\n  width,\n  intl\n}) => {\n  const [inputValue, setInputValue] = useState('');\n  const [showResults, setShowResults] = useState(false);\n  const [showDelete, setShowDelete] = useState(false);\n  /** @type {import('./geocoder').Results} */\n  const initialResults: Result[] = [];\n  const [results, setResults] = useState(initialResults);\n  const [selectedIndex, setSelectedIndex] = useState(0);\n\n  const client = useMemo(() => geocoderService({accessToken: mapboxApiAccessToken}), [\n    mapboxApiAccessToken\n  ]);\n\n  const onChange = useCallback(\n    event => {\n      const queryString = event.target.value;\n      setInputValue(queryString);\n      const resultCoordinates = testForCoordinates(queryString);\n      if (resultCoordinates[0]) {\n        const [_, latitude, longitude] = resultCoordinates;\n        setResults([{center: [latitude, longitude], place_name: queryString}]);\n      } else {\n        if (debounceTimeout) {\n          clearTimeout(debounceTimeout);\n        }\n        debounceTimeout = setTimeout(async () => {\n          if (limit > 0 && Boolean(queryString)) {\n            try {\n              const response = await client\n                .forwardGeocode({\n                  query: queryString,\n                  limit\n                })\n                .send();\n              if (response.body.features) {\n                setShowResults(true);\n                setResults(response.body.features);\n              }\n            } catch (e) {\n              // TODO: show geocode error\n              // eslint-disable-next-line no-console\n              console.log(e);\n            }\n          }\n        }, timeout);\n      }\n    },\n    [client, limit, timeout, setResults, setShowResults]\n  );\n\n  const onBlur = useCallback(() => {\n    setTimeout(() => {\n      setShowResults(false);\n    }, timeout);\n  }, [setShowResults, timeout]);\n\n  const onFocus = useCallback(() => setShowResults(true), [setShowResults]);\n\n  const onItemSelected = useCallback(\n    item => {\n      const newViewport = new WebMercatorViewport(viewport);\n      const {bbox, center} = item;\n\n      const gotoViewport = bbox\n        ? newViewport.fitBounds([\n            [bbox[0], bbox[1]],\n            [bbox[2], bbox[3]]\n          ])\n        : {\n            longitude: center[0],\n            latitude: center[1],\n            zoom: pointZoom\n          };\n\n      const {longitude, latitude, zoom} = gotoViewport;\n\n      onSelected({...viewport, ...{longitude, latitude, zoom, transitionDuration}}, item);\n\n      setShowResults(false);\n      setInputValue(formatItem(item));\n      setShowDelete(true);\n    },\n    [viewport, onSelected, transitionDuration, pointZoom, formatItem]\n  );\n\n  const onMarkDeleted = useCallback(() => {\n    setShowDelete(false);\n    setInputValue('');\n    onDeleteMarker?.();\n  }, [onDeleteMarker]);\n\n  const onKeyDown = useCallback(\n    e => {\n      if (!results || results.length === 0) {\n        return;\n      }\n      switch (e.keyCode) {\n        case KeyEvent.DOM_VK_UP:\n          setSelectedIndex(selectedIndex > 0 ? selectedIndex - 1 : selectedIndex);\n          break;\n        case KeyEvent.DOM_VK_DOWN:\n          setSelectedIndex(selectedIndex < results.length - 1 ? selectedIndex + 1 : selectedIndex);\n          break;\n        case KeyEvent.DOM_VK_ENTER:\n        case KeyEvent.DOM_VK_RETURN:\n          if (results[selectedIndex]) {\n            onItemSelected(results[selectedIndex]);\n          }\n          break;\n        default:\n          break;\n      }\n    },\n    [results, selectedIndex, setSelectedIndex, onItemSelected]\n  );\n\n  return (\n    <StyledContainer className={className} width={width}>\n      <div className=\"geocoder-input\">\n        <div className=\"geocoder-input__search\">\n          <Search height=\"20px\" />\n        </div>\n        <Input\n          type=\"text\"\n          onChange={onChange}\n          onBlur={onBlur}\n          onFocus={onFocus}\n          onKeyDown={onKeyDown}\n          value={inputValue}\n          placeholder={\n            intl\n              ? intl.formatMessage({id: 'geocoder.title', defaultMessage: PLACEHOLDER})\n              : PLACEHOLDER\n          }\n        />\n        {showDelete ? (\n          <div className=\"remove-result\">\n            <Delete height=\"12px\" onClick={onMarkDeleted} />\n          </div>\n        ) : null}\n      </div>\n\n      {showResults ? (\n        <div className=\"geocoder-results\">\n          {results.map((item, index) => (\n            <div\n              key={index}\n              className={classnames('geocoder-item', {active: selectedIndex === index})}\n              onClick={() => onItemSelected(item)}\n            >\n              {formatItem(item)}\n            </div>\n          ))}\n        </div>\n      ) : null}\n    </StyledContainer>\n  );\n};\n\nexport default injectIntl(GeoCoder);\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useMemo, useState, useCallback} from 'react';\nimport styled from 'styled-components';\nimport {injectIntl, IntlShape} from 'react-intl';\n\nimport {addEffect, updateEffect, removeEffect, reorderEffect} from '@kepler.gl/actions';\nimport {LIGHT_AND_SHADOW_EFFECT, EFFECT_DESCRIPTIONS} from '@kepler.gl/constants';\nimport {VisStateActions} from '@kepler.gl/actions';\nimport {Effect} from '@kepler.gl/types';\n\nimport {withState} from '../injector';\nimport SidePanelTitleFactory from './side-panel-title';\nimport EffectListFactory from './effect-list';\nimport EffectTypeSelectorFactory from './effect-type-selector';\n\nexport type EffectManagerState = {\n  visStateActions: typeof VisStateActions;\n  effects: Effect[];\n  effectOrder: string[];\n  children: React.ReactNode;\n};\nexport type EffectManagerProps = {};\nexport type EffectManagerWithIntlProp = {intl: IntlShape};\n\nconst StyledEffectPanelContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  pointer-events: none !important; /* prevent padding from blocking input */\n  flex-grow: 1;\n  justify-content: space-between;\n  overflow: hidden;\n\n  & > * {\n    /* all children should allow input */\n    pointer-events: all;\n  }\n`;\n\n// top right position absolute\nconst StyledEffectPanel = styled.div`\n  top: 0;\n  background-color: ${props => props.theme.sidePanelBg};\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  overflow: hidden;\n`;\n\nconst StyledEffectPanelHeader = styled.div`\n  padding: ${({theme}) =>\n    `${theme.effectPanelPaddingTop}px ${theme.effectPanelPaddingSide}px 4px ${theme.effectPanelPaddingSide}px}`};\n  border-bottom: 1px solid ${props => props.theme.borderColor};\n  min-width: ${({theme}) => theme.effectPanelWidth}px;\n`;\n\ntype StyledEffectPanelContentProps = {\n  extended?: boolean;\n};\nconst StyledEffectPanelContent = styled.div<StyledEffectPanelContentProps>`\n  ${props => props.theme.sidePanelScrollBar};\n  padding: ${props => (props.extended ? '32px' : '10px 0px 10px 0px')};\n  overflow: overlay;\n  display: flex;\n  flex-direction: column;\n`;\n\nEffectManagerFactory.deps = [EffectListFactory, SidePanelTitleFactory, EffectTypeSelectorFactory];\n\nfunction EffectManagerFactory(\n  EffectList: ReturnType<typeof EffectListFactory>,\n  SidePanelTitle: ReturnType<typeof SidePanelTitleFactory>,\n  EffectTypeSelector: ReturnType<typeof EffectTypeSelectorFactory>\n): React.FC<EffectManagerProps> {\n  const EffectManager = (props: EffectManagerWithIntlProp & EffectManagerState) => {\n    const {intl, visStateActions, effects, effectOrder, children} = props;\n\n    const [typeSelectorOpened, setTypeSelectorOpened] = useState(false);\n\n    // Prevent shadow effect from being added multiple times\n    const effectOptions = useMemo(() => {\n      const hasShadow = effects.some(effect => {\n        return effect.type === LIGHT_AND_SHADOW_EFFECT.type;\n      });\n\n      return EFFECT_DESCRIPTIONS.map(desc => {\n        return {\n          ...desc,\n          disabled: Boolean(hasShadow && desc.type === LIGHT_AND_SHADOW_EFFECT.type)\n        };\n      });\n    }, [effects]);\n\n    const onAddEffect = useCallback(type => {\n      visStateActions.addEffect({type});\n    }, []);\n\n    const onTypeSelectOpen = useCallback(() => {\n      setTypeSelectorOpened(true);\n    }, []);\n\n    const onTypeSelectClose = useCallback(() => {\n      setTypeSelectorOpened(false);\n    }, []);\n\n    return (\n      <StyledEffectPanelContainer className=\"effect-manager\">\n        <StyledEffectPanel>\n          <StyledEffectPanelHeader>\n            <SidePanelTitle\n              className=\"effect-manager-title\"\n              title={intl.formatMessage({id: 'effectManager.effects'})}\n            >\n              <EffectTypeSelector\n                options={effectOptions}\n                onSelect={onAddEffect}\n                onOpen={onTypeSelectOpen}\n                onBlur={onTypeSelectClose}\n              />\n            </SidePanelTitle>\n          </StyledEffectPanelHeader>\n\n          <StyledEffectPanelContent extended={typeSelectorOpened && effects.length === 0}>\n            <EffectList\n              effects={effects}\n              effectOrder={effectOrder}\n              visStateActions={visStateActions}\n              isSortable={true}\n            />\n          </StyledEffectPanelContent>\n        </StyledEffectPanel>\n        {children}\n      </StyledEffectPanelContainer>\n    );\n  };\n\n  return withState(\n    [],\n    state => {\n      const visState = state.demo.keplerGl.map.visState;\n      return {\n        effects: visState.effects,\n        effectOrder: visState.effectOrder\n      };\n    },\n    {\n      visStateActions: {addEffect, updateEffect, removeEffect, reorderEffect}\n    }\n  )(injectIntl(EffectManager)) as React.FC<{}>;\n}\n\nexport default EffectManagerFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {PropsWithChildren} from 'react';\nimport styled from 'styled-components';\n\nexport type PanelTitleProps = PropsWithChildren<{\n  title: string;\n  className?: string;\n}>;\n\ntype StyledSidePanelTitleProps = {className: string};\nconst StyledSidePanelTitle = styled.div.attrs<StyledSidePanelTitleProps>({\n  className: 'panel-title'\n})`\n  color: ${props => props.theme.titleTextColor};\n  font-size: ${props => props.theme.sidePanelTitleFontsize};\n  line-height: ${props => props.theme.sidePanelTitleLineHeight};\n  font-weight: 400;\n  letter-spacing: 1.25px;\n`;\n\nconst PanelHeaderRow = styled.div.attrs({\n  className: 'side-panel-header-row'\n})`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 0px;\n  margin-bottom: 8px;\n`;\n\nconst SidePanelTitleFactory = (): React.FC<PanelTitleProps> => {\n  const SidePanelTitle = ({title, className, children}: PanelTitleProps) => (\n    <PanelHeaderRow>\n      <StyledSidePanelTitle className={className || 'side-panel-title'}>\n        {title}\n      </StyledSidePanelTitle>\n      {children}\n    </PanelHeaderRow>\n  );\n\n  return SidePanelTitle;\n};\n\nexport default SidePanelTitleFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useMemo} from 'react';\nimport styled from 'styled-components';\nimport classnames from 'classnames';\nimport {CSS} from '@dnd-kit/utilities';\nimport {useSortable, SortableContext, verticalListSortingStrategy} from '@dnd-kit/sortable';\n\nimport {dataTestIds, SORTABLE_EFFECT_TYPE, SORTABLE_EFFECT_PANEL_TYPE} from '@kepler.gl/constants';\nimport {findById} from '@kepler.gl/utils';\nimport {VisStateActions} from '@kepler.gl/actions';\nimport {Effect} from '@kepler.gl/types';\n\nimport EffectPanelFactory from './effect-panel';\n\nexport type EffectListProps = {\n  effects: Effect[];\n  effectOrder: string[];\n  visStateActions: typeof VisStateActions;\n  isSortable: boolean;\n};\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\ntype SortableStyledItemProps = {transition?: string; transform?: string};\nconst SortableStyledItem = styled.div<SortableStyledItemProps>`\n  z-index: ${props => props.theme.dropdownWrapperZ + 1};\n  transition: ${props => props.transition};\n  transform: ${props => props.transform};\n  outline: none;\n  &.sorting {\n    opacity: 0.3;\n    pointer-events: none;\n  }\n  &.sorting-effects .effect-panel__header {\n    background-color: ${props => props.theme.panelBackgroundHover};\n    font-family: ${props => props.theme.fontFamily};\n    font-weight: ${props => props.theme.fontWeight};\n    font-size: ${props => props.theme.fontSize};\n    line-height: ${props => props.theme.lineHeight};\n    *,\n    *:before,\n    *:after {\n      box-sizing: border-box;\n    }\n    .effect__drag-handle {\n      opacity: 1;\n      color: ${props => props.theme.textColorHl};\n    }\n  }\n`;\n\nEffectListFactory.deps = [EffectPanelFactory];\n\nfunction EffectListFactory(\n  EffectPanel: ReturnType<typeof EffectPanelFactory>\n): React.FC<EffectListProps> {\n  const SortableItem = ({effect, idx, panelProps, disabled}) => {\n    const {attributes, listeners, setNodeRef, isDragging, transform, transition} = useSortable({\n      id: effect.id,\n      data: {\n        type: SORTABLE_EFFECT_TYPE,\n        parent: SORTABLE_EFFECT_PANEL_TYPE\n      },\n      disabled\n    });\n\n    return (\n      <SortableStyledItem\n        ref={setNodeRef}\n        className={classnames(\n          {[dataTestIds.sortableEffectItem]: !disabled},\n          {[dataTestIds.staticEffectItem]: disabled},\n          {sorting: isDragging}\n        )}\n        data-testid={disabled ? dataTestIds.staticEffectItem : dataTestIds.sortableEffectItem}\n        transform={CSS.Transform.toString(transform)}\n        transition={transition || ''}\n        {...attributes}\n      >\n        <EffectPanel\n          {...panelProps}\n          key={effect.id}\n          idx={idx}\n          effect={effect}\n          listeners={listeners}\n          isDraggable={!disabled}\n        />\n      </SortableStyledItem>\n    );\n  };\n\n  const EffectList = (props: EffectListProps) => {\n    const {effects, effectOrder, visStateActions} = props;\n\n    const effectsToShow = useMemo(() => {\n      return effectOrder.reduce((acc, effectId) => {\n        const effect = findById(effectId)(effects.filter(Boolean));\n        if (!effect) {\n          return acc;\n        }\n        return [...acc, effect];\n      }, [] as Effect[]);\n    }, [effects, effectOrder]);\n\n    const sidePanelDndItems = useMemo(() => {\n      return effectsToShow.map(({id}) => id);\n    }, [effectsToShow]);\n\n    const panelProps = useMemo(\n      () => ({\n        effects,\n        effectOrder,\n        removeEffect: visStateActions.removeEffect,\n        updateEffect: visStateActions.updateEffect\n      }),\n      [effects, effectOrder, visStateActions]\n    );\n\n    return (\n      <Container>\n        <SortableContext\n          id={SORTABLE_EFFECT_PANEL_TYPE}\n          items={sidePanelDndItems}\n          strategy={verticalListSortingStrategy}\n          disabled={false}\n        >\n          {effectsToShow.map(effect => (\n            <SortableItem\n              key={effect.id}\n              effect={effect}\n              idx={effects.findIndex(l => l?.id === effect.id)}\n              panelProps={panelProps}\n              disabled={false}\n            />\n          ))}\n        </SortableContext>\n      </Container>\n    );\n  };\n  return EffectList;\n}\n\nexport default EffectListFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useCallback, useMemo} from 'react';\nimport styled from 'styled-components';\nimport {injectIntl, IntlShape} from 'react-intl';\n\nimport {LIGHT_AND_SHADOW_EFFECT} from '@kepler.gl/constants';\nimport {isNumber} from '@kepler.gl/utils';\nimport {Effect, EffectUpdateProps} from '@kepler.gl/types';\n\nimport RangeSliderFactory from '../common/range-slider';\nimport {ArrowDownSmall} from '../common/icons';\nimport EffectTimeConfiguratorFactory from './effect-time-configurator';\nimport CompactColorPicker from './compact-color-picker';\n\nexport type EffectConfiguratorProps = {\n  effect: Effect;\n  updateEffectConfig: (\n    e: Event | null | undefined,\n    id: string,\n    config: Partial<EffectUpdateProps>\n  ) => void;\n};\n\nconst StyledEffectConfigurator = styled.div.attrs({\n  className: 'effect-panel__config'\n})`\n  position: relative;\n  margin: ${props => props.theme.effectConfiguratorMargin};\n  padding: ${props => props.theme.effectConfiguratorPadding};\n`;\n\nexport const PanelLabelWrapper = styled.div.attrs({\n  className: 'side-panel-panel__label-wrapper'\n})`\n  display: flex;\n  align-items: self-start;\n  margin-bottom: 11px;\n\n  .side-panel-panel__label {\n    margin-top: 2px;\n    margin-bottom: 0px;\n  }\n`;\n\nexport const StyledColorSelectorWrapper = styled.div`\n  margin-right: 5px;\n  margin-left: 5px;\n  margin-bottom: 6px;\n  margin-top: 2px;\n`;\n\nconst StyledVerticalSeparator = styled.div`\n  height: 1px;\n  background-color: ${props => props.theme.inputBgd};\n  margin-top: 20px;\n  margin-bottom: 20px;\n  margin-left: -20px;\n`;\n\ntype StyledWrapperProps = {\n  marginBottom?: number;\n};\nconst StyledWrapper = styled.div<StyledWrapperProps>`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: ${props => props.marginBottom ?? 9}px;\n`;\n\nconst StyledConfigSection = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst SectionTitle = styled.div`\n  font-size: ${props => props.theme.inputFontSize};\n  color: ${props => props.theme.effectPanelTextSecondary1};\n  margin-bottom: 5px;\n  text-transform: capitalize;\n`;\n\nconst SectionSubTitle = styled.div`\n  font-size: ${props => props.theme.inputFontSize};\n  color: ${props => props.theme.effectPanelTextSecondary2};\n  margin-bottom: 8px;\n  margin-left: 6px;\n`;\n\nconst StyleSliderWrapper = styled.div`\n  align-self: flex-start;\n  width: 199px;\n  height: 32px;\n  display: flex;\n  align-items: center;\n  .kg-range-slider__input {\n    height: 32px;\n    text-align: center;\n    padding: 3px 6px;\n  }\n  .kg-slider {\n    padding-left: 6px;\n  }\n  .kg-range-slider {\n    padding: 0px !important;\n  }\n`;\n\nconst RegularOuterWrapper = styled.div.attrs({\n  className: 'effect-configurator__pp-section'\n})`\n  margin-bottom: 8px;\n`;\n\nconst RegularSectionTitleWrapper = styled.div.attrs({\n  className: 'effect-configurator__pp-section-title'\n})`\n  font-size: ${props => props.theme.inputFontSize};\n  color: ${props => props.theme.effectPanelTextSecondary1};\n  text-transform: capitalize;\n  margin-bottom: -3px;\n`;\n\nconst RegularSliderWrapper = styled.div.attrs({\n  className: 'effect-configurator__pp-section-control'\n})`\n  height: 32px;\n  .kg-range-slider__input {\n    height: 32px;\n    text-align: center;\n    padding: 3px 6px;\n  }\n  .kg-slider {\n    padding-left: 6px;\n  }\n  .kg-range-slider {\n    padding: 0px !important;\n  }\n`;\n\nconst COMMON_SLIDER_PROPS = {\n  showInput: true,\n  isRanged: false,\n  step: 0.001,\n  label: 'value'\n};\n\ntype EffectParameterDescriptionFlattened = {\n  name: string;\n  label?: string | false | (string | false)[];\n  min: number;\n  max: number;\n  index?: number;\n};\n\nEffectConfiguratorFactory.deps = [RangeSliderFactory, EffectTimeConfiguratorFactory];\n\nexport default function EffectConfiguratorFactory(\n  RangeSlider: ReturnType<typeof RangeSliderFactory>,\n  EffectTimeConfigurator: ReturnType<typeof EffectTimeConfiguratorFactory>\n): React.FC<EffectConfiguratorProps> {\n  const EffectConfigurator = ({\n    effect,\n    updateEffectConfig\n  }: EffectConfiguratorProps & {intl: IntlShape}) => {\n    const renderShadowEffectConfigurator = useCallback(() => {\n      const {parameters} = effect;\n\n      const sliderProps = useMemo(() => {\n        const propNames = ['shadowIntensity', 'ambientLightIntensity', 'sunLightIntensity'];\n        return propNames.map(propName => {\n          return {\n            value1: parameters[propName],\n            range: [0, 1],\n            value0: 0,\n            onChange: (value: number[], event?: Event | null) => {\n              updateEffectConfig(event, effect.id, {parameters: {[propName]: value[1]}});\n            }\n          };\n        });\n      }, [effect.id, parameters, updateEffectConfig]);\n\n      const onTimeParametersChanged = useCallback(\n        parameters => {\n          updateEffectConfig(null, effect.id, {\n            parameters: {\n              ...(parameters.timestamp ? {timestamp: parameters.timestamp} : null),\n              ...(parameters.timezone ? {timezone: parameters.timezone} : null),\n              ...(parameters.timeMode ? {timeMode: parameters.timeMode} : null)\n            }\n          });\n        },\n        [effect.id, updateEffectConfig]\n      );\n\n      const colorPickerProps = useMemo(() => {\n        const propNames = ['ambientLightColor', 'sunLightColor', 'shadowColor'];\n        return propNames.map(propName => {\n          return {\n            colorSets: [\n              {\n                selectedColor: parameters[propName],\n                setColor: v => updateEffectConfig(null, effect.id, {parameters: {[propName]: v}})\n              }\n            ]\n          };\n        });\n      }, [effect.id, parameters, updateEffectConfig]);\n\n      return (\n        <StyledEffectConfigurator key={effect.id}>\n          <PanelLabelWrapper>\n            <SectionTitle>{'Date & Time'}</SectionTitle>\n          </PanelLabelWrapper>\n          <EffectTimeConfigurator\n            timestamp={parameters.timestamp}\n            timezone={parameters.timezone}\n            timeMode={parameters.timeMode}\n            onChange={onTimeParametersChanged}\n          />\n\n          <StyledVerticalSeparator />\n\n          <StyledWrapper marginBottom={0}>\n            <SectionTitle>{'Shadow'}</SectionTitle>\n          </StyledWrapper>\n          <StyledWrapper marginBottom={16}>\n            <CompactColorPicker\n              label={'Color'}\n              color={colorPickerProps[2].colorSets[0].selectedColor}\n              onSetColor={colorPickerProps[2].colorSets[0].setColor}\n              Icon={ArrowDownSmall}\n            />\n            <StyledConfigSection>\n              <SectionSubTitle>Intensity</SectionSubTitle>\n              <StyleSliderWrapper>\n                <RangeSlider {...COMMON_SLIDER_PROPS} {...sliderProps[0]} />\n              </StyleSliderWrapper>\n            </StyledConfigSection>\n          </StyledWrapper>\n\n          <StyledWrapper marginBottom={0}>\n            <SectionTitle>{'Ambient light'}</SectionTitle>\n          </StyledWrapper>\n          <StyledWrapper marginBottom={16}>\n            <CompactColorPicker\n              label={'Color'}\n              color={colorPickerProps[0].colorSets[0].selectedColor}\n              onSetColor={colorPickerProps[0].colorSets[0].setColor}\n              Icon={ArrowDownSmall}\n            />\n            <StyledConfigSection>\n              <SectionSubTitle>Intensity</SectionSubTitle>\n              <StyleSliderWrapper>\n                <RangeSlider {...COMMON_SLIDER_PROPS} {...sliderProps[1]} />\n              </StyleSliderWrapper>\n            </StyledConfigSection>\n          </StyledWrapper>\n\n          <StyledWrapper marginBottom={0}>\n            <SectionTitle>{'Sun light'}</SectionTitle>\n          </StyledWrapper>\n          <StyledWrapper marginBottom={0}>\n            <CompactColorPicker\n              label={'Color'}\n              color={colorPickerProps[1].colorSets[0].selectedColor}\n              onSetColor={colorPickerProps[1].colorSets[0].setColor}\n              Icon={ArrowDownSmall}\n            />\n            <StyledConfigSection>\n              <SectionSubTitle>Intensity</SectionSubTitle>\n              <StyleSliderWrapper>\n                <RangeSlider {...COMMON_SLIDER_PROPS} {...sliderProps[2]} />\n              </StyleSliderWrapper>\n            </StyledConfigSection>\n          </StyledWrapper>\n        </StyledEffectConfigurator>\n      );\n    }, [effect, effect.parameters, updateEffectConfig]);\n\n    const renderPostProcessingEffectConfigurator = useCallback(() => {\n      const uniforms = effect.deckEffect?.module.uniforms || {};\n      const parameterDescriptions = effect.getParameterDescriptions();\n\n      const flatParameterDescriptions = useMemo(() => {\n        return parameterDescriptions.reduce((acc, description) => {\n          if (description.type === 'array') {\n            // split arrays of controls into a separate controls for each component\n            if (Array.isArray(description.defaultValue)) {\n              description.defaultValue.forEach((_, index) => {\n                acc.push({\n                  ...description,\n                  index,\n                  label: description.label?.[index]\n                });\n              });\n            }\n          } else {\n            acc.push(description);\n          }\n\n          return acc;\n        }, [] as EffectParameterDescriptionFlattened[]);\n      }, [parameterDescriptions]);\n\n      const controls = useMemo(() => {\n        return flatParameterDescriptions.map(desc => {\n          const paramName = desc.name;\n\n          const uniform = uniforms[desc.name];\n          if ((!uniform && uniform !== 0) || uniform.private) {\n            return null;\n          }\n\n          const prevValue = effect.parameters[paramName];\n\n          const label = desc.label === false ? false : desc.label || desc.name;\n\n          // the uniform is [number, number] array\n          if (uniform.length === 2) {\n            return {\n              label,\n              value1: prevValue[desc.index || 0] || 0,\n              range: [0, 1],\n              value0: 0,\n              onChange: (newValue: number[], event) => {\n                updateEffectConfig(event, effect.id, {\n                  parameters: {\n                    [paramName]:\n                      desc.index === 0 ? [newValue[1], prevValue[1]] : [prevValue[0], newValue[1]]\n                  }\n                });\n              }\n            };\n          }\n          // the uniform is a plain number without any description\n          else if (isNumber(uniform)) {\n            return {\n              label,\n              value1: prevValue ?? 0,\n              range: [desc.min ?? 0, desc.max ?? 500],\n              value0: desc.min ?? 0,\n              onChange: (newValue: number[], event) => {\n                updateEffectConfig(event, effect.id, {parameters: {[paramName]: newValue[1]}});\n              }\n            };\n          }\n          // the uniform description is {value: 0, min: 0, max: 1, ...}\n          else if (isNumber(uniform.value)) {\n            return {\n              label,\n              value1: prevValue || 0,\n              range: [\n                desc.min ?? uniform.min ?? uniform.softMin ?? 0,\n                desc.max ?? uniform.max ?? uniform.softMax ?? 1\n              ],\n              value0: desc.min ?? uniform.min ?? uniform.softMin ?? 0,\n              onChange: (newValue: number[], event) => {\n                updateEffectConfig(event, effect.id, {parameters: {[paramName]: newValue[1]}});\n              }\n            };\n          }\n\n          // ignore everything else for now\n          return null;\n        });\n      }, [flatParameterDescriptions, effect, effect.parameters, updateEffectConfig]);\n\n      return (\n        <StyledEffectConfigurator key={effect.id}>\n          {flatParameterDescriptions.map((desc, parameterIndex) => {\n            const control = controls[parameterIndex];\n            if (!control) {\n              return null;\n            }\n\n            return (\n              <RegularOuterWrapper key={`${effect.id}-${parameterIndex}`}>\n                {control.label ? (\n                  <RegularSectionTitleWrapper>{control.label}</RegularSectionTitleWrapper>\n                ) : null}\n                <RegularSliderWrapper>\n                  <RangeSlider key={parameterIndex} {...COMMON_SLIDER_PROPS} {...control} />\n                </RegularSliderWrapper>\n              </RegularOuterWrapper>\n            );\n          })}\n        </StyledEffectConfigurator>\n      );\n    }, [effect, effect.parameters, updateEffectConfig]);\n\n    if (effect.type === LIGHT_AND_SHADOW_EFFECT.type) return renderShadowEffectConfigurator();\n    return renderPostProcessingEffectConfigurator();\n  };\n\n  return injectIntl(EffectConfigurator);\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useCallback, useMemo} from 'react';\nimport {injectIntl, IntlShape} from 'react-intl';\nimport styled from 'styled-components';\nimport moment from 'moment-timezone';\nimport SunCalc from 'suncalc';\n\nimport {MapState} from '@kepler.gl/types';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {clamp} from '@kepler.gl/utils';\nimport {\n  LIGHT_AND_SHADOW_EFFECT_TIME_MODES,\n  LightAndShadowEffectTimeMode,\n  DEFAULT_TIMEZONE\n} from '@kepler.gl/constants';\nimport {mapStateLens} from '@kepler.gl/reducers';\n\nimport {withState} from '../injector';\nimport {StyledDatePicker as DatePicker, Tooltip} from '../common/styled-components';\nimport Checkbox from '../common/checkbox';\nimport Button from '../common/data-table/button';\nimport {LocationMarker, Calendar, Clock, Globe} from '../common/icons';\nimport TimezoneSelectorFactory from './timezone-selector';\nimport EffectTimeSliderFactory from './effect-time-slider';\nimport EffectTimeSelectorFactory from './effect-time-selector';\n\nconst DAY_MILISECONDS = 1000 * 60 * 60 * 24;\n\nexport type EffectTimeConfiguratorProps = {\n  timestamp: number;\n  timezone: string;\n  timeMode: LightAndShadowEffectTimeMode;\n  onChange: (parameters: {\n    timestamp?: number | null;\n    timezone?: string;\n    timeMode?: LightAndShadowEffectTimeMode;\n  }) => void;\n};\n\ntype StyledWrapperProps = {disabled?: boolean; marginBottom?: number};\nconst StyledWrapper = styled.div<StyledWrapperProps>`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: ${props => props.marginBottom ?? 9}px;\n  ${props => (props.hidden ? 'display: none;' : '')}\n`;\n\ntype SliderWrapperProps = {disabled?: boolean};\nconst SliderWrapper = styled.div<SliderWrapperProps>`\n  margin-top: 13px;\n  margin-bottom: 12px;\n  ${props => (props.hidden ? 'display: none;' : '')}\n`;\n\nconst StyledButton = styled(Button)`\n  color: ${props => props.theme.effectPanelTextSecondary2};\n  background-color: ${props => props.theme.inputBgd};\n  height: 32px;\n  width: 32px;\n  padding: 5px;\n  border-radius: 4px;\n  justify-content: center;\n  :hover {\n    color: ${props => props.theme.effectPanelTextMain};\n    background-color: ${props => props.theme.inputBgdHover};\n  }\n`;\n\nconst StyledRadio = styled(Checkbox)`\n  .kg-checkbox__label {\n    font-family: ${props => props.theme.fontFamily};\n    font-size: ${props => props.theme.inputFontSize};\n  }\n  .kg-checkbox__label:before {\n    background: transparent;\n    border-color: ${props => props.theme.effectPanelTextSecondary2};\n  }\n  input:checked + .kg-checkbox__label:before {\n    border-color: ${props => props.theme.activeColor};\n  }\n  .kg-checkbox__label:after {\n    background-color: ${props => props.theme.activeColor};\n  }\n`;\n\nconst StyledEffectTimeConfigurator = styled.div`\n  margin-bottom: 8px;\n  margin-top: 3px;\n`;\n\nconst StyledDatePicker = styled.div`\n  .react-date-picker--open .react-date-picker__wrapper .react-date-picker__inputGroup {\n    border: 1px solid ${props => props.theme.activeColor};\n    border-radius: 4px 4px 0px 0px !important;\n  }\n  .react-calendar__navigation__prev2-button,\n  .react-calendar__navigation__next2-button {\n    display: none;\n  }\n  .react-calendar__navigation__label {\n    position: absolute;\n    top: 20px;\n  }\n  .react-calendar__navigation__arrow {\n    position: absolute;\n    top: 18px;\n    font-size: 16px;\n  }\n  .react-calendar__navigation__prev-button {\n    right: 36px;\n  }\n  .react-calendar__navigation__next-button {\n    right: 12px;\n  }\n`;\n\ntype WithIconWrapperProps = {width?: string};\nconst WithIconWrapper = styled.div<WithIconWrapperProps>`\n  position: relative;\n  ${props => (props.width ? 'width: ' + props.width : '')}\n`;\n\nconst StyledExtraIcon = styled.div`\n  position: absolute;\n  top: 0px;\n  left: 8px;\n  width: 0px;\n  height: 32px;\n  color: ${props => props.theme.effectPanelTextSecondary2};\n  pointer-events: none;\n`;\n\ntype TextBlockProps = {\n  width?: string;\n};\nconst TextBlock = styled.div<TextBlockProps>`\n  color: ${props => props.theme.effectPanelTextSecondary2};\n  width: ${props => props.width};\n  font-size: ${props => props.theme.inputFontSize};\n`;\n\n/**\n * Converts date, time and timezone into a UTC timestamp.\n * @param dateStr Date string in YYYY-MM-DD format.\n * @param timeStr Time string in HH:MM format.\n * @param timezone Timezone name.\n * @returns Timestamp or null if case of bad inputs.\n */\nconst getTimestamp = (dateStr: string, timeStr: string, timezone: string): number | null => {\n  let timestamp: number | null = null;\n  const curr = moment.tz(`${dateStr}T${timeStr}:00`, timezone);\n  if (curr.isValid()) {\n    timestamp = curr.utc().valueOf();\n  }\n  return timestamp;\n};\n\n/**\n * Converts time of the day into [0, 1] range\n * @param date\n * @returns\n */\nconst getDayRatio = (date: moment.Moment) => {\n  return ((date.hours() * 60 + date.minutes()) * 60 * 1000) / DAY_MILISECONDS;\n};\n\nEffectTimeConfiguratorFactory.deps = [\n  TimezoneSelectorFactory,\n  EffectTimeSliderFactory,\n  EffectTimeSelectorFactory\n];\n\nexport default function EffectTimeConfiguratorFactory(\n  TimezoneSelector: ReturnType<typeof TimezoneSelectorFactory>,\n  EffectTimeSlider: ReturnType<typeof EffectTimeSliderFactory>,\n  EffectTimeSelector: ReturnType<typeof EffectTimeSelectorFactory>\n): React.FC<EffectTimeConfiguratorProps> {\n  const EffectTimeConfigurator = ({\n    timestamp,\n    timezone: _timezone,\n    timeMode,\n    onChange: onTimeParametersChanged,\n    mapState,\n    intl\n  }: EffectTimeConfiguratorProps & {intl: IntlShape; mapState: MapState}) => {\n    const timezone = useMemo(() => {\n      return moment.tz.names().includes(_timezone) ? _timezone : DEFAULT_TIMEZONE;\n    }, [_timezone]);\n\n    const [\n      datePickerDate,\n      fullDate,\n      formattedTime,\n      formattedDate,\n      dayTimeProgress\n    ] = useMemo(() => {\n      const currentMoment = moment.tz(timestamp, timezone);\n\n      // Slider value from 0 to 1\n      const dayProgress = getDayRatio(currentMoment);\n\n      // Date picker always renders Date in local timezone\n      const date = new Date();\n      date.setFullYear(currentMoment.year(), currentMoment.month(), currentMoment.date());\n      date.setHours(0, 0, 0, 0);\n\n      return [\n        date,\n        currentMoment.toDate(),\n        currentMoment.format('HH:mm'),\n        currentMoment.format('YYYY-MM-DD'),\n        dayProgress\n      ];\n    }, [timestamp, timezone]);\n\n    const timeSliderConfig = useMemo(() => {\n      const times = SunCalc.getTimes(fullDate, mapState.latitude, mapState.longitude);\n      const {dawn, sunrise, sunset, dusk} = times;\n\n      return {\n        dawn: getDayRatio(moment.tz(dawn.valueOf(), timezone)),\n        sunrise: getDayRatio(moment.tz(sunrise.valueOf(), timezone)),\n        sunset: getDayRatio(moment.tz(sunset.valueOf(), timezone)),\n        dusk: getDayRatio(moment.tz(dusk.valueOf(), timezone)),\n        sunriseTime: moment.tz(sunrise.valueOf(), timezone).format('hh:mm A'),\n        sunsetTime: moment.tz(sunset.valueOf(), timezone).format('hh:mm A')\n      };\n    }, [fullDate, timezone, mapState.latitude, mapState.longitude]);\n\n    const onTimeSliderChange = useCallback(\n      value => {\n        const hours = clamp([0, 23], Math.floor(value[1] * 24));\n        const minutes = clamp([0, 59], Math.floor((value[1] * 24 - hours) * 60));\n\n        const newFormattedTime = `${hours < 10 ? '0' + hours : hours}:${\n          minutes < 10 ? '0' + minutes : minutes\n        }`;\n        const newTimestamp = getTimestamp(formattedDate, newFormattedTime, timezone);\n        onTimeParametersChanged({timestamp: newTimestamp});\n      },\n      [formattedDate, timezone, onTimeParametersChanged]\n    );\n\n    const setDate = useCallback(\n      newDate => {\n        if (!newDate) return;\n\n        const newFormattedDate = moment(newDate).format('YYYY-MM-DD');\n        const newTimestamp = getTimestamp(newFormattedDate, formattedTime, timezone);\n        onTimeParametersChanged({timestamp: newTimestamp});\n      },\n      [formattedTime, timezone, onTimeParametersChanged]\n    );\n\n    const setTime = useCallback(\n      newTime => {\n        if (!newTime) return;\n\n        const newTimestamp = getTimestamp(formattedDate, newTime, timezone);\n        onTimeParametersChanged({timestamp: newTimestamp});\n      },\n      [formattedDate, timezone, onTimeParametersChanged]\n    );\n\n    const setTimezone = useCallback(\n      newTimezone => {\n        if (!newTimezone) return;\n\n        const newTimestamp = getTimestamp(formattedDate, formattedTime, newTimezone);\n        // date and time are adjusted to have the same value but in the new timezone\n        onTimeParametersChanged({timestamp: newTimestamp, timezone: newTimezone});\n      },\n      [formattedDate, formattedTime, onTimeParametersChanged]\n    );\n\n    const setCurrentDateTime = useCallback(() => {\n      onTimeParametersChanged({timestamp: new Date().valueOf()});\n    }, [onTimeParametersChanged]);\n\n    const formatShortWeekday = useCallback((locale, date) => {\n      return ['S', 'M', 'T', 'W', 'T', 'F', 'S'][date.getDay()];\n    }, []);\n\n    const disableDateTimePick = timeMode !== LIGHT_AND_SHADOW_EFFECT_TIME_MODES.pick;\n\n    return (\n      <StyledEffectTimeConfigurator>\n        <StyledWrapper marginBottom={16}>\n          <StyledRadio\n            type=\"radio\"\n            checked={timeMode === LIGHT_AND_SHADOW_EFFECT_TIME_MODES.pick}\n            id={`effect-time-toggle-use-pick-time`}\n            label={intl.formatMessage({\n              id: 'effectManager.pickDateTime'\n            })}\n            onChange={() => {\n              onTimeParametersChanged({timeMode: LIGHT_AND_SHADOW_EFFECT_TIME_MODES.pick});\n            }}\n          />\n        </StyledWrapper>\n\n        <SliderWrapper hidden={disableDateTimePick}>\n          <EffectTimeSlider\n            value={dayTimeProgress}\n            onChange={onTimeSliderChange}\n            config={timeSliderConfig}\n          />\n        </SliderWrapper>\n\n        <StyledWrapper hidden={disableDateTimePick} marginBottom={2}>\n          <TextBlock width=\"32px\"></TextBlock>\n          <TextBlock width=\"110px\">\n            <FormattedMessage id={'effectManager.date'} />\n          </TextBlock>\n          <TextBlock width=\"110px\">\n            <FormattedMessage id={'effectManager.time'} />\n          </TextBlock>\n        </StyledWrapper>\n\n        <StyledWrapper hidden={disableDateTimePick} marginBottom={16}>\n          <StyledButton onClick={setCurrentDateTime} data-for=\"pick-time-button\" data-tip>\n            <LocationMarker height=\"16px\" />\n            <Tooltip id=\"pick-time-button\" effect=\"solid\" place=\"top\" delayShow={500}>\n              <FormattedMessage id={'effectManager.pickCurrrentTime'} />\n            </Tooltip>\n          </StyledButton>\n          <WithIconWrapper>\n            <StyledDatePicker>\n              <DatePicker\n                value={datePickerDate}\n                onChange={setDate}\n                minDetail={'month'}\n                formatShortWeekday={formatShortWeekday}\n              />\n            </StyledDatePicker>\n            <StyledExtraIcon>\n              <Calendar width=\"16px\" height=\"32px\" />\n            </StyledExtraIcon>\n          </WithIconWrapper>\n          <WithIconWrapper>\n            <EffectTimeSelector value={formattedTime} onChange={setTime} />\n            <StyledExtraIcon>\n              <Clock width=\"16px\" height=\"32px\" />\n            </StyledExtraIcon>\n          </WithIconWrapper>\n        </StyledWrapper>\n\n        <StyledWrapper hidden={disableDateTimePick} marginBottom={2}>\n          <TextBlock>\n            <FormattedMessage id={'effectManager.timezone'} />\n          </TextBlock>\n        </StyledWrapper>\n\n        <StyledWrapper hidden={disableDateTimePick} marginBottom={24}>\n          <WithIconWrapper width={'100%'}>\n            <TimezoneSelector selected={timezone} onSelect={setTimezone} />\n            <StyledExtraIcon>\n              <Globe width=\"16px\" height=\"32px\" />\n            </StyledExtraIcon>\n          </WithIconWrapper>\n        </StyledWrapper>\n\n        <StyledWrapper marginBottom={16}>\n          <StyledRadio\n            type=\"radio\"\n            checked={timeMode === LIGHT_AND_SHADOW_EFFECT_TIME_MODES.current}\n            id={`effect-time-toggle-use-current-time`}\n            label={intl.formatMessage({\n              id: 'effectManager.currentTime'\n            })}\n            onChange={() => {\n              onTimeParametersChanged({timeMode: LIGHT_AND_SHADOW_EFFECT_TIME_MODES.current});\n            }}\n          />\n        </StyledWrapper>\n\n        <StyledWrapper marginBottom={16}>\n          <StyledRadio\n            type=\"radio\"\n            checked={timeMode === LIGHT_AND_SHADOW_EFFECT_TIME_MODES.animation}\n            id={`effect-time-toggle-use-animation-time`}\n            label={'Animation time'}\n            onChange={() => {\n              onTimeParametersChanged({timeMode: LIGHT_AND_SHADOW_EFFECT_TIME_MODES.animation});\n            }}\n          />\n        </StyledWrapper>\n      </StyledEffectTimeConfigurator>\n    );\n  };\n\n  // @ts-expect-error how to properly type?\n  return withState([mapStateLens])(injectIntl(EffectTimeConfigurator));\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useMemo} from 'react';\nimport styled, {withTheme} from 'styled-components';\n\nimport ItemSelector from '../common/item-selector/item-selector';\nimport EffectTypeDropdownListFactory from './effect-type-dropdown-list';\nimport EffectTypeListItemFactory, {DUMMY_ITEM_ID} from './effect-type-list-item';\n\nexport type EffectTypeSelectorProps = {\n  options: {type: string; name: string; disabled: boolean}[];\n  onSelect: (type: any) => void;\n  theme: any;\n  onBlur?: () => void;\n  onOpen?: () => void;\n};\n\nconst DropdownWrapper = styled.div`\n  border: 0;\n  width: 100%;\n  left: 0;\n  z-index: ${props => props.theme.dropdownWrapperZ};\n  width: 297px;\n  margin-left: -194px;\n  margin-top: 26px;\n\n  .typeahead__input {\n    border-color: ${props => props.theme.activeColor};\n    border-radius: 4px 4px 0px 0px !important;\n  }\n  .typeahead__input_box {\n    padding: 0px;\n  }\n  .typeahead__input_icon {\n    top: 34px;\n    right: 9px;\n  }\n`;\n\nconst StyledEffectTypeSelector = styled.div`\n  .item-selector .item-selector__dropdown {\n    padding: 4px 10px 4px 10px;\n    background-color: ${props => props.theme.secondaryBtnBgd};\n    border-radius: ${props => props.theme.primaryBtnRadius};\n    font-size: ${props => props.theme.primaryBtnFontSizeDefault};\n    border: none;\n    :hover {\n      background-color: ${props => props.theme.secondaryBtnBgdHover};\n    }\n    .item-selector__dropdown__value {\n      color: ${props => props.theme.secondaryBtnActColor};\n    }\n  }\n`;\n\nconst getDisplayOption = op => op.name;\nconst getOptionValue = op => op.type;\n\nEffectTypeSelectorFactory.deps = [EffectTypeListItemFactory, EffectTypeDropdownListFactory];\n\nfunction EffectTypeSelectorFactory(EffectTypeListItem, EffectTypeDropdownList) {\n  const EffectTypeSelector: React.FC<EffectTypeSelectorProps> = ({\n    options,\n    onSelect,\n    onBlur,\n    onOpen\n  }: EffectTypeSelectorProps) => {\n    // Make sure effect type selector has dummy as selection\n    const selectedItems = useMemo(() => {\n      return [\n        {\n          type: DUMMY_ITEM_ID,\n          name: DUMMY_ITEM_ID\n        }\n      ];\n    }, []);\n\n    return (\n      <StyledEffectTypeSelector className=\"effect-config__type\">\n        <ItemSelector\n          selectedItems={selectedItems}\n          options={options}\n          multiSelect={false}\n          disabled={false}\n          placeholder=\"effectManager.addEffect\"\n          onChange={onSelect}\n          onBlur={onBlur}\n          onOpen={onOpen}\n          getOptionValue={getOptionValue}\n          filterOption=\"name\"\n          displayOption={getDisplayOption}\n          DropDownLineItemRenderComponent={EffectTypeListItem}\n          DropDownRenderComponent={EffectTypeDropdownList}\n          DropDownWrapperComponent={DropdownWrapper}\n        />\n      </StyledEffectTypeSelector>\n    );\n  };\n\n  return withTheme(EffectTypeSelector);\n}\n\nexport default EffectTypeSelectorFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useCallback, useMemo, PropsWithChildren} from 'react';\nimport styled from 'styled-components';\nimport {DndContext as DndKitContext, DragOverlay} from '@dnd-kit/core';\nimport Console from 'global/console';\n\nimport {\n  DND_EMPTY_MODIFIERS,\n  DND_MODIFIERS,\n  SORTABLE_LAYER_TYPE,\n  SORTABLE_EFFECT_TYPE\n} from '@kepler.gl/constants';\nimport {visStateLens} from '@kepler.gl/reducers';\nimport {VisState} from '@kepler.gl/schemas';\n\nimport LayerPanelHeaderFactory from './side-panel/layer-panel/layer-panel-header';\nimport {withState} from './injector';\nimport useDndLayers from './hooks/use-dnd-layers';\nimport useDndEffects from './hooks/use-dnd-effects';\n\nexport type DndContextProps = PropsWithChildren<{\n  visState: VisState;\n}>;\n\nexport type DndContextComponent = React.FC<DndContextProps>;\n\nexport const DragItem = styled.div`\n  color: ${props => props.theme.textColorHl};\n  border-radius: ${props => props.theme.radioButtonRadius}px;\n  padding: 5px 10px;\n  display: inline;\n`;\n\nconst nop = () => undefined;\n\nDndContextFactory.deps = [LayerPanelHeaderFactory];\n\nfunction DndContextFactory(\n  LayerPanelHeader: ReturnType<typeof LayerPanelHeaderFactory>\n): React.FC<PropsWithChildren> {\n  const LayerPanelOverlay = ({layer, datasets}) => {\n    const color =\n      layer.config.dataId && datasets[layer.config.dataId]\n        ? datasets[layer.config.dataId].color\n        : null;\n    return (\n      <LayerPanelHeader\n        isConfigActive={false}\n        layerId={layer.id}\n        isVisible={true}\n        isValid={true}\n        label={layer.config.label}\n        labelRCGColorValues={color}\n        onToggleVisibility={nop}\n        onResetIsValid={nop}\n        onUpdateLayerLabel={nop}\n        onToggleEnableConfig={nop}\n        onDuplicateLayer={nop}\n        onRemoveLayer={nop}\n        onZoomToLayer={nop}\n        layerType={layer.type}\n        allowDuplicate={false}\n        isDragNDropEnabled={false}\n      />\n    );\n  };\n\n  const DndContext = ({children, visState}: DndContextProps) => {\n    const {datasets, layerOrder, layers, effects, effectOrder, splitMaps} = visState;\n\n    const {activeLayer, onDragStart: onLayerDragStart, onDragEnd: onLayerDragEnd} = useDndLayers(\n      layers,\n      layerOrder\n    );\n    const {onDragStart: onEffectDragStart, onDragEnd: onEffectDragEnd} = useDndEffects(\n      effects,\n      effectOrder\n    );\n\n    const isSplit = useMemo(() => splitMaps?.length > 1, [splitMaps]);\n    const dndModifiers = useMemo(() => (isSplit ? DND_EMPTY_MODIFIERS : DND_MODIFIERS), [isSplit]);\n\n    const onDragStart = useCallback(\n      event => {\n        const activeType = event.active.data?.current?.type;\n        switch (activeType) {\n          case SORTABLE_LAYER_TYPE:\n            onLayerDragStart(event);\n            break;\n          case SORTABLE_EFFECT_TYPE:\n            onEffectDragStart(event);\n            break;\n          default:\n            Console.log(`activeType ${activeType} unknown`);\n        }\n      },\n      [onLayerDragStart, onEffectDragStart]\n    );\n\n    const onDragEnd = useCallback(\n      event => {\n        const activeType = event.active.data?.current?.type;\n        switch (activeType) {\n          case SORTABLE_LAYER_TYPE:\n            onLayerDragEnd(event);\n            break;\n          case SORTABLE_EFFECT_TYPE:\n            onEffectDragEnd(event);\n            break;\n          default:\n            Console.log(`activeType ${activeType} unknown`);\n        }\n      },\n      [onLayerDragEnd, onEffectDragEnd]\n    );\n\n    return (\n      <DndKitContext onDragStart={onDragStart} onDragEnd={onDragEnd} modifiers={dndModifiers}>\n        {children}\n        {activeLayer ? (\n          <DragOverlay modifiers={dndModifiers} dropAnimation={null}>\n            <DragItem>\n              <LayerPanelOverlay layer={activeLayer} datasets={datasets} />\n            </DragItem>\n          </DragOverlay>\n        ) : null}\n      </DndKitContext>\n    );\n  };\n\n  return withState([visStateLens], state => state)(DndContext) as React.FC<PropsWithChildren>;\n}\n\nexport default DndContextFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {useCallback, useState} from 'react';\nimport {useDispatch} from 'react-redux';\nimport {DragEndEvent, DragStartEvent} from '@dnd-kit/core';\nimport {layerConfigChange, reorderLayer, toggleLayerForMap} from '@kepler.gl/actions';\nimport {\n  DROPPABLE_MAP_CONTAINER_TYPE,\n  SORTABLE_LAYER_TYPE,\n  SORTABLE_SIDE_PANEL_TYPE\n} from '@kepler.gl/constants';\nimport {reorderLayerOrder} from '@kepler.gl/reducers';\nimport {Layer} from '@kepler.gl/layers';\n\ntype DndEffectsHook = {\n  activeLayer: Layer | undefined;\n  onDragStart: (event: DragStartEvent) => void;\n  onDragEnd: (event: DragEndEvent) => void;\n};\n\nconst useDndLayers: (layers: Layer[], layerOrder: string[]) => DndEffectsHook = (layers, layerOrder) => {\n  const dispatch = useDispatch();\n\n  const [activeLayer, setActiveLayer]: [activeEffect: Layer | undefined, setActiveEffect: (effect: Layer | undefined) => void] = useState();\n\n  const onDragStart = useCallback(\n    event => {\n      const {active} = event;\n      const newActiveLayer = layers.find(layer => layer.id === active.id);\n      if (newActiveLayer) {\n        setActiveLayer(newActiveLayer);\n        if (newActiveLayer?.config.isConfigActive) {\n          dispatch(layerConfigChange(newActiveLayer, {isConfigActive: false}));\n        }\n      }\n    },\n    [dispatch, layers]\n  );\n\n  const onDragEnd = useCallback(\n    event => {\n      const {active, over} = event;\n\n      const {id: activeLayerId} = active;\n      const overType = over?.data?.current?.type;\n\n      if (!overType) {\n        setActiveLayer(undefined);\n        return;\n      }\n\n      switch (overType) {\n        // moving layers into maps\n        case DROPPABLE_MAP_CONTAINER_TYPE:\n          const mapIndex = over.data.current?.index ?? 0;\n          dispatch(toggleLayerForMap(mapIndex, activeLayerId));\n          break;\n        // swaping layers\n        case SORTABLE_LAYER_TYPE:\n          const newLayerOrder = reorderLayerOrder(layerOrder, activeLayerId, over.id);\n          dispatch(reorderLayer(newLayerOrder));\n          break;\n        //  moving layers within side panel\n        case SORTABLE_SIDE_PANEL_TYPE:\n          // move layer to the end of the list\n          dispatch(\n            reorderLayer(\n              reorderLayerOrder(layerOrder, activeLayerId, layerOrder[layerOrder.length - 1])\n            )\n          );\n          break;\n        default:\n          break;\n      }\n\n      setActiveLayer(undefined);\n    },\n    [dispatch, layerOrder]\n  );\n\n  return {activeLayer, onDragStart, onDragEnd};\n};\n\nexport default useDndLayers;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {useCallback, useState} from 'react';\nimport {useDispatch} from 'react-redux';\nimport {DragEndEvent, DragStartEvent} from '@dnd-kit/core';\n\nimport {reorderEffect, updateEffect} from '@kepler.gl/actions';\nimport {SORTABLE_EFFECT_PANEL_TYPE, SORTABLE_EFFECT_TYPE} from '@kepler.gl/constants';\nimport {reorderEffectOrder} from '@kepler.gl/utils';\nimport {Effect} from '@kepler.gl/types';\n\ntype DndEffectsHook = {\n  activeEffect: Effect | undefined;\n  onDragStart: (event: DragStartEvent) => void;\n  onDragEnd: (event: DragEndEvent) => void;\n};\n\nconst useDndEffects: (effects: Effect[], effectOrder: string[]) => DndEffectsHook = (\n  effects,\n  effectOrder\n) => {\n  const dispatch = useDispatch();\n  const [activeEffect, setActiveEffect]: [activeEffect: Effect | undefined, setActiveEffect: (effect: Effect | undefined) => void] = useState();\n  const onEffectDragStart = useCallback(\n    event => {\n      const {active} = event;\n      const newActiveEffect = effects.find(effect => effect.id === active.id);\n      if (newActiveEffect) {\n        setActiveEffect(newActiveEffect);\n        if (newActiveEffect.isConfigActive) {\n          dispatch(updateEffect(newActiveEffect.id, {isConfigActive: false}));\n        }\n      }\n    },\n    [dispatch, effects]\n  );\n\n  const onEffectDragEnd = useCallback(\n    event => {\n      const {active, over} = event;\n\n      const {id: activeEffectId} = active;\n      const overType = over?.data?.current?.type;\n\n      if (!overType) {\n        setActiveEffect(undefined);\n        return;\n      }\n\n      switch (overType) {\n        // swaping effects\n        case SORTABLE_EFFECT_TYPE:\n          dispatch(reorderEffect(reorderEffectOrder(effectOrder, activeEffectId, over.id)));\n          break;\n        //  moving effects within side panel\n        case SORTABLE_EFFECT_PANEL_TYPE:\n          // move effect to the end of the list\n          dispatch(\n            reorderEffect(\n              reorderEffectOrder(effectOrder, activeEffectId, effectOrder[effectOrder.length - 1])\n            )\n          );\n          break;\n        default:\n          break;\n      }\n\n      setActiveEffect(undefined);\n    },\n    [dispatch, effectOrder]\n  );\n\n  return {activeEffect, onDragStart: onEffectDragStart, onDragEnd: onEffectDragEnd};\n};\n\nexport default useDndEffects;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {Component} from 'react';\nimport {FormattedMessage, injectIntl, WrappedComponentProps} from 'react-intl';\n\nimport {Field} from '@kepler.gl/types';\n\nimport {PanelLabel, PanelLabelWrapper, SidePanelSection} from '../../common/styled-components';\nimport InfoHelperFactory from '../../common/info-helper';\nimport DimensionScaleSelector from './dimension-scale-selector';\nimport {camelize} from '@kepler.gl/utils';\nimport FieldSelectorFactory from '../../common/field-selector';\n\ntype VisConfigByFieldSelectorProps = {\n  channel: string;\n  fields: Field[];\n  id: string;\n  property: string;\n  showScale: boolean;\n  updateField: (\n    val: readonly (string | number | boolean | object)[] | string | number | boolean | object | null\n  ) => void;\n  updateScale: (\n    val: readonly (string | number | boolean | object)[] | string | number | boolean | object | null\n  ) => void;\n  scaleType?: string;\n  selectedField?: Field;\n  description?: string;\n  label?: string;\n  placeholder?: string;\n  scaleOptions: string[];\n} & WrappedComponentProps;\n\nVisConfigByFieldSelectorFactory.deps = [InfoHelperFactory, FieldSelectorFactory];\n\nfunction VisConfigByFieldSelectorFactory(\n  InfoHelper: ReturnType<typeof InfoHelperFactory>,\n  FieldSelector: ReturnType<typeof FieldSelectorFactory>\n) {\n  class VisConfigByFieldSelector extends Component<VisConfigByFieldSelectorProps> {\n    _updateVisByField = (\n      val:\n        | readonly (string | number | boolean | object)[]\n        | string\n        | number\n        | boolean\n        | object\n        | null\n    ) => {\n      this.props.updateField(val);\n    };\n\n    render() {\n      const {\n        property,\n        showScale,\n        selectedField,\n        description,\n        label,\n        intl,\n        scaleOptions = []\n      } = this.props;\n\n      return (\n        <SidePanelSection>\n          <SidePanelSection>\n            <PanelLabelWrapper>\n              <PanelLabel>\n                {(label && <FormattedMessage id={label} />) || (\n                  <FormattedMessage\n                    id=\"layer.propertyBasedOn\"\n                    values={{\n                      property: intl.formatMessage({\n                        id: `property.${camelize(property)}`,\n                        defaultMessage: property\n                      })\n                    }}\n                  />\n                )}\n              </PanelLabel>\n              {description && (\n                <InfoHelper\n                  description={description}\n                  property={property}\n                  id={`${this.props.id}-${property}`}\n                />\n              )}\n            </PanelLabelWrapper>\n            <FieldSelector\n              fields={this.props.fields}\n              value={selectedField && selectedField.name}\n              placeholder={this.props.placeholder}\n              onSelect={this._updateVisByField}\n              erasable\n            />\n          </SidePanelSection>\n          <div>\n            {showScale ? (\n              <DimensionScaleSelector\n                scaleType={this.props.scaleType}\n                options={scaleOptions}\n                label={`${property} scale`}\n                onSelect={this.props.updateScale}\n                disabled={scaleOptions.length < 2}\n              />\n            ) : null}\n          </div>\n        </SidePanelSection>\n      );\n    }\n  }\n  return injectIntl(VisConfigByFieldSelector);\n}\n\nexport default VisConfigByFieldSelectorFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport {FormattedMessage} from '@kepler.gl/localization';\n\nconst LayerErrorMessageContent = styled.div.attrs({\n  className: 'layer-error-message-content'\n})`\n  background-color: ${props => props.theme.notificationColors.error || '#000'};\n  color: #fff;\n  display: block;\n  width: 100%;\n  font-size: 11px;\n  padding: 1em;\n  border-radius: 4px;\n`;\n\ntype LayerErrorMessageProps = {\n  errorMessage: string;\n};\n\nconst LayerErrorMessage: React.FC<LayerErrorMessageProps> = ({errorMessage}) => {\n  return (\n    <LayerErrorMessageContent>\n      <FormattedMessage id={'layer.layerUpdateError'} values={{errorMessage}} />\n    </LayerErrorMessageContent>\n  );\n};\n\nexport default LayerErrorMessage;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {Component} from 'react';\nimport {StyledPanelDropdown} from '../common/styled-components';\nimport listensToClickOutside from 'react-onclickoutside';\n\ntype ClickOutsideCloseDropdownProps = {\n  show: boolean;\n  type: string;\n  className: string;\n  onClose: (e: Event) => void;\n  children?: React.ReactNode;\n};\n\nclass ClickOutsideCloseDropdown extends Component<ClickOutsideCloseDropdownProps> {\n  static defaultProps = {\n    show: true,\n    type: 'dark'\n  };\n\n  handleClickOutside = (e: Event) => {\n    if (typeof this.props.onClose === 'function' && this.props.show) {\n      this.props.onClose(e);\n    }\n  };\n\n  render() {\n    return (\n      <StyledPanelDropdown type={this.props.type} className={this.props.className}>\n        {this.props.children}\n      </StyledPanelDropdown>\n    );\n  }\n}\n\nexport default listensToClickOutside(ClickOutsideCloseDropdown);\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useCallback, useMemo} from 'react';\nimport styled from 'styled-components';\nimport TimeRangeFilterFactory from '../time-range-filter';\nimport {Clock} from '../../common/icons';\nimport FieldPanelWithFieldSelectFactory from './filter-panel-with-field-select';\nimport {TimeRangeFilterPanelComponent} from './types';\nimport {isSideFilter, getTimelineFromFilter} from '@kepler.gl/utils';\n\nTimeRangeFilterPanelFactory.deps = [FieldPanelWithFieldSelectFactory, TimeRangeFilterFactory];\n\nfunction TimeRangeFilterPanelFactory(\n  FieldPanelWithFieldSelect: ReturnType<typeof FieldPanelWithFieldSelectFactory>,\n  TimeRangeFilter: ReturnType<typeof TimeRangeFilterFactory>\n) {\n  const StyledFieldPanelWithFieldSelect = styled(FieldPanelWithFieldSelect)`\n    .field-selector {\n      width: 90%;\n    }\n  `;\n\n  const TimeRangeFilterPanel: TimeRangeFilterPanelComponent = React.memo(\n    ({\n      idx,\n      datasets,\n      allAvailableFields,\n      filter,\n      enlargeFilter,\n      setFilter,\n      removeFilter,\n      toggleAnimation\n    }) => {\n      const onSetFilter = useCallback(value => setFilter(idx, 'value', value), [idx, setFilter]);\n\n      const isEnlarged = useMemo(() => !isSideFilter(filter), [filter]);\n\n      const panelActions = useMemo(\n        () => [\n          {\n            id: filter.id,\n            onClick: enlargeFilter,\n            tooltip: 'tooltip.timePlayback',\n            iconComponent: Clock,\n            active: isEnlarged\n          }\n        ],\n        [filter.id, isEnlarged, enlargeFilter]\n      );\n\n      const timeline = getTimelineFromFilter(filter);\n\n      return (\n        <>\n          <StyledFieldPanelWithFieldSelect\n            allAvailableFields={allAvailableFields}\n            datasets={datasets}\n            filter={filter}\n            idx={idx}\n            removeFilter={removeFilter}\n            setFilter={setFilter}\n            panelActions={panelActions}\n          >\n            {filter.type && !isEnlarged && (\n              <div className=\"filter-panel__filter\">\n                <TimeRangeFilter\n                  filter={filter}\n                  toggleAnimation={toggleAnimation}\n                  setFilter={onSetFilter}\n                  isAnimatable\n                  hideTimeTitle\n                  timeline={timeline}\n                />\n              </div>\n            )}\n          </StyledFieldPanelWithFieldSelect>\n        </>\n      );\n    }\n  );\n\n  TimeRangeFilterPanel.displayName = 'TimeRangeFilterPanel';\n\n  return TimeRangeFilterPanel;\n}\n\nexport default TimeRangeFilterPanelFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useCallback} from 'react';\nimport SingleSelectFilterFactory from '../single-select-filter';\nimport {SelectFilter} from '@kepler.gl/types';\nimport FieldPanelWithFieldSelectFactory from './filter-panel-with-field-select';\nimport {FilterPanelComponent} from './types';\n\nSingleSelectFilterPanelFactory.deps = [FieldPanelWithFieldSelectFactory, SingleSelectFilterFactory];\n\nfunction SingleSelectFilterPanelFactory(\n  FieldPanelWithFieldSelect: ReturnType<typeof FieldPanelWithFieldSelectFactory>,\n  SingleSelectFilter: ReturnType<typeof SingleSelectFilterFactory>\n) {\n  const SingleSelectFilterPanel: FilterPanelComponent<SelectFilter> = React.memo(\n    ({idx, datasets, allAvailableFields, filter, setFilter, removeFilter}) => {\n      const onSetFilter = useCallback(value => setFilter(idx, 'value', value), [idx, setFilter]);\n\n      return (\n        <div className=\"single-select-filter-panel\">\n          <FieldPanelWithFieldSelect\n            allAvailableFields={allAvailableFields}\n            datasets={datasets}\n            filter={filter}\n            idx={idx}\n            removeFilter={removeFilter}\n            setFilter={setFilter}\n          >\n            {filter.type && (\n              <div className=\"filter-panel__filter\">\n                <SingleSelectFilter filter={filter} setFilter={onSetFilter} />\n              </div>\n            )}\n          </FieldPanelWithFieldSelect>\n        </div>\n      );\n    }\n  );\n\n  SingleSelectFilterPanel.displayName = 'SingleSelectFilterPanel';\n\n  return SingleSelectFilterPanel;\n}\n\nexport default SingleSelectFilterPanelFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useCallback} from 'react';\nimport MultiSelectFilterFactory from '../multi-select-filter';\nimport {MultiSelectFilter} from '@kepler.gl/types';\nimport FieldPanelWithFieldSelectFactory from './filter-panel-with-field-select';\nimport {FilterPanelComponent} from './types';\n\nMultiSelectFilterPanelFactory.deps = [FieldPanelWithFieldSelectFactory, MultiSelectFilterFactory];\n\nfunction MultiSelectFilterPanelFactory(\n  FieldPanelWithFieldSelect: ReturnType<typeof FieldPanelWithFieldSelectFactory>,\n  MultiSelectFilterComponent: ReturnType<typeof MultiSelectFilterFactory>\n) {\n  const MultiSelectFilterPanel: FilterPanelComponent<MultiSelectFilter> = React.memo(\n    ({idx, datasets, allAvailableFields, filter, setFilter, removeFilter}) => {\n      const onSetFilter = useCallback(value => setFilter(idx, 'value', value), [idx, setFilter]);\n\n      return (\n        <div className=\"multi-select-filter-panel\">\n          <FieldPanelWithFieldSelect\n            allAvailableFields={allAvailableFields}\n            datasets={datasets}\n            filter={filter}\n            idx={idx}\n            removeFilter={removeFilter}\n            setFilter={setFilter}\n          >\n            {filter.type && (\n              <div className=\"filter-panel__filter\">\n                <MultiSelectFilterComponent filter={filter} setFilter={onSetFilter} />\n              </div>\n            )}\n          </FieldPanelWithFieldSelect>\n        </div>\n      );\n    }\n  );\n\n  MultiSelectFilterPanel.displayName = 'MultiSelectFilterPanel';\n\n  return MultiSelectFilterPanel;\n}\n\nexport default MultiSelectFilterPanelFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useCallback} from 'react';\nimport RangeFilterFactory from '../range-filter';\nimport {RangeFilter} from '@kepler.gl/types';\nimport FieldPanelWithFieldSelectFactory from './filter-panel-with-field-select';\nimport {FilterPanelComponent} from './types';\n\nRangeFilterPanelFactory.deps = [FieldPanelWithFieldSelectFactory, RangeFilterFactory];\n\nfunction RangeFilterPanelFactory(\n  FieldPanelWithFieldSelect: ReturnType<typeof FieldPanelWithFieldSelectFactory>,\n  RangeFilterComponent: ReturnType<typeof RangeFilterFactory>\n) {\n  const RangeFilterPanel: FilterPanelComponent<RangeFilter> = React.memo(\n    ({idx, datasets, allAvailableFields, filter, removeFilter, setFilter}) => {\n      const onSetFilter = useCallback(value => setFilter(idx, 'value', value), [idx, setFilter]);\n\n      return (\n        <div className=\"range-filter-panel\">\n          <FieldPanelWithFieldSelect\n            allAvailableFields={allAvailableFields}\n            datasets={datasets}\n            filter={filter}\n            idx={idx}\n            removeFilter={removeFilter}\n            setFilter={setFilter}\n          >\n            {filter.type && (\n              <div className=\"filter-panel__filter\">\n                <RangeFilterComponent filter={filter} setFilter={onSetFilter} />\n              </div>\n            )}\n          </FieldPanelWithFieldSelect>\n        </div>\n      );\n    }\n  );\n\n  RangeFilterPanel.displayName = 'RangeFilterPanel';\n\n  return RangeFilterPanel;\n}\n\nexport default RangeFilterPanelFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useMemo, useCallback} from 'react';\nimport {StyledFilterContent} from '../../common/styled-components';\nimport PolygonFilterFactory from '../polygon-filter';\nimport PanelHeaderActionFactory from '../../side-panel/panel-header-action';\nimport {EyeSeen, EyeUnseen} from '../../common/icons';\n\nimport FilterPanelHeaderFactory from '../../side-panel/filter-panel/filter-panel-header';\nimport {StyledFilterPanel} from '../components';\n\nimport get from 'lodash.get';\nimport {PolygonFilterPanelComponent} from './types';\nimport {KeplerTable} from '@kepler.gl/table';\n\nPolygonFilterPanelFactory.deps = [\n  FilterPanelHeaderFactory,\n  PolygonFilterFactory,\n  PanelHeaderActionFactory\n];\n\nfunction PolygonFilterPanelFactory(\n  FilterPanelHeader: ReturnType<typeof FilterPanelHeaderFactory>,\n  PolygonFilter: ReturnType<typeof PolygonFilterFactory>,\n  PanelHeaderAction: ReturnType<typeof PanelHeaderActionFactory>\n) {\n  const PolygonFilterPanel: PolygonFilterPanelComponent = React.memo(\n    ({idx, datasets, layers, filter, removeFilter, setFilter, toggleFilterFeature}) => {\n      const filterDatasets: KeplerTable[] = useMemo(() => filter.dataId.map(d => datasets[d]), [\n        filter,\n        datasets\n      ]);\n\n      const onSetLayers = useCallback(value => setFilter(idx, 'layerId', value), [setFilter, idx]);\n\n      const isVisible = get(filter, ['value', 'properties', 'isVisible'], true);\n      const featureType = get(filter, ['value', 'geometry', 'type'], 'Polygon');\n\n      return (\n        <div className=\"polygon-filter-panel\">\n          <FilterPanelHeader datasets={filterDatasets} filter={filter} removeFilter={removeFilter}>\n            <StyledFilterPanel>Geo - {featureType}</StyledFilterPanel>\n            <PanelHeaderAction\n              id={filter.id}\n              onClick={toggleFilterFeature}\n              tooltip={isVisible ? 'tooltip.hideFeature' : 'tooltip.showFeature'}\n              IconComponent={isVisible ? EyeSeen : EyeUnseen}\n              active={isVisible}\n            />\n          </FilterPanelHeader>\n          <StyledFilterContent className=\"filter-panel__content\">\n            <div className=\"filter-panel__filter\">\n              <PolygonFilter filter={filter} layers={layers} setLayers={onSetLayers} />\n            </div>\n          </StyledFilterContent>\n        </div>\n      );\n    }\n  );\n\n  PolygonFilterPanel.displayName = 'PolygonFilterPanel';\n\n  return PolygonFilterPanel;\n}\n\nexport default PolygonFilterPanelFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useMemo, useCallback} from 'react';\nimport ItemSelector from '../common/item-selector/item-selector';\nimport {Layer} from '@kepler.gl/layers';\nimport {LAYER_TYPES} from '@kepler.gl/constants';\nimport {PolygonFilterProps} from './types';\nimport {StyledFilterPanel} from './components';\n\nconst layerFilter = (layer: Layer) => layer.type === LAYER_TYPES.point;\nconst isAlreadySelected = (selectedLayers: Layer[], layerId: string) =>\n  selectedLayers.findIndex(l => l.id === layerId) === -1;\n\nfunction PolygonFilterFactory() {\n  const PolygonFilter: React.FC<PolygonFilterProps> = React.memo(({filter, layers, setLayers}) => {\n    const setNewLayers = useCallback(\n      newLayers => {\n        return setLayers(newLayers.map((l: Layer) => l.id));\n      },\n      [setLayers]\n    );\n\n    const selectedLayers = useMemo(() => layers.filter(l => filter.layerId?.includes(l.id)), [\n      filter,\n      layers\n    ]);\n\n    const availableLayers = useMemo(() => {\n      // remove already added layers and filter out non point layers\n      return layers.filter(\n        layer => layerFilter(layer) && isAlreadySelected(selectedLayers, layer.id)\n      );\n    }, [layers, selectedLayers]);\n\n    const searchOptions = useCallback((value, options) => {\n      const searchStr = value?.toLowerCase();\n      return options.filter(l => l.config?.label?.toLowerCase().indexOf(searchStr) >= 0);\n    }, []);\n\n    return (\n      <div>\n        <StyledFilterPanel htmlFor={`filter-${filter.id}`}>Layers:</StyledFilterPanel>\n        <ItemSelector\n          options={availableLayers}\n          selectedItems={selectedLayers}\n          onChange={setNewLayers}\n          searchable={true}\n          searchOptions={searchOptions}\n          multiSelect={true}\n          getOptionValue={(l: Layer) => l.id}\n          displayOption={(l: Layer) => l.config.label}\n          placeholder={'placeholder.selectLayer'}\n        />\n      </div>\n    );\n  });\n\n  PolygonFilter.displayName = 'PolygonFilter';\n\n  return PolygonFilter;\n}\n\nexport default PolygonFilterFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useState, ComponentType, ReactElement, useCallback} from 'react';\nimport styled from 'styled-components';\nimport Switch from '../../common/switch';\nimport PanelTitleFactory from '../panel-title';\nimport BrushConfigFactory from './brush-config';\nimport TooltipConfigFactory from './tooltip-config';\nimport {Datasets} from '@kepler.gl/table';\nimport {InteractionConfig, ValueOf} from '@kepler.gl/types';\nimport {\n  setColumnDisplayFormat as setColumnDisplayFormatAction,\n  ActionHandler\n} from '@kepler.gl/actions';\n\nimport {\n  StyledPanelHeader,\n  PanelHeaderTitle,\n  PanelHeaderContent,\n  PanelContent\n} from '../../common/styled-components';\nimport {Messages, Crosshairs, CursorClick, Pin} from '../../common/icons';\n\nimport {FormattedMessage} from '@kepler.gl/localization';\n\ninterface InteractionPanelProps {\n  datasets: Datasets;\n  config: ValueOf<InteractionConfig>;\n  onConfigChange: any;\n  interactionConfigIcons?: {\n    [key: string]: React.ElementType;\n  };\n  setColumnDisplayFormat: ActionHandler<typeof setColumnDisplayFormatAction>;\n}\n\nconst StyledInteractionPanel = styled.div`\n  padding-bottom: 6px;\n`;\n\nInteractionPanelFactory.deps = [TooltipConfigFactory, BrushConfigFactory, PanelTitleFactory];\n\nconst INTERACTION_CONFIG_ICONS: {[key: string]: React.ElementType} = {\n  tooltip: Messages,\n  geocoder: Pin,\n  brush: Crosshairs,\n  coordinate: CursorClick\n};\n\nfunction InteractionPanelFactory(\n  TooltipConfig: ReturnType<typeof TooltipConfigFactory>,\n  BrushConfig: ReturnType<typeof BrushConfigFactory>,\n  PanelTitle: ReturnType<typeof PanelTitleFactory>\n): ComponentType<InteractionPanelProps> {\n  const InteractionPanel: React.FC<InteractionPanelProps> = ({\n    config,\n    onConfigChange,\n    datasets,\n    setColumnDisplayFormat,\n    interactionConfigIcons = INTERACTION_CONFIG_ICONS\n  }) => {\n    const [isConfigActive, setIsConfigAction] = useState(false);\n\n    const _updateConfig = useCallback(\n      newProp => {\n        onConfigChange({\n          ...config,\n          ...newProp\n        });\n      },\n      [onConfigChange, config]\n    );\n\n    const onDisplayFormatChange = useCallback(\n      (dataId, column, displayFormat) => {\n        setColumnDisplayFormat(dataId, {[column]: displayFormat});\n      },\n      [setColumnDisplayFormat]\n    );\n\n    const togglePanelActive = useCallback(() => {\n      setIsConfigAction(!isConfigActive);\n    }, [setIsConfigAction, isConfigActive]);\n\n    const {enabled} = config;\n    const toggleEnableConfig = useCallback(() => {\n      _updateConfig({enabled: !enabled});\n    }, [_updateConfig, enabled]);\n\n    const onChange = useCallback(newConfig => _updateConfig({config: newConfig}), [_updateConfig]);\n\n    const IconComponent = interactionConfigIcons[config.id];\n\n    let template: ReactElement | null = null;\n\n    switch (config.id) {\n      case 'tooltip':\n        template = (\n          <TooltipConfig\n            datasets={datasets}\n            config={config.config}\n            onChange={onChange}\n            onDisplayFormatChange={onDisplayFormatChange}\n          />\n        );\n        break;\n      case 'brush':\n        template = <BrushConfig config={config.config} onChange={onChange} />;\n        break;\n\n      default:\n        break;\n    }\n    return (\n      <StyledInteractionPanel className=\"interaction-panel\">\n        <StyledPanelHeader className=\"interaction-panel__header\" onClick={togglePanelActive}>\n          <PanelHeaderContent className=\"interaction-panel__header__content\">\n            <div className=\"interaction-panel__header__icon icon\">\n              {IconComponent ? <IconComponent height=\"16px\" /> : null}\n            </div>\n            <div className=\"interaction-panel__header__title\">\n              <PanelHeaderTitle>\n                <FormattedMessage id={config.label} />\n              </PanelHeaderTitle>\n            </div>\n          </PanelHeaderContent>\n          <div className=\"interaction-panel__header__actions\">\n            <Switch\n              checked={config.enabled}\n              id={`${config.id}-toggle`}\n              onChange={toggleEnableConfig}\n              secondary\n            />\n          </div>\n        </StyledPanelHeader>\n        {config.enabled && template && (\n          <PanelContent className=\"interaction-panel__content\">{template}</PanelContent>\n        )}\n      </StyledInteractionPanel>\n    );\n  };\n\n  return InteractionPanel;\n}\n\nexport default InteractionPanelFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {Component, ComponentType} from 'react';\nimport styled from 'styled-components';\nimport classnames from 'classnames';\nimport {DraggableAttributes} from '@dnd-kit/core';\nimport {CSS, Transform} from '@dnd-kit/utilities';\nimport {ChickletButton} from '../../../common/item-selector/chickleted-input';\nimport {Hash, Delete, VertDots} from '../../../common/icons';\nimport DropdownList from '../../../common/item-selector/dropdown-list';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {TimeLabelFormat, TooltipFields} from '@kepler.gl/types';\nimport {getFormatValue, getFormatLabels} from '@kepler.gl/utils';\nimport onClickOutside from 'react-onclickoutside';\nimport TippyTooltip from '../../../common/tippy-tooltip';\n\ninterface TooltipChickletProps {\n  disabled: boolean;\n  item: {name: string};\n  displayOption: Function;\n  remove: any;\n\n  attributes: DraggableAttributes;\n  listeners: any;\n  setNodeRef: (node: HTMLElement | null) => void;\n  transform: Transform | null;\n  transition?: string;\n  isDragging: boolean;\n}\n\ntype TooltipConfig = {\n  fieldsToShow: {\n    [key: string]: {name: string; format: string | null}[];\n  };\n  compareMode: boolean;\n  compareType: string | null;\n};\n\ntype IconDivProps = {\n  status: string | null;\n};\n\nconst ChickletAddonWrapper = styled.div`\n  position: relative;\n`;\n\nconst ChickletAddon = styled.div`\n  margin-right: 4px;\n`;\n\nconst StyledPopover = styled.div`\n  margin-left: -64px;\n  position: absolute;\n  top: 20px;\n  width: 140px;\n  z-index: 101;\n`;\n\nconst hashStyles = {\n  SHOW: 'SHOW',\n  ACTIVE: 'ACTIVE'\n};\n\nconst IconDiv = styled.div.attrs({\n  className: 'tooltip-chicklet__icon'\n})<IconDivProps>`\n  color: ${props =>\n    props.status === hashStyles.SHOW\n      ? props.theme.subtextColorActive\n      : props.status === hashStyles.ACTIVE\n      ? props.theme.activeColor\n      : props.theme.textColor};\n`;\n\ntype SortableStyledItemProps = {\n  transition?: string;\n  transform?: string;\n};\nconst SortableStyledItem = styled.div<SortableStyledItemProps>`\n  transition: ${props => props.transition};\n  transform: ${props => props.transform};\n  &.sorting {\n    opacity: 0.3;\n    pointer-events: none;\n  }\n  :hover {\n    .tooltip-chicklet__drag-handler {\n      opacity: 1;\n    }\n  }\n`;\n\nconst StyledDragHandle = styled.div.attrs({\n  className: 'tooltip-chicklet__drag-handler'\n})`\n  display: flex;\n  align-items: center;\n  z-index: 1000;\n  opacity: 0;\n  margin-left: -5px;\n  :hover {\n    cursor: move;\n    color: ${props => props.theme.tooltipVerticalLineColor};\n  }\n`;\n\nconst StyledTag = styled.span`\n  margin-right: 5px;\n  text-overflow: ellipsis;\n  width: 100%;\n  overflow: hidden;\n  max-width: 160px;\n`;\n\nfunction getFormatTooltip(formatLabels: TimeLabelFormat[], format: string | null) {\n  if (!format) {\n    return null;\n  }\n  const formatLabel = formatLabels.find(fl => getFormatValue(fl) === format);\n  if (formatLabel) {\n    return formatLabel.label;\n  }\n  return typeof format === 'object' ? JSON.stringify(format, null, 2) : String(format);\n}\n\nfunction TooltipChickletFactory(\n  dataId: string,\n  config: TooltipConfig,\n  onChange: (cfg: TooltipConfig) => void,\n  fields: TooltipFields[],\n  onDisplayFormatChange\n): ComponentType<TooltipChickletProps> {\n  class TooltipChicklet extends Component<TooltipChickletProps> {\n    state = {\n      show: false\n    };\n    private node!: HTMLDivElement | null;\n\n    componentDidMount() {\n      document.addEventListener('mousedown', this.handleClickOutside, false);\n    }\n\n    componentWillUnmount() {\n      document.removeEventListener('mousedown', this.handleClickOutside, false);\n    }\n\n    handleClickOutside = (e: any) => {\n      if (this.node?.contains(e.target)) {\n        return;\n      }\n    };\n\n    render() {\n      const {\n        disabled,\n        item,\n        displayOption,\n        remove,\n        attributes,\n        listeners,\n        setNodeRef,\n        transform,\n        transition,\n        isDragging\n      } = this.props;\n\n      const {show} = this.state;\n      const tooltipField = config.fieldsToShow[dataId].find(\n        fieldToShow => fieldToShow.name === item.name\n      );\n      if (!tooltipField) {\n        return null;\n      }\n      const field = fields.find(f => f.name === tooltipField.name);\n      if (!field) {\n        return null;\n      }\n      const formatLabels = getFormatLabels(fields, tooltipField.name);\n      const hasFormat = Boolean(field.displayFormat);\n      const selectionIndex = formatLabels.findIndex(\n        fl => getFormatValue(fl) === field.displayFormat\n      );\n      const hashStyle = show ? hashStyles.SHOW : hasFormat ? hashStyles.ACTIVE : null;\n\n      return (\n        <SortableStyledItem\n          ref={setNodeRef}\n          className={classnames('sortable-layer-items', {sorting: isDragging})}\n          transform={CSS.Translate.toString(transform)}\n          transition={transition || ''}\n          {...attributes}\n        >\n          <ChickletButton ref={node => (this.node = node)}>\n            <StyledDragHandle {...listeners}>\n              <VertDots height=\"12px\" />\n            </StyledDragHandle>\n            <StyledTag title={displayOption(item)}>{displayOption(item)}</StyledTag>\n            {formatLabels.length > 1 && (\n              <ChickletAddonWrapper>\n                <TippyTooltip\n                  placement=\"top\"\n                  render={() => (\n                    <span>\n                      {hasFormat ? (\n                        getFormatTooltip(formatLabels, field.displayName)\n                      ) : (\n                        <FormattedMessage id={'fieldSelector.formatting'} />\n                      )}\n                    </span>\n                  )}\n                >\n                  <ChickletAddon>\n                    <IconDiv status={hashStyle}>\n                      <Hash\n                        height=\"8px\"\n                        onClick={e => {\n                          e.stopPropagation();\n                          this.setState({show: Boolean(!show)});\n                        }}\n                      />\n                    </IconDiv>\n                  </ChickletAddon>\n                </TippyTooltip>\n                {show && (\n                  <StyledPopover>\n                    <DropdownList\n                      options={formatLabels}\n                      selectionIndex={selectionIndex}\n                      displayOption={({label}) => label}\n                      onOptionSelected={(result, e) => {\n                        e.stopPropagation();\n                        this.setState({\n                          show: false\n                        });\n\n                        const displayFormat = getFormatValue(result);\n                        const oldFieldsToShow = config.fieldsToShow[dataId];\n                        const fieldsToShow = oldFieldsToShow.map(fieldToShow => {\n                          return fieldToShow.name === tooltipField.name\n                            ? {\n                                name: tooltipField.name,\n                                format: displayFormat\n                              }\n                            : fieldToShow;\n                        });\n                        const newConfig = {\n                          ...config,\n                          fieldsToShow: {\n                            ...config.fieldsToShow,\n                            [dataId]: fieldsToShow\n                          }\n                        };\n                        onChange(newConfig);\n                        onDisplayFormatChange(dataId, field.name, displayFormat);\n                      }}\n                    />\n                  </StyledPopover>\n                )}\n              </ChickletAddonWrapper>\n            )}\n            <Delete onClick={disabled ? null : remove} />\n          </ChickletButton>\n        </SortableStyledItem>\n      );\n    }\n  }\n  return onClickOutside(TooltipChicklet);\n}\n\nexport default TooltipChickletFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useCallback} from 'react';\nimport styled from 'styled-components';\n\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {camelize} from '@kepler.gl/utils';\nimport {RGBColor} from '@kepler.gl/types';\nimport {MapConfigChangeUpdaterAction} from '@kepler.gl/actions';\nimport {MapStyle} from '@kepler.gl/reducers';\n\nimport LayerGroupColorPickerFactory from './map-layer-group-color-picker';\nimport {PanelHeaderActionProps, PanelHeaderActionIcon} from '../panel-header-action';\nimport {PanelLabelBold, CenterFlexbox, PanelLabelWrapper} from '../../common/styled-components';\n\nconst StyledLayerGroupItem = styled.div`\n  margin-bottom: 10px;\n  display: flex;\n  justify-content: space-between;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n\n  .layer-group__visibility-toggle {\n    margin-right: 12px;\n  }\n`;\n\nconst LayerLabel = styled(PanelLabelBold)<{active: boolean}>`\n  color: ${props => (props.active ? props.theme.textColor : props.theme.labelColor)};\n`;\n\nexport type LayerGroupItemActionIcons = {\n  visible: PanelHeaderActionIcon;\n  hidden: PanelHeaderActionIcon;\n  top: PanelHeaderActionIcon;\n};\n\nexport type LayerGroupItemProps = {\n  PanelHeaderAction: React.FC<PanelHeaderActionProps>;\n  onChange: (pd: MapConfigChangeUpdaterAction['payload']) => void;\n  slug: string;\n  layers: MapStyle['visibleLayerGroups'];\n  topLayers: MapStyle['topLayerGroups'];\n  actionIcons: LayerGroupItemActionIcons;\n  color: RGBColor | null;\n  onColorChange: (pd: RGBColor) => void;\n  isVisibilityToggleAvailable?: boolean;\n  isMoveToTopAvailable?: boolean;\n  isColorPickerAvailable?: boolean;\n};\n\nLayerGroupItemFactory.deps = [LayerGroupColorPickerFactory];\n\nfunction LayerGroupItemFactory(LayerGroupColorPicker) {\n  const LayerGroupItem: React.FC<LayerGroupItemProps> = ({\n    PanelHeaderAction,\n    onChange,\n    slug,\n    layers,\n    topLayers,\n    actionIcons,\n    color,\n    onColorChange,\n    isVisibilityToggleAvailable = true,\n    isMoveToTopAvailable = true,\n    isColorPickerAvailable = false\n  }) => {\n    const onVisibilityToggle = useCallback(() => {\n      onChange({\n        visibleLayerGroups: {\n          ...layers,\n          [slug]: !layers[slug]\n        }\n      });\n    }, [onChange, layers, slug]);\n\n    const onMoveToTopToggle = useCallback(() => {\n      onChange({\n        topLayerGroups: {\n          ...topLayers,\n          [slug]: !topLayers[slug]\n        }\n      });\n    }, [onChange, topLayers, slug]);\n\n    return (\n      <StyledLayerGroupItem className=\"layer-group__select\">\n        {isVisibilityToggleAvailable ? (\n          <PanelLabelWrapper>\n            <PanelHeaderAction\n              className=\"layer-group__visibility-toggle\"\n              id={`${slug}-toggle`}\n              tooltip={layers[slug] ? 'tooltip.hide' : 'tooltip.show'}\n              onClick={onVisibilityToggle}\n              IconComponent={layers[slug] ? actionIcons.visible : actionIcons.hidden}\n              active={layers[slug]}\n              flush\n            />\n            <LayerLabel active={layers[slug]}>\n              <FormattedMessage id={`mapLayers.${camelize(slug)}`} />\n            </LayerLabel>\n          </PanelLabelWrapper>\n        ) : (\n          <CenterFlexbox>\n            <LayerLabel style={{marginLeft: '28px'}} active={true}>\n              <FormattedMessage id={`mapLayers.${camelize(slug)}`} />\n            </LayerLabel>\n          </CenterFlexbox>\n        )}\n        <CenterFlexbox className=\"layer-group__trailing-actions\">\n          {isColorPickerAvailable && color ? (\n            <LayerGroupColorPicker\n              slug={slug}\n              color={color}\n              onColorChange={onColorChange}\n              extraMarginRight={isMoveToTopAvailable}\n              disabled={isVisibilityToggleAvailable && !layers[slug]}\n            />\n          ) : null}\n          {isMoveToTopAvailable ? (\n            <PanelHeaderAction\n              id={`${slug}-top`}\n              tooltip=\"tooltip.moveToTop\"\n              disabled={!layers[slug]}\n              IconComponent={actionIcons.top}\n              active={topLayers[slug]}\n              onClick={onMoveToTopToggle}\n            />\n          ) : null}\n        </CenterFlexbox>\n      </StyledLayerGroupItem>\n    );\n  };\n\n  return LayerGroupItem;\n}\n\nexport default LayerGroupItemFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useMemo} from 'react';\nimport styled from 'styled-components';\nimport {CenterVerticalFlexbox} from '../common/styled-components';\nimport {UploadAnimation} from './status-panel';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport ImageModalContainer, {ImageModalContainerProps} from './image-modal-container';\nimport {Provider} from '@kepler.gl/cloud-providers';\nimport {cleanupExportImage as cleanupExportImageAction} from '@kepler.gl/actions';\nimport {useCloudListProvider} from '../hooks/use-cloud-list-provider';\nimport {ModalFooter} from '../common/modal';\n\nconst StyledMsg = styled.div`\n  margin-top: 24px;\n  font-size: 14px;\n`;\n\nconst StyledTitle = styled.span`\n  font-weight: 600;\n  color: black;\n`;\n\nconst StyledIcon = styled.div`\n  margin-top: 24px;\n`;\n\nconst StyledOverwriteMapModal = styled(CenterVerticalFlexbox)`\n  padding: 24px 12px;\n  min-height: 220px;\n`;\n\ntype OverwriteMapModalProps = {\n  mapSaved: string | null;\n  title: string;\n  isProviderLoading: boolean;\n\n  // callbacks\n  onUpdateImageSetting: ImageModalContainerProps['onUpdateImageSetting'];\n  cleanupExportImage: typeof cleanupExportImageAction;\n  onConfirm: (provider: Provider) => void;\n  onCancel: () => void;\n};\n\nconst CONFIRM_BUTTON = {\n  large: true,\n  children: 'Yes',\n  disabled: false\n};\n\nconst OverwriteMapModalFactory = () => {\n  /**\n   * @type {React.FunctionComponent<OverwriteMapModalProps>}\n   */\n  const OverwriteMapModal: React.FC<OverwriteMapModalProps> = ({\n    mapSaved,\n    title,\n    isProviderLoading,\n    onUpdateImageSetting,\n    cleanupExportImage,\n    onCancel,\n    onConfirm\n  }) => {\n    const {provider} = useCloudListProvider();\n\n    const confirmButton = useMemo(\n      () => ({\n        ...CONFIRM_BUTTON,\n        disabled: !provider\n      }),\n      [provider]\n    );\n\n    return (\n      <ImageModalContainer\n        provider={provider}\n        onUpdateImageSetting={onUpdateImageSetting}\n        cleanupExportImage={cleanupExportImage}\n      >\n        <StyledOverwriteMapModal className=\"overwrite-map-modal\">\n          {isProviderLoading ? (\n            <StyledMsg>\n              <StyledTitle>\n                <FormattedMessage id={'modal.overwriteMap.title'} />\n              </StyledTitle>\n              <UploadAnimation icon={provider && provider.icon} />\n            </StyledMsg>\n          ) : (\n            <>\n              <StyledIcon>\n                {provider && provider.icon ? <provider.icon height=\"64px\" /> : null}\n              </StyledIcon>\n              <StyledMsg className=\"overwrite-map-msg\">\n                <StyledTitle>{title} </StyledTitle>\n                <FormattedMessage id={'modal.overwriteMap.alreadyExists'} values={{mapSaved}} />\n              </StyledMsg>\n            </>\n          )}\n        </StyledOverwriteMapModal>\n        <ModalFooter\n          cancel={onCancel}\n          confirm={() => provider && onConfirm(provider)}\n          confirmButton={confirmButton}\n        />\n      </ImageModalContainer>\n    );\n  };\n  return OverwriteMapModal;\n};\n\nexport const OverwriteMapModal = OverwriteMapModalFactory();\nexport default OverwriteMapModalFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useMemo} from 'react';\nimport ErrorBoundary from '../common/error-boundary';\nimport NotificationItemFactory from '../notification-panel/notification-item';\nconst NotificationItem = NotificationItemFactory();\n\ninterface ErrorDisplayProps {\n  error: string;\n}\n\nconst ErrorDisplay: React.FC<ErrorDisplayProps> = ({error}) => {\n  const notification = useMemo(\n    () => ({\n      type: 'error',\n      message: error,\n      id: 'cloud-export-error'\n    }),\n    [error]\n  );\n\n  return (\n    <ErrorBoundary>\n      <NotificationItem notification={notification} isExpanded />\n    </ErrorBoundary>\n  );\n};\n\nexport default ErrorDisplay;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useMemo} from 'react';\nimport {Button} from '../../common/styled-components';\nimport {ArrowLeft} from '../../common/icons';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport styled from 'styled-components';\nimport {dataTestIds} from '@kepler.gl/constants';\nimport {Provider} from '@kepler.gl/cloud-providers';\n\nconst StyledStorageHeader = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n  font-size: 12px;\n  line-height: 14px;\n`;\n\nconst StyledBackBtn = styled.a`\n  margin-bottom: 16px;\n  color: #3a414c;\n  cursor: pointer;\n\n  &:hover {\n    font-weight: 500;\n  }\n`;\n\nconst LINK_STYLE = {textDecoration: 'underline'};\n\nconst Title = styled.span`\n  font-size: 14px;\n  line-height: 16px;\n  font-weight: 500;\n  margin-bottom: 16px;\n\n  span {\n    text-transform: capitalize;\n  }\n`;\n\ntype CloudHeaderProps = {\n  provider: Provider;\n  onBack: () => void;\n};\n\nexport const CloudHeader: React.FC<CloudHeaderProps> = ({provider, onBack}) => {\n  const managementUrl = useMemo(() => provider.getManagementUrl(), [provider]);\n  return (\n    <div data-testid={dataTestIds.cloudHeader}>\n      <StyledStorageHeader>\n        <StyledBackBtn>\n          <Button link onClick={onBack}>\n            <ArrowLeft height=\"14px\" />\n            <FormattedMessage id={'modal.loadStorageMap.back'} />\n          </Button>\n        </StyledBackBtn>\n        {managementUrl && (\n          <a\n            key={1}\n            href={managementUrl}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            style={LINK_STYLE}\n          >\n            {provider.displayName}\n          </a>\n        )}\n      </StyledStorageHeader>\n      <Title>\n        <span>{provider.displayName}</span>\n        <FormattedMessage id={'modal.loadStorageMap.storageMaps'} />\n      </Title>\n    </div>\n  );\n};\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport LoadingDialog from '../loading-dialog';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {CloudItem} from './cloud-item';\nimport {FlexContainer} from '../../common/flex-container';\n\nconst StyledSpinner = styled.div`\n  text-align: center;\n  span {\n    margin: 0 auto;\n  }\n`;\n\nconst StyledFlexContainer = styled(FlexContainer)`\n  justify-content: flex-start;\n  flex-wrap: wrap;\n`;\n\nexport const CloudMaps = ({provider, onSelectMap, isLoading, maps, error}) => {\n  if (error) {\n    return <div>Error while fetching maps: {error.message}</div>;\n  }\n\n  if (isLoading) {\n    return (\n      <StyledSpinner>\n        <LoadingDialog size={64} />\n      </StyledSpinner>\n    );\n  }\n\n  return (\n    <StyledFlexContainer>\n      {(maps ?? []).length ? (\n        maps.map(vis => (\n          <CloudItem key={vis.id} onClick={() => onSelectMap(provider, vis)} vis={vis} />\n        ))\n      ) : (\n        <div className=\"visualization-list__message\">\n          <FormattedMessage id={'modal.loadStorageMap.noSavedMaps'} />\n        </div>\n      )}\n    </StyledFlexContainer>\n  );\n};\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport moment from 'moment/moment';\nimport React from 'react';\nimport styled from 'styled-components';\nimport {Base} from '../../common/icons';\n\nconst MapIcon = props => {\n  return (\n    <div {...props}>\n      {props.children}\n      <Base height=\"32px\" viewBox={'0 0 16 16'}>\n        <path\n          fill=\"#d3d8d6\"\n          d=\"m13.6 11.572-3.2 2.1336v-9.2776l3.2-2.1336zm-12-7.144 3.2-2.1336v9.2776l-3.2 2.1336zm13.244 8.2376c0.2224-0.148 0.356-0.3984 0.356-0.6656v-11.2c0-0.2952-0.1624-0.5664-0.4224-0.7048-0.26-0.14-0.576-0.1248-0.8216 0.0392l-4.3128 2.876-3.5432-2.8352c-0.1208-0.0936-0.2952-0.1624-0.472-0.1688-0.1648-0.0064-0.348 0.0464-0.472 0.128l-4.8 3.2c-0.2224 0.1488-0.356 0.3984-0.356 0.6656v11.2c0 0.2952 0.1624 0.5664 0.4224 0.7056 0.1184 0.0632 0.248 0.0944 0.3776 0.0944 0.1552 0 0.3096-0.0448 0.444-0.1344l4.3128-2.876 3.5432 2.8352c0.1448 0.116 0.3216 0.1752 0.5 0.1752 0.1184 0 0.236-0.0248 0.3464-0.0784z\"\n        />\n      </Base>\n    </div>\n  );\n};\n\nconst PrivacyBadge = ({privateMap}) => (\n  <span className=\"vis_item-privacy\">{privateMap ? 'Private' : 'Public'}</span>\n);\n\nconst StyledVisualizationItem = styled.div`\n  flex: 0 0 auto;\n  width: 208px;\n  display: flex;\n  flex-direction: column;\n  padding: 16px 8px;\n  color: #3a414c;\n  cursor: pointer;\n  font-size: 12px;\n  line-height: 18px;\n  border: 1px solid transparent;\n\n  &:hover {\n    .vis_item-icon,\n    .vis_item-thumb,\n    .vis_item-description,\n    .vis_item-modification-date {\n      opacity: 1;\n    }\n    border: 1px solid #bbbbbb;\n  }\n\n  .vis_item-icon,\n  .vis_item-thumb,\n  .vis_item-description,\n  .vis_item-modification-date {\n    opacity: 0.9;\n    transition: opacity 0.4s ease;\n  }\n\n  .vis_item-icon {\n    position: relative;\n    flex: 0 0 108px;\n    background-color: #6a7484;\n    border-radius: 4px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n  }\n\n  .vis_item-thumb {\n    position: relative;\n    flex: 0 0 108px;\n    background-size: cover;\n    background-position: center;\n    border-radius: 4px;\n  }\n\n  .vis_item-privacy {\n    position: absolute;\n    top: 0;\n    left: 0;\n    padding: 3px 6px;\n    border-radius: 4px 0;\n    background-color: rgba(58, 65, 76, 0.7);\n    color: #fff;\n    font-size: 11px;\n    line-height: 18px;\n  }\n\n  .vis_item-title {\n    margin-top: 16px;\n    font-weight: 500;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n\n  .vis_item-description {\n    flex: 1 1 auto;\n    margin-top: 8px;\n  }\n\n  .vis_item-modification-date {\n    margin-top: 16px;\n    flex: 1 0 auto;\n    color: #6a7484;\n    line-height: 15px;\n  }\n`;\n\nexport const CloudItem = ({vis, onClick}) => {\n  const thumbnailStyle = {backgroundImage: `url(${vis.thumbnail})`};\n  return (\n    <StyledVisualizationItem onClick={onClick}>\n      {vis.thumbnail ? (\n        <div role=\"thumbnail-wrapper\" className=\"vis_item-thumb\" style={thumbnailStyle}>\n          {vis.hasOwnProperty('privateMap') ? <PrivacyBadge privateMap={vis.privateMap} /> : null}\n        </div>\n      ) : (\n        <MapIcon role=\"map-icon\" className=\"vis_item-icon\">\n          {vis.hasOwnProperty('privateMap') ? <PrivacyBadge privateMap={vis.privateMap} /> : null}\n        </MapIcon>\n      )}\n      <span className=\"vis_item-title\">{vis.title}</span>\n      {vis.description?.length && <span className=\"vis_item-description\">{vis.description}</span>}\n      <span className=\"vis_item-modification-date\">\n        Last modified {moment.utc(vis.updatedAt).fromNow()}\n      </span>\n    </StyledVisualizationItem>\n  );\n};\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {Component, ComponentType} from 'react';\nimport styled from 'styled-components';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\n\nimport {dataTestIds, LIGHT_AND_SHADOW_EFFECT} from '@kepler.gl/constants';\nimport {removeEffect, updateEffect} from '@kepler.gl/actions';\nimport {Effect} from '@kepler.gl/types';\n\nimport EffectPanelHeaderFactory from './effect-panel-header';\nimport EffectConfiguratorFactory from './effect-configurator';\n\nexport type EffectPanelProps = {\n  className: string;\n  effect: Effect;\n  isDraggable: boolean;\n  listeners: any;\n  removeEffect: typeof removeEffect;\n  updateEffect: typeof updateEffect;\n\n  style?: React.CSSProperties;\n  onMouseDown: React.MouseEventHandler<HTMLDivElement>;\n  onTouchStart: React.TouchEventHandler<HTMLDivElement>;\n};\n\nexport type PanelWrapperProps = {\n  active: boolean;\n};\n\nconst PanelWrapper = styled.div<PanelWrapperProps>`\n  font-size: 12px;\n  border-radius: 1px;\n  z-index: 1000;\n  &.dragging {\n    cursor: move;\n  }\n  margin: 3px auto 3px 25px;\n  max-width: 295px;\n`;\n\nEffectPanelFactory.deps = [EffectPanelHeaderFactory, EffectConfiguratorFactory];\n\nfunction EffectPanelFactory(\n  EffectPanelHeader: ReturnType<typeof EffectPanelHeaderFactory>,\n  EffectConfigurator: ReturnType<typeof EffectConfiguratorFactory>\n): ComponentType<EffectPanelProps> {\n  class EffectPanel extends Component<EffectPanelProps> {\n    static propTypes = {\n      effect: PropTypes.object.isRequired,\n      removeEffect: PropTypes.func.isRequired,\n      updateEffect: PropTypes.func.isRequired,\n      isDraggable: PropTypes.bool\n    };\n\n    _toggleEnabled = (event?: Event) => {\n      event?.stopPropagation();\n      this.props.updateEffect(this.props.effect.id, {\n        isEnabled: !this.props.effect.isEnabled\n      });\n    };\n\n    _toggleConfigActive = (event?: Event) => {\n      event?.stopPropagation();\n      this.props.updateEffect(this.props.effect.id, {\n        isConfigActive: !this.props.effect.isConfigActive\n      });\n    };\n\n    _removeEffect = (event?: Event) => {\n      event?.stopPropagation();\n      this.props.removeEffect(this.props.effect.id);\n    };\n\n    _updateEffectConfig = (event, id, props) => {\n      event?.stopPropagation();\n      this.props.updateEffect(id, props);\n    };\n\n    render() {\n      const {effect, isDraggable, listeners} = this.props;\n      const {id, type, isConfigActive, isJsonEditorActive, isEnabled} = effect;\n\n      const sortingAllowed = type !== LIGHT_AND_SHADOW_EFFECT.type;\n\n      return (\n        <PanelWrapper\n          active={false}\n          className={classnames('effect-panel', this.props.className)}\n          data-testid={dataTestIds.effectPanel}\n          style={this.props.style}\n          onMouseDown={this.props.onMouseDown}\n          onTouchStart={this.props.onTouchStart}\n        >\n          <EffectPanelHeader\n            isConfigActive={isConfigActive}\n            effectId={id}\n            type={type}\n            isEnabled={isEnabled}\n            isJsonEditorActive={isJsonEditorActive}\n            onToggleEnabled={this._toggleEnabled}\n            onRemoveEffect={this._removeEffect}\n            onToggleEnableConfig={this._toggleConfigActive}\n            isDragNDropEnabled={isDraggable && sortingAllowed}\n            listeners={listeners}\n            showSortHandle={type !== LIGHT_AND_SHADOW_EFFECT.type}\n          />\n          {isConfigActive && (\n            <EffectConfigurator\n              key={`effect-configurator-${id}`}\n              effect={effect}\n              updateEffectConfig={this._updateEffectConfig}\n            />\n          )}\n        </PanelWrapper>\n      );\n    }\n  }\n\n  // @ts-expect-error fix The types of 'propTypes.isDraggable[nominalTypeHack]' are incompatible between these types.\n  return EffectPanel;\n}\n\nexport default EffectPanelFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useMemo} from 'react';\nimport classnames from 'classnames';\nimport styled from 'styled-components';\n\nimport {\n  EFFECT_DESCRIPTIONS,\n  LIGHT_AND_SHADOW_EFFECT,\n  POSTPROCESSING_EFFECTS\n} from '@kepler.gl/constants';\n\nimport PanelHeaderActionFactory, {PanelHeaderActionIcon} from '../side-panel/panel-header-action';\nimport {\n  ArrowDown,\n  ArrowUp,\n  EyeSeen,\n  EyeUnseen,\n  Trash,\n  VertDots,\n  LightAndShadowEffectIcon,\n  InkEffectIcon,\n  BrightnessContrastEffectIcon,\n  HueSaturationEffectIcon,\n  VibranceEffectIcon,\n  SepiaEffectIcon,\n  DotScreenEffectIcon,\n  ColorHalftoneEffectIcon,\n  NoiseEffectIcon,\n  TriangleBlurEffectIcon,\n  ZoomBlurEffectIcon,\n  TiltShiftEffectIcon,\n  EdgeWorkEffectIcon,\n  VignetteEffectIcon,\n  MagnifyEffectIcon,\n  HexagonalPixelateEffectIcon,\n  BaseProps\n} from '../common/icons';\nimport {StyledPanelHeader} from '../common/styled-components';\n\nexport type ActionItem = {\n  key: string;\n  isHidden?: boolean;\n  tooltip: string;\n  classNames?: Record<string, boolean>;\n  icon: PanelHeaderActionIcon;\n  tooltipType?: 'error';\n  onClick: () => void;\n};\n\nexport type EffectPanelHeaderProps = {\n  type: string;\n  listeners: any;\n  effectId: string;\n  isEnabled: boolean;\n  isConfigActive: boolean;\n  isJsonEditorActive: boolean;\n  showSortHandle?: boolean;\n  isDragNDropEnabled: boolean;\n  onToggleEnabled: () => void;\n  onRemoveEffect: () => void;\n  onToggleEnableConfig: () => void;\n  actionIcons?: {\n    remove: React.ComponentType<Partial<BaseProps>>;\n    visible: React.ComponentType<Partial<BaseProps>>;\n    hidden: React.ComponentType<Partial<BaseProps>>;\n    enableConfig: React.ComponentType<Partial<BaseProps>>;\n    disableConfig: React.ComponentType<Partial<BaseProps>>;\n  };\n  actionItems?: ActionItem[];\n};\n\nexport const defaultProps = {\n  isDragNDropEnabled: true\n};\n\nconst defaultActionIcons = {\n  remove: Trash,\n  visible: EyeSeen,\n  hidden: EyeUnseen,\n  enableConfig: ArrowDown,\n  disableConfig: ArrowUp\n};\n\nconst defaultEffectIcons = {\n  [LIGHT_AND_SHADOW_EFFECT.type]: LightAndShadowEffectIcon,\n  [POSTPROCESSING_EFFECTS.ink.type]: InkEffectIcon,\n  [POSTPROCESSING_EFFECTS.brightnessContrast.type]: BrightnessContrastEffectIcon,\n  [POSTPROCESSING_EFFECTS.hueSaturation.type]: HueSaturationEffectIcon,\n  [POSTPROCESSING_EFFECTS.vibrance.type]: VibranceEffectIcon,\n  [POSTPROCESSING_EFFECTS.sepia.type]: SepiaEffectIcon,\n  [POSTPROCESSING_EFFECTS.dotScreen.type]: DotScreenEffectIcon,\n  [POSTPROCESSING_EFFECTS.colorHalftone.type]: ColorHalftoneEffectIcon,\n  [POSTPROCESSING_EFFECTS.noise.type]: NoiseEffectIcon,\n  [POSTPROCESSING_EFFECTS.triangleBlur.type]: TriangleBlurEffectIcon,\n  [POSTPROCESSING_EFFECTS.zoomBlur.type]: ZoomBlurEffectIcon,\n  [POSTPROCESSING_EFFECTS.tiltShift.type]: TiltShiftEffectIcon,\n  [POSTPROCESSING_EFFECTS.edgeWork.type]: EdgeWorkEffectIcon,\n  [POSTPROCESSING_EFFECTS.vignette.type]: VignetteEffectIcon,\n  [POSTPROCESSING_EFFECTS.magnify.type]: MagnifyEffectIcon,\n  [POSTPROCESSING_EFFECTS.hexagonalPixelate.type]: HexagonalPixelateEffectIcon\n};\n\nconst StyledEffectPanelHeader = styled(StyledPanelHeader)`\n  height: ${props => props.theme.effectPanelHeaderHeight}px;\n  position: relative;\n  align-items: stretch;\n\n  .effect__drag-handle {\n    margin-left: -5px;\n    color: ${props => props.theme.textColor};\n  }\n\n  .effect__drag-handle__placeholder {\n    height: 20px;\n    padding: 0px;\n    margin: 10px 10px 10px 5px;\n  }\n\n  :hover {\n    cursor: pointer;\n    background-color: ${props => props.theme.panelBackgroundHover};\n    .effect__drag-handle {\n      opacity: 1;\n    }\n  }\n\n  border-left: 3px solid ${props => props.theme.panelBackgroundHover};\n`;\n\nconst HeaderActionSection = styled.div`\n  display: flex;\n  position: absolute;\n  height: 100%;\n  align-items: stretch;\n  right: 10px;\n  :hover {\n    .effect-panel__header__actions__hidden {\n      opacity: 1;\n      background-color: ${props => props.theme.panelBackgroundHover};\n    }\n  }\n`;\n\n// Hiden actions only show up on hover\ntype StyledPanelHeaderHiddenActionsProps = {isConfigActive: boolean};\nconst StyledPanelHeaderHiddenActions = styled.div.attrs({\n  className: 'effect-panel__header__actions__hidden'\n})<StyledPanelHeaderHiddenActionsProps>`\n  opacity: 0;\n  display: flex;\n  align-items: center;\n  transition: opacity 0.4s ease, background-color 0.4s ease;\n  background-color: ${props =>\n    props.isConfigActive ? props.theme.panelBackgroundHover : props.theme.panelBackground};\n\n  :hover {\n    opacity: 1;\n  }\n`;\n\nconst StyledDragHandle = styled.div`\n  display: flex;\n  align-items: center;\n  opacity: 0;\n  z-index: 1000;\n  :hover {\n    cursor: move;\n    opacity: 1;\n    color: ${props => props.theme.textColorHl};\n  }\n`;\n\nconst DragHandle = ({className, listeners, children}) => (\n  <StyledDragHandle className={className} {...listeners}>\n    {children}\n  </StyledDragHandle>\n);\n\nEffectPanelHeaderActionSectionFactory.deps = [PanelHeaderActionFactory];\n\nexport function EffectPanelHeaderActionSectionFactory(\n  PanelHeaderAction: ReturnType<typeof PanelHeaderActionFactory>\n): React.FC<EffectPanelHeaderProps> {\n  const EffectPanelHeaderActionSection = (props: EffectPanelHeaderProps) => {\n    const {\n      effectId,\n      isEnabled,\n      isConfigActive,\n      onToggleEnabled,\n      onRemoveEffect,\n      onToggleEnableConfig,\n      actionItems,\n      actionIcons = defaultActionIcons\n    } = props;\n\n    const effectActionItems: ActionItem[] = useMemo(\n      () =>\n        actionItems ?? [\n          {\n            key: 'remove-effect',\n            isHidden: true,\n            tooltip: 'tooltip.removeEffect',\n            tooltipType: 'error',\n            onClick: onRemoveEffect,\n            icon: actionIcons.remove\n          },\n          {\n            key: 'visibility-toggle',\n            tooltip: isEnabled ? 'tooltip.disableEffect' : 'tooltip.enabledEffect',\n            onClick: onToggleEnabled,\n            icon: isEnabled ? actionIcons.visible : actionIcons.hidden\n          },\n          {\n            key: 'enable-config',\n            classNames: {'is-open': isConfigActive},\n            tooltip: 'tooltip.effectSettings',\n            onClick: onToggleEnableConfig,\n            icon: actionIcons.enableConfig\n          }\n        ],\n      [actionItems, isEnabled, onRemoveEffect, onToggleEnabled, actionIcons]\n    );\n\n    return (\n      <HeaderActionSection className=\"effect-panel__header__actions\">\n        <StyledPanelHeaderHiddenActions isConfigActive={isConfigActive}>\n          {effectActionItems\n            .filter((item: ActionItem) => Boolean(item.isHidden))\n            .map((item: ActionItem, i) => (\n              <PanelHeaderAction\n                key={item.key}\n                className={`effect__${item.key}`}\n                testId={`${item.key}-action`}\n                id={effectId}\n                tooltip={item.tooltip}\n                onClick={item.onClick}\n                tooltipType={item.tooltipType}\n                IconComponent={item.icon}\n              />\n            ))}\n        </StyledPanelHeaderHiddenActions>\n        {effectActionItems\n          .filter((item: ActionItem) => !item.isHidden)\n          .map((item: ActionItem, i) => (\n            <PanelHeaderAction\n              key={item.key}\n              className={classnames(`effect__${item.key}`, item.classNames)}\n              testId={`${item.key}-action`}\n              id={effectId}\n              tooltip={item.tooltip}\n              onClick={item.onClick}\n              tooltipType={item.tooltipType}\n              IconComponent={item.icon}\n            />\n          ))}\n      </HeaderActionSection>\n    );\n  };\n\n  return EffectPanelHeaderActionSection;\n}\n\nconst StyledEffectTitleSection = styled.div`\n  margin-left: 8px;\n  flex-grow: 1;\n  align-items: center;\n  display: flex;\n  color: ${props => props.theme.textColor};\n`;\n\nconst IconPlaceholder = styled.div`\n  width: 20px;\n  height: 20px;\n`;\n\nconst EffectIconWrapper = styled.div`\n  height: 18px;\n  margin: auto;\n  color: ${props => props.theme.textColor};\n`;\n\nEffectPanelHeaderFactory.deps = [EffectPanelHeaderActionSectionFactory];\n\nfunction EffectPanelHeaderFactory(\n  EffectPanelHeaderActionSection: ReturnType<typeof EffectPanelHeaderActionSectionFactory>\n): React.FC<EffectPanelHeaderProps> {\n  const EffectPanelHeader = (props: EffectPanelHeaderProps) => {\n    const {\n      isConfigActive,\n      isDragNDropEnabled,\n      type,\n      onToggleEnableConfig,\n      listeners,\n      showSortHandle = true\n    } = props;\n\n    const label = useMemo(() => {\n      const description = EFFECT_DESCRIPTIONS.find(_description => _description.type === type);\n      return description?.name || 'Effect';\n    }, [type]);\n\n    const EffectIcon = defaultEffectIcons[type];\n\n    return (\n      <StyledEffectPanelHeader\n        className={classnames('effect-panel__header', {\n          'sort--handle': !isConfigActive\n        })}\n        active={isConfigActive}\n        onClick={onToggleEnableConfig}\n      >\n        {isDragNDropEnabled ? (\n          <DragHandle className=\"effect__drag-handle\" listeners={listeners}>\n            {showSortHandle ? <VertDots height=\"20px\" /> : <IconPlaceholder />}\n          </DragHandle>\n        ) : (\n          <div className=\"effect__drag-handle__placeholder\" />\n        )}\n\n        <EffectIconWrapper>{EffectIcon ? <EffectIcon height=\"18px\" /> : null}</EffectIconWrapper>\n\n        <StyledEffectTitleSection>{label}</StyledEffectTitleSection>\n\n        <EffectPanelHeaderActionSection {...props} />\n      </StyledEffectPanelHeader>\n    );\n  };\n\n  EffectPanelHeader.defaultProps = defaultProps;\n\n  return EffectPanelHeader;\n}\n\nexport default EffectPanelHeaderFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useMemo} from 'react';\nimport moment from 'moment-timezone';\nimport styled, {withTheme} from 'styled-components';\n\nimport {DEFAULT_TIMEZONE} from '@kepler.gl/constants';\n\nimport ItemSelector from '../common/item-selector/item-selector';\n\nconst getValue = op => op?.name || DEFAULT_TIMEZONE;\n\nexport type TimezoneSelectorProps = {\n  selected?: string;\n  options?: {name: string}[];\n  onSelect: (string) => void;\n  theme?: any;\n};\n\nconst StyledItemSelector = styled(ItemSelector)`\n  .item-selector__dropdown {\n    padding-left: 30px;\n    border-radius: 4px;\n  }\n  .active {\n    border-color: ${props => props.theme.activeColor};\n    border-radius: 4px 4px 0px 0px !important;\n  }\n`;\n\nconst defaultTimezones = moment.tz.names().map(name => {\n  return {\n    name\n  };\n});\n\nfunction TimezoneSelectorFactory() {\n  const TimezoneTypeSelector: React.FC<TimezoneSelectorProps> = ({\n    selected,\n    options = defaultTimezones,\n    onSelect\n  }: TimezoneSelectorProps) => {\n    const selectedItems = useMemo(() => {\n      return selected ? [{name: selected}] : [];\n    }, [selected]);\n\n    return (\n      <StyledItemSelector\n        selectedItems={selectedItems}\n        options={options}\n        multiSelect={false}\n        disabled={false}\n        placeholder=\"effectManager.timezone\"\n        onChange={onSelect}\n        filterOption=\"name\"\n        getOptionValue={getValue}\n        displayOption={getValue}\n        searchable={true}\n        showArrow={true}\n      />\n    );\n  };\n\n  return withTheme(TimezoneTypeSelector);\n}\n\nexport default TimezoneSelectorFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useMemo} from 'react';\nimport styled from 'styled-components';\n\nimport RangeSliderFactory from '../common/range-slider';\nimport {Sun, Moon, Sunset, Sunrise} from '../common/icons';\n\nexport type EffectTimeSliderConfig = {\n  dawn: number;\n  sunrise: number;\n  sunset: number;\n  dusk: number;\n  sunriseTime: string;\n  sunsetTime: string;\n};\n\nexport type UIBlock = {\n  type: string;\n  width: number;\n  center: number;\n  start: number;\n  end: number;\n  text?: string;\n  TopRowIcon?: React.ElementType<any>;\n  BottomRowIcon?: React.ElementType<any>;\n};\n\nexport type EffectTimeSliderProps = {\n  value: number;\n  onChange: (number) => void;\n  config: EffectTimeSliderConfig;\n};\n\nconst TimeSliderWrapper = styled.div`\n  width: 100%;\n  height: 48px;\n`;\n\nconst TopRowWrapper = styled.div`\n  width: 100%;\n  height: 32px;\n  display: flex;\n  position: relative;\n  align-items: center;\n\n  .day {\n    background-color: ${props => props.theme.effectPanelElementColorHovered};\n  }\n  .night {\n    background-color: ${props => props.theme.effectPanelElementColor};\n  }\n  .sunrise,\n  .sunset {\n    background-color: ${props => props.theme.effectPanelElementColorActive};\n  }\n  .inline_icon__day {\n    color: ${props => props.theme.effectPanelElementColorSun};\n  }\n  .inline_icon__night {\n    color: ${props => props.theme.effectPanelTextSecondary2};\n  }\n`;\n\nconst BottomRowWrapper = styled.div`\n  position: relative;\n  height: 16px;\n  .bottom_icon__sunrise,\n  .bottom_icon__sunset {\n    color: ${props => props.theme.effectPanelTextSecondary2};\n  }\n`;\n\ntype BackgroundBlockProps = {width: string};\nconst BackgroundBlock = styled.div<BackgroundBlockProps>`\n  margin: 0px;\n  padding: 0px;\n  width: ${props => props.width};\n  height: 24px;\n  pointer-events: none;\n`;\n\ntype StyledIconProps = {left: number};\nconst StyledIcon = styled.div<StyledIconProps>`\n  position: absolute;\n  top: 0px;\n  left: calc(${props => props.left}% - 8px);\n  height: 32px;\n  pointer-events: none;\n`;\n\ntype StyledBottomIconProps = {left: number};\nconst StyledBottomIcon = styled.div<StyledBottomIconProps>`\n  position: absolute;\n  top: 0px;\n  left: calc(${props => props.left}% - 27px);\n  height: 12px;\n  pointer-events: none;\n  margin-top: 1px;\n  display: flex;\n  align-items: flex-end;\n`;\n\nconst RangeSliderWrapper = styled.div`\n  position: absolute;\n  width: 100%;\n  .kg-slider {\n    padding-left: 6px;\n  }\n  .kg-range-slider {\n    padding: 0px !important;\n    background-color: transparent;\n  }\n  .kg-range-slider__bar {\n    background-color: transparent;\n  }\n  .kg-range-slider__handle {\n    height: 32px;\n    width: 8px;\n    margin-top: -14px;\n    align-items: center;\n    display: flex;\n    justify-content: center;\n  }\n  .kg-range-slider__handle::after {\n    margin-left: 1px;\n  }\n  .kg-range-slider__input {\n    height: 32px;\n    text-align: center;\n    padding: 3px 6px;\n  }\n`;\n\nconst Text = styled.div`\n  margin-left: 3px;\n  font-size: 10px;\n  line-height: 11px;\n  white-space: nowrap;\n`;\n\nconst MODES = {\n  sunrise: 'sunrise',\n  day: 'day',\n  sunset: 'sunset',\n  night: 'night'\n};\n\n/**\n * Generate rendering blocks for each part of the day.\n */\nexport function getUIBlocks(config: EffectTimeSliderConfig): UIBlock[] {\n  let {dawn, sunrise, sunset, dusk} = config;\n  if (dawn > sunrise) sunrise += 1;\n  if (dawn > sunset) sunset += 1;\n  if (dawn > dusk) dusk += 1;\n\n  const blocks = [\n    {\n      start: dawn,\n      end: sunrise,\n      type: MODES.sunrise,\n      width: 0,\n      center: 0\n    },\n    {\n      start: sunrise,\n      end: sunset,\n      type: MODES.day,\n      width: 0,\n      center: 0\n    },\n    {\n      start: sunset,\n      end: dusk,\n      type: MODES.sunset,\n      width: 0,\n      center: 0\n    },\n    {\n      start: dusk,\n      end: dawn,\n      type: MODES.night,\n      width: 0,\n      center: 0\n    }\n  ];\n  const updatedBlocks: UIBlock[] = [];\n\n  // sort and split ui blocks\n  blocks.forEach(block => {\n    if (block.start > block.end) {\n      block.end += 1;\n    }\n    if (block.start > 1 && block.end > 1) {\n      updatedBlocks.push({...block, start: block.start - 1, end: block.end - 1});\n    } else if (block.end > 1) {\n      updatedBlocks.push({\n        ...block,\n        end: 1\n      });\n\n      updatedBlocks.push({...block, start: 0, end: block.end - 1});\n    } else {\n      updatedBlocks.push(block);\n    }\n  });\n  updatedBlocks.sort((a, b) => a.start - b.start);\n\n  const existingBottomBlocks = {};\n  updatedBlocks.forEach(block => {\n    block.width = (block.end - block.start) * 100;\n    block.center = block.start * 100 + block.width / 2;\n\n    // Don't display inline icons when day or night is too short.\n    if ((block.type === MODES.day || block.type === MODES.night) && block.width > 5) {\n      block.TopRowIcon = block.type === MODES.day ? Sun : Moon;\n    }\n\n    // bottom row icons below the slider\n    if ((block.type === MODES.sunrise || block.type === MODES.sunset) && block.width > 0.1) {\n      // prevent duplicates for bottom row\n      const existingBlock = existingBottomBlocks[block.type];\n      if (existingBlock) {\n        if (existingBlock.width < block.width) existingBlock.BottomRowIcon = null;\n        else if (existingBlock.width > block.width) return;\n      }\n      existingBottomBlocks[block.type] = block;\n\n      // prevent bottom icon and labels\n      block.BottomRowIcon = block.type === MODES.sunrise ? Sunrise : Sunset;\n      if (block.center > 90) {\n        block.center = 90;\n      } else if (block.center < 10) {\n        block.center = 10;\n      }\n      block.text = block.type === MODES.sunrise ? config.sunriseTime : config.sunsetTime;\n    }\n  });\n  return updatedBlocks;\n}\n\nEffectTimeSliderFactory.deps = [RangeSliderFactory];\n\nexport default function EffectTimeSliderFactory(\n  RangeSlider: ReturnType<typeof RangeSliderFactory>\n) {\n  const EffectTimeSlider: React.FC<EffectTimeSliderProps> = ({\n    value: rangeSliderValue,\n    onChange,\n    config\n  }: EffectTimeSliderProps) => {\n    const uiBlocks = useMemo(() => {\n      return getUIBlocks(config);\n    }, [config]);\n\n    const rangeSliderProps = useMemo(() => {\n      return {\n        label: 'value',\n        value1: rangeSliderValue,\n        step: 0.001,\n        range: [0, 1],\n        value0: 0,\n        onChange,\n        showInput: false,\n        isRanged: false\n      };\n    }, [rangeSliderValue, onChange]);\n\n    return (\n      <TimeSliderWrapper>\n        <TopRowWrapper>\n          {uiBlocks.map((block, index) => {\n            return <BackgroundBlock key={index} width={`${block.width}%`} className={block.type} />;\n          })}\n\n          {uiBlocks.map((block, index) => {\n            return block.TopRowIcon ? (\n              <StyledIcon key={index} left={block.center} className={`inline_icon__${block.type}`}>\n                <block.TopRowIcon width=\"16px\" height=\"32px\" />\n              </StyledIcon>\n            ) : null;\n          })}\n\n          <RangeSliderWrapper>\n            <RangeSlider {...rangeSliderProps} />\n          </RangeSliderWrapper>\n        </TopRowWrapper>\n        <BottomRowWrapper>\n          {uiBlocks.map((block, index) => {\n            return block.BottomRowIcon ? (\n              <StyledBottomIcon\n                key={index}\n                left={block.center}\n                className={`bottom_icon__${block.type}`}\n              >\n                <block.BottomRowIcon width=\"12px\" height=\"12px\" />\n                <Text>{block.text}</Text>\n              </StyledBottomIcon>\n            ) : null;\n          })}\n        </BottomRowWrapper>\n      </TimeSliderWrapper>\n    );\n  };\n\n  return EffectTimeSlider;\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useMemo, useCallback} from 'react';\nimport styled, {withTheme} from 'styled-components';\nimport classNames from 'classnames';\nimport moment from 'moment-timezone';\n\nimport ItemSelector from '../common/item-selector/item-selector';\nimport {StyledTimePicker} from '../common/styled-components';\nimport {classList} from '../common/item-selector/dropdown-list';\n\nconst HEADER_ITEM_ID = 'HEADER_ITEM_ID';\n\nexport type EffectTimeSelectorProps = {\n  value: string;\n  onChange: (string) => void;\n  theme?: any;\n};\n\nconst StyledEffectTimeSelector = styled.div`\n  .item-selector {\n    background-color: transparent;\n  }\n  .item-selector .item-selector__dropdown {\n    padding: 0px;\n    width: 110px;\n    height: 30px;\n  }\n  border: 1px solid ${props => props.theme.inputBgd};\n  border-radius: 4px;\n  :hover {\n    border: 1px solid ${props => props.theme.inputBgdHover};\n  }\n  .active {\n    border: 1px solid ${props => props.theme.activeColor};\n    border-radius: 4px 4px 0px 0px;\n  }\n`;\n\nconst StyledLabel = styled.div`\n  color: ${props => props.theme.effectPanelTextMain};\n  font-size: ${props => props.theme.inputFontSize};\n  height: 13px;\n  display: flex;\n  align-items: center;\n`;\n\nconst DropdownListWrapper = styled.div`\n  ${props => props.theme.dropdownList};\n  background-color: ${props => props.theme.inputBgdHover};\n  display: flex;\n  flex-wrap: wrap;\n  padding: 0px;\n  max-height: 160px;\n  border-radius: 0px 0px 4px 4px;\n`;\n\nconst StyledDropdownListItem = styled.div`\n  padding: 10px 5px 9px 10px;\n  width: 100%;\n  :hover {\n    background-color: ${props => props.theme.effectPanelElementColorSelected};\n    cursor: pointer;\n  }\n`;\n\n// Generate time options for the dropdown with 30 min intervals.\nconst timeOptions = (() => {\n  const m = moment().utcOffset(0);\n  m.set({hour: 12, minute: 0, second: 0, millisecond: 0});\n\n  const out: {name: string; id: string}[] = [];\n  for (let i = 0; i < 48; i++) {\n    out.push({name: m.format('hh:mm A'), id: m.format('HH:mm')});\n    m.add(30, 'minutes');\n  }\n  return out;\n})();\n\nconst getDisplayOption = op => op.name;\nconst getOptionValue = op => op.id;\n\n/**\n * A component to render TimePicker as the header for the dropdown component.\n */\nconst EffectTimeListItem = ({value}) => {\n  if (value?.id === HEADER_ITEM_ID) {\n    return (\n      <StyledTimePicker\n        value={value.value}\n        onChange={value.onChange}\n        onClick={value.onClick}\n        disableClock={true}\n        format={'hh:mm a'}\n      />\n    );\n  }\n\n  return <StyledLabel>{value.name}</StyledLabel>;\n};\n\nconst EffectTimeDropdownList = ({\n  onOptionSelected,\n  options,\n  selectionIndex,\n  customListItemComponent\n}) => {\n  const onSelectOption = useCallback(\n    (e, value) => {\n      e.preventDefault();\n      onOptionSelected(value);\n    },\n    [onOptionSelected]\n  );\n\n  const ListItemComponent = customListItemComponent;\n\n  return (\n    <DropdownListWrapper className={classList.list}>\n      {options.map((value, i) => (\n        <StyledDropdownListItem\n          className={classNames('effect-type-selector__item', {\n            hover: selectionIndex === i\n          })}\n          key={`${value.id}_${i}`}\n          onMouseDown={e => onSelectOption(e, value)}\n          onClick={e => onSelectOption(e, value)}\n        >\n          <ListItemComponent value={value} />\n        </StyledDropdownListItem>\n      ))}\n    </DropdownListWrapper>\n  );\n};\n\nEffectTimeSelectorFactory.deps = [];\n\nfunction EffectTimeSelectorFactory() {\n  const EffectTimeSelector: React.FC<EffectTimeSelectorProps> = ({\n    value,\n    onChange\n  }: EffectTimeSelectorProps) => {\n    // Selected item is rendered as TimePicker in EffectTimeListItem\n    const selectedItems = useMemo(() => {\n      return [\n        {\n          id: HEADER_ITEM_ID,\n          value,\n          onChange,\n          onClick: e => {\n            // DatePicker is used as custom header.\n            // Don't open the dropdown when the user is editing time values directly.\n            const name = e?.target?.name;\n            if (name === 'hour12' || name === 'minute' || name === 'amPm') {\n              e.stopPropagation();\n            }\n          }\n        }\n      ];\n    }, [value, onChange]);\n\n    return (\n      <StyledEffectTimeSelector>\n        <ItemSelector\n          selectedItems={selectedItems}\n          options={timeOptions}\n          multiSelect={false}\n          searchable={false}\n          placeholder=\"\"\n          filterOption=\"name\"\n          onChange={onChange}\n          getOptionValue={getOptionValue}\n          displayOption={getDisplayOption}\n          DropDownLineItemRenderComponent={EffectTimeListItem}\n          DropDownRenderComponent={EffectTimeDropdownList}\n        />\n      </StyledEffectTimeSelector>\n    );\n  };\n\n  return withTheme(EffectTimeSelector);\n}\n\nexport default EffectTimeSelectorFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useCallback, useMemo} from 'react';\nimport styled from 'styled-components';\n\nimport {rgbToHex} from '@kepler.gl/utils';\n\nimport {Portaled, SingleColorPalette} from '../../../components';\nimport {Button} from '../common/styled-components';\n\nexport type SingleColorPickerProps = {\n  color: [number, number, number];\n  onSetColor: (value: [number, number, number]) => void;\n  label: string;\n  Icon: React.ElementType;\n};\n\nexport const StyledPanelDropdown = styled.div`\n  ${props => props.theme.panelDropdownScrollBar}\n  background-color: ${props => props.theme.panelBackground};\n  box-shadow: ${props => props.theme.panelBoxShadow};\n  border-radius: ${props => props.theme.panelBorderRadius};\n  overflow-y: auto;\n  max-height: 500px;\n  position: relative;\n  z-index: 999;\n  width: 220px;\n`;\n\nconst StyledConfigSection = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst SectionTitle = styled.div`\n  font-size: ${props => props.theme.inputFontSize};\n  color: ${props => props.theme.effectPanelTextSecondary2};\n  margin-bottom: 8px;\n`;\n\nconst StyledDropdownButtonWrapper = styled.div`\n  align-self: flex-start;\n  .button {\n    color: ${props => props.theme.effectPanelTextSecondary2};\n    display: flex;\n    gap: 5px;\n    border: none;\n    transition: background 0.2s;\n    background-color: ${props => props.theme.inputBgd};\n    padding: 8px 5px 8px 10px;\n    &:active {\n      color: ${props => props.theme.effectPanelTextMain};\n      background-color: ${props => props.theme.inputBgdHover};\n    }\n    &:hover {\n      color: ${props => props.theme.effectPanelTextMain};\n      background-color: ${props => props.theme.inputBgdHover};\n    }\n    & > svg {\n      margin-right: 0;\n    }\n  }\n`;\n\nconst DEFAULT_OFFSET = {\n  top: 0,\n  left: 0\n};\n\nconst SingleColorPickerDropdown = ({\n  isOpened,\n  onClose,\n  selectedColor,\n  onSelectColor,\n  offset = DEFAULT_OFFSET\n}) => {\n  const onSelectColorCb = useCallback(\n    v => {\n      onSelectColor(v);\n    },\n    [onSelectColor]\n  );\n  return (\n    <Portaled top={offset.top} left={offset.left} isOpened={isOpened} onClose={onClose}>\n      <StyledPanelDropdown>\n        <SingleColorPalette selectedColor={selectedColor} onSelectColor={onSelectColorCb} />\n      </StyledPanelDropdown>\n    </Portaled>\n  );\n};\n\nconst CompactColorPicker: React.FC<SingleColorPickerProps> = ({\n  color,\n  onSetColor,\n  Icon,\n  label\n}: SingleColorPickerProps) => {\n  const [isColorPickerOpened, setIsColorPickerOpened] = React.useState(false);\n\n  const hexColor = useMemo(() => {\n    return rgbToHex(color);\n  }, [color]);\n\n  const colorBlockStyle = useMemo(\n    () => ({\n      width: 16,\n      height: 16,\n      backgroundColor: hexColor,\n      borderRadius: 2\n    }),\n    [hexColor]\n  );\n\n  const toggleDropdown = useCallback(() => {\n    setIsColorPickerOpened(!isColorPickerOpened);\n  }, [isColorPickerOpened, setIsColorPickerOpened]);\n\n  const closeDropdown = useCallback(() => {\n    setIsColorPickerOpened(false);\n  }, [setIsColorPickerOpened]);\n\n  return (\n    <StyledConfigSection>\n      <SectionTitle>{label}</SectionTitle>\n      <StyledDropdownButtonWrapper>\n        <Button onClick={toggleDropdown}>\n          <div style={colorBlockStyle} />\n          <Icon />\n        </Button>\n      </StyledDropdownButtonWrapper>\n      <SingleColorPickerDropdown\n        isOpened={isColorPickerOpened}\n        onClose={closeDropdown}\n        selectedColor={hexColor}\n        onSelectColor={onSetColor}\n      />\n    </StyledConfigSection>\n  );\n};\n\nexport default CompactColorPicker;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useCallback} from 'react';\nimport styled from 'styled-components';\nimport classNames from 'classnames';\n\nimport {classList} from '../common/item-selector/dropdown-list';\n\nexport type EffectTypeDropdownListItem = {\n  type: string;\n  name: string;\n  disabled: boolean;\n};\n\nexport type EffectTypeDropdownListProps = {\n  onOptionSelected: (string) => void;\n  options: EffectTypeDropdownListItem[];\n  selectedItems: EffectTypeDropdownListItem[];\n  selectionIndex: number;\n  customListItemComponent: React.FC<{value: EffectTypeDropdownListItem; isTile?: boolean}>;\n};\n\nconst DropdownListWrapper = styled.div`\n  ${props => props.theme.dropdownList};\n  background-color: ${props => props.theme.dropdownListBgd};\n  display: flex;\n  flex-wrap: wrap;\n  align-items: stretch;\n  padding: 24px 0 12px 0;\n  max-height: 430px;\n  justify-content: center;\n`;\n\nconst StyledDropdownListItem = styled.div`\n  margin: 0px 4px 8px 4px;\n\n  &.disabled {\n    pointer-events: none;\n    opacity: 0.3;\n  }\n\n  :hover {\n    cursor: pointer;\n    .effect-type-selector__item__label {\n      color: ${props => props.theme.effectPanelTextMain};\n    }\n  }\n`;\n\nexport function EffectTypeDropdownListFactory() {\n  const EffectTypeDropdownList: React.FC<EffectTypeDropdownListProps> = ({\n    onOptionSelected,\n    options,\n    selectedItems,\n    selectionIndex,\n    customListItemComponent\n  }: EffectTypeDropdownListProps) => {\n    const onSelectOption = useCallback(\n      (e, value) => {\n        e.preventDefault();\n        onOptionSelected(value);\n      },\n      [onOptionSelected]\n    );\n\n    const ListItemComponent = customListItemComponent;\n\n    return (\n      <DropdownListWrapper className={classList.list}>\n        {options.map((value, i) => (\n          <StyledDropdownListItem\n            className={classNames('effect-type-selector__item', {\n              selected: selectedItems.find(it => it.type === value.type),\n              hover: selectionIndex === i,\n              disabled: value.disabled\n            })}\n            key={`${value.type}_${i}`}\n            onMouseDown={e => onSelectOption(e, value)}\n            onClick={e => onSelectOption(e, value)}\n          >\n            <ListItemComponent value={value} isTile />\n          </StyledDropdownListItem>\n        ))}\n      </DropdownListWrapper>\n    );\n  };\n\n  return EffectTypeDropdownList;\n}\n\nexport default EffectTypeDropdownListFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React from 'react';\nimport styled, {withTheme} from 'styled-components';\nimport classNames from 'classnames';\n\nimport {KEPLER_UNFOLDED_BUCKET} from '@kepler.gl/constants';\nimport {FormattedMessage} from '@kepler.gl/localization';\n\nimport {Add} from '../common/icons';\n\nexport const DUMMY_ITEM_ID: string = 'dummy';\n\nexport type EffectTypeListItemProps = {\n  value: {type: string; name: string};\n  className?: string;\n  isTile?: boolean;\n  theme: any;\n};\n\nconst StyledListItem = styled.div`\n  border-radius: 2px;\n  height: 89px;\n  transition: background-color 0.4s;\n\n  :hover {\n    background-color: ${props => props.theme.effectTypeIconBgHoverColor};\n  }\n\n  .effect-type-selector__item__icon {\n    display: flex;\n    background-image: url(${`${KEPLER_UNFOLDED_BUCKET}/images/kepler.gl-layer-icon-bg.png`});\n    background-size: ${props => props.theme.effectTypeIconSizeL}px\n      ${props => props.theme.effectTypeIconSizeL}px;\n    height: ${props => props.theme.effectTypeIconSizeL}px;\n    width: ${props => props.theme.effectTypeIconSizeL}px;\n    border-radius: 2px;\n\n    .effect-preview {\n      height: ${props => props.theme.effectTypeIconSizeL}px;\n      width: ${props => props.theme.effectTypeIconSizeL}px;\n    }\n  }\n\n  .effect-type-selector__item__label {\n    text-transform: capitalize;\n    font-size: 10px;\n    text-align: center;\n    color: ${props => props.theme.effectPanelTextMain};\n    max-width: ${props => props.theme.effectTypeIconSizeL}px;\n    line-height: 14px;\n    padding-top: 2px;\n  }\n`;\n\nconst StyledAddButton = styled(Add)`\n  margin-right: 8px;\n  height: 16px;\n`;\n\nconst StyledPlaceholderButton = styled.div`\n  align-items: center;\n  display: flex;\n  justify-content: space-between;\n  margin-left: 3px;\n  margin-right: 3px;\n  letter-spacing: 0.3px;\n  font-family: ${props => props.theme.effectPanelAddEffectFontFamily};\n  font-weight: 500;\n`;\n\n/**\n * Transforms an effect type from camel case into a name of the image in kebab case.\n * @param {string} type\n * @returns {string}\n */\nconst getImageUrl = type => {\n  const kebab = type.replace(\n    /[A-Z]+(?![a-z])|[A-Z]/g,\n    ($, ofs) => (ofs ? '-' : '') + $.toLowerCase()\n  );\n  return `${KEPLER_UNFOLDED_BUCKET}/images/effects/${kebab}.png`;\n};\n\nexport function EffectTypeListItemFactory() {\n  const EffectTypeListItem: React.FC<EffectTypeListItemProps> = ({value, isTile, className}) => {\n    if (value?.type === DUMMY_ITEM_ID) {\n      return (\n        <StyledPlaceholderButton>\n          <StyledAddButton />\n          <FormattedMessage id={'effectManager.addEffect'} />\n        </StyledPlaceholderButton>\n      );\n    }\n\n    return (\n      <StyledListItem\n        className={classNames('effect-type-selector__item__inner', className, {\n          list: !isTile\n        })}\n      >\n        <div className=\"effect-type-selector__item__icon\">\n          <img className=\"effect-preview\" src={getImageUrl(value.type)} />\n        </div>\n        <div className=\"effect-type-selector__item__label\">\n          <FormattedMessage id={`effect.type.${value.type}`} defaultMessage={value.name} />\n        </div>\n      </StyledListItem>\n    );\n  };\n\n  return withTheme(EffectTypeListItem);\n}\n\nexport default EffectTypeListItemFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useCallback, ComponentType} from 'react';\n\nimport {MapControls} from '@kepler.gl/types';\n\nimport {MagicWand} from '../../common/icons';\nimport {MapControlButton} from '../../common/styled-components';\nimport MapControlTooltipFactory from '../map-control-tooltip';\n\ninterface EffectControlIcons {\n  effectsIcon: ComponentType<any>;\n}\n\nexport type EffectControlProps = {\n  mapControls: MapControls;\n  onToggleMapControl: (control: string) => void;\n  actionIcons: EffectControlIcons;\n};\n\nEffectControlFactory.deps = [MapControlTooltipFactory];\n\nexport default function EffectControlFactory(\n  MapControlTooltip: ReturnType<typeof MapControlTooltipFactory>\n): React.FC<EffectControlProps> {\n  const defaultActionIcons = {\n    effectsIcon: MagicWand\n  };\n\n  const EffectControl = ({\n    mapControls,\n    onToggleMapControl,\n    actionIcons = defaultActionIcons\n  }: EffectControlProps) => {\n    const onClick = useCallback(\n      event => {\n        event.preventDefault();\n        onToggleMapControl('effect');\n      },\n      [onToggleMapControl]\n    );\n\n    const showControl = mapControls?.effect?.show;\n    if (!showControl) {\n      return null;\n    }\n\n    const active = mapControls?.effect?.active;\n    return (\n      <MapControlTooltip\n        id=\"show-effect\"\n        message={active ? 'tooltip.hideEffectPanel' : 'tooltip.showEffectPanel'}\n      >\n        <MapControlButton\n          className=\"map-control-button toggle-effect\"\n          onClick={onClick}\n          active={active}\n        >\n          <actionIcons.effectsIcon height=\"22px\" />\n        </MapControlButton>\n      </MapControlTooltip>\n    );\n  };\n\n  EffectControl.displayName = 'EffectControl';\n  return React.memo(EffectControl);\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {useContext} from 'react';\nimport {FeatureFlagsContext} from '../context';\n\ntype FeatureFlags = {\n  // Define your feature flags here\n  [flagName: string]: boolean;\n};\n\n// @ts-expect-error FeatureFlagsContext is typed as object\nconst useFeatureFlags = () => useContext<FeatureFlags>(FeatureFlagsContext);\n\nexport default useFeatureFlags;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\n// Context\nexport {default as KeplerGlContext, RootContext} from './context';\n\nimport TimeRangeSliderFactory from './common/time-range-slider';\nimport RangeSliderFactory from './common/range-slider';\nimport VisConfigSliderFactory from './side-panel/layer-panel/vis-config-slider';\nimport VisConfigSwitchFactory from './side-panel/layer-panel/vis-config-switch';\nimport LayerConfigGroupFactory from './side-panel/layer-panel/layer-config-group';\nimport LayerColumnConfigFactory from './side-panel/layer-panel/layer-column-config';\nimport LayerTypeListItemFactory from './side-panel/layer-panel/layer-type-list-item';\nimport {ChannelByValueSelectorFactory} from './side-panel/layer-panel/layer-configurator';\nimport FieldSelectorFactory, {FieldListItemFactoryFactory} from './common/field-selector';\nimport FieldTokenFactory from './common/field-token';\nimport PanelHeaderActionFactory from './side-panel/panel-header-action';\nimport InfoHelperFactory from './common/info-helper';\nimport ColorSelectorFactory from './side-panel/layer-panel/color-selector';\nimport {\n  LayerColorSelectorFactory,\n  LayerColorRangeSelectorFactory,\n  ArcLayerColorSelectorFactory\n} from './side-panel/layer-panel/layer-color-selector';\nimport {appInjector} from './container';\n\n// Components\nexport {default as KeplerGl, default, injectComponents, ContainerFactory, ERROR_MSG} from './container';\n\n// factories\nexport {default as KeplerGlFactory, DEFAULT_KEPLER_GL_PROPS, getVisibleDatasets, makeGetActionCreators, mapFieldsSelector, plotContainerSelector} from './kepler-gl';\nexport {default as SidePanelFactory} from './side-panel';\nexport {default as PanelTitleFactory} from './side-panel/panel-title';\nexport {default as MapContainerFactory, Attribution} from './map-container';\nexport {default as MapsLayoutFactory} from './maps-layout';\nexport {default as BottomWidgetFactory} from './bottom-widget';\nexport {default as LayerAnimationControllerFactory} from './layer-animation-controller';\nexport {default as FilterAnimationControllerFactory} from './filter-animation-controller';\nexport {default as ModalContainerFactory} from './modal-container';\nexport {default as PlotContainerFactory} from './plot-container';\nexport {default as GeocoderPanelFactory, getUpdateVisDataPayload} from './geocoder-panel';\nexport {testForCoordinates} from './geocoder/geocoder';\n\n// // side panel factories\nexport {\n  default as PanelHeaderFactory,\n  SaveExportDropdownFactory,\n  PanelHeaderDropdownFactory,\n  CloudStorageDropdownFactory,\n  PanelAction\n} from './side-panel/panel-header';\nexport {default as PanelHeaderActionFactory} from './side-panel/panel-header-action';\nexport {CollapseButtonFactory, default as SidebarFactory} from './side-panel/side-bar';\nexport {default as PanelToggleFactory} from './side-panel/panel-toggle';\nexport {default as PanelTabFactory} from './side-panel/panel-tab';\n\nexport {default as LayerManagerFactory, LayerBlendingSelector} from './side-panel/layer-manager';\nexport {ColorSelectorInput, ColorBlock} from './side-panel/layer-panel/color-selector';\nexport {default as CustomSelector} from './side-panel/layer-panel/color-selector';\nexport {default as ColorPalette} from './side-panel/layer-panel/color-palette';\nexport {default as ColorRangeSelector, PaletteConfig, ColorPaletteGroup, ALL_TYPES} from './side-panel/layer-panel/color-range-selector';\nexport {default as LayerPanelFactory} from './side-panel/layer-panel/layer-panel';\nexport {default as SingleColorPalette} from './side-panel/layer-panel/single-color-palette';\nexport {\n  default as LayerConfiguratorFactory,\n  getLayerConfiguratorProps,\n  getLayerDataset,\n  getVisConfiguratorProps,\n} from './side-panel/layer-panel/layer-configurator';\nexport {default as TextLabelPanelFactory} from './side-panel/layer-panel/text-label-panel';\n\nexport {\n  AddDataButtonFactory,\n  default as DatasetSectionFactory\n} from './side-panel/layer-panel/dataset-section';\nexport {default as DatasetLayerSectionFactory} from './side-panel/layer-panel/dataset-layer-section';\nexport {default as DatasetLayerGroupFactory} from './side-panel/layer-panel/dataset-layer-group';\nexport {default as PanelViewListToggleFactory} from './side-panel/panel-view-list-toggle';\nexport {default as AddLayerButtonFactory} from './side-panel/layer-panel/add-layer-button';\nexport {default as LayerListFactory} from './side-panel/layer-panel/layer-list';\nexport {default as CustomPicker} from './side-panel/layer-panel/custom-picker';\nexport {default as CustomPalette} from './side-panel/layer-panel/custom-palette';\nexport * from './side-panel/layer-panel/custom-palette';\n\nexport {default as SourceDataCatalogFactory} from './side-panel/common/source-data-catalog';\nexport {default as SourceDataSelectorFactory} from './side-panel/common/source-data-selector';\nexport {default as DatasetTitleFactory} from './side-panel/common/dataset-title';\nexport {default as DatasetInfoFactory} from './side-panel/common/dataset-info';\nexport {default as DatasetTagFactory} from './side-panel/common/dataset-tag';\n\nexport {default as FilterManagerFactory} from './side-panel/filter-manager';\nexport {default as FilterPanelFactory} from './side-panel/filter-panel/filter-panel';\nexport {default as AddFilterButtonFactory} from './side-panel/filter-panel/add-filter-button';\n\nexport {default as InteractionManagerFactory} from './side-panel/interaction-manager';\nexport {default as BrushConfigFactory} from './side-panel/interaction-panel/brush-config';\nexport {default as TooltipConfigFactory} from './side-panel/interaction-panel/tooltip-config';\n\nexport {default as MapManagerFactory} from './side-panel/map-manager';\nexport {default as LayerGroupSelectorFactory} from './side-panel/map-style-panel/map-layer-selector';\nexport {default as MapStyleSelectorFactory} from './side-panel/map-style-panel/map-style-selector';\nexport {default as LayerGroupColorPickerFactory} from './side-panel/map-style-panel/map-layer-group-color-picker';\nexport {default as CustomPanelsFactory} from './side-panel/custom-panel';\nexport {default as DndContextFactory} from './dnd-context';\n\n// // map factories\nexport {default as MapPopoverFactory} from './map/map-popover';\nexport {default as MapPopoverContentFactory} from './map/map-popover-content';\nexport {default as MapControlFactory} from './map/map-control';\nexport {default as LayerHoverInfoFactory} from './map/layer-hover-info';\nexport {default as CoordinateInfoFactory} from './map/coordinate-info';\nexport {default as LayerSelectorPanelFactory} from './map/layer-selector-panel';\nexport {default as LocalePanelFactory} from './map/locale-panel';\nexport {default as MapControlPanelFactory} from './map/map-control-panel';\nexport {default as MapControlTooltipFactory} from './map/map-control-tooltip';\nexport {\n  default as MapLegendFactory,\n  LayerLegendHeaderFactory,\n  LayerLegendContentFactory,\n  StyledMapControlLegend,\n  LayerColorLegend,\n  VisualChannelMetric,\n  LayerSizeLegend,\n  SingleColorLegend\n} from './map/map-legend';\nexport {default as MapDrawPanelFactory} from './map/map-draw-panel';\nexport {default as SplitMapButtonFactory} from './map/split-map-button';\nexport {default as MapLegendPanelFactory} from './map/map-legend-panel';\nexport {default as Toggle3dButtonFactory} from './map/toggle-3d-button';\nexport {default as LazzyTippy} from './map/lazy-tippy';\nexport {default as MapControlToolbarFactory} from './map/map-control-toolbar';\n\n// // modal factories\nexport {default as ModalDialogFactory} from './modals/modal-dialog';\nexport {default as DeleteDatasetModalFactory} from './modals/delete-data-modal';\nexport {default as DataTableModalFactory, DatasetTabs, DatasetModalTab} from './modals/data-table-modal';\nexport {default as LoadDataModalFactory} from './modals/load-data-modal';\nexport {default as SaveMapModalFactory} from './modals/save-map-modal';\nexport {default as StatusPanel} from './modals/status-panel';\nexport {default as ExportImageModalFactory} from './modals/export-image-modal';\nexport {default as ExportDataModalFactory} from './modals/export-data-modal';\nexport {default as AddMapStyleModalFactory} from './modals/add-map-style-modal';\nexport {default as ExportMapModalFactory} from './modals/export-map-modal/export-map-modal';\nexport {default as ModalTabsFactory, ModalTabItem} from './modals/modal-tabs';\nexport {default as LoadStorageMapFactory} from './modals/load-storage-map';\nexport {default as ExportJsonMapFactory} from './modals/export-map-modal/export-json-map';\nexport {default as ExportHtmlMapFactory} from './modals/export-map-modal/export-html-map';\n\n// // notification panel\nexport {default as NotificationPanelFactory} from './notification-panel';\nexport {default as NotificationItemFactory} from './notification-panel/notification-item';\n\n// // common factory\nexport {default as AnimationControlFactory} from './common/animation-control/animation-control';\nexport {default as AnimationControllerFactory} from './common/animation-control/animation-controller';\nexport {default as PlaybackControlsFactory} from './common/animation-control/playback-controls';\nexport {default as WindowActionControlFactory} from './common/animation-control/window-action-control';\nexport {default as PlayControlFactory} from './common/animation-control/play-control';\nexport {default as ResetControlFactory} from './common/animation-control/reset-control';\nexport {default as SpeedControlFactory} from './common/animation-control/speed-control';\nexport {default as AnimationWindowControlFactory} from './common/animation-control/animation-window-control';\nexport {default as FloatingTimeDisplayFactory} from './common/animation-control/floating-time-display';\nexport {default as AnimationSpeedSliderFactory} from './common/animation-control/animation-speed-slider';\nexport {default as RangePlotFactory} from './common/range-plot';\nexport {default as ImagePreview} from './common/image-preview';\nexport {default as HistogramPlotFactory} from './common/histogram-plot';\nexport {default as LineChartFactory} from './common/line-chart';\nexport {default as RangeBrushFactory} from './common/range-brush';\nexport {default as TimeSliderMarkerFactory, getTickFormat, getXAxis, updateAxis} from './common/time-slider-marker';\nexport {default as TimeRangeSliderTimeTitleFactory} from './common/time-range-slider-time-title';\nexport {default as IconButton} from './common/icon-button';\n// // Filters factory\nexport {default as TimeWidgetFactory} from './filters/time-widget';\nexport {default as TimeWidgetTopFactory} from './filters/time-widget-top';\nexport {default as SingleSelectFilterFactory} from './filters/single-select-filter';\nexport {default as MultiSelectFilterFactory} from './filters/multi-select-filter';\nexport {default as NewFilterPanelFactory} from './filters/filter-panels/new-filter-panel';\nexport {\n  timeRangeSliderFieldsSelector,\n  default as TimeRangeFilterFactory\n} from './filters/time-range-filter';\nexport {default as RangeFilterFactory} from './filters/range-filter';\n\n// // Editor Factory\nexport {default as EditorFactory} from './editor/editor';\nexport {default as FeatureActionPanelFactory, PureFeatureActionPanelFactory} from './editor/feature-action-panel';\n\n// Injector\nexport {injector, provideRecipesToInjector, withState} from './injector';\n\n// Common Components\nexport {default as CloudTile} from './modals/cloud-tile';\nexport {default as FileUploadFactory, FileUpload, WarningMsg} from './common/file-uploader/file-upload';\nexport {default as FileDrop} from './common/file-uploader/file-drop';\nexport {default as UploadButton} from './common/file-uploader/upload-button';\nexport {default as DatasetLabel} from './common/dataset-label';\nexport {default as Accessor} from './common/item-selector/accessor';\nexport {default as ChickletedInput, ChickletButton} from './common/item-selector/chickleted-input';\nexport {default as ItemSelector} from './common/item-selector/item-selector';\nexport {default as Typeahead} from './common/item-selector/typeahead';\nexport {default as DropdownList, ListItem, classList as dropdownListClassList} from './common/item-selector/dropdown-list';\nexport {default as FieldSelectorFactory} from './common/field-selector';\nexport {default as Modal, ModalFooter, ModalTitle} from './common/modal';\nexport {default as AppLogo} from './common/logo';\nexport {default as Switch} from './common/switch';\nexport {default as Checkbox} from './common/checkbox';\nexport {default as ColorLegend, LegendRow} from './common/color-legend';\nexport {default as EffectControlFactory} from './map/effects/effect-control';\nexport {default as LoadingSpinner} from './common/loading-spinner';\nexport {default as LoadingDialog} from './modals/loading-dialog';\nexport {MapViewStateContext, MapViewStateContextProvider} from './map-view-state-context';\nexport {default as FieldTokenFactory} from './common/field-token';\nexport {default as Portaled} from './common/portaled';\nexport {default as ProgressBar} from './common/progress-bar';\nexport {default as FileUploadProgress} from './common/file-uploader/file-upload-progress';\nexport {default as Slider} from './common/slider/slider';\nexport {default as SliderHandle} from './common/slider/slider-handle';\nexport {default as SliderBarHandle} from './common/slider/slider-bar-handle';\nexport {default as ActionPanel, ActionPanelItem} from './common/action-panel';\nexport {default as HeaderCellFactory} from './common/data-table/header-cell';\nexport {default as DataTableConfigFactory, NumberFormatConfig} from './common/data-table/display-format';\nexport {default as DataTableFactory} from './common/data-table';\nexport {default as CanvasHack} from './common/data-table/canvas';\nexport {default as OptionDropdown, FormatterDropdown} from './common/data-table/option-dropdown';\nexport {default as MapLayerSelector} from './common/map-layer-selector';\nexport {default as VerticalToolbar} from './common/vertical-toolbar';\nexport {default as ToolbarItem} from './common/toolbar-item';\nexport {default as ShareMapUrlModalFactory, SharingUrl} from './modals/share-map-modal';\nexport {default as TippyTooltip} from './common/tippy-tooltip';\n\n// side pane components\nexport {default as LayerTypeSelectorFactory} from './side-panel/layer-panel/layer-type-selector';\nexport {default as LayerTypeDropdownListFactory} from './side-panel/layer-panel/layer-type-dropdown-list';\nexport {ConfigGroupCollapsibleContent, StyledConfigGroupHeader, LayerConfigGroupLabelFactory} from './side-panel/layer-panel/layer-config-group';\nexport {default as ColumnSelectorFactory} from './side-panel/layer-panel/column-selector';\nexport {default as StyledDropdownSelect} from './common/item-selector/item-selector';\nexport {\n  DragHandle,\n  LayerLabelEditor,\n  LayerTitleSectionFactory,\n  LayerPanelHeaderActionSectionFactory,\n  default as LayerPanelHeaderFactory\n} from './side-panel/layer-panel/layer-panel-header';\nexport {default as FilterPanelHeaderFactory} from './side-panel/filter-panel/filter-panel-header';\n\nexport {default as EffectManagerFactory} from './effects/effect-manager';\nexport {default as EffectListFactory} from './effects/effect-list';\nexport {default as SidePanelTitleFactory} from './effects/side-panel-title';\nexport {default as EffectTypeSelectorFactory} from './effects/effect-type-selector';\nexport {default as EffectConfiguratorFactory} from './effects/effect-configurator';\nexport {default as EffectTimeConfiguratorFactory} from './effects/effect-time-configurator';\n\nexport {default as HowToButton} from './side-panel/layer-panel/how-to-button';\n// eslint-disable-next-line prettier/prettier\nexport type {\n  ButtonProps,\n  StyledPanelHeaderProps,\n  StyledExportSectionProps\n} from './common';\n\nexport type {CollapseButtonProps} from './side-panel/side-bar';\nexport type {PanelTabProps} from './side-panel/panel-tab';\nexport type {MapStyleSelectorProps} from './side-panel/map-style-panel/map-style-selector';\nexport type {LayerGroupSelectorProps} from './side-panel/map-style-panel/map-layer-selector';\nexport type {MapManagerProps} from './side-panel/map-manager';\nexport type {SourceDataSelectorProps} from './side-panel/common/types';\nexport type {DatasetTitleProps} from './side-panel/common/dataset-title';\nexport type {SourceDataCatalogProps} from './side-panel/common/source-data-catalog';\nexport type {DatasetInfoProps} from './side-panel/common/dataset-info';\nexport type {DatasetTagProps} from './side-panel/common/dataset-tag';\nexport type {CustomPanelsProps} from './side-panel/custom-panel';\nexport type {LayerTypeListItemProps, LayerTypeListItemType} from './side-panel/layer-panel/layer-type-list-item';\nexport type {LayerGroupColorPickerProps} from './side-panel/map-style-panel/map-layer-group-color-picker';\nexport type {MapLegendPanelProps, MapLegendPanelFactoryDeps} from './map/map-legend-panel';\nexport type {OptionDropdownProps, FormatterDropdownProps} from './common/data-table/option-dropdown';\nexport type {LayerListProps, LayerListFactoryDeps} from './side-panel/layer-panel/layer-list';\nexport type {MapContainerProps} from './map-container';\nexport type {MapControlProps} from './map/map-control';\nexport type {MapDrawPanelProps} from './map/map-draw-panel';\nexport type {PanelHeaderProps} from './side-panel/panel-header';\nexport type {LayerLabelEditorProps, LayerTitleSectionProps, LayerPanelHeaderProps, LayerPanelHeaderActionSectionProps} from './side-panel/layer-panel/layer-panel-header';\nexport type {FilterPanelHeaderProps} from './side-panel/filter-panel/filter-panel-header';\nexport type {LayerTypeOption} from './side-panel/layer-panel/layer-type-dropdown-list';\nexport type {LayerConfigGroupLabelProps, LayerConfigGroupProps} from './side-panel/layer-panel/layer-config-group';\nexport type {FilterManagerProps} from './side-panel/filter-manager';\nexport type {PanelMeta} from './side-panel/common/types';\nexport type {SideBarProps} from './side-panel/side-bar';\nexport type {FeatureActionPanelProps} from './editor/feature-action-panel';\nexport type {SingleColorPaletteProps} from './side-panel/layer-panel/single-color-palette';\nexport type {DndContextProps, DndContextComponent} from './dnd-context';\n\nexport {\n  Icons,\n  SelectText,\n  SelectTextBold,\n  IconRoundSmall,\n  CenterFlexbox,\n  CenterVerticalFlexbox,\n  SpaceBetweenFlexbox,\n  SBFlexboxItem,\n  SBFlexboxNoMargin,\n  PanelLabel,\n  PanelLabelWrapper,\n  PanelLabelBold,\n  PanelHeaderTitle,\n  PanelHeaderContent,\n  PanelContent,\n  SidePanelSection,\n  SidePanelDivider,\n  Tooltip,\n  Button,\n  Input,\n  InputLight,\n  TextArea,\n  TextAreaLight,\n  InlineInput,\n  StyledPanelHeader,\n  StyledPanelDropdown,\n  ButtonGroup,\n  DatasetSquare,\n  SelectionButton,\n  StyledModalContent,\n  StyledModalVerticalPanel,\n  StyledModalSection,\n  StyledModalInputFootnote,\n  StyledMapContainer,\n  StyledAttrbution,\n  StyledExportSection,\n  StyledFilteredOption,\n  StyledType,\n  WidgetContainer,\n  BottomWidgetInner,\n  MapControlButton,\n  StyledFilterContent,\n  TruncatedTitleText,\n  CheckMark\n} from './common';\n\n// Individual Component from Dependency Tree\nexport const TimeRangeSlider = appInjector.get(TimeRangeSliderFactory);\nexport const RangeSlider = appInjector.get(RangeSliderFactory);\nexport const VisConfigSlider = appInjector.get(VisConfigSliderFactory);\nexport const VisConfigSwitch = appInjector.get(VisConfigSwitchFactory);\nexport const LayerConfigGroup = appInjector.get(LayerConfigGroupFactory);\nexport const LayerColumnConfig = appInjector.get(LayerColumnConfigFactory);\nexport const ChannelByValueSelector = appInjector.get(ChannelByValueSelectorFactory);\nexport const FieldSelector = appInjector.get(FieldSelectorFactory);\nexport const FieldToken = appInjector.get(FieldTokenFactory);\nexport const PanelHeaderAction = appInjector.get(PanelHeaderActionFactory);\nexport const FieldListItemFactory = appInjector.get(FieldListItemFactoryFactory);\nexport const LayerTypeListItem = appInjector.get(LayerTypeListItemFactory);\nexport const InfoHelper = appInjector.get(InfoHelperFactory);\nexport const ColorSelector = appInjector.get(ColorSelectorFactory);\nexport const LayerColorSelector = appInjector.get(LayerColorSelectorFactory);\nexport const LayerColorRangeSelector = appInjector.get(LayerColorRangeSelectorFactory);\nexport const ArcLayerColorSelector = appInjector.get(ArcLayerColorSelectorFactory);\nexport {\n  appInjector,\n  TimeRangeSliderFactory,\n  RangeSliderFactory,\n  VisConfigSliderFactory,\n  VisConfigSwitchFactory,\n  LayerConfigGroupFactory,\n  LayerColumnConfigFactory,\n  LayerTypeListItemFactory,\n  ChannelByValueSelectorFactory,\n  FieldListItemFactoryFactory,\n  InfoHelperFactory,\n  ColorSelectorFactory,\n  LayerColorSelectorFactory,\n  LayerColorRangeSelectorFactory,\n  ArcLayerColorSelectorFactory\n};\n\n// hooks\nexport {default as useFeatureFlags} from './hooks/use-feature-flags';\nexport {default as useDndLayers} from './hooks/use-dnd-layers';\nexport {default as useDndEffects} from './hooks/use-dnd-effects';\nexport {CloudListProvider, useCloudListProvider} from './hooks/use-cloud-list-provider';\n\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {ComponentType, MouseEventHandler} from 'react';\nimport {TooltipProps} from 'react-tooltip';\nimport classnames from 'classnames';\nimport styled from 'styled-components';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {Tooltip} from '../common/styled-components';\nimport {BaseProps} from '../common/icons';\n\nexport type PanelHeaderActionIcon = ComponentType<Partial<BaseProps>>;\n\nexport interface PanelHeaderActionProps {\n  id?: string;\n  tooltip?: string;\n  hoverColor?: string;\n  className?: string;\n  active?: boolean;\n  flush?: boolean;\n  disabled?: boolean;\n  onClick?: MouseEventHandler;\n  tooltipType?: TooltipProps['type'];\n  IconComponent: PanelHeaderActionIcon;\n  testId?: string;\n}\n\ntype HeaderActionWrapperProps = {\n  flush?: boolean;\n  active?: boolean;\n  hoverColor?: string | null;\n  testId?: string;\n};\n\nconst HeaderActionWrapper = styled.div.attrs((props: HeaderActionWrapperProps) => ({\n  dataTestId: props.testId\n}))<HeaderActionWrapperProps>`\n  margin-left: ${props => (props.flush ? 0 : 8)}px;\n  display: flex;\n  align-items: center;\n  color: ${props =>\n    props.active ? props.theme.panelHeaderIconActive : props.theme.panelHeaderIcon};\n\n  cursor: pointer;\n\n  :hover {\n    color: ${props =>\n      props.hoverColor ? props.theme[props.hoverColor] : props.theme.panelHeaderIconHover};\n  }\n\n  &.disabled {\n    cursor: none;\n    pointer-events: none;\n    opacity: 0.3;\n  }\n`;\n\nPanelHeaderActionFactory.deps = [];\n// Need to use react class to access props.component\nexport default function PanelHeaderActionFactory(): React.FC<PanelHeaderActionProps> {\n  const PanelHeaderActionUnmemoized: React.FC<PanelHeaderActionProps> = ({\n    onClick,\n    tooltip,\n    id,\n    active = false,\n    flush,\n    hoverColor,\n    tooltipType,\n    disabled,\n    className,\n    IconComponent,\n    testId\n  }) => {\n    return (\n      <HeaderActionWrapper\n        className={classnames('panel--header__action', {\n          disabled,\n          ...(className ? {[className]: true} : {})\n        })}\n        active={active}\n        hoverColor={hoverColor}\n        flush={flush}\n      >\n        {IconComponent ? (\n          <IconComponent\n            className=\"panel--header__action__component\"\n            data-testid={testId}\n            data-tip\n            data-for={`${tooltip}_${id}`}\n            height=\"16px\"\n            onClick={onClick}\n          />\n        ) : null}\n        {tooltip ? (\n          <Tooltip id={`${tooltip}_${id}`} effect=\"solid\" delayShow={500} type={tooltipType}>\n            <span>\n              <FormattedMessage id={tooltip} />\n            </span>\n          </Tooltip>\n        ) : null}\n      </HeaderActionWrapper>\n    );\n  };\n\n  const PanelHeaderAction = React.memo(PanelHeaderActionUnmemoized);\n  PanelHeaderAction.displayName = 'PanelHeaderAction';\n  return PanelHeaderAction;\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {ReactElement, JSXElementConstructor} from 'react';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport TippyTooltip from '../common/tippy-tooltip';\n\nexport type MapControlTooltipProps = {\n  id: string;\n  message: string;\n  children?: ReactElement<any, string | JSXElementConstructor<any>>;\n};\n\nfunction MapControlTooltipFactory() {\n  const MapControlTooltip: React.FC<MapControlTooltipProps> = React.memo(\n    ({id, message, children}) => (\n      <TippyTooltip\n        placement=\"left\"\n        render={() => (\n          <div id={id}>\n            <FormattedMessage id={message} />\n          </div>\n        )}\n      >\n        {children}\n      </TippyTooltip>\n    )\n  );\n\n  MapControlTooltip.displayName = 'MapControlTooltip';\n\n  return MapControlTooltip;\n}\n\nexport default MapControlTooltipFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {PropsWithChildren, useCallback, useContext, useMemo, useRef, useState} from 'react';\nimport {CloudProviderContext} from '../context';\nimport {Provider} from '@kepler.gl/cloud-providers';\n\ntype CloudListProviderProps = PropsWithChildren<{\n  providers: Provider[];\n}>;\n\nexport const CloudListProvider: React.FC<CloudListProviderProps> = ({children, providers = []}) => {\n  const [currentCloudProvider, setCurrentCloudProvider] = useState<Provider | null>(null);\n  const cloudProviders = useRef(providers);\n\n  const setProvider = useCallback(\n    provider => {\n      setCurrentCloudProvider(currentCloudProvider === provider ? null : provider);\n    },\n    [currentCloudProvider]\n  );\n\n  const value = useMemo(\n    () => ({\n      provider: currentCloudProvider,\n      setProvider: setProvider,\n      cloudProviders: cloudProviders.current\n    }),\n    [currentCloudProvider, setCurrentCloudProvider]\n  );\n\n  return <CloudProviderContext.Provider value={value}>{children}</CloudProviderContext.Provider>;\n};\n\n/**\n * this hook provides access the CloudList provider context\n */\nexport const useCloudListProvider = () => useContext(CloudProviderContext);\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {PropsWithChildren} from 'react';\nimport styled from 'styled-components';\nimport classnames from 'classnames';\n\nconst StyledPanelTitle = styled.div.attrs(props => ({\n  className: classnames('panel-title', props.className)\n}))`\n  color: ${props => props.theme.titleTextColor};\n  font-size: ${props => props.theme.sidePanelTitleFontsize};\n  line-height: ${props => props.theme.sidePanelTitleLineHeight};\n  font-weight: 400;\n  letter-spacing: 1.25px;\n`;\n\nconst PanelHeaderRow = styled.div.attrs({\n  className: 'layer-manager-header'\n})`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 16px;\n  margin-bottom: 32px;\n`;\n\nexport type PanelTitleProps = PropsWithChildren<{\n  title: string;\n  className?: string;\n}>;\n\nconst PanelTitleFactory = () => {\n  const PanelTitle: React.FC<PanelTitleProps> = ({title, className, children}) => (\n    <PanelHeaderRow>\n      <StyledPanelTitle className={className || 'panel-title'}>{title}</StyledPanelTitle>\n      {children}\n    </PanelHeaderRow>\n  );\n\n  return PanelTitle;\n};\n\nexport default PanelTitleFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {\n  MapStateToPropsParam,\n  MapDispatchToPropsParam,\n  InferableComponentEnhancerWithProps\n} from 'react-redux';\nimport {console as Console} from 'global/window';\nimport KeplerGlContext from './context';\n\nexport type FactoryElement = (...args) => React.ComponentType;\nexport type Factory = FactoryElement & {\n  deps: FactoryElement[];\n};\n\nexport type InjectorType = {\n  provide: (factory: any, replacement: any) => InjectorType;\n  get: (fac: any, parent?: any) => any;\n};\n\nconst MissingComp = () => <div />;\n\nexport const ERROR_MSG = {\n  wrongRecipeType:\n    `injectComponents takes an array of factories replacement pairs as input, ` +\n    `each pair be a array as [originalFactory, replacement].`,\n\n  noDep: (fac, parent) =>\n    `${fac.name} is required as a dependency of ${parent.name}, ` +\n    `but is not provided to injectComponents. It will not be rendered.`,\n\n  notFunc: 'factory and its replacement should be a function'\n};\n\nexport function injector(map = new Map()): InjectorType {\n  const cache = new Map(); // map<factory, factory -> ?>\n  const get = (fac, parent) => {\n    const factory = map.get(fac);\n    // factory is not injected\n    if (!factory) {\n      Console.error(ERROR_MSG.noDep(fac, parent));\n      return MissingComp;\n    }\n\n    // check if custom factory deps is declared\n    const instances =\n      cache.get(factory) ||\n      factory(...(factory.deps ? factory.deps.map(dep => get(dep, factory)) : []));\n\n    cache.set(fac, instances);\n    return instances;\n  };\n\n  // if you have two functions that happen to have the exactly same text\n  // it will be override: 2018-02-05\n  return {\n    provide: (factory, replacement) => {\n      if (!typeCheckRecipe([factory, replacement])) {\n        return injector(map);\n      }\n      return injector(new Map(map).set(factory, replacement));\n    },\n    get\n  };\n}\n\n// entryPoint\nexport function flattenDeps(allDeps: Factory[], factory: any): Factory[] {\n  const addToDeps = allDeps.concat([factory]);\n  return Array.isArray(factory.deps) && factory.deps.length\n    ? factory.deps.reduce((accu, dep) => flattenDeps(accu, dep), addToDeps)\n    : addToDeps;\n}\n\nexport function provideRecipesToInjector(recipes: [Factory, Factory][], appInjector: InjectorType) {\n  const provided = new Map();\n\n  return recipes.reduce((inj, recipe) => {\n    if (!typeCheckRecipe(recipe)) {\n      return inj;\n    }\n\n    // collect dependencies of custom factories, if there is any.\n    // Add them to the appInjector\n    const customDependencies = flattenDeps([], recipe[1]);\n    inj = customDependencies.reduce((ij, factory) => {\n      if (provided.get(factory)) {\n        Console.warn(\n          `${factory.name} already injected from ${provided.get(factory).name}, injecting ${\n            recipe[0].name\n          } after ${provided.get(factory).name} will override it`\n        );\n      }\n      return ij.provide(factory, factory);\n    }, inj);\n\n    provided.set(recipe[0], recipe[1]);\n    return inj.provide(...recipe);\n  }, appInjector);\n}\n\nexport function typeCheckRecipe(recipe) {\n  if (!Array.isArray(recipe) || recipe.length < 2) {\n    Console.error('Error injecting [factory, replacement]', recipe);\n    Console.error(ERROR_MSG.wrongRecipeType);\n    return false;\n  }\n\n  const [factory, replacement] = recipe;\n  if (typeof factory !== 'function') {\n    Console.error('Error injecting factory: ', factory);\n    Console.error(ERROR_MSG.notFunc);\n    return false;\n  } else if (typeof replacement !== 'function') {\n    Console.error('Error injecting replacement for: ', factory);\n    Console.error(ERROR_MSG.notFunc);\n    return false;\n  }\n\n  return true;\n}\n\nexport interface WithState<RootState> {\n  <TStateProps = {}, TDispatchProps = {}, TOwnProps = {}, State = RootState>(\n    lenses: any[],\n    mapStateToProps: MapStateToPropsParam<TStateProps, TOwnProps, State>,\n    mapDispatchToProps?: MapDispatchToPropsParam<TDispatchProps, TOwnProps>\n  ): InferableComponentEnhancerWithProps<TStateProps & TDispatchProps, TOwnProps>;\n}\n\nconst identity = state => state;\n// Helper to add reducer state to custom component\nexport function withState(lenses: any[] = [], mapStateToProps = identity, actions = {}) {\n  return Component => {\n    const WrappedComponent = ({state, ...props}) => (\n      <KeplerGlContext.Consumer>\n        {context => (\n          <Component\n            {...lenses.reduce(\n              (totalState, lens) => ({\n                ...totalState,\n                ...lens(context.selector(state))\n              }),\n              props\n            )}\n          />\n        )}\n      </KeplerGlContext.Consumer>\n    );\n\n    return connect(\n      state => ({...mapStateToProps(state), state}),\n      dispatch =>\n        Object.keys(actions).reduce(\n          (accu, key) => ({\n            ...accu,\n            [key]: bindActionCreators(actions[key], dispatch)\n          }),\n          {}\n        )\n    )(WrappedComponent);\n  };\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useMemo} from 'react';\nimport {PanelLabel, SidePanelSection} from '../../common/styled-components';\nimport ItemSelector from '../../common/item-selector/item-selector';\nimport DatasetTagFactory from './dataset-tag';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {DatasetItemProps, SourceDataSelectorProps} from './types';\n\nconst defaultPlaceHolder = 'Select A Dataset';\n\nSourceDataSelectorFactory.deps = [DatasetTagFactory];\n\nexport default function SourceDataSelectorFactory(\n  DatasetTag: ReturnType<typeof DatasetTagFactory>\n): React.FC<SourceDataSelectorProps> {\n  const DatasetItem = ({value}: DatasetItemProps) => <DatasetTag dataset={value} />;\n\n  const SourceDataSelector: React.FC<SourceDataSelectorProps> = ({\n    dataId,\n    datasets,\n    disabled,\n    onSelect,\n    defaultValue,\n    inputTheme\n  }: SourceDataSelectorProps) => {\n    const dsOptions = useMemo(\n      () =>\n        Object.values(datasets).map(ds => ({\n          label: ds.label,\n          value: ds.id,\n          color: ds.color\n        })),\n      [datasets]\n    );\n\n    const selectedItems = useMemo(\n      () => (dataId ? ((Array.isArray(dataId) && dataId) || [dataId]).map(id => datasets[id]) : []),\n      [dataId, datasets]\n    );\n\n    return (\n      <SidePanelSection className=\"data-source-selector\">\n        <PanelLabel>\n          <FormattedMessage id={'misc.dataSource'} />\n        </PanelLabel>\n        <ItemSelector\n          inputTheme={inputTheme}\n          selectedItems={selectedItems}\n          options={dsOptions}\n          getOptionValue={'value'}\n          filterOption={'label'}\n          multiSelect={false}\n          onChange={onSelect}\n          placeholder={defaultValue}\n          disabled={Boolean(disabled)}\n          displayOption={'label'}\n          DropDownLineItemRenderComponent={DatasetItem}\n        />\n      </SidePanelSection>\n    );\n  };\n\n  SourceDataSelector.defaultProps = {\n    defaultValue: defaultPlaceHolder\n  };\n  return SourceDataSelector;\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React from 'react';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport styled from 'styled-components';\nimport {DatasetSquare, Tooltip} from '../..';\nimport {UpdateTableColorTypes} from './types';\nimport {RGBColor} from '@kepler.gl/types';\nimport {VisStateActions, ActionHandler} from '@kepler.gl/actions';\n\nfunction nop(_) {}\n\nconst DatasetTagWrapper = styled.div`\n  display: flex;\n  color: ${props => props.theme.textColor};\n  font-size: 11px;\n  letter-spacing: 0.2px;\n  overflow: auto;\n\n  .dataset-color {\n    flex-shrink: 0;\n    margin-top: 3px;\n  }\n\n  .dataset-name {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`;\n\nconst DatasetColorPicker = styled.div`\n  display: flex;\n`;\n\nconst UpdateTableColor = ({children, id}: UpdateTableColorTypes) => (\n  <DatasetColorPicker\n    className=\"dataset-action update-color\"\n    data-tip\n    data-for={`update-color-${id}`}\n  >\n    {children}\n  </DatasetColorPicker>\n);\n\ntype MiniDataset = {\n  id: string;\n  color: RGBColor;\n  label?: string;\n};\n\nexport type DatasetTagProps = {\n  id?: string;\n  dataset: MiniDataset;\n  updateTableColor?: ActionHandler<typeof VisStateActions.updateTableColor>;\n  onClick?: React.MouseEventHandler<HTMLDivElement>;\n  onClickSquare?: React.MouseEventHandler<HTMLDivElement>;\n};\n\nexport default function DatasetTagFactory(): React.FC<DatasetTagProps> {\n  const DatasetTag = ({\n    onClick = nop,\n    onClickSquare = nop,\n    dataset,\n    updateTableColor\n  }: DatasetTagProps) => (\n    <DatasetTagWrapper className=\"source-data-tag\">\n      <UpdateTableColor id={dataset.id}>\n        <DatasetSquare\n          className=\"dataset-color\"\n          backgroundColor={dataset.color}\n          onClick={onClickSquare}\n          data-tip\n          data-for={`update-color-${dataset.id}`}\n        />\n        {updateTableColor ? (\n          <Tooltip id={`update-color-${dataset.id}`} effect=\"solid\">\n            <span>\n              <FormattedMessage id={'Update color'} />\n            </span>\n          </Tooltip>\n        ) : null}\n      </UpdateTableColor>\n      <div className=\"dataset-name\" title={dataset.label} onClick={onClick}>\n        {dataset.label}\n      </div>\n    </DatasetTagWrapper>\n  );\n\n  return DatasetTag;\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {Component, createRef, MouseEvent, ComponentType} from 'react';\nimport styled from 'styled-components';\nimport {FormattedMessage} from 'react-intl';\nimport {rgbToHex} from '@kepler.gl/utils';\nimport SingleColorPalette from './single-color-palette';\nimport ColorRangeSelector from './color-range-selector';\nimport ColorPalette from './color-palette';\nimport {StyledPanelDropdown, PanelLabel} from '../../common/styled-components';\nimport onClickOutside from 'react-onclickoutside';\nimport {ColorRange} from '@kepler.gl/constants';\nimport RangeSliderFactory from '../../common/range-slider';\nimport {NestedPartial, RGBColor, RGBAColor, ColorUI} from '@kepler.gl/types';\n\ntype ColorSelectorInputProps = {\n  active: boolean;\n  disabled?: boolean;\n  inputTheme?: string;\n};\n\nexport type ColorSet = {\n  selectedColor: RGBColor | RGBAColor | ColorRange;\n  setColor: (v: RGBColor | RGBAColor | ColorRange) => void;\n  isRange?: boolean;\n  label?: string;\n};\n\ntype ColorSelectorProps = {\n  colorSets: ColorSet[];\n  colorUI?: ColorUI;\n  inputTheme?: string;\n  disabled?: boolean;\n  useOpacity?: boolean;\n  setColorUI?: (newConfig: NestedPartial<ColorUI>) => void;\n};\n\nconst OpacitySliderWrapper = styled.div`\n  padding: 0px 12px 12px 12px;\n`;\n\nconst OPACITY_SLIDER_PROPS = {\n  type: 'number',\n  range: [0, 1],\n  value0: 0,\n  step: 0.01,\n  isRanged: false,\n  label: 'Opacity',\n  showInput: true\n};\n\nexport const ColorBlock = styled.div<{backgroundcolor: RGBColor}>`\n  width: 32px;\n  height: 18px;\n  border-radius: 1px;\n  background-color: ${props =>\n    Array.isArray(props.backgroundcolor)\n      ? `rgb(${props.backgroundcolor.slice(0, 3).join(',')})`\n      : 'transparent'};\n`;\n\nexport const ColorSelectorInput = styled.div<ColorSelectorInputProps>`\n  ${props => (props.inputTheme === 'secondary' ? props.theme.secondaryInput : props.theme.input)};\n  height: ${props => props.theme.inputBoxHeight};\n\n  .color-selector__selector__label {\n    text-transform: capitalize;\n    font-size: 12px;\n    text-align: center;\n    color: ${props => props.theme.inputPlaceholderColor};\n  }\n`;\n\nexport const InputBoxContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  .color-select__input-group {\n    flex-grow: 1;\n  }\n  .color-select__input-group:nth-child(2) {\n    margin-left: 12px;\n  }\n`;\n\nColorSelectorFactory.deps = [RangeSliderFactory];\n\nfunction ColorSelectorFactory(RangeSlider): ComponentType<ColorSelectorProps> {\n  class ColorSelector extends Component<ColorSelectorProps> {\n    static defaultProps = {\n      colorSets: []\n    };\n\n    state = {\n      showDropdown: false\n    };\n\n    node = createRef<HTMLDivElement>();\n\n    handleClickOutside = e => {\n      if (this.props.colorUI && Number.isInteger(this.props.colorUI.showSketcher)) {\n        // if sketcher is open, let sketch to close itself first\n        return;\n      }\n\n      this._closePanelDropdown();\n    };\n\n    _getEditing = () => {\n      return this.props.colorUI ? this.props.colorUI.showDropdown : this.state.showDropdown;\n    };\n\n    _closePanelDropdown = () => {\n      if (this._getEditing() === false) {\n        return;\n      }\n\n      if (this.props.setColorUI) {\n        this.props.setColorUI({showDropdown: false, showSketcher: false});\n      } else {\n        this.setState({showDropdown: false});\n      }\n    };\n\n    _onSelectColor = (color: RGBColor | ColorRange, e: MouseEvent) => {\n      e.stopPropagation();\n      const editing = this._getEditing();\n      const colorSet = typeof editing === 'number' && this.props.colorSets[editing];\n      if (colorSet) {\n        this._setColor(colorSet, color, colorSet.selectedColor[3]);\n      }\n    };\n\n    _onSelectOpacity = (opacity: number[], e: MouseEvent) => {\n      if (e) e.stopPropagation();\n      const editing = this._getEditing();\n      const colorSet = typeof editing === 'number' && this.props.colorSets[editing];\n      if (colorSet) {\n        this._setColor(colorSet, colorSet.selectedColor, Math.round(opacity[1] * 255));\n      }\n    };\n\n    _setColor = (colorSet: ColorSet, color: RGBColor | RGBAColor | ColorRange, opacity: number) => {\n      if (this.props.useOpacity && Array.isArray(color)) {\n        colorSet.setColor([...color.slice(0, 3), opacity] as RGBAColor);\n      } else {\n        colorSet.setColor(color);\n      }\n    };\n\n    _showDropdown = (e, i) => {\n      e.stopPropagation();\n      e.preventDefault();\n\n      if (this.props.setColorUI) {\n        this.props.setColorUI({showDropdown: i});\n      } else {\n        this.setState({showDropdown: i});\n      }\n    };\n\n    render() {\n      const {colorSets, useOpacity, disabled, inputTheme, colorUI} = this.props;\n\n      const editing = this._getEditing();\n      const currentEditing =\n        typeof editing === 'number' && colorSets[editing] && typeof colorSets[editing] === 'object';\n\n      return (\n        <div className=\"color-selector\" ref={this.node}>\n          <InputBoxContainer>\n            {colorSets.map((cSet, i) => (\n              <div className=\"color-select__input-group\" key={i}>\n                <ColorSelectorInput\n                  className=\"color-selector__selector\"\n                  active={editing === i}\n                  disabled={disabled}\n                  inputTheme={inputTheme}\n                  onMouseDown={e => this._showDropdown(e, i)}\n                >\n                  {cSet.isRange ? (\n                    <ColorPalette colors={(cSet.selectedColor as ColorRange).colors} />\n                  ) : (\n                    <ColorBlock\n                      className=\"color-selector__selector__block\"\n                      backgroundcolor={cSet.selectedColor as RGBColor}\n                    />\n                  )}\n                  {cSet.label ? (\n                    <div className=\"color-selector__selector__label\">{cSet.label}</div>\n                  ) : null}\n                </ColorSelectorInput>\n              </div>\n            ))}\n          </InputBoxContainer>\n          {currentEditing ? (\n            <StyledPanelDropdown className=\"color-selector__dropdown\">\n              {colorSets[editing as number].isRange ? (\n                <ColorRangeSelector\n                  selectedColorRange={colorSets[editing as number].selectedColor as ColorRange}\n                  onSelectColorRange={this._onSelectColor}\n                  setColorPaletteUI={this.props.setColorUI}\n                  colorPaletteUI={colorUI as ColorUI}\n                />\n              ) : (\n                <SingleColorPalette\n                  selectedColor={rgbToHex(colorSets[editing as number].selectedColor as RGBColor)}\n                  onSelectColor={this._onSelectColor}\n                />\n              )}\n              {useOpacity ? (\n                <OpacitySliderWrapper>\n                  <PanelLabel>\n                    <FormattedMessage id=\"color.opacity\" />\n                  </PanelLabel>\n                  <RangeSlider\n                    {...OPACITY_SLIDER_PROPS}\n                    value1={colorSets[editing as number].selectedColor[3] / 255}\n                    onChange={this._onSelectOpacity}\n                  />\n                </OpacitySliderWrapper>\n              ) : null}\n            </StyledPanelDropdown>\n          ) : null}\n        </div>\n      );\n    }\n  }\n  return onClickOutside(ColorSelector) as ComponentType<ColorSelectorProps>;\n}\n\nexport default ColorSelectorFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React from 'react';\nimport {HexColor, RGBColor} from '@kepler.gl/types';\nimport styled from 'styled-components';\nimport classnames from 'classnames';\n\ntype ColorPaletteProps = {\n  colors: RGBColor | HexColor[];\n  height?: number;\n  className?: string;\n  isSelected?: boolean;\n  isReversed?: boolean;\n};\n\nconst defaultProps = {\n  height: 10,\n  colors: [],\n  className: '',\n  isSelected: false,\n  isReversed: false\n};\n\nconst PaletteWrapper = styled.div.attrs({\n  className: 'color-range-palette__inner'\n})`\n  border-radius: 2px;\n  display: flex;\n  flex-direction: row;\n  flex-grow: 1;\n  justify-content: space-between;\n  overflow: hidden;\n`;\n\nconst PaletteContainer = styled.div.attrs(props => ({\n  className: classnames('color-range-palette', props.className)\n}))<{isSelected?: boolean}>`\n  display: flex;\n  flex-grow: 1;\n  border-width: 1px;\n  border-style: solid;\n  border-color: ${props => (props.isSelected ? '#FFFFFF' : 'transparent')};\n  padding: 4px;\n  border-radius: 4px;\n`;\n\nconst StyledColorBlock = styled.div.attrs({\n  className: 'color-range-palette__block'\n})`\n  flex-grow: 1;\n`;\n\nconst ColorPalette: React.FC<ColorPaletteProps> = ({\n  colors,\n  height,\n  className,\n  isSelected,\n  isReversed\n}) => (\n  <PaletteContainer className={className} isSelected={isSelected}>\n    <PaletteWrapper style={{height, transform: `scale(${isReversed ? -1 : 1}, 1)`}}>\n      {colors.map((color: number | string, index: number) => (\n        <StyledColorBlock key={`${color}-${index}`} style={{backgroundColor: String(color)}} />\n      ))}\n    </PaletteWrapper>\n  </PaletteContainer>\n);\n\nColorPalette.defaultProps = defaultProps;\n\nexport default ColorPalette;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {Component} from 'react';\nimport styled, {withTheme} from 'styled-components';\nimport {SketchPicker, ColorChangeHandler} from 'react-color';\nimport onClickOutside from 'react-onclickoutside';\nimport {createSelector} from 'reselect';\n// This was put in because 3rd party library react-color doesn't yet cater for customized color of child component <SketchField> which contains HEX/RGB input text box\n// Issue raised: https://github.com/casesandberg/react-color/issues/631\n\ntype CustomPickerProps = {\n  color: string;\n  theme: {\n    panelBackground: string;\n  };\n  onChange: ColorChangeHandler;\n  onSwatchClose: () => void;\n};\n\nconst StyledPicker = styled.div`\n  .sketch-picker {\n    span {\n      color: ${props => props.theme.labelColor} !important;\n      font-family: ${props => props.theme.fontFamily};\n    }\n    input {\n      text-align: center;\n      font-family: ${props => props.theme.fontFamily};\n      color: ${props => props.theme.inputColor} !important;\n      border-color: ${props => props.theme.secondaryInputBgd} !important;\n      box-shadow: none !important;\n      background-color: ${props => props.theme.inputBgdHover} !important;\n    }\n  }\n`;\n\nconst PRESET_COLORS = [];\n\nclass CustomPicker extends Component<CustomPickerProps> {\n  themeSelector = (props: CustomPickerProps) => props.theme;\n  pickerStyleSelector = createSelector(this.themeSelector, theme => ({\n    picker: {\n      width: '200px',\n      padding: '10px 10px 8px',\n      boxSizing: 'initial',\n      background: theme.panelBackground\n    }\n  }));\n\n  handleClickOutside = (e: Event) => {\n    this.props.onSwatchClose();\n  };\n\n  render() {\n    const {color, onChange} = this.props;\n    const pickerStyle = this.pickerStyleSelector(this.props);\n\n    return (\n      <StyledPicker>\n        <SketchPicker\n          color={color}\n          onChange={onChange}\n          presetColors={PRESET_COLORS}\n          styles={pickerStyle}\n          disableAlpha\n        />\n      </StyledPicker>\n    );\n  }\n}\n\nexport default withTheme(onClickOutside(CustomPicker) as React.ComponentType<CustomPickerProps>);\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport {openDeleteModal, VisStateActions, ActionHandler} from '@kepler.gl/actions';\nimport {DataContainerInterface} from '@kepler.gl/utils';\nimport {RGBColor} from '@kepler.gl/types';\n\nimport {SidePanelSection} from '../../common/styled-components';\nimport DatasetTitleFactory from './dataset-title';\nimport DatasetInfoFactory from './dataset-info';\n\nconst SourceDataCatalogWrapper = styled.div`\n  transition: ${props => props.theme.transition};\n`;\n\ntype MiniDataset = {\n  id: string;\n  color: RGBColor;\n  label?: string;\n  dataContainer: DataContainerInterface;\n};\n\ntype MiniDatasets = {\n  [key: string]: MiniDataset;\n};\n\nexport type SourceDataCatalogProps = {\n  datasets: MiniDatasets;\n  showDeleteDataset?: boolean;\n  onTitleClick?: () => void;\n  showDatasetTable?: ActionHandler<typeof VisStateActions.showDatasetTable>;\n  updateTableColor: ActionHandler<typeof VisStateActions.updateTableColor>;\n  removeDataset?: ActionHandler<typeof openDeleteModal>;\n};\n\nSourceDataCatalogFactory.deps = [DatasetTitleFactory, DatasetInfoFactory];\n\nfunction SourceDataCatalogFactory(\n  DatasetTitle: ReturnType<typeof DatasetTitleFactory>,\n  DatasetInfo: ReturnType<typeof DatasetInfoFactory>\n) {\n  const SourceDataCatalog: React.FC<SourceDataCatalogProps> = ({\n    datasets,\n    showDatasetTable,\n    removeDataset,\n    onTitleClick,\n    updateTableColor,\n    showDeleteDataset = false\n  }: SourceDataCatalogProps) => (\n    <SourceDataCatalogWrapper className=\"source-data-catalog\">\n      {Object.values(datasets).map(dataset => (\n        <SidePanelSection key={dataset.id}>\n          <DatasetTitle\n            showDatasetTable={showDatasetTable}\n            showDeleteDataset={showDeleteDataset}\n            removeDataset={removeDataset}\n            dataset={dataset}\n            onTitleClick={onTitleClick}\n            updateTableColor={updateTableColor}\n          />\n          {showDatasetTable ? <DatasetInfo dataset={dataset} /> : null}\n        </SidePanelSection>\n      ))}\n    </SourceDataCatalogWrapper>\n  );\n\n  return SourceDataCatalog;\n}\n\nexport default SourceDataCatalogFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {ComponentType} from 'react';\nimport styled from 'styled-components';\nimport PanelHeaderActionFactory from '../../side-panel/panel-header-action';\nimport {Trash} from '../../common/icons';\nimport {createLinearGradient} from '@kepler.gl/utils';\nimport {StyledPanelHeader, StyledPanelHeaderProps} from '../../common/styled-components';\nimport {RGBColor, Filter} from '@kepler.gl/types';\nimport {KeplerTable} from '@kepler.gl/table';\n\ninterface StyledFilterHeaderProps extends StyledPanelHeaderProps {\n  $labelRCGColorValues: RGBColor[];\n}\n\nexport const StyledFilterHeader = styled(StyledPanelHeader)<StyledFilterHeaderProps>`\n  cursor: pointer;\n  padding: 10px 12px;\n\n  .field-selector {\n    width: 100%;\n    flex: 2;\n  }\n\n  border-left: 3px solid;\n  ${props =>\n    props.$labelRCGColorValues && props.$labelRCGColorValues.length > 0\n      ? `border-image: ${createLinearGradient('bottom', props.$labelRCGColorValues)} 3;`\n      : 'border-color: transparent;'};\n`;\n\nconst StyledChildrenContainer = styled.div`\n  display: flex;\n  flex: 1;\n  overflow: hidden;\n`;\n\nexport type FilterPanelHeaderProps = {\n  className?: string;\n  datasets: KeplerTable[];\n  filter: Filter;\n  removeFilter: () => void;\n  actionIcons?: {\n    delete: ComponentType;\n  };\n  children: React.ReactNode;\n};\n\nFilterPanelHeaderFactory.deps = [PanelHeaderActionFactory];\n\nfunction FilterPanelHeaderFactory(\n  PanelHeaderAction: ReturnType<typeof PanelHeaderActionFactory>\n): React.ComponentType<FilterPanelHeaderProps> {\n  const defaultActionIcons = {\n    delete: Trash\n  };\n  const FilterPanelHeader: React.FC<FilterPanelHeaderProps> = ({\n    children,\n    datasets,\n    filter,\n    removeFilter,\n    actionIcons = defaultActionIcons\n  }: FilterPanelHeaderProps) => (\n    <StyledFilterHeader\n      className=\"filter-panel__header\"\n      $labelRCGColorValues={datasets.map((d: KeplerTable) => d.color)}\n    >\n      <StyledChildrenContainer>{children}</StyledChildrenContainer>\n      <PanelHeaderAction\n        id={filter.id}\n        tooltip=\"tooltip.delete\"\n        tooltipType=\"error\"\n        onClick={removeFilter}\n        hoverColor={'errorColor'}\n        IconComponent={actionIcons.delete}\n      />\n    </StyledFilterHeader>\n  );\n\n  return FilterPanelHeader;\n}\n\nexport default FilterPanelHeaderFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useCallback, useMemo} from 'react';\nimport {StyledFilterContent} from '../../common/styled-components';\nimport FilterPanelHeaderFactory from '../../side-panel/filter-panel/filter-panel-header';\nimport PanelHeaderActionFactory from '../../side-panel/panel-header-action';\nimport SourceDataSelectorFactory from '../../side-panel/common/source-data-selector';\nimport FieldSelectorFactory from '../../common/field-selector';\nimport {getSupportedFilterFields} from './new-filter-panel';\nimport {FilterPanelWithFieldSelectComponent} from './types';\nimport {KeplerTable} from '@kepler.gl/table';\n\nFieldPanelWithFieldSelectFactory.deps = [\n  FilterPanelHeaderFactory,\n  SourceDataSelectorFactory,\n  FieldSelectorFactory,\n  PanelHeaderActionFactory\n];\n\nfunction FieldPanelWithFieldSelectFactory(\n  FilterPanelHeader: ReturnType<typeof FilterPanelHeaderFactory>,\n  SourceDataSelector: ReturnType<typeof SourceDataSelectorFactory>,\n  FieldSelector: ReturnType<typeof FieldSelectorFactory>,\n  PanelHeaderAction: ReturnType<typeof PanelHeaderActionFactory>\n) {\n  const FilterPanelWithFieldSelect: FilterPanelWithFieldSelectComponent = React.memo(\n    ({\n      children,\n      allAvailableFields,\n      datasets,\n      filter,\n      idx,\n      removeFilter,\n      setFilter,\n      panelActions = []\n    }) => {\n      const onFieldSelector = useCallback(field => setFilter(idx, 'name', field.name), [\n        idx,\n        setFilter\n      ]);\n\n      const onSourceDataSelector = useCallback(value => setFilter(idx, 'dataId', [value]), [\n        idx,\n        setFilter\n      ]);\n\n      const fieldValue = useMemo(\n        () => (Array.isArray(filter.name) ? filter.name[0] : filter.name),\n        [filter.name]\n      );\n\n      const dataset: KeplerTable = datasets[filter.dataId[0]];\n      const supportedFields = useMemo(\n        () => getSupportedFilterFields(dataset.supportedFilterTypes, allAvailableFields),\n        [dataset.supportedFilterTypes, allAvailableFields]\n      );\n      return (\n        <>\n          <FilterPanelHeader datasets={[dataset]} filter={filter} removeFilter={removeFilter}>\n            <FieldSelector\n              inputTheme=\"secondary\"\n              fields={supportedFields}\n              value={fieldValue}\n              erasable={false}\n              onSelect={onFieldSelector}\n            />\n            {panelActions.map(panelAction => (\n              <PanelHeaderAction\n                id={panelAction.id}\n                key={panelAction.id}\n                onClick={panelAction.onClick}\n                tooltip={panelAction.tooltip}\n                IconComponent={panelAction.iconComponent}\n                active={panelAction.active}\n              />\n            ))}\n          </FilterPanelHeader>\n          <StyledFilterContent className=\"filter-panel__content\">\n            {Object.keys(datasets).length > 1 && (\n              <SourceDataSelector\n                inputTheme=\"secondary\"\n                datasets={datasets}\n                disabled={filter.freeze}\n                dataId={filter.dataId}\n                onSelect={onSourceDataSelector}\n              />\n            )}\n            {children}\n          </StyledFilterContent>\n        </>\n      );\n    }\n  );\n\n  FilterPanelWithFieldSelect.displayName = 'FilterPanelWithFieldSelect';\n\n  return FilterPanelWithFieldSelect;\n}\n\nexport default FieldPanelWithFieldSelectFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useState, useEffect, createContext} from 'react';\nimport isEqual from 'lodash.isequal';\nimport pick from 'lodash.pick';\nimport {MapViewState} from '@deck.gl/core/typed';\nimport {pickViewportPropsFromMapState} from '@kepler.gl/reducers';\n\nimport {MapState} from '@kepler.gl/types';\n\nexport type MapViewStateContextType = {\n  getInternalViewState: (index?: number) => MapViewState;\n  setInternalViewState: (viewState: MapViewState, index?: number) => void;\n};\n\nexport const MapViewStateContext: React.Context<MapViewStateContextType> = createContext({\n  getInternalViewState: (index = 0) => ({latitude: 0, longitude: 0, zoom: 0}),\n  setInternalViewState: (viewState, index = 0) => {}\n});\n\n/**\n * This context provider is used to localize the map view state so\n * that changes to the map view state do not affect the rest of the app,\n * mainly to prevent issues we experienced with basemap/deck viewport syncing.\n */\n\nexport const MapViewStateContextProvider = ({\n  mapState,\n  children\n}: {\n  mapState: MapState;\n  children: React.ReactNode;\n}) => {\n  const {isSplit, isViewportSynced} = mapState || {};\n\n  // Store locally map view states by mapIndex\n  const [viewStates, setViewStates] = useState([mapState]);\n\n  // Detect and apply outside viewport changes\n  // (e.g. from geocoder or when switching to 3d mode)\n  useEffect(() => {\n    if (!mapState) return;\n    const primaryState = viewStates[0];\n    if (primaryState === mapState) return;\n    const props = Object.keys(primaryState).filter(key => !key.startsWith('transition'));\n    const hasChanged = (a, b) => !isEqual(pick(a, props), pick(b, props));\n    if (isSplit && !isViewportSynced) {\n      if (mapState.splitMapViewports?.some((s, i) => hasChanged(s, viewStates[i]))) {\n        setViewStates(mapState.splitMapViewports as MapState[]);\n      }\n    } else {\n      if (hasChanged(primaryState, mapState)) {\n        setViewStates([pickViewportPropsFromMapState(mapState)] as MapState[]);\n      }\n    }\n    // Only update internalViewState when viewState changes\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [mapState]);\n\n  const value = {\n    getInternalViewState: (index = 0) => viewStates[index] ?? viewStates[0],\n    setInternalViewState: (newViewState, index = 0) => {\n      setViewStates(prevViewStates => {\n        if (isSplit && !isViewportSynced) {\n          const nextViewStates = [...prevViewStates];\n          nextViewStates[index] = newViewState as MapState;\n          return nextViewStates;\n        } else {\n          return [newViewState] as MapState[];\n        }\n      });\n    }\n  } as MapViewStateContextType;\n  return <MapViewStateContext.Provider value={value}>{children}</MapViewStateContext.Provider>;\n};\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {ComponentType} from 'react';\nimport styled from 'styled-components';\nimport {MapIcon} from '../common/icons';\nimport {StyledExportSection} from '../common/styled-components';\nimport ErrorDisplay from './error-display';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {IconProps} from '@kepler.gl/cloud-providers';\n\nconst StyledUploader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n`;\n\nconst StyledMapIcon = styled.div`\n  color: ${props => props.theme.textColorLT};\n  margin-right: 16px;\n  margin-top: 4px;\n`;\n\nconst StyledSvg = styled.svg`\n  margin-right: 16px;\n\n  line {\n    stroke: ${props => props.theme.selectBorderColorLT};\n    stroke-width: 4;\n    stroke-linecap: square;\n    stroke-dasharray: 5 12;\n    animation: dash-animation 25s infinite linear;\n  }\n  circle {\n    fill: ${props => props.theme.selectBorderColorLT};\n  }\n\n  @keyframes dash-animation {\n    to {\n      stroke-dashoffset: -1000;\n    }\n  }\n`;\n\nconst Line = () => (\n  <StyledSvg height=\"5px\" width=\"150px\">\n    <line x1=\"0\" y1=\"4\" x2=\"150\" y2=\"4\" />\n  </StyledSvg>\n);\n\ninterface UploadAnimationProps {\n  icon?: ComponentType<IconProps> | null;\n}\n\nexport const UploadAnimation: React.FC<UploadAnimationProps> = props => (\n  <StyledUploader>\n    <StyledMapIcon>\n      <MapIcon height=\"48px\" />\n    </StyledMapIcon>\n    <Line />\n    {props.icon && <props.icon height=\"64px\" />}\n  </StyledUploader>\n);\n\ninterface StatusPanelProps {\n  error?: string | null;\n  isLoading?: boolean;\n  providerIcon?: ComponentType<IconProps> | null;\n}\n\nconst StatusPanel: React.FC<StatusPanelProps> = ({error, isLoading, providerIcon}) => (\n  <StyledExportSection>\n    <div className=\"description\">\n      <div className=\"title\">\n        {isLoading ? (\n          <FormattedMessage id={'modal.statusPanel.mapUploading'} />\n        ) : error ? (\n          <FormattedMessage id={'modal.statusPanel.error'} />\n        ) : null}\n      </div>\n    </div>\n    <div className=\"selection\">\n      {isLoading && <UploadAnimation icon={providerIcon} />}\n      {error && <ErrorDisplay error={error} />}\n    </div>\n  </StyledExportSection>\n);\n\nexport default StatusPanel;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useCallback, useState} from 'react';\nimport styled from 'styled-components';\nimport classnames from 'classnames';\nimport {FormattedMessage} from 'react-intl';\nimport Switch from '../../common/switch';\nimport InfoHelperFactory from '../../common/info-helper';\nimport {VertThreeDots} from '../../common/icons';\nimport {Layer} from '@kepler.gl/layers';\nimport {LayerVisConfig} from '@kepler.gl/types';\n\nexport type LayerConfigGroupLabelProps = {\n  label?: string;\n  description?: string;\n  collapsed?: boolean;\n};\n\nexport type LayerConfigGroupProps = {\n  layer?: Layer;\n  label: string;\n  property?: string;\n  description?: string;\n  collapsible?: boolean;\n  expanded?: boolean;\n  disabled?: boolean;\n  onChange?: (newVisConfig: Partial<LayerVisConfig>) => void;\n  IconComponent?: React.ElementType;\n  children?: React.ReactNode;\n};\n\nexport const StyledLayerConfigGroupAction = styled.div`\n  display: flex;\n  align-items: center;\n  color: ${props => props.theme.textColor};\n`;\n\nexport const ConfigGroupCollapsibleContent = styled.div.attrs({\n  className: 'layer-config-group__content__collapsible'\n})`\n  transition: max-height 0.3s ease-out;\n  height: max-content;\n  max-height: 1200px;\n  overflow: auto;\n`;\n\nexport const ConfigGroupCollapsibleHeader = styled.div.attrs({\n  className: 'layer-config-group__header__collapsible'\n})`\n  overflow: visible;\n  overflow: hidden;\n  max-height: 0;\n`;\n\nexport const StyledLayerConfigGroup = styled.div`\n  padding-left: ${props => props.theme.layerConfigGroupPaddingLeft}px;\n  margin-bottom: ${props => props.theme.layerConfigGroupMarginBottom}px;\n\n  &.disabled {\n    opacity: 0.3;\n    pointer-events: none;\n  }\n  &.collapsed {\n    .layer-config-group__header__collapsible {\n      overflow: visible;\n      max-height: 600px;\n    }\n    .layer-config-group__content {\n      .layer-config-group__content__collapsible {\n        overflow: hidden;\n        max-height: 0;\n      }\n    }\n  }\n`;\n\ninterface StyledConfigGroupHeaderProps {\n  collapsible?: boolean;\n}\n\nexport const StyledConfigGroupHeader = styled.div.attrs({\n  className: 'layer-config-group__header'\n})<StyledConfigGroupHeaderProps>`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 12px;\n  cursor: default;\n\n  :hover {\n    ${props => props.collapsible && 'cursor: pointer;'}\n    .layer-config-group__label {\n      color: ${props => props.theme.textColorHl};\n    }\n\n    .layer-config-group__action {\n      color: ${props => props.theme.textColorHl};\n    }\n  }\n`;\n\nconst ConfigGroupContent = styled.div`\n  &.disabled {\n    opacity: 0.3;\n    pointer-events: none;\n    * {\n      pointer-events: none;\n    }\n  }\n`;\n\nLayerConfigGroupLabelFactory.deps = [InfoHelperFactory];\n\nexport function LayerConfigGroupLabelFactory(InfoHelper: ReturnType<typeof InfoHelperFactory>) {\n  const StyledLayerConfigGroupLabel = styled.div`\n    border-left: ${props => props.theme.layerConfigGroupLabelBorderLeft} solid\n      ${props => props.theme.labelColor};\n    line-height: 12px;\n    margin-left: ${props => props.theme.layerConfigGroupLabelMargin};\n    padding-left: ${props => props.theme.layerConfigGroupLabelPadding};\n\n    display: flex;\n    align-items: center;\n\n    span {\n      color: ${props => props.theme.textColor};\n      font-weight: 500;\n      letter-spacing: 0.2px;\n      text-transform: capitalize;\n      margin-left: ${props => props.theme.layerConfigGroupLabelLabelMargin};\n      font-size: ${props => props.theme.layerConfigGroupLabelLabelFontSize};\n    }\n  `;\n\n  const LayerConfigGroupLabel: React.FC<LayerConfigGroupLabelProps> = ({label, description}) => (\n    <StyledLayerConfigGroupLabel className=\"layer-config-group__label\">\n      <span>\n        <FormattedMessage id={label || 'misc.empty'} defaultMessage={label} />\n      </span>\n      {description && <InfoHelper description={description} id={label} />}\n    </StyledLayerConfigGroupLabel>\n  );\n\n  return LayerConfigGroupLabel;\n}\n\nLayerConfigGroupFactory.deps = [LayerConfigGroupLabelFactory];\n\nfunction LayerConfigGroupFactory(\n  LayerConfigGroupLabel: ReturnType<typeof LayerConfigGroupLabelFactory>\n) {\n  const LayerConfigGroup: React.FC<LayerConfigGroupProps> = ({\n    label,\n    children,\n    property,\n    layer,\n    onChange,\n    collapsible,\n    description,\n    disabled,\n    expanded,\n    IconComponent = VertThreeDots\n  }) => {\n    const [collapsed, toggleCollapsed] = useState(!expanded);\n    const onToggleCollapsed = useCallback(() => {\n      collapsible && toggleCollapsed(!collapsed);\n    }, [collapsed, toggleCollapsed, collapsible]);\n\n    return (\n      <StyledLayerConfigGroup className={classnames('layer-config-group', {collapsed, disabled})}>\n        <StyledConfigGroupHeader onClick={onToggleCollapsed} collapsible={collapsible}>\n          <LayerConfigGroupLabel label={label} description={description} collapsed={collapsed} />\n          <StyledLayerConfigGroupAction className=\"layer-config-group__action\">\n            {property ? (\n              <Switch\n                checked={layer?.config.visConfig[property]}\n                id={`${layer?.id}-${property}`}\n                onChange={() => onChange?.({[property]: !layer?.config.visConfig[property]})}\n              />\n            ) : null}\n            {collapsible ? <IconComponent height=\"18px\" /> : null}\n          </StyledLayerConfigGroupAction>\n        </StyledConfigGroupHeader>\n        <ConfigGroupContent\n          className={classnames('layer-config-group__content', {\n            disabled: property && !layer?.config.visConfig[property]\n          })}\n        >\n          {children}\n        </ConfigGroupContent>\n      </StyledLayerConfigGroup>\n    );\n  };\n\n  LayerConfigGroup.defaultProps = {\n    collapsible: false,\n    expanded: false,\n    onChange: () => {},\n    description: '',\n    disabled: false\n  };\n  return LayerConfigGroup;\n}\n\nexport default LayerConfigGroupFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useMemo} from 'react';\nimport styled from 'styled-components';\nimport classnames from 'classnames';\n\nimport {Layer, LayerClassesType} from '@kepler.gl/layers';\nimport {Datasets} from '@kepler.gl/table';\nimport {UIStateActions, VisStateActions, MapStateActions} from '@kepler.gl/actions';\n\nimport {useSortable, SortableContext, verticalListSortingStrategy} from '@dnd-kit/sortable';\nimport {CSS} from '@dnd-kit/utilities';\nimport LayerPanelFactory from './layer-panel';\nimport {findById} from '@kepler.gl/utils';\nimport {dataTestIds, SORTABLE_LAYER_TYPE, SORTABLE_SIDE_PANEL_TYPE} from '@kepler.gl/constants';\n\nexport type LayerListProps = {\n  datasets: Datasets;\n  layers: Layer[];\n  layerOrder: string[];\n  layerClasses: LayerClassesType;\n  isSortable?: boolean;\n  uiStateActions: typeof UIStateActions;\n  visStateActions: typeof VisStateActions;\n  mapStateActions: typeof MapStateActions;\n};\n\nexport type LayerListFactoryDeps = [typeof LayerPanelFactory];\n\n// make sure the element is always visible while is being dragged\n// item being dragged is appended in body, here to reset its global style\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\ninterface SortableStyledItemProps {\n  transition?: string;\n  transform?: string;\n}\n\nconst SortableStyledItem = styled.div<SortableStyledItemProps>`\n  z-index: ${props => props.theme.dropdownWrapperZ + 1};\n  transition: ${props => props.transition};\n  transform: ${props => props.transform};\n  &.sorting {\n    opacity: 0.3;\n    pointer-events: none;\n  }\n  &.sorting-layers .layer-panel__header {\n    background-color: ${props => props.theme.panelBackgroundHover};\n    font-family: ${props => props.theme.fontFamily};\n    font-weight: ${props => props.theme.fontWeight};\n    font-size: ${props => props.theme.fontSize};\n    line-height: ${props => props.theme.lineHeight};\n    *,\n    *:before,\n    *:after {\n      box-sizing: border-box;\n    }\n    .layer__drag-handle {\n      opacity: 1;\n      color: ${props => props.theme.textColorHl};\n    }\n  }\n`;\n\nconst INITIAL_LAYERS_TO_SHOW: Layer[] = [];\n\nLayerListFactory.deps = [LayerPanelFactory];\n\nfunction LayerListFactory(LayerPanel: ReturnType<typeof LayerPanelFactory>) {\n  // By wrapping layer panel using a sortable element we don't have to implement the drag and drop logic into the panel itself;\n  // Developers can provide any layer panel implementation and it will still be sortable\n  const SortableItem = ({layer, idx, panelProps, layerActions, disabled}) => {\n    const {attributes, listeners, setNodeRef, isDragging, transform, transition} = useSortable({\n      id: layer.id,\n      data: {\n        type: SORTABLE_LAYER_TYPE,\n        parent: SORTABLE_SIDE_PANEL_TYPE\n      },\n      disabled\n    });\n\n    return (\n      <SortableStyledItem\n        ref={setNodeRef}\n        className={classnames(\n          {[dataTestIds.sortableLayerItem]: !disabled},\n          {[dataTestIds.staticLayerItem]: disabled},\n          {sorting: isDragging}\n        )}\n        data-testid={disabled ? dataTestIds.staticLayerItem : dataTestIds.sortableLayerItem}\n        transform={CSS.Transform.toString(transform)}\n        transition={transition}\n        {...attributes}\n      >\n        <LayerPanel\n          {...panelProps}\n          {...layerActions}\n          key={layer.id}\n          idx={idx}\n          layer={layer}\n          listeners={listeners}\n          isDraggable={!disabled}\n        />\n      </SortableStyledItem>\n    );\n  };\n\n  const LayerList: React.FC<LayerListProps> = props => {\n    const {\n      layers,\n      datasets,\n      layerOrder,\n      uiStateActions,\n      visStateActions,\n      mapStateActions,\n      layerClasses,\n      isSortable = true\n    } = props;\n    const {toggleModal: openModal} = uiStateActions;\n\n    const layersToShow = useMemo(() => {\n      return layerOrder.reduce((acc, layerId) => {\n        const layer = findById(layerId)(layers.filter(Boolean));\n        if (!layer) {\n          return acc;\n        }\n        return !layer.config.hidden ? [...acc, layer] : acc;\n      }, INITIAL_LAYERS_TO_SHOW);\n    }, [layers, layerOrder]);\n\n    const sidePanelDndItems = useMemo(() => {\n      return layersToShow.map(({id}) => id);\n    }, [layersToShow]);\n\n    const layerTypeOptions = useMemo(\n      () =>\n        Object.keys(layerClasses).map(key => {\n          const layer = new layerClasses[key]({dataId: ''});\n          return {\n            id: key,\n            label: layer.name,\n            icon: layer.layerIcon,\n            requireData: layer.requireData\n          };\n        }),\n      [layerClasses]\n    );\n\n    const layerActions = useMemo(\n      () => ({\n        layerColorUIChange: visStateActions.layerColorUIChange,\n        layerConfigChange: visStateActions.layerConfigChange,\n        layerVisualChannelConfigChange: visStateActions.layerVisualChannelConfigChange,\n        layerTypeChange: visStateActions.layerTypeChange,\n        layerVisConfigChange: visStateActions.layerVisConfigChange,\n        layerTextLabelChange: visStateActions.layerTextLabelChange,\n        removeLayer: visStateActions.removeLayer,\n        zoomToLayer: mapStateActions.fitBounds,\n        duplicateLayer: visStateActions.duplicateLayer,\n        layerSetIsValid: visStateActions.layerSetIsValid\n      }),\n      [visStateActions, mapStateActions]\n    );\n\n    const panelProps = useMemo(\n      () => ({\n        datasets,\n        openModal,\n        layerTypeOptions\n      }),\n      [datasets, openModal, layerTypeOptions]\n    );\n\n    return (\n      <Container>\n        <SortableContext\n          id={SORTABLE_SIDE_PANEL_TYPE}\n          items={sidePanelDndItems}\n          strategy={verticalListSortingStrategy}\n          disabled={!isSortable}\n        >\n          {/* warning: containerId should be similar to the first key in dndItems defined in kepler-gl.js*/}\n          {layersToShow.map(layer => (\n            <SortableItem\n              key={layer.id}\n              layer={layer}\n              idx={layers.findIndex(l => l?.id === layer.id)}\n              panelProps={panelProps}\n              layerActions={layerActions}\n              disabled={!isSortable}\n            />\n          ))}\n        </SortableContext>\n      </Container>\n    );\n  };\n  return LayerList;\n}\nexport default LayerListFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {\n  useState,\n  ComponentType,\n  MouseEventHandler,\n  MouseEvent,\n  ChangeEventHandler\n} from 'react';\nimport classnames from 'classnames';\nimport styled, {css} from 'styled-components';\nimport PanelHeaderActionFactory from '../panel-header-action';\nimport {Tooltip} from '../../common/styled-components';\nimport {\n  Copy,\n  ArrowDown,\n  EyeSeen,\n  EyeUnseen,\n  Trash,\n  VertDots,\n  WarningSign,\n  Reset,\n  Crosshairs\n} from '../../common/icons';\n\nimport {InlineInput, StyledPanelHeader} from '../../common/styled-components';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {dataTestIds} from '@kepler.gl/constants';\nimport {RGBColor} from '@kepler.gl/types';\nimport {BaseProps} from '../../common/icons';\n\nexport type LayerLabelEditorProps = {\n  layerId: string;\n  label?: string;\n  onEdit: ChangeEventHandler;\n  onFocus: ChangeEventHandler;\n  onBlur: ChangeEventHandler;\n};\n\nexport type LayerTitleSectionProps = {\n  layerType?: string | null;\n  layerId: string;\n  label?: string;\n  onUpdateLayerLabel: ChangeEventHandler;\n  onFocus: ChangeEventHandler;\n  onBlur: ChangeEventHandler;\n};\n\nexport type LayerPanelHeaderProps = {\n  layerId: string;\n  isVisible: boolean;\n  isValid: boolean;\n  onToggleVisibility: MouseEventHandler;\n  onUpdateLayerLabel: ChangeEventHandler;\n  onToggleEnableConfig: MouseEventHandler;\n  onRemoveLayer: MouseEventHandler;\n  onZoomToLayer: MouseEventHandler;\n  onDuplicateLayer: MouseEventHandler;\n  onResetIsValid: MouseEventHandler;\n  isConfigActive: boolean;\n  showRemoveLayer?: boolean;\n  label?: string;\n  layerType?: string | null;\n  allowDuplicate?: boolean;\n  isDragNDropEnabled?: boolean;\n  warning?: boolean;\n  labelRCGColorValues?: RGBColor | null;\n  actionIcons?: {\n    remove: ComponentType<Partial<BaseProps>>;\n    visible: ComponentType<Partial<BaseProps>>;\n    hidden: ComponentType<Partial<BaseProps>>;\n    enableConfig: ComponentType<Partial<BaseProps>>;\n    resetIsValid: ComponentType<Partial<BaseProps>>;\n    duplicate: ComponentType<Partial<BaseProps>>;\n    crosshairs: ComponentType<Partial<BaseProps>>;\n  };\n  listeners?: React.ElementType;\n};\n\ntype HeaderActionSectionProps = {\n  isEditingLabel: boolean;\n};\n\nexport type LayerPanelHeaderActionSectionProps = LayerPanelHeaderProps & HeaderActionSectionProps;\n\nexport const defaultProps = {\n  isDragNDropEnabled: true,\n  showRemoveLayer: true\n};\n\nconst getBorderCss = status =>\n  css`\n    border-top: 2px solid ${({theme}) => theme.notificationColors[status]};\n    border-bottom: 2px solid ${({theme}) => theme.notificationColors[status]};\n    border-right: 2px solid ${({theme}) => theme.notificationColors[status]};\n  `;\n\nconst StyledLayerPanelHeader = styled(StyledPanelHeader)`\n  height: ${props => props.theme.layerPanelHeaderHeight}px;\n  position: relative;\n  align-items: stretch;\n\n  .layer__remove-layer {\n    opacity: 0;\n  }\n\n  .layer__drag-handle__placeholder {\n    height: 20px;\n    padding: 10px;\n  }\n\n  ${props => (props.warning ? getBorderCss('warning') : props.isValid ? '' : getBorderCss('error'))}\n\n  :hover {\n    cursor: pointer;\n    background-color: ${props => props.theme.panelBackgroundHover};\n\n    .layer__drag-handle {\n      opacity: 1;\n    }\n\n    .layer__remove-layer {\n      opacity: 1;\n    }\n  }\n`;\n\nconst HeaderLabelSection = styled.div`\n  display: flex;\n  color: ${props => props.theme.textColor};\n  flex-grow: 1;\n  align-items: stretch;\n  // leave space for eye and collapse icon\n  padding-right: 50px;\n`;\n\nconst HeaderActionSection = styled.div<HeaderActionSectionProps>`\n  display: flex;\n  position: absolute;\n  height: 100%;\n  align-items: stretch;\n  right: 10px;\n  pointer-events: ${props => (props.isEditingLabel ? 'none' : 'all')};\n  :hover {\n    .layer-panel__header__actions__hidden {\n      opacity: 1;\n      background-color: ${props => props.theme.panelBackgroundHover};\n    }\n  }\n`;\n\ntype StyledPanelHeaderHiddenActionsProps = {\n  isConfigActive: LayerPanelHeaderProps['isConfigActive'];\n};\n\n// Hiden actions only show up on hover\nconst StyledPanelHeaderHiddenActions = styled.div.attrs({\n  className: 'layer-panel__header__actions__hidden'\n})<StyledPanelHeaderHiddenActionsProps>`\n  opacity: 0;\n  display: flex;\n  align-items: center;\n  background-color: ${props =>\n    props.isConfigActive ? props.theme.panelBackgroundHover : props.theme.panelBackground};\n  transition: opacity 0.4s ease, background-color 0.4s ease;\n\n  :hover {\n    opacity: 1;\n  }\n`;\n\nconst StyledDragHandle = styled.div`\n  display: flex;\n  align-items: center;\n  opacity: 0;\n  z-index: 1000;\n\n  :hover {\n    cursor: move;\n    opacity: 1;\n    color: ${props => props.theme.textColorHl};\n  }\n`;\n\nexport const DragHandle: React.FC<{\n  className?: string;\n  listeners?: any;\n  children?: React.ReactNode;\n}> = ({className, listeners, children}) => (\n  <StyledDragHandle className={className} {...(listeners ? listeners : {})}>\n    {children}\n  </StyledDragHandle>\n);\n\nconst noOp = (event: MouseEvent) => {\n  event.stopPropagation();\n  event.preventDefault();\n};\n\nexport const LayerLabelEditor: React.FC<LayerLabelEditorProps> = ({\n  layerId,\n  label,\n  onEdit,\n  onFocus,\n  onBlur\n}) => (\n  <InlineInput\n    type=\"text\"\n    className=\"layer__title__editor\"\n    data-testid={dataTestIds.layerTitleEditor}\n    value={label}\n    onClick={noOp}\n    onChange={onEdit}\n    onFocus={onFocus}\n    onBlur={onBlur}\n    id={`${layerId}:input-layer-label`}\n  />\n);\n\nexport function LayerTitleSectionFactory() {\n  const StyledLayerTitleSection = styled.div`\n    margin-left: 4px;\n    flex-grow: 1;\n    align-items: center;\n    display: flex;\n    .layer__title__inner {\n      flex-grow: 1;\n    }\n\n    .layer__title__type {\n      color: ${props => props.theme.subtextColor};\n      font-size: 10px;\n      line-height: 12px;\n      letter-spacing: 0.37px;\n      text-transform: capitalize;\n    }\n  `;\n  const LayerTitleSection: React.FC<LayerTitleSectionProps> = ({\n    layerType,\n    layerId,\n    label,\n    onUpdateLayerLabel,\n    onFocus,\n    onBlur\n  }) => (\n    <StyledLayerTitleSection className=\"layer__title\">\n      <div>\n        <LayerLabelEditor\n          layerId={layerId}\n          label={label}\n          onEdit={onUpdateLayerLabel}\n          onFocus={onFocus}\n          onBlur={onBlur}\n        />\n        <div className=\"layer__title__type\">\n          {layerType && <FormattedMessage id={`layer.type.${layerType.toLowerCase()}`} />}\n        </div>\n      </div>\n    </StyledLayerTitleSection>\n  );\n  return LayerTitleSection;\n}\n\nLayerPanelHeaderActionSectionFactory.deps = [PanelHeaderActionFactory];\n\nexport function LayerPanelHeaderActionSectionFactory(\n  PanelHeaderAction: ReturnType<typeof PanelHeaderActionFactory>\n) {\n  const LayerPanelHeaderActionSection: React.FC<LayerPanelHeaderActionSectionProps> = (\n    props: LayerPanelHeaderActionSectionProps\n  ) => {\n    const {\n      isConfigActive,\n      allowDuplicate,\n      isVisible,\n      isValid,\n      layerId,\n      onToggleVisibility,\n      onResetIsValid,\n      onToggleEnableConfig,\n      onDuplicateLayer,\n      onRemoveLayer,\n      onZoomToLayer,\n      showRemoveLayer,\n      isEditingLabel,\n      // TODO: may not contain all necessary icons for all actions, e.g. actionIcons.duplicate. Need to to merge rather than replace\n      actionIcons = defaultActionIcons\n    } = props;\n    return (\n      <HeaderActionSection className=\"layer-panel__header__actions\" isEditingLabel={isEditingLabel}>\n        <StyledPanelHeaderHiddenActions isConfigActive={isConfigActive}>\n          {showRemoveLayer ? (\n            <PanelHeaderAction\n              className=\"layer__remove-layer\"\n              testId=\"remove-layer-action\"\n              id={layerId}\n              tooltip={'tooltip.removeLayer'}\n              onClick={onRemoveLayer}\n              tooltipType=\"error\"\n              IconComponent={actionIcons.remove}\n            />\n          ) : null}\n          <PanelHeaderAction\n            className=\"layer__duplicate\"\n            id={layerId}\n            tooltip={'tooltip.duplicateLayer'}\n            onClick={onDuplicateLayer}\n            IconComponent={actionIcons.duplicate}\n            disabled={!allowDuplicate}\n          />\n          <PanelHeaderAction\n            className=\"layer__zoom-to-layer\"\n            id={layerId}\n            tooltip={'tooltip.zoomToLayer'}\n            onClick={onZoomToLayer}\n            IconComponent={actionIcons.crosshairs}\n          />\n        </StyledPanelHeaderHiddenActions>\n        {isValid ? (\n          <PanelHeaderAction\n            className=\"layer__visibility-toggle\"\n            id={layerId}\n            tooltip={isVisible ? 'tooltip.hideLayer' : 'tooltip.showLayer'}\n            onClick={onToggleVisibility}\n            IconComponent={isVisible ? actionIcons.visible : actionIcons.hidden}\n          />\n        ) : (\n          <PanelHeaderAction\n            className=\"layer__is-valid-refresh\"\n            id={layerId}\n            tooltip={'tooltip.resetAfterError'}\n            onClick={onResetIsValid}\n            IconComponent={actionIcons.resetIsValid}\n          />\n        )}\n\n        <PanelHeaderAction\n          className={classnames('layer__enable-config ', {\n            'is-open': isConfigActive\n          })}\n          id={layerId}\n          tooltip={'tooltip.layerSettings'}\n          onClick={onToggleEnableConfig}\n          IconComponent={actionIcons.enableConfig}\n        />\n      </HeaderActionSection>\n    );\n  };\n\n  return LayerPanelHeaderActionSection;\n}\n\nconst StyledHeaderWaring = styled.div`\n  position: absolute;\n  right: -9px;\n  top: calc(50% - 9px);\n  color: ${({theme}) => theme.notificationColors.warning};\n`;\n\nexport const HeaderWarning = ({warning, id}) => (\n  <StyledHeaderWaring>\n    <WarningSign data-tip data-for={`layer-${id}-warning`} height=\"16px\" />\n    <Tooltip id={`layer-${id}-warning`} type=\"warning\" effect=\"solid\" textColor=\"black\">\n      {warning}\n    </Tooltip>\n  </StyledHeaderWaring>\n);\n\nconst defaultActionIcons = {\n  remove: Trash,\n  visible: EyeSeen,\n  hidden: EyeUnseen,\n  enableConfig: ArrowDown,\n  duplicate: Copy,\n  resetIsValid: Reset,\n  crosshairs:Crosshairs\n  ,\n};\n\nLayerPanelHeaderFactory.deps = [LayerTitleSectionFactory, LayerPanelHeaderActionSectionFactory];\n\nfunction LayerPanelHeaderFactory(\n  LayerTitleSection: ReturnType<typeof LayerTitleSectionFactory>,\n  LayerPanelHeaderActionSection: ReturnType<typeof LayerPanelHeaderActionSectionFactory>\n) {\n  const LayerPanelHeader: React.FC<LayerPanelHeaderProps> = props => {\n    const {\n      isConfigActive,\n      isDragNDropEnabled,\n      isValid,\n      warning,\n      label,\n      layerId,\n      layerType,\n      labelRCGColorValues,\n      onUpdateLayerLabel,\n      onToggleEnableConfig,\n      listeners\n    } = props;\n    const [isEditingLabel, setIsEditingLabel] = useState(false);\n    return (\n      <StyledLayerPanelHeader\n        className={classnames('layer-panel__header', {\n          'sort--handle': !isConfigActive\n        })}\n        isValid={isValid}\n        warning={warning}\n        active={isConfigActive}\n        labelRCGColorValues={labelRCGColorValues}\n        onClick={onToggleEnableConfig}\n      >\n        {warning ? <HeaderWarning warning={warning} id={layerId} /> : null}\n        <HeaderLabelSection className=\"layer-panel__header__content\">\n          {isDragNDropEnabled ? (\n            <DragHandle className=\"layer__drag-handle\" listeners={listeners}>\n              <VertDots height=\"20px\" />\n            </DragHandle>\n          ) : (\n            <div className=\"layer__drag-handle__placeholder\" />\n          )}\n          <LayerTitleSection\n            layerId={layerId}\n            label={label}\n            onUpdateLayerLabel={onUpdateLayerLabel}\n            layerType={layerType}\n            onFocus={() => {\n              setIsEditingLabel(true);\n            }}\n            onBlur={() => {\n              setIsEditingLabel(false);\n            }}\n          />\n        </HeaderLabelSection>\n        <LayerPanelHeaderActionSection {...props} isEditingLabel={isEditingLabel} />\n      </StyledLayerPanelHeader>\n    );\n  };\n\n  LayerPanelHeader.defaultProps = defaultProps;\n\n  return LayerPanelHeader;\n}\n\nexport default LayerPanelHeaderFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useMemo} from 'react';\nimport styled from 'styled-components';\nimport OrderByList from '../common/icons/order-by-list';\nimport OrderByDataset from '../common/icons/order-by-dataset';\nimport {Tooltip} from '../common/styled-components';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {PanelListView} from '@kepler.gl/types';\nimport {PANEL_VIEW_TOGGLES} from '@kepler.gl/constants';\n\ntype ToggleOptionProps = {\n  isActive: boolean;\n  onClick: () => void;\n  option: typeof TOGGLE_OPTIONS[0];\n};\n\ntype PanelViewListToggleProps = {\n  mode: PanelListView;\n  togglePanelListView: (view: string) => void;\n};\n\nconst PanelViewListToggleContainer = styled.div.attrs({\n  className: 'panel-view-list-toggle'\n})``;\n\nconst PanelViewListToggleWrapper = styled.div.attrs({\n  className: 'panel-view-list-toggle-inner'\n})`\n  display: flex;\n  justify-content: flex-end;\n  align-content: center;\n  gap: 10px;\n`;\n\nexport const StyledToggleOption = styled.div.attrs({\n  className: 'layer-panel-toggle-option'\n})<{active: boolean}>`\n  color: ${props => (props.active ? props.theme.subtextColorActive : props.theme.panelTabColor)};\n  :hover {\n    cursor: pointer;\n    color: ${props => props.theme.subtextColorActive};\n  }\n`;\n\nfunction ToggleOptionFactory() {\n  const ToggleOption: React.FC<ToggleOptionProps> = ({isActive, onClick, option}) => (\n    <StyledToggleOption\n      data-tip\n      data-for={`${option.id}-toggle-option`}\n      active={isActive}\n      onClick={onClick}\n    >\n      <option.iconComponent height=\"20px\" />\n      <Tooltip id={`${option.id}-toggle-option`} effect=\"solid\" delayShow={500} place=\"bottom\">\n        <span>\n          <FormattedMessage id={option.label} />\n        </span>\n      </Tooltip>\n    </StyledToggleOption>\n  );\n\n  return ToggleOption;\n}\n\nconst TOGGLE_OPTIONS = [\n  {\n    id: PANEL_VIEW_TOGGLES.list,\n    iconComponent: OrderByList,\n    label: 'sidebar.panelViewToggle.list'\n  },\n  {\n    id: PANEL_VIEW_TOGGLES.byDataset,\n    iconComponent: OrderByDataset,\n    label: 'sidebar.panelViewToggle.byDataset'\n  }\n];\n\nPanelViewListToggleFactory.deps = [ToggleOptionFactory];\n\nfunction PanelViewListToggleFactory(ToggleOption: ReturnType<typeof ToggleOptionFactory>) {\n  const PanelViewListToggle: React.FC<PanelViewListToggleProps> = ({mode, togglePanelListView}) => {\n    const toggleListView = listView => togglePanelListView(listView);\n\n    const options = useMemo(\n      () => TOGGLE_OPTIONS.map(opt => ({...opt, isActive: mode === opt.id})),\n      [mode]\n    );\n\n    return (\n      <PanelViewListToggleContainer>\n        <PanelViewListToggleWrapper>\n          {options.map(opt => (\n            <ToggleOption\n              key={opt.id}\n              onClick={() => toggleListView(opt.id)}\n              option={opt}\n              isActive={opt.isActive}\n            />\n          ))}\n        </PanelViewListToggleWrapper>\n      </PanelViewListToggleContainer>\n    );\n  };\n\n  return PanelViewListToggle;\n}\n\nexport default PanelViewListToggleFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {Add} from '../../common/icons';\nimport {Button} from '../../common/styled-components';\n\nimport SourceDataCatalogFactory from '../common/source-data-catalog';\nimport {UIStateActions, VisStateActions, ActionHandler} from '@kepler.gl/actions';\nimport {Datasets} from '@kepler.gl/table';\n\ntype AddDataButtonProps = {\n  onClick: () => void;\n  isInactive: boolean;\n};\n\ntype DatasetSectionProps = {\n  datasets: Datasets;\n  showDatasetList?: boolean;\n  showDeleteDataset?: boolean;\n  showDatasetTable: ActionHandler<typeof VisStateActions.showDatasetTable>;\n  updateTableColor: ActionHandler<typeof VisStateActions.updateTableColor>;\n  removeDataset: ActionHandler<typeof UIStateActions.openDeleteModal>;\n  showAddDataModal: () => void;\n};\n\nconst StyledDatasetTitle = styled.div<{showDatasetList?: boolean}>`\n  line-height: ${props => props.theme.sidePanelTitleLineHeight};\n  font-weight: 400;\n  letter-spacing: 1.25px;\n  color: ${props => props.theme.subtextColor};\n  font-size: 11px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: ${props => (props.showDatasetList ? '16px' : '4px')};\n`;\n\nconst StyledDatasetSection = styled.div`\n  border-bottom: 1px solid ${props => props.theme.sidePanelBorderColor};\n`;\n\nexport function AddDataButtonFactory() {\n  const AddDataButton: React.FC<AddDataButtonProps> = React.memo(({onClick, isInactive}) => (\n    <Button\n      className=\"add-data-button\"\n      onClick={onClick}\n      inactive={!isInactive}\n      width=\"105px\"\n      secondary\n    >\n      <Add height=\"12px\" />\n      <FormattedMessage id={'layerManager.addData'} />\n    </Button>\n  ));\n  AddDataButton.displayName = 'AddDataButton';\n  return AddDataButton;\n}\n\nDatasetSectionFactory.deps = [SourceDataCatalogFactory, AddDataButtonFactory];\n\nfunction DatasetSectionFactory(\n  SourceDataCatalog: ReturnType<typeof SourceDataCatalogFactory>,\n  AddDataButton: ReturnType<typeof AddDataButtonFactory>\n) {\n  const DatasetSection: React.FC<DatasetSectionProps> = props => {\n    const {\n      datasets,\n      showDatasetTable,\n      updateTableColor,\n      showDeleteDataset,\n      removeDataset,\n      showDatasetList,\n      showAddDataModal\n    } = props;\n    const datasetCount = Object.keys(datasets).length;\n\n    return (\n      <StyledDatasetSection>\n        <StyledDatasetTitle showDatasetList={showDatasetList}>\n          <span>Datasets{datasetCount ? `(${datasetCount})` : ''}</span>\n          <AddDataButton onClick={showAddDataModal} isInactive={!datasetCount} />\n        </StyledDatasetTitle>\n        {showDatasetList && (\n          <SourceDataCatalog\n            datasets={datasets}\n            showDatasetTable={showDatasetTable}\n            updateTableColor={updateTableColor}\n            removeDataset={removeDataset}\n            showDeleteDataset={showDeleteDataset}\n          />\n        )}\n      </StyledDatasetSection>\n    );\n  };\n\n  return DatasetSection;\n}\n\nexport default DatasetSectionFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useCallback, useMemo} from 'react';\nimport {StyledFilterContent} from '../../common/styled-components';\nimport FilterPanelHeaderFactory from '../../side-panel/filter-panel/filter-panel-header';\nimport SourceDataSelectorFactory from '../../side-panel/common/source-data-selector';\nimport FieldSelectorFactory from '../../common/field-selector';\nimport {FilterPanelComponent} from './types';\nimport {KeplerTable} from '@kepler.gl/table';\nimport {Field, FilterBase, LineChart} from '@kepler.gl/types';\n\nNewFilterPanelFactory.deps = [\n  FilterPanelHeaderFactory,\n  SourceDataSelectorFactory,\n  FieldSelectorFactory\n];\n\nexport function getSupportedFilterFields(\n  supportedFilterTypes: KeplerTable['supportedFilterTypes'],\n  fields: Field[]\n) {\n  return supportedFilterTypes\n    ? fields.filter(field => supportedFilterTypes.includes(field.type))\n    : fields;\n}\n\nfunction NewFilterPanelFactory(\n  FilterPanelHeader: ReturnType<typeof FilterPanelHeaderFactory>,\n  SourceDataSelector: ReturnType<typeof SourceDataSelectorFactory>,\n  FieldSelector: ReturnType<typeof FieldSelectorFactory>\n) {\n  const NewFilterPanel: FilterPanelComponent<FilterBase<LineChart>> = React.memo(\n    ({idx, filter, datasets, allAvailableFields, setFilter, removeFilter}) => {\n      const onFieldSelector = useCallback(field => setFilter(idx, 'name', field.name), [\n        idx,\n        setFilter\n      ]);\n\n      const onSourceDataSelector = useCallback(value => setFilter(idx, 'dataId', value), [\n        idx,\n        setFilter\n      ]);\n\n      const dataset: KeplerTable = datasets[filter.dataId[0]];\n      const supportedFields = useMemo(\n        () => getSupportedFilterFields(dataset.supportedFilterTypes, allAvailableFields),\n        [dataset.supportedFilterTypes, allAvailableFields]\n      );\n\n      return (\n        <>\n          <FilterPanelHeader datasets={[dataset]} filter={filter} removeFilter={removeFilter}>\n            <FieldSelector\n              inputTheme=\"secondary\"\n              fields={supportedFields}\n              value={Array.isArray(filter.name) ? filter.name[0] : filter.name}\n              erasable={false}\n              onSelect={onFieldSelector}\n            />\n          </FilterPanelHeader>\n          <StyledFilterContent className=\"filter-panel__content\">\n            {Object.keys(datasets).length > 1 && (\n              <SourceDataSelector\n                inputTheme=\"secondary\"\n                datasets={datasets}\n                disabled={filter.freeze}\n                dataId={filter.dataId}\n                onSelect={onSourceDataSelector}\n              />\n            )}\n          </StyledFilterContent>\n        </>\n      );\n    }\n  );\n\n  NewFilterPanel.displayName = 'NewFilterPanel';\n\n  return NewFilterPanel;\n}\n\nexport default NewFilterPanelFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React from 'react';\nimport TimeRangeSliderFactory from '../common/time-range-slider';\nimport {DEFAULT_TIME_FORMAT, FILTER_VIEW_TYPES} from '@kepler.gl/constants';\nimport {TimeRangeFilter} from '@kepler.gl/types';\nimport {TimeRangeFilterProps} from './types';\n/*\n * TimeRangeFilter -> TimeRangeSlider -> RangeSlider\n */\nexport function timeRangeSliderFieldsSelector(filter: TimeRangeFilter) {\n  const hasUserFormat = typeof filter.timeFormat === 'string';\n  const timeFormat =\n    (hasUserFormat ? filter.timeFormat : filter.defaultTimeFormat) || DEFAULT_TIME_FORMAT;\n\n  return {\n    id: filter.id,\n    domain: filter.domain,\n    bins: filter.bins,\n    value: filter.value,\n    plotType: filter.plotType,\n    lineChart: filter.lineChart,\n    yAxis: filter.yAxis,\n    step: filter.step,\n    speed: filter.speed,\n    histogram:\n      filter.view === FILTER_VIEW_TYPES.enlarged ? filter.enlargedHistogram : filter.histogram,\n    animationWindow: filter.animationWindow,\n    isAnimating: filter.isAnimating,\n    timezone: filter.timezone,\n    timeFormat,\n    isMinified: filter.view === FILTER_VIEW_TYPES.minified,\n    isEnlarged: filter.view === FILTER_VIEW_TYPES.enlarged\n  };\n}\n\nTimeRangeFilterFactory.deps = [TimeRangeSliderFactory];\n\nfunction TimeRangeFilterFactory(TimeRangeSlider: ReturnType<typeof TimeRangeSliderFactory>) {\n  const TimeRangeFilterComponent: React.FC<TimeRangeFilterProps> = ({\n    filter,\n    setFilter,\n    isAnimatable,\n    toggleAnimation,\n    hideTimeTitle,\n    timeline\n  }) => (\n    <TimeRangeSlider\n      {...timeRangeSliderFieldsSelector(filter)}\n      onChange={setFilter}\n      toggleAnimation={toggleAnimation}\n      isAnimatable={isAnimatable}\n      hideTimeTitle={hideTimeTitle}\n      timeline={timeline}\n    />\n  );\n\n  return TimeRangeFilterComponent;\n}\n\nexport default TimeRangeFilterFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\n// libraries\nimport React, {Component, createRef, useMemo} from 'react';\nimport styled, {withTheme} from 'styled-components';\nimport {Map, MapRef} from 'react-map-gl/maplibre';\nimport {PickInfo} from '@deck.gl/core/lib/deck';\nimport DeckGL from '@deck.gl/react';\nimport {createSelector, Selector} from 'reselect';\nimport maplibregl from 'maplibre-gl';\nimport {useDroppable} from '@dnd-kit/core';\nimport debounce from 'lodash.debounce';\n\nimport {VisStateActions, MapStateActions, UIStateActions} from '@kepler.gl/actions';\n\n// components\nimport MapPopoverFactory from './map/map-popover';\nimport MapControlFactory from './map/map-control';\nimport {\n  StyledMapContainer,\n  StyledAttrbution,\n  EndHorizontalFlexbox\n} from './common/styled-components';\n\nimport EditorFactory from './editor/editor';\n\n// utils\nimport {\n  generateMapboxLayers,\n  updateMapboxLayers,\n  LayerBaseConfig,\n  VisualChannelDomain,\n  EditorLayerUtils\n} from '@kepler.gl/layers';\nimport {MapState, MapControls, Viewport, SplitMap, SplitMapLayers} from '@kepler.gl/types';\nimport {\n  errorNotification,\n  setLayerBlending,\n  isStyleUsingMapboxTiles,\n  transformRequest,\n  observeDimensions,\n  unobserveDimensions,\n  hasMobileWidth,\n  getMapLayersFromSplitMaps,\n  onViewPortChange,\n  getViewportFromMapState,\n  normalizeEvent,\n  rgbToHex,\n  computeDeckEffects\n} from '@kepler.gl/utils';\nimport {breakPointValues} from '@kepler.gl/styles';\n\n// default-settings\nimport {\n  FILTER_TYPES,\n  GEOCODER_LAYER_ID,\n  THROTTLE_NOTIFICATION_TIME,\n  DEFAULT_PICKING_RADIUS,\n  NO_MAP_ID,\n  EMPTY_MAPBOX_STYLE,\n  DROPPABLE_MAP_CONTAINER_TYPE\n} from '@kepler.gl/constants';\n\n// Contexts\nimport {MapViewStateContext} from './map-view-state-context';\n\nimport ErrorBoundary from './common/error-boundary';\nimport {DatasetAttribution} from './types';\nimport {LOCALE_CODES} from '@kepler.gl/localization';\nimport {MapView} from '@deck.gl/core';\nimport {\n  MapStyle,\n  computeDeckLayers,\n  getLayerHoverProp,\n  LayerHoverProp,\n  prepareLayersForDeck,\n  prepareLayersToRender,\n  LayersToRender\n} from '@kepler.gl/reducers';\nimport {VisState} from '@kepler.gl/schemas';\n\n// Debounce the propagation of viewport change and mouse moves to redux store.\n// This is to avoid too many renders of other components when the map is\n// being panned/zoomed (leading to laggy basemap/deck syncing).\nconst DEBOUNCE_VIEWPORT_PROPAGATE = 10;\nconst DEBOUNCE_MOUSE_MOVE_PROPAGATE = 10;\n\n/** @type {{[key: string]: React.CSSProperties}} */\nconst MAP_STYLE: {[key: string]: React.CSSProperties} = {\n  container: {\n    display: 'inline-block',\n    position: 'relative',\n    width: '100%',\n    height: '100%'\n  },\n  top: {\n    position: 'absolute',\n    top: 0,\n    width: '100%',\n    height: '100%',\n    pointerEvents: 'none'\n  }\n};\n\nconst LOCALE_CODES_ARRAY = Object.keys(LOCALE_CODES);\n\ninterface StyledMapContainerProps {\n  mixBlendMode?: string;\n}\n\nconst StyledMap = styled(StyledMapContainer)<StyledMapContainerProps>(\n  ({mixBlendMode = 'normal'}) => `\n  #default-deckgl-overlay {\n    mix-blend-mode: ${mixBlendMode};\n  };\n  *[maplibregl-children] {\n    position: absolute;\n  }\n`\n);\n\nconst MAPBOXGL_STYLE_UPDATE = 'style.load';\nconst MAPBOXGL_RENDER = 'render';\nconst nop = () => {};\n\nconst MapLibreLogo = () => (\n  <div className=\"attrition-logo\">\n    Basemap by:\n    <a\n      style={{marginLeft: \"5px\"}}\n      className=\"maplibregl-ctrl-logo\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      href=\"https://www.maplibre.org/\"\n      aria-label=\"MapLibre logo\"\n    />\n  </div>\n);\n\ninterface StyledDroppableProps {\n  isOver: boolean;\n}\n\nconst StyledDroppable = styled.div<StyledDroppableProps>`\n  background-color: ${props => (props.isOver ? props.theme.dndOverBackgroundColor : 'none')};\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  pointer-events: none;\n  z-index: 1;\n`;\n\nexport const isSplitSelector = props =>\n  props.visState.splitMaps && props.visState.splitMaps.length > 1;\n\nexport const Droppable = ({containerId}) => {\n  const {isOver, setNodeRef} = useDroppable({\n    id: containerId,\n    data: {type: DROPPABLE_MAP_CONTAINER_TYPE, index: containerId},\n    disabled: !containerId\n  });\n\n  return <StyledDroppable ref={setNodeRef} isOver={isOver} />;\n};\n\ninterface StyledDatasetAttributionsContainerProps {\n  isPalm: boolean;\n}\n\nconst StyledDatasetAttributionsContainer = styled.div<StyledDatasetAttributionsContainerProps>`\n  max-width: ${props => (props.isPalm ? '130px' : '180px')};\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n  color: ${props => props.theme.labelColor};\n  margin-right: 2px;\n  line-height: ${props => (props.isPalm ? '1em' : '1.4em')};\n  :hover {\n    white-space: inherit;\n  }\n`;\n\nconst DatasetAttributions = ({\n  datasetAttributions,\n  isPalm\n}: {\n  datasetAttributions: DatasetAttribution[];\n  isPalm: boolean;\n}) => (\n  <>\n    {datasetAttributions?.length ? (\n      <StyledDatasetAttributionsContainer isPalm={isPalm}>\n        {datasetAttributions.map((ds, idx) => (\n          <a\n            {...(ds.url ? {href: ds.url} : null)}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            key={`${ds.title}_${idx}`}\n          >\n            {ds.title}\n            {idx !== datasetAttributions.length - 1 ? ', ' : null}\n          </a>\n        ))}\n      </StyledDatasetAttributionsContainer>\n    ) : null}\n  </>\n);\n\nexport const Attribution: React.FC<{\n  showMapboxLogo: boolean;\n  showOsmBasemapAttribution: boolean;\n  datasetAttributions: DatasetAttribution[];\n}> = ({showMapboxLogo = true, showOsmBasemapAttribution = false, datasetAttributions}) => {\n  const isPalm = hasMobileWidth(breakPointValues);\n\n  const memoizedComponents = useMemo(() => {\n    if (!showMapboxLogo) {\n      return (\n        <StyledAttrbution>\n          <EndHorizontalFlexbox>\n            <DatasetAttributions datasetAttributions={datasetAttributions} isPalm={isPalm} />\n            {showOsmBasemapAttribution ? (\n              <div className=\"attrition-link\">\n                {datasetAttributions?.length ? <span className=\"pipe-separator\">|</span> : null}\n                <a\n                  href=\"http://www.openstreetmap.org/copyright\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  © OpenStreetMap\n                </a>\n              </div>\n            ) : null}\n          </EndHorizontalFlexbox>\n        </StyledAttrbution>\n      );\n    }\n\n    return (\n      <StyledAttrbution>\n        <EndHorizontalFlexbox>\n          <DatasetAttributions datasetAttributions={datasetAttributions} isPalm={isPalm} />\n          <div className=\"attrition-link\">\n            {datasetAttributions?.length ? <span className=\"pipe-separator\">|</span> : null}\n            {isPalm ? <MapLibreLogo /> : null}\n            <a href=\"https://kepler.gl/policy/\" target=\"_blank\" rel=\"noopener noreferrer\">\n              © kepler.gl |{' '}\n            </a>\n            {!isPalm ? <MapLibreLogo /> : null}\n          </div>\n        </EndHorizontalFlexbox>\n      </StyledAttrbution>\n    );\n  }, [showMapboxLogo, showOsmBasemapAttribution, datasetAttributions, isPalm]);\n\n  return memoizedComponents;\n};\n\nMapContainerFactory.deps = [MapPopoverFactory, MapControlFactory, EditorFactory];\n\ntype MapboxStyle = string | object | undefined;\ntype PropSelector<R> = Selector<MapContainerProps, R>;\n\nexport interface MapContainerProps {\n  visState: VisState;\n  mapState: MapState;\n  mapControls: MapControls;\n  mapStyle: {bottomMapStyle?: MapboxStyle; topMapStyle?: MapboxStyle} & MapStyle;\n  mapboxApiAccessToken: string;\n  mapboxApiUrl: string;\n  visStateActions: typeof VisStateActions;\n  mapStateActions: typeof MapStateActions;\n  uiStateActions: typeof UIStateActions;\n\n  // optional\n  primary?: boolean; // primary one will be reporting its size to appState\n  readOnly?: boolean;\n  isExport?: boolean;\n  onMapToggleLayer?: Function;\n  onMapStyleLoaded?: Function;\n  onMapRender?: Function;\n  getMapboxRef?: (mapbox?: MapRef | null, index?: number) => void;\n  index?: number;\n  deleteMapLabels?: (containerId: string, layerId: string) => void;\n  containerId?: number;\n\n  locale?: any;\n  theme?: any;\n  editor?: any;\n  MapComponent?: typeof Map;\n  deckGlProps?: any;\n  onDeckInitialized?: (a: any, b: any) => void;\n  onViewStateChange?: (viewport: Viewport) => void;\n\n  topMapContainerProps: any;\n  bottomMapContainerProps: any;\n  transformRequest?: any;\n\n  datasetAttributions?: DatasetAttribution[];\n\n  generateMapboxLayers?: typeof generateMapboxLayers;\n  generateDeckGLLayers?: typeof computeDeckLayers;\n\n  onMouseMove?: (event: React.MouseEvent & {lngLat?: [number, number]}) => void;\n\n  children?: React.ReactNode;\n  deckRenderCallbacks?: {\n    onDeckLoad?: () => void;\n    onDeckRender?: (deckProps: Record<string, unknown>) => Record<string, unknown> | null;\n    onDeckAfterRender?: (deckProps: Record<string, unknown>) => any;\n  };\n}\n\nexport default function MapContainerFactory(\n  MapPopover: ReturnType<typeof MapPopoverFactory>,\n  MapControl: ReturnType<typeof MapControlFactory>,\n  Editor: ReturnType<typeof EditorFactory>\n): React.ComponentType<MapContainerProps> {\n  class MapContainer extends Component<MapContainerProps> {\n    displayName = 'MapContainer';\n\n    static contextType = MapViewStateContext;\n\n    declare context: React.ContextType<typeof MapViewStateContext>;\n\n    static defaultProps = {\n      MapComponent: Map,\n      deckGlProps: {},\n      index: 0,\n      primary: true\n    };\n\n    state = {\n      // Determines whether attribution should be visible based the result of loading the map style\n      showMapboxAttribution: true\n    };\n\n    constructor(props) {\n      super(props);\n    }\n\n    componentDidMount() {\n      if (!this._ref.current) {\n        return;\n      }\n      observeDimensions(this._ref.current, this._handleResize);\n    }\n\n    componentWillUnmount() {\n      // unbind mapboxgl event listener\n      if (this._map) {\n        this._map?.off(MAPBOXGL_STYLE_UPDATE, nop);\n        this._map?.off(MAPBOXGL_RENDER, nop);\n      }\n      if (!this._ref.current) {\n        return;\n      }\n      unobserveDimensions(this._ref.current);\n    }\n\n    _deck: any = null;\n    _map: maplibregl.Map | null = null;\n    _ref = createRef<HTMLDivElement>();\n    _deckGLErrorsElapsed: {[id: string]: number} = {};\n\n    previousLayers = {\n      // [layers.id]: mapboxLayerConfig\n    };\n\n    _handleResize = dimensions => {\n      const {primary, index} = this.props;\n      if (primary) {\n        const {mapStateActions} = this.props;\n        if (dimensions && dimensions.width > 0 && dimensions.height > 0) {\n          mapStateActions.updateMap(dimensions, index);\n        }\n      }\n    };\n\n    layersSelector: PropSelector<VisState['layers']> = props => props.visState.layers;\n    layerDataSelector: PropSelector<VisState['layers']> = props => props.visState.layerData;\n    splitMapSelector: PropSelector<SplitMap[]> = props => props.visState.splitMaps;\n    splitMapIndexSelector: PropSelector<number | undefined> = props => props.index;\n    mapLayersSelector: PropSelector<SplitMapLayers | null | undefined> = createSelector(\n      this.splitMapSelector,\n      this.splitMapIndexSelector,\n      getMapLayersFromSplitMaps\n    );\n    layerOrderSelector: PropSelector<VisState['layerOrder']> = props => props.visState.layerOrder;\n    layersToRenderSelector: PropSelector<LayersToRender> = createSelector(\n      this.layersSelector,\n      this.layerDataSelector,\n      this.mapLayersSelector,\n      prepareLayersToRender\n    );\n    layersForDeckSelector = createSelector(\n      this.layersSelector,\n      this.layerDataSelector,\n      prepareLayersForDeck\n    );\n    filtersSelector = props => props.visState.filters;\n    polygonFiltersSelector = createSelector(this.filtersSelector, filters =>\n      filters.filter(f => f.type === FILTER_TYPES.polygon && f.enabled !== false)\n    );\n    featuresSelector = props => props.visState.editor.features;\n    selectedFeatureSelector = props => props.visState.editor.selectedFeature;\n    featureCollectionSelector = createSelector(\n      this.polygonFiltersSelector,\n      this.featuresSelector,\n      (polygonFilters, features) => ({\n        type: 'FeatureCollection',\n        features: features.concat(polygonFilters.map(f => f.value))\n      })\n    );\n    selectedPolygonIndexSelector = createSelector(\n      this.featureCollectionSelector,\n      this.selectedFeatureSelector,\n      (collection, selectedFeature) =>\n        collection.features.findIndex(f => f.id === selectedFeature?.id)\n    );\n    selectedFeatureIndexArraySelector = createSelector(\n      (value: number) => value,\n      value => {\n        return value < 0 ? [] : [value];\n      }\n    );\n\n    generateMapboxLayerMethodSelector = props => props.generateMapboxLayers ?? generateMapboxLayers;\n\n    mapboxLayersSelector = createSelector(\n      this.layersSelector,\n      this.layerDataSelector,\n      this.layerOrderSelector,\n      this.layersToRenderSelector,\n      this.generateMapboxLayerMethodSelector,\n      (layer, layerData, layerOrder, layersToRender, generateMapboxLayerMethod) =>\n        generateMapboxLayerMethod(layer, layerData, layerOrder, layersToRender)\n    );\n\n    // merge in a background-color style if the basemap choice is NO_MAP_ID\n    // used by <StyledMap> inline style prop\n    mapStyleTypeSelector = props => props.mapStyle.styleType;\n    mapStyleBackgroundColorSelector = props => props.mapStyle.backgroundColor;\n    styleSelector = createSelector(\n      this.mapStyleTypeSelector,\n      this.mapStyleBackgroundColorSelector,\n      (styleType, backgroundColor) => ({\n        ...MAP_STYLE.container,\n        ...(styleType === NO_MAP_ID ? {backgroundColor: rgbToHex(backgroundColor)} : {})\n      })\n    );\n\n    /* component private functions */\n    _onCloseMapPopover = () => {\n      this.props.visStateActions.onLayerClick(null);\n    };\n\n    _onLayerHover = (_idx: number, info: PickInfo<any> | null) => {\n      this.props.visStateActions.onLayerHover(info, this.props.index);\n    };\n\n    _onLayerSetDomain = (idx: number, colorDomain: VisualChannelDomain) => {\n      this.props.visStateActions.layerConfigChange(this.props.visState.layers[idx], {\n        colorDomain\n      } as Partial<LayerBaseConfig>);\n    };\n\n    _handleMapToggleLayer = layerId => {\n      const {index: mapIndex = 0, visStateActions} = this.props;\n      visStateActions.toggleLayerForMap(mapIndex, layerId);\n    };\n\n    _onMapboxStyleUpdate = update => {\n      // force refresh mapboxgl layers\n      this.previousLayers = {};\n      this._updateMapboxLayers();\n\n      if (update && update.style) {\n        // No attributions are needed if the style doesn't reference Mapbox sources\n        this.setState({showMapboxAttribution: isStyleUsingMapboxTiles(update.style)});\n      }\n\n      if (typeof this.props.onMapStyleLoaded === 'function') {\n        this.props.onMapStyleLoaded(this._map);\n      }\n    };\n\n    _setMapboxMap: React.Ref<MapRef> = mapbox => {\n      if (!this._map && mapbox) {\n        this._map = mapbox.getMap();\n        // i noticed in certain context we don't access the actual map element\n        if (!this._map) {\n          return;\n        }\n        // bind mapboxgl event listener\n        this._map.on(MAPBOXGL_STYLE_UPDATE, this._onMapboxStyleUpdate);\n\n        this._map.on(MAPBOXGL_RENDER, () => {\n          if (typeof this.props.onMapRender === 'function') {\n            this.props.onMapRender(this._map);\n          }\n        });\n      }\n\n      if (this.props.getMapboxRef) {\n        // The parent component can gain access to our MapboxGlMap by\n        // providing this callback. Note that 'mapbox' will be null when the\n        // ref is unset (e.g. when a split map is closed).\n        this.props.getMapboxRef(mapbox, this.props.index);\n      }\n    };\n\n    _onDeckInitialized(gl) {\n      if (this.props.onDeckInitialized) {\n        this.props.onDeckInitialized(this._deck, gl);\n      }\n    }\n\n    /**\n     * 1) Allow effects only for the first view.\n     * 2) Prevent effect:preRender call without valid generated viewports.\n     * @param viewIndex View index.\n     * @returns Returns true if effects can be used.\n     */\n    _isOKToRenderEffects(viewIndex?: number): boolean {\n      return !viewIndex && Boolean(this._deck?.viewManager?._viewports?.length);\n    }\n\n    _onBeforeRender = ({gl}) => {\n      setLayerBlending(gl, this.props.visState.layerBlending);\n    };\n\n    _onDeckError = (error, layer) => {\n      const errorMessage = error?.message || 'unknown-error';\n      const layerMessage = layer?.id ? ` in ${layer.id} layer` : '';\n      const errorMessageFull =\n        errorMessage === 'WebGL context is lost'\n          ? 'Your GPU was disconnected. This can happen if your computer goes to sleep. It can also occur for other reasons, such as if you are running too many GPU applications.'\n          : `An error in deck.gl: ${errorMessage}${layerMessage}.`;\n\n      // Throttle error notifications, as React doesn't like too many state changes from here.\n      const lastShown = this._deckGLErrorsElapsed[errorMessageFull];\n      if (!lastShown || lastShown < Date.now() - THROTTLE_NOTIFICATION_TIME) {\n        this._deckGLErrorsElapsed[errorMessageFull] = Date.now();\n\n        // Mark layer as invalid\n        let extraLayerMessage = '';\n        const {visStateActions} = this.props;\n        if (layer) {\n          let topMostLayer = layer;\n          while (topMostLayer.parent) {\n            topMostLayer = topMostLayer.parent;\n          }\n          if (topMostLayer.props?.id) {\n            visStateActions.layerSetIsValid(topMostLayer, false);\n            extraLayerMessage = 'The layer has been disabled and highlighted.';\n          }\n        }\n\n        // Create new error notification or update existing one with same id.\n        // Update is required to preserve the order of notifications as they probably are going to \"jump\" based on order of errors.\n        const {uiStateActions} = this.props;\n        uiStateActions.addNotification(\n          errorNotification({\n            message: `${errorMessageFull} ${extraLayerMessage}`,\n            id: errorMessageFull // treat the error message as id\n          })\n        );\n      }\n    };\n\n    /* component render functions */\n\n    /* eslint-disable complexity */\n    _renderMapPopover() {\n      // this check is for limiting the display of the `<MapPopover>` to the `<MapContainer>` the user is interacting with\n      // the DeckGL onHover event handler adds a `mapIndex` property which is available in the `hoverInfo` object of `visState`\n      if (this.props.index !== this.props.visState.hoverInfo?.mapIndex) {\n        return null;\n      }\n\n      // TODO: move this into reducer so it can be tested\n      const {\n        mapState,\n        visState: {\n          hoverInfo,\n          clicked,\n          datasets,\n          interactionConfig,\n          layers,\n          mousePos: {mousePosition, coordinate, pinned}\n        }\n      } = this.props;\n      const layersToRender = this.layersToRenderSelector(this.props);\n\n      if (!mousePosition || !interactionConfig.tooltip) {\n        return null;\n      }\n\n      const layerHoverProp = getLayerHoverProp({\n        interactionConfig,\n        hoverInfo,\n        layers,\n        layersToRender,\n        datasets\n      });\n\n      const compareMode = interactionConfig.tooltip.config\n        ? interactionConfig.tooltip.config.compareMode\n        : false;\n\n      let pinnedPosition = {x: 0, y: 0};\n      let layerPinnedProp: LayerHoverProp | null = null;\n      if (pinned || clicked) {\n        // project lnglat to screen so that tooltip follows the object on zoom\n        const viewport = getViewportFromMapState(mapState);\n        const lngLat = clicked ? clicked.coordinate : pinned.coordinate;\n        pinnedPosition = this._getHoverXY(viewport, lngLat);\n        layerPinnedProp = getLayerHoverProp({\n          interactionConfig,\n          hoverInfo: clicked,\n          layers,\n          layersToRender,\n          datasets\n        });\n        if (layerHoverProp && layerPinnedProp) {\n          layerHoverProp.primaryData = layerPinnedProp.data;\n          layerHoverProp.compareType = interactionConfig.tooltip.config.compareType;\n        }\n      }\n\n      const commonProp = {\n        onClose: this._onCloseMapPopover,\n        zoom: mapState.zoom,\n        container: this._deck ? this._deck.canvas : undefined\n      };\n\n      return (\n        <ErrorBoundary>\n          {layerPinnedProp && (\n            <MapPopover\n              {...pinnedPosition}\n              {...commonProp}\n              layerHoverProp={layerPinnedProp}\n              coordinate={interactionConfig.coordinate.enabled && (pinned || {}).coordinate}\n              frozen={true}\n              isBase={compareMode}\n              onSetFeatures={this.props.visStateActions.setFeatures}\n              setSelectedFeature={this.props.visStateActions.setSelectedFeature}\n              featureCollection={this.featureCollectionSelector(this.props)}\n            />\n          )}\n          {layerHoverProp && (!layerPinnedProp || compareMode) && (\n            <MapPopover\n              x={mousePosition[0]}\n              y={mousePosition[1]}\n              {...commonProp}\n              layerHoverProp={layerHoverProp}\n              frozen={false}\n              coordinate={interactionConfig.coordinate.enabled && coordinate}\n              onSetFeatures={this.props.visStateActions.setFeatures}\n              setSelectedFeature={this.props.visStateActions.setSelectedFeature}\n              featureCollection={this.featureCollectionSelector(this.props)}\n            />\n          )}\n        </ErrorBoundary>\n      );\n    }\n\n    /* eslint-enable complexity */\n\n    _getHoverXY(viewport, lngLat) {\n      const screenCoord = !viewport || !lngLat ? null : viewport.project(lngLat);\n      return screenCoord && {x: screenCoord[0], y: screenCoord[1]};\n    }\n\n    _renderDeckOverlay(\n      layersForDeck,\n      options: {primaryMap: boolean; isInteractive?: boolean; children?: React.ReactNode} = {\n        primaryMap: false\n      }\n    ) {\n      const {\n        mapStyle,\n        visState,\n        mapState,\n        visStateActions,\n        mapboxApiAccessToken,\n        mapboxApiUrl,\n        deckGlProps,\n        index,\n        mapControls,\n        deckRenderCallbacks,\n        theme,\n        generateDeckGLLayers,\n        onMouseMove\n      } = this.props;\n\n      const {hoverInfo, editor} = visState;\n      const {primaryMap, isInteractive, children} = options;\n\n      // disable double click zoom when editor is in any draw mode\n      const {mapDraw} = mapControls;\n      const {active: editorMenuActive = false} = mapDraw || {};\n      const isEditorDrawingMode = EditorLayerUtils.isDrawingActive(editorMenuActive, editor.mode);\n\n      const internalViewState = this.context?.getInternalViewState(index);\n      const internalMapState = {...mapState, ...internalViewState};\n      const viewport = getViewportFromMapState(internalMapState);\n\n      const editorFeatureSelectedIndex = this.selectedPolygonIndexSelector(this.props);\n\n      const {setFeatures, onLayerClick, setSelectedFeature} = visStateActions;\n\n      const generateDeckGLLayersMethod = generateDeckGLLayers ?? computeDeckLayers;\n      const deckGlLayers = generateDeckGLLayersMethod(\n        {\n          visState,\n          mapState: internalMapState,\n          mapStyle\n        },\n        {\n          mapIndex: index,\n          primaryMap,\n          mapboxApiAccessToken,\n          mapboxApiUrl,\n          layersForDeck,\n          editorInfo: primaryMap\n            ? {\n                editor,\n                editorMenuActive,\n                onSetFeatures: setFeatures,\n                setSelectedFeature,\n                featureCollection: this.featureCollectionSelector(this.props),\n                selectedFeatureIndexes: this.selectedFeatureIndexArraySelector(\n                  editorFeatureSelectedIndex\n                ),\n                viewport\n              }\n            : undefined\n        },\n        {\n          onLayerHover: this._onLayerHover,\n          onSetLayerDomain: this._onLayerSetDomain\n        },\n        deckGlProps\n      );\n\n      const extraDeckParams: {\n        getTooltip?: (info: any) => object | null;\n        getCursor?: ({isDragging}: {isDragging: boolean}) => string;\n      } = {};\n      if (primaryMap) {\n        extraDeckParams.getTooltip = info =>\n          EditorLayerUtils.getTooltip(info, {\n            editorMenuActive,\n            editor,\n            theme\n          });\n\n        extraDeckParams.getCursor = ({isDragging}: {isDragging: boolean}) => {\n          const editorCursor = EditorLayerUtils.getCursor({\n            editorMenuActive,\n            editor,\n            hoverInfo\n          });\n          if (editorCursor) return editorCursor;\n\n          if (isDragging) return 'grabbing';\n          if (hoverInfo?.layer) return 'pointer';\n          return 'grab';\n        };\n      }\n\n      const effects = this._isOKToRenderEffects(index)\n        ? computeDeckEffects({visState, mapState})\n        : [];\n\n      const views = deckGlProps?.views\n        ? deckGlProps?.views()\n        : new MapView({legacyMeterSizes: true});\n\n      let allDeckGlProps = {\n        ...deckGlProps,\n        pickingRadius: DEFAULT_PICKING_RADIUS,\n        views,\n        layers: deckGlLayers,\n        effects\n      };\n\n      if (typeof deckRenderCallbacks?.onDeckRender === 'function') {\n        allDeckGlProps = deckRenderCallbacks.onDeckRender(allDeckGlProps);\n        if (!allDeckGlProps) {\n          // if onDeckRender returns null, do not render deck.gl\n          return null;\n        }\n      }\n\n      return (\n        <div\n          {...(isInteractive\n            ? {\n                onMouseMove: primaryMap\n                  ? event => {\n                      onMouseMove?.(event);\n                      this._onMouseMoveDebounced(event, viewport);\n                    }\n                  : undefined\n              }\n            : {style: {pointerEvents: 'none'}})}\n        >\n          <DeckGL\n            id=\"default-deckgl-overlay\"\n            onLoad={() => {\n              if (typeof deckRenderCallbacks?.onDeckLoad === 'function') {\n                deckRenderCallbacks.onDeckLoad();\n              }\n            }}\n            {...allDeckGlProps}\n            controller={\n              isInteractive\n                ? {\n                    doubleClickZoom: !isEditorDrawingMode,\n                    dragRotate: this.props.mapState.dragRotate\n                  }\n                : false\n            }\n            initialViewState={internalViewState}\n            onBeforeRender={this._onBeforeRender}\n            onViewStateChange={isInteractive ? this._onViewportChange : undefined}\n            {...extraDeckParams}\n            onHover={\n              isInteractive\n                ? (data, event) => {\n                    const res = EditorLayerUtils.onHover(data, {\n                      editorMenuActive,\n                      editor,\n                      hoverInfo\n                    });\n                    if (res) return;\n\n                    this._onLayerHoverDebounced(data, index, event);\n                  }\n                : null\n            }\n            onClick={(data, event) => {\n              // @ts-ignore\n              normalizeEvent(event.srcEvent, viewport);\n              const res = EditorLayerUtils.onClick(data, event, {\n                editorMenuActive,\n                editor,\n                onLayerClick,\n                setSelectedFeature,\n                mapIndex: index\n              });\n              if (res) return;\n\n              visStateActions.onLayerClick(data);\n            }}\n            onError={this._onDeckError}\n            ref={comp => {\n              // @ts-ignore\n              if (comp && comp.deck && !this._deck) {\n                // @ts-ignore\n                this._deck = comp.deck;\n              }\n            }}\n            onWebGLInitialized={gl => this._onDeckInitialized(gl)}\n            onAfterRender={() => {\n              if (typeof deckRenderCallbacks?.onDeckAfterRender === 'function') {\n                deckRenderCallbacks.onDeckAfterRender(allDeckGlProps);\n              }\n            }}\n          >\n            {children}\n          </DeckGL>\n        </div>\n      );\n    }\n\n    _updateMapboxLayers() {\n      const mapboxLayers = this.mapboxLayersSelector(this.props);\n      if (!Object.keys(mapboxLayers).length && !Object.keys(this.previousLayers).length) {\n        return;\n      }\n\n      updateMapboxLayers(this._map, mapboxLayers, this.previousLayers);\n\n      this.previousLayers = mapboxLayers;\n    }\n\n    _renderMapboxOverlays() {\n      if (this._map && this._map.isStyleLoaded()) {\n        this._updateMapboxLayers();\n      }\n    }\n    _onViewportChangePropagateDebounced = debounce(() => {\n      const viewState = this.context?.getInternalViewState(this.props.index);\n      onViewPortChange(\n        viewState,\n        this.props.mapStateActions.updateMap,\n        this.props.onViewStateChange,\n        this.props.primary,\n        this.props.index\n      );\n    }, DEBOUNCE_VIEWPORT_PROPAGATE);\n\n    _onViewportChange = viewport => {\n      const {viewState} = viewport;\n      if (this.props.isExport) {\n        // Image export map shouldn't be interactive (otherwise this callback can\n        // lead to inadvertent changes to the state of the main map)\n        return;\n      }\n      const {setInternalViewState} = this.context;\n      setInternalViewState(viewState, this.props.index);\n      this._onViewportChangePropagateDebounced();\n    };\n\n    _onLayerHoverDebounced = debounce((data, index, event) => {\n      this.props.visStateActions.onLayerHover(data, index);\n    }, DEBOUNCE_MOUSE_MOVE_PROPAGATE);\n\n    _onMouseMoveDebounced = debounce((event, viewport) => {\n      this.props.visStateActions.onMouseMove(normalizeEvent(event, viewport));\n    }, DEBOUNCE_MOUSE_MOVE_PROPAGATE);\n\n    _toggleMapControl = panelId => {\n      const {index, uiStateActions} = this.props;\n\n      uiStateActions.toggleMapControl(panelId, Number(index));\n    };\n\n    /* eslint-disable complexity */\n    _renderMap() {\n      const {\n        visState,\n        mapState,\n        mapStyle,\n        mapStateActions,\n        MapComponent = Map,\n        mapboxApiAccessToken,\n        mapboxApiUrl,\n        mapControls,\n        isExport,\n        locale,\n        uiStateActions,\n        visStateActions,\n        index,\n        primary,\n        bottomMapContainerProps,\n        topMapContainerProps,\n        theme,\n        datasetAttributions = [],\n        containerId = 0\n      } = this.props;\n\n      const {layers, datasets, editor, interactionConfig} = visState;\n\n      const layersToRender = this.layersToRenderSelector(this.props);\n      const layersForDeck = this.layersForDeckSelector(this.props);\n\n      // Current style can be a custom style, from which we pull the mapbox API acccess token\n      const currentStyle = mapStyle.mapStyles?.[mapStyle.styleType];\n      const internalViewState = this.context?.getInternalViewState(index);\n      const mapProps = {\n        ...internalViewState,\n        preserveDrawingBuffer: true,\n        mapboxAccessToken: currentStyle?.accessToken || mapboxApiAccessToken,\n        baseApiUrl: mapboxApiUrl,\n        mapLib: maplibregl,\n        transformRequest: this.props.transformRequest || transformRequest\n      };\n\n      const hasGeocoderLayer = Boolean(layers.find(l => l.id === GEOCODER_LAYER_ID));\n      const isSplit = Boolean(mapState.isSplit);\n\n      const deck = this._renderDeckOverlay(layersForDeck, {\n        primaryMap: true,\n        isInteractive: true,\n        children: (\n          <MapComponent\n            key=\"bottom\"\n            {...mapProps}\n            mapStyle={mapStyle.bottomMapStyle ?? EMPTY_MAPBOX_STYLE}\n            {...bottomMapContainerProps}\n            ref={this._setMapboxMap}\n          />\n        )\n      });\n      if (!deck) {\n        // deckOverlay can be null if onDeckRender returns null\n        // in this case we don't want to render the map\n        return null;\n      }\n      return (\n        <>\n          <MapControl\n            mapState={mapState}\n            datasets={datasets}\n            availableLocales={LOCALE_CODES_ARRAY}\n            dragRotate={mapState.dragRotate}\n            isSplit={isSplit}\n            primary={Boolean(primary)}\n            isExport={isExport}\n            layers={layers}\n            layersToRender={layersToRender}\n            mapIndex={index || 0}\n            mapControls={mapControls}\n            readOnly={this.props.readOnly}\n            scale={mapState.scale || 1}\n            top={\n              interactionConfig.geocoder && interactionConfig.geocoder.enabled\n                ? theme.mapControlTop\n                : 0\n            }\n            editor={editor}\n            locale={locale}\n            onTogglePerspective={mapStateActions.togglePerspective}\n            onToggleSplitMap={mapStateActions.toggleSplitMap}\n            onMapToggleLayer={this._handleMapToggleLayer}\n            onToggleMapControl={this._toggleMapControl}\n            onToggleSplitMapViewport={mapStateActions.toggleSplitMapViewport}\n            onSetEditorMode={visStateActions.setEditorMode}\n            onSetLocale={uiStateActions.setLocale}\n            onToggleEditorVisibility={visStateActions.toggleEditorVisibility}\n            mapHeight={mapState.height}\n          />\n          {isSplitSelector(this.props) && <Droppable containerId={containerId} />}\n\n          {deck}\n          {this._renderMapboxOverlays()}\n          <Editor\n            index={index || 0}\n            datasets={datasets}\n            editor={editor}\n            filters={this.polygonFiltersSelector(this.props)}\n            layers={layers}\n            onDeleteFeature={visStateActions.deleteFeature}\n            onSelect={visStateActions.setSelectedFeature}\n            onTogglePolygonFilter={visStateActions.setPolygonFilterLayer}\n            onSetEditorMode={visStateActions.setEditorMode}\n            style={{\n              pointerEvents: 'all',\n              position: 'absolute',\n              display: editor.visible ? 'block' : 'none'\n            }}\n          />\n          {this.props.children}\n          {mapStyle.topMapStyle ? (\n            <MapComponent\n              key=\"top\"\n              viewState={internalViewState}\n              mapStyle={mapStyle.topMapStyle}\n              style={MAP_STYLE.top}\n              mapboxAccessToken={mapProps.mapboxAccessToken}\n              baseApiUrl={mapProps.baseApiUrl}\n              mapLib={maplibregl}\n              {...topMapContainerProps}\n            />\n          ) : null}\n\n          {hasGeocoderLayer\n            ? this._renderDeckOverlay(\n                {[GEOCODER_LAYER_ID]: hasGeocoderLayer},\n                {primaryMap: false, isInteractive: false}\n              )\n            : null}\n          {this._renderMapPopover()}\n          {this.props.primary ? (\n            <Attribution\n              showMapboxLogo={this.state.showMapboxAttribution}\n              showOsmBasemapAttribution={true}\n              datasetAttributions={datasetAttributions}\n            />\n          ) : null}\n        </>\n      );\n    }\n\n    render() {\n      const {visState} = this.props;\n      const mapContent = this._renderMap();\n      if (!mapContent) {\n        // mapContent can be null if onDeckRender returns null\n        // in this case we don't want to render the map\n        return null;\n      }\n      return (\n        <StyledMap\n          ref={this._ref}\n          style={this.styleSelector(this.props)}\n          onContextMenu={event => event.preventDefault()}\n          mixBlendMode={visState.overlayBlending}\n        >\n          {mapContent}\n        </StyledMap>\n      );\n    }\n  }\n\n  return withTheme(MapContainer);\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useMemo} from 'react';\nimport styled from 'styled-components';\nimport {TooltipField} from '@kepler.gl/types';\nimport {CenterFlexbox} from '../common/styled-components';\nimport {Layers} from '../common/icons';\nimport PropTypes from 'prop-types';\nimport {notNullorUndefined} from '@kepler.gl/utils';\nimport {Layer} from '@kepler.gl/layers';\nimport {\n  AggregationLayerHoverData,\n  getTooltipDisplayDeltaValue,\n  getTooltipDisplayValue\n} from '@kepler.gl/reducers';\nimport {useIntl} from 'react-intl';\n\nexport const StyledLayerName = styled(CenterFlexbox)`\n  color: ${props => props.theme.textColorHl};\n  font-size: 12px;\n  letter-spacing: 0.43px;\n  text-transform: capitalize;\n\n  svg {\n    margin-right: 4px;\n  }\n`;\n\nconst StyledTable = styled.table`\n  & .row__delta-value {\n    text-align: right;\n    margin-left: 6px;\n\n    &.positive {\n      color: ${props => props.theme.notificationColors.success};\n    }\n\n    &.negative {\n      color: ${props => props.theme.negativeBtnActBgd};\n    }\n  }\n  & .row__value,\n  & .row__name {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: no-wrap;\n  }\n`;\n\nconst StyledDivider = styled.div`\n  // offset divider to reach popover edge\n  margin-left: -14px;\n  margin-right: -14px;\n  border-bottom: 1px solid ${props => props.theme.panelBorderColor};\n`;\n\ninterface RowProps {\n  name: string;\n  value: string;\n  deltaValue?: string | null;\n  url?: string;\n}\n\nconst Row: React.FC<RowProps> = ({name, value, deltaValue, url}) => {\n  // Set 'url' to 'value' if it looks like a url\n  if (!url && value && typeof value === 'string' && value.match(/^http/)) {\n    url = value;\n  }\n\n  const asImg = /<img>/.test(name);\n  return (\n    <tr className=\"layer-hover-info__row\" key={name}>\n      <td className=\"row__name\">{asImg ? name.replace('<img>', '') : name}</td>\n      <td className=\"row__value\">\n        {asImg ? (\n          <img src={value} />\n        ) : url ? (\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n            {value}\n          </a>\n        ) : (\n          <>\n            <span>{value}</span>\n            {notNullorUndefined(deltaValue) ? (\n              <span\n                className={`row__delta-value ${\n                  deltaValue.toString().charAt(0) === '+' ? 'positive' : 'negative'\n                }`}\n              >\n                {deltaValue}\n              </span>\n            ) : null}\n          </>\n        )}\n      </td>\n    </tr>\n  );\n};\n\nconst EntryInfo = ({fieldsToShow, fields, data, primaryData, compareType}) => (\n  <tbody>\n    {fieldsToShow.map(item => (\n      <EntryInfoRow\n        key={item.name}\n        item={item}\n        fields={fields}\n        data={data}\n        primaryData={primaryData}\n        compareType={compareType}\n      />\n    ))}\n  </tbody>\n);\n\nconst EntryInfoRow = ({item, fields, data, primaryData, compareType}) => {\n  const fieldIdx = fields.findIndex(f => f.name === item.name);\n  if (fieldIdx < 0) {\n    return null;\n  }\n  const field = fields[fieldIdx];\n  const value = data.valueAt(fieldIdx);\n  const displayValue = getTooltipDisplayValue({item, field, value});\n\n  const displayDeltaValue = primaryData\n    ? getTooltipDisplayDeltaValue({\n        field,\n        data,\n        fieldIdx,\n        primaryData,\n        compareType\n      })\n    : null;\n\n  return (\n    <Row\n      name={field.displayName || field.name}\n      value={displayValue}\n      deltaValue={displayDeltaValue}\n    />\n  );\n};\n\n// TODO: supporting comparative value for aggregated cells as well\nconst CellInfo = ({\n  fieldsToShow,\n  data,\n  layer\n}: {\n  data: AggregationLayerHoverData;\n  fieldsToShow: TooltipField[];\n  layer: Layer;\n}) => {\n  const {colorField, sizeField} = layer.config as any;\n\n  const colorValue = useMemo(() => {\n    if (colorField && layer.visualChannels.color) {\n      const item = fieldsToShow.find(field => field.name === colorField.name);\n      return getTooltipDisplayValue({item, field: colorField, value: data.colorValue});\n    }\n    return null;\n  }, [fieldsToShow, colorField, layer, data.colorValue]);\n\n  const elevationValue = useMemo(() => {\n    if (sizeField && layer.visualChannels.size) {\n      const item = fieldsToShow.find(field => field.name === sizeField.name);\n      return getTooltipDisplayValue({item, field: sizeField, value: data.elevationValue});\n    }\n    return null;\n  }, [fieldsToShow, sizeField, layer, data.elevationValue]);\n\n  const colorMeasure = layer.getVisualChannelDescription('color').measure;\n  const sizeMeasure = layer.getVisualChannelDescription('size').measure;\n  return (\n    <tbody>\n      <Row name={'total points'} key=\"count\" value={String(data.points && data.points.length)} />\n      {colorField && layer.visualChannels.color && colorMeasure ? (\n        <Row name={colorMeasure} key=\"color\" value={colorValue || 'N/A'} />\n      ) : null}\n      {sizeField && layer.visualChannels.size && sizeMeasure ? (\n        <Row name={sizeMeasure} key=\"size\" value={elevationValue || 'N/A'} />\n      ) : null}\n    </tbody>\n  );\n};\n\nconst LayerHoverInfoFactory = () => {\n  const LayerHoverInfo = props => {\n    const {data, layer} = props;\n    const intl = useIntl();\n    if (!data || !layer) {\n      return null;\n    }\n\n    const hasFieldsToShow =\n      (data.fieldValues && Object.keys(data.fieldValues).length > 0) ||\n      (props.fieldsToShow && props.fieldsToShow.length > 0);\n\n    return (\n      <div className=\"map-popover__layer-info\">\n        <StyledLayerName className=\"map-popover__layer-name\">\n          <Layers height=\"12px\" />\n          {props.layer.config.label}\n        </StyledLayerName>\n        {hasFieldsToShow && <StyledDivider />}\n        <StyledTable>\n          {data.fieldValues ? (\n            <tbody>\n              {data.fieldValues.map(({labelMessage, value}, i) => (\n                <Row key={i} name={intl.formatMessage({id: labelMessage})} value={value} />\n              ))}\n            </tbody>\n          ) : props.layer.isAggregated ? (\n            <CellInfo {...props} />\n          ) : (\n            <EntryInfo {...props} />\n          )}\n        </StyledTable>\n        {hasFieldsToShow && <StyledDivider />}\n      </div>\n    );\n  };\n\n  LayerHoverInfo.propTypes = {\n    fields: PropTypes.arrayOf(PropTypes.any),\n    fieldsToShow: PropTypes.arrayOf(PropTypes.any),\n    layer: PropTypes.object,\n    data: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.any), PropTypes.object])\n  };\n  return LayerHoverInfo;\n};\n\nexport default LayerHoverInfoFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useCallback} from 'react';\nimport styled, {StyledComponent} from 'styled-components';\nimport {FormattedMessage} from '@kepler.gl/localization';\nimport {CenterFlexbox, IconRoundSmall} from '../common/styled-components';\nimport {Close, Pin} from '../common/icons';\nimport Switch from '../common/switch';\nimport {MapState} from '@kepler.gl/types';\nimport {ActionHandler, toggleSplitMapViewport} from '@kepler.gl/actions';\n\nconst StyledMapControlPanel = styled.div`\n  background-color: ${props => props.theme.mapPanelBackgroundColor};\n  flex-grow: 1;\n  z-index: 1;\n  p {\n    margin-bottom: 0;\n  }\n`;\n\nconst StyledMapControlPanelContent = styled.div.attrs({\n  className: 'map-control__panel-content'\n})`\n  ${props => props.theme.dropdownScrollBar};\n  max-height: 500px;\n  min-height: 100px;\n  min-width: ${props => props.theme.mapControl.width}px;\n  overflow: overlay;\n`;\n\ntype MapControlPanelHeaderProps = {\n  children?: React.ReactNode[];\n};\n\nconst StyledMapControlPanelHeader = styled.div.attrs({\n  className: 'map-control__panel-header'\n})<MapControlPanelHeaderProps>`\n  display: flex;\n  justify-content: space-between;\n  background-color: ${props => props.theme.mapPanelHeaderBackgroundColor};\n  height: 32px;\n  padding: 6px 12px;\n  font-family: ${props => props.theme.fontFamily};\n  font-size: 11px;\n  color: ${props => props.theme.titleTextColor};\n  position: relative;\n  box-sizing: border-box;\n\n  button {\n    width: 18px;\n    height: 18px;\n  }\n`;\n\nconst StyledMapControlPanelHeaderSplitViewportsTools: StyledComponent<\n  'div',\n  any,\n  {\n    className: 'map-control__panel-split-viewport-tools';\n  },\n  'className'\n> = styled(StyledMapControlPanelHeader).attrs({\n  className: 'map-control__panel-split-viewport-tools'\n})`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: self-start;\n  height: unset;\n`;\n\nconst StyledSBCenterFlexbox = styled(CenterFlexbox)`\n  width: 100%;\n  justify-content: space-between;\n  flex-direction: row;\n`;\n\ninterface StyledDisableableTextProps {\n  disabled?: boolean;\n}\n\nconst StyledDisableableText = styled.span<StyledDisableableTextProps>`\n  opacity: ${props => (props.disabled ? 0.4 : 1)};\n  pointer-events: ${props => (props.disabled ? 'none' : 'all')};\n`;\n\nconst StyledDisableableSwitch = styled(Switch)`\n  opacity: ${props => (props.disabled ? 0.4 : 1)};\n  pointer-events: ${props => (props.disabled ? 'none' : 'all')};\n`;\n\nconst StyledIcon = styled(IconRoundSmall)`\n  color: ${props => props.theme.activeColor};\n  background-color: transparent;\n\n  :hover {\n    cursor: pointer;\n    background-color: transparent;\n    color: ${props => props.theme.linkBtnColor};\n  }\n`;\n\nexport type MapControlPanelProps = {\n  header?: string;\n  scale?: number;\n  onClick: React.MouseEventHandler<HTMLDivElement>;\n  onPinClick?: React.MouseEventHandler<HTMLDivElement>;\n  pinnable?: boolean;\n  disableClose?: boolean;\n  isExport?: boolean;\n  logoComponent?: Element;\n  mapState?: MapState;\n  onToggleSplitMapViewport?: ActionHandler<typeof toggleSplitMapViewport>;\n  isViewportUnsyncAllowed?: boolean;\n  children?: React.ReactNode;\n};\n\nfunction MapControlPanelFactory() {\n  const MapControlPanel: React.FC<MapControlPanelProps> = React.memo(\n    ({\n      children,\n      header,\n      pinnable,\n      disableClose,\n      onPinClick,\n      onClick,\n      scale = 1,\n      isExport,\n      logoComponent,\n      mapState,\n      onToggleSplitMapViewport,\n      isViewportUnsyncAllowed\n    }) => {\n      const {isViewportSynced, isZoomLocked} = mapState || {};\n      const onUnlockViewportChange = useCallback(() => {\n        onToggleSplitMapViewport?.({isViewportSynced: !isViewportSynced});\n      }, [isViewportSynced, onToggleSplitMapViewport]);\n\n      const onSyncZoomChange = useCallback(() => {\n        onToggleSplitMapViewport?.({isZoomLocked: !isZoomLocked});\n      }, [isZoomLocked, onToggleSplitMapViewport]);\n\n      return (\n        <StyledMapControlPanel\n          className=\"map-control-panel\"\n          style={{\n            transform: `scale(${scale})`,\n            marginBottom: '8px !important'\n          }}\n        >\n          {mapState?.isSplit && isViewportUnsyncAllowed ? (\n            <StyledMapControlPanelHeaderSplitViewportsTools>\n              <StyledSBCenterFlexbox style={{paddingBottom: '6px'}}>\n                <FormattedMessage id=\"Unlock Viewport\" />\n                <StyledDisableableSwitch\n                  checked={!mapState?.isViewportSynced}\n                  id=\"unlock-viewport-toggle\"\n                  onChange={onUnlockViewportChange}\n                />\n              </StyledSBCenterFlexbox>\n              <StyledSBCenterFlexbox>\n                <StyledDisableableText disabled={mapState?.isViewportSynced}>\n                  <FormattedMessage id=\"Sync Zoom\" />\n                </StyledDisableableText>\n                <StyledDisableableSwitch\n                  checked={mapState?.isZoomLocked}\n                  id=\"sync-zoom-toggle\"\n                  onChange={onSyncZoomChange}\n                  disabled={mapState?.isViewportSynced}\n                />\n              </StyledSBCenterFlexbox>\n            </StyledMapControlPanelHeaderSplitViewportsTools>\n          ) : null}\n\n          <StyledMapControlPanelHeader>\n            {\n              (isExport && logoComponent ? (\n                logoComponent\n              ) : header ? (\n                <span style={{verticalAlign: 'middle'}}>\n                  <FormattedMessage id={header} />\n                </span>\n              ) : null) as React.ReactNode\n            }\n            {isExport ? null : (\n              <>\n                {pinnable && (\n                  <StyledIcon className=\"pin-map-control-item\" onClick={onPinClick}>\n                    <Pin height=\"16px\" />\n                  </StyledIcon>\n                )}\n                {disableClose ? null : (\n                  <StyledIcon className=\"close-map-control-item\" onClick={onClick}>\n                    <Close height=\"16px\" />\n                  </StyledIcon>\n                )}\n              </>\n            )}\n          </StyledMapControlPanelHeader>\n          <StyledMapControlPanelContent>{children}</StyledMapControlPanelContent>\n        </StyledMapControlPanel>\n      );\n    }\n  );\n\n  MapControlPanel.displayName = 'MapControlPanel';\n\n  return MapControlPanel;\n}\n\nexport default MapControlPanelFactory;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport styled from 'styled-components';\nimport VerticalToolbar from '../common/vertical-toolbar';\n\nfunction MapControlToolbar() {\n  const StyledToolbar = styled(VerticalToolbar)`\n    position: absolute;\n    right: 32px;\n    transform: translateX(calc(-50% + 45px));\n\n    .toolbar-item {\n      width: 120px;\n      padding: 13px 16px;\n      flex-direction: row;\n      justify-content: flex-start;\n\n      .toolbar-item__svg-container {\n        width: 16px;\n        height: 16px;\n        margin-right: 10px;\n      }\n\n      .toolbar-item__title {\n        margin-left: auto;\n        margin-right: auto;\n      }\n    }\n  `;\n\n  return StyledToolbar;\n}\n\nexport default MapControlToolbar;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport styled from 'styled-components';\nimport React from 'react';\n\nimport {MapState} from '@kepler.gl/types';\n\nimport {MapViewStateContextProvider} from './map-view-state-context';\n\nconst Outer = styled.div`\n  position: relative;\n  display: flex;\n  width: 100%;\n  height: 100%;\n`;\n\nMapsLayoutFactory.deps = [];\n\ninterface MapsLayoutProps {\n  mapState: MapState;\n  className?: string;\n  children?: React.ReactNode;\n}\n\nexport default function MapsLayoutFactory(): React.ComponentType<MapsLayoutProps> {\n  class MapsLayout extends React.Component<MapsLayoutProps> {\n    render() {\n      return (\n        <Outer className={this.props.className}>\n          <MapViewStateContextProvider mapState={this.props.mapState}>\n            {this.props.children}\n          </MapViewStateContextProvider>\n        </Outer>\n      );\n    }\n  }\n  return MapsLayout;\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {Component} from 'react';\nimport styled from 'styled-components';\nimport {Delete, Info, Warning, Checkmark} from '../common/icons';\nimport ReactMarkdown from 'react-markdown';\nimport {dataTestIds} from '@kepler.gl/constants';\nimport {ActionHandler, removeNotification as removeNotificationActions} from '@kepler.gl/actions';\n\ninterface NotificationItemContentBlockProps {\n  isExpanded?: boolean;\n}\n\nconst NotificationItemContentBlock = styled.div.attrs({\n  className: 'notification-item--content-block'\n})<NotificationItemContentBlockProps>`\n  display: block;\n  position: relative;\n  width: ${props => props.theme.notificationPanelItemWidth * (1 + Number(props.isExpanded))}px;\n  margin-left: auto;\n`;\n\ninterface NotificationItemContentProps {\n  type: string;\n  isExpanded?: boolean;\n}\n\nconst NotificationItemContent = styled.div<NotificationItemContentProps>`\n  background-color: ${props => props.theme.notificationColors[props.type] || '#000'};\n  color: #fff;\n  display: flex;\n  flex-direction: row;\n  width: ${props => props.theme.notificationPanelItemWidth * (1 + Number(props.isExpanded))}px;\n  height: ${props => props.theme.notificationPanelItemHeight * (1 + Number(props.isExpanded))}px;\n  font-size: 11px;\n  margin-bottom: 1rem;\n  padding: 1em;\n  border-radius: 4px;\n  box-shadow: ${props => props.theme.boxShadow};\n  cursor: pointer;\n`;\n\nconst DeleteIcon = styled(Delete)`\n  cursor: pointer;\n  width: 13px;\n  height: 13px;\n`;\n\ninterface NotificationCounterProps {\n  type: string;\n}\n\nconst NotificationCounter = styled.div.attrs({\n  className: 'notification-item--counter'\n})<NotificationCounterProps>`\n  position: absolute;\n  font-size: 11px;\n  font-weight: bold;\n  text-align: center;\n  left: -4px;\n  bottom: -4px;\n  border-radius: 50%;\n  width: 20px;\n  height: 20px;\n  background-color: #ffffff;\n  border: 1px solid ${props => props.theme.notificationColors[props.type] || '#000'};\n  color: ${props => props.theme.notificationColors[props.type] || '#000'};\n  box-shadow: ${props => props.theme.boxShadow};\n`;\n\ninterface NotificationMessageProps {\n  isExpanded?: boolean;\n}\n\nconst NotificationMessage = styled.div.attrs({\n  className: 'notification-item--message'\n})<NotificationMessageProps>`\n  flex-grow: 2;\n  width: ${props => props.theme.notificationPanelItemWidth}px;\n  margin: 0 1em;\n  overflow: ${props => (props.isExpanded ? 'auto' : 'hidden')};\n  padding-right: ${props => (props.isExpanded ? '1em' : 0)};\n\n  p {\n    margin-top: 0;\n    a {\n      color: #fff;\n      text-decoration: underline;\n    }\n  }\n`;\n\nconst NotificationIcon = styled.div`\n  svg {\n    vertical-align: text-top;\n  }\n`;\n\nconst icons = {\n  info: <Info data-testid={dataTestIds.infoIcon} />,\n  warning: <Warning data-testid={dataTestIds.warningIcon} />,\n  error: <Warning data-testid={dataTestIds.errorIcon} />,\n  success: <Checkmark data-testid={dataTestIds.successIcon} />\n};\n\nconst LinkRenderer = props => {\n  return (\n    <a href={props.href} target=\"_blank\" rel=\"noopener noreferrer\">\n      {props.children}\n    </a>\n  );\n};\n\ninterface NotificationItemProps {\n  notification: {\n    id: string;\n    type: string;\n    message: string;\n    count?: number;\n  };\n  isExpanded?: boolean;\n  removeNotification?: ActionHandler<typeof removeNotificationActions>;\n  theme?: any;\n}\n\nexport default function NotificationItemFactory() {\n  return class NotificationItem extends Component<NotificationItemProps> {\n    state = {\n      isExpanded: false\n    };\n\n    componentDidMount() {\n      if (this.props.isExpanded) {\n        this.setState({isExpanded: true});\n      }\n    }\n\n    render() {\n      const {notification, removeNotification} = this.props;\n      const {isExpanded} = this.state;\n\n      return (\n        <NotificationItemContentBlock isExpanded={isExpanded} theme={this.props.theme}>\n          {(notification.count || 0) > 1 ? (\n            <NotificationCounter type={notification.type} theme={this.props.theme}>\n              {notification.count}\n            </NotificationCounter>\n          ) : null}\n          <NotificationItemContent\n            className=\"notification-item\"\n            type={notification.type}\n            isExpanded={isExpanded}\n            onClick={() => this.setState({isExpanded: !isExpanded})}\n          >\n            <NotificationIcon className=\"notification-item--icon\">\n              {icons[notification.type]}\n            </NotificationIcon>\n            <NotificationMessage isExpanded={isExpanded} theme={this.props.theme}>\n              <ReactMarkdown source={notification.message} renderers={{link: LinkRenderer}} />\n            </NotificationMessage>\n            {typeof removeNotification === 'function' ? (\n              <div className=\"notification-item--action\">\n                <DeleteIcon height=\"10px\" onClick={() => removeNotification(notification.id)} />\n              </div>\n            ) : null}\n          </NotificationItemContent>\n        </NotificationItemContentBlock>\n      );\n    }\n  };\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useEffect} from 'react';\nimport get from 'lodash.get';\n\nimport {MAP_THUMBNAIL_DIMENSION, EXPORT_IMG_RATIOS} from '@kepler.gl/constants';\nimport {SetExportImageSettingUpdaterAction} from '@kepler.gl/actions';\nimport {Provider} from '@kepler.gl/cloud-providers';\n\nexport type ImageModalContainerProps = {\n  provider?: Provider | null;\n  onUpdateImageSetting: (newSetting: SetExportImageSettingUpdaterAction['payload']) => void;\n  cleanupExportImage: () => void;\n  children?: React.ReactNode;\n};\n\n// TODO: this should be turned into a custom hook\n/**\n * A wrapper component in modals contain a image preview of the map with cloud providers\n * It sets export image size based on provider thumbnail size\n * @type {React.FunctionComponent<ImageModalContainerProps>}\n */\nconst ImageModalContainer: React.FC<ImageModalContainerProps> = ({\n  onUpdateImageSetting,\n  cleanupExportImage,\n  provider,\n  children\n}) => {\n  useEffect(() => {\n    onUpdateImageSetting({exporting: true});\n    return () => {\n      cleanupExportImage();\n    };\n  }, [onUpdateImageSetting, cleanupExportImage]);\n\n  useEffect(() => {\n    if (provider) {\n      if (provider.thumbnail) {\n        onUpdateImageSetting({\n          mapW: get(provider, ['thumbnail', 'width']) || MAP_THUMBNAIL_DIMENSION.width,\n          mapH: get(provider, ['thumbnail', 'height']) || MAP_THUMBNAIL_DIMENSION.height,\n          ratio: EXPORT_IMG_RATIOS.CUSTOM,\n          legend: false\n        });\n      }\n    } else {\n      onUpdateImageSetting({\n        mapW: MAP_THUMBNAIL_DIMENSION.width,\n        mapH: MAP_THUMBNAIL_DIMENSION.height,\n        ratio: EXPORT_IMG_RATIOS.CUSTOM,\n        legend: false\n      });\n    }\n  }, [provider, onUpdateImageSetting]);\n\n  return <>{children}</>;\n};\n\nexport default ImageModalContainer;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport LoadingSpinner from '../common/loading-spinner';\nimport {FormattedMessage} from '@kepler.gl/localization';\n\nconst StyledSpinner = styled.div`\n  text-align: center;\n\n  span {\n    margin: 0 auto;\n  }\n`;\n\nconst StyledLoadingDialog = styled.div.attrs({\n  className: 'data-loading-dialog'\n})`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-grow: 1;\n\n  .loading-content {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .loading-message {\n    margin-left: 32px;\n    color: ${props => props.theme.titleColorLT};\n    font-weight: 500;\n    font-size: 14px;\n  }\n`;\n\ninterface LoadingDialogProps {\n  size?: number;\n  message?: string;\n}\n\nconst LoadingDialog: React.FC<LoadingDialogProps> = ({\n  size = 64,\n  message = 'modal.loadingDialog.loading'\n}) => (\n  <StyledLoadingDialog>\n    <div className=\"loading-content\">\n      <StyledSpinner>\n        <LoadingSpinner size={size} />\n      </StyledSpinner>\n      <div className=\"loading-message\">\n        <FormattedMessage id={message} />\n      </div>\n    </div>\n  </StyledLoadingDialog>\n);\n\nexport default LoadingDialog;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport CloudTile from '../cloud-tile';\nimport React from 'react';\nimport styled from 'styled-components';\nimport {Provider} from '@kepler.gl/cloud-providers';\nimport {dataTestIds} from '@kepler.gl/constants';\n\nconst StyledProviderSection = styled.div.attrs({\n  className: 'provider-selection'\n})`\n  display: flex;\n  gap: 8px;\n`;\n\ntype ProviderSelectProps = {\n  cloudProviders: Provider[];\n};\n\nexport const ProviderSelect: React.FC<ProviderSelectProps> = ({cloudProviders = []}) => (\n  <div data-testid={dataTestIds.providerSelect}>\n    {cloudProviders.length ? (\n      <StyledProviderSection>\n        {cloudProviders.map(provider => (\n          <CloudTile key={provider.name} provider={provider} />\n        ))}\n      </StyledProviderSection>\n    ) : (\n      <p>No storage provider available</p>\n    )}\n  </div>\n);\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport {StyledExportSection} from '../../common/styled-components';\n\nexport const StyledExportMapSection = styled(StyledExportSection)`\n  margin-top: ${props => props.theme.exportIntraSectionMargin}px;\n`;\n\nexport const StyledWarning = styled.span`\n  color: ${props => props.theme.errorColor};\n  font-weight: ${props => props.theme.selectFontWeightBold};\n`;\n\nexport const StyledExportLink = styled.a`\n  text-decoration-line: underline !important;\n`;\n\nexport const ExportMapLink = ({children, ...props}) => (\n  <StyledExportLink target=\"_blank\" rel=\"noopener noreferrer\" {...props}>\n    {children}\n  </StyledExportLink>\n);\n"],"sourceRoot":""}