{"version":3,"sources":["webpack:///./src/constants/default-settings.js","webpack:////home/srikanth/kepler.gl/src/utils/src/color-utils.ts","webpack:////home/srikanth/kepler.gl/src/utils/src/notifications-utils.ts","webpack:////home/srikanth/kepler.gl/src/utils/src/dom-utils.ts","webpack:////home/srikanth/kepler.gl/src/utils/src/dom-to-image.ts","webpack:////home/srikanth/kepler.gl/src/utils/src/aggregate-utils.ts","webpack:////home/srikanth/kepler.gl/src/utils/src/plot.ts","webpack:////home/srikanth/kepler.gl/src/utils/src/data-utils.ts","webpack:////home/srikanth/kepler.gl/src/utils/src/time.ts","webpack:////home/srikanth/kepler.gl/src/utils/src/format.ts","webpack:////home/srikanth/kepler.gl/src/utils/src/dataset-utils.ts","webpack:////home/srikanth/kepler.gl/src/utils/src/export-map-html.ts","webpack:////home/srikanth/kepler.gl/src/utils/src/export-utils.ts","webpack:////home/srikanth/kepler.gl/src/utils/src/gl-utils.ts","webpack:////home/srikanth/kepler.gl/src/utils/src/locale-utils.ts","webpack:////home/srikanth/kepler.gl/src/utils/src/observe-dimensions.ts","webpack:////home/srikanth/kepler.gl/src/utils/src/projection-utils.ts","webpack:////home/srikanth/kepler.gl/src/utils/src/mapbox-utils.ts","webpack:////home/srikanth/kepler.gl/src/utils/src/map-style-utils/mapbox-gl-style-editor.ts","webpack:////home/srikanth/kepler.gl/src/utils/src/map-info-utils.ts","webpack:////home/srikanth/kepler.gl/src/utils/src/split-map-utils.ts","webpack:////home/srikanth/kepler.gl/src/utils/src/effect-utils.ts","webpack:////home/srikanth/kepler.gl/src/utils/src/map-style-utils/mapbox-utils.ts","webpack:////home/srikanth/kepler.gl/src/utils/src/map-utils.ts","webpack:////home/srikanth/kepler.gl/src/utils/src/data-row.ts","webpack:////home/srikanth/kepler.gl/src/utils/src/arrow-data-container.ts","webpack:////home/srikanth/kepler.gl/src/utils/src/row-data-container.ts","webpack:////home/srikanth/kepler.gl/src/utils/src/indexed-data-container.ts","webpack:////home/srikanth/kepler.gl/src/utils/src/data-container-utils.ts","webpack:////home/srikanth/kepler.gl/src/utils/src/data-scale-utils.ts","webpack:////home/srikanth/kepler.gl/src/utils/src/h3-utils.ts","webpack:////home/srikanth/kepler.gl/src/utils/src/filter-utils.ts","webpack:///./src/utils/url.js","webpack:///./src/actions.js","webpack:///./src/reducers/index.js","webpack:///./src/utils/strings.js","webpack:///./src/store.js","webpack:///./src/components/banner.js","webpack:///./src/components/announcement.js","webpack:///./src/components/load-data-modal/sample-data-viewer.js","webpack:///./src/components/load-data-modal/load-remote-map.js","webpack:///./src/components/load-data-modal/sample-maps-tab.js","webpack:///./src/factories/load-data-modal.js","webpack:///./src/components/map-control/map-control.js","webpack:///./src/factories/map-control.js","webpack:///./src/factories/panel-header.js","webpack:///./src/constants/localization.js","webpack:///./src/cloud-providers/dropbox/dropbox-icon.js","webpack:///./src/cloud-providers/dropbox/dropbox-provider.js","webpack:///./src/cloud-providers/carto/carto-icon.js","webpack:///./src/cloud-providers/carto/carto-provider.js","webpack:///./src/cloud-providers/foursquare/foursquare-icon.js","webpack:///./src/cloud-providers/foursquare/foursquare-provider.js","webpack:///./src/cloud-providers/index.js","webpack:///./src/data/sample-trip-data.js","webpack:///./src/data/sample-small-geojson.js","webpack:///./src/data/sample-geojson-points.js","webpack:///./src/data/sample-geojson-config.js","webpack:///./src/data/sample-hex-id-csv.js","webpack:///./src/data/sample-s2-data.js","webpack:///./src/data/sample-animate-trip-data.js","webpack:///./src/app.js","webpack:///./src/data/sample-icon-csv.js","webpack:///./src/data/sample-gps-data.js","webpack:///./src/utils/routes.js","webpack:///./src/main.js","webpack:////home/srikanth/kepler.gl/src/schemas/src/versions.ts","webpack:////home/srikanth/kepler.gl/src/schemas/src/schema.ts","webpack:////home/srikanth/kepler.gl/src/schemas/src/dataset-schema.ts","webpack:////home/srikanth/kepler.gl/src/schemas/src/map-style-schema.ts","webpack:////home/srikanth/kepler.gl/src/schemas/src/map-state-schema.ts","webpack:////home/srikanth/kepler.gl/src/schemas/src/vis-state-schema.ts","webpack:////home/srikanth/kepler.gl/src/schemas/src/schema-manager.ts","webpack:////home/srikanth/kepler.gl/src/styles/src/base.ts","webpack:////home/srikanth/kepler.gl/src/styles/src/media-breakpoints.ts","webpack:////home/srikanth/kepler.gl/src/utils/src/noop.ts","webpack:////home/srikanth/kepler.gl/src/tasks/src/index.ts","webpack:////home/srikanth/kepler.gl/src/table/src/gpu-filter-utils.ts","webpack:////home/srikanth/kepler.gl/src/table/src/kepler-table.ts","webpack:////home/srikanth/kepler.gl/src/table/src/dataset-utils.ts","webpack:////home/srikanth/kepler.gl/src/reducers/src/vis-state-merger.ts","webpack:////home/srikanth/kepler.gl/src/reducers/src/merger-handler.ts","webpack:////home/srikanth/kepler.gl/src/reducers/src/composer-helpers.ts","webpack:////home/srikanth/kepler.gl/src/reducers/src/layer-utils.ts","webpack:////home/srikanth/kepler.gl/src/reducers/src/interaction-utils.ts","webpack:////home/srikanth/kepler.gl/src/reducers/src/vis-state-updaters.ts","webpack:////home/srikanth/kepler.gl/src/reducers/src/vis-state.ts","webpack:////home/srikanth/kepler.gl/src/reducers/src/map-state-updaters.ts","webpack:////home/srikanth/kepler.gl/src/reducers/src/map-state.ts","webpack:////home/srikanth/kepler.gl/src/reducers/src/map-style-updaters.ts","webpack:////home/srikanth/kepler.gl/src/reducers/src/map-style.ts","webpack:////home/srikanth/kepler.gl/src/reducers/src/ui-state-updaters.ts","webpack:////home/srikanth/kepler.gl/src/reducers/src/ui-state.ts","webpack:////home/srikanth/kepler.gl/src/reducers/src/provider-state-updaters.ts","webpack:////home/srikanth/kepler.gl/src/reducers/src/provider-state.ts","webpack:////home/srikanth/kepler.gl/src/reducers/src/data-utils.ts","webpack:////home/srikanth/kepler.gl/src/reducers/src/combined-updaters.ts","webpack:////home/srikanth/kepler.gl/src/reducers/src/composers.ts","webpack:////home/srikanth/kepler.gl/src/reducers/src/core.ts","webpack:////home/srikanth/kepler.gl/src/reducers/src/root.ts","webpack:////home/srikanth/kepler.gl/src/reducers/src/vis-state-selectors.ts","webpack:////home/srikanth/kepler.gl/src/reducers/src/export-utils.ts","webpack:////home/srikanth/kepler.gl/src/reducers/src/middleware.ts","webpack:////home/srikanth/kepler.gl/src/utils/src/utils.ts"],"names":["ASSETS_URL","MAP_URI","MAP_CONFIG_URL","concat","Date","getTime","LOADING_METHODS","keyMirror","file","sample","csv","geojson","remote","LOADING_SAMPLE_LIST_ERROR_MESSAGE","LOADING_SAMPLE_ERROR_MESSAGE","CORS_LINK","DEFAULT_FEATURE_FLAGS","cloudStorage","CLOUD_PROVIDERS_CONFIGURATION","MAPBOX_TOKEN","process","DROPBOX_CLIENT_ID","env","DropboxClientId","EXPORT_MAPBOX_TOKEN","MapboxExportToken","CARTO_CLIENT_ID","CartoClientId","FOURSQUARE_CLIENT_ID","FoursquareClientId","FOURSQUARE_DOMAIN","FoursquareDomain","FOURSQUARE_API_URL","FoursquareAPIURL","FOURSQUARE_USER_MAPS_URL","FoursquareUserMapsURL","hexToRgb","hex","result","isHexColor","parseInt","exec","rgbToHex","_ref","_ref2","_slicedToArray","r","g","b","map","n","toString","length","join","toUpperCase","getColorGroupByName","colorRange","name","replace","reverseColorRange","reversed","_objectSpread","colors","slice","reverse","createLinearGradient","direction","color","step","parseFloat","toFixed","bands","rgb","index","colorMaybeToRGB","isRgbColor","rgbObj","d3Rgb","Number","isFinite","Boolean","Array","isArray","every","normalizeColor","component","createNotification","_ref$message","message","DEFAULT_NOTIFICATION_MESSAGE","_ref$type","type","DEFAULT_NOTIFICATION_TYPES","info","_ref$topic","topic","DEFAULT_NOTIFICATION_TOPICS","global","_ref$id","id","generateHashId","DEFAULT_UUID_COUNT","_ref$count","count","_objectWithoutProperties","_excluded","errorNotification","options","error","successNotification","success","exportImageError","BUG_REPORT_LINK","processClone","original","clone","window","Element","copyStyle","source","target","sourceStyle","targetStyle","cssText","font","asArray","forEach","setProperty","getPropertyValue","getPropertyPriority","clonePseudoElement","org","cln","element","style","getComputedStyle","content","className","Math","random","pow","styleElement","document","createElement","appendChild","elm","stl","cnt","formatProperty","selector","createTextNode","formatPseudoElementStyle","Promise","resolve","then","_ref5","_ref6","og","cloneStyle","_ref7","_ref8","clonePseudoElements","_ref9","_ref10","_ref3","_ref4","HTMLTextAreaElement","innerHTML","value","HTMLInputElement","setAttribute","copyUserInput","_ref11","_ref12","SVGElement","SVGRectElement","attribute","getAttribute","fixSvg","_ref13","_ref14","arrayLike","array","i","push","makeImage","uri","reject","image","Image","onload","onerror","err","IMAGE_EXPORT_ERRORS","dataUri","Console","log","event","src","isDataUrl","url","search","mimeType","WOFF","extension","match","parseExtension","toLowerCase","woff","woff2","ttf","eot","png","jpg","jpeg","gif","tiff","svg","dataAsUrl","isSrcAsDataUrl","text","canvasToBlob","canvas","toBlob","binaryString","atob","toDataURL","split","binaryArray","Uint8Array","charCodeAt","Blob","cvToBlob","escapeXhtml","string","getWidth","node","leftBorder","px","rightBorder","scrollWidth","getHeight","topBorder","bottomBorder","scrollHeight","styleProperty","getAndEncode","cacheBust","test","placeholder","request","XMLHttpRequest","onreadystatechange","readyState","status","fail","encoder","FileReader","onloadend","readAsDataURL","response","ontimeout","responseType","timeout","open","send","imagePlaceholder","setStyleSheetBaseHref","base","p1","URL","href","concatAndResolveUrl","inliner","URL_REGEX","inlineAll","baseUrl","get","shouldProcess","readUrls","urls","done","str","inline","impl","filter","ul","doc","implementation","createHTMLDocument","head","a","body","resolveUrl","domtoimage","data","dataUrl","RegExp","newInliner","fontFaces","resolveAll","readAll","webFonts","all","webFont","cssStrings","styleSheets","sheet","cache","includes","fetch","credentials","textContent","toStyleSheet","warn","styleSheet","cssRules","rules","e","_typeof","bind","rule","CSSRule","FONT_FACE_RULE","newWebFont","webFontRule","parentStyleSheet","newFontFaces","images","nd","background","inlined","inlineBackground","HTMLImageElement","newImage","childNodes","child","newImages","defaultOptions","undefined","toSvg","toPng","draw","toJpeg","quality","toPixelData","getContext","getImageData","copyOptions","cloneNode","root","HTMLCanvasElement","flt","children","cloneChildrenInOrder","cloneChildren","parent","arrChildren","childClone","embedFonts","inlineImages","bgcolor","backgroundColor","width","height","Object","keys","property","escapeXhtmlForWebpack","arguments","serializedString","XMLSerializer","serializeToString","xhtml","foreignObject","svgStr","svgToMiniDataURI","makeSvgDataUri","domNode","ms","arg","setTimeout","dNode","ctx","fillStyle","fillRect","newCanvas","drawImage","styleNode","getFrequency","reduce","uniques","val","_defineProperty","getMode","occur","prev","key","aggregate","technique","AGGREGATION_TYPES","average","mean","countUnique","mode","maximum","max","minimum","min","median","stdev","deviation","sum","variance","snapToMarks","marks","bisectLeft","unique","values","results","Set","v","notNullorUndefined","getLatLngBounds","points","idx","limit","lats","d","sort","numberSort","clamp","getSampleData","sampleSize","getValue","sampleStep","floor","output","timeToUnixMilli","format","moment","utc","valueOf","isNumber","hasOwnProperty","obj","prop","getSortingFunction","fieldType","ALL_FIELD_TYPES","real","integer","timestamp","preciseRound","num","decimals","t","round","sign","roundToFour","getRoundingDecimalFromStep","isNaN","assert","stepStr","splitExponential","coeffZero","coeffDecimal","splitZero","normalizeSliderValue","minValue","roundValToStep","decimal","steps","remain","rounded","defaultFormatter","String","floatFormatter","FIELD_DISPLAY_FORMAT","date","isPlainObject","JSON","stringify","geoarrow","object","parseFieldValue","arrayMove","from","to","splice","arrayMoveMutate","getFormatter","field","tooltipFormat","TOOLTIP_FORMATS","find","f","TOOLTIP_KEY","applyDefaultFormat","applyCustomFormat","getColumnFormatter","colMeta","displayFormat","applyValueMap","TOOLTIP_FORMAT_TYPES","DECIMAL","d3Format","DATE","DATE_TIME","datetimeFormatter","PERCENTAGE","DECIMAL_DECIMAL_FIXED_2","BOOLEAN","getBooleanFormatter","formatLargeNumber","formatNumber","timezone","ts","tz","TIMELINE_MODES","inner","outer","SAMPLE_TIMELINE","domain","speed","enableInteraction","isAnimating","getTimelineFromAnimationConfig","animationConfig","currentTime","timeSteps","defaultTimeFormat","timeFormat","toArray","getTimelineFromFilter","animationWindow","getFormatValue","fmt","_regeneratorRuntime","prototype","o","defineProperty","Symbol","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","call","h","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","getPrototypeOf","defineIteratorMethods","_invoke","AsyncIterator","invoke","__await","callInvokeWithMethodAndArg","Error","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","pop","charAt","stop","rval","handle","complete","finish","delegateYield","_marked","generateColor","datasetColors","_context","datasetColorMaker","EXCLUDED_DEFAULT_FIELDS","METRIC_DEFAULT_FIELDS","findDefaultColorField","fields","_ref$fieldPairs","fieldPairs","sortedFields","pair","lat","lng","normalizedFieldName","hasExcluded","startsWith","endsWith","hasInclusion","left","right","normalizedLeft","normalizedRight","leftHasInclusion","findIndex","rightHasInclusion","ACCEPTED_ANALYZER_TYPES","AnalyzerDATA_TYPES","TIME","DATETIME","NUMBER","INT","FLOAT","STRING","GEOMETRY","GEOMETRY_FROM_STRING","PAIR_GEOMETRY_FROM_STRING","ZIPCODE","ARRAY","OBJECT","IGNORE_DATA_TYPES","validateInputData","rows","cols","analyzerType","fieldIdx","total","_rows$i","findNonEmptyRowsAtField","analyzedType","Analyzer","computeColMeta","category","meta","getFieldsFromData","getSampleForTypeAnalyze","_ref2$sampleCount","sampleCount","range","j","trim","fieldOrder","metadata","regex","dataType","ignoredDataTypes","fieldByIndex","renameDuplicateFields","fieldMeta","m","some","analyzerTypeToFieldType","valueAccessor","dc","valueAt","accu","allNames","fieldName","counter","aType","globalConsole","getFieldFormatLabels","tooltipTypes","FIELD_OPTS","tooltip","formatLabels","label","getFormatLabels","_fields$find","exportMapToHTML","version","KEPLER_GL_VERSION","mapboxApiAccessToken","EXPORT_HTML_MAP_MODES","READ","datasets","config","DEFAULT_IMAGE_NAME","DEFAULT_HTML_NAME","DEFAULT_JSON_NAME","DEFAULT_DATA_NAME","DEFAULT_EXPORT_JSON_SETTINGS","hasData","defaultResolution","OneXResolutionOption","defaultRatio","FourByThreeRatioOption","isMSEdge","navigator","msSaveOrOpenBlob","getScaleFromImageSize","imageW","imageH","mapW","mapH","mapBase","calculateExportImageSize","ratio","resolution","ratioItem","EXPORT_IMG_RATIO_OPTIONS","op","resolutionItem","EXPORT_IMG_RESOLUTION_OPTIONS","_resolutionItem$getSi","getSize","scaledWidth","scaledHeight","_ratioItem$getSize","scale","EXPORT_IMG_RATIOS","CUSTOM","convertToPng","sourceElem","dataURItoBlob","dataURI","binary","mimeString","ab","ArrayBuffer","ia","downloadFile","fileBlob","fileName","createObjectURL","link","evt","MouseEvent","view","bubbles","cancelable","dispatchEvent","removeChild","revokeObjectURL","exportImage","uiStateExportImage","filename","imageDataUri","exportToJsonString","description","getMapJSON","state","schema","visState","getConfigToSave","mapToSave","save","title","set","exportJson","appName","exportHtml","userMapboxToken","exportMapboxAccessToken","exportMap","uiState","thumbnail","exporters","getGlConst","GL","setLayerBlending","gl","layerBlending","blending","LAYER_BLENDINGS","blendFunc","blendEquation","setParameters","BLEND","flattenMessages","nestedMessages","prefix","messages","prefixedKey","assign","mergeMessages","defaultMessages","userMessages","isObject","en","userEnFlat","acc","_observerRegistry","getObserverRegistry","callbacks","Map","resizeObserver","ResizeObserver","entries","observer","_step","_iterator","_createForOfIteratorHelper","_callbacks$get","entry","subscribe","callback","observe","unsubscribe","unobserve","observeDimensions","handleResize","throttleDelay","registry","handler","throttle","unobserveDimensions","contentRect","_entry$contentRect","getBoundingClientRect","_node$getBoundingClie","MAPBOX_TILE_SIZE","isLat","isLng","validateBounds","bounds","getCenterAndZoomFromBounds","zoom","geoViewport","viewport","center","normalizeEvent","_event$target","x","clientX","clientY","top","point","location","unproject","targetZ","lngLat","validateToken","token","mapUrlRg","httpRg","getDefaultLayerGroupVisibility","_ref$layerGroups","layerGroups","layer","slug","defaultVisibility","resolver","_ref2$visibleLayerGro","mapStyle","visibleLayerGroups","editTopMapStyle","memoize","visibleFilters","lg","filteredLayers","layers","editBottomMapStyle","NO_MAP_ID","EMPTY_MAPBOX_STYLE","invisibleFilters","isValidStyleUrl","getStyleDownloadUrl","styleUrl","accessToken","mapboxApiUrl","styleId","DEFAULT_MAPBOX_API_URL","getStyleImageIcon","_ref5$mapboxApiUrl","_ref5$mapState","mapState","longitude","latitude","_ref5$mapW","_ref5$mapH","scaleMapStyleByResolution","mapboxStyle","labelLayerFilter","DEFAULT_LAYER_GROUPS","zoomOffset","log2","clondDeep","maxzoom","minzoom","layout","stops","mergeLayerGroupVisibility","defaultLayerGroup","currentLayerGroup","isValidMapInfo","mapInfo","MAP_INFO_CHARACTER","addNewLayersToSplitMap","splitMaps","newLayers","settings","newLayer","isVisible","removeLayerFromSplitMaps","_settings$layers","_layer$id","_toPropertyKey","getInitialMapLayersForSplitMap","currentLayer","computeSplitMapLayers","mapLayers","duplicate","cloneDeep","computeDeckEffects","effectOrder","effectId","effect","findById","effects","isEnabled","deckEffect","LIGHT_AND_SHADOW_EFFECT","_effect$parameters","parameters","timeMode","sunLight","directionalLights","LIGHT_AND_SHADOW_EFFECT_TIME_MODES","current","now","animation","_visState$animationCo","_filter$value$","_filter$value","filters","FILTER_TYPES","timeRange","FILTER_VIEW_TYPES","enlarged","syncedWithLayerTimeline","lon","_SunCalc$getTimes","SunCalc","getTimes","sunrise","sunset","isDaytime","outputUniformShadow","intensity","sunLightIntensity","updateEffect","fixEffectOrder","lightShadowEffect","ind","indexOf","unshift","reorderEffectOrder","originEffectId","destinationEffectId","activeIndex","overIndex","validateEffectParameters","effectDescription","defaultValue","_defaultValue$i","isStyleUsingMapboxTiles","_mapStyle$stylesheet","sources","stylesheet","sourceId","tiles","tileUrl","transformRequest","onViewPortChange","viewState","onUpdateMap","onViewStateChange","primary","mapIndex","_viewState$width","_viewState$height","restViewState","transitionDuration","TRANSITION_DURATION","getMapLayersFromSplitMaps","_splitMaps","getViewportFromMapState","WebMercatorViewport","DataRow","dataContainer","rowIndex","_classCallCheck","this","_dataContainer","_rowIndex","_createClass","columnIndex","_this$_dataContainer","rowAsArray","_this$_dataContainer2","numColumns","out","column","sharedRowDesc","rowsIterator","_marked2","columnIterator","sharedRow","numRows","row","_context2","ArrowDataContainer","_cols","_numColumns","_numRows","_fields","_numChunks","updateData","tSharedRow","createSharedRow","setSource","col","_toConsumableArray","func","_options$start","start","_options$end","end","endRow","_options$start2","_options$end2","initialValue","arrowDataTypeToFieldType","arrowType","arrow","isDate","isTimestamp","isTime","isFloat","isInt","isBool","isUtf8","isNull","isBinary","isDictionary","isFixedSizeBinary","isFixedSizeList","isList","isMap","isStruct","arrowDataTypeToAnalyzerDataType","RowDataContainer","_data$rows$","_rows","_","indices","mappedRowIndex","IndexedDataContainer","parentDataContainer","_parentDataContainer","_indices","_mappedRowIndex","_this","DataForm","ROWS_ARRAY","COLS_ARRAY","inputDataFormat","createDataContainer","createIndexedDataContainer","numberOfRows","getQuantileDomain","sortFunc","getOrdinalDomain","getLinearDomain","extent","getLogDomain","_getLinearDomain","_getLinearDomain2","d0","getCentroid","h3ToGeo","idToPolygonGeo","properties","vertices","h3ToGeoBoundary","geometry","coordinates","isClosed","getHexFields","firstDP","h3IsValid","isHexField","durationSecond","durationMinute","durationHour","durationDay","durationWeek","durationYear","TimestampStepMap","POSITIVE_INFINITY","histogramBins","enlargedHistogramBins","FILTER_UPDATER_PROPS","dataId","layerId","LIMITED_FILTER_EFFECT_PROPS","SupportedPlotType","default","FILTER_COMPONENTS","select","multiSelect","polygon","DEFAULT_FILTER_STRUCTURE","freeze","enabled","fixedDomain","side","ANIMATION_WINDOW","free","plotType","PLOT_TYPES","histogram","yAxis","interval","gpu","FILTER_ID_LENGTH","LAYER_FILTERS","getDefaultFilter","shouldApplyFilter","datasetId","validatePolygonFilter","dataset","failed","isValidFilterValue","l","filterValidators","validateFilter","_filter$view","filterDataId","filterDatasetIndex","initializeFilter","_applyFilterFieldName","applyFilterFieldName","mergeDomain","updatedFilter","updatedDataset","adjustValueToFilterDomain","validateFilterYAxis","validateFilterWithData","matchedAxis","getFilterPlot","getFilterProps","fieldDomain","filterProps","typeOptions","getPolygonFilterFunctor","getPosition","getPositionAccessor","LAYER_TYPES","icon","pos","isInPolygon","arc","line","hexagonId","dataToFeature","centroids","centroid","getFilterFunction","defaultFunc","isInRange","mappedValue","accessor","layerFilterFunctions","filterFunc","updateFilterDataId","filterDataByFilterTypes","dynamicDomainFilters","cpuFilters","filterFuncs","filteredIndexForDomain","filteredIndex","filterContext","filterFuncCaller","getFilterRecord","opt","filterRecord","dynamicDomain","cpu","ignoreDomain","cpuOnly","diffFilters","oldFilterRecord","filterChanged","record","items","oldFilter","filteredValue","getNumericFieldDomain","diff","ScaleUtils","getNumericStepSize","formatNumberByStep","_getHistogram","getHistogram","enlargedHistogram","abs","exponentialForm","toExponential","exponent","Decimal","toNumber","getTimestampFieldDomain","getTimeWidgetTitleFormatter","_getHistogram2","histogramConstruct","bins","d3Histogram","thresholds","ticks","bin","x0","x1","bound","ceil","booleanWithin","turfPoint","isValidTimeDomain","isFilterValidToSave","input","getColumnFilterProps","_filter$mappedValue","getColumnFieldIdx","lineChart","series","ascending","yDomain","xDomain","getDefaultFilterPlotType","filterPlotTypes","applyFiltersToDatasets","datasetIds","layersToFilter","appliedFilters","table","filterTable","option","fieldIndex","newFilter","mergeFilterDomainStep","combinedDomain","featureToFilterValue","feature","filterId","getFilterIdInFeature","generatePolygonFilter","filterDatasetCPU","datasetFilters","cpuFilteredDataset","filterTableCPU","validateFiltersUpdateDatasets","filtersToValidate","validated","updatedDatasets","isMergingDatasets","_datasetIds$reduce","_validateFilterWithDa","augmentedDatasets","applyToDatasets","validatedFilter","isEqual","_filter$mappedValue2","getIntervalBins","_filter$plotType","getTimeWidgetHintFormatter","isSideFilter","parseUri","parser","strictMode","q","$0","$1","$2","validateUrl","strict","loose","loadRemoteResourceError","loadMapSampleFile","samples","setLoadingMapStatus","isMapLoading","onExportFileSuccess","provider","dispatch","isPublic","getShareUrl","getMapUrl","onLoadCloudMapSuccess","loadParams","mapUrl","detectResponseError","statusCode","loadRemoteMap","responseError","loadRemoteRawData","loadFiles","File","_error$target","responseText","loadSample","pushRoute","getState","_routing$locationBefo","_routing$locationBefo2","routing","locationBeforeTransitions","keplergl","loadRemoteSampleMap","configUrl","loadRemoteConfig","loadRemoteData","loadRemoteResourceSuccess","toggleModal","_error$target2","requestJson","requestText","loaders","CSVLoader","ArrowLoader","GeoJSONLoader","load","shape","loadSampleConfigurations","sampleMapId","_error$target3","appReducer","handleActions","loaded","action","sampleMaps","DEFAULT_EXPORT_MAP","uiStateUpdaters","demoReducer","combineReducers","keplerGl","keplerGlReducer","initialState","currentModal","activeSidePanel","EXPORT_MAP_FORMATS","HTML","loadOptions","app","composedUpdaters","substr","processorMethod","processRowObject","processGeojson","processArrowTable","KeplerGlSchema","parseSavedConfig","keplerGlInstance","combinedUpdaters","addDataToMapUpdater","payload","centerMap","currentSample","errorNote","addNotificationUpdater","composedReducer","reducers","demo","routerReducer","middlewares","enhanceReduxMiddleware","thunk","routerMiddleware","browserHistory","enhancers","applyMiddleware","apply","composeEnhancers","compose","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","actionsBlacklist","createStore","StyledBanner","styled","div","_templateObject","_taggedTemplateLiteral","props","bgColor","fontColor","visible","Banner","_ref$bgColor","_ref$fontColor","_ref$height","onClose","show","React","Icons","Delete","onClick","StyledText","StyledLink","_templateObject2","DisableBanner","_templateObject3","FormLink","Announcement","onDisable","numFormat","StyledSampleGallery","StyledSampleMap","theme","textColorLT","StyledImageCaption","labelColorLT","StyledError","_templateObject4","SampleMap","locale","imageUrl","FormattedMessage","rowCount","size","SampleMapGallery","onLoadSample","useEffect","LoadingDialog","sp","propTypes","PropTypes","arrayOf","isRequired","onLoadRemoteMap","StyledDescription","InputForm","panelBackgroundLT","StyledInput","inputPadding","titleColorLT","inputBoxHeight","inputFontSize","StyledFromGroup","StyledInputLabel","_templateObject5","_templateObject6","StyledErrorDescription","_templateObject7","CORS_LINK_MESSAGE","corsLink","LoadRemoteMap","_Component","_len","args","_key","_callSuper","_assertThisInitialized","submitted","setState","_this$state","_inherits","_this$props$option","displayedError","onChange","onMapUrlChange","Button","cta","Component","StyledMapIcon","media","portable","StyledTrySampleData","subtextColorLT","SampleMapsTab","defaultMessage","ArrowRight","CustomLoadDataModalFactory","LoadDataModal","LoadDataModalFactory","defaultLoadingMethods","defaultProps","loadingMethods","additionalMethods","elementType","tabElementType","lm","withState","deps","StyledFloatingPanel","StyledProjectPanel","panelBackground","panelBoxShadow","titleTextColor","textColor","StyledPanelAction","active","textColorHl","subtextColor","LinkButton","rel","iconComponent","CloseButton","IconRoundSmall","Close","LinkRenderer","getURL","SampleMapPanel","_useState","useState","_useState2","isActive","setActive","ReactMarkdown","detail","renderers","Files","CodeAlt","MapControlButton","classnames","preventDefault","Docs","StyledMapControlPanel","StyledMapControlContextPanel","StyledMapControlOverlay","rightPanelVisible","rightPanelMarginTop","rightPanelMarginRight","fullHeight","bottomWidgetPaddingBottom","CustomMapControlFactory","EffectControl","EffectManager","_MapControl$defaultPr","_MapControl$defaultPr2","MapControl","MapControlFactory","actionComponents","CustomMapControl","_props$mapControls","_props$mapControls$ef","showEffects","mapControls","isExport","_extends","CustomPanelHeaderFactory","PanelHeader","PanelHeaderFactory","actionItems","EffectControlFactory","EffectManagerFactory","fi","ca","es","cn","DropboxIcon","IconWrapper","viewBox","predefinedClassName","totalColor","_getPrototypeOf","_possibleConstructorReturn","Reflect","construct","_isNativeReflectConstruct","allowArrayLike","it","minLen","_arrayLikeToArray","_unsupportedIterableToArray","F","_e","normalCompletion","didErr","_e2","arr","len","arr2","KEPLER_DROPBOX_FOLDER_LINK","DropboxProvider","_Provider","clientId","_folderLink","_path","_initializeDropbox","_getUser","_logout","_downloadMap","_uploadMap","_listMaps","_login","_asyncToGenerator","_callee2","_this2","_authLink","authWindow","handleToken","_callee","user","close","removeEventListener","_dropbox","setAccessToken","getUser","localStorage","setItem","_x","addEventListener","_callee3","_this$_parseEntries","pngs","visualizations","_context3","filesListFolder","path","_parseEntries","_getThumbnailRequests","thb","matchViz","t0","_handleDropboxError","_callee4","mapData","_ref2$options","fileContent","_context4","overwrite","filesUpload","contents","summary","error_summary","getFileConflictError","_shareFile","path_lower","_x2","_callee5","json","_context5","filesDownload","_readFile","KEPLER_FORMAT","_x3","jsonString","getItem","parse","_callee6","_context6","authTokenRevoke","removeItem","fullUrl","protocol","host","_shareUrl","getAccessToken","hash","query","params","URLSearchParams","parseQueryString","substring","access_token","Dropbox","setClientId","_callee7","_context7","usersGetCurrentAccount","_getUserFromAccount","fileReader","readAsText","mapLink","fullURL","_this3","shareArgs","path_display","sharingListSharedLinks","links","sharingCreateSharedLinkWithSettings","_overrideUrl","shareUrl","folderLink","getAuthenticationUrl","origin","btoa","display_name","email","abbreviated","abbreviated_name","_this4","lastBatch","batch","filesGetThumbnailBatch","img","cursor","has_more","_cursor","client_modified","viz","updatedAt","Provider","CartoIcon","stroke","strokeWidth","fill","fillRule","transform","fillOpacity","CartoProvider","currentMap","_carto","OAuthApp","authorization","scopes","serverUrlTemplate","namespace","setClientID","_getAccessToken","onCloudLoginSuccess","login","_manageErrors","onCloudLogoutSuccess","oauth","clear","sync","_ref$mapData","_ref$options","_options$isPublic","_options$overwrite","_mapData$map","_mapData$map2","cartoDatasets","cs","thumbnailBase64","capturedName","visName","_convertDataset","getCustomStorage","_blobToBase64","updateVisualization","isprivate","createVisualization","_getMapPermalinkFromParams","mapId","owner","username","privateMap","t1","expired","getUserName","queryParams","visualization","currentUsername","getVisualization","PublicStorageReader","panelDisabled","vis","formattedVis","getVisualizations","lastModification","lastmodified","mapParams","isPrivate","_composeURL","allData","columns","formatCsv","throwException","blob","reader","FoursquareIcon","extractMapFromFSQResponse","latestState","FoursquareProvider","authDomain","apiURL","userMapsURL","FSQIcon","_auth0","Auth0Client","scope","authorizationParams","redirect_uri","audience","cacheLocation","isNew","_getHeaders","loginWithPopup","logout","openUrl","_map$info","_map$info$title","_map$info$description","headers","mapResponse","createMap","getHeaders","importSource","model","baseApi","previewReadPath","getTokenSilently","_callee8","_context8","Authorization","Accept","CLOUD_PROVIDERS","sampleTripDataConfig","visConfig","colorMap","visualChannels","colorField","lat0","lng0","lat1","lng1","targetColor","styleType","road","border","building","water","land","mapStyles","custom","features","OBJECTID","ZIP_CODE","ID","STREETNAME","CNN","CNNTEXT","LAYER","code","address","exits","opacity","thickness","strokeColor","strokeColorRange","radius","sizeRange","radiusRange","heightRange","elevationScale","stroked","filled","enable3d","wireframe","textLabel","offset","anchor","alignment","colorScale","sizeField","sizeScale","strokeColorField","strokeColorScale","heightField","heightScale","radiusField","radiusScale","interactionConfig","fieldsToShow","brush","geocoder","b9tnac","console","hex_id","coverage","coverageRange","coverageField","coverageScale","avlgol","isAvailable","topLayerGroups","isSplit","vendor","KeplerGl","require","injectComponents","BannerKey","keplerGlGetState","shadecolorslighter","shadecolorsdarker","GlobalStyle","labelColor","CONTAINER_STYLE","transition","position","_plotdatafromgeoJSONAPI2","geoJSON","dprops","fprops","externalDataConfig","fkey","fshadesort","App","_loadExternalProps","_loadExternalData","_loadExternalShadingSort","_loadExternalShadingKey","showBanner","_hideBanner","_addNotifications","_plotdatafromgeoJSONAPI","legend","isSticky","mapToLoad","addDataToMap","readOnly","keepExistingConfig","sliceData","sampleGeojsonPoints","_loadGeojsonData","replaceDataInMap","datasetToReplaceId","datasetToUse","cloudModalOpen","mapbox","getMap","on","innerWidth","innerHeight","mapboxtoken","initMap","loadExternalJSONData","loadExternalData","loadExternalShadingSortData","loadExternalShadingSort","loadExternalShadingKeyData","loadExternalShadingKey","loadExternalPropsData","loadExternalProps","_this$props","_this$props$params","_this$props$params2","_this$props$location","_this$props$location3","cloudProvider","loadCloudMap","onSuccess","plotdatafromgeojson","notifications","_notifications$","notification","addNotification","datajson","keysfound","skey","sortvalue","_loadPointData","sampleTripData","processCsvData","sampleAnimateTrip","sampleGeojson","sampleGeojsonConfig","h3MapConfig","s2MapConfig","sh","Keplertemplate","states","ThemeProvider","ref","_disableBanner","AutoSizer","cloudProviders","localeMessages","onExportToCloudSuccess","featureFlags","connect","onAuthEnterCallback","nextState","authProvider","providerName","getCloudProvider","opener","getAccessTokenFromLocation","postMessage","history","syncHistoryWithStore","store","appRoute","Route","Demo","onEnter","IndexRoute","Root","Router","domcreateInterval","setInterval","getElementById","clearInterval","ReactDOM","createRoot","render","VERSIONS","v0","v1","CURRENT_VERSION","Schema","_ref$version","_ref$key","_ref$properties","parents","accumulator","_getPropertyValueFromSchema","operation","internal","_isCurrentVersion","outdatedVersionError","savePropertiesOrApplySchema","loadPropertiesOrApplySchema","FieldSchema","_Schema","propertiesV0","propertiesV1","DatasetSchema","_Schema2","datasetFlattened","flattenData","updatedFields","sampleData","pick","datasetSchema","CustomMapStyleSchema","MapStyleSchemaV1","saveCustomStyle","customStyle","buildingLayer","threeDBuildingColor","mapStyleSchema","bearing","dragRotate","pitch","isViewportSynced","isZoomLocked","splitMapViewports","mapStateSchema","dimensionPropsV0","DimensionFieldSchemaV0","accumulated","_parents$slice","defaultRadiusRange","extruded","geojsonSizeFieldV0ToV1","DimensionScaleSchemaV0","_len2","_key2","_parents$slice3","LayerConfigSchemaV0","_Schema3","_len3","_key3","saved","LayerColumnsSchemaV0","_Schema4","_len4","_key4","LayerConfigToVisConfigSchemaV0","_Schema5","_this5","_len5","_key5","accumulatedConfig","LayerVisConfigSchemaV0","_Schema6","_this6","_len6","_key6","_parents$slice5","rename","elevationRange","propToRename","LayerConfigSchemaDeleteV0","_Schema7","_this7","_len7","_key7","layerPropsV0","hidden","colorAggregation","sizeAggregation","isAggregated","ColumnSchemaV1","_Schema8","ckey","_columns$ckey","TextLabelSchemaV1","_Schema9","tl","visualChannelModificationV1","vc","_parents$slice7","isOld","isPoint","LAYER_VIS_CONFIGS","VisualChannelSchemaV1","_Schema10","_parents$slice9","_parents$slice11","modified","visConfigModificationV1","_parents$slice13","outline","_parents$slice15","VisConfigSchemaV1","_Schema11","_this8","_len8","_key8","_parents$slice17","layerPropsV1","highlightColor","LayerSchemaV0","_Schema12","_this9","_len9","_key9","_this10","_parents$slice19","layerOrder","isValidToSave","_this11","FilterSchemaV0","_Schema13","_this12","_len10","_key10","_this13","_this14","interactionPropsV0","InteractionSchemaV0","_Schema14","_this15","_len11","_key11","interactionPropsV1","InteractionSchemaV1","_Schema15","_this16","_len12","_key12","_this17","modifiedConfig","configType","fieldData","filterPropsV0","DimensionFieldSchema","_Schema16","SplitMapsSchema","_Schema17","_ref19","_ref20","_this18","convertLayerSettings","EffectsSchema","_Schema18","_this19","_len13","_key13","_this20","_parents$slice21","_this21","outEffect","filterPropsV1","overlayBlending","editor","VisStateSchemaV1","_Schema19","visStateSchemaV0","visStateSchemaV1","visStateSchema","toSave","toLoad","_visStateSchemaV0$loa","reducerSchema","KeplerGLSchemaManager","KeplerGLSchema","_ref$reducers","_ref$datasets","_ref$validVersions","validVersions","_validVersions","_version","_reducerSchemas","_datasetSchema","_datasetLastSaved","_savedDataset","getDatasetToSave","created_at","getMapInfo","savedDatasets","savedConfig","parseSavedData","hasDataChanged","ds","validVersion","validateVersion","transitionFast","transitionSlow","boxShadow","boxSizing","borderRadius","borderColor","borderColorLT","fontFamily","fontWeight","fontSize","lineHeight","labelHoverColor","dataTableTextColor","subtextColorActive","panelToggleBorderColor","panelTabWidth","textColorHlLT","activeColor","activeColorLT","activeColorHover","errorColor","logoColor","btnFontFamily","primaryBtnBgd","primaryBtnActBgd","primaryBtnColor","primaryBtnActColor","primaryBtnBgdHover","primaryBtnRadius","primaryBtnFontSizeDefault","primaryBtnFontSizeSmall","primaryBtnFontSizeLarge","primaryBtnBorder","secondaryBtnBgd","secondaryBtnActBgd","secondaryBtnColor","secondaryBtnActColor","secondaryBtnBgdHover","secondaryBtnBorder","ctaBtnBgd","ctaBtnBgdHover","ctaBtnActBgd","ctaBtnColor","ctaBtnActColor","linkBtnBgd","linkBtnActBgd","linkBtnColor","linkBtnActColor","linkBtnActBgdHover","linkBtnBorder","negativeBtnBgd","negativeBtnActBgd","negativeBtnBgdHover","negativeBtnBorder","negativeBtnColor","negativeBtnActColor","floatingBtnBgd","floatingBtnActBgd","floatingBtnBgdHover","floatingBtnBorder","floatingBtnBorderHover","floatingBtnColor","floatingBtnActColor","selectionBtnBgd","selectionBtnActBgd","selectionBtnColor","selectionBtnActColor","selectionBtnBgdHover","selectionBtnBorder","selectionBtnBorderColor","selectionBtnBorderActColor","scrollbarThumbColorLT","scrollbarThumbColorHoverLT","inputBoxHeightSmall","inputBoxHeightTiny","inputPaddingSmall","inputPaddingTiny","inputFontSizeSmall","inputFontWeight","inputBgd","inputBgdHover","inputBgdActive","inputBgdActiveLT","inputBorderColor","inputBorderHoverColor","inputBorderHoverColorLT","inputBorderActiveColor","inputBorderActiveColorLT","inputColor","inputBorderRadius","inputPlaceholderColor","inputPlaceholderColorLT","inputPlaceholderFontWeight","inputBoxShadow","inputBoxShadowActive","inputBoxShadowActiveLT","secondaryInputBgd","secondaryInputBgdHover","secondaryInputBgdActive","secondaryInputColor","secondaryInputBorderColor","secondaryInputBorderActiveColor","dropdownSelectHeight","selectColor","selectColorLT","selectActiveBorderColor","selectFontSize","selectFontWeight","selectFontWeightBold","selectColorPlaceHolder","selectColorPlaceHolderLT","selectBackground","selectBackgroundHover","selectBackgroundLT","selectBackgroundHoverLT","selectBorderColor","selectBorderColorLT","selectBorderRadius","selectBorder","panelTabColor","dropdownListHighlightBg","dropdownListHighlightBgLT","dropdownListShadow","dropdownListBgd","toolbarItemBgdHover","toolbarItemIconHover","toolbarItemBorderHover","toolbarItemBorderRaddius","dropdownListBgdLT","dropdownListBorderTop","dropdownListBorderTopLT","dropdownListLineHeight","dropdownWrapperZ","dropdownWapperMargin","dndOverBackgroundColor","switchWidth","switchHeight","switchLabelMargin","switchTrackBgd","switchTrackBgdActive","switchTrackBorderRadius","switchBtnBgd","switchBtnBgdActive","switchBtnBoxShadow","switchBtnBorderRadius","switchBtnWidth","switchBtnHeight","secondarySwitchTrackBgd","secondarySwitchBtnBgd","checkboxWidth","checkboxHeight","checkboxMargin","checkboxBorderColor","checkboxBorderRadius","checkboxBorderColorLT","checkboxBoxBgd","checkboxBoxBgdChecked","radioRadius","radioBorderRadius","radioBorderColor","radioButtonRadius","radioButtonBgdColor","sidePanelHeaderBg","sidePanelHeaderBorder","layerConfigGroupMarginBottom","layerConfigGroupPaddingLeft","sidePanelInnerPadding","sidePanelBorder","sidePanelBorderColor","sidePanelBg","sidePanelScrollBarWidth","sidePanelScrollBarHeight","sideBarCloseBtnBgd","sideBarCloseBtnColor","sideBarCloseBtnBgdHover","sidePanelTitleFontsize","sidePanelTitleLineHeight","panelContentBackground","panelBackgroundHover","panelHeaderBorderRadius","chickletBgd","chickletBgdLT","panelHeaderIcon","panelHeaderIconActive","panelHeaderIconHover","panelHeaderHeight","layerPanelHeaderHeight","panelBorderRadius","panelToggleMarginRight","panelToggleBottomPadding","panelBorderColor","panelBorder","panelBorderLT","mapPanelBackgroundColor","mapPanelHeaderBackgroundColor","tooltipBg","tooltipBgLT","tooltipColor","tooltipColorLT","tooltipBoxShadow","tooltipFontSize","layerTypeIconSizeL","layerTypeIconPdL","layerTypeIconSizeSM","layerPanelToggleOptionColor","layerPanelToggleOptionColorActive","sidepanelDividerBorder","sidepanelDividerMargin","sidepanelDividerHeight","bottomInnerPdSide","bottomInnerPdVert","bottomPanelGap","bottomPanelGapPalm","bottomWidgetPaddingTop","bottomWidgetPaddingRight","bottomWidgetPaddingLeft","bottomWidgetBgd","modalTitleColor","modalTitleFontSize","modalTitleFontSizeSmaller","modalFooterBgd","modalImagePlaceHolder","modalPadding","modalLateralPadding","modalPortableLateralPadding","modalOverLayZ","modalOverlayBgd","modalContentZ","modalFooterZ","modalTitleZ","modalButtonZ","modalDropdownBackground","modalDialogBgd","modalDialogColor","sliderBarColor","sliderBarBgd","sliderBarHoverColor","sliderBarRadius","sliderBarHeight","sliderHandleHeight","sliderHandleWidth","sliderHandleColor","sliderHandleTextColor","sliderInactiveBorderColor","sliderBorderRadius","sliderHandleHoverColor","sliderHandleAfterContent","sliderHandleShadow","sliderInputHeight","sliderInputWidth","sliderInputFontSize","sliderInputPadding","sliderMarginTopIsTime","sliderMarginTop","sliderMarginBottom","geocoderWidth","geocoderTop","geocoderRight","geocoderInputHeight","mapControlTop","rangeBrushBgd","histogramFillInRange","histogramFillOutRange","axisFontSize","axisFontColor","timeTitleFontSize","rangePlotMargin","bottom","rangePlotMarginLarge","rangePlotH","rangePlotContainerH","rangePlotHLarge","rangePlotHLargePalm","rangePlotContainerHLarge","rangePlotContainerHLargePalm","notificationColors","warning","notificationPanelWidth","notificationPanelItemWidth","notificationPanelItemHeight","progressBarColor","actionPanelWidth","actionPanelHeight","fieldTokenRightMargin","fieldTokenHeight","fieldTokenWidth","textTruncate","maxWidth","overflow","textOverflow","whiteSpace","wordWrap","layerConfigGroupLabelBorderLeft","layerConfigGroupLabelMargin","layerConfigGroupLabelPadding","layerConfigGroupColor","layerConfigGroupLabelLabelMargin","layerConfigGroupLabelLabelFontSize","styledConfigGroupHeaderBorder","layerConfiguratorBorder","layerConfiguratorBorderColor","layerConfiguratorMargin","layerConfiguratorPadding","breakPoints","palm","desk","effectConfiguratorMargin","effectConfiguratorPadding","effectPanelWidth","effectPanelHeight","effectPanelPaddingSide","effectPanelPaddingTop","effectPanelAddEffectFontFamily","effectTypeIconMarginSide","effectTypeIconSizeL","effectTypeIconBgHoverColor","effectPanelTextMain","effectPanelTextSecondary1","effectPanelTextSecondary2","effectPanelTextSecondary3","effectPanelElementColor","effectPanelElementColorActive","effectPanelElementColorHovered","effectPanelElementColorSelected","effectPanelElementColorSun","css","disabled","inputLT","secondaryInput","chickletedInputContainer","chickletedInput","chickletedInputLT","secondaryChickletedInput","inlineInput","_templateObject8","switchTrack","_templateObject9","checked","switchButton","_templateObject10","inputSwitch","_templateObject11","checkboxBox","_templateObject12","checkboxCheck","_templateObject13","inputCheckbox","_templateObject14","radioTrack","_templateObject15","radioButton","_templateObject16","inputRadio","_templateObject17","secondaryRadio","_templateObject18","secondarySwitch","_templateObject19","dropdownScrollBar","_templateObject20","dropdownScrollBarLT","_templateObject21","dropdownListAnchor","_templateObject22","dropdownListAnchorLT","_templateObject23","dropdownListSize","_templateObject24","dropdownListItem","_templateObject25","dropdownListItemLT","_templateObject26","dropdownListHeader","_templateObject27","dropdownListSection","_templateObject28","dropdownList","_templateObject29","dropdownListLT","_templateObject30","sidePanelScrollBar","_templateObject31","panelDropdownScrollBar","_templateObject32","scrollBar","_templateObject33","modalScrollBar","_templateObject34","DIMENSIONS","headerRowHeight","headerRowWStatsHeight","headerStatsControlHeight","rowHeight","headerPaddingTop","headerPaddingBottom","cellPaddingSide","edgeCellPaddingSide","cellFontSize","gridPaddingSide","optionButtonColor","headerCellBackground","headerCellBorderColor","headerCellStatsBackground","headerCellStatsControlBackground","headerCellIconColor","cellBorderColor","evenRowBackground","oddRowBackground","pinnedGridBorderColor","timeDisplayBorderRadius","timeDisplayHeight","timeDisplayMinWidth","timeDisplayOpacity","timeDisplayPadding","exportIntraSectionMargin","progressBarTrackColor","themeLT","themeBS","ctnBtnBgd","ctnBtnBgdHover","ctnBtnColor","ctnBtnActColor","breakPointValues","first","noop","LOAD_FILE_TASK","Task","fromPromise","fileCache","readFileInBatches","PROCESS_FILE_DATA","processFileData","LOAD_MAP_STYLE_TASK","taskCreator","EXPORT_FILE_TO_CLOUD_TASK","uploadMap","LOAD_CLOUD_MAP_TASK","downloadMap","ACTION_TASK","fromCallback","cb","DELAY_TASK","delay","UNWRAP_TASK","promise","assignGpuChannel","gpuChannel","datasetIdx","findGpuChannel","channel","dataIdx","MAX_GPU_FILTERS","defaultGetIndex","defaultGetData","getGpuFilterProps","filterRange","triggers","channels","_loop","_filter$domain2","_filter$domain3","filterValueAccessor","getIndex","getData","_filter$domain","getDatasetFieldIndexForFilter","MIN_SAFE_INTEGER","getFilterValueAccessor","filterValueUpdateTriggers","datasetIndex","maybeToDate","foundMatchingFields","re","suffixPair","partnerIdx","altIdx","ALTITUDE_FIELDS","alt","copyTable","copyTableAndUpdate","getFieldValueAccessor","KeplerTable","_ref$supportedFilterT","supportedFilterTypes","_ref$disableDataOpera","disableDataOperation","dataContainerData","datasetInfo","allIndexes","getPlainIndex","defaultMetadata","carry","TRIP_POINT_FIELDS","_foundMatchingFields","trimName","defaultName","suffix","findPointFieldPairs","gpuFilter","_this$dataContainer$u","_this$dataContainer","update","columnName","fd","_assetField","rowIdx","getColumnField","newField","newColor","getColumnFilterDomain","updateColumnField","changedFilters","shouldCalDomain","shouldCalIndex","filterResult","filteredIdxCPU","filterRecordCPU","copied","filtered","scaleType","SCALE_TYPES","indexValueAccessor","sortFunction","ordinal","quantile","quantize","linear","sqrt","condition","getNewDatasetColor","presetColors","usedColors","uniq","createNewDataEntry","opts","validatedData","keplerTable","mergeFilters","filtersToMerge","fromConfig","preserveFilterOrder","gpuPerDataset","allFilters","_validateFiltersUpdat","updatedFilters","insertItemBasedOnPreservedOrder","datasetsToFilter","flattenDeep","filterToBeMerged","replaceFilterDatasetIds","savedFilter","dataIdToUse","replaced","newDataId","isSavedLayerConfigV1","layerConfig","parseLayerConfig","_schema$parseSavedCon","_schema$parseSavedCon2","_schema$parseSavedCon3","currentItems","preservedOrder","defaultStart","newItems","item","expectedIdx","insertAt","preceedIdx","preceedItemId","arrayInsert","createLayerFromConfig","parsedLayerConfig","_validateLayersByData","validateLayersByDatasets","layerClasses","allowEmptyColumn","updateLayerDomain","serializeLayer","_serializedVisState$l","serializedVisState","serializeVisState","serializeEffect","newEffect","_serializedVisState$e","_schema$parseSavedCon4","savedState","mergeLayers","layersToMerge","preserveLayerOrder","getLayerOrderFromLayers","unmerged","toMerge","_l$config","_validateLayersByData2","mergedLayer","_insertLayerAtRightOr","insertLayerAtRightOrder","newLayerOrder","layerToBeMerged","currentLayers","layersToInsert","currentOrder","currentLayerQueue","newLayerOrderQueue","mergeInteractions","interactionToBeMerged","merged","currentConfig","configSaved","configToMerge","_mergeInteractionTool","mergeInteractionTooltipConfig","mergedTooltip","unmergedTooltip","savedUnmergedInteraction","_unmerged$tooltip","_unmerged$tooltip2","_state$interactionToB","_state$interactionToB2","_unmerged$tooltip3","mergeSplitMaps","sm","pushTo","splitMapsToBeMerged","mergeEffects","newEffects","createEffect","deepmerge","isConfigActive","tooltipConfig","_loop2","allFields","foundFieldsToShow","mergeLayerBlending","mergeOverlayBlending","OVERLAY_BLENDINGS","mergeAnimationConfig","validateSavedLayerColumns","savedCols","emptyCols","_loop3","_Object$keys","_i","allColFound","validateColumn","rv","throwOnError","requiredColumns","k","optional","missingColumns","configColumns","invalidColumns","_columns$k","validator","validateSavedTextLabel","savedTextLabel","layerTextLabel","savedTextLabels","validateSavedVisualChannels","savedLayer","foundField","foundChannel","updateLayerConfig","validateVisualChannel","_savedLayer$config","_savedLayer$config$fi","_newLayer$config$fiel","_layer$config","validateLayer","validateLayerWithData","columnConfig","getLayerColumns","copiedVisConfig","copyLayerConfig","shallowCopy","validateVisConfig","mergeEditor","savedEditor","_savedEditor$visible","mergeDatasetsByOrder","newDataEntries","preserveDatasetOrder","newDatasetIds","_state$preserveDatase","VIS_STATE_MERGERS","merge","toMergeProp","preserveOrder","replaceParentDatasetIds","dataIdToReplace","_interactionConfig$to","_interactionConfig$to2","saveUnmerged","isValidMerger","merger","mergeStateFromMergers","mergers","postMergerPayload","_ret","mergedState","mergerQueue","fn","before","shift","hasPropsToMerge","mergerActionPayload","getPropValueToMerger","mergerProps","resetStateToMergeProps","_callFunctionGetTask","getGlobalTaskQueue","_callFunctionGetTask2","updatedState","newTasks","waitToFinish","allMerged","toMergeProps","identity","payload_","apply_","updater","with_","if_","pred","compose_","fns","state2","merge_","pick_","swap_","map_","filterOutById","removeElementAtIndex","findDefaultLayer","previous","lc","findDefaultLayerProps","foundLayers","setInitialLayerConfig","calculateLayerData","oldLayerData","layerData","isValid","_oldDataUpdateTriggers","hasAllColumns","formatLayerData","errorMessage","getLayerHoverProp","hoverInfo","layersToRender","picked","getHoverData","_datasets$dataId","renderDeckGlLayer","layerCallbacks","layerIndex","clicked","objectHovered","renderLayer","isLayerRenderable","GEOCODER_LAYER_ID","shouldRenderLayer","isLayerVisible","prepareLayersForDeck","overlayType","OVERLAY_TYPE_CONST","deckgl","prepareLayersToRender","getCustomDeckLayers","deckGlProps","isFunction","topLayers","bindLayerCallbacks","computeDeckLayers","primaryMap","layersForDeck","editorInfo","dataLayers","currentLayersForDeck","overlays","bindedLayerCallbacks","layerOverlay","ThreeDBuildingLayer","updateTriggers","getFillColor","_getCustomDeckLayers","_getCustomDeckLayers2","customBottomDeckLayers","customTopDeckLayers","editorLayer","getEditorLayer","reorderLayerOrder","originLayerId","destinationLayerId","addLayerToLayerOrder","TOOLTIP_MINUS_SIGN","NEGATIVE_SIGNS","BRUSH_CONFIG","findFieldsToShow","maxDefaultTooltips","DEFAULT_TOOLTIP_FIELDS","curr","ptFields","pairs","seg","autoFindTooltipFields","getTooltipDisplayDeltaValue","primaryData","compareType","displayDeltaValue","baseDp","dp","deltaValue","COMPARE_TYPES","RELATIVE","deltaFormat","DECIMAL_PERCENT_FULL_2","DECIMAL_DECIMAL_FIXED_3","deltaFirstChar","getTooltipDisplayValue","disableStackCapturing","defaultInteractionConfig","compareMode","ABSOLUTE","coordinate","DEFAULT_ANIMATION_CONFIG","hideControl","duration","DEFAULT_EDITOR","EDITOR_MODES","DRAW_POLYGON","selectedFeature","INITIAL_VIS_STATE","editingDataset","mousePos","MAX_DEFAULT_TOOLTIPS","LayerClasses","fileLoading","fileLoadingProgress","updateStateWithLayerAndData","lyr","updateStateOnLayerVisibilityChange","newState","updateAnimationDomain","VISUAL_CHANNEL_PROP_TYPES","applyLayerConfigUpdater","_serializeLayer","oldLayerId","newLayerConfig","newParsedLayer","oldLayer","oldLayerIndex","layerTypeChangeUpdater","layerTypeChange","newLayerId","applyLayerConfig","changedProps","pickPropsOf","serializedOldLayer","serializedNewLayer","changed","layerVisConfigChangeUpdater","layerVisConfigChange","channelName","channelPropNames","layerVisualChannelChangeUpdater","layerVisualChannelConfigChange","layerConfigChangeUpdater","layerConfigChange","newConfig","_action$newConfig","restConfig","stateWithDataId","layerDataIdChangeUpdater","nextLayer","shouldCalculateLayerData","updateLayerDataResult","layerSetIsValidUpdater","layerToUpdate","newData","_calculateLayerData","layerTextLabelChangeUpdater","_oldLayer$getDefaultL","_oldLayer$getDefaultL2","_oldLayer$getDefaultL3","defaultTextLabel","getDefaultLayerConfig","DEFAULT_TEXT_LABEL","newTextLabel","newFields","currentFields","addFields","deleteFields","af","addOrRemoveTextLabels","updateTextLabelPropAndValue","loadedLayer","validateExistingLayerWithData","_calculateLayerData2","newType","oldId","assignConfigToLayer","visConfigSettings","isLayerHovered","_calculateLayerData3","oldLayerMap","otherLayers","updateLayerVisualChannel","_calculateLayerData4","newVisConfig","_calculateLayerData5","setFilterAnimationTimeUpdater","setFilterUpdater","setFilterAnimationWindowUpdater","_newFilter$layerId","_action$valueIndex","valueIndex","newDataset","gpuFilters","layerIdDifference","xor","lid","newDataIds","enlargedFilter","datasetIdsToFilter","filteredDatasets","updateAllLayerDomainData","setFilterPlotUpdater","newProp","_ref3$valueIndex","addFilterUpdater","layerColorUIChangeUpdater","oldVixConfig","updateLayerColorUI","toggleFilterAnimationUpdater","toggleLayerAnimationUpdater","toggleLayerAnimationControlUpdater","updateFilterAnimationSpeedUpdater","setLayerAnimationTimeUpdater","updateLayerAnimationSpeedUpdater","setFilterViewUpdater","shouldResetOtherFiltersView","toggleFilterFeatureUpdater","removeFilterUpdater","_state$filters$idx","newFilters","newEditor","addLayerUpdater","newLayerData","_action$datasetId","defaultDataset","Layer","removeLayerUpdater","layerToRemove","reorderLayerUpdater","order","duplicateLayerUpdater","originalLayerOrderIdx","newLabel","postfix","LAYER_ID_LENGTH","addEffectUpdater","setProps","removeEffectUpdater","effectToRemove","reorderEffectUpdater","updateEffectUpdater","effectOrderId","removeDatasetUpdater","datasetKey","_state$datasets","newDatasets","_config$fieldsToShow","removeDatasetFromInteractionConfig","updateLayerBlendingUpdater","updateOverlayBlendingUpdater","showDatasetTableUpdater","updateTableColorUpdater","updateDatasetPropsUpdater","resetMapConfigUpdater","receiveMapConfigUpdater","_ref14$payload","_ref14$payload$config","_ref14$payload$option","_step2","_iterator2","layerHoverUpdater","interactionConfigChangeUpdater","contradict","layerClickUpdater","pinned","mapClickUpdater","mouseMoveUpdater","_ref15","mousePosition","toggleSplitMapUpdater","closeSpecificMapAtIndex","toggleLayerForMapUpdater","_ref16","updateVisDataUpdater","previousState","_ref17","_ref17$info","rest","_excluded2","layerMergers","waitForLayerData","applyMergersUpdater","mergeStateResult","fDataId","datasetFiltered","dataEmpty","autoCreateLayers","addDefaultLayers","tooltipFields","autoCreateTooltips","addDefaultTooltips","postMergeUpdater","renameDatasetUpdater","ALLOWED_UPDATE_DATASET_PROPS","existing","validatedProps","_entry","validateDatasetUpdateProps","_state$splitMaps$inde","indexToRetrieve","loadFilesUpdater","files","_action$onFinish","onFinish","loadFilesSuccess","initialFileLoadingProgress","loadNextFileUpdater","filesToLoad","loadFileStepSuccessUpdater","_state$fileLoading","stateWithProgress","updateFileLoadingProgressUpdater","progress","percent","stateWithCache","withTask","loadNextFile","_filesToLoad","_toArray","remainingFilesToLoad","makeLoadFileTask","bimap","gen","nextFileBatch","processFileContent","loadFilesErr","processFileContentUpdater","_action$payload","loadFileStepSuccess","parseProgress","nextFileBatchUpdater","_ref18","_accumulated$data","_ref18$payload","loadFilesErrUpdater","_state$fileLoading2","applyCPUFilterUpdater","_ref21","setMapInfoUpdater","defaultLayers","_ref23","dataIds","_calculateLayerData6","animatableLayers","animationDomain","mergedDomain","Infinity","setEditorModeUpdater","_ref24","setFeaturesUpdater","_ref25","_ref25$features","lastFeature","EDIT","bbox","featureValue","fil","setSelectedFeatureUpdater","_ref26","selectionContext","deleteFeatureUpdater","_ref27","filterIdx","setPolygonFilterLayerUpdater","noneFilterFeature","_filter$layerId","sortTableColumnUpdater","_ref28","sortMode","currentMode","SORT_ORDER","ASCENDING","sorted","sortBy","UNSORT","sortColumn","sortOrder","descending","value1","value2","sortDatasetByColumn","pinTableColumnUpdater","_ref29","pinnedColumns","co","pinTableColumns","copyTableColumnUpdater","_ref30","copy","setColumnDisplayFormatUpdater","_ref31","formats","toggleEditorVisibilityUpdater","setFilterAnimationTimeConfigUpdater","_ref32","updates","checkTimeConfigArgs","allowed","setLayerAnimationTimeConfigUpdater","_ref33","findChildDatasetIds","_value$newDataset","childDataIds","replaceDatasetAndDeps","replaceDatasetDepsInState","prepareStateForDatasetReplace","_nextState$layerToBeM","_serializedState$spli","serializedState","_ref36","accuState","_ref37","getChildDatasetIds","savedProps","replacedState","propValue","_replacedState$merger","mergerOptions","replacedItem","defaultReplaceParentDatasetIds","_value$config","_value$config2","_ref38","propValues","_ref35","stateRemoved","toBeMerged","moveValueToBeMerged","childDataId","replacePropValueInState","actionHandler","_actionHandler","ActionTypes","ADD_FILTER","visStateUpdaters","ADD_LAYER","APPLY_LAYER_CONFIG","DUPLICATE_LAYER","SET_FILTER_VIEW","INTERACTION_CONFIG_CHANGE","LAYER_CLICK","LAYER_CONFIG_CHANGE","LAYER_SET_IS_VALID","LAYER_HOVER","LAYER_TYPE_CHANGE","LAYER_VIS_CONFIG_CHANGE","LAYER_TEXT_LABEL_CHANGE","LAYER_VISUAL_CHANNEL_CHANGE","LAYER_COLOR_UI_CHANGE","TOGGLE_LAYER_ANIMATION","TOGGLE_LAYER_ANIMATION_CONTROL","LOAD_FILES","LOAD_FILES_ERR","LOAD_NEXT_FILE","LOAD_FILE_STEP_SUCCESS","MAP_CLICK","MOUSE_MOVE","RECEIVE_MAP_CONFIG","REMOVE_DATASET","REMOVE_FILTER","REMOVE_LAYER","REORDER_LAYER","RESET_MAP_CONFIG","SET_FILTER","SET_FILTER_ANIMATION_TIME","SET_FILTER_ANIMATION_TIME_CONFIG","SET_FILTER_ANIMATION_WINDOW","SET_FILTER_PLOT","SET_MAP_INFO","SHOW_DATASET_TABLE","UPDATE_TABLE_COLOR","TOGGLE_FILTER_ANIMATION","UPDATE_FILTER_ANIMATION_SPEED","SET_LAYER_ANIMATION_TIME","UPDATE_LAYER_ANIMATION_SPEED","TOGGLE_LAYER_FOR_MAP","TOGGLE_SPLIT_MAP","UPDATE_LAYER_BLENDING","UPDATE_OVERLAY_BLENDING","UPDATE_VIS_DATA","RENAME_DATASET","UPDATE_DATASET_PROPS","SET_FEATURES","DELETE_FEATURE","SET_POLYGON_FILTER_LAYER","SET_SELECTED_FEATURE","SET_EDITOR_MODE","TOGGLE_EDITOR_VISIBILITY","TOGGLE_FILTER_FEATURE","APPLY_CPU_FILTER","SORT_TABLE_COLUMN","PIN_TABLE_COLUMN","COPY_TABLE_COLUMN","SET_COLUMN_DISPLAY_FORMAT","NEXT_FILE_BATCH","PROCESS_FILE_CONTENT","SET_LAYER_ANIMATION_TIME_CONFIG","ADD_EFFECT","REORDER_EFFECT","REMOVE_EFFECT","UPDATE_EFFECT","visStateReducerFactory","INITIAL_MAP_STATE","minZoom","maxZoom","maxBounds","updateMapUpdater","_action$payload$mapIn","updateViewport","otherViewportMapIndex","currentViewport","fitBoundsUpdater","centerAndZoom","togglePerspectiveUpdater","_ref$payload","_ref$payload$config","_ref$payload$options","_ref$payload$bounds","arrayMerge","_destinationArray","sourceArray","getMapDimForSplitMap","toggleSplitMapViewportUpdater","newMapState","lastUpdatedViewportIndex","leftViewport","pickViewportPropsFromMapState","rightViewport","originalViewport","viewportUpdates","newViewport","viewportBounds","viewportBoundsPolygon","bboxPolygon","newStateMaxBounds","maxBoundsPolygon","_fitBounds","fitBounds","updateViewportBasedOnBounds","UPDATE_MAP","mapStateUpdaters","FIT_BOUNDS","TOGGLE_PERSPECTIVE","TOGGLE_SPLIT_MAP_VIEWPORT","mapStateReducerFactory","getDefaultState","DEFAULT_MAP_STYLES","mapStylesReplaceDefault","inputStyle","uploadedFile","DEFAULT_BLDG_COLOR","custom3DBuildingColor","DEFAULT_BACKGROUND_COLOR","isLoading","bottomMapStyle","topMapStyle","INITIAL_MAP_STYLE","getMapStyles","editable","hasTopLayer","findLayerFillColor","paint","getBackgroundColorFromStyleBaseLayer","backupBackgroundColor","_colorMaybeToRGB","baseLayer","BASE_MAP_BACKGROUND_LAYER_IDS","backgroundColorOfBaseLayer","newBackgroundColor","channelNumber","getLayerGroupsFromStyle","requestMapStylesUpdater","_ref5$payload","loadMapStyleTasks","loadMapStyles","loadMapStyleErr","getLoadMapStyleTasks","initMapStyleUpdater","_ref7$payload","mapConfigChangeUpdater","hasStyleObject","mapStyleChangeUpdater","_state$mapStyles$styl","_state$mapStyles$styl2","_ref8$payload","defaultLGVisibility","backgroundLayer","buildingColor","get3DBuildingColor","previousStateMapStyle","getBackgroundColor","loadMapStylesUpdater","newStyles","addLayerGroups","tasks","createActionTask","loadMapStyleErrUpdater","_ref12$payload","ids","resetMapConfigMapStyleUpdater","emptyConfig","loadCustomMapStyleUpdater","_ref19$payload","inputMapStyleUpdater","_updated$icon","_ref20$payload","updated","isValidUrl","isUpdatedIconDataUri","addCustomMapStyleUpdater","getNewStateWithCustomMapStyle","editCustomMapStyleUpdater","removeCustomMapStyleUpdater","_state$mapStyles","restOfMapStyles","set3dBuildingColorUpdater","setBackgroundColorUpdater","_ref22","getInitialInputStyle","INIT","mapStyleUpdaters","INPUT_MAP_STYLE","MAP_CONFIG_CHANGE","MAP_STYLE_CHANGE","REQUEST_MAP_STYLES","LOAD_MAP_STYLES","LOAD_MAP_STYLE_ERR","LOAD_CUSTOM_MAP_STYLE","ADD_CUSTOM_MAP_STYLE","EDIT_CUSTOM_MAP_STYLE","REMOVE_CUSTOM_MAP_STYLE","SET_3D_BUILDING_COLOR","SET_BACKGROUND_COLOR","mapStyleReducerFactory","DEFAULT_ACTIVE_SIDE_PANEL","DEFAULT_MODAL","ADD_DATA_ID","DEFAULT_MAP_CONTROLS_FEATURES","disableClose","activeMapIndex","DEFAULT_MAP_CONTROLS","MAP_CONTROLS","final","DEFAULT_EXPORT_IMAGE","SCREEN","RESOLUTIONS","ONE_X","imageSize","exporting","processing","DEFAULT_LOAD_FILES","DEFAULT_EXPORT_DATA","selectedDataset","EXPORT_DATA_TYPE","CSV","DEFAULT_NOTIFICATIONS","DEFAULT_EXPORT_HTML","DEFAULT_EXPORT_JSON","INITIAL_UI_STATE","datasetKeyToRemove","visibleDropdown","exportData","LOCALE_CODES","layerPanelListView","filterPanelListView","isSidePanelCloseButtonVisible","initUiStateUpdater","initialUiState","toggleSidePanelUpdater","toggleModalUpdater","showExportDropdownUpdater","hideExportDropdownUpdater","toggleSidePanelCloseButtonUpdater","toggleMapControlUpdater","panelId","_ref5$payload$index","setMapControlVisibilityUpdater","_state$mapControls","_ref6$payload","openDeleteModalUpdater","DELETE_DATA_ID","setExportImageSettingUpdater","newSetting","setExportImageDataUriUpdater","setExportImageErrorUpdater","cleanupExportImageUpdater","startExportingImageUpdater","_ref11$payload","imageSettings","setExportSelectedDatasetUpdater","setExportDataTypeUpdater","setExportFilteredUpdater","setExportDataUpdater","setUserMapboxAccessTokenUpdater","setExportMapFormatUpdater","setExportMapHTMLModeUpdater","oldNotifications","payloadId","removeNotificationUpdater","loadFilesSuccessUpdater","DATA_TABLE_ID","setLocaleUpdater","togglePanelListViewUpdater","_ref22$payload","listView","stateProp","TOGGLE_SIDE_PANEL","TOGGLE_MODAL","SHOW_EXPORT_DROPDOWN","HIDE_EXPORT_DROPDOWN","TOGGLE_SIDE_PANEL_CLOSE_BUTTON","OPEN_DELETE_MODAL","TOGGLE_MAP_CONTROL","SET_MAP_CONTROL_VISIBILITY","ADD_NOTIFICATION","REMOVE_NOTIFICATION","SET_EXPORT_IMAGE_SETTING","SET_EXPORT_IMAGE_DATA_URI","SET_EXPORT_IMAGE_ERROR","CLEANUP_EXPORT_IMAGE","START_EXPORTING_IMAGE","SET_EXPORT_SELECTED_DATASET","SET_EXPORT_DATA_TYPE","SET_EXPORT_FILTERED","SET_EXPORT_DATA","SET_USER_MAPBOX_ACCESS_TOKEN","SET_EXPORT_MAP_FORMAT","SET_EXPORT_MAP_HTML_MODE","SET_LOCALE","TOGGLE_PANEL_LIST_VIEW","uiStateReducerFactory","INITIAL_PROVIDER_STATE","isProviderLoading","isCloudMapLoading","providerError","currentProvider","successInfo","mapSaved","_validateProvider","createGlobalNotificationTasks","_ref$delayClose","delayClose","successNote","task","removeNotification","exportFileToCloudUpdater","_action$payload$optio","onError","closeModal","uploadFileTask","exportFileSuccess","exportFileError","exportFileSuccessUpdater","_action$payload2","_action$payload2$opti","postSaveLoadSuccess","postSaveLoadSuccessUpdater","resetProviderStatus","exportFileErrorUpdater","_action$payload3","FILE_CONFLICT_MSG","isFileConflict","OVERWRITE_MAP_ID","getError","loadCloudMapUpdater","_action$payload4","loadCloudMapSuccess","loadCloudMapError","parseLoadMapResponse","defaultHandler","DATASET_HANDLERS","DATASET_FORMATS","supportedFormat","getDatasetHandler","parsedDatasets","loadCloudMapSuccessUpdater","_action$payload5","formatError","checkLoadMapResponseError","loadCloudMapErrorUpdater","resetProviderStatusUpdater","EXPORT_FILE_TO_CLOUD","providerStateUpdaters","EXPORT_FILE_SUCCESS","EXPORT_FILE_ERROR","RESET_PROVIDER_STATUS","POST_SAVE_LOAD_SUCCESS","LOAD_CLOUD_MAP","LOAD_CLOUD_MAP_SUCCESS","LOAD_CLOUD_MAP_ERROR","providerStateReducerFactory","findMapBounds","availableLayerBounds","res","isValidConfig","defaultAddDataToMapOptions","_datasets$","_datasets$2","_datasets$3","visStateUpdateVisDataUpdater","parsedConfig","oldLayers","findMapBoundsIfCentered","stateMapConfigUpdater","nl","ol","styleMapConfigUpdater","uiStateLoadFilesSuccessUpdater","payloads","filesToDataPayload","addDataToMapComposed","updateOverlayBlending","normal","updateDarkBaseMapLayers","darkBaseMapEnabled","combinedMapStyleChangeUpdater","getColorMode","_mapStyle$mapStyles$k","colorMode","prevColorMode","nextColorMode","BASE_MAP_COLOR_MODES","DARK","screen","LIGHT","darken","combinedLayerTypeChangeUpdater","_newState$uiState$map","_newState$uiState$map2","visStateToggleSplitMapUpdater","uiStateToggleSplitMapUpdater","mapStateToggleSplitMapUpdater","isLegendActive","mapLegend","defaultReplaceDataToMapOptions","replaceDataInMapUpdater","_payload$options","addDataToMapOptions","preparedState","ADD_DATA_TO_MAP","LOAD_FILES_SUCCESS","REPLACE_DATA_IN_MAP","combined","extraReducers","providerState","coreReducerFactory","composers","mapStateLens","reduxState","mapStyleLens","visStateLens","uiStateLens","initialCoreState","provideInitialState","coreReducer","handleRegisterEntry","mint","keplerGlInit","handleDeleteEntry","handleRenameEntry","_ref4$payload","newId","updateItemState","_actionFor","_updateProperty","handlers","REGISTER_ENTRY","DELETE_ENTRY","RENAME_ENTRY","mergeInitialState","provided","extraInitialStateKeys","decorate","savedInitialState","targetInitialState","plugin","customReducer","_options$override","override","iniSt","targetReducer","DEFAULT_FILE_EXTENSIONS","DEFAULT_FILE_FORMATS","getFileFormatNames","createSelector","loader","getFileExtensions","flatMap","extensions","selectedDatasets","selectedData","_ref$filteredIdxCPU","toExport","formattedData","csvFormatRows","taskMiddleware","generateHashIdFromString","isChrome","chrome","webstore","capitalizeFirstLetter","camelToTitle","camelize","insertValue","setPath","hasMobileWidth","matchMedia","matches","hasPortableWidth","isTest","_process","_process$env","filterObjectByPredicate","predicate","arrayDifference","compare","foundElement"],"mappings":"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AClC,KAAM,oBAAqB8X,OAAQ,GAAI5V,KAAM,QAC9C,CAAClC,KAAM,mBAAoB8X,OAAQ,GAAI5V,KAAM,QAC7C,CAAClC,KAAM,cAAe8X,OAAQ,GAAI5V,KAAM,QACxC,CAAClC,KAAM,eAAgB8X,OAAQ,GAAI5V,KAAM,WACzC,CAAClC,KAAM,YAAa8X,OAAQ,GAAI5V,KAAM,WAExCijB,KAAM,CACJ,CACE,KACA,6BACA,KACA,MACC,YACD,aACC,YACD,YACA,IACA,EACA,iBAEF,CACE,KACA,8BACC,EACD,MACC,YACD,aACC,YACD,YACA,MACA,EACA,iBAEF,CACE,6BACA,6BACA,EACA,MACC,YACD,aACC,WACD,WACA,MACA,EACA,cAEF,CACE,KACA,6BACA,EACA,MACC,SACD,aACC,YACD,YACA,IACA,EACA,iBAEF,CACE,6BACA,6BACA,EACA,MACC,YACD,aACC,YACD,YACA,MACA,EACA,cAEF,CACE,6BACA,6BACA,EACA,MACC,YACD,YACC,YACD,YACA,MACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,YACC,YACD,YACA,MACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,KACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,KACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,MACC,WACD,aACC,YACD,YACA,KACA,EACA,8BAEF,CACE,6BACA,6BACA,EACA,MACC,YACD,aACC,WACD,YACA,MACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,MACC,YACD,aACC,YACD,YACA,KACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,MACC,YACD,aACC,YACD,YACA,GACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,OACC,YACD,aACC,YACD,YACA,IACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,MACC,WACD,aACC,YACD,YACA,IACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,MACC,YACD,YACC,YACD,YACA,MACA,EACA,8BAEF,CACE,6BACA,6BACA,EACA,MACC,YACD,YACC,YACD,YACA,KACA,EACA,eAEF,CACE,6BACA,8BACC,EACD,MACC,YACD,aACC,YACD,YACA,IACA,EACA,cAEF,CACE,6BACA,6BACA,EACA,MACC,YACD,aACC,YACD,YACA,GACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,MACC,YACD,aACC,YACD,YACA,GACA,EACA,8BAEF,CACE,6BACA,6BACA,EACA,MACC,YACD,aACC,YACD,YACA,MACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,MACC,WACD,aACC,YACD,YACA,KACA,EACA,cAEF,CACE,6BACA,6BACA,EACA,MACC,YACD,aACC,YACD,YACA,IACA,EACA,eAEF,CACE,6BACA,8BACC,EACD,MACC,YACD,aACC,YACD,YACA,IACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,GACC,YACD,YACC,YACD,YACA,IACA,EACA,cAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,GACA,EACA,8BAEF,CACE,6BACA,6BACA,EACA,MACC,YACD,aACC,YACD,WACA,IACA,EACA,cAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,YACC,YACD,YACA,KACA,EACA,eAEF,CACE,6BACA,8BACC,EACD,MACC,WACD,aACC,WACD,YACA,IACA,EACA,cAEF,CACE,6BACA,6BACA,EACA,MACC,YACD,aACC,YACD,YACA,MACA,EACA,8BAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,GACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,YACC,YACD,YACA,GACA,EACA,cAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,GACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,OACC,YACD,aACC,YACD,YACA,IACA,EACA,eAEF,CACE,6BACA,6BACA,KACA,KACC,WACD,YACC,YACD,YACA,KACA,EACA,8BAEF,CACE,6BACA,6BACA,EACA,MACC,YACD,aACC,YACD,YACA,MACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,OACC,YACD,aACC,YACD,YACA,MACA,EACA,cAEF,CACE,6BACA,6BACA,EACA,OACC,WACD,aACC,YACD,YACA,IACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,MACC,YACD,aACC,YACD,WACA,MACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,MACC,WACD,aACC,YACD,YACA,GACA,EACA,cAEF,CACE,6BACA,6BACA,EACA,MACC,YACD,aACC,WACD,WACA,MACA,EACA,eAEF,CACE,6BACA,6BACA,KACA,MACC,YACD,aACC,YACD,YACA,MACA,EACA,iBAEF,CACE,6BACA,6BACA,EACA,MACC,YACD,aACC,YACD,YACA,IACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,IACC,YACD,aACC,YACD,YACA,KACA,EACA,eAEF,CACE,6BACA,8BACC,EACD,KACC,YACD,aACC,YACD,YACA,MACA,EACA,cAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,IACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,IACC,YACD,aACC,YACD,YACA,KACA,EACA,8BAEF,CACE,6BACA,6BACA,KACA,KACC,YACD,YACC,YACD,YACA,IACA,EACA,iBAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,KACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,IACC,YACD,aACC,YACD,WACA,KACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,IACC,YACD,aACC,YACD,YACA,GACA,EACA,cAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,GACA,EACA,8BAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,KACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,MACC,YACD,YACC,YACD,YACA,IACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,GACC,YACD,aACC,YACD,WACA,IACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,GACC,YACD,YACC,YACD,WACA,GACA,EACA,cAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,MACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,IACC,YACD,aACC,YACD,YACA,KACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,IACA,EACA,cAEF,CACE,6BACA,6BACA,EACA,IACC,YACD,aACC,WACD,YACA,KACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,YACC,YACD,YACA,IACA,EACA,cAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,WACA,MACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,IACC,YACD,aACC,YACD,YACA,KACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,IACC,YACD,aACC,YACD,YACA,GACA,EACA,cAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,KACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,MACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,WACD,YACA,IACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,IACC,YACD,aACC,YACD,YACA,KACA,EACA,8BAEF,CACE,6BACA,6BACA,EACA,IACC,YACD,aACC,YACD,YACA,KACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,IACC,YACD,aACC,YACD,YACA,KACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,IACC,YACD,aACC,WACD,YACA,KACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,GACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,IACA,EACA,8BAEF,CACE,6BACA,6BACA,EACA,IACC,WACD,aACC,YACD,YACA,GACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,IACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,KACA,EACA,cAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,IACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,MACA,EACA,8BAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,MACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,MACA,EACA,cAEF,CACE,6BACA,6BACA,EACA,KACC,WACD,aACC,YACD,YACA,KACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,WACD,aACC,WACD,WACA,IACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,IACC,YACD,YACC,YACD,YACA,GACA,EACA,8BAEF,CACE,6BACA,6BACA,EACA,IACC,YACD,YACC,YACD,YACA,GACA,EACA,8BAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,KACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,GACC,YACD,aACC,YACD,YACA,IACA,EACA,cAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,WACA,IACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,GACA,EACA,8BAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,KACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,IACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,KACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,IACC,YACD,aACC,YACD,YACA,GACA,EACA,8BAEF,CACE,6BACA,6BACA,EACA,IACC,YACD,aACC,YACD,YACA,KACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,IACC,YACD,YACC,YACD,WACA,GACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,IACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,IACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,MACC,YACD,aACC,YACD,YACA,IACA,EACA,8BAEF,CACE,6BACA,6BACA,EACA,GACC,YACD,aACC,YACD,YACA,IACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,WACD,YACA,GACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,GACC,YACD,aACC,YACD,YACA,MACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,GACA,EACA,cAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,YACC,YACD,YACA,KACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,MACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,WACD,aACC,YACD,YACA,IACA,EACA,cAEF,CACE,6BACA,6BACA,EACA,IACC,WACD,aACC,YACD,YACA,GACA,EACA,8BAEF,CACE,6BACA,6BACA,EACA,KACC,WACD,aACC,YACD,YACA,MACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,WACD,aACC,YACD,YACA,KACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,MACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,WACD,aACC,YACD,YACA,MACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,IACC,YACD,aACC,YACD,YACA,MACA,EACA,cAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,GACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,GACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,KACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,GACC,WACD,aACC,WACD,YACA,KACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,YACC,YACD,YACA,KACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,YACC,YACD,YACA,GACA,EACA,cAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,IACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,IACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,GACC,YACD,aACC,YACD,YACA,IACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,WACD,aACC,YACD,YACA,IACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,IACC,YACD,aACC,YACD,YACA,GACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,WACD,YACC,YACD,YACA,IACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,IACA,EACA,cAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,KACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,IACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,IACC,YACD,YACC,YACD,YACA,GACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,GACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,IACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,IACC,YACD,aACC,YACD,WACA,GACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,IACC,YACD,aACC,YACD,YACA,GACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,GACC,YACD,aACC,YACD,YACA,IACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,YACC,YACD,YACA,IACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,IACC,YACD,aACC,YACD,YACA,KACA,EACA,cAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,YACC,WACD,YACA,IACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,WACD,aACC,YACD,YACA,IACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,GACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,GACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,KACA,EACA,8BAEF,CACE,6BACA,6BACA,EACA,IACC,YACD,aACC,YACD,YACA,GACA,EACA,cAEF,CACE,6BACA,6BACA,EACA,MACC,WACD,aACC,YACD,WACA,IACA,EACA,8BAEF,CACE,6BACA,6BACA,EACA,IACC,YACD,aACC,YACD,YACA,GACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,YACC,YACD,YACA,IACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,KACA,EACA,cAEF,CACE,6BACA,6BACA,EACA,KACC,WACD,aACC,YACD,YACA,MACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,IACC,YACD,aACC,YACD,YACA,KACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,IACC,YACD,aACC,YACD,YACA,GACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,MACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,MACA,EACA,cAEF,CACE,6BACA,6BACA,EACA,IACC,YACD,aACC,YACD,WACA,IACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,WACD,aACC,YACD,YACA,MACA,EACA,8BAEF,CACE,6BACA,6BACA,EACA,IACC,YACD,aACC,YACD,YACA,IACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,MACA,EACA,8BAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,KACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,IACC,YACD,aACC,YACD,YACA,KACA,EACA,cAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,WACA,MACA,EACA,cAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,WACD,YACA,IACA,EACA,8BAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,KACA,EACA,cAEF,CACE,6BACA,6BACA,EACA,KACC,WACD,aACC,YACD,WACA,MACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,IACA,EACA,cAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,GACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,GACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,GACC,YACD,aACC,YACD,YACA,IACA,EACA,cAEF,CACE,6BACA,6BACA,EACA,GACC,YACD,aACC,YACD,YACA,GACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,IACC,YACD,aACC,YACD,YACA,KACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,IACC,YACD,aACC,YACD,YACA,KACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,IACC,YACD,aACC,YACD,YACA,KACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,IACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,MACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,MACA,EACA,8BAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,WACD,YACA,KACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,IACC,YACD,aACC,YACD,YACA,GACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,YACC,YACD,WACA,KACA,EACA,8BAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,MACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,IACC,YACD,aACC,YACD,YACA,GACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,KACA,EACA,cAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,GACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,MACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,IACC,YACD,aACC,YACD,YACA,GACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,MACA,EACA,cAEF,CACE,6BACA,6BACA,EACA,IACC,YACD,aACC,YACD,YACA,KACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,GACA,EACA,cAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,WACD,YACA,IACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,IACC,YACD,YACC,YACD,YACA,GACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,MACA,EACA,8BAEF,CACE,6BACA,6BACA,EACA,IACC,YACD,aACC,YACD,YACA,KACA,EACA,cAEF,CACE,6BACA,6BACA,EACA,IACC,YACD,aACC,YACD,WACA,IACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,WACA,MACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,KACA,EACA,cAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,IACA,EACA,8BAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,IACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,MACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,MACA,EACA,8BAEF,CACE,6BACA,6BACA,EACA,IACC,YACD,aACC,YACD,YACA,GACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,IACC,YACD,YACC,YACD,YACA,GACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,IACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,MACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,IACC,WACD,aACC,YACD,YACA,KACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,IACC,WACD,aACC,YACD,YACA,IACA,EACA,cAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,IACA,EACA,cAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,IACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,IACA,EACA,8BAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,MACA,EACA,cAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,IACA,EACA,cAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,KACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,MACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,MACC,YACD,aACC,YACD,YACA,IACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,YACC,YACD,YACA,GACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,MACC,WACD,aACC,YACD,YACA,IACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,IACC,YACD,aACC,YACD,YACA,KACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,IACC,YACD,aACC,WACD,YACA,GACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,IACA,EACA,8BAEF,CACE,6BACA,6BACA,EACA,MACC,YACD,aACC,YACD,YACA,IACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,IACC,YACD,aACC,YACD,YACA,KACA,EACA,cAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,IACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,IACC,YACD,aACC,YACD,YACA,GACA,EACA,8BAEF,CACE,6BACA,6BACA,EACA,IACC,YACD,aACC,YACD,YACA,GACA,EACA,8BAEF,CACE,6BACA,6BACA,EACA,IACC,YACD,aACC,YACD,YACA,KACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,IACC,YACD,aACC,YACD,YACA,KACA,EACA,8BAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,MACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,MACC,YACD,aACC,WACD,YACA,MACA,EACA,cAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,YACC,YACD,YACA,KACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,GACC,YACD,aACC,YACD,WACA,MACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,IACC,YACD,aACC,YACD,YACA,KACA,EACA,cAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,KACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,MACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,WACD,YACA,IACA,EACA,cAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,IACA,EACA,8BAEF,CACE,6BACA,6BACA,EACA,IACC,YACD,aACC,YACD,YACA,GACA,EACA,8BAEF,CACE,6BACA,6BACA,EACA,MACC,YACD,aACC,YACD,YACA,MACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,GACA,EACA,cAEF,CACE,6BACA,6BACA,EACA,MACC,YACD,aACC,YACD,YACA,GACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,MACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,WACA,MACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,WACD,YACA,KACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,WACA,MACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,YACC,YACD,YACA,MACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,IACC,WACD,aACC,YACD,YACA,GACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,GACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,KACA,EACA,cAEF,CACE,6BACA,6BACA,EACA,KACC,WACD,aACC,YACD,WACA,KACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,WACD,aACC,YACD,YACA,GACA,EACA,8BAEF,CACE,6BACA,6BACA,EACA,KACC,UACD,aACC,YACD,YACA,IACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,WACD,YACA,IACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,GACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,WACD,aACC,YACD,WACA,MACA,EACA,8BAEF,CACE,6BACA,6BACA,EACA,IACC,YACD,aACC,YACD,YACA,KACA,EACA,cAEF,CACE,6BACA,6BACA,EACA,IACC,YACD,aACC,YACD,YACA,GACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,GACC,YACD,aACC,YACD,WACA,IACA,EACA,8BAEF,CACE,6BACA,6BACA,EACA,MACC,YACD,aACC,YACD,YACA,IACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,IACC,YACD,aACC,YACD,YACA,KACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,WACD,YACA,MACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,IACA,EACA,8BAEF,CACE,6BACA,6BACA,EACA,IACC,YACD,aACC,YACD,YACA,KACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,MACC,YACD,aACC,YACD,YACA,KACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,GACA,EACA,8BAEF,CACE,6BACA,6BACA,EACA,MACC,YACD,aACC,YACD,YACA,MACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,MACC,YACD,aACC,YACD,YACA,KACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,MACC,YACD,aACC,YACD,YACA,MACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,MACC,YACD,YACC,YACD,YACA,KACA,EACA,cAEF,CACE,6BACA,6BACA,EACA,MACC,YACD,aACC,YACD,YACA,KACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,MACC,YACD,aACC,YACD,YACA,IACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,KACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,MACC,YACD,aACC,YACD,YACA,IACA,EACA,8BAEF,CACE,6BACA,6BACA,EACA,MACC,YACD,aACC,YACD,YACA,GACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,MACC,YACD,aACC,WACD,YACA,MACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,OACC,YACD,aACC,YACD,YACA,IACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,MACC,YACD,aACC,YACD,YACA,MACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,WACD,aACC,YACD,YACA,KACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,MACC,YACD,aACC,YACD,YACA,KACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,MACC,YACD,aACC,WACD,YACA,MACA,EACA,cAEF,CACE,6BACA,6BACA,EACA,OACC,YACD,aACC,YACD,YACA,IACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,MACC,YACD,aACC,WACD,YACA,MACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,MACC,YACD,aACC,YACD,YACA,GACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,WACD,aACC,WACD,YACA,KACA,EACA,8BAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,KACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,GACC,YACD,aACC,YACD,YACA,KACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,IACC,YACD,aACC,YACD,YACA,GACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,IACC,YACD,aACC,WACD,YACA,KACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,MACC,YACD,aACC,YACD,YACA,IACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,WACA,KACA,EACA,8BAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,MACA,EACA,8BAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,WACA,KACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,MACC,YACD,aACC,YACD,YACA,IACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,IACC,YACD,aACC,WACD,YACA,KACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,IACC,YACD,aACC,YACD,YACA,GACA,EACA,cAEF,CACE,6BACA,6BACA,EACA,IACC,YACD,aACC,YACD,YACA,KACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,IACC,YACD,aACC,YACD,YACA,KACA,EACA,cAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,WACD,YACA,GACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,IACA,EACA,cAEF,CACE,6BACA,6BACA,EACA,IACC,YACD,aACC,YACD,YACA,GACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,GACA,EACA,cAEF,CACE,6BACA,6BACA,EACA,MACC,WACD,aACC,YACD,YACA,GACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,KACA,EACA,cAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,KACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,MACC,YACD,aACC,YACD,YACA,KACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,MACC,YACD,aACC,YACD,YACA,IACA,EACA,eAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,MACA,EACA,cAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,KACA,EACA,8BAEF,CACE,6BACA,6BACA,EACA,KACC,YACD,aACC,YACD,YACA,IACA,EACA,8BAEF,CACE,6BACA,6BACA,EACA,MACC,YACD,aACC,YACD,YACA,IACA,EACA,iBAKOypC,GAAuB,CAClCzmC,QAAS,KACTM,OAAQ,CACNmE,SAAU,CACR4G,OAAQ,CACN,CACEtxB,KAAM,UACNumB,OAAQ,CACNka,OAAQ,iBACRupB,QAAS,CACP7oC,IAAK,kBACLC,IAAK,oBAEP4S,WAAW,IAGf,CACEh0B,KAAM,QACNumB,OAAQ,CACNka,OAAQ,iBACRupB,QAAS,CACP7oC,IAAK,kBACLC,IAAK,oBAEP5iB,MAAO,CAAC,IAAK,EAAG,GAChBqnB,MAAO,SACPmO,WAAW,EACX24B,UAAW,CACT9uD,WAAY,CACV+uD,SA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,mBAAqB,kBACvB,EAAE,kBAAqB,kBACvB,EAAE,mBAAqB,oBACvB,EAAE,kBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,kBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,kBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAoB,mBACtB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAoB,oBACtB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAoB,mBACtB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,kBAAqB,oBACvB,EAAE,mBAAoB,mBACtB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAoB,mBACtB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,iBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAoB,mBACtB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,kBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAoB,mBACtB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,kBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,kBACvB,EAAE,kBAAqB,mBACvB,EAAE,kBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,kBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,kBAAqB,oBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,kBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAoB,mBACtB,EAAE,mBAAoB,mBACtB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAoB,oBACtB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,oBACvB,EAAE,kBAAqB,mBACvB,EAAE,kBAAqB,oBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAoB,mBACtB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,m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mBACvB,EAAE,mBAAoB,mBACtB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAoB,mBACtB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,kBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,kBAAqB,kBACvB,EAAE,kBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAoB,mBACtB,EAAE,kBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAoB,oBACtB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,kBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAoB,mBACtB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAoB,mBACtB,EAAE,mBAAqB,kBACvB,EAAE,mBAAqB,kBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAoB,oBACtB,EAAE,mBAAoB,mBACtB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,kBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,kBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,kBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,kBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB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B,EAAE,mBAAoB,oBACtB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,oBACvB,EAAE,mBAAoB,oBACtB,EAAE,kBAAqB,kBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,kBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,kBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,kBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,kBACvB,EAAE,mBAAqB,kBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAoB,mBACtB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,kBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAoB,oBACtB,EAAE,mBAAoB,mBACtB,EAAE,mBAAoB,oBACtB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,oBACvB,EAAE,mBAAoB,oBACtB,EAAE,mBAAqB,mBACvB,EAAE,mBAAoB,oBACtB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,E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AE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,kBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,kBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAoB,mBACtB,EAAE,mBAAqB,oBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,kBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,kBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,kBAAqB,kBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAoB,mBACtB,EAAE,mBAAoB,mBACtB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAoB,mBACtB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAoB,mBACtB,EAAE,kBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,kBACvB,EAAE,mBAAoB,oBACtB,EAAE,kBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,wBAK/B,CACEx/B,KAAM,UACNo/B,WAAY,CAACyuB,SAAU,EAAGC,SAAU,MAAOC,GAAI,OAC/CxuB,SAAU,CACRv/B,KAAM,UACNw/B,YAAa,CACX,CACE,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,iBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,kBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,kBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,kBACvB,EAAE,kBAAqB,oBACvB,EAAE,kBAAqB,oBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,kBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAoB,oBACtB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAoB,mBACtB,EAAE,kBAAqB,oBACvB,EAAE,mBAAoB,mBACtB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAoB,mBACtB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAoB,mBACtB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAoB,mBACtB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,kBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,oBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAoB,mBACtB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAoB,mBACtB,EAAE,kBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,kBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAoB,mBACtB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAoB,mBACtB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAoB,mBACtB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mB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AAE,mBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAoB,mBACtB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAoB,mBACtB,EAAE,mBAAqB,mBACvB,EAAE,mBAAoB,oBACtB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,oBACvB,EAAE,mBAAoB,mBACtB,EAAE,mBAAqB,mBACvB,EAAE,mBAAoB,mBACtB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,kBAAqB,mBACvB,EAAE,kBAAqB,kBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,kBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,kBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAoB,mBACtB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,kBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,kBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE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,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,kBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAoB,mBACtB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAoB,mBACtB,EAAE,mBAAoB,mBACtB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,kBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,kBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,kBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,kBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAoB,mBACtB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,kBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAoB,mBACtB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,kBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAoB,mBACtB,EAAE,kBAAqB,mBACvB,EAAE,mBAAoB,mBACtB,EAAE,mBAAoB,mBACtB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,oBACvB,EAAE,kBAAqB,kBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,kBACvB,EAAE,mBAAqB,oBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAoB,mBACtB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAoB,mBACtB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,kBAAqB,oBACvB,EAAE,mBAAqB,kBACvB,EAAE,mBAAqB,oBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,kBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAoB,oBACtB,EAAE,mBAAqB,kBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,oBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAoB,mBACtB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAoB,mBACtB,EAAE,mBAAoB,mBACtB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBA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ACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,kBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,oBACvB,EAAE,kBAAqB,mBACvB,EAAE,kBAAqB,kBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAoB,mBACtB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAoB,mBACtB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAoB,mBACtB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAoB,kBACtB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,kBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,kBAAqB,oBACv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AAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,kBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,oBACvB,EAAE,mBAAoB,mBACtB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,kBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAoB,mBACtB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAoB,mBACtB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAq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qB,mBACvB,EAAE,mBAAoB,mBACtB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,kBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAoB,mBACtB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAoB,mBACtB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,kBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAoB,mBACtB,EAAE,kBAAqB,mBACvB,EAAE,kBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,kBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,iBAAqB,oBACvB,EAAE,mBAAoB,mBACtB,EAAE,kBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAoB,mBACtB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,kBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,kBAAqB,kBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,kBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAoB,mBACtB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAoB,oBACtB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAoB,mBACtB,EAAE,mBAAqB,oBACvB,EAAE,mBAAoB,oBACtB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,kBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,kBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAoB,oBACtB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,kBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,kBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,oBA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B,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,kBAAqB,kBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAoB,mBACtB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAoB,oBACtB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAoB,mBACtB,EAAE,mBAAoB,mBACtB,EAAE,mBAAqB,oBACvB,EAAE,kBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAoB,mBACtB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,oBACvB,E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AAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,kBACvB,EAAE,kBAAqB,kBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,kBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,kBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,kBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,kBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,kBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,kBACvB,EAAE,mBAAqB,oBACvB,EAAE,kBAAqB,oBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAoB,mBACtB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAoB,mBACtB,EAAE,mBAAoB,oBACtB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAoB,mBACtB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAoB,oBACtB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAoB,mBACtB,EAAE,mBAAqB,mBACvB,EAAE,mBAAq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vB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAoB,oBACtB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,kBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,kBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAoB,oBACtB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAoB,mBACtB,EAAE,mBAAqB,kBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAoB,oBACtB,EAAE,mBAAqB,kBACvB,EAAE,mBAAqB,oBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,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,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAoB,oBACtB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAoB,mBACtB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,oBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,kBACvB,EAAE,mBAAqB,kBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,kBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,oBACvB,EAAE,mBAAoB,mBACtB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,kBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAoB,mBACtB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,kBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAoB,mBACtB,EA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ACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,kBACvB,EAAE,mBAAoB,mBACtB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,kBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAoB,mBACtB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,kBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,iBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAoB,oBACtB,EAAE,mBAAqB,mBACvB,EAAE,mBAAoB,mBACtB,EAAE,mBAAqB,oBACvB,EAAE,kBAAqB,iBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAoB,mBACtB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAoB,oBACtB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAoB,oBACtB,EAAE,kBAAmB,kBACrB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,kBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAoB,kBACtB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAoB,kBACtB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,kBAAqB,oBACvB,EAAE,kBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,kBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,iBAAqB,mBACvB,EAAE,kBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,kBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAoB,mBACtB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAoB,mBACtB,EAAE,mBAAqB,oBACvB,EAAE,kBAAqB,mBACvB,EAAE,kBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,kBACvB,EAAE,mBAAoB,mBACtB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAoB,mBACtB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAoB,mBACtB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,kBAAqB,oBACvB,EAAE,mBAAqB,kBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAoB,mBACtB,EAAE,kBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE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,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,kBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,kBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,kBACvB,EAAE,mBAAoB,oBACtB,EAAE,kBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,kBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,iBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,kBAAqB,mBACvB,EAAE,mBAAqB,kBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAoB,oBACtB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,mBACvB,EAAE,mBAAqB,oBACvB,EAAE,mBAAqB,kBACvB,EAAE,mBAAqB,wB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AAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,UAAW,WACb,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,UACb,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,UACb,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,SAAU,UACZ,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,QAAS,WACX,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,SAAU,WACZ,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,W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EAAE,WAAY,UACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,SACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,SAAU,WACZ,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,UACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,UACb,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,YAEhB,CACE,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,SAAU,UACZ,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,YAEhB,CACE,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,SAAU,WACZ,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,QAAS,WACX,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,SACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,QACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,UACd,EAAE,UAAW,UACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,UACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,SAAU,WACZ,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,UACd,EAAE,WAAY,SACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,UACb,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,SAAU,WACZ,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,UACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,UACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,eAKtB,CACEx/B,KAAM,UACNo/B,WAAY,CAACyuB,SAAU,GAAI/vD,KAAM,wBAAyBU,MAAO,WACjE+gC,SAAU,CACRv/B,KAAM,kBACNw/B,YAAa,CACX,CACE,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,UACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,SAAU,WACZ,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,SACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,QAAS,WACX,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,SAAU,WACZ,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,SACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,SACd,EAAE,WAAY,SACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,SAAU,WACZ,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,SACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,UAAW,UACb,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,UAAW,WACb,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,SACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,SAAU,WACZ,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,SACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,SAAU,WACZ,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,UACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,SAAU,UACZ,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,UAAW,UACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,UAAW,WACb,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,SAAU,WACZ,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,SACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,SAAU,WACZ,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,UACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,UAAW,UACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,UACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,UACb,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,UAAW,UACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,UACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,UAAW,UACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,UAAW,UACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,SACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,SACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,SACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,SACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,SACb,EAAE,UAAW,WACb,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,UACd,EAAE,WAAY,UACd,EAAE,W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E,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,QAAS,WACX,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,SACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,QACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,UACd,EAAE,UAAW,UACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,UACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,SAAU,WACZ,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,UACd,EAAE,WAAY,SACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,UACb,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,SAAU,WACZ,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,UACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,UACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,YAEhB,CACE,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,SACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,SAAU,WACZ,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,YAEhB,CACE,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,SACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,QACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,UACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,UACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,UAAW,WACb,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,WACd,EAAE,WAAY,UACd,EAAE,WAAY,WACd,EAAE,W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AAU,EAAG,YACzB,EAAE,SAAU,SAAU,EAAG,YACzB,EAAE,SAAU,SAAU,EAAG,YACzB,EAAE,SAAU,SAAU,EAAG,YACzB,EAAE,SAAU,QAAS,EAAG,YACxB,EAAE,OAAQ,SAAU,EAAG,YACvB,EAAE,SAAU,SAAU,EAAG,YACzB,EAAE,QAAS,SAAU,EAAG,YACxB,EAAE,SAAU,SAAU,EAAG,YACzB,EAAE,SAAU,SAAU,EAAG,YACzB,EAAE,SAAU,SAAU,EAAG,YACzB,EAAE,SAAU,SAAU,EAAG,YACzB,EAAE,SAAU,SAAU,EAAG,YACzB,EAAE,SAAU,SAAU,EAAG,YACzB,EAAE,SAAU,SAAU,EAAG,YACzB,EAAE,SAAU,SAAU,EAAG,YACzB,EAAE,SAAU,SAAU,EAAG,YACzB,EAAE,SAAU,SAAU,EAAG,YACzB,EAAE,SAAU,SAAU,EAAG,YACzB,EAAE,SAAU,SAAU,EAAG,YACzB,EAAE,SAAU,SAAU,EAAG,YACzB,EAAE,SAAU,SAAU,EAAG,YACzB,EAAE,SAAU,SAAU,EAAG,YACzB,EAAE,SAAU,SAAU,EAAG,YACzB,EAAE,SAAU,SAAU,EAAG,YACzB,EAAE,SAAU,SAAU,EAAG,YACzB,EAAE,SAAU,SAAU,EAAG,YACzB,EAAE,SAAU,SAAU,EAAG,YACzB,EAAE,SAAU,SAAU,EAAG,YACzB,EAAE,SAAU,SAAU,EAAG,YACzB,EAAE,SAAU,SAAU,EAAG,YACzB,EAAE,SAAU,SAAU,EAAG,YACzB,EAAE,SAAU,SAAU,EAAG,YACzB,EAAE,SAAU,SAAU,EAAG,YACzB,EAAE,SAAU,SAAU,EAAG,YACzB,EAAE,SAAU,SAAU,EAAG,YACzB,EAAE,SAAU,SAAU,EAAG,YACzB,EAAE,SAAU,SAAU,EAAG,YACzB,EAAE,SAAU,SAAU,EAAG,YACzB,EAAE,SAAU,SAAU,EAAG,YACzB,EAAE,SAAU,SAAU,EAAG,YACzB,EAAE,SAAU,SAAU,EAAG,YACzB,EAAE,SAAU,SAAU,EAAG,YACzB,EAAE,SAAU,SAAU,EAAG,YACzB,EAAE,SAAU,SAAU,EAAG,YACzB,EAAE,SAAU,SAAU,EAAG,YACzB,EAAE,QAAS,SAAU,EAAG,YACxB,EAAE,SAAU,QAAS,EAAG,YACxB,EAAE,SAAU,SAAU,EAAG,YACzB,EAAE,SAAU,SAAU,EAAG,YACzB,EAAE,QAAS,QAAS,EAAG,YACvB,EAAE,OAAQ,SAAU,EAAG,YACvB,EAAE,SAAU,QAAS,EAAG,YACxB,EAAE,SAAU,SAAU,EAAG,YACzB,EAAE,SAAU,SAAU,EAAG,YACzB,EAAE,SAAU,SAAU,EAAG,YACzB,EAAE,SAAU,SAAU,EAAG,YACzB,EAAE,SAAU,SAAU,EAAG,iB,kKC9ZnCzjB,GAAA,kBAAA5N,GAAA,IAAA0I,EAAA1I,EAAA,GAAAhR,EAAA+T,OAAA8K,UAAAze,EAAAJ,EAAA8Y,eAAAgG,EAAA/K,OAAAgL,gBAAA,SAAArF,EAAA1I,EAAAhR,GAAA0Z,EAAA1I,GAAAhR,EAAA0H,OAAAe,EAAA,mBAAAuW,cAAA,GAAA3P,EAAA5G,EAAAwW,UAAA,aAAAC,EAAAzW,EAAA0W,eAAA,kBAAAC,EAAA3W,EAAA4W,aAAA,yBAAAC,EAAA5F,EAAA1I,EAAAhR,GAAA,OAAA+T,OAAAgL,eAAArF,EAAA1I,EAAA,CAAAtJ,MAAA1H,EAAAuf,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAA/F,EAAA1I,GAAA,IAAAsO,EAAA,aAAA5F,GAAA4F,EAAA,SAAA5F,EAAA1I,EAAAhR,GAAA,OAAA0Z,EAAA1I,GAAAhR,GAAA,SAAA0f,EAAAhG,EAAA1I,EAAAhR,EAAAI,GAAA,IAAAqI,EAAAuI,KAAA6N,qBAAAc,EAAA3O,EAAA2O,EAAAtQ,EAAA0E,OAAA6L,OAAAnX,EAAAoW,WAAAK,EAAA,IAAAW,EAAAzf,GAAA,WAAA0e,EAAAzP,EAAA,WAAA3H,MAAAoY,EAAApG,EAAA1Z,EAAAkf,KAAA7P,EAAA,SAAA0Q,EAAArG,EAAA1I,EAAAhR,GAAA,WAAA6C,KAAA,SAAAiS,IAAA4E,EAAAsG,KAAAhP,EAAAhR,IAAA,MAAA0Z,GAAA,OAAA7W,KAAA,QAAAiS,IAAA4E,IAAA1I,EAAA0O,OAAA,IAAAO,EAAA,iBAAA/D,EAAA,YAAAgE,EAAA,YAAAC,EAAA,YAAAR,KAAA,SAAAS,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAhB,EAAAgB,EAAAjR,GAAA,8BAAAyI,EAAA/D,OAAAwM,eAAAhJ,EAAAO,OAAAV,EAAA,MAAAG,OAAAvX,GAAAI,EAAA4f,KAAAzI,EAAAlI,KAAAiR,EAAA/I,GAAA,IAAAtX,EAAAogB,EAAAxB,UAAAc,EAAAd,UAAA9K,OAAA6L,OAAAU,GAAA,SAAAE,EAAA9G,GAAA,0BAAA1U,SAAA,SAAAgM,GAAAsO,EAAA5F,EAAA1I,GAAA,SAAA0I,GAAA,YAAA+G,QAAAzP,EAAA0I,SAAA,SAAAgH,EAAAhH,EAAA1I,GAAA,SAAA2P,EAAA3gB,EAAA8e,EAAArW,EAAA4G,GAAA,IAAA6P,EAAAa,EAAArG,EAAA1Z,GAAA0Z,EAAAoF,GAAA,aAAAI,EAAArc,KAAA,KAAAuc,EAAAF,EAAApK,IAAAmL,EAAAb,EAAA1X,MAAA,OAAAuY,GAAA,UAAAhP,KAAAgP,IAAA7f,EAAA4f,KAAAC,EAAA,WAAAjP,EAAArK,QAAAsZ,EAAAW,SAAAha,MAAA,SAAA8S,GAAAiH,EAAA,OAAAjH,EAAAjR,EAAA4G,MAAA,SAAAqK,GAAAiH,EAAA,QAAAjH,EAAAjR,EAAA4G,MAAA2B,EAAArK,QAAAsZ,GAAArZ,MAAA,SAAA8S,GAAA0F,EAAA1X,MAAAgS,EAAAjR,EAAA2W,MAAA,SAAA1F,GAAA,OAAAiH,EAAA,QAAAjH,EAAAjR,EAAA4G,QAAA6P,EAAApK,KAAA,IAAA9U,EAAA8e,EAAA,gBAAApX,MAAA,SAAAgS,EAAAtZ,GAAA,SAAAygB,IAAA,WAAA7P,GAAA,SAAAA,EAAAhR,GAAA2gB,EAAAjH,EAAAtZ,EAAA4Q,EAAAhR,MAAA,OAAAA,MAAA4G,KAAAia,YAAA,SAAAf,EAAA9O,EAAAhR,EAAAI,GAAA,IAAA0e,EAAAmB,EAAA,gBAAAxX,EAAA4G,GAAA,GAAAyP,IAAA5C,EAAA,UAAA4E,MAAA,mCAAAhC,IAAAoB,EAAA,cAAAzX,EAAA,MAAA4G,EAAA,OAAA3H,MAAAgS,EAAA/K,MAAA,OAAAvO,EAAA2gB,OAAAtY,EAAArI,EAAA0U,IAAAzF,IAAA,KAAA6P,EAAA9e,EAAA4gB,SAAA,GAAA9B,EAAA,KAAAE,EAAA6B,EAAA/B,EAAA9e,GAAA,GAAAgf,EAAA,IAAAA,IAAAe,EAAA,gBAAAf,GAAA,YAAAhf,EAAA2gB,OAAA3gB,EAAA8gB,KAAA9gB,EAAA+gB,MAAA/gB,EAAA0U,SAAA,aAAA1U,EAAA2gB,OAAA,IAAAjC,IAAAmB,EAAA,MAAAnB,EAAAoB,EAAA9f,EAAA0U,IAAA1U,EAAAghB,kBAAAhhB,EAAA0U,SAAA,WAAA1U,EAAA2gB,QAAA3gB,EAAAihB,OAAA,SAAAjhB,EAAA0U,KAAAgK,EAAA5C,EAAA,IAAAoE,EAAAP,EAAA/O,EAAAhR,EAAAI,GAAA,cAAAkgB,EAAAzd,KAAA,IAAAic,EAAA1e,EAAAuO,KAAAuR,EAAA,iBAAAI,EAAAxL,MAAAqL,EAAA,gBAAAzY,MAAA4Y,EAAAxL,IAAAnG,KAAAvO,EAAAuO,MAAA,UAAA2R,EAAAzd,OAAAic,EAAAoB,EAAA9f,EAAA2gB,OAAA,QAAA3gB,EAAA0U,IAAAwL,EAAAxL,OAAA,SAAAmM,EAAAjQ,EAAAhR,GAAA,IAAAI,EAAAJ,EAAA+gB,OAAAjC,EAAA9N,EAAAiO,SAAA7e,GAAA,GAAA0e,IAAApF,EAAA,OAAA1Z,EAAAghB,SAAA,eAAA5gB,GAAA4Q,EAAAiO,SAAA,SAAAjf,EAAA+gB,OAAA,SAAA/gB,EAAA8U,IAAA4E,EAAAuH,EAAAjQ,EAAAhR,GAAA,UAAAA,EAAA+gB,SAAA,WAAA3gB,IAAAJ,EAAA+gB,OAAA,QAAA/gB,EAAA8U,IAAA,IAAAwM,UAAA,oCAAAlhB,EAAA,aAAA+f,EAAA,IAAA1X,EAAAsX,EAAAjB,EAAA9N,EAAAiO,SAAAjf,EAAA8U,KAAA,aAAArM,EAAA5F,KAAA,OAAA7C,EAAA+gB,OAAA,QAAA/gB,EAAA8U,IAAArM,EAAAqM,IAAA9U,EAAAghB,SAAA,KAAAb,EAAA,IAAA9Q,EAAA5G,EAAAqM,IAAA,OAAAzF,IAAAV,MAAA3O,EAAAgR,EAAAuQ,YAAAlS,EAAA3H,MAAA1H,EAAAwhB,KAAAxQ,EAAAyQ,QAAA,WAAAzhB,EAAA+gB,SAAA/gB,EAAA+gB,OAAA,OAAA/gB,EAAA8U,IAAA4E,GAAA1Z,EAAAghB,SAAA,KAAAb,GAAA9Q,GAAArP,EAAA+gB,OAAA,QAAA/gB,EAAA8U,IAAA,IAAAwM,UAAA,oCAAAthB,EAAAghB,SAAA,KAAAb,GAAA,SAAAuB,EAAAhI,GAAA,IAAA1I,EAAA,CAAA2Q,OAAAjI,EAAA,SAAAA,IAAA1I,EAAA4Q,SAAAlI,EAAA,SAAAA,IAAA1I,EAAA6Q,WAAAnI,EAAA,GAAA1I,EAAA8Q,SAAApI,EAAA,SAAAqI,WAAArZ,KAAAsI,GAAA,SAAAgR,EAAAtI,GAAA,IAAA1I,EAAA0I,EAAAuI,YAAA,GAAAjR,EAAAnO,KAAA,gBAAAmO,EAAA8D,IAAA4E,EAAAuI,WAAAjR,EAAA,SAAA6O,EAAAnG,GAAA,KAAAqI,WAAA,EAAAJ,OAAA,SAAAjI,EAAA1U,QAAA0c,EAAA,WAAAQ,OAAA,YAAA9K,EAAApG,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAhR,EAAAgR,EAAA3B,GAAA,GAAArP,EAAA,OAAAA,EAAAggB,KAAAhP,GAAA,sBAAAA,EAAAwQ,KAAA,OAAAxQ,EAAA,IAAA+I,MAAA/I,EAAA1Q,QAAA,KAAAwe,GAAA,EAAArW,EAAA,SAAA+Y,IAAA,OAAA1C,EAAA9N,EAAA1Q,QAAA,GAAAF,EAAA4f,KAAAhP,EAAA8N,GAAA,OAAA0C,EAAA9Z,MAAAsJ,EAAA8N,GAAA0C,EAAA7S,MAAA,EAAA6S,EAAA,OAAAA,EAAA9Z,MAAAgS,EAAA8H,EAAA7S,MAAA,EAAA6S,GAAA,OAAA/Y,EAAA+Y,KAAA/Y,GAAA,UAAA6Y,UAAArQ,KAAAD,GAAA,2BAAAoP,EAAAvB,UAAAwB,EAAAvB,EAAA7e,EAAA,eAAAyH,MAAA2Y,EAAAb,cAAA,IAAAV,EAAAuB,EAAA,eAAA3Y,MAAA0Y,EAAAZ,cAAA,IAAAY,EAAA+B,YAAA7C,EAAAe,EAAAjB,EAAA,qBAAApO,EAAAoR,oBAAA,SAAA1I,GAAA,IAAA1I,EAAA,mBAAA0I,KAAA2I,YAAA,QAAArR,QAAAoP,GAAA,uBAAApP,EAAAmR,aAAAnR,EAAArQ,QAAAqQ,EAAAsR,KAAA,SAAA5I,GAAA,OAAA3F,OAAAwO,eAAAxO,OAAAwO,eAAA7I,EAAA2G,IAAA3G,EAAA8I,UAAAnC,EAAAf,EAAA5F,EAAA0F,EAAA,sBAAA1F,EAAAmF,UAAA9K,OAAA6L,OAAA3f,GAAAyZ,GAAA1I,EAAAyR,MAAA,SAAA/I,GAAA,OAAAkH,QAAAlH,IAAA8G,EAAAE,EAAA7B,WAAAS,EAAAoB,EAAA7B,UAAAK,GAAA,0BAAAlO,EAAA0P,gBAAA1P,EAAA0R,MAAA,SAAAhJ,EAAA1Z,EAAAI,EAAA0e,EAAArW,QAAA,IAAAA,MAAA/B,SAAA,IAAA2I,EAAA,IAAAqR,EAAAhB,EAAAhG,EAAA1Z,EAAAI,EAAA0e,GAAArW,GAAA,OAAAuI,EAAAoR,oBAAApiB,GAAAqP,IAAAmS,OAAA5a,MAAA,SAAA8S,GAAA,OAAAA,EAAA/K,KAAA+K,EAAAhS,MAAA2H,EAAAmS,WAAAhB,EAAAvgB,GAAAqf,EAAArf,EAAAmf,EAAA,aAAAE,EAAArf,EAAAoP,GAAA,0BAAAiQ,EAAArf,EAAA,qDAAA+Q,EAAAgD,KAAA,SAAA0F,GAAA,IAAA1I,EAAA+C,OAAA2F,GAAA1Z,EAAA,WAAAI,KAAA4Q,EAAAhR,EAAA0I,KAAAtI,GAAA,OAAAJ,EAAAkB,UAAA,SAAAsgB,IAAA,KAAAxhB,EAAAM,QAAA,KAAAoZ,EAAA1Z,EAAA2iB,MAAA,GAAAjJ,KAAA1I,EAAA,OAAAwQ,EAAA9Z,MAAAgS,EAAA8H,EAAA7S,MAAA,EAAA6S,EAAA,OAAAA,EAAA7S,MAAA,EAAA6S,IAAAxQ,EAAAoG,SAAAyI,EAAAhB,UAAA,CAAAwD,YAAAxC,EAAAqC,MAAA,SAAAlR,GAAA,QAAA8E,KAAA,OAAA0L,KAAA,OAAAN,KAAA,KAAAC,MAAAzH,EAAA,KAAA/K,MAAA,OAAAqS,SAAA,UAAAD,OAAA,YAAAjM,IAAA4E,EAAA,KAAAqI,WAAA/c,QAAAgd,IAAAhR,EAAA,QAAAhR,KAAA,WAAAA,EAAA4iB,OAAA,IAAAxiB,EAAA4f,KAAA,KAAAhgB,KAAA+Z,OAAA/Z,EAAAiB,MAAA,WAAAjB,GAAA0Z,IAAAmJ,KAAA,gBAAAlU,MAAA,MAAA+K,EAAA,KAAAqI,WAAA,GAAAE,WAAA,aAAAvI,EAAA7W,KAAA,MAAA6W,EAAA5E,IAAA,YAAAgO,MAAA1B,kBAAA,SAAApQ,GAAA,QAAArC,KAAA,MAAAqC,EAAA,IAAAhR,EAAA,cAAA+iB,EAAA3iB,EAAA0e,GAAA,OAAAzP,EAAAxM,KAAA,QAAAwM,EAAAyF,IAAA9D,EAAAhR,EAAAwhB,KAAAphB,EAAA0e,IAAA9e,EAAA+gB,OAAA,OAAA/gB,EAAA8U,IAAA4E,KAAAoF,EAAA,QAAAA,EAAA,KAAAiD,WAAAzhB,OAAA,EAAAwe,GAAA,IAAAA,EAAA,KAAArW,EAAA,KAAAsZ,WAAAjD,GAAAzP,EAAA5G,EAAAwZ,WAAA,YAAAxZ,EAAAkZ,OAAA,OAAAoB,EAAA,UAAAta,EAAAkZ,QAAA,KAAA7L,KAAA,KAAAoJ,EAAA9e,EAAA4f,KAAAvX,EAAA,YAAA2W,EAAAhf,EAAA4f,KAAAvX,EAAA,iBAAAyW,GAAAE,EAAA,SAAAtJ,KAAArN,EAAAmZ,SAAA,OAAAmB,EAAAta,EAAAmZ,UAAA,WAAA9L,KAAArN,EAAAoZ,WAAA,OAAAkB,EAAAta,EAAAoZ,iBAAA,GAAA3C,GAAA,QAAApJ,KAAArN,EAAAmZ,SAAA,OAAAmB,EAAAta,EAAAmZ,UAAA,YAAAxC,EAAA,UAAA0B,MAAA,kDAAAhL,KAAArN,EAAAoZ,WAAA,OAAAkB,EAAAta,EAAAoZ,gBAAAR,OAAA,SAAA3H,EAAA1I,GAAA,QAAAhR,EAAA,KAAA+hB,WAAAzhB,OAAA,EAAAN,GAAA,IAAAA,EAAA,KAAA8e,EAAA,KAAAiD,WAAA/hB,GAAA,GAAA8e,EAAA6C,QAAA,KAAA7L,MAAA1V,EAAA4f,KAAAlB,EAAA,oBAAAhJ,KAAAgJ,EAAA+C,WAAA,KAAApZ,EAAAqW,EAAA,OAAArW,IAAA,UAAAiR,GAAA,aAAAA,IAAAjR,EAAAkZ,QAAA3Q,MAAAvI,EAAAoZ,aAAApZ,EAAA,UAAA4G,EAAA5G,IAAAwZ,WAAA,UAAA5S,EAAAxM,KAAA6W,EAAArK,EAAAyF,IAAA9D,EAAAvI,GAAA,KAAAsY,OAAA,YAAAS,KAAA/Y,EAAAoZ,WAAA1B,GAAA,KAAA6C,SAAA3T,IAAA2T,SAAA,SAAAtJ,EAAA1I,GAAA,aAAA0I,EAAA7W,KAAA,MAAA6W,EAAA5E,IAAA,gBAAA4E,EAAA7W,MAAA,aAAA6W,EAAA7W,KAAA,KAAA2e,KAAA9H,EAAA5E,IAAA,WAAA4E,EAAA7W,MAAA,KAAAigB,KAAA,KAAAhO,IAAA4E,EAAA5E,IAAA,KAAAiM,OAAA,cAAAS,KAAA,kBAAA9H,EAAA7W,MAAAmO,IAAA,KAAAwQ,KAAAxQ,GAAAmP,GAAA8C,OAAA,SAAAvJ,GAAA,QAAA1I,EAAA,KAAA+Q,WAAAzhB,OAAA,EAAA0Q,GAAA,IAAAA,EAAA,KAAAhR,EAAA,KAAA+hB,WAAA/Q,GAAA,GAAAhR,EAAA6hB,aAAAnI,EAAA,YAAAsJ,SAAAhjB,EAAAiiB,WAAAjiB,EAAA8hB,UAAAE,EAAAhiB,GAAAmgB,IAAA,eAAAzG,GAAA,QAAA1I,EAAA,KAAA+Q,WAAAzhB,OAAA,EAAA0Q,GAAA,IAAAA,EAAA,KAAAhR,EAAA,KAAA+hB,WAAA/Q,GAAA,GAAAhR,EAAA2hB,SAAAjI,EAAA,KAAAtZ,EAAAJ,EAAAiiB,WAAA,aAAA7hB,EAAAyC,KAAA,KAAAic,EAAA1e,EAAA0U,IAAAkN,EAAAhiB,GAAA,OAAA8e,GAAA,UAAAgC,MAAA,0BAAAoC,cAAA,SAAAlS,EAAAhR,EAAAI,GAAA,YAAA4gB,SAAA,CAAA/B,SAAA7H,EAAApG,GAAAuQ,WAAAvhB,EAAAyhB,QAAArhB,GAAA,cAAA2gB,SAAA,KAAAjM,IAAA4E,GAAAyG,IAAAnP,EAAA,SAAA0oC,GAAAhgC,EAAAoF,EAAA9N,GAAA,OAAA8N,EAAAohC,KAAAphC,GAAAqhC,KAAAzmC,EAAA,mBAAAA,GAAAxX,QAAA2c,UAAAjG,QAAAoH,KAAAogC,QAAAC,UAAAn+C,QAAA,0BAAAwX,IAAA,0BAAAA,EAAA,GAAA4mC,GAAAF,QAAAC,UAAAvhC,EAAA9N,GAAA,GAAAkvC,KAAAxmC,GAAA2I,aAAAvD,EAAA61B,MAAAj7B,EAAA1I,IA4BA,IAAM8iD,GAAWC,EAAQ,IAAyBC,iBAAiB,CnBoB1D,CAAC/Y,wBAAsBF,IEgCvB,CAAC2D,qBAAmBN,ICvCpB,CAACiB,sBAAoBF,MgBYxB8U,GAAY,UAAH52D,OAAao5C,IACtByd,GAAmB,SAAA7mC,GAAK,OAAIA,EAAM6mB,KAAK3B,UAC7CjuC,IAAOw+C,aAAaC,QAAQ,gBAAgB,KAC5Cz+C,IAAOw+C,aAAaC,QAAQ,aAAa,MACzCz+C,IAAOw+C,aAAaC,QAAQ,aAAa,MACzCz+C,IAAOw+C,aAAaC,QAAQ,aAAa,MACzCz+C,IAAOw+C,aAAaC,QAAQ,aAAa,MACzC,IAAIoR,GAAqB,CACvB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEEC,GAAoB,CACtB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGIC,GAAcnf,WAAOC,IAAGC,QAAAC,KAAA,8aAyBjB,SAAAC,GAAK,OAAIA,EAAMyB,MAAMud,cAI5BC,GAAkB,CACtBC,WAAY,uBACZC,SAAU,WACV5gD,MAAO,OACPC,OAAQ,MACRyQ,KAAM,EACNmO,IAAK,GAG+B,SAAAgiC,KAIrC,OAJqCA,GAAAzS,KAAArjC,KAAA0D,MAAtC,SAAAigC,EAAuC74C,GAAG,IAAAirD,EAAA92D,EAAA,OAAA+gB,KAAAc,MAAA,SAAA4D,GAAA,cAAAA,EAAAxN,KAAAwN,EAAA9B,MAAA,cAAA8B,EAAA9B,KAAA,EAClBhR,MAAM9G,GAAI,OACF,OADxBirD,EAAOrxC,EAAApC,KACPrjB,EAAU82D,EAAQ7P,OAAMxhC,EAAAjC,OAAA,SACvBxjB,GAAO,wBAAAylB,EAAAT,UAAA0/B,QACf5N,MAAA,KAAAxgC,WAED,IAAIygD,GAAS,KACTC,GAAS,GACTC,GAAqB,GACrBC,GAAO,GACPC,GAAa,SACjBlS,aAAaC,QAAQ,SAAS,UAAU,IAElCkS,GAAG,SAAA3b,GACP,SAAA2b,EAAY3f,GAAO,IAAAzU,EAa8C,OAb9CvE,KAAA,KAAA24B,GACjBp0B,EAAA6Y,GAAA,KAAAub,EAAA,CAAM3f,IAAO3/B,IAAAgkC,KAAA9Y,GAAA,qBAeK,SAACyU,GACnBzU,EAAKq0B,mBAAmB5f,MACzB3/B,IAAAgkC,KAAA9Y,GAAA,oBAIkB,SAACpxB,GAClBoxB,EAAKgZ,SAAS,CAAC9D,KAAK,IACpBhhC,YAAW,WACR8rB,EAAKs0B,kBAAkB1lD,KACxB,QACHkG,IAAAgkC,KAAA9Y,GAAA,2BAEyB,SAACyU,GACzBzU,EAAKu0B,yBAAyB9f,MAC/B3/B,IAAAgkC,KAAA9Y,GAAA,0BAEwB,SAACyU,GACxBzU,EAAKw0B,wBAAwB/f,MAC9B3/B,IAAAgkC,KAAA9Y,GAAA,eAuDa,WACZA,EAAKgZ,SAAS,CAACyb,YAAY,OAC5B3/C,IAAAgkC,KAAA9Y,GAAA,eAEa,WACZA,EAAKgZ,SAAS,CAACyb,YAAY,OAC5B3/C,IAAAgkC,KAAA9Y,GAAA,kBAEgB,WACfA,EAAK00B,cACLjxD,IAAOw+C,aAAaC,QAAQkR,GAAW,WACxCt+C,IAAAgkC,KAAA9Y,GAAA,0BAEwB,WAQvBA,EAAK20B,kBAPiB,CACpB,CAAC,CAAC9yD,QAAS,wBAAyB,KACpC,CAAC,CAACA,QAAS,qBAAsBG,KAAM,SAAU,KACjD,CAAC,CAACH,QAAS,sBAAuBG,KAAM,WAAY,KACpD,CAAC,CAACH,QAAS,qBAAsBG,KAAM,WAAY,UAItD8S,IAAAgkC,KAAA9Y,GAAA,uBA0UqB,WACpBA,EAAKgZ,SAAS,CAAC9D,KAAK,IA3ctB,SAEoCiN,GAAA,OAAA0R,GAAA/f,MAAC,KAADxgC,WA0clCshD,CAAwB,4BAA4B7uD,MAAK,SAAA/I,GAWvDilD,aAAaC,QAAQ,SADJ,WAGjB+R,GAAqB,CACnB,QAAW,KACX,OAAU,CACR,UAAa,CAEX7wB,SAAS,GAET,SAAY,CACR,QAAW,GACX,OAAU,CACN,CACI,GAAM,UACN,KAAQ,UACR,OAAU,CACN,OAAU,gBACV,MAAS,KACT,MAAS,CACL,EACA,EACA,GAEJ,eAAkB,CACd,EACA,EACA,EACA,KAEJ,QAAW,CACP,QAAW,YAEf,WAAa,EACb,UAAa,CACT,QAAW,GACX,cAAiB,GACjB,UAAa,GACb,YAAe,CACX,EACA,EACA,GAEJ,WAAc,CACV,KAAQ,iBACR,KAAQ,aACR,SAAY,OACZ,OAAU,IAEd,iBAAoB,CAChB,KAAQ,iBACR,KAAQ,aACR,SAAY,OACZ,OAAU,IAEd,OAAU,GACV,UAAa,CACT,EACA,IAEJ,YAAe,CACX,EACA,IAEJ,YAAe,CACX,EACA,KAEJ,eAAkB,EAClB,SAAW,EACX,QAAU,EACV,UAAY,EACZ,WAAa,EACb,aAAe,GAEnB,QAAU,EACV,UAAa,CACT,CACI,MAAS,KACT,MAAS,CACL,IACA,IACA,KAEJ,KAAQ,GACR,OAAU,CACN,EACA,GAEJ,OAAU,QACV,UAAa,SACb,aAAgB,EAChB,aAAgB,CACZ,IACA,EACA,EACA,KAEJ,YAAc,EACd,gBAAmB,CACf,EACA,EACA,IACA,QAKhB,eAAkB,CACd,WAAc,CACV,KAAQ,GAAF5mC,OA9Gf,WA+GS,KAAQ,WAEZ,WAAc,WACd,iBAAoB,KACpB,iBAAoB,WACpB,UAAa,KACb,UAAa,SACb,YAAe,KACf,YAAe,SACf,YAAe,KACf,YAAe,YAI3B,QAAW,GACX,kBAAqB,CACjB,QAAW,CACP,aAAgB,CACZ,UAAW,CACP,CACI,KAAQ,OACR,OAAU,MAEd,CACI,KAAQ,WACR,OAAU,MAEd,CACI,KAAQ,UACR,OAAU,MAEd,CACI,KAAQ,KACR,OAAU,MAEd,CACI,KAAQ,QACR,OAAU,QAItB,aAAe,EACf,YAAe,WACf,SAAW,GAEf,MAAS,CACL,KAAQ,GACR,SAAW,GAEf,SAAY,CACR,SAAW,GAEf,WAAc,CACV,SAAW,IAGnB,cAAiB,SACjB,gBAAmB,SACnB,UAAa,GACb,gBAAmB,CACf,YAAe,KACf,MAAS,GAEb,OAAU,CACN,SAAY,GACZ,SAAW,IAGnBq4D,OAAQ,CACN3f,MAAM,EACN4f,UAAU,GAEZ,SAAY,CACR,QAAW,EACX,YAAc,EACd,UAAa,mBACb,UAAa,mBACb,MAAS,EACT,KAAQ,kBACR,SAAW,EACX,kBAAoB,EACpB,cAAgB,EAChB,kBAAqB,IAEzB,SAAY,CACR,UAAa,WACb,eAAkB,GAClB,mBAAsB,CAClB,OAAS,EACT,MAAQ,EACR,QAAU,EACV,UAAY,EACZ,OAAS,EACT,MAAQ,EACR,eAAe,GAEnB,oBAAuB,CACnB,mBACA,mBACA,oBAEJ,gBAAmB,CACf,EACA,EACA,GAEJ,UAAa,MAavB7S,aAAaC,QAAQ,SAASiS,IAC9BF,GAAmB1rC,OAAOmE,SAAS4G,OAAO,GAAG/K,OAAOomC,UAAU9uD,WAAWM,OAAsB,WAAbg0D,GAAsBZ,GAAkBD,GAC1HW,GAAmB1rC,OAAOmE,SAAS4G,OAAO,GAAG/K,OAAOomC,UAAU9uD,WAAW6wD,iBAAgC,WAAbyD,GAAsBZ,GAAkBD,GACpI,IAAMyB,EAAYtiB,IAAe7B,KAAK5zC,EAAQi3D,IAC9C3B,QAAQ7pD,IAAI,OACZ6pD,QAAQ7pD,IAAIssD,GACZ/0B,EAAKyU,MAAMlG,SAETymB,uBAAa,CACX1sC,SAAU,CACNpmB,KAAM,CAAC2lB,MAAO,IAAKrlB,GAAI,iBACvBoM,KAAM2jC,yBAAev1C,IAEzBurB,OAAOwsC,EAAUxsC,OACjBvlB,QAAS,CACP+vC,WAAW,EACXkiB,UAAU,EACVC,oBAAoB,YAK7BpgD,IAAAgkC,KAAA9Y,GAAA,gBAiGc,WAEb,IAAMm1B,EAAY5iB,yBAAe,CAC/BvwC,KAAM,oBACN4tD,SAAUwF,GAAoBxF,SAASxvD,MAAM,EAAG,KAElD4/B,EAAKq1B,mBACL5xD,IAAOyQ,YAAW,WAChB8rB,EAAKyU,MAAMlG,SACT+mB,2BAAiB,CACfC,mBAAoB,iBACpBC,aAAc,CACZtzD,KAAM,CAAC2lB,MAAO,0BAA2BrlB,GAAI,oBAC7CoM,KAAMumD,QAIX,QACJrgD,IAAAgkC,KAAA9Y,GAAA,qBAoFmB,WAGlBA,EAAKgZ,SAAS,CACZyc,gBAAiBz1B,EAAKxT,MAAMipC,oBAE/B3gD,IAAAgkC,KAAA9Y,GAAA,iBAEe,SAAC01B,EAAQ50D,GAClB40D,GAOSA,EAAOC,SACfC,GAAG,WAAW,SAAAzlD,UAx5BpB6vB,EAAKxT,MAAQ,CACXioC,YAAY,EACZzhD,MAAOvP,IAAOoyD,WACd5iD,OAAQxP,IAAOqyD,YACfC,YAAY,wEACZC,SAAQ,EACR9gB,KAAK,GAEPlV,EAAKi2B,qBAAuBj2B,EAAKk2B,iBAAiB7lD,KAAIyoC,KAAA9Y,IACtDA,EAAKm2B,4BAA8Bn2B,EAAKo2B,wBAAwB/lD,KAAIyoC,KAAA9Y,IACpEA,EAAKq2B,2BAA6Br2B,EAAKs2B,uBAAuBjmD,KAAIyoC,KAAA9Y,IAClEA,EAAKu2B,sBAAwBv2B,EAAKw2B,kBAAkBnmD,KAAIyoC,KAAA9Y,IAAOA,EAu5BhE,OAr6BMkZ,KAAAkb,EAAA3b,GAeN5c,KAAAu4B,EAAA,EAAAl/C,IAAA,oBAAArO,MAuBD,WAKE,IAAA4vD,EAAmE/6B,KAAK+Y,MAAKiiB,EAAAD,EAAtEpR,OAAMsR,OAAA,IAAAD,EAAmB,GAAEA,EAAlBl0D,EAAEm0D,EAAFn0D,GAAI8rC,EAAQqoB,EAARroB,SAAQsoB,EAAAH,EAAQ1kC,SAA2B8kC,QAAnB,IAAAD,EAAiB,GAAEA,GAAhBxR,aAAK,IAAAyR,EAAG,GAAEA,EACzD9C,GAASr4B,KAAK+Y,MACd6d,QAAQ7pD,IAAI,2BACZhF,IAAOwyD,qBAAwBv6B,KAAKu6B,qBACpCxyD,IAAO0yD,4BAA8Bz6B,KAAKy6B,4BAC1C1yD,IAAO4yD,2BAA6B36B,KAAK26B,2BACzC5yD,IAAO8yD,sBAAwB76B,KAAK66B,sBAOpC,IAAMO,EAAgBrI,GAAgBrzC,MAAK,SAAAiD,GAAC,OAAIA,EAAEve,OAASwuC,KACvDwoB,EACFp7B,KAAK+Y,MAAMlG,SACTwoB,uBAAa,CACXnoB,WAAYwW,EACZ9W,SAAUwoB,EACVE,UAAWroB,MAObnsC,GACFk5B,KAAK+Y,MAAMlG,SAASuC,EAAyBtuC,IAI3C4iD,EAAMvW,QAERnT,KAAK+Y,MAAMlG,SAASS,EAAc,CAACngC,QAASu2C,EAAMvW,UAYpDnT,KAAKu7B,yBACN,CAAA/hD,IAAA,oBAAArO,MA0BD,SAAkBqwD,GAAe,IAAA5V,EAAA,KAC/B,GAAI4V,GAAiBA,EAAcz3D,OAAQ,CACzC,IAAA03D,EAAAj4D,IAAgCg4D,EAAc,GAAE,GAAzCE,EAAYD,EAAA,GAAEvqD,EAAOuqD,EAAA,GAE5B1zD,IAAOyQ,YAAW,WAChBotC,EAAK7M,MAAMlG,SAAS8oB,0BAAgBD,IACpC9V,EAAKqT,kBAAkBuC,EAAc92D,MAAM,MAC1CwM,MAEN,CAAAsI,IAAA,oBAAArO,MAGD,SAAkBywD,GAad,IAAIC,EAAY,GACZ3oD,EAAO0oD,EACkB,IAAzB1oD,EAAKghD,SAASnwD,QACdmP,EAAKghD,SAAS/nD,KAAK+G,EAAKghD,SAAS,IAErC18C,OAAOC,KAAKvE,EAAKghD,SAAS,GAAGxuB,YAAYj9B,SAAQ,SAACqzD,GAC1Ct+C,MAAMxY,WAAWkO,EAAKghD,SAAS,GAAGxuB,WAAWo2B,MAGxCtD,IAAD,MAASA,IAA8D,IAAvBA,GAAK/tC,OAAO1mB,SAC5Dy0D,GAAOsD,GAGfD,GAAaC,EAAO,OAEpBD,EAAU53D,cAAcy5B,QAAQ86B,GAAKv0D,eAAiB,IACtDu0D,GAAO,GACPhhD,OAAOC,KAAKvE,EAAKghD,SAAS,GAAGxuB,YAAYj9B,SAAQ,SAAC+Q,GAC5CgE,MAAMxY,WAAWkO,EAAKghD,SAAS,GAAGxuB,WAAWlsB,MAGzCg/C,KACDA,GAAOh/C,OAKpB+sC,aAAaC,QAAQ,SAASgS,IAC9BD,GAAqB,CACnB,QAAW,KACX,OAAU,CACN,SAAY,CACR,QAAW,GACX,OAAU,CACN,CACI,GAAM,UACN,KAAQ,UACR,OAAU,CACN,OAAU,gBACV,MAAS,KACT,MAAS,CACL,EACA,EACA,GAEJ,eAAkB,CACd,EACA,EACA,EACA,KAEJ,QAAW,CACP,QAAW,YAEf,WAAa,EACb,UAAa,CACT,QAAW,GACX,cAAiB,GACjB,UAAa,GACb,YAAe,CACX,EACA,EACA,GAEJ,WAAc,CACV,KAAQ,iBACR,KAAQ,aACR,SAAY,OACZ,OAAU,CACR,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,YAGN,iBAAoB,CAChB,KAAQ,iBACR,KAAQ,aACR,SAAY,OACZ,OAAU,CACR,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,YAGN,OAAU,GACV,UAAa,CACT,EACA,IAEJ,YAAe,CACX,EACA,IAEJ,YAAe,CACX,EACA,KAEJ,eAAkB,EAClB,SAAW,EACX,QAAU,EACV,UAAY,EACZ,WAAa,EACb,aAAe,GAEnB,QAAU,EACV,UAAa,CACT,CACI,MAAS,KACT,MAAS,CACL,IACA,IACA,KAEJ,KAAQ,GACR,OAAU,CACN,EACA,GAEJ,OAAU,QACV,UAAa,SACb,aAAgB,EAChB,aAAgB,CACZ,IACA,EACA,EACA,KAEJ,YAAc,EACd,gBAAmB,CACf,EACA,EACA,IACA,QAKhB,eAAkB,CACd,WAAc,CACV,KAAQ,GAAFz3D,OAAK03D,IACX,KAAQ,WAEZ,WAAc,WACd,iBAAoB,KACpB,iBAAoB,WACpB,UAAa,KACb,UAAa,SACb,YAAe,KACf,YAAe,SACf,YAAe,KACf,YAAe,YAI3B,QAAW,GACX,kBAAqB,CACjB,QAAW,CACP,aAAgB,CACZ,UAAW,CACP,CACI,KAAQ,OACR,OAAU,MAEd,CACI,KAAQ,WACR,OAAU,MAEd,CACI,KAAQ,UACR,OAAU,MAEd,CACI,KAAQ,KACR,OAAU,MAEd,CACI,KAAQ,QACR,OAAU,QAItB,aAAe,EACf,YAAe,WACf,SAAW,GAEf,MAAS,CACL,KAAQ,GACR,SAAW,GAEf,SAAY,CACR,SAAW,GAEf,WAAc,CACV,SAAW,IAGnB,cAAiB,SACjB,gBAAmB,SACnB,UAAa,GACb,gBAAmB,CACf,YAAe,KACf,MAAS,GAEb,OAAU,CACN,SAAY,GACZ,SAAW,IAGnB,SAAY,CACR,QAAW,EACX,YAAc,EACd,UAAa,mBACb,UAAa,mBACb,MAAS,EACT,KAAQ,kBACR,SAAW,EACX,kBAAoB,EACpB,cAAgB,EAChB,kBAAqB,IAEzB,SAAY,CACR,UAAa,WACb,eAAkB,GAClB,mBAAsB,CAClB,OAAS,EACT,MAAQ,EACR,QAAU,EACV,UAAY,EACZ,OAAS,EACT,MAAQ,EACR,eAAe,GAEnB,oBAAuB,CACnB,mBACA,mBACA,oBAEJ,gBAAmB,CACf,EACA,EACA,GAEJ,UAAa,MAIzBjS,aAAaC,QAAQ,SAASiS,IAC9BF,GAAmB1rC,OAAOmE,SAAS4G,OAAO,GAAG/K,OAAOomC,UAAU9uD,WAAWM,OAAsB,WAAbg0D,GAAsBZ,GAAkBD,GAC1HW,GAAmB1rC,OAAOmE,SAAS4G,OAAO,GAAG/K,OAAOomC,UAAU9uD,WAAW6wD,iBAAgC,WAAbyD,GAAsBZ,GAAkBD,GACpI,IAAMyB,EAAYtiB,IAAe7B,KAAKhiC,EAAKqlD,IAC3C3B,QAAQ7pD,IAAIssD,GACZhB,GAAOxlB,SAELymB,uBAAa,CACX1sC,SAAU,CACNpmB,KAAM,CAAC2lB,MAAO,IAAKrlB,GAAI,iBACvBoM,KAAM2jC,yBAAe3jC,IAEzB2Z,OAAOwsC,EAAUxsC,OACjBvlB,QAAS,CACP+vC,WAAW,EACXkiB,UAAU,EACVC,oBAAoB,QAI3B,CAAAhgD,IAAA,qBAAArO,MAED,SAAmB4tC,GACjB/Y,KAAKsd,SAAS,CAAC9D,KAAK,IACpB8e,GAAS,IAAHx3D,OAAOi4C,EAAM90C,eAMnBsiD,aAAaC,QAAQ,QAAQ8R,MAC9B,CAAA9+C,IAAA,2BAAArO,MAED,SAAyB4wD,GACvB/7B,KAAKsd,SAAS,CAAC9D,KAAK,IACpBif,GAAasD,IACd,CAAAviD,IAAA,0BAAArO,MAED,SAAwBqO,GACtBwmB,KAAKsd,SAAS,CAAC9D,KAAK,IACpBgf,GAAOh/C,IACR,CAAAA,IAAA,kBAAArO,MA6QD,WACE60B,KAAKg8B,iBACLh8B,KAAK25B,qBAON,CAAAngD,IAAA,iBAAArO,MAED,WACE60B,KAAK+Y,MAAMlG,SACTymB,uBAAa,CACX1sC,SAAU,CACRpmB,KAAM,CACJ2lB,MAAO,qCACPrlB,GAAI,kBAENoM,KAAM+oD,IAER30D,QAAS,CAEPkyD,oBAAoB,GAEtB3sC,OAAQmmC,QAGb,CAAAx5C,IAAA,uBAAArO,MAED,WACE60B,KAAK+Y,MAAMlG,SACTymB,uBAAa,CACX1sC,SAAU,CACRpmB,KAAM,CACJ2lB,MAAO,0BACPrlB,GAAI,kBAENoM,KAAMgpD,yBPj3BW,6xLOm3BnBrvC,OAAQ,CACNN,QAAS,KACTM,OAAQ,CACNmE,SAAU,CACR4G,OAAQ,CACN,CACEtxB,KAAM,KACNumB,OAAQ,CACNka,OAAQ,iBACRupB,QAAS,CACP7oC,IAAK,eACLC,IAAK,gBAEP4S,WAAW,aAS5B,CAAA9gB,IAAA,gBAAArO,MAED,WAEE60B,KAAK+Y,MAAMlG,SACTymB,uBAAa,CACX1sC,SAAU,CACR,CACEpmB,KAAM,CACJ2lB,MAAO,YACPrlB,GAAI,kBAENoM,KAAMgpD,yBCt5BH,8tgBD25BZ,CAAA1iD,IAAA,mBAAArO,MAED,WACE60B,KAAK+Y,MAAMlG,SACTymB,uBAAa,CACX1sC,SAAU,CACR,CACEpmB,KAAM,CAAC2lB,MAAO,iBAAkBrlB,GD/fX,qBCggBrBoM,KAAM2jC,yBAAeslB,WAK9B,CAAA3iD,IAAA,mBAAArO,MAsBD,WAEE60B,KAAK+Y,MAAMlG,SACTymB,uBAAa,CACX1sC,SAAU,CACR,CACEpmB,KAAM,CAAC2lB,MAAO,iBAAkBrlB,GAAI,kBACpCoM,KAAM2jC,yBAAe6iB,KAEvB,CACElzD,KAAM,CAAC2lB,MAAO,aAAcrlB,GAAI,cAChCoM,KAAM2jC,yBAAeulB,MAGzB90D,QAAS,CACPkyD,oBAAoB,GAEtB3sC,OAAQwvC,QAGb,CAAA7iD,IAAA,qBAAArO,MAED,WAEE60B,KAAK+Y,MAAMlG,SACTymB,uBAAa,CACX1sC,SAAU,CACR,CACEpmB,KAAM,CACJ2lB,MAAO,iBACPrlB,GAAI,aAENoM,KAAMgpD,yBH99BH,2tDGi+BPrvC,OAAQyvC,GACRh1D,QAAS,CACPkyD,oBAAoB,QAI3B,CAAAhgD,IAAA,cAAArO,MAED,WAEE60B,KAAK+Y,MAAMlG,SACTymB,uBAAa,CACX1sC,SAAU,CACR,CACEpmB,KAAM,CACJ2lB,MAAO,UACPrlB,GFp+BQ,WEs+BVoM,KAAMgpD,yBFn/BH,sTEs/BPrvC,OAAQ0vC,GACRj1D,QAAS,CACPkyD,oBAAoB,QAI3B,CAAAhgD,IAAA,eAAArO,MAED,WACE60B,KAAK+Y,MAAMlG,SACTymB,uBAAa,CACX1sC,SAAU,CACR,CACEpmB,KAAM,CACJ2lB,MAAO,WACPrlB,GAAI,YAENoM,KAAMgpD,yBEvgCN,y6NF0gCJ50D,QAAS,CACPkyD,oBAAoB,QAI3B,CAAAhgD,IAAA,SAAArO,MAyBD,WACE,IAAIqxD,EAAKx8B,KAAKlP,MAAM0oB,KACpB,OAAOC,IAAA/vC,cAAC+yD,GAAc,CAACjjB,KAAQgjB,EAAIE,OAAQ18B,WAC5C04B,EAr6BM,CAAS3a,aAw6BX0e,GAAiB,SAAHn5D,GAAsB,IAAjBk2C,EAAIl2C,EAAJk2C,KAAKkjB,EAAMp5D,EAANo5D,OAE3B,OADF9F,QAAQ7pD,IAAIysC,GACLA,GAA2B,IAAnBr2C,SAASq2C,SAA+B1jC,IAAhBpB,KAAO8kC,IAA+B,OAATA,GAGlEod,QAAQ7pD,IAAI,QACL0sC,IAAA/vC,cAACizD,iBAAa,CAACniB,MAAOA,UAC7Bf,IAAA/vC,cAACouD,GAGC,CACA8E,IAAK,SAAArtD,GACHA,IAAQmtD,EAAOjmD,KAAOlH,KAGxBkqC,IAAA/vC,cAACyvC,GAAM,CACLK,KAAMkjB,EAAO5rC,MAAMioC,WACnBxhD,OA7gCa,GA8gCbyhC,QAAQ,UACRO,QAASmjB,EAAO1D,aAEhBvf,IAAA/vC,cAACywC,GAAY,CAACC,UAAWsiB,EAAOG,kBAElCpjB,IAAA/vC,cAAA,OAAKT,MAAO+uD,IACVve,IAAA/vC,cAACozD,KAAS,MACP,SAAAv5D,GAAA,IAAEgU,EAAMhU,EAANgU,OAAQD,EAAK/T,EAAL+T,MAAK,OACbmiC,IAAA/vC,cAAC6tD,GAAQ,CACR9qC,qBAAsBiwC,EAAO5rC,MAAMupC,YACnCvzD,GAAG,MAIHitC,SAAU4jB,GACVrgD,MAAOA,EACPC,OAAQA,EACRwlD,eAAgBhK,GAChBiK,eAAgBnqC,GAChBoqC,uBAAwBtqB,EACxBM,sBAAuBA,EACvBiqB,aAAcv7D,aApCb83C,IAAA/vC,cAAA,aAmDAyzD,sBANS,SAAArsC,GAAK,OAAIA,KACT,SAAA+hB,GAAQ,MAAK,CAACA,cAKvBsqB,CAA0CzE,IG/lClD,SAAS0E,GAAoBC,EAAWh5D,EAASgwB,GAEtD,IAAMipC,EXuBD,SAA0BC,GAC/B,IAAMnC,EAAgBrI,GAAgBrzC,MAAK,SAAAkzB,GAAQ,OAAIA,EAASxuC,OAASm5D,KACzE,IAAKnC,EACH,MAAM,IAAI72C,MAAM,0BAADzjB,OAA2By8D,IAE5C,OAAOnC,EW5BcoC,CXUe,WWPpC,GAAIz1D,OAAO01D,OAAQ,CACjB,IAAOpnC,EAAYgnC,EAAZhnC,SACDK,EAAQ4mC,EAAaI,2BAA2BrnC,GACtDtuB,OAAO01D,OAAOE,YAAY,CAACjnC,SAAQL,EAAS+0B,QAG9C/2B,ICNF,IDS+B0pB,GCTzB6f,GAAUC,+BAAqB5lB,IAAgB6lB,IAE/CC,IDOyBhgB,GCPC2a,GDQvB,CACLjf,IAAA/vC,cAACs0D,IAAK,CAACxkD,IAAI,OAAOytC,KAAK,OAAOjhD,UAAWi4D,GAAMC,QAASd,KACxD3jB,IAAA/vC,cAACs0D,IAAK,CAACxkD,IAAI,OAAOytC,KAAK,QACrBxN,IAAA/vC,cAACy0D,IAAU,CAACn4D,UAAW+3C,KACvBtE,IAAA/vC,cAACs0D,IAAK,CAAC/W,KAAK,MAAMjhD,UAAW+3C,KAC7BtE,IAAA/vC,cAACs0D,IAAK,CAAC/W,KAAK,QAAQjhD,UAAW+3C,KAC/BtE,IAAA/vC,cAACs0D,IAAK,CAAC/W,KAAK,gBAAgBjhD,UAAW+3C,QCZvCqgB,GAAO,WAAH,OACR3kB,IAAA/vC,cAAC2iD,WAAQ,CAACyR,MAAOA,IACfrkB,IAAA/vC,cAAC20D,IAAM,CAACT,QAASA,IACfnkB,IAAA/vC,cAACs0D,IAAK,CAAC/W,KAAK,IAAIjhD,UAAW0yD,IACxBqF,IAEHtkB,IAAA/vC,cAACs0D,IAAK,CAAC/W,KAAK,iBAAiBjhD,UAAW0yD,IACrCqF,OAKLO,GAAoBC,aAAY,WAC5B90D,IAAS+0D,eAAe,UACxBC,cAAcH,IACDI,IAASC,WAAWl1D,IAAS+0D,eAAe,SACpDI,OAAOnlB,IAAA/vC,cAAC00D,GAAI,UAEvB,M,kSC9BWS,E,MAAW39D,GAAU,CAChC49D,GAAI,KACJC,GAAI,OAGOC,EAAkBH,EAASE,G,klBCLG,IAEtBE,EAAM,WAUzB,SAAAA,IAaQ,IAAA37D,EAAAsU,UAAA7T,OAAA,QAAA+R,IAAA8B,UAAA,GAAAA,UAAA,GAAJ,GAAEsnD,EAAA57D,EAZJipB,eAAO,IAAA2yC,EAAGF,EAAeE,EAAAC,EAAA77D,EACzBkW,WAAG,IAAA2lD,EAAG,GAAEA,EAAAC,EAAA97D,EACRoiC,kBAAU,IAAA05B,EAAG,KAAIA,EAAAr/B,IAAA,KAAAk/B,GAAA7lD,IAAA,uBAAAA,IAAA,mBAAAA,IAAA,0BAWjB4mB,KAAKzT,QAAUA,EACfyT,KAAK0F,WAAaA,EAClB1F,KAAKxmB,IAAMA,EAwEZ,OAvEA2mB,IAAA8+B,EAAA,EAAAzlD,IAAA,8BAAArO,MAED,SACEoE,GAGsB,IAFtB8vD,EAAcznD,UAAA7T,OAAA,QAAA+R,IAAA8B,UAAA,GAAAA,UAAA,GAAG,GACjB0nD,EAAiB1nD,UAAA7T,OAAA,EAAA6T,UAAA,QAAA9B,EAEjB,OAAOkqB,KAAKu/B,4BAA4B,OAAQhwD,EAAM8vD,EAASC,KAChE,CAAA9lD,IAAA,8BAAArO,MAED,SACEoE,GAGsB,IAFtB8vD,EAAiBznD,UAAA7T,OAAA,QAAA+R,IAAA8B,UAAA,GAAAA,UAAA,GAAG,GACpB0nD,EAAiB1nD,UAAA7T,OAAA,EAAA6T,UAAA,QAAA9B,EAEjB,OAAOkqB,KAAKu/B,4BAA4B,OAAQhwD,EAAM8vD,EAASC,KAChE,CAAA9lD,IAAA,8BAAArO,MAED,SAA4Bq0D,EAAWjwD,GAAgD,IAAA+0B,EAAA,KAArC+6B,EAAiBznD,UAAA7T,OAAA,QAAA+R,IAAA8B,UAAA,GAAAA,UAAA,GAAG,GAC9D6nD,EAAW,IAAH3+D,OAAO0+D,GACrB,OAAApmD,IAAA,GACG4mB,KAAKxmB,IAAMwmB,KAAK0F,WACbluB,OAAOC,KAAKuoB,KAAK0F,YAAYzsB,QAAO,SAACuS,EAAMhS,GACzC,OAAAhV,IAAA,GACKgnB,GACChS,KAAOjK,EAEP+0B,EAAKoB,WAAWlsB,GAGd8qB,EAAKoB,WAAWlsB,GAAKgmD,GAGnBl7B,EAAKoB,WAAWlsB,GAAKimD,GAAUlwD,EAAKiK,GAAM,GAAF1Y,OAAAghC,IAAMu9B,GAAO,CAAE9vD,IAAOic,GAC9D,GAAEpS,IAAA,GACFI,EAAMjK,EAAKiK,IACf,MAEL,IACHjK,KAEP,CAAAiK,IAAA,oBAAArO,MAED,WACE,OAAO60B,KAAKzT,UAAYyyC,IACzB,CAAAxlD,IAAA,uBAAArO,MAED,WACO60B,KAAK0/B,qBACR5yD,UAAQvF,MAAM,GAADzG,OAAIk/B,KAAKxmB,IAAG,KAAA1Y,OAAIk/B,KAAKzT,QAAO,sDAE5C,CAAA/S,IAAA,QAAArO,MAED,WAIE,OAFA60B,KAAK2/B,uBAEE3/B,KAAK7O,KAAIinB,MAATpY,KAAIpoB,aACZ,CAAA4B,IAAA,OAAArO,MAED,SAAKoE,GAAgF,IAArE8vD,EAAiBznD,UAAA7T,OAAA,QAAA+R,IAAA8B,UAAA,GAAAA,UAAA,GAAG,GAAI0nD,EAAgB1nD,UAAA7T,OAAA,QAAA+R,IAAA8B,UAAA,GAAAA,UAAA,GAAG,GACzD,OAAOooB,KAAK4/B,4BAA4BrwD,EAAM8vD,EAASC,KACxD,CAAA9lD,IAAA,QAAArO,MAED,WAEE,OAAO60B,KAAKkV,KAAIkD,MAATpY,KAAIpoB,aACZ,CAAA4B,IAAA,OAAArO,MAED,SAAKoE,GAAgF,IAArE8vD,EAAiBznD,UAAA7T,OAAA,QAAA+R,IAAA8B,UAAA,GAAAA,UAAA,GAAG,GAAI0nD,EAAgB1nD,UAAA7T,OAAA,QAAA+R,IAAA8B,UAAA,GAAAA,UAAA,GAAG,GACzD,OAAOooB,KAAK6/B,4BAA4BtwD,EAAM8vD,EAASC,OACxDL,EAlGwB,G,4zBC2CpB,IAaMa,EAAW,SAAAC,GAAA,SAAAD,IAAA,OAAA//B,IAAA,KAAA+/B,GAAA3iB,EAAA,KAAA2iB,EAAAloD,WAQrB,OARqB4lC,IAAAsiB,EAAAC,GAAA5/B,IAAA2/B,EAAA,EAAAtmD,IAAA,OAAArO,MACtB,SAAKic,GAAQ,IAAAkd,EAAA,KACX,OAAAlrB,IAAA,GACG4mB,KAAKxmB,IAAM4N,EAAOxjB,KAAI,SAAA+b,GAAC,OAAI2kB,EAAKs7B,4BAA4BjgD,GAAG2kB,EAAK9qB,WAExE,CAAAA,IAAA,OAAArO,MACD,SAAKic,GACH,OAAAhO,IAAA,GAAS4mB,KAAKxmB,IAAM4N,OACrB04C,EARqB,CAASb,GAWpBe,EAAe,CAC1Bl5D,GAAI,KACJqlB,MAAO,KACPrnB,MAAO,KACPurD,QAAS,KACTjpC,OAAQ,IAAI04C,EAAY,CACtBtmD,IAAK,SACL+S,QAASsyC,EAASC,GAClBp5B,WAhC6B,CAC/BthC,KAAM,KACNkC,KAAM,SAkCK25D,EAAYz7D,IAAA,GACpBw7D,GAAY,IACf54C,OAAQ,IAAI04C,EAAY,CACtBtmD,IAAK,SACL+S,QAASsyC,EAASE,GAClBr5B,WApC6B,CAC/BthC,KAAM,KACNkC,KAAM,KACN4V,OAAQ,KACRuN,aAAc,KACdkB,SAAU,UAmCCu1C,EAAa,SAAAC,GAAA,SAAAD,IAAA,IAAAta,EAAA7lB,IAAA,KAAAmgC,GAAA,QAAAljB,EAAAplC,UAAA7T,OAAAk5C,EAAA,IAAAr3C,MAAAo3C,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAAtlC,UAAAslC,GACT,OADS0I,EAAAzI,EAAA,KAAA+iB,EAAA,GAAAp/D,OAAAm8C,IAAA7jC,IAAAgkC,IAAAwI,GAAA,MAClB,WAASA,EAmDd,OApDuBpI,IAAA0iB,EAAAC,GACThgC,IAAA+/B,EAAA,EAAA1mD,IAAA,OAAArO,MAEf,SAAKw9B,GACH,IAAMy3B,EAAmBz3B,EAAQ9I,cAAar7B,IAAA,GAErCmkC,GAAO,IACV0nB,QAAS1nB,EAAQ9I,cAAcwgC,gBAEjC13B,EAEJ,OAAO3I,KAAK4/B,4BAA4BQ,GAAkBpgC,KAAKxmB,OAChE,CAAAA,IAAA,OAAArO,MACD,SAAKw9B,GACH,IAAOvhB,EAAmBuhB,EAAnBvhB,OAAQipC,EAAW1nB,EAAX0nB,QACXiQ,EAAgBl5C,EASpB,GAHEA,EAAO,MACLA,EAAO,GAAG7K,eAAe,YAAc6K,EAAO,GAAG7K,eAAe,iBAE7C,CACrB,IAAMmO,EAAatD,EAAOxjB,KAAI,SAAA+b,GAAC,OAAIA,EAAEvb,QAE/Bm8D,EAAan2C,kCAAwB,CACzChD,OAAQsD,EACRnB,KAAM8mC,IAEFnmC,EAAOC,4BAAkBo2C,EAAY71C,IAE3C41C,EAAgBp2C,EAAKtmB,KAAI,SAAC+b,EAAGzT,GAAC,OAAA1H,IAAA,GACzBg8D,IAAKt2C,EAAKhe,GAAI,CAAC,OAAQ,OAAQ,YAAU,IAC5Cud,aAAcS,EAAKhe,GAAGud,mBAGVhhB,SAAQ,SAACkX,EAAGzT,GACpBkb,EAAOlb,GAAG5F,OAASqZ,EAAErZ,MAGvBulB,UAAcxX,KAAK,UAADvT,OAAW6e,EAAEvb,KAAI,iBAAAtD,OAAgB6e,EAAErZ,KAAI,gBAAAxF,OAAesmB,EAAOlb,GAAG5F,UAMxF,MAAO,CACL4M,KAAM,CAACkU,OAAQk5C,EAAe/2C,KAAMof,EAAQ0nB,SAC5C7pD,KAAMg6D,IAAK73B,EAAS,CAAC,KAAM,QAAS,eAEvCu3B,EApDuB,CAASjB,GAoEpBwB,EAbWrnD,QAAA,GACvBylD,EAASC,GAAK,IAAIoB,EAAc,CAC/B1mD,IAAK,UACL+S,QAASsyC,EAASC,GAClBp5B,WAAYs6B,KAEbnB,EAASE,GAAK,IAAImB,EAAc,CAC/B1mD,IAAK,UACL+S,QAASsyC,EAASE,GAClBr5B,WAAYu6B,K,q0BCzJT,IASMS,EAAuB,IAAIzB,EAAO,CAC7C1yC,QAASsyC,EAASE,GAClBvlD,IAAK,cACLksB,WAZmC,CACnCtN,YAAa,KACb67B,OAAQ,KACR1pB,KAAM,KACNzjC,GAAI,KACJqlB,MAAO,KACPhf,IAAK,QASMwzD,EAAgB,SAAAZ,GAAA,SAAAY,IAAA,IAAAr8B,EAAAvE,IAAA,KAAA4gC,GAAA,QAAA3jB,EAAAplC,UAAA7T,OAAAk5C,EAAA,IAAAr3C,MAAAo3C,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAAtlC,UAAAslC,GAEV,OAFU5Y,EAAA6Y,EAAA,KAAAwjB,EAAA,GAAA7/D,OAAAm8C,IAAA7jC,IAAAgkC,IAAA9Y,GAAA,UACjBu6B,EAASE,IAAE3lD,IAAAgkC,IAAA9Y,GAAA,MACf,aAAWA,EAqBhB,OAvB0BkZ,IAAAmjB,EAAAZ,GAEV5/B,IAAAwgC,EAAA,EAAAnnD,IAAA,OAAArO,MACjB,SAAK6oD,GAEH,IAAM4M,EAAkBppD,OAAOC,KAAKu8C,GAAW/6C,QAC7C,SAACuS,EAAMhS,GAAG,OAAAhV,IAAA,GACLgnB,GACCwoC,EAAUx6C,GAAKy6C,OAAM76C,IAAA,GACnBI,EAAMknD,EAAqBvvC,KAAK6iC,EAAUx6C,IAAMqnD,aAClD,MAEN,IAGF,OAAAznD,IAAA,GAAS4mB,KAAKxmB,IAAMonD,KACrB,CAAApnD,IAAA,OAAArO,MAED,SAAK6oD,GAEH,MAA4B,WAArBt/C,IAAOs/C,IAA0Bx8C,OAAOC,KAAKu8C,GAAWjwD,OAAMqV,IAAA,GAC/D4mB,KAAKxmB,IAAMw6C,GACb,OACL2M,EAvB0B,CAAS1B,GA2BzBe,EAAe,CAC1BtM,UAAW,KACX0D,eAAgB,KAChB9/B,mBAAoB,KACpBwpC,cAAe,KACf9M,UAAW,IAAI2M,GAGJV,EAAe,CAC1BvM,UAAW,KACX0D,eAAgB,KAChB9/B,mBAAoB,KACpBypC,oBAAqB,KACrB1pD,gBAAiB,KACjB28C,UAAW,IAAI2M,GAgBFK,EAbK5nD,QAAA,GACjBylD,EAASC,GAAK,IAAIG,EAAO,CACxB1yC,QAASsyC,EAASC,GAClBp5B,WAAYs6B,EACZxmD,IAAK,cAENqlD,EAASE,GAAK,IAAIE,EAAO,CACxB1yC,QAASsyC,EAASE,GAClBr5B,WAAYu6B,EACZzmD,IAAK,c,ikBCnEF,IAAMwmD,EAAe,CAC1BiB,QAAS,KACTC,WAAY,KACZroC,SAAU,KACVD,UAAW,KACXuoC,MAAO,KACPzrC,KAAM,MAGKuqC,EAAYz7D,IAAA,GACpBw7D,GAAY,IACf3I,QAAS,KACT+J,iBAAkB,KAClBC,aAAc,KACdC,kBAAmB,OAgBNC,EAbKnoD,QAAA,GACjBylD,EAASC,GAAK,IAAIG,EAAO,CACxB1yC,QAASsyC,EAASC,GAClBp5B,WAAYs6B,EACZxmD,IAAK,cAENqlD,EAASE,GAAK,IAAIE,EAAO,CACxB1yC,QAASsyC,EAASE,GAClBr5B,WAAYu6B,EACZzmD,IAAK,c,k5BCOF,IAAMgoD,GAAmB,CAAC,OAAQ,QAmHzC,IACMC,GAAsB,SAAA1B,GAAA,SAAA0B,IAAA,IAAAn9B,EAAAvE,IAAA,KAAA0hC,GAAA,QAAAzkB,EAAAplC,UAAA7T,OAAAk5C,EAAA,IAAAr3C,MAAAo3C,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAAtlC,UAAAslC,GACL,OADK5Y,EAAA6Y,GAAA,KAAAskB,EAAA,GAAA3gE,OAAAm8C,IAAA7jC,IAAAgkC,IAAA9Y,GAAA,UAChBu6B,EAASC,IAAEx6B,EAqBpB,OAtByBkZ,IAAAikB,EAAA1B,GACL5/B,IAAAshC,EAAA,EAAAjoD,IAAA,OAAArO,MACrB,SAAKoU,GAEH,OAAAnG,IAAA,GACG4mB,KAAKxmB,IAAgB,OAAV+F,EAAiBygB,KAAK4/B,4BAA4BrgD,GAAOygB,KAAKxmB,KAAO,QAEpF,CAAAA,IAAA,OAAArO,MAED,SAAKoU,EAAO8/C,EAASqC,GACnB,IAAAC,EAAiBtC,EAAQ36D,OAAO,GAAzBmoB,EAA2BrpB,KAAAm+D,EAAA,GAArB,GACTj2C,EAAYsU,KAAKxmB,IAKrB,MAJoB,YAAhBqT,EAAOvmB,MAAmC,cAAb05B,KAAKxmB,KAAuB+F,IAC3DmM,EAxCN,SAAgCmB,GAC9B,IACM+0C,EAAqB,CAAC,EAAG,IAG/B,OAAI/0C,EAAOomC,UAAU4O,SACZ,cAILh1C,EAAOomC,UAAUqC,QACZ,YAVa,KAgBpBzoC,EAAOomC,UAAUgC,QACjBpoC,EAAOomC,UAAUkC,YAAYhqC,MAAK,SAAC5P,EAAGrP,GAAC,OAAKqP,IAAMqmD,EAAmB11D,MAE9D,cAGF,YAiBS41D,CAAuBj1C,IAG9B,CACLsmC,eAAc3uD,MAAA,GACRk9D,EAAYvO,gBAAkB,IAAE,GAAA/5C,IAAA,GACnCsS,EAAYnM,SAGlBkiD,EAtByB,CAASxC,GAyB/B8C,GAAsB,SAAA5B,GAAA,SAAA4B,IAAA,IAAAnc,EAAA7lB,IAAA,KAAAgiC,GAAA,QAAAC,EAAApqD,UAAA7T,OAAAk5C,EAAA,IAAAr3C,MAAAo8D,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAAhlB,EAAAglB,GAAArqD,UAAAqqD,GACL,OADKrc,EAAAzI,GAAA,KAAA4kB,EAAA,GAAAjhE,OAAAm8C,IAAA7jC,IAAAgkC,IAAAwI,GAAA,UAChBiZ,EAASC,IAAElZ,EAmBpB,OApByBpI,IAAAukB,EAAA5B,GACLhgC,IAAA4hC,EAAA,EAAAvoD,IAAA,OAAArO,MACrB,SAAK2jB,GACH,OAAA1V,IAAA,GAAS4mB,KAAKxmB,IAAMsV,KACrB,CAAAtV,IAAA,OAAArO,MACD,SAAK2jB,EAAOuwC,EAASqC,GACnB,IAAAQ,EAAiB7C,EAAQ36D,OAAO,GAAzBmoB,EAA2BrpB,KAAA0+D,EAAA,GAArB,GAEb,MAAiB,cAAbliC,KAAKxmB,KAAuC,YAAhBqT,EAAOvmB,KAG9B,GAGF,CACL6sD,eAAc3uD,MAAA,GACRk9D,EAAYvO,gBAAkB,IAAE,GAAA/5C,IAAA,GACnC4mB,KAAKxmB,IAAMsV,SAGjBizC,EApByB,CAAS9C,GAwB/BkD,GAAmB,SAAAC,GAAA,SAAAD,IAAA,IAAAzX,EAAA3qB,IAAA,KAAAoiC,GAAA,QAAAE,EAAAzqD,UAAA7T,OAAAk5C,EAAA,IAAAr3C,MAAAy8D,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAArlB,EAAAqlB,GAAA1qD,UAAA0qD,GACF,OADE5X,EAAAvN,GAAA,KAAAglB,EAAA,GAAArhE,OAAAm8C,IAAA7jC,IAAAgkC,IAAAsN,GAAA,UACbmU,EAASC,IAAEpU,EASpB,OAVsBlN,IAAA2kB,EAAAC,GACFjiC,IAAAgiC,EAAA,EAAA3oD,IAAA,OAAArO,MACrB,SAAKo3D,EAAOlD,EAASqC,GAEnB,MAAO,CACL70C,OAAMroB,MAAA,GACAk9D,EAAY70C,QAAU,IAAE,GAAAzT,IAAA,GAC3B4mB,KAAKxmB,IAAM+oD,SAGjBJ,EAVsB,CAASlD,GAe5BuD,GAAoB,SAAAC,GAAA,SAAAD,IAAA,IAAA9W,EAAA3rB,IAAA,KAAAyiC,GAAA,QAAAE,EAAA9qD,UAAA7T,OAAAk5C,EAAA,IAAAr3C,MAAA88D,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAA1lB,EAAA0lB,GAAA/qD,UAAA+qD,GACH,OADGjX,EAAAvO,GAAA,KAAAqlB,EAAA,GAAA1hE,OAAAm8C,IAAA7jC,IAAAgkC,IAAAsO,GAAA,UACdmT,EAASC,IAAEpT,EAepB,OAhBuBlO,IAAAglB,EAAAC,GACHtiC,IAAAqiC,EAAA,EAAAhpD,IAAA,OAAArO,MACrB,SAAKo3D,EAAOlD,EAASqC,GAEnB,MAAO,CACL70C,OAAMroB,MAAA,GACAk9D,EAAY70C,QAAU,IAAE,IAC5ByjC,QAAS94C,OAAOC,KAAK8qD,GAAOtpD,QAC1B,SAACuS,EAAMhS,GAAG,OAAAhV,MAAA,GACLgnB,GAAI,GAAApS,IAAA,GACNI,EAAM+oD,EAAM/oD,GAAKrO,UAEpB,WAIPq3D,EAhBuB,CAASvD,GAoB7B2D,GAA8B,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAA/iC,IAAA,KAAA6iC,GAAA,QAAAG,EAAAnrD,UAAA7T,OAAAk5C,EAAA,IAAAr3C,MAAAm9D,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAA/lB,EAAA+lB,GAAAprD,UAAAorD,GACb,OADaF,EAAA3lB,GAAA,KAAAylB,EAAA,GAAA9hE,OAAAm8C,IAAA7jC,IAAAgkC,IAAA0lB,GAAA,UACxBjE,EAASC,IAAEgE,EAapB,OAdiCtlB,IAAAolB,EAAAC,GACb1iC,IAAAyiC,EAAA,EAAAppD,IAAA,OAAArO,MACrB,SAAKo3D,EAAOlD,EAASqC,GAEnB,IAAMuB,EAAoBvB,EAAY70C,QAAU,GAChD,MAAO,CACLA,OAAMroB,MAAA,GACDy+D,GAAiB,IACpBhQ,UAASzuD,MAAA,GACHy+D,EAAkBhQ,WAAa,IAAE,GAAA75C,IAAA,GACpC4mB,KAAKxmB,IAAM+oD,WAInBK,EAdiC,CAAS3D,GAiBvCiE,GAAsB,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAArjC,IAAA,KAAAmjC,GAAA,QAAAG,EAAAzrD,UAAA7T,OAAAk5C,EAAA,IAAAr3C,MAAAy9D,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAArmB,EAAAqmB,GAAA1rD,UAAA0rD,GAET,OAFSF,EAAAjmB,GAAA,KAAA+lB,EAAA,GAAApiE,OAAAm8C,IAAA7jC,IAAAgkC,IAAAgmB,GAAA,UAChBvE,EAASC,IAAE1lD,IAAAgkC,IAAAgmB,GAAA,MACf,aAAWA,EAmChB,OArCyB5lB,IAAA0lB,EAAAC,GAEThjC,IAAA+iC,EAAA,EAAA1pD,IAAA,OAAArO,MAEjB,SAAK8nD,EAAWoM,EAASC,GACvB,IAAAiE,EAAiBlE,EAAQ36D,OAAO,GAAzBmoB,EAA2BrpB,KAAA+/D,EAAA,GAArB,GACPC,EAAS,CACbliE,QAAS,CACPugE,SAAU,WACV4B,eAAgB,gBAIpB,GAAI52C,EAAOvmB,QAAQk9D,EAAQ,CACzB,IAAME,EAAeF,EAAO32C,EAAOvmB,MACnC,MAAO,CACLumB,OAAMroB,MAAA,GACA86D,EAAYzyC,QAAU,IAAE,IAC5BomC,UAAWz7C,OAAOC,KAAKw7C,GAAWh6C,QAChC,SAACuS,EAAMhS,GAAG,OAAAhV,MAAA,GACLgnB,GACCk4C,EAAalqD,GAAIJ,IAAA,GACfsqD,EAAalqD,GAAOy5C,EAAUz5C,IAAIJ,IAAA,GAClCI,EAAMy5C,EAAUz5C,OAExB,OAMR,MAAO,CACLqT,OAAMroB,MAAA,GACA86D,EAAYzyC,QAAU,IAAE,IAC5BomC,mBAGLiQ,EArCyB,CAASjE,GAwC/B0E,GAAyB,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAA9jC,IAAA,KAAA4jC,GAAA,QAAAG,EAAAlsD,UAAA7T,OAAAk5C,EAAA,IAAAr3C,MAAAk+D,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAA9mB,EAAA8mB,GAAAnsD,UAAAmsD,GACR,OADQF,EAAA1mB,GAAA,KAAAwmB,EAAA,GAAA7iE,OAAAm8C,IAAA7jC,IAAAgkC,IAAAymB,GAAA,UACnBhF,EAASC,IAAE+E,EAGpB,OAJ4BrmB,IAAAmmB,EAAAC,GACRzjC,IAAAwjC,EAAA,EAAAnqD,IAAA,OAAArO,MACrB,SAAKA,GACH,MAAO,OACRw4D,EAJ4B,CAAS1E,GAkB3B+E,GAAe,CAC1Bl9D,GAAI,KACJR,KAAM,KAGNygC,OAAQ,IAAIo7B,GAAoB,CAAC3oD,IAAK,WACtC2S,MAAO,IAAIg2C,GAAoB,CAAC3oD,IAAK,UACrC1U,MAAO,IAAIq9D,GAAoB,CAAC3oD,IAAK,UACrC8gB,UAAW,IAAI6nC,GAAoB,CAAC3oD,IAAK,cACzCyqD,OAAQ,IAAI9B,GAAoB,CAAC3oD,IAAK,WAGtCy5C,UAAW,IAAIiQ,GAAuB,CAAC1pD,IAAK,cAI5C82C,QAAS,IAAIkS,GAGbpP,WAAY,IAAIqO,GAAuB,CACrC/7B,WAAY87B,GACZhoD,IAAK,eAEPs8C,WAAY,IAAIiM,GAAuB,CACrCvoD,IAAK,eAEPu8C,UAAW,IAAI0L,GAAuB,CACpC/7B,WAAY87B,GACZhoD,IAAK,cAEPw8C,UAAW,IAAI+L,GAAuB,CACpCvoD,IAAK,cAIPg8C,SAAU,IAAIoN,GAA+B,CAACppD,IAAK,aACnD0qD,iBAAkB,IAAItB,GAA+B,CACnDppD,IAAK,qBAEP2qD,gBAAiB,IAAIvB,GAA+B,CAACppD,IAAK,oBAG1D4qD,aAAc,IAAIT,IAMdU,GAAc,SAAAC,GAAA,SAAAD,IAAA,OAAAtkC,IAAA,KAAAskC,GAAAlnB,GAAA,KAAAknB,EAAAzsD,WAkBjB,OAlBiB4lC,IAAA6mB,EAAAC,GAAAnkC,IAAAkkC,EAAA,EAAA7qD,IAAA,OAAArO,MAClB,SAAKmlD,EAASx/B,GAGZ,OAAA1X,IAAA,GACG4mB,KAAKxmB,IAAMhC,OAAOC,KAAK64C,GAASr3C,QAC/B,SAACuS,EAAM+4C,GAAI,IAAAC,EAAA,OAAAhgE,MAAA,GACNgnB,GAEc,QAAbg5C,EAAAlU,EAAQiU,UAAK,IAAAC,GAAbA,EAAer5D,MAAKiO,IAAA,GAAKmrD,EAAOjU,EAAQiU,GAAMp5D,OAAS,MAE7D,OAGL,CAAAqO,IAAA,OAAArO,MAED,SAAKmlD,GACH,MAAO,CAACA,eACT+T,EAlBiB,CAASpF,GAqBvBwF,GAAiB,SAAAC,GAAA,SAAAD,IAAA,OAAA1kC,IAAA,KAAA0kC,GAAAtnB,GAAA,KAAAsnB,EAAA7sD,WAYpB,OAZoB4lC,IAAAinB,EAAAC,GAAAvkC,IAAAskC,EAAA,EAAAjrD,IAAA,OAAArO,MACrB,SAAKuqD,GACH,OAAAt8C,IAAA,GACG4mB,KAAKxmB,IAAMk8C,EAAU9xD,KAAI,SAAA+gE,GAAE,OAAAngE,MAAA,GACvBmgE,GAAE,IACLplD,MAAOolD,EAAGplD,MAAQihD,IAAKmE,EAAGplD,MAAO,CAAC,OAAQ,SAAW,aAG1D,CAAA/F,IAAA,OAAArO,MAED,SAAKuqD,GACH,MAAO,CAACA,UAAW9vD,MAAMC,QAAQ6vD,GAAaA,EAAY,CAACA,QAC5D+O,EAZoB,CAASxF,GAe1B2F,GAA8B,CAClCtjE,QAAS,SAACujE,EAAIxF,EAASC,GACrB,IAAAwF,EAAgBzF,EAAQ36D,OAAO,GAAxBsyB,EAA0BxzB,KAAAshE,EAAA,GAArB,GACNC,GAASF,EAAGtoD,eAAe,oBAE3ByoD,EACJH,EAAGxO,aAAer/B,EAAMnK,OAAOomC,UAAUgC,SAAWgQ,qBAAkBhQ,OAAO92B,aAE/E,OAAI4mC,IAAUC,GAAWhuC,EAAMnK,OAAOomC,UAAUqC,QAEvC,CACLW,iBAAkB4O,EAAGzR,WACrB8C,iBAAkB2O,EAAG/O,YAGlB,KAMLoP,GAAqB,SAAAC,GAAA,SAAAD,IAAA,OAAAnlC,IAAA,KAAAmlC,GAAA/nB,GAAA,KAAA+nB,EAAAttD,WAiCxB,OAjCwB4lC,IAAA0nB,EAAAC,GAAAhlC,IAAA+kC,EAAA,EAAA1rD,IAAA,OAAArO,MACzB,SAAKgoD,EAAgBkM,GAEnB,IAAA+F,EAAgB/F,EAAQ36D,OAAO,GAAxBsyB,EAA0BxzB,KAAA4hE,EAAA,GAArB,GACZ,OAAAhsD,IAAA,GACG4mB,KAAKxmB,IAAMhC,OAAOC,KAAK07C,GAAgBl6C,QAEtC,SAACuS,EAAMhS,GAAG,OAAAhV,MAAA,GACLgnB,GAAI,GAAApS,QAAA,GACN+5C,EAAe35C,GAAK+F,MAAQyX,EAAMnK,OAAOsmC,EAAe35C,GAAK+F,OAC1DihD,IAAKxpC,EAAMnK,OAAOsmC,EAAe35C,GAAK+F,OAAQ,CAAC,OAAQ,SACvD,MACH4zC,EAAe35C,GAAKsV,MAAQkI,EAAMnK,OAAOsmC,EAAe35C,GAAKsV,WAEhE,OAGL,CAAAtV,IAAA,OAAArO,MACD,SAAK05D,EAAIxF,EAASC,GAEhB,IAAA+F,EAAgBhG,EAAQ36D,OAAO,GAAxBsyB,EAA0BxzB,KAAA6hE,EAAA,GAArB,GACNC,EAAWV,GAA4B5tC,EAAM1wB,MAC/Cs+D,GAA4B5tC,EAAM1wB,MAAMu+D,EAAIxF,EAASC,GACrD,GAEJ,OAAA96D,MAAA,GACK86D,GAAW,IACdzyC,OAAMroB,SAAA,GACA86D,EAAYzyC,QAAU,IACvBg4C,GACAS,SAGRJ,EAjCwB,CAASjG,GAmC9BsG,GAA0B,CAC9BnvC,MAAO,SAAC68B,EAAWoM,EAASqC,GAC1B,IAAM4D,EAAyB,GAC/BE,EAAgBnG,EAAQ36D,OAAO,GAAI,GAA5BsyB,EAA8BxzB,KAAAgiE,EAAA,GAAzB,GAeZ,OAbGvS,EAAU12C,eAAe,YAAc02C,EAAU8B,cAAgB9B,EAAU+B,mBAG5EsQ,EAASvQ,YAAc/9B,EAAMnK,OAAO/nB,MACpCwgE,EAAStQ,iBAAmBh6B,KAAUi4B,EAAU9uD,YAC5C8uD,EAAUwS,UAIZH,EAAS/P,QAAS,IAIf+P,GAEThkE,QAAS,SAAC2xD,EAAWoM,EAASqC,GAE5B,IAAM4D,EAAyB,GAC/BI,EAAgBrG,EAAQ36D,OAAO,GAAI,GAA5BsyB,EAA8BxzB,KAAAkiE,EAAA,GAAzB,GACNX,EACJ/tC,EAAMm8B,iBACLn8B,EAAMm8B,eAAe52C,eAAe,sBACpC02C,EAAU8B,cACV9B,EAAU+B,iBAEPgQ,EACHhuC,EAAMm8B,gBAAkBn8B,EAAMm8B,eAAekD,aAC7CpD,GAAaA,EAAUgC,SAAWgQ,qBAAkBhQ,OAAO92B,aAa9D,OAXI4mC,IAEFO,EAASvQ,YAAc/9B,EAAMnK,OAAO/nB,MACpCwgE,EAAStQ,iBAAmBh6B,KAAUi4B,EAAU9uD,YAC5C6gE,IAEFM,EAAS/P,QAAS,EAClB+P,EAAShQ,SAAU,IAIhBgQ,IAILK,GAAiB,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAA9lC,IAAA,KAAA4lC,GAAA,QAAAG,EAAAluD,UAAA7T,OAAAk5C,EAAA,IAAAr3C,MAAAkgE,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAA9oB,EAAA8oB,GAAAnuD,UAAAmuD,GACJ,OADIF,EAAA1oB,GAAA,KAAAwoB,EAAA,GAAA7kE,OAAAm8C,IAAA7jC,IAAAgkC,IAAAyoB,GAAA,MACf,aAAWA,EAchB,OAfoBroB,IAAAmoB,EAAAC,GACJzlC,IAAAwlC,EAAA,EAAAnsD,IAAA,OAAArO,MAEjB,SAAK8nD,EAAWoM,EAASqC,GACvB,IAAAsE,EAAgB3G,EAAQ36D,OAAO,GAAI,GAA5BsyB,EAA8BxzB,KAAAwiE,EAAA,GAAzB,GACNV,EAAWC,GAAwBvuC,EAAM1wB,MAC3Ci/D,GAAwBvuC,EAAM1wB,MAAM2sD,EAAWoM,EAASqC,GACxD,GAEJ,MAAO,CACLzO,UAASzuD,MAAA,GACJyuD,GACAqS,QAGRK,EAfoB,CAAS1G,GAkBnBgH,GAAe,CAC1Bn/D,GAAI,KACJR,KAAM,KACNumB,OAAQ,IAAIoyC,EAAO,CACjB1yC,QAASsyC,EAASE,GAClBvlD,IAAK,SACLksB,WAAY,CACVqB,OAAQ,KACR5a,MAAO,KACPrnB,MAAO,KACPohE,eAAgB,KAChB5V,QAAS,IAAI+T,GAAe,CAC1B93C,QAASsyC,EAASE,GAClBvlD,IAAK,YAEP8gB,UAAW,KACX24B,UAAW,IAAI0S,GAAkB,CAC/Bp5C,QAASsyC,EAASE,KAEpBkF,OAAQ,KACRvO,UAAW,IAAI+O,GAAkB,CAC/Bl4C,QAASsyC,EAASE,GAClBvlD,IAAK,iBAIX25C,eAAgB,IAAI+R,GAAsB,CACxC34C,QAASsyC,EAASE,GAClBvlD,IAAK,oBAII2sD,GAAa,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAtmC,IAAA,KAAAomC,GAAA,QAAAG,EAAA1uD,UAAA7T,OAAAk5C,EAAA,IAAAr3C,MAAA0gE,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAAtpB,EAAAspB,GAAA3uD,UAAA2uD,GACV,OADUF,EAAAlpB,GAAA,KAAAgpB,EAAA,GAAArlE,OAAAm8C,IAAA7jC,IAAAgkC,IAAAipB,GAAA,MAClB,UAAQA,EA2Bb,OA5BuB7oB,IAAA2oB,EAAAC,GACVjmC,IAAAgmC,EAAA,EAAA3sD,IAAA,OAAArO,MAEd,SAAKysB,EAAiBynC,GAA6C,IAAAmH,EAAA,KACjEC,EAAmBpH,EAAQ36D,OAAO,GAA3BssB,EAA6BxtB,KAAAijE,EAAA,GAArB,GAEf,OAAArtD,IAAA,GACG4mB,KAAKxmB,IAAkBwX,EAAS01C,WAAWztD,QAAO,SAACspD,EAAOv7B,GAEzD,IAAMhQ,EAAQqE,mBAAS2L,EAAT3L,CAAkBzD,GAIhC,OAHIZ,WAAO2vC,iBACTpE,EAAMp2D,KAAKq6D,EAAK5G,4BAA4B5oC,GAAOY,QAE9C2qC,IACN,OAEN,CAAA/oD,IAAA,OAAArO,MAED,SACEysB,GAGA,IAAAgvC,EAAA,KACA,OAAAxtD,IAAA,GACG4mB,KAAKxmB,IAAkBoe,EACpBA,EAAOh0B,KAAI,SAAAozB,GAAK,OAAI4vC,EAAK/G,4BAA4B7oC,EAAOY,GAAQA,UACpE,QAEPuuC,EA5BuB,CAASlH,GA+BtB4H,GAAc,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAhnC,IAAA,KAAA8mC,GAAA,QAAAG,EAAApvD,UAAA7T,OAAAk5C,EAAA,IAAAr3C,MAAAohE,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAAhqB,EAAAgqB,GAAArvD,UAAAqvD,GACV,OADUF,EAAA5pB,GAAA,KAAA0pB,EAAA,GAAA/lE,OAAAm8C,IAAA7jC,IAAAgkC,IAAA2pB,GAAA,MACnB,WAASA,EA2Bd,OA5BwBvpB,IAAAqpB,EAAAC,GACV3mC,IAAA0mC,EAAA,EAAArtD,IAAA,OAAArO,MACf,SAAKmxB,GAA6C,IAAA4qC,EAAA,KAChD,MAAO,CACL5qC,QAASA,EACN9pB,OAAOo8B,uBACPhrC,KAAI,SAAA4O,GAAM,OAAI00D,EAAKtH,4BAA4BptD,GAAQ8pB,cAE7D,CAAA9iB,IAAA,OAAArO,MACD,SACEmxB,GACuC,IAAA6qC,EAAA,KACvC,MAAO,CACL7qC,QAASA,aAAO,EAAPA,EACL14B,KAAI,SAAA4O,GAAM,OAAI20D,EAAKtH,4BAA4BrtD,GAAQ8pB,WAExD14B,KAAI,SAAA4O,GACH,IAAOkqB,EAAkClqB,EAAlCkqB,SAAUzM,EAAwBzd,EAAxByd,KAQjB,OANezrB,MAAA,GAFsB2C,IAAIqL,EAAMpL,KAG/B,IAEd6oB,KAAMA,IAAcyM,EAAWD,qBAAkBC,SAAWD,qBAAkBmL,gBAMvFi/B,EA5BwB,CAAS5H,GA+B9BmI,GAAqB,CAAC,UAAW,SAEjCC,GAAmB,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAxnC,IAAA,KAAAsnC,GAAA,QAAAG,EAAA5vD,UAAA7T,OAAAk5C,EAAA,IAAAr3C,MAAA4hE,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAAxqB,EAAAwqB,GAAA7vD,UAAA6vD,GACE,OADFF,EAAApqB,GAAA,KAAAkqB,EAAA,GAAAvmE,OAAAm8C,IAAA7jC,IAAAgkC,IAAAmqB,GAAA,MACjB,qBAAmBA,EAmCxB,OApCsB/pB,IAAA6pB,EAAAC,GACEnnC,IAAAknC,EAAA,EAAA7tD,IAAA,OAAArO,MAEzB,SAAKorD,GACH,OAAO3wD,MAAMC,QAAQm6B,KAAK0F,YAAWtsB,IAAA,GAE9B4mB,KAAKxmB,IAAMwmB,KAAK0F,WAAWzsB,QAC1B,SAACuS,EAAMhS,GAAG,OAAAhV,MAAA,GACLgnB,GACC+qC,EAAkB/8C,GAAKkuB,QAAOtuB,IAAA,GAAKI,EAAM+8C,EAAkB/8C,GAAKqT,QAAU,MAEhF,KAGJ,KACL,CAAArT,IAAA,OAAArO,MAED,SAAKorD,GAGH,OAAO3wD,MAAMC,QAAQm6B,KAAK0F,YAAWtsB,IAAA,GAE9B4mB,KAAKxmB,IAAMwmB,KAAK0F,WAAWzsB,QAC1B,SAACuS,EAAMhS,GAAG,OAAAhV,MAAA,GACLgnB,GAAIpS,IAAA,GAEJI,EAAGhV,MAAA,GACE+xD,EAAkB/8C,IAAQ,IAAE,IAChCkuB,QAAS/hC,QAAQ4wD,EAAkB/8C,UAIzC,KAGJ,OACL6tD,EApCsB,CAASpI,GAuC5ByI,GAAqB,GAAH5mE,OAAOsmE,GAAoB,YAAY,eAElDO,GAAmB,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAA9nC,IAAA,KAAA4nC,GAAA,QAAAG,EAAAlwD,UAAA7T,OAAAk5C,EAAA,IAAAr3C,MAAAkiE,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAA9qB,EAAA8qB,GAAAnwD,UAAAmwD,GACL,OADKF,EAAA1qB,GAAA,KAAAwqB,EAAA,GAAA7mE,OAAAm8C,IAAA7jC,IAAAgkC,IAAAyqB,GAAA,MACxB,qBAAmBA,EAqDxB,OAtD6BrqB,IAAAmqB,EAAAC,GACLznC,IAAAwnC,EAAA,EAAAnuD,IAAA,OAAArO,MAEzB,SACEorD,GAOA,OAAO3wD,MAAMC,QAAQm6B,KAAK0F,YAAWtsB,IAAA,GAE9B4mB,KAAKxmB,IAAMwmB,KAAK0F,WAAWzsB,QAC1B,SAACuS,EAAMhS,GAAG,OAAAhV,MAAA,GACLgnB,GAAI,GAAApS,IAAA,GACNI,EAAGhV,MAAA,GACC+xD,EAAkB/8C,GAAKqT,QAAM,IAChC6a,QAAS6uB,EAAkB/8C,GAAKkuB,cAGpC,KAGJ,KACL,CAAAluB,IAAA,OAAArO,MACD,SACEorD,GAGA,IAAAyR,EAAA,KACMC,EAAiB1R,EAsBvB,OArBA/+C,OAAOC,KAAK8+C,GAAmB9tD,SAAQ,SAAAy/D,GACrC,GAAmB,YAAfA,EAA0B,CAC5B,IAAM1R,EAAeyR,EAAeC,GAAY1R,aAChD,IAAKv7C,6BAAmBu7C,GACtB,OAAAp9C,IAAA,GAAS4uD,EAAKxuD,IAAMyuD,GAEtBzwD,OAAOC,KAAK++C,GAAc/tD,SAAQ,SAAA+Q,GAEhCg9C,EAAah9C,GAAOg9C,EAAah9C,GAAK5V,KAAI,SAAAukE,GACxC,OAAKA,EAAU/jE,KAMR+jE,EALE,CACL/jE,KAAM+jE,EACNjsD,OAAQ,gBASpB9C,IAAA,GAAS4mB,KAAKxmB,IAA6ByuD,OAC5CN,EAtD6B,CAAS1I,GAyD5BmJ,GAAgB,CAC3BrhC,OAAQ,KACRjgC,GAAI,KACJ1C,KAAM,KACNkC,KAAM,KACN6E,MAAO,KAEPuxB,SAAU,MAGC2rC,GAAoB,SAAAC,GAAA,SAAAD,IAAA,OAAAtoC,IAAA,KAAAsoC,GAAAlrB,GAAA,KAAAkrB,EAAAzwD,WAS9B,OAT8B4lC,IAAA6qB,EAAAC,GAAAnoC,IAAAkoC,EAAA,EAAA7uD,IAAA,OAAArO,MAC/B,SAAKoU,GACH,OAAAnG,IAAA,GACG4mB,KAAKxmB,IAAM+F,EAAQygB,KAAK4/B,4BAA4BrgD,GAAOygB,KAAKxmB,KAAO,QAE3E,CAAAA,IAAA,OAAArO,MAED,SAAKoU,GACH,OAAAnG,IAAA,GAAS4mB,KAAKxmB,IAAM+F,OACrB8oD,EAT8B,CAASpJ,GAY7BsJ,GAAe,SAAAC,GAAA,SAAAD,IAAA,OAAAxoC,IAAA,KAAAwoC,GAAAprB,GAAA,KAAAorB,EAAA3wD,WA6BzB,OA7ByB4lC,IAAA+qB,EAAAC,GAAAroC,IAAAooC,EAAA,EAAA/uD,IAAA,uBAAArO,MAC1B,SAAqBqgB,EAAIi9C,GAAgB,IAAAC,EAAAllE,KAAAilE,EAAA,GAAbjvD,EAAGkvD,EAAA,GAAEv9D,EAAKu9D,EAAA,GACpC,MAAqB,kBAAVv9D,EACT3G,MAAA,GACKgnB,GAAI,GAAApS,IAAA,GACNI,EAAMrO,IAEAA,GAA0B,WAAjBuJ,IAAOvJ,IAAsBA,EAAMgsD,YACrD3yD,MAAA,GACKgnB,GAAI,GAAApS,IAAA,GACNI,EAAM7T,QAAQwF,EAAMmvB,aAGlB9O,IACR,CAAAhS,IAAA,OAAArO,MAED,SAAK+uB,GAAW,IAAAyuC,EAAA,KAGd,OAAK/iE,MAAMC,QAAQq0B,IAAeA,EAAUn2B,OAIrC,CACLm2B,UAAWA,EAAUt2B,KAAI,SAAAw2B,GAAQ,OAAA51B,MAAA,GAC5B41B,GAAQ,IACXxC,OAAQpgB,OAAOqc,QAAQuG,EAASxC,QAAU,IAAI3e,OAAO0vD,EAAKC,qBAAsB,UAN3E,CAAC1uC,UAAW,QAStBquC,EA7ByB,CAAStJ,GAsCxB4J,GAAa,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAhpC,IAAA,KAAA8oC,GAAA,QAAAG,EAAApxD,UAAA7T,OAAAk5C,EAAA,IAAAr3C,MAAAojE,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAAhsB,EAAAgsB,GAAArxD,UAAAqxD,GACT,OADSF,EAAA5rB,GAAA,KAAA0rB,EAAA,GAAA/nE,OAAAm8C,IAAA7jC,IAAAgkC,IAAA2rB,GAAA,MAClB,WAASA,EAkCd,OAnCuBvrB,IAAAqrB,EAAAC,GACT3oC,IAAA0oC,EAAA,EAAArvD,IAAA,OAAArO,MAEf,SAAKmwB,EAAS+jC,GAAS,IAAA6J,EAAA,KACrBC,EAAmB9J,EAAQ36D,OAAO,GAA3BssB,EAA6BxtB,KAAA2lE,EAAA,GAArB,GAEf,OAAA/vD,IAAA,GACG4mB,KAAKxmB,IAAMwX,EAASkK,YAAYjiB,QAAO,SAACspD,EAAOpnC,GAK9C,IAAMC,EAASC,mBAASF,EAATE,CAAmBC,GAIlC,OAHIF,WAAQurC,iBACVpE,EAAMp2D,KAAK+8D,EAAKtJ,4BAA4BxkC,GAAQE,SAE/CinC,IACN,OAEN,CAAA/oD,IAAA,OAAArO,MAED,SAAKmwB,GAAS,IAAA8tC,EAAA,KACZ,OAAAhwD,IAAA,GACG4mB,KAAKxmB,IAAM8hB,EAAQ13B,KAAI,SAAAw3B,GAEtB,IAAMiuC,EAAYjuC,EAAOvO,OAAMroB,MAAA,CAEzBsC,GAAIs0B,EAAOt0B,IACRs0B,EAAOvO,QAAM,IAChB8O,WAAUn3B,GAAA,GAAO42B,EAAOvO,OAAO88B,QAAU,MAE3CvuB,EACJ,OAAOguC,EAAKvJ,4BAA4BwJ,EAAW/tC,GAASA,gBAGjEutC,EAnCuB,CAAS5J,GAsCtBqK,GAAa9kE,MAAA,GACrB4jE,IAAa,IAChBrgC,SAAU,KACV7lB,gBAAiB,KACjBgmB,MAAO,IAAImgC,GAAqB,CAC9B97C,QAASsyC,EAASE,GAClBvlD,IAAK,QACLksB,WAAY,CACVthC,KAAM,KACNkC,KAAM,QAIV2pB,KAAM,KAGN+W,QAAS,KACTzlB,MAAO,KAEPmmB,QAAS,OAGEs4B,GAAe,CAC1B1jC,QAAS,IAAIuqC,GAAe,CAC1Bt6C,QAASsyC,EAASC,GAClBp5B,WAAY0iC,KAEdxwC,OAAQ,IAAIuuC,GAAc,CACxB55C,QAASsyC,EAASC,GAClBp5B,WAAYs+B,KAEdzN,kBAAmB,IAAI8Q,GAAoB,CACzC96C,QAASsyC,EAASC,GAClBp5B,WAAY0hC,KAEdj1C,cAAe,KACfo3C,gBAAiB,MAGNtJ,GAAe,CAC1B3jC,QAAS,IAAIuqC,GAAe,CAC1Bt6C,QAASsyC,EAASE,GAClBr5B,WAAY4jC,KAEd1xC,OAAQ,IAAIuuC,GAAc,CACxB55C,QAASsyC,EAASE,GAClBr5B,WAAYugC,KAEd3qC,QAAS,IAAIutC,GAAc,CACzBt8C,QAASsyC,EAASE,GAClBr5B,WA9FyB,CAC3B5+B,GAAI,KACJR,KAAM,KACNi1B,UAAW,KACXI,WAAY,QA4FZ46B,kBAAmB,IAAIoR,GAAoB,CACzCp7C,QAASsyC,EAASE,GAClBr5B,WAAYgiC,KAEdv1C,cAAe,KACfo3C,gBAAiB,KACjBrvC,UAAW,IAAIquC,GAAgB,CAC7B/uD,IAAK,YACL+S,QAASsyC,EAASE,KAEpBp9C,gBAAiB,IAAIs9C,EAAO,CAC1B1yC,QAASsyC,EAASE,GAClBr5B,WAAY,CACV9jB,YAAa,KACbL,MAAO,MAET/H,IAAK,oBAEPgwD,OAAQ,IAAIvK,EAAO,CACjB1yC,QAASsyC,EAASE,GAClBr5B,WAAY,CACVwuB,SAAU,KACVhb,QAAS,MAEX1/B,IAAK,YAIIiwD,GAAgB,SAAAC,GAAA,SAAAD,IAAA,OAAA1pC,IAAA,KAAA0pC,GAAAtsB,GAAA,KAAAssB,EAAA7xD,WAa1B,OAb0B4lC,IAAAisB,EAAAC,GAAAvpC,IAAAspC,EAAA,EAAAjwD,IAAA,OAAArO,MAC3B,SAAKoE,GAAmF,IAAnE8vD,EAAcznD,UAAA7T,OAAA,QAAA+R,IAAA8B,UAAA,GAAAA,UAAA,GAAG,GAAI0nD,EAAiB1nD,UAAA7T,OAAA,EAAA6T,UAAA,QAAA9B,EAEzD,OAAOkqB,KAAK4/B,4BAA4BrwD,EAAM8vD,EAASC,KACxD,CAAA9lD,IAAA,OAAArO,MAED,SACEoE,GAKA,OAAOywB,KAAK6/B,4BAA4BtwD,OACzCk6D,EAb0B,CAASxK,GAgBzB0K,GAAmB,IAAI1K,EAAO,CACzC1yC,QAASsyC,EAASC,GAClBp5B,WAAYs6B,GACZxmD,IAAK,aAGMowD,GAAmB,IAAIH,GAAiB,CACnDl9C,QAASsyC,EAASE,GAClBr5B,WAAYu6B,GACZzmD,IAAK,aAGMqwD,GAGZzwD,QAAA,GAEEylD,EAASC,GAAK,CACb3tC,KAAM,SAAA24C,GAAM,OAAIH,GAAiBx4C,KAAK24C,IACtC50B,KAAM,SAAA60B,GAAM,IAAAC,EAAA,OAAIJ,GAAiB10B,KAAkC,QAA9B80B,EAACL,GAAiBz0B,KAAK60B,UAAO,IAAAC,OAAA,EAA7BA,EAA+Bh5C,aAEtE6tC,EAASE,GAAK6K,I,qkBC/1BV,IAAMK,GAET,CACFj5C,SAAU64C,GACVlxC,SAAU4oC,EACVlqC,SAAU2pC,GAmNGkJ,GAFe,IA9MH,WAQzB,SAAAC,IAUQ,IAAA7mE,EAAAsU,UAAA7T,OAAA,QAAA+R,IAAA8B,UAAA,GAAAA,UAAA,GAAJ,GAAEwyD,EAAA9mE,EATJo0C,gBAAQ,IAAA0yB,EAAGH,GAAaG,EAAAC,EAAA/mE,EACxBspB,gBAAQ,IAAAy9C,EAAG5J,EAAa4J,EAAAC,EAAAhnE,EACxBinE,qBAAa,IAAAD,EAAGzL,EAAQyL,EAAApL,EAAA57D,EACxBipB,eAAO,IAAA2yC,EAAGF,EAAeE,EAAAn/B,IAAA,KAAAoqC,GAAA/wD,IAAA,8BAAAA,IAAA,wBAAAA,IAAA,+BAAAA,IAAA,8BAAAA,IAAA,iCAAAA,IAAA,6BAOzB4mB,KAAKwqC,eAAiBD,EACtBvqC,KAAKyqC,SAAWl+C,EAChByT,KAAK0qC,gBAAkBhzB,EACvB1X,KAAK2qC,eAAiB/9C,EAEtBoT,KAAK4qC,kBAAoB,KACzB5qC,KAAK6qC,cAAgB,KAkLtB,OA/KD1qC,IAAAgqC,EAAA,EAAA3wD,IAAA,OAAArO,MA0BA,SAAK2lB,GACH,MAAO,CACLlE,SAAUoT,KAAK8qC,iBAAiBh6C,GAChCjE,OAAQmT,KAAK/O,gBAAgBH,GAC7BtqB,KAAIhC,GAAA,CACFgyC,IAAK,YACLu0B,YAAY,IAAIhqE,MAAO+C,YACpBk8B,KAAKgrC,WAAWl6C,OAGxB,CAAAtX,IAAA,aAAArO,MAED,SAAW2lB,GACT,OAAOA,EAAME,SAAS+I,UAExB,CAAAvgB,IAAA,OAAArO,MAKA,SACE8/D,EACAC,GAIA,OADAtU,QAAQ7pD,IAAI6K,WAEW,IAArBA,UAAU7T,QACV4a,wBAAc/G,UAAU,MACvBhS,MAAMC,QAAQ+R,UAAU,GAAGgV,WAAajO,wBAAc/G,UAAU,GAAGiV,SAE7DmT,KAAKkV,KAAKt9B,UAAU,GAAGgV,SAAUhV,UAAU,GAAGiV,QAEvDroB,MAAA,GACMoB,MAAMC,QAAQolE,GAAiB,CAACr+C,SAAUoT,KAAKmrC,eAAeF,IAAkB,IAChFC,EAAc,CAACr+C,OAAQmT,KAAKgX,iBAAiBk0B,IAAgB,MAIrE,CAAA1xD,IAAA,mBAAArO,MAKA,SAAiB2lB,GAA8B,IAAAwT,EAAA,KAE7C,IADiCtE,KAAKorC,eAAet6C,GAGnD,OAAOkP,KAAK6qC,cAGd,IAAO75C,EAAYF,EAAZE,SAEDpE,EAAWpV,OAAOqD,OAAOmW,EAASpE,UAAsBhpB,KAAI,SAAAynE,GAAE,MAAK,CACvE9+C,QAAS+X,EAAKmmC,SACdv3D,KAAMoxB,EAAKqmC,eAAermC,EAAKmmC,UAAUt5C,KAAKk6C,OAOhD,OAHArrC,KAAK4qC,kBAAoB55C,EAASpE,SAClCoT,KAAK6qC,cAAgBj+C,EAEdA,IAGT,CAAApT,IAAA,kBAAArO,MAKA,SAAgB2lB,GAA2B,IAAA80B,EAAA,KACnC/4B,EAASrV,OAAOC,KAAKuoB,KAAK0qC,iBAAiBzxD,QAC/C,SAACuS,EAAMhS,GAAG,OAAAhV,MAAA,GACLgnB,GACCsF,EAAMtX,GAAOosC,EAAK8kB,gBAAgBlxD,GAAKosC,EAAK6kB,UAAUt5C,KAAKL,EAAMtX,IAAQ,MAE/E,IAGF,MAAO,CACL+S,QAASyT,KAAKyqC,SAEd59C,YAIJ,CAAArT,IAAA,iBAAArO,MAKA,SAAeyhB,GAAuC,IAAA89B,EAAA,KACpD,OAAO99B,EAAS3T,QAAO,SAACuS,EAAM6/C,GAC5B,IAAMC,EAAe5gB,EAAK6gB,gBAAgBF,EAAG9+C,SAC7C,OAAK++C,GAGL9/C,EAAKrf,KAAKu+C,EAAKigB,eAAeW,GAAcp2B,KAAKm2B,EAAGn4D,OAC7CsY,GAHEA,IAIR,MAGL,CAAAhS,IAAA,mBAAArO,MAGA,SAAA5H,GAAqE,IAAAmoD,EAAA,KAAnDn/B,EAAOhpB,EAAPgpB,QAASM,EAAMtpB,EAANspB,OACnBy+C,EAAetrC,KAAKurC,gBAAgBh/C,GAC1C,OAAK++C,EAIE9zD,OAAOC,KAAKoV,GAAQ5T,QACzB,SAACuS,EAAMhS,GAAG,OAAAhV,MAAA,GACLgnB,GACChS,KAAOkyC,EAAKgf,gBACZhf,EAAKgf,gBAAgBlxD,GAAK8xD,GAAcp2B,KAAKroB,EAAOrT,IACpD,MAEN,IAVO,OAcX,CAAAA,IAAA,kBAAArO,MAKA,SAAgBohB,GACd,OAAKA,EAKAyT,KAAKwqC,eAAej+C,GAKlBA,GAJLzf,UAAQvF,MAAM,GAADzG,OAAIyrB,EAAO,4BACjB,OANPzf,UAAQvF,MAAM,6DACP,QAWX,CAAAiS,IAAA,iBAAArO,MAKA,SAAe2lB,GACb,OAAO,MAERq5C,EA3MwB,K,m+jBCtDpB,I,MAAMlS,EAAa,eACbuT,EAAiB,eACjBC,EAAiB,eAEjBC,EAAY,+BACZC,EAAY,aACZC,EAAe,MACfC,GAAc,UACdC,GAAgB,UAGhBC,GAAa,2DACbC,GAAa,IACbC,GAAW,UACXC,GAAa,QACbnU,GAAa,UACboU,GAAkB,UAClBxxB,GAAe,UAEf8E,GAAY,UACZhF,GAAc,UACd2xB,GAAqB3xB,GACrB0B,GAAe,UAEf0D,GAAe,UACfzB,GAAiB,UACjBiuB,GAAqB,UACrBC,GAAyB,UACzBC,GAAgB,OAEhB/sB,GAAiB,UACjBI,GAAc,UACd4sB,GAAgB,UAGhBC,GAAc,UACdC,GAAgB,UAChBC,GAAmB,UACnBC,GAAa,UACbC,GAAYJ,GAGZK,GAAgBf,GAChBgB,GAAgB,UAChBC,GAAmB,UACnBC,GAAkB,UAClBC,GAAqB,UACrBC,GAAqB,UACrBC,GAAmB,MACnBC,GAA4B,OAC5BC,GAA0B,OAC1BC,GAA0B,OAC1BC,GAAmB,IAEnBC,GAAkB,UAClBC,GAAqB,UACrBC,GAAoB,UACpBC,GAAuB,UACvBC,GAAuB,UACvBC,GAAqB,IAErBC,GAAY,UACZC,GAAiB,UACjBC,GAAe,UACfC,GAAc,UACdC,GAAiB,UAEjBC,GAAa,cACbC,GAAgBD,GAChBE,GAAe,UACfC,GAAkB,UAClBC,GAAqBJ,GACrBK,GAAgB,IAEhBC,GAAiB9B,GACjB+B,GAAoB,UACpBC,GAAsB,UACtBC,GAAoB,IACpBC,GAAmB,UACnBC,GAAsB,UAEtBC,GAAiB,UACjBC,GAAoB,UACpBC,GAAsB,UACtBC,GAAoB,IACpBC,GAAyB,IACzBC,GAAmBxvB,GACnByvB,GAAsBjD,GAEtBkD,GAAkB,cAClBC,GAAqB,cACrBC,GAAoB,UACpBC,GAAuB,UACvBC,GAAuB,UACvBC,GAAqB,IACrBC,GAA0B,UAC1BC,GAA6B,UAE7BC,GAAwBp1B,GACxBq1B,GAA6BxD,GAE7BpwB,GAAiB,OACjB6zB,GAAsB,OACtBC,GAAqB,OACrBh0B,GAAe,WACfi0B,GAAoB,UACpBC,GAAmB,UACnB/zB,GAAgB,OAChBg0B,GAAqB,OACrBC,GAAkB,IAClBC,GAAW,UACXC,GAAgB,UAChBC,GAAiB,UACjBC,GAAmB,UAEnBC,GAAmB,UACnBC,GAAwB,UACxBC,GAA0BhxB,GAC1BixB,GAAyB,UACzBC,GAA2Bt2B,GAE3Bu2B,GAAa,UACbC,GAAoB,MACpBC,GAAwB,UACxBC,GAA0B/yB,GAC1BgzB,GAA6B,IAC7BC,GAAiB,OACjBC,GAAuB,OACvBC,GAAyB,OACzBC,GAAoB,UACpBC,GAAyB,UACzBC,GAA0B,UAC1BC,GAAsB,UACtBC,GAA4B,UAC5BC,GAAkC,UAClCC,GAAuB,GAGvBC,GAAcf,GACdgB,GAAgB71B,GAEhB81B,GAA0B,UAC1BC,GAAiB,OACjBC,GAAmB,MACnBC,GAAuB,MAEvBC,GAAyB,UACzBC,GAA2BN,GAC3BO,GAAmBhC,GACnBiC,GAAwBhC,GACxBiC,GAAqB,UACrBC,GAA0B,UAC1BC,GAAoB,UACpBC,GAAsB,UACtBC,GAAqB,MACrBC,GAAe,EACfC,GAAgBlzB,GAChBmzB,GAA0B,UAC1BC,GAA4B,UAC5BC,GAAqB,gCACrBC,GAAkB,UAClBC,GAAsB,UACtBC,GAAuBzzB,GACvB0zB,GAAyB,cACzBC,GAA2B,MAC3BC,GAAoB,UACpBC,GAAwB,UACxBC,GAA0B,UAC1BC,GAAyB,GACzBC,GAAmB,IACnBC,GAAuB,EACvBC,GAAyB,2BAGzBC,GAAc,GACdC,GAAe,GACfC,GAAoB,GAEpBC,GAAiB,UACjBC,GAAuB1H,GACvB2H,GAA0B,MAC1BC,GAAe,UACfC,GAAqB,UACrBC,GAAqB,+BACrBC,GAAwB,IACxBC,GAAiB,GACjBC,GAAkB,GAElBC,GAA0B,UAC1BC,GAAwB,UAGxBC,GAAgB,GAChBC,GAAiB,GACjBC,GAAiB,GACjBC,GAAsBrC,GACtBsC,GAAuB,MACvBC,GAAwBtC,GACxBuC,GAAiB,QACjBC,GAAwBrI,GAGxBsI,GAAc,EACdC,GAAoB,IACpBC,GAAmB,cACnBC,GAAoB,EACpBC,GAAsBnB,GAGtBoB,GAAoB,UACpBC,GAAwB,cACxBC,GAA+B,GAC/BC,GAA8B,GAE9BC,GAAwB,GACxBC,GAAkB,EAClBC,GAAuB,cACvBC,GAAc,UACdC,GAA0B,GAC1BC,GAA2B,GAC3BC,GAAqB3I,GACrB4I,GAAuB,UACvBC,GAA0B5I,GAC1B6I,GAAyB,OACzBC,GAA2B,UAC3Bl3B,GAAkB,UAClBm3B,GAAyB,UACzBC,GAAuB,UACvBC,GAA0B,MAC1BC,GAAc,UACdC,GAAgB,UAChBC,GAAkB,UAClBC,GAAwB,UACxBC,GAAuBp3B,GACvBq3B,GAAoB,GACpBC,GAAyB,GACzB33B,GAAiB,gCACjB43B,GAAoB,MACpBn7B,GAAoB,UACpBo7B,GAAyB,GACzBC,GAA2B,EAE3BC,GAAmB,UACnBC,GAAc,aAAHz2E,OAAgB+qE,IAC3B2L,GAAgB,aAAH12E,OAAgBgrE,IAE7B2L,GAA0B,UAC1BC,GAAgC,UAChCC,GAAY,UACZC,GAAc,UACdC,GAAej4B,GACfk4B,GAAiB,UACjBC,GAAmBrM,EACnBsM,GAAkB,OAElBC,GAAqB,GACrBC,GAAmB,GACnBC,GAAsB,GAEtBC,GAA8B,UAC9BC,GAAoC,UAGpCC,GAAyB,MACzBC,GAAyB,GACzBC,GAAyB,GAGzBC,GAAoB,GACpBC,GAAoB,EACpBC,GAAiB,GACjBC,GAAqB,GACrBC,GAAyB,GACzBC,GAA2B,GAC3Bl3B,GAA4B,GAC5Bm3B,GAA0B,GAC1BC,GAAkB,UAElBC,GAAkB,UAClBC,GAAqB,OACrBC,GAA4B,OAC5BC,GAAiB,UACjBC,GAAwB,UACxBC,GAAe,SACfC,GAAsB,OACtBC,GAA8B,OAE9BC,GAAgB,KAChBC,GAAkB,qBAClBC,GAAgB,MAChBC,GAAe,MACfC,GAAc,MACdC,GAAe,MACfC,GAA0B,UAG1BC,GAAiB,UACjBC,GAAmBr6B,GAGnBs6B,GAAiB,UACjBC,GAAe,UACfC,GAAsB,UACtBC,GAAkB,MAClBC,GAAkB,EAClBC,GAAqB,GACrBC,GAAoB,GACpBC,GAAoB,UACpBC,GAAwBD,GACxBE,GAA4BF,GAC5BG,GAAqB,IAErBC,GAAyB,UACzBC,GAA2B,GAC3BC,GAAqB,+BACrBC,GAAoB,GACpBC,GAAmB,GACnBC,GAAsB,OACtBC,GAAqB,UACrBC,IAAyB,GACzBC,GAAkB,GAClBC,GAAqB,GAGrBC,GAAgB,IAChBC,GAAc,GACdC,GAAgB,GAChBC,GAAsB,GAGtBC,GAAgB,GAGhBC,GAAgB,UAChBC,GAAuBpP,GACvBqP,GAAwB5B,GACxB6B,GAAe,OACfC,GAAgBv8B,GAChBw8B,GAAoB,OACpBC,GAAkB,CAAC/lD,IAAK,GAAIgmD,OAAQ,EAAGn0D,KAAM,EAAGC,MAAO,GACvDm0D,GAAuB,CAACjmD,IAAK,GAAIgmD,OAAQ,EAAGn0D,KAAM,EAAGC,MAAO,GAC5Do0D,GAAa,GACbC,GAAsB,GACtBC,GAAkB,IAClBC,GAAsB,IACtBC,GAA2B,IAC3BC,GAA+B,IAG/BC,GAAqB,CAChCn2E,KAAM,UACNe,MAAO,UACPE,QAAS,UACTm1E,QAAS,WAGEC,GAAyB,IACzBC,GAA6BD,GAAyB,GACtDE,GAA8B,GAmCrCC,GAAmBjQ,GAGZkQ,GAAmB,IACnBC,GAAoB,GAGpBC,GAAwB,EACxBC,GAAmB,GACnBC,GAAkB,GAElBC,GAAe,CAC1BC,SAAU,OACVC,SAAU,SACVC,aAAc,WACdC,WAAY,SACZC,SAAU,UAICC,GAAkC,MAClCC,GAA8B,QAC9BC,GAA+B,OAC/BC,GAAwB,cAGxBC,GAAmC,IACnCC,GAAqC,OAGrCC,GAAgC,MAIhCC,GAA0B,IAC1BC,GAA+B,GAC/BC,GAA0B,OAC1BC,GAA2B,eAE3BC,GAAc,CACzBC,KAAM,IACNC,KAAM,KAIKC,GAA2B,gBAC3BC,GAA4B,aAC5BC,GAAmB,IACnBC,GAAoB,IACpBC,GAAyB,GACzBC,GAAwB,GACxBC,GAAiClS,GAEjCmS,GAA2B,EAC3BC,GAAsB,GAEtBC,GAA6B,UAC7BC,GAAsB,UACtBC,GAA4B,UAC5BC,GAA4B,UAC5BC,GAA4B,UAE5BC,GAA0BjP,GAC1BkP,GAAgC,UAChCC,GAAiClP,GACjCmP,GAAkC,UAClCC,GAA6B,UAG7Bn+B,GAAsB,GACtBC,GAAwB,GAM/B7S,GAAQgxC,cAAGhnC,MAAAC,IAAA,w7BAEJ,SAAAC,GAAK,OAAIA,EAAMyB,MAAM02B,yBACf,SAAAn4B,GAAK,OAAIA,EAAMyB,MAAM42B,8BAWlB,SAAAr4B,GAAK,OAAIA,EAAMyB,MAAM+1B,YAErC,SAAAx3B,GAAK,OACLA,EAAM4G,OACF5G,EAAMyB,MAAMs2B,uBACZ/3B,EAAMxxC,MACNwxC,EAAMyB,MAAMoyB,WACZ7zB,EAAMyB,MAAM+1B,YAEL,SAAAx3B,GAAK,OAAIA,EAAMyB,MAAMs2B,0BAC3B,SAAA/3B,GAAK,OAAIA,EAAMyB,MAAMw2B,cAEjB,SAAAj4B,GAAK,MAChB,CAAC,QAAS,QAAQ/kC,SAAS+kC,EAAMoC,MAC7BpC,EAAMyB,MAAM61B,mBACZt3B,EAAMyB,MAAM6B,iBACH,SAAAtD,GAAK,OAAIA,EAAMyB,MAAM81B,mBACrB,SAAAv3B,GAAK,OAAIA,EAAMyB,MAAMuxB,cAC1B,SAAAhzB,GAAK,MACE,UAAfA,EAAMoC,KACFpC,EAAMyB,MAAMy1B,oBACG,SAAfl3B,EAAMoC,KACNpC,EAAMyB,MAAM01B,mBACZn3B,EAAMyB,MAAM4B,kBAIP,SAAArD,GAAK,MACC,UAAfA,EAAMoC,KACFpC,EAAMyB,MAAM21B,kBACG,SAAfp3B,EAAMoC,KACNpC,EAAMyB,MAAM41B,iBACZr3B,EAAMyB,MAAM0B,gBAEJ,SAAAnD,GAAK,OAAIA,EAAMyB,MAAMyd,cAIjB,SAAAlf,GAAK,OAAKA,EAAM+mC,SAAW,OAAS,SAC3C,SAAA/mC,GAAK,OAAKA,EAAM+mC,SAAW,GAAM,KAC9B,SAAA/mC,GAAK,OAAIA,EAAMyB,MAAM62B,kBAGvB,SAAAt4B,GAAK,MAAoB,WAAfA,EAAMzyC,MAAoC,SAAfyyC,EAAMzyC,KAAkB,OAAS,aAC5D,SAAAyyC,GAAK,OACvBA,EAAM4G,OAAS5G,EAAMyB,MAAMi2B,eAAiB13B,EAAMyB,MAAMg2B,iBAC1C,SAAAz3B,GAAK,OACnBA,EAAM4G,OAAS5G,EAAMyB,MAAMs2B,uBAAyB/3B,EAAMyB,MAAMo2B,yBAO9C,SAAA73B,GAAK,OAAIA,EAAMyB,MAAMi2B,kBACzB,SAAA13B,GAAK,OAAIA,EAAMyB,MAAMs2B,0BACvB,SAAA/3B,GAAK,OAAIA,EAAMyB,MAAM82B,wBAIjCyO,GAAUF,cAAG9lC,MAAAjB,IAAA,2YAEN,SAAAC,GAAK,OAAIA,EAAMyB,MAAM22B,0BAG9BtiC,IAEkB,SAAAkK,GAAK,OAAIA,EAAMyB,MAAMi4B,sBAErC,SAAA15B,GAAK,OACLA,EAAM4G,OACF5G,EAAMyB,MAAMy3B,wBACZl5B,EAAMxxC,MACNwxC,EAAMyB,MAAMoyB,WACZ7zB,EAAMyB,MAAMo4B,uBACX,SAAA75B,GAAK,OAAIA,EAAMyB,MAAMw3B,iBACf,SAAAj5B,GAAK,OAAIA,EAAMyB,MAAMu2B,4BAGd,SAAAh4B,GAAK,OAAIA,EAAMyB,MAAMk2B,oBAC/B,SAAA33B,GAAK,MAAK,CAAC,SAAU,QAAQ/kC,SAAS+kC,EAAMzyC,MAAQ,OAAS,aACvD,SAAAyyC,GAAK,OACnBA,EAAM4G,OAAS5G,EAAMyB,MAAMu2B,yBAA2Bh4B,EAAMyB,MAAMq2B,2BAOhD,SAAA93B,GAAK,OAAIA,EAAMyB,MAAMk2B,oBACzB,SAAA33B,GAAK,OAAIA,EAAMyB,MAAMu2B,4BACvB,SAAAh4B,GAAK,OAAIA,EAAMyB,MAAM+2B,0BAIjCyO,GAAiBH,cAAG5lC,MAAAnB,IAAA,2QACtB,SAAAC,GAAK,OAAIA,EAAMyB,MAAM3L,SACd,SAAAkK,GAAK,OAAIA,EAAMyB,MAAMm3B,uBACV,SAAA54B,GAAK,OAAIA,EAAMyB,MAAMg3B,qBAErC,SAAAz4B,GAAK,OAAKA,EAAMxxC,MAAQwxC,EAAMyB,MAAMoyB,WAAa7zB,EAAMyB,MAAMo3B,6BAI3C,SAAA74B,GAAK,OAAIA,EAAMyB,MAAMi3B,0BACzB,SAAA14B,GAAK,OAAIA,EAAMyB,MAAMi3B,0BAKjB,SAAA14B,GAAK,OAAIA,EAAMyB,MAAMk3B,2BACzB,SAAA34B,GAAK,OAAIA,EAAMyB,MAAMq3B,mCAInCoO,GAA2BJ,cAAGhlC,MAAA/B,IAAA,+PAe9BonC,GAAkBL,cAAGrjC,MAAA1D,IAAA,sBACvB,SAAAC,GAAK,OAAIA,EAAMyB,MAAM3L,SAAS,SAAAkK,GAAK,OAAIA,EAAMyB,MAAMylC,4BAGjDE,GAAoBN,cAAGpjC,MAAA3D,IAAA,sBACzB,SAAAC,GAAK,OAAIA,EAAMyB,MAAMulC,WAAW,SAAAhnC,GAAK,OAAIA,EAAMyB,MAAMylC,4BAGnDG,GAA2BP,cAAGljC,MAAA7D,IAAA,sBAChC,SAAAC,GAAK,OAAIA,EAAMyB,MAAMwlC,kBAAkB,SAAAjnC,GAAK,OAAIA,EAAMyB,MAAMylC,4BAG1DI,GAAcR,cAAGS,MAAAxnC,IAAA,4dACnB,SAAAC,GAAK,OAAIA,EAAMyB,MAAM3L,SAAgB,SAAAkK,GAAK,OAAIA,EAAMyB,MAAMiF,aAetC,SAAA1G,GAAK,OAAIA,EAAMyB,MAAMud,cAOrB,SAAAhf,GAAK,OAAIA,EAAMyB,MAAMs2B,0BAIvCyP,GAAcV,cAAGW,MAAA1nC,IAAA,6KACP,SAAAC,GAAK,OACjBA,EAAM0nC,QAAU1nC,EAAMyB,MAAM25B,qBAAuBp7B,EAAMyB,MAAM05B,kBAGzD,SAAAn7B,GAAK,OAAKA,EAAMyB,MAAMy5B,qBAGrB,SAAAl7B,GAAK,OAAIA,EAAMyB,MAAMu5B,eACpB,SAAAh7B,GAAK,OAAIA,EAAMyB,MAAMw5B,gBACd,SAAAj7B,GAAK,OAAIA,EAAMyB,MAAM45B,2BAGlCsM,GAAeb,cAAGc,MAAA7nC,IAAA,yNACR,SAAAC,GAAK,OAAIA,EAAMyB,MAAMyd,cAE5B,SAAAlf,GAAK,OAAKA,EAAMyB,MAAMw5B,aAAej7B,EAAMyB,MAAMk6B,iBAAmB,KACnE,SAAA37B,GAAK,OACVA,EAAM0nC,QACH1nC,EAAMyB,MAAMu5B,YAAc,GACzBh7B,EAAMyB,MAAMw5B,aAAej7B,EAAMyB,MAAMk6B,iBAAmB,GAC/D37B,EAAMyB,MAAMy5B,qBAGJ,SAAAl7B,GAAK,OAAIA,EAAMyB,MAAMk6B,mBACtB,SAAA37B,GAAK,OAAIA,EAAMyB,MAAMi6B,kBAChB,SAAA17B,GAAK,OACjBA,EAAM0nC,QAAU1nC,EAAMyB,MAAM85B,mBAAqBv7B,EAAMyB,MAAM65B,gBACjD,SAAAt7B,GAAK,OAAIA,EAAMyB,MAAM+5B,sBAClB,SAAAx7B,GAAK,OAAIA,EAAMyB,MAAMg6B,yBAGlCoM,GAAcf,cAAGgB,MAAA/nC,IAAA,qUAGN,SAAAC,GAAK,OAAIA,EAAMyB,MAAMw5B,gBAG3B,SAAAj7B,GAAK,OAAIA,EAAMyB,MAAMud,cAMd,SAAAhf,GAAK,OAAIA,EAAMyB,MAAMu5B,eAGjC,SAAAh7B,GAAK,OAAIA,EAAMyB,MAAM+lC,eAIrB,SAAAxnC,GAAK,OAAIA,EAAMyB,MAAMkmC,gBAKrBI,GAAcjB,cAAGkB,MAAAjoC,IAAA,wMAKZ,SAAAC,GAAK,OAAIA,EAAMyB,MAAMq6B,iBACpB,SAAA97B,GAAK,OAAIA,EAAMyB,MAAMs6B,kBACjB,SAAA/7B,GAAK,OACjBA,EAAM0nC,QAAU1nC,EAAMyB,MAAM46B,sBAAwBr8B,EAAMyB,MAAM26B,kBAE9D,SAAAp8B,GAAK,OACLA,EAAM0nC,QAAU1nC,EAAMyB,MAAM46B,sBAAwBr8B,EAAMyB,MAAMw6B,uBAKhEgM,GAAgBnB,cAAGoB,MAAAnoC,IAAA,kPAUZ,SAAAC,GAAK,OAAKA,EAAM0nC,QAAU,EAAI,KAIrCS,GAAgBrB,cAAGsB,MAAAroC,IAAA,qSASd,SAAAC,GAAK,OAAIA,EAAMyB,MAAMud,cACd,SAAAhf,GAAK,OAAIA,EAAMyB,MAAMy5B,qBAGjC,SAAAl7B,GAAK,OAAIA,EAAMyB,MAAMsmC,eAIrB,SAAA/nC,GAAK,OAAIA,EAAMyB,MAAMwmC,iBAIrBI,GAAavB,cAAGwB,MAAAvoC,IAAA,6HAClB,SAAAC,GAAK,OAAIA,EAAMyB,MAAMsmC,eACd,SAAA/nC,GAAK,OAA8B,EAA1BA,EAAMyB,MAAM66B,eACpB,SAAAt8B,GAAK,OAA8B,EAA1BA,EAAMyB,MAAM66B,eACd,SAAAt8B,GAAK,OAAIA,EAAMyB,MAAM86B,qBAClB,SAAAv8B,GAAK,OAAIA,EAAMyB,MAAM05B,kBACzB,SAAAn7B,GAAK,OAAIA,EAAMyB,MAAM+6B,oBAGjC+L,GAAczB,cAAG0B,MAAAzoC,IAAA,gKAGd,SAAAC,GAAK,OAAIA,EAAMyB,MAAM66B,YAAct8B,EAAMyB,MAAMg7B,qBAC9C,SAAAz8B,GAAK,OAAIA,EAAMyB,MAAM66B,YAAct8B,EAAMyB,MAAMg7B,qBAC9C,SAAAz8B,GAAK,OAAoC,EAAhCA,EAAMyB,MAAMg7B,qBACpB,SAAAz8B,GAAK,OAAoC,EAAhCA,EAAMyB,MAAMg7B,qBACd,SAAAz8B,GAAK,OAAoC,EAAhCA,EAAMyB,MAAMg7B,qBAClB,SAAAz8B,GAAK,OAAIA,EAAMyB,MAAMi7B,uBAGrC+L,GAAa3B,cAAG4B,MAAA3oC,IAAA,oMAClB,SAAAC,GAAK,OAAIA,EAAMyB,MAAM0mC,iBACP,SAAAnoC,GAAK,OAA8B,EAA1BA,EAAMyB,MAAM66B,YAAkB,KAGxC,SAAAt8B,GAAK,OAA8B,EAA1BA,EAAMyB,MAAM66B,eAC3B,SAAAt8B,GAAK,OAAIA,EAAMyB,MAAMoF,eAI1B,SAAA7G,GAAK,OAAIA,EAAMyB,MAAM4mC,cAIrB,SAAAroC,GAAK,OAAIA,EAAMyB,MAAM8mC,eAIrBI,GAAiB7B,cAAG8B,MAAA7oC,IAAA,iHACtB,SAAAC,GAAK,OAAIA,EAAMyB,MAAMgnC,cAGnB,SAAAzoC,GAAK,OAAIA,EAAMyB,MAAM4mC,cAA0B,SAAAroC,GAAK,OAAIA,EAAMyB,MAAMm6B,2BAIpE,SAAA57B,GAAK,OAAIA,EAAMyB,MAAM8mC,eACT,SAAAvoC,GAAK,OACjBA,EAAM0nC,QAAU1nC,EAAMyB,MAAM85B,mBAAqBv7B,EAAMyB,MAAMo6B,yBAI7DgN,GAAkB/B,cAAGgC,MAAA/oC,IAAA,iHACvB,SAAAC,GAAK,OAAIA,EAAMyB,MAAMomC,eAGnB,SAAA7nC,GAAK,OAAIA,EAAMyB,MAAM+lC,eAA2B,SAAAxnC,GAAK,OACzDA,EAAM0nC,QAAU1nC,EAAMyB,MAAM25B,qBAAuBp7B,EAAMyB,MAAMm6B,2BAI3D,SAAA57B,GAAK,OAAIA,EAAMyB,MAAMkmC,gBACT,SAAA3nC,GAAK,OACjBA,EAAM0nC,QAAU1nC,EAAMyB,MAAM85B,mBAAqBv7B,EAAMyB,MAAMo6B,yBAI7DkN,GAAoBjC,cAAGkC,MAAAjpC,IAAA,gYAOX,SAAAC,GAAK,OAAIA,EAAMyB,MAAM24B,mBAIrB,SAAAp6B,GAAK,OAAIA,EAAMyB,MAAM24B,mBAKrB,SAAAp6B,GAAK,OAAIA,EAAMyB,MAAMud,cACf,SAAAhf,GAAK,OAAIA,EAAMyB,MAAM24B,mBAI3B,SAAAp6B,GAAK,OAAIA,EAAMyB,MAAMoF,eAKjCoiC,GAAsBnC,cAAGoC,MAAAnpC,IAAA,8TAC3BgpC,IACc,SAAA/oC,GAAK,OAAIA,EAAMyB,MAAMg5B,qBAIrB,SAAAz6B,GAAK,OAAIA,EAAMyB,MAAMg5B,qBAKrB,SAAAz6B,GAAK,OAAIA,EAAMyB,MAAMu1B,yBACf,SAAAh3B,GAAK,OAAIA,EAAMyB,MAAMg5B,qBAI3B,SAAAz6B,GAAK,OAAIA,EAAMyB,MAAMw1B,8BAKjCkS,GAAqBrC,cAAGsC,MAAArpC,IAAA,kLACnB,SAAAC,GAAK,OAAIA,EAAMyB,MAAMu3B,eAEjB,SAAAh5B,GAAK,OAAIA,EAAMyB,MAAM03B,kBACnB,SAAAn5B,GAAK,OAAIA,EAAMyB,MAAMm5B,0BAKzB,SAAA56B,GAAK,OAAIA,EAAMyB,MAAMqF,gBAI5BuiC,GAAuBvC,cAAGwC,MAAAvpC,IAAA,+BAC5BopC,IACO,SAAAnpC,GAAK,OAAIA,EAAMyB,MAAMw3B,iBAG1BsQ,GAAmBzC,cAAG0C,MAAAzpC,IAAA,gGAOtB0pC,GAAmB3C,cAAG4C,MAAA3pC,IAAA,oJACxBwpC,IAGoB,SAAAvpC,GAAK,OAAIA,EAAMyB,MAAMw4B,2BAG9B,SAAAj6B,GAAK,OAAIA,EAAMyB,MAAMoF,eAK9B8iC,GAAqB7C,cAAG8C,MAAA7pC,IAAA,0OAC1BwpC,IACO,SAAAvpC,GAAK,OAAIA,EAAMyB,MAAMC,eAKnB,SAAA1B,GAAK,OAAIA,EAAMyB,MAAMgyB,iBACV,SAAAzzB,GAAK,OAAIA,EAAMyB,MAAMy4B,6BAG9B,SAAAl6B,GAAK,OAAIA,EAAMyB,MAAMw3B,iBAIZ,SAAAj5B,GAAK,OAAIA,EAAMyB,MAAMy4B,6BAIvC2P,GAAqB/C,cAAGgD,MAAA/pC,IAAA,kEAGnB,SAAAC,GAAK,OAAIA,EAAMyB,MAAMud,cAG1B+qB,GAAsBjD,cAAGkD,MAAAjqC,IAAA,yFAGF,SAAAC,GAAK,OAAIA,EAAMyB,MAAMud,cAG5CirB,GAAenD,cAAGoD,MAAAnqC,IAAA,6PAGR,SAAAC,GAAK,OAAIA,EAAMyB,MAAM04B,sBAI/B,SAAAn6B,GAAK,OAAIA,EAAMyB,MAAMsoC,uBAGrB,SAAA/pC,GAAK,OAAIA,EAAMyB,MAAMooC,sBAIrB,SAAA7pC,GAAK,OAAIA,EAAMyB,MAAMgoC,oBAIrB,SAAAzpC,GAAK,OAAIA,EAAMyB,MAAM0nC,sBAGvB,SAAAnpC,GAAK,OAAIA,EAAMyB,MAAMsnC,qBAGnBoB,GAAiBrD,cAAGsD,MAAArqC,IAAA,iGACtBkqC,IACE,SAAAjqC,GAAK,OAAIA,EAAMyB,MAAMkoC,sBAIrB,SAAA3pC,GAAK,OAAIA,EAAMyB,MAAM4nC,wBAGvB,SAAArpC,GAAK,OAAIA,EAAMyB,MAAMwnC,uBAEnBoB,GAAqBvD,cAAGwD,MAAAvqC,IAAA,iYAEhB,SAAAC,GAAK,OAAIA,EAAMyB,MAAM27B,4BACtB,SAAAp9B,GAAK,OAAIA,EAAMyB,MAAM07B,2BAIhB,SAAAn9B,GAAK,OAAIA,EAAMyB,MAAMy7B,eAIrB,SAAAl9B,GAAK,OAAIA,EAAMyB,MAAMy7B,eAKrB,SAAAl9B,GAAK,OAAIA,EAAMyB,MAAMk8B,wBACf,SAAA39B,GAAK,OAAIA,EAAMyB,MAAMy7B,eAGzB,SAAAl9B,GAAK,OAAIA,EAAMyB,MAAMud,cAMnCurB,GAAyBzD,cAAG0D,MAAAzqC,IAAA,6XAOhB,SAAAC,GAAK,OAAIA,EAAMyB,MAAM8E,mBAIrB,SAAAvG,GAAK,OAAIA,EAAMyB,MAAM8E,mBAKrB,SAAAvG,GAAK,OAAIA,EAAMyB,MAAMk8B,wBACf,SAAA39B,GAAK,OAAIA,EAAMyB,MAAM8E,mBAEzB,SAAAvG,GAAK,OAAIA,EAAMyB,MAAMud,cAMnCyrB,GAAY3D,cAAG4D,MAAA3qC,IAAA,0dAOH,SAAAC,GAAK,OAAIA,EAAMyB,MAAM8E,mBAIrB,SAAAvG,GAAK,OAAIA,EAAMyB,MAAM8E,mBAKrB,SAAAvG,GAAK,OAAIA,EAAMyB,MAAMud,cACf,SAAAhf,GAAK,OAAIA,EAAMyB,MAAM8E,mBAGzB,SAAAvG,GAAK,OAAIA,EAAMyB,MAAMoF,eAKrB,SAAA7G,GAAK,OAAIA,EAAMyB,MAAMoF,eAM5B8jC,GAAiB7D,cAAG8D,MAAA7qC,IAAA,qlBAUf,SAAAC,GAAK,OAAIA,EAAMyB,MAAMoF,eAGrB,SAAA7G,GAAK,OAAIA,EAAMyB,MAAMu1B,yBAKrB,SAAAh3B,GAAK,OAAIA,EAAMyB,MAAMoF,eAIrB,SAAA7G,GAAK,OAAIA,EAAMyB,MAAMw1B,8BASf,SAAAj3B,GAAK,OAAIA,EAAMyB,MAAMoF,eAIhCpF,GAAKh2C,IAAA,GACbo/E,cAAU,IAEb/0C,SACAkxC,WACAM,eACAH,mBACAC,qBACAF,4BACAG,4BAEAvU,eACAC,iBAEAkU,kBACA8B,qBACAE,uBACAgB,gBACAE,kBACAV,oBACAE,sBACAR,sBACAE,wBACAQ,sBACAE,uBACA5P,sBACAU,oBACAC,wBACAC,0BACA4P,kBACAF,aACAJ,sBACAxC,eACAgB,mBACArB,eACAG,gBACAQ,iBACAM,cACAV,eACAE,iBAGA/oB,aACAuT,iBACAC,iBAGAgB,eACAE,oBACAf,eACAF,YACAkB,cACAoG,2BACAC,6BACAE,mBACAC,uBACAE,0BACAD,wBACAE,4BACAC,qBACAC,yBACAC,2BACAC,0BAEA5b,cACApd,gBACAwxB,mBACAsL,2BACAC,iCAGAzF,2BACAM,oBACAE,sBACAD,yBACAE,2BACAI,gBACAH,qBACAE,sBACAD,uBACAb,eACAM,0BACAC,4BACAJ,kBACAC,oBACAH,iBACAI,wBACAW,iBAGAxC,YACAC,iBACAC,kBACAC,oBACAt0B,kBACA6zB,uBACAC,sBACAS,oBACAG,0BACAF,yBACAK,qBACAD,cACA90B,gBACAi0B,qBACAC,oBACA/zB,iBACAg0B,sBACAC,mBACAY,yBACAC,2BACAC,8BACAC,kBACAC,wBACAC,0BACAC,qBACAC,0BACAC,2BACAC,uBACAC,6BACAC,mCACAC,wBAGAiC,eACAC,gBACAE,kBACAC,wBACAC,2BACAC,gBACAC,sBACAC,sBACAC,yBACAC,kBACAC,mBACAT,qBAEAU,2BACAC,yBAGAC,iBACAC,kBACAC,kBACAC,uBACAC,wBACAC,yBACAC,kBACAC,yBAGAC,eACAC,qBACAC,oBACAC,qBACAC,uBACA2L,cACAE,eACAI,kBAGA5U,iBACAC,iBACAC,oBACAC,mBACAC,sBACAC,sBACAC,oBACAC,6BACAC,2BACAC,2BACAC,oBAEAC,mBACAC,sBACAG,wBACAF,qBACAC,wBACAE,sBAEAY,kBACAC,qBACAC,uBACAC,qBACAC,oBACAC,uBAEAX,cACAC,iBACAC,gBACAC,mBACAC,sBACAC,iBAEAO,kBACAC,qBACAC,uBACAC,qBACAC,0BACAC,oBACAC,uBAEAvB,aACAC,kBACAC,gBACAC,eACAC,kBAEAoB,mBACAC,sBACAC,qBACAC,wBACAC,wBACAC,sBACAC,2BACAC,8BAEAC,yBACAC,8BAGAiJ,mBACAC,sBACAC,6BACAC,kBACAC,yBACAC,gBAEAU,kBACAC,oBAEAV,uBACAC,+BACAC,iBACAC,mBACAC,iBACAC,gBACAC,eACAC,gBACAC,2BAGA9D,eACAH,yBACAM,sBACAC,wBACAC,2BACAZ,qBACAC,yBACAO,2BACAC,4BACAI,0BACAC,4BACAG,2BACAZ,mBACAC,wBAEAiI,sCACArI,gCACAC,+BAGAe,eACAC,iBACAv3B,mBACAm3B,0BACAC,wBACA16B,qBACAo7B,0BACAC,4BACA93B,kBACA43B,qBACAI,eACAD,oBACAE,iBACAV,mBACAC,yBACAC,wBACAC,qBACAC,0BACAoM,0BAEArL,sBACAC,oBACAC,uBAEAC,+BACAC,qCAGAtM,cACAC,cACAC,YACAC,cACAzsB,aACAhF,eACA2xB,sB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","file":"2.bundle.js","sourcesContent":["// SPDX-License-Identifier: MIT\r\n// Copyright contributors to the kepler.gl project\r\n\r\n/* different option share same query type e.g. events,\r\nand segments both use queryRunner */\r\nimport keyMirror from 'keymirror';\r\n\r\nexport const ASSETS_URL = 'https://d1a3f4spazzrp4.cloudfront.net/kepler.gl/';\r\nexport const DATA_URL = 'https://raw.githubusercontent.com/keplergl/kepler.gl-data/master/';\r\nexport const MAP_URI = 'demo/map?mapUrl=';\r\n/*\r\n * If you want to add more samples, feel free to edit the json file on github kepler.gl data repo\r\n */\r\nexport const MAP_CONFIG_URL = `${DATA_URL}samples.json?nocache=${new Date().getTime()}`;\r\n\r\n/**\r\n * I know this is already defined in Kepler core but it should be defined here\r\n * because it belongs to the demo app\r\n * @type {string}\r\n */\r\nexport const KEPLER_GL_WEBSITE = 'http://kepler.gl/';\r\n\r\nexport const QUERY_TYPES = keyMirror({\r\n  file: null,\r\n  sample: null\r\n});\r\n\r\nexport const QUERY_OPTIONS = keyMirror({\r\n  csv: null,\r\n  geojson: null\r\n});\r\n\r\nexport const LOADING_METHODS = keyMirror({\r\n  remote: null,\r\n  sample: null\r\n});\r\n\r\nexport const LOADING_SAMPLE_LIST_ERROR_MESSAGE = 'Not able to load sample gallery';\r\nexport const LOADING_SAMPLE_ERROR_MESSAGE = 'Not able to load sample';\r\nexport const CORS_LINK = 'https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS';\r\n\r\nexport const DEFAULT_FEATURE_FLAGS = {\r\n  cloudStorage: true\r\n};\r\n\r\nexport const CLOUD_PROVIDERS_CONFIGURATION = {\r\n  MAPBOX_TOKEN: process.env.MapboxAccessToken, // eslint-disable-line\r\n  DROPBOX_CLIENT_ID: process.env.DropboxClientId, // eslint-disable-line\r\n  EXPORT_MAPBOX_TOKEN: process.env.MapboxExportToken, // eslint-disable-line\r\n  CARTO_CLIENT_ID: process.env.CartoClientId, // eslint-disable-line\r\n  FOURSQUARE_CLIENT_ID: process.env.FoursquareClientId, // eslint-disable-line\r\n  FOURSQUARE_DOMAIN: process.env.FoursquareDomain, // eslint-disable-line\r\n  FOURSQUARE_API_URL: process.env.FoursquareAPIURL, // eslint-disable-line\r\n  FOURSQUARE_USER_MAPS_URL: process.env.FoursquareUserMapsURL // eslint-disable-line\r\n};\r\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {rgb as d3Rgb} from 'd3-color';\nimport {ColorRange} from '@kepler.gl/constants';\nimport {HexColor, RGBColor} from '@kepler.gl/types';\n\n/**\n * get r g b from hex code\n *\n * @param hex\n * @returns array of r g bs\n */\nexport function hexToRgb(hex: string): RGBColor {\n  const result = isHexColor(hex);\n\n  if (!result) {\n    return [0, 0, 0];\n  }\n\n  const r = parseInt(result[1], 16);\n  const g = parseInt(result[2], 16);\n  const b = parseInt(result[3], 16);\n\n  return [r, g, b];\n}\n\nexport function isHexColor(hex: string): RegExpExecArray | null {\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n\n  return result;\n}\n\nfunction PadNum(c) {\n  const hex = c.toString(16);\n  return hex.length === 1 ? `0${hex}` : hex;\n}\n\n/**\n * get hex from r g b\n *\n * @param rgb\n * @returns hex string\n */\nexport function rgbToHex([r, g, b]: RGBColor): HexColor {\n  return `#${[r, g, b].map(n => PadNum(n)).join('')}`.toUpperCase();\n}\n\n/**\n * Get color group name by parsing name, discard step in the name\n * e.g. Global Warming 6 -> Global Warming\n *\n * @param {Object} colorRange\n * @return {string | null}\n */\nexport function getColorGroupByName(colorRange: ColorRange): string | null {\n  if (!colorRange || typeof colorRange.name !== 'string') {\n    return null;\n  }\n\n  return colorRange.name.replace(/\\b[^a-zA-Z]+$/, '');\n}\n\n/**\n * Get a reversed colorRange\n * @param reversed\n * @param colorRange\n */\nexport function reverseColorRange(reversed: boolean, colorRange: ColorRange): ColorRange | null {\n  if (!colorRange) return null;\n  // if (colorRange.reversed) return colorRange;\n  return {\n    ...colorRange,\n    reversed,\n    colors: colorRange.colors.slice().reverse()\n  };\n}\n\n/**\n * given a list of rgb arrays it will generate a linear gradient css rule\n * @param direction\n * @param colors\n * @return\n */\n// Changes done\nexport function createLinearGradient(direction: string, colors: RGBColor[]) {\n  if (typeof colors[0] === \"undefined\" || colors[0] === null){\n      let color:any = [[143,47,191]];\n      const step = parseFloat((100.0 / color.length).toFixed(2));\n      const bands = color.map((rgb, index) => {\n        return `rgba(${rgb.join(',')}, 1) ${step * index}%, rgba(${rgb.join(',')}, 1) ${step *\n          (index + 1)}%`;\n      });      \n      return `linear-gradient(to ${direction}, ${bands.join(',')})`;\n  }else{\n     const step = parseFloat((100.0 / colors.length).toFixed(2));\n     const bands = colors.map((rgb, index) => {\n       return `rgba(${rgb.join(',')}, 1) ${step * index}%, rgba(${rgb.join(',')}, 1) ${step *\n         (index + 1)}%`;\n     });\n     return `linear-gradient(to ${direction}, ${bands.join(',')})`;\n  }    \n}\n\n/**\n * Convert color to RGB\n */\nexport function colorMaybeToRGB(color: unknown): RGBColor | null {\n  if (isRgbColor(color)) {\n    return color as RGBColor;\n  }\n\n  if (typeof color === 'string') {\n    const rgbObj = d3Rgb(color);\n    if (Number.isFinite(rgbObj?.r) && Number.isFinite(rgbObj?.g) && Number.isFinite(rgbObj?.b)) {\n      return [rgbObj.r, rgbObj.g, rgbObj.b];\n    }\n  }\n\n  return null;\n}\n\n/**\n * Whether color is rgb\n * @returns\n */\nexport function isRgbColor(color: unknown): boolean {\n  return Boolean(\n    color &&\n      Array.isArray(color) &&\n      color.length === 3 &&\n      color.every(n => Number.isFinite(n) && n <= 255 && n >= 0)\n  );\n}\n\n/**\n * Take color values in 0-255 range and map to [0, 1]\n */\nexport function normalizeColor(color: number[]): number[] {\n  return color.map(component => component / 255.0);\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {generateHashId} from './utils';\n\nimport {\n  DEFAULT_NOTIFICATION_MESSAGE,\n  DEFAULT_NOTIFICATION_TOPICS,\n  DEFAULT_NOTIFICATION_TYPES,\n  DEFAULT_UUID_COUNT,\n  BUG_REPORT_LINK\n} from '@kepler.gl/constants';\n\nexport type Notification = Record<string, any> & {\n  id: string;\n  message: string;\n  type: 'info' | 'error' | 'warning' | 'success';\n  topic: 'global' | 'file';\n  count: number;\n};\n\n/**\n * Creates a notification\n */\nexport function createNotification({\n  message = DEFAULT_NOTIFICATION_MESSAGE,\n  type = DEFAULT_NOTIFICATION_TYPES.info,\n  topic = DEFAULT_NOTIFICATION_TOPICS.global,\n  id = generateHashId(DEFAULT_UUID_COUNT),\n  count = 1,\n  ...options\n}: Partial<Notification>): Notification {\n  return {\n    ...options,\n    id,\n    message,\n    type,\n    topic,\n    count: count > 99 ? 99 : count // no more than 2 digits\n  };\n}\n\n/**\n * Creates an error notification\n * @param options\n * @returns {{topic, id, message, type: (null|number)}}\n */\nexport const errorNotification = options => ({\n  ...createNotification(options),\n  type: DEFAULT_NOTIFICATION_TYPES.error\n});\n\n/**\n * Creates a success notification\n * @param options\n * @returns {{topic, id, message, type: null}}\n */\nexport const successNotification = options => ({\n  ...createNotification(options),\n  type: DEFAULT_NOTIFICATION_TYPES.success\n});\n\nexport const exportImageError = options =>\n  errorNotification({\n    ...options,\n    id: 'EXPORT_IMAGE_ERROR_ID',\n    topic: DEFAULT_NOTIFICATION_TOPICS.global,\n    message: `Failed to export image, please take a screenshot of the javascript console, report the with [this link](${BUG_REPORT_LINK}) `\n  });\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport Console from 'global/console';\nimport window from 'global/window';\nimport document from 'global/document';\nimport {IMAGE_EXPORT_ERRORS} from '@kepler.gl/constants';\n\nexport function processClone(original, clone) {\n  if (!(clone instanceof window.Element)) {\n    return clone;\n  }\n\n  function copyProperties(sourceStyle, targetStyle) {\n    const propertyKeys = asArray(sourceStyle);\n    propertyKeys.forEach(name => {\n      targetStyle.setProperty(\n        name,\n        sourceStyle.getPropertyValue(name),\n        sourceStyle.getPropertyPriority(name)\n      );\n    });\n  }\n\n  function copyStyle(source, target) {\n    if (source.cssText) {\n      target.cssText = source.cssText;\n      // add additional copy of composite styles\n      if (source.font) {\n        target.font = source.font;\n      }\n    } else {\n      copyProperties(source, target);\n    }\n  }\n\n  function cloneStyle(og, cln) {\n    const originalStyle = window.getComputedStyle(og);\n    copyStyle(originalStyle, cln.style);\n  }\n\n  function formatPseudoElementStyle(cln, elm, stl) {\n    const formatCssText = stl1 => {\n      const cnt = stl1.getPropertyValue('content');\n      return `${stl.cssText} content: ${cnt};`;\n    };\n\n    const formatProperty = name => {\n      return `${name}:${stl.getPropertyValue(name)}${\n        stl.getPropertyPriority(name) ? ' !important' : ''\n      }`;\n    };\n\n    const formatCssProperties = stl2 => {\n      return `${asArray(stl2)\n        .map(formatProperty)\n        .join('; ')};`;\n    };\n\n    const selector = `.${cln}:${elm}`;\n    const cssText = stl.cssText ? formatCssText(stl) : formatCssProperties(stl);\n\n    return document.createTextNode(`${selector}{${cssText}}`);\n  }\n\n  function clonePseudoElement(org, cln, element) {\n    const style = window.getComputedStyle(org, element);\n    const content = style.getPropertyValue('content');\n\n    if (content === '' || content === 'none') {\n      return;\n    }\n\n    const className = uid();\n    cln.className = `${cln.className} ${className}`;\n    const styleElement = document.createElement('style');\n    styleElement.appendChild(formatPseudoElementStyle(className, element, style));\n    cln.appendChild(styleElement);\n  }\n\n  function clonePseudoElements([og, cln]) {\n    [':before', ':after'].forEach(element => clonePseudoElement(og, cln, element));\n  }\n\n  function copyUserInput([og, cln]) {\n    if (og instanceof window.HTMLTextAreaElement) cln.innerHTML = og.value;\n    if (og instanceof window.HTMLInputElement) cln.setAttribute('value', og.value);\n  }\n\n  function fixSvg(cln) {\n    if (!(cln instanceof window.SVGElement)) return;\n    cln.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n\n    if (!(cln instanceof window.SVGRectElement)) return;\n    ['width', 'height'].forEach(attribute => {\n      const value = cln.getAttribute(attribute);\n      if (!value) return;\n\n      cln.style.setProperty(attribute, value);\n    });\n  }\n\n  return Promise.resolve([original, clone])\n    .then(([og, cln]) => {\n      cloneStyle(og, cln);\n      return [og, cln];\n    })\n    .then(([og, cln]) => {\n      clonePseudoElements([og, cln]);\n      return [og, cln];\n    })\n    .then(([og, cln]) => {\n      copyUserInput([og, cln]);\n      return [og, cln];\n    })\n    .then(([og, cln]) => {\n      fixSvg(cln);\n      return [og, cln];\n    })\n    .then(([og, cln]) => cln);\n}\n\n/****\n * UTILS\n ****/\nexport function asArray(arrayLike) {\n  const array: any[] = [];\n  const length = arrayLike.length;\n  for (let i = 0; i < length; i++) array.push(arrayLike[i]);\n  return array;\n}\n\nexport function fourRandomChars() {\n  return `0000${((Math.random() * Math.pow(36, 4)) << 0).toString(36)}`.slice(-4);\n}\n\nexport function uid() {\n  let index = 0;\n\n  return `u${fourRandomChars()}${index++}`;\n}\n\nexport function makeImage(uri) {\n  return new Promise((resolve, reject) => {\n    const image = new window.Image();\n    image.onload = () => {\n      resolve(image);\n    };\n    image.onerror = err => {\n      const message = IMAGE_EXPORT_ERRORS.dataUri;\n      Console.log(uri);\n      // error is an Event Object\n      // https://www.w3schools.com/jsref/obj_event.asp\n      reject({event: err, message});\n    };\n    image.src = uri;\n  });\n}\n\nexport function isDataUrl(url) {\n  return url.search(/^(data:)/) !== -1;\n}\n\nfunction parseExtension(url) {\n  const match = /\\.([^\\.\\/]*?)$/g.exec(url);\n  if (match) {\n    return match[1];\n  }\n  return '';\n}\n\nfunction mimes() {\n  /*\n   * Only WOFF and EOT mime types for fonts are 'real'\n   * see http://www.iana.org/assignments/media-types/media-types.xhtml\n   */\n  const WOFF = 'application/font-woff';\n  const JPEG = 'image/jpeg';\n\n  return {\n    woff: WOFF,\n    woff2: WOFF,\n    ttf: 'application/font-truetype',\n    eot: 'application/vnd.ms-fontobject',\n    png: 'image/png',\n    jpg: JPEG,\n    jpeg: JPEG,\n    gif: 'image/gif',\n    tiff: 'image/tiff',\n    svg: 'image/svg+xml'\n  };\n}\n\nexport function mimeType(url) {\n  const extension = parseExtension(url).toLowerCase();\n  return mimes()[extension] || '';\n}\n\nexport function dataAsUrl(content, type) {\n  return `data:${type};base64,${content}`;\n}\n\nexport function escape(string) {\n  return string.replace(/([.*+?^${}()|\\[\\]\\/\\\\])/g, '\\\\$1');\n}\n\nexport function delay(ms) {\n  return arg => {\n    return new Promise(resolve => {\n      window.setTimeout(() => {\n        resolve(arg);\n      }, ms);\n    });\n  };\n}\n\nexport function isSrcAsDataUrl(text) {\n  const DATA_URL_REGEX = /url\\(['\"]?(data:)([^'\"]+?)['\"]?\\)/;\n  return text.search(DATA_URL_REGEX) !== -1;\n}\n\nfunction cvToBlob(canvas) {\n  return new Promise(resolve => {\n    const binaryString = window.atob(canvas.toDataURL().split(',')[1]);\n    const length = binaryString.length;\n    const binaryArray = new Uint8Array(length);\n\n    for (let i = 0; i < length; i++) binaryArray[i] = binaryString.charCodeAt(i);\n\n    resolve(new window.Blob([binaryArray], {type: 'image/png'}));\n  });\n}\n\nexport function canvasToBlob(canvas) {\n  if (canvas.toBlob)\n    return new Promise(resolve => {\n      canvas.toBlob(resolve);\n    });\n\n  return cvToBlob(canvas);\n}\n\nexport function escapeXhtml(string) {\n  return string.replace(/#/g, '%23').replace(/\\n/g, '%0A');\n}\n\nexport function getWidth(node) {\n  const leftBorder = px(node, 'border-left-width');\n  const rightBorder = px(node, 'border-right-width');\n  return node.scrollWidth + leftBorder + rightBorder;\n}\n\nexport function getHeight(node) {\n  const topBorder = px(node, 'border-top-width');\n  const bottomBorder = px(node, 'border-bottom-width');\n  return node.scrollHeight + topBorder + bottomBorder;\n}\n\nfunction px(node, styleProperty) {\n  const value = window.getComputedStyle(node).getPropertyValue(styleProperty);\n  return parseFloat(value.replace('px', ''));\n}\n\nexport function resolveUrl(url, baseUrl) {\n  const doc = document.implementation.createHTMLDocument();\n  const base = doc.createElement('base');\n  doc.head.appendChild(base);\n  const a = doc.createElement('a');\n  doc.body.appendChild(a);\n  base.href = baseUrl;\n  a.href = url;\n  return a.href;\n}\n\nexport function getAndEncode(url, options) {\n  const TIMEOUT = 30000;\n  if (options.cacheBust) {\n    // Cache bypass so we dont have CORS issues with cached images\n    // Source: https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest#Bypassing_the_cache\n    url += (/\\?/.test(url) ? '&' : '?') + new Date().getTime();\n  }\n\n  return new Promise(resolve => {\n    const request = new window.XMLHttpRequest();\n\n    request.onreadystatechange = done;\n    request.ontimeout = timeout;\n    request.responseType = 'blob';\n    request.timeout = TIMEOUT;\n    request.open('GET', url, true);\n    request.send();\n\n    let placeholder;\n    if (options.imagePlaceholder) {\n      const split = options.imagePlaceholder.split(/,/);\n      if (split && split[1]) {\n        placeholder = split[1];\n      }\n    }\n\n    function done() {\n      if (request.readyState !== 4) return;\n\n      if (request.status !== 200) {\n        if (placeholder) {\n          resolve(placeholder);\n        } else {\n          fail(`cannot fetch resource: ${url}, status: ${request.status}`);\n        }\n\n        return;\n      }\n\n      const encoder = new window.FileReader();\n      encoder.onloadend = () => {\n        const content = encoder.result.split(/,/)[1];\n        resolve(content);\n      };\n      encoder.readAsDataURL(request.response);\n    }\n\n    function timeout() {\n      if (placeholder) {\n        resolve(placeholder);\n      } else {\n        fail(`timeout of ${TIMEOUT}ms occurred while fetching resource: ${url}`);\n      }\n    }\n\n    function fail(message) {\n      Console.error(message);\n      resolve('');\n    }\n  });\n}\n\nexport function concatAndResolveUrl(base, url) {\n  return new URL(url, base).href;\n}\n\n// Set relative URL in stylesheet to absolute url\nexport function setStyleSheetBaseHref(text, base) {\n  function addBaseHrefToUrl(match, p1) {\n    const url = /^http/i.test(p1) ? p1 : concatAndResolveUrl(base, p1);\n    return `url('${url}')`;\n  }\n  return isSrcAsDataUrl(text)\n    ? text\n    : text.replace(/url\\(['\"]?([^'\"]+?)['\"]?\\)/g, addBaseHrefToUrl);\n}\n\nexport function toStyleSheet(text) {\n  const doc = document.implementation.createHTMLDocument('');\n  const styleElement = document.createElement('style');\n\n  styleElement.textContent = text;\n  doc.body.appendChild(styleElement);\n\n  return styleElement.sheet;\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\n/**\n * This file is copied from https://github.com/tsayen/dom-to-image\n * Modified by heshan0131 to allow loading external stylesheets and inline webfonts\n */\n\nimport window from 'global/window';\nimport document from 'global/document';\nimport Console from 'global/console';\nimport svgToMiniDataURI from 'mini-svg-data-uri';\nimport {IMAGE_EXPORT_ERRORS} from '@kepler.gl/constants';\n\nimport {\n  canvasToBlob,\n  escape,\n  escapeXhtml,\n  delay,\n  processClone,\n  asArray,\n  makeImage,\n  mimeType,\n  dataAsUrl,\n  isDataUrl,\n  isSrcAsDataUrl,\n  resolveUrl,\n  getWidth,\n  getHeight,\n  getAndEncode,\n  setStyleSheetBaseHref,\n  toStyleSheet\n} from './dom-utils';\n\nconst inliner = newInliner();\nconst fontFaces = newFontFaces();\nconst images = newImages();\n// Default impl options\nconst defaultOptions = {\n  // Default is to fail on error, no placeholder\n  imagePlaceholder: undefined,\n  // Default cache bust is false, it will use the cache\n  cacheBust: false\n};\n\nconst domtoimage = {\n  toSvg,\n  toPng,\n  toJpeg,\n  toBlob,\n  toPixelData,\n  impl: {\n    fontFaces,\n    images,\n    inliner,\n    options: {} as any\n  }\n};\n\n/**\n * @param {Node} node - The DOM Node object to render\n * @param {Object} options - Rendering options\n * @param {Function} [options.filter] - Should return true if passed node should be included in the output\n *          (excluding node means excluding it's children as well). Not called on the root node.\n * @param {String} [options.bgcolor] - color for the background, any valid CSS color value.\n * @param {Number} [options.width] - width to be applied to node before rendering.\n * @param {Number} [options.height] - height to be applied to node before rendering.\n * @param {Object} [options.style] - an object whose properties to be copied to node's style before rendering.\n * @param {Number} [options.quality] - a Number between 0 and 1 indicating image quality (applicable to JPEG only), defaults to 1.0.\n * @param {boolean} [options.escapeXhtmlForWebpack] - whether to apply fix for uglify error in dom-to-image (should be true for webpack builds), defaults to true.\n * @param {String} [options.imagePlaceholder] - dataURL to use as a placeholder for failed images, default behaviour is to fail fast on images we can't fetch\n * @param {Boolean} [options.cacheBust] - set to true to cache bust by appending the time to the request url\n * @return {Promise} - A promise that is fulfilled with a SVG image data URL\n * */\nfunction toSvg(node, options) {\n  options = options || {};\n  copyOptions(options);\n  return Promise.resolve(node)\n    .then(nd => cloneNode(nd, options.filter, true))\n    .then(embedFonts)\n    .then(inlineImages)\n    .then(applyOptions)\n    .then(clone =>\n      makeSvgDataUri(\n        clone,\n        options.width || getWidth(node),\n        options.height || getHeight(node),\n        options.escapeXhtmlForWebpack\n      )\n    );\n\n  function applyOptions(clone) {\n    if (options.bgcolor) clone.style.backgroundColor = options.bgcolor;\n\n    if (options.width) clone.style.width = `${options.width}px`;\n    if (options.height) clone.style.height = `${options.height}px`;\n\n    if (options.style)\n      Object.keys(options.style).forEach(property => {\n        clone.style[property] = options.style[property];\n      });\n\n    return clone;\n  }\n}\n\n/**\n * @param {Node} node - The DOM Node object to render\n * @param {Object} options - Rendering options\n * @return {Promise} - A promise that is fulfilled with a Uint8Array containing RGBA pixel data.\n * */\nfunction toPixelData(node, options) {\n  return draw(node, options || {}).then(\n    canvas => canvas.getContext('2d').getImageData(0, 0, getWidth(node), getHeight(node)).data\n  );\n}\n\n/**\n * @param {Node} node - The DOM Node object to render\n * @param {Object} options - Rendering options\n * @return {Promise} - A promise that is fulfilled with a PNG image data URL\n * */\nfunction toPng(node, options) {\n  return draw(node, options || {}).then(canvas => canvas.toDataURL());\n}\n\n/**\n * @param {Node} node - The DOM Node object to render\n * @param {Object} options - Rendering options\n * @return {Promise} - A promise that is fulfilled with a JPEG image data URL\n * */\nfunction toJpeg(node, options) {\n  options = options || {};\n  return draw(node, options).then(canvas => canvas.toDataURL('image/jpeg', options.quality || 1.0));\n}\n\n/**\n * @param {Node} node - The DOM Node object to render\n * @param {Object} options - Rendering options\n * @return {Promise} - A promise that is fulfilled with a PNG image blob\n * */\nfunction toBlob(node, options) {\n  return draw(node, options || {}).then(canvasToBlob);\n}\n\nfunction copyOptions(options) {\n  // Copy options to impl options for use in impl\n  if (typeof options.imagePlaceholder === 'undefined') {\n    domtoimage.impl.options.imagePlaceholder = defaultOptions.imagePlaceholder;\n  } else {\n    domtoimage.impl.options.imagePlaceholder = options.imagePlaceholder;\n  }\n\n  if (typeof options.cacheBust === 'undefined') {\n    domtoimage.impl.options.cacheBust = defaultOptions.cacheBust;\n  } else {\n    domtoimage.impl.options.cacheBust = options.cacheBust;\n  }\n}\n\nfunction draw(domNode, options) {\n  return toSvg(domNode, options)\n    .then(makeImage)\n    .then(delay(100))\n    .then(image => {\n      const canvas = newCanvas(domNode);\n      canvas.getContext('2d').drawImage(image, 0, 0);\n      return canvas;\n    });\n\n  function newCanvas(dNode) {\n    const canvas = document.createElement('canvas');\n    canvas.width = options.width || getWidth(dNode);\n    canvas.height = options.height || getHeight(dNode);\n\n    if (options.bgcolor) {\n      const ctx = canvas.getContext('2d');\n      ctx.fillStyle = options.bgcolor;\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n    }\n\n    return canvas;\n  }\n}\n\nfunction cloneNode(node, filter, root) {\n  if (!root && filter && !filter(node)) {\n    return Promise.resolve();\n  }\n\n  return Promise.resolve(node)\n    .then(makeNodeCopy)\n    .then(clone => cloneChildren(node, clone, filter))\n    .then(clone => processClone(node, clone));\n\n  function makeNodeCopy(nd) {\n    if (nd instanceof window.HTMLCanvasElement) {\n      return makeImage(nd.toDataURL());\n    }\n    return nd.cloneNode(false);\n  }\n\n  function cloneChildrenInOrder(parent, arrChildren, flt) {\n    let done = Promise.resolve();\n    arrChildren.forEach(child => {\n      done = done\n        .then(() => cloneNode(child, flt, null))\n        .then(childClone => {\n          if (childClone) {\n            parent.appendChild(childClone);\n          }\n        });\n    });\n    return done;\n  }\n\n  function cloneChildren(original, clone, flt) {\n    const children = original.childNodes;\n    if (children.length === 0) {\n      return Promise.resolve(clone);\n    }\n\n    return cloneChildrenInOrder(clone, asArray(children), flt).then(() => clone);\n  }\n}\n\nfunction embedFonts(node) {\n  return fontFaces.resolveAll().then(cssText => {\n    const styleNode = document.createElement('style');\n    node.appendChild(styleNode);\n    styleNode.appendChild(document.createTextNode(cssText));\n    return node;\n  });\n}\n\nfunction inlineImages(node) {\n  return images.inlineAll(node).then(() => node);\n}\n\nfunction makeSvgDataUri(node, width, height, escapeXhtmlForWebpack = true) {\n  return Promise.resolve(node).then(nd => {\n    nd.setAttribute('xmlns', 'http://www.w3.org/1999/xhtml');\n    const serializedString = new window.XMLSerializer().serializeToString(nd);\n\n    const xhtml = escapeXhtmlForWebpack ? escapeXhtml(serializedString) : serializedString;\n    const foreignObject = `<foreignObject x=\"0\" y=\"0\" width=\"100%\" height=\"100%\">${xhtml}</foreignObject>`;\n    const svgStr = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${width}\" height=\"${height}\">${foreignObject}</svg>`;\n\n    // Optimizing SVGs in data URIs\n    // see https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n    // the best way of encoding SVG in a data: URI is data:image/svg+xml,[actual data].\n    // We don’t need the ;charset=utf-8 parameter because the given SVG is ASCII.\n    return svgToMiniDataURI(svgStr);\n  });\n}\n\nfunction newInliner() {\n  const URL_REGEX = /url\\(['\"]?([^'\"]+?)['\"]?\\)/g;\n\n  return {\n    inlineAll,\n    shouldProcess,\n    impl: {\n      readUrls,\n      inline\n    }\n  };\n\n  function shouldProcess(string) {\n    return string.search(URL_REGEX) !== -1;\n  }\n\n  function readUrls(string) {\n    const result: string[] = [];\n    let match: null | RegExpExecArray;\n    while ((match = URL_REGEX.exec(string)) !== null) {\n      result.push(match[1]);\n    }\n    return result.filter(url => {\n      return !isDataUrl(url);\n    });\n  }\n\n  function urlAsRegex(url0) {\n    return new RegExp(`(url\\\\([\\'\"]?)(${escape(url0)})([\\'\"]?\\\\))`, 'g');\n  }\n\n  function inline(string, url, baseUrl, get) {\n    return Promise.resolve(url)\n      .then(ul => (baseUrl ? resolveUrl(ul, baseUrl) : ul))\n      .then(ul => (typeof get === 'function' ? get(ul) : getAndEncode(ul, domtoimage.impl.options)))\n      .then(data => dataAsUrl(data, mimeType(url)))\n      .then(dataUrl => string.replace(urlAsRegex(url), `$1${dataUrl}$3`));\n  }\n\n  function inlineAll(string, baseUrl, get) {\n    if (!shouldProcess(string) || isSrcAsDataUrl(string)) {\n      return Promise.resolve(string);\n    }\n    return Promise.resolve(string)\n      .then(readUrls)\n      .then(urls => {\n        let done = Promise.resolve(string);\n        urls.forEach(url => {\n          done = done.then(str => inline(str, url, baseUrl, get));\n        });\n        return done;\n      });\n  }\n}\n\nfunction newFontFaces() {\n  return {\n    resolveAll,\n    impl: {readAll}\n  };\n\n  function resolveAll() {\n    return readAll()\n      .then(webFonts => {\n        return Promise.all(webFonts.map(webFont => webFont.resolve()));\n      })\n      .then(cssStrings => cssStrings.join('\\n'));\n  }\n\n  function readAll() {\n    return Promise.resolve(asArray(document.styleSheets))\n      .then(loadExternalStyleSheets)\n      .then(getCssRules)\n      .then(selectWebFontRules)\n      .then(rules => rules.map(newWebFont));\n\n    function selectWebFontRules(cssRules) {\n      return cssRules\n        .filter(rule => rule.type === window.CSSRule.FONT_FACE_RULE)\n        .filter(rule => inliner.shouldProcess(rule.style.getPropertyValue('src')));\n    }\n\n    function loadExternalStyleSheets(styleSheets) {\n      return Promise.all(\n        styleSheets.map(sheet => {\n          if (sheet.href) {\n            // cloudfont doesn't have allow origin header properly set\n            // error response will remain in cache\n            const cache = sheet.href.includes('uber-fonts') ? 'no-cache' : 'default';\n            return window\n              .fetch(sheet.href, {credentials: 'omit', cache})\n              .then(response => response.text())\n              .then(text => {\n                const result = setStyleSheetBaseHref(text, sheet.href);\n                return toStyleSheet(result);\n              })\n              .catch(err => {\n                // Handle any error that occurred in any of the previous\n                // promises in the chain. stylesheet failed to load should not stop\n                // the process, hence result in only a warning, instead of reject\n                Console.warn(IMAGE_EXPORT_ERRORS.styleSheet, sheet.href);\n                Console.log(err);\n                return;\n              });\n          }\n          return Promise.resolve(sheet);\n        })\n      );\n    }\n\n    function getCssRules(styleSheets) {\n      const cssRules: any[] = [];\n      styleSheets.forEach(sheet => {\n        // try...catch because browser may not able to enumerate rules for cross-domain sheets\n        if (!sheet) {\n          return;\n        }\n        let rules;\n        try {\n          rules = sheet.rules || sheet.cssRules;\n        } catch (e) {\n          Console.log(`'Can't read the css rules of: ${sheet.href}`, e);\n          return;\n        }\n\n        if (rules && typeof rules === 'object') {\n          try {\n            asArray(rules || []).forEach(cssRules.push.bind(cssRules));\n          } catch (e) {\n            Console.log(`Error while reading CSS rules from ${sheet.href}`, e);\n            return;\n          }\n        } else {\n          Console.log('getCssRules can not find cssRules');\n          return;\n        }\n      });\n\n      return cssRules;\n    }\n\n    function newWebFont(webFontRule) {\n      return {\n        resolve: () => {\n          const baseUrl = (webFontRule.parentStyleSheet || {}).href;\n          return inliner.inlineAll(webFontRule.cssText, baseUrl, null);\n        },\n        src: () => webFontRule.style.getPropertyValue('src')\n      };\n    }\n  }\n}\n\nfunction newImages() {\n  return {\n    inlineAll,\n    impl: {\n      newImage\n    }\n  };\n\n  function newImage(element) {\n    function inline(get) {\n      if (isDataUrl(element.src)) {\n        return Promise.resolve();\n      }\n      return Promise.resolve(element.src)\n        .then(ul =>\n          typeof get === 'function' ? get(ul) : getAndEncode(ul, domtoimage.impl.options)\n        )\n        .then(data => dataAsUrl(data, mimeType(element.src)))\n        .then(\n          dataUrl =>\n            new Promise((resolve, reject) => {\n              element.onload = resolve;\n              element.onerror = reject;\n              element.src = dataUrl;\n            })\n        );\n    }\n\n    return {\n      inline\n    };\n  }\n\n  function inlineAll(node) {\n    if (!(node instanceof Element)) {\n      return Promise.resolve(node);\n    }\n\n    return inlineBackground(node).then(() => {\n      if (node instanceof HTMLImageElement) {\n        return newImage(node).inline(null);\n      }\n      return Promise.all(asArray(node.childNodes).map(child => inlineAll(child)));\n    });\n\n    function inlineBackground(nd) {\n      const background = nd.style.getPropertyValue('background');\n\n      if (!background) {\n        return Promise.resolve(nd);\n      }\n\n      return inliner\n        .inlineAll(background, null, null)\n        .then(inlined => {\n          nd.style.setProperty('background', inlined, nd.style.getPropertyPriority('background'));\n        })\n        .then(() => nd);\n    }\n  }\n}\n\nexport default domtoimage;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {deviation, min, max, mean, median, sum, variance} from 'd3-array';\nimport {AGGREGATION_TYPES} from '@kepler.gl/constants';\n\nexport const getFrequency = data =>\n  data.reduce(\n    (uniques, val) => ({\n      ...uniques,\n      [val]: (uniques[val] || 0) + 1\n    }),\n    {}\n  );\n\nexport const getMode = data => {\n  const occur = getFrequency(data);\n  return Object.keys(occur).reduce(\n    (prev, key) => (occur[prev] >= occur[key] ? prev : key),\n    Object.keys(occur)[0]\n  );\n};\n\nexport function aggregate(data, technique) {\n  switch (technique) {\n    case AGGREGATION_TYPES.average:\n      return mean(data);\n    case AGGREGATION_TYPES.countUnique:\n      return Object.keys(\n        data.reduce((uniques, val) => {\n          uniques[val] = uniques[val] || 0;\n          uniques[val] += 1;\n          return uniques;\n        }, {})\n      ).length;\n    case AGGREGATION_TYPES.mode:\n      return getMode(data);\n\n    case AGGREGATION_TYPES.maximum:\n      return max(data);\n    case AGGREGATION_TYPES.minimum:\n      return min(data);\n    case AGGREGATION_TYPES.median:\n      return median(data);\n    case AGGREGATION_TYPES.stdev:\n      return deviation(data);\n    case AGGREGATION_TYPES.sum:\n      return sum(data);\n    case AGGREGATION_TYPES.variance:\n      return variance(data);\n    default:\n      return data.length;\n  }\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {bisectLeft} from 'd3-array';\n\n/**\n * Use in slider, given a number and an array of numbers, return the nears number from the array\n * @param value\n * @param marks\n */\nexport function snapToMarks(value: number, marks: number[]): number {\n  // always use bin x0\n  const i = bisectLeft(marks, value);\n  if (i === 0) {\n    return marks[i];\n  } else if (i === marks.length) {\n    return marks[i - 1];\n  }\n  const idx = marks[i] - value < value - marks[i - 1] ? i : i - 1;\n  return marks[idx];\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport assert from 'assert';\nimport {format as d3Format} from 'd3-format';\nimport moment from 'moment-timezone';\n\nimport {\n  ALL_FIELD_TYPES,\n  TOOLTIP_FORMATS,\n  TOOLTIP_FORMAT_TYPES,\n  TOOLTIP_KEY,\n  TooltipFormat\n} from '@kepler.gl/constants';\nimport {Millisecond, Field, ColMetaProps} from '@kepler.gl/types';\n\nimport {snapToMarks} from './plot';\nimport {isPlainObject} from './utils';\n\nexport type FieldFormatter = (value: any) => string;\n\n/**\n * simple getting unique values of an array\n *\n * @param values\n * @returns unique values\n */\nexport function unique<T>(values: T[]) {\n  const results: T[] = [];\n  const uniqueSet = new Set(values);\n  uniqueSet.forEach(v => {\n    if (notNullorUndefined(v)) {\n      results.push(v);\n    }\n  });\n  return results;\n}\n\nexport function getLatLngBounds(\n  points: number[][],\n  idx: number,\n  limit: [number, number]\n): [number, number] | null {\n  const lats = points\n    .map(d => Number(Array.isArray(d)) && d[idx])\n    .filter(Number.isFinite)\n    .sort(numberSort);\n\n  if (!lats.length) {\n    return null;\n  }\n\n  // clamp to limit\n  return [Math.max(lats[0], limit[0]), Math.min(lats[lats.length - 1], limit[1])];\n}\n\nexport function clamp([min, max]: [number, number], val: number = 0): number {\n  return val <= min ? min : val >= max ? max : val;\n}\n\nexport function getSampleData(data, sampleSize = 500, getValue = d => d) {\n  const sampleStep = Math.max(Math.floor(data.length / sampleSize), 1);\n  const output: any[] = [];\n  for (let i = 0; i < data.length; i += sampleStep) {\n    output.push(getValue(data[i]));\n  }\n\n  return output;\n}\n\n/**\n * Convert different time format to unix milliseconds\n */\nexport function timeToUnixMilli(value: string | number | Date, format: string): Millisecond | null {\n  if (notNullorUndefined(value)) {\n    if (typeof value === 'string') {\n      return moment.utc(value, format).valueOf();\n    }\n    if (typeof value === 'number') {\n      return format === 'x' ? value * 1000 : value;\n    }\n    if (value instanceof Date) {\n      return value.valueOf();\n    }\n  }\n  return null;\n}\n\n/**\n * whether null or undefined\n */\nexport function notNullorUndefined<T extends NonNullable<any>>(d: T | null | undefined): d is T {\n  return d !== undefined && d !== null;\n}\n\n/**\n * Whether d is a number, this filtered out NaN as well\n */\nexport function isNumber(d: any): boolean {\n  return Number.isFinite(d);\n}\n\n/**\n * whether object has property\n * @param {string} prop\n * @returns {boolean} - yes or no\n */\nexport function hasOwnProperty<X extends {}, Y extends PropertyKey>(\n  obj: X,\n  prop: Y\n): obj is X & Record<Y, unknown> {\n  return obj.hasOwnProperty(prop);\n}\n\nexport function numberSort(a: number, b: number): number {\n  return a - b;\n}\n\nexport function getSortingFunction(fieldType: string): typeof numberSort | undefined {\n  switch (fieldType) {\n    case ALL_FIELD_TYPES.real:\n    case ALL_FIELD_TYPES.integer:\n    case ALL_FIELD_TYPES.timestamp:\n      return numberSort;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * round number with exact number of decimals\n * return as a string\n */\nexport function preciseRound(num: number, decimals: number): string {\n  const t = Math.pow(10, decimals);\n  return (\n    Math.round(\n      num * t + (decimals > 0 ? 1 : 0) * (Math.sign(num) * (10 / Math.pow(100, decimals)))\n    ) / t\n  ).toFixed(decimals);\n}\n\n/**\n * round a giving number at most 4 decimal places\n * e.g. 10 -> 10, 1.12345 -> 1.2345, 2.0 -> 2\n */\nexport function roundToFour(num: number): number {\n  // @ts-expect-error\n  return Number(`${Math.round(`${num}e+4`)}e-4`);\n}\n/**\n * get number of decimals to round to for slider from step\n * @param step\n * @returns- number of decimal\n */\nexport function getRoundingDecimalFromStep(step: number): number {\n  if (isNaN(step)) {\n    assert('step is not a number');\n    assert(step);\n  }\n\n  const stepStr = step.toString();\n\n  // in case the step is a very small number e.g. 1e-7, return decimal e.g. 7 directly\n  const splitExponential = stepStr.split('e-');\n  if (splitExponential.length === 2) {\n    const coeffZero = splitExponential[0].split('.');\n    const coeffDecimal = coeffZero.length === 1 ? 0 : coeffZero[1].length;\n    return parseInt(splitExponential[1], 10) + coeffDecimal;\n  }\n\n  const splitZero = stepStr.split('.');\n  if (splitZero.length === 1) {\n    return 0;\n  }\n  return splitZero[1].length;\n}\n\n/**\n * If marks is provided, snap to marks, if not normalize to step\n * @param val\n * @param minValue\n * @param step\n * @param marks\n */\nexport function normalizeSliderValue(\n  val: number,\n  minValue: number,\n  step: number,\n  marks?: number[]\n): number {\n  if (marks && marks.length) {\n    // Use in slider, given a number and an array of numbers, return the nears number from the array\n    return snapToMarks(val, marks);\n  }\n\n  return roundValToStep(minValue, step, val);\n}\n\n/**\n * round the value to step for the slider\n * @param minValue\n * @param step\n * @param val\n * @returns - rounded number\n */\nexport function roundValToStep(minValue: number, step: number, val: number): number {\n  if (!isNumber(step) || !isNumber(minValue)) {\n    return val;\n  }\n\n  const decimal = getRoundingDecimalFromStep(step);\n  const steps = Math.floor((val - minValue) / step);\n  let remain = val - (steps * step + minValue);\n\n  // has to round because javascript turns 0.1 into 0.9999999999999987\n  remain = Number(preciseRound(remain, 8));\n\n  let closest: number;\n  if (remain === 0) {\n    closest = val;\n  } else if (remain < step / 2) {\n    closest = steps * step + minValue;\n  } else {\n    closest = (steps + 1) * step + minValue;\n  }\n\n  // precise round return a string rounded to the defined decimal\n  const rounded = preciseRound(closest, decimal);\n\n  return Number(rounded);\n}\n\n/**\n * Get the value format based on field and format options\n * Used in render tooltip value\n */\nexport const defaultFormatter: FieldFormatter = v => (notNullorUndefined(v) ? String(v) : '');\n\nexport const floatFormatter = v => (isNumber(v) ? String(roundToFour(v)) : '');\n\nexport const FIELD_DISPLAY_FORMAT: {\n  [key: string]: FieldFormatter;\n} = {\n  [ALL_FIELD_TYPES.string]: defaultFormatter,\n  [ALL_FIELD_TYPES.timestamp]: defaultFormatter,\n  [ALL_FIELD_TYPES.integer]: defaultFormatter,\n  [ALL_FIELD_TYPES.real]: defaultFormatter,\n  [ALL_FIELD_TYPES.boolean]: defaultFormatter,\n  [ALL_FIELD_TYPES.date]: defaultFormatter,\n  [ALL_FIELD_TYPES.geojson]: d =>\n    typeof d === 'string'\n      ? d\n      : isPlainObject(d)\n      ? JSON.stringify(d)\n      : Array.isArray(d)\n      ? `[${String(d)}]`\n      : '',\n  [ALL_FIELD_TYPES.geoarrow]: d => d,\n  [ALL_FIELD_TYPES.object]: JSON.stringify,\n  [ALL_FIELD_TYPES.array]: JSON.stringify\n};\n\n/**\n * Parse field value and type and return a string representation\n */\nexport const parseFieldValue = (value: any, type: string): string => {\n  if (!notNullorUndefined(value)) {\n    return '';\n  }\n  return FIELD_DISPLAY_FORMAT[type] ? FIELD_DISPLAY_FORMAT[type](value) : String(value);\n};\n\nconst arrayMoveMutate = <T>(array: T[], from: number, to: number) => {\n  array.splice(to < 0 ? array.length + to : to, 0, array.splice(from, 1)[0]);\n};\n\n/**\n *\n * @param array\n * @param from\n * @param to\n */\nexport const arrayMove = <T>(array: T[], from: number, to: number): T[] => {\n  array = array.slice();\n  arrayMoveMutate(array, from, to);\n  return array;\n};\n\n/**\n * Get the value format based on field and format options\n * Used in render tooltip value\n * @param format\n * @param field\n */\nexport function getFormatter(\n  format: string | Record<string, string>,\n  field?: Field\n): FieldFormatter {\n  if (!format) {\n    return defaultFormatter;\n  }\n  const tooltipFormat = Object.values(TOOLTIP_FORMATS).find(f => f[TOOLTIP_KEY] === format);\n\n  if (tooltipFormat) {\n    return applyDefaultFormat(tooltipFormat as TooltipFormat);\n  } else if (typeof format === 'string' && field) {\n    return applyCustomFormat(format, field);\n  }\n\n  return defaultFormatter;\n}\n\nexport function getColumnFormatter(colMeta: ColMetaProps): FieldFormatter {\n  const {format, displayFormat} = colMeta;\n\n  if (!format && !displayFormat) {\n    return FIELD_DISPLAY_FORMAT[colMeta.type];\n  }\n  const tooltipFormat = Object.values(TOOLTIP_FORMATS).find(f => f[TOOLTIP_KEY] === displayFormat);\n\n  if (tooltipFormat) {\n    return applyDefaultFormat(tooltipFormat);\n  } else if (typeof displayFormat === 'string' && colMeta) {\n    return applyCustomFormat(displayFormat, colMeta);\n  } else if (typeof displayFormat === 'object') {\n    return applyValueMap(displayFormat);\n  }\n\n  return defaultFormatter;\n}\n\nexport function applyValueMap(format) {\n  return v => format[v];\n}\n\nexport function applyDefaultFormat(tooltipFormat: TooltipFormat): (v: any) => string {\n  if (!tooltipFormat || !tooltipFormat.format) {\n    return defaultFormatter;\n  }\n\n  switch (tooltipFormat.type) {\n    case TOOLTIP_FORMAT_TYPES.DECIMAL:\n      return d3Format(tooltipFormat.format);\n    case TOOLTIP_FORMAT_TYPES.DATE:\n    case TOOLTIP_FORMAT_TYPES.DATE_TIME:\n      return datetimeFormatter(null)(tooltipFormat.format);\n    case TOOLTIP_FORMAT_TYPES.PERCENTAGE:\n      return v => `${d3Format(TOOLTIP_FORMATS.DECIMAL_DECIMAL_FIXED_2.format)(v)}%`;\n    case TOOLTIP_FORMAT_TYPES.BOOLEAN:\n      return getBooleanFormatter(tooltipFormat.format);\n    default:\n      return defaultFormatter;\n  }\n}\n\nexport function getBooleanFormatter(format: string): FieldFormatter {\n  switch (format) {\n    case '01':\n      return (v: Boolean) => (v ? '1' : '0');\n    case 'yn':\n      return (v: Boolean) => (v ? 'yes' : 'no');\n    default:\n      return defaultFormatter;\n  }\n}\n// Allow user to specify custom tooltip format via config\nexport function applyCustomFormat(format, field): FieldFormatter {\n  switch (field.type) {\n    case ALL_FIELD_TYPES.real:\n    case ALL_FIELD_TYPES.integer:\n      return d3Format(format);\n    case ALL_FIELD_TYPES.date:\n    case ALL_FIELD_TYPES.timestamp:\n      return datetimeFormatter(null)(format);\n    default:\n      return v => v;\n  }\n}\n\nfunction formatLargeNumber(n) {\n  // SI-prefix with 4 significant digits\n  return d3Format('.4~s')(n);\n}\n\nexport function formatNumber(n: number, type?: string): string {\n  switch (type) {\n    case ALL_FIELD_TYPES.integer:\n      if (n < 0) {\n        return `-${formatNumber(-n, 'integer')}`;\n      }\n      if (n < 1000) {\n        return `${Math.round(n)}`;\n      }\n      if (n < 10 * 1000) {\n        return d3Format(',')(Math.round(n));\n      }\n      return formatLargeNumber(n);\n    case ALL_FIELD_TYPES.real:\n      if (n < 0) {\n        return `-${formatNumber(-n, 'number')}`;\n      }\n      if (n < 1000) {\n        return d3Format('.4~r')(n);\n      }\n      if (n < 10 * 1000) {\n        return d3Format(',.2~f')(n);\n      }\n      return formatLargeNumber(n);\n\n    default:\n      return formatNumber(n, 'real');\n  }\n}\n\n/**\n * Format epoch milliseconds with a format string\n * @type timezone\n */\nexport function datetimeFormatter(\n  timezone?: string | null\n): (format?: string) => (ts: number) => string {\n  return timezone\n    ? format => ts =>\n        moment\n          .utc(ts)\n          .tz(timezone)\n          .format(format)\n    : // return empty string instead of 'Invalid date' if ts is undefined/null\n      format => ts => (ts ? moment.utc(ts).format(format) : '');\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {AnimationConfig, Timeline, TimeRangeFilter} from '@kepler.gl/types';\n\nimport {toArray} from './utils';\n\nexport const TIMELINE_MODES = {\n  inner: 'inner',\n  outer: 'outer'\n};\n\nexport const SAMPLE_TIMELINE = {\n  // value: [15], // represent 15% of the all width\n  value: [5, 15], // represent start at 5% and ends at 15%\n  domain: [1, 100], // represent the total domain\n  speed: 1,\n  enableInteraction: false, // can use interact with this timeline\n  isAnimating: false,\n  step: null,\n  // @todo: giuseppe coverType: 'inner' | 'outer'\n  mode: TIMELINE_MODES.inner\n  //  ....\n};\n\nexport const getTimelineFromAnimationConfig = (animationConfig: AnimationConfig): Timeline => {\n  const {\n    currentTime,\n    domain,\n    speed,\n    isAnimating,\n    timeSteps,\n    defaultTimeFormat,\n    timeFormat,\n    timezone\n  } = animationConfig;\n\n  return {\n    // @ts-expect-error\n    value: toArray(currentTime),\n    enableInteraction: true,\n    // @ts-expect-error\n    domain,\n    speed,\n    isAnimating: isAnimating || false,\n    timeSteps,\n    defaultTimeFormat,\n    timeFormat,\n    timezone,\n    marks: null\n  };\n};\n\nexport const getTimelineFromFilter = (filter: TimeRangeFilter): Timeline => {\n  const {\n    value,\n    domain,\n    speed,\n    isAnimating,\n    step,\n    // @ts-expect-error\n    timeSteps,\n    defaultTimeFormat,\n    timeFormat,\n    timezone,\n    animationWindow\n  } = filter;\n\n  return {\n    value,\n    enableInteraction: true,\n    domain,\n    speed,\n    isAnimating,\n    step,\n    timeSteps,\n    defaultTimeFormat,\n    timeFormat,\n    timezone,\n    animationWindow,\n    marks: null\n  };\n};\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {TOOLTIP_KEY} from '@kepler.gl/constants';\n\nexport const getFormatValue = fmt => fmt[TOOLTIP_KEY];\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {console as globalConsole} from 'global/window';\nimport {\n  ALL_FIELD_TYPES,\n  FIELD_OPTS,\n  TOOLTIP_FORMATS,\n  TOOLTIP_FORMAT_TYPES\n} from '@kepler.gl/constants';\nimport {Analyzer, DATA_TYPES as AnalyzerDATA_TYPES} from 'type-analyzer';\nimport assert from 'assert';\n\nimport {\n  ProcessorResult,\n  RGBColor,\n  RowData,\n  Field,\n  FieldPair,\n  TimeLabelFormat,\n  TooltipFields,\n  ProtoDataset\n} from '@kepler.gl/types';\nimport {TooltipFormat} from '@kepler.gl/constants';\n\nimport {isPlainObject} from './utils';\nimport {notNullorUndefined, getFormatter} from './data-utils';\nimport {getFormatValue} from './format';\nimport {range} from 'd3-array';\nimport {hexToRgb} from './color-utils';\n\n// apply a color for each dataset\n// to use as label colors\nconst datasetColors = [\n  '#8F2FBF',\n  '#005CFF',\n  '#C06C84',\n  '#F8B195',\n  '#547A82',\n  '#3EACA8',\n  '#A2D4AB'\n].map(hexToRgb);\n\n/**\n * Random color generator\n */\nfunction* generateColor(): Generator<RGBColor> {\n  let index = 0;\n  while (index < datasetColors.length + 1) {\n    if (index === datasetColors.length) {\n      index = 0;\n    }\n    yield datasetColors[index++];\n  }\n}\n\nexport const datasetColorMaker = generateColor();\n\n/**\n * Field name prefixes and suffixes which should not be considered\n * as metrics. Fields will still be included if a 'metric word'\n * is found on the field name, however.\n */\nconst EXCLUDED_DEFAULT_FIELDS = [\n  // Serial numbers and identification numbers\n  '_id',\n  'id',\n  'index',\n  'uuid',\n  'guid',\n  'uid',\n  'gid',\n  'serial',\n  // Geographic IDs are unlikely to be interesting to color\n  'zip',\n  'code',\n  'post',\n  'region',\n  'fips',\n  'cbgs',\n  'h3',\n  's2',\n  // Geographic coords (but not z/elevation/altitude\n  // since that might be a metric)\n  'lat',\n  'lon',\n  'lng',\n  'latitude',\n  'longitude',\n  '_x',\n  '_y'\n];\n\n/**\n * Prefixes and suffixes that indicate a field is a metric.\n *\n * Note that these are in order of preference, first being\n * most preferred.\n */\nconst METRIC_DEFAULT_FIELDS = [\n  'metric',\n  'value',\n  'sum',\n  'count',\n  'unique',\n  'mean',\n  'mode',\n  'median',\n  'max',\n  'min',\n  'deviation',\n  'variance',\n  'p99',\n  'p95',\n  'p75',\n  'p50',\n  'p25',\n  'p05',\n  // Abbreviations are less preferred\n  'cnt',\n  'val'\n];\n\n/**\n * Choose a field to use as the default color field of a layer.\n *\n * The heuristic is:\n *\n * First, exclude fields that are on the exclusion list and don't\n * have names that suggest they contain metrics. Also exclude\n * field names that are blank.\n *\n * Next, look for a field that is of real type and contains one\n * of the preferred names (in order of the preferred names).\n *\n * Next, look for a field that is of integer type and contains\n * one of the preferred names (in order of the preferred names).\n *\n * Next, look for the first field that is of real type (in order\n * of field index).\n *\n * Next, look for the first field that is of integer type (in\n * order of field index).\n *\n * It's possible no field will be chosen (i.e. because all fields\n * are strings.)\n *\n * @param dataset\n */\nexport function findDefaultColorField({\n  fields,\n  fieldPairs = []\n}: {\n  fields: Field[];\n  fieldPairs: FieldPair[];\n}): null | Field {\n  const fieldsWithoutExcluded = fields.filter(field => {\n    if (field.type !== ALL_FIELD_TYPES.real && field.type !== ALL_FIELD_TYPES.integer) {\n      // Only select numeric fields.\n      return false;\n    }\n    if (\n      fieldPairs.find(\n        pair => pair.pair.lat.value === field.name || pair.pair.lng.value === field.name\n      )\n    ) {\n      // Do not permit lat, lon fields\n      return false;\n    }\n\n    const normalizedFieldName = field.name.toLowerCase();\n    if (normalizedFieldName === '') {\n      // Special case excluded name when the name is blank.\n      return false;\n    }\n    const hasExcluded = EXCLUDED_DEFAULT_FIELDS.find(\n      f => normalizedFieldName.startsWith(f) || normalizedFieldName.endsWith(f)\n    );\n    const hasInclusion = METRIC_DEFAULT_FIELDS.find(\n      f => normalizedFieldName.startsWith(f) || normalizedFieldName.endsWith(f)\n    );\n    return !hasExcluded || hasInclusion;\n  });\n\n  const sortedFields = fieldsWithoutExcluded.sort((left, right) => {\n    const normalizedLeft = left.name.toLowerCase();\n    const normalizedRight = right.name.toLowerCase();\n    const leftHasInclusion = METRIC_DEFAULT_FIELDS.findIndex(\n      f => normalizedLeft.startsWith(f) || normalizedLeft.endsWith(f)\n    );\n    const rightHasInclusion = METRIC_DEFAULT_FIELDS.findIndex(\n      f => normalizedRight.startsWith(f) || normalizedRight.endsWith(f)\n    );\n    if (leftHasInclusion !== rightHasInclusion) {\n      if (leftHasInclusion === -1) {\n        // Elements that do not have the inclusion list should go after those that do.\n        return 1;\n      } else if (rightHasInclusion === -1) {\n        // Elements that do have the inclusion list should go before those that don't.\n        return -1;\n      }\n      // Compare based on order in the inclusion list\n      return leftHasInclusion - rightHasInclusion;\n    }\n\n    // Compare based on type\n    if (left.type !== right.type) {\n      if (left.type === ALL_FIELD_TYPES.real) {\n        return -1;\n      }\n      // left is an integer and right is not\n      // and reals come before integers\n      return 1;\n    }\n\n    // Finally, order based on the order in the datasets columns\n    // @ts-expect-error\n    return left.index - right.index;\n  });\n\n  if (sortedFields.length) {\n    // There was a best match\n    return sortedFields[0];\n  }\n  // No matches\n  return null;\n}\n\nexport const ACCEPTED_ANALYZER_TYPES = [\n  AnalyzerDATA_TYPES.DATE,\n  AnalyzerDATA_TYPES.TIME,\n  AnalyzerDATA_TYPES.DATETIME,\n  AnalyzerDATA_TYPES.NUMBER,\n  AnalyzerDATA_TYPES.INT,\n  AnalyzerDATA_TYPES.FLOAT,\n  AnalyzerDATA_TYPES.BOOLEAN,\n  AnalyzerDATA_TYPES.STRING,\n  AnalyzerDATA_TYPES.GEOMETRY,\n  AnalyzerDATA_TYPES.GEOMETRY_FROM_STRING,\n  AnalyzerDATA_TYPES.PAIR_GEOMETRY_FROM_STRING,\n  AnalyzerDATA_TYPES.ZIPCODE,\n  AnalyzerDATA_TYPES.ARRAY,\n  AnalyzerDATA_TYPES.OBJECT\n];\n\nconst IGNORE_DATA_TYPES = Object.keys(AnalyzerDATA_TYPES).filter(\n  type => !ACCEPTED_ANALYZER_TYPES.includes(type)\n);\n\n/**\n * Validate input data, adding missing field types, rename duplicate columns\n */\nexport function validateInputData(data: ProtoDataset['data']): ProcessorResult {\n  if (!isPlainObject(data)) {\n    assert('addDataToMap Error: dataset.data cannot be null');\n    return null;\n  } else if (!Array.isArray(data.fields)) {\n    assert('addDataToMap Error: expect dataset.data.fields to be an array');\n    return null;\n  } else if (!Array.isArray(data.rows)) {\n    assert('addDataToMap Error: expect dataset.data.rows to be an array');\n    return null;\n  }\n\n  const {fields, rows, cols} = data;\n\n  // check if all fields has name, format and type\n  const allValid = fields.every((f, i) => {\n    if (!isPlainObject(f)) {\n      assert(`fields needs to be an array of object, but find ${typeof f}`);\n      fields[i] = {name: `column_${i}`};\n    }\n\n    if (!f.name) {\n      assert(`field.name is required but missing in ${JSON.stringify(f)}`);\n      // assign a name\n      fields[i].name = `column_${i}`;\n    }\n\n    if (!f.type || !ALL_FIELD_TYPES[f.type]) {\n      assert(`unknown field type ${f.type}`);\n      return false;\n    }\n\n    if (!fields.every(field => field.analyzerType)) {\n      assert('field missing analyzerType');\n      return false;\n    }\n\n    // check time format is correct based on first 10 not empty element\n    if (f.type === ALL_FIELD_TYPES.timestamp) {\n      const sample = findNonEmptyRowsAtField(rows, i, 10).map(r => ({ts: r[i]}));\n      const analyzedType = Analyzer.computeColMeta(sample)[0];\n      return analyzedType && analyzedType.category === 'TIME' && analyzedType.format === f.format;\n    }\n\n    return true;\n  });\n\n  if (allValid) {\n    return {rows, fields, cols};\n  }\n\n  // if any field has missing type, recalculate it for everyone\n  // because we simply lost faith in humanity\n  const sampleData = getSampleForTypeAnalyze({\n    fields: fields.map(f => f.name),\n    rows\n  });\n  const fieldOrder = fields.map(f => f.name);\n  const meta = getFieldsFromData(sampleData, fieldOrder);\n  const updatedFields = fields.map((f, i) => ({\n    ...f,\n    type: meta[i].type,\n    format: meta[i].format,\n    analyzerType: meta[i].analyzerType\n  }));\n\n  return {fields: updatedFields, rows};\n}\n\nfunction findNonEmptyRowsAtField(rows: unknown[][], fieldIdx: number, total: number): any[] {\n  const sample: any[] = [];\n  let i = 0;\n  while (sample.length < total && i < rows.length) {\n    if (notNullorUndefined(rows[i]?.[fieldIdx])) {\n      sample.push(rows[i]);\n    }\n    i++;\n  }\n  return sample;\n}\n/**\n * Getting sample data for analyzing field type.\n */\nexport function getSampleForTypeAnalyze({\n  fields,\n  rows,\n  sampleCount = 50\n}: {\n  fields: string[];\n  rows: unknown[][];\n  sampleCount?: number;\n}): RowData {\n  const total = Math.min(sampleCount, rows.length);\n  // const fieldOrder = fields.map(f => f.name);\n  const sample = range(0, total, 1).map(d => ({}));\n\n  // collect sample data for each field\n  fields.forEach((field, fieldIdx) => {\n    // data counter\n    let i = 0;\n    // sample counter\n    let j = 0;\n\n    while (j < total) {\n      if (i >= rows.length) {\n        // if depleted data pool\n        sample[j][field] = null;\n        j++;\n      } else if (notNullorUndefined(rows[i][fieldIdx])) {\n        const value = rows[i][fieldIdx];\n        sample[j][field] = typeof value === 'string' ? value.trim() : value;\n        j++;\n        i++;\n      } else {\n        i++;\n      }\n    }\n  });\n\n  return sample;\n}\n\n/**\n * Check if string is a valid Well-known binary (WKB) in HEX format\n * https://en.wikipedia.org/wiki/Well-known_text_representation_of_geometry\n *\n * @param str input string\n * @returns true if string is a valid WKB in HEX format\n */\nexport function isHexWkb(str: string | null): boolean {\n  if (!str) return false;\n  // check if the length of the string is even and is at least 10 characters long\n  if (str.length < 10 || str.length % 2 !== 0) {\n    return false;\n  }\n  // check if first two characters are 00 or 01\n  if (!str.startsWith('00') && !str.startsWith('01')) {\n    return false;\n  }\n  // check if the rest of the string is a valid hex\n  return /^[0-9a-fA-F]+$/.test(str.slice(2));\n}\n\n/**\n * Analyze field types from data in `string` format, e.g. uploaded csv.\n * Assign `type`, `fieldIdx` and `format` (timestamp only) to each field\n *\n * @param data array of row object\n * @param fieldOrder array of field names as string\n * @returns formatted fields\n * @public\n * @example\n *\n * import {getFieldsFromData} from 'kepler.gl/processors';\n * const data = [{\n *   time: '2016-09-17 00:09:55',\n *   value: '4',\n *   surge: '1.2',\n *   isTrip: 'true',\n *   zeroOnes: '0'\n * }, {\n *   time: '2016-09-17 00:30:08',\n *   value: '3',\n *   surge: null,\n *   isTrip: 'false',\n *   zeroOnes: '1'\n * }, {\n *   time: null,\n *   value: '2',\n *   surge: '1.3',\n *   isTrip: null,\n *   zeroOnes: '1'\n * }];\n *\n * const fieldOrder = ['time', 'value', 'surge', 'isTrip', 'zeroOnes'];\n * const fields = getFieldsFromData(data, fieldOrder);\n * // fields = [\n * // {name: 'time', format: 'YYYY-M-D H:m:s', fieldIdx: 1, type: 'timestamp'},\n * // {name: 'value', format: '', fieldIdx: 4, type: 'integer'},\n * // {name: 'surge', format: '', fieldIdx: 5, type: 'real'},\n * // {name: 'isTrip', format: '', fieldIdx: 6, type: 'boolean'},\n * // {name: 'zeroOnes', format: '', fieldIdx: 7, type: 'integer'}];\n *\n */\nexport function getFieldsFromData(data: RowData, fieldOrder: string[]): Field[] {\n  // add a check for epoch timestamp\n  const metadata = Analyzer.computeColMeta(\n    data,\n    [\n      {regex: /.*geojson|all_points/g, dataType: 'GEOMETRY'},\n      {regex: /.*census/g, dataType: 'STRING'}\n    ],\n    {ignoredDataTypes: IGNORE_DATA_TYPES}\n  );\n\n  const {fieldByIndex} = renameDuplicateFields(fieldOrder);\n\n  const result = fieldOrder.map((field, index) => {\n    const name = fieldByIndex[index];\n\n    const fieldMeta = metadata.find(m => m.key === field);\n\n    // fieldMeta could be undefined if the field has no data and Analyzer.computeColMeta\n    // will ignore the field. In this case, we will simply assign the field type to STRING\n    // since dropping the column in the RowData could be expensive\n    let type = fieldMeta?.type || 'STRING';\n    const format = fieldMeta?.format || '';\n\n    // check if string is hex wkb\n    if (type === AnalyzerDATA_TYPES.STRING) {\n      type = data.some(d => isHexWkb(d[name])) ? AnalyzerDATA_TYPES.GEOMETRY : type;\n    }\n\n    return {\n      name,\n      id: name,\n      displayName: name,\n      format,\n      fieldIdx: index,\n      type: analyzerTypeToFieldType(type),\n      analyzerType: type,\n      valueAccessor: dc => d => {\n        return dc.valueAt(d.index, index);\n      }\n    };\n  });\n\n  return result;\n}\n\n/**\n * pass in an array of field names, rename duplicated one\n * and return a map from old field index to new name\n *\n * @param fieldOrder\n * @returns new field name by index\n */\nexport function renameDuplicateFields(\n  fieldOrder: string[]\n): {allNames: string[]; fieldByIndex: string[]} {\n  return fieldOrder.reduce<{allNames: string[]; fieldByIndex: string[]}>(\n    (accu, field, i) => {\n      const {allNames} = accu;\n      let fieldName = field;\n\n      // add a counter to duplicated names\n      if (allNames.includes(field)) {\n        let counter = 0;\n        while (allNames.includes(`${field}-${counter}`)) {\n          counter++;\n        }\n        fieldName = `${field}-${counter}`;\n      }\n\n      accu.fieldByIndex[i] = fieldName;\n      accu.allNames.push(fieldName);\n\n      return accu;\n    },\n    {allNames: [], fieldByIndex: []}\n  );\n}\n\n/**\n * Convert type-analyzer output to kepler.gl field types\n *\n * @param aType\n * @returns corresponding type in `ALL_FIELD_TYPES`\n */\n/* eslint-disable complexity */\nexport function analyzerTypeToFieldType(aType: string): string {\n  const {\n    DATE,\n    TIME,\n    DATETIME,\n    NUMBER,\n    INT,\n    FLOAT,\n    BOOLEAN,\n    STRING,\n    GEOMETRY,\n    GEOMETRY_FROM_STRING,\n    PAIR_GEOMETRY_FROM_STRING,\n    ZIPCODE,\n    ARRAY,\n    OBJECT\n  } = AnalyzerDATA_TYPES;\n\n  // TODO: un recognized types\n  // CURRENCY PERCENT NONE\n  switch (aType) {\n    case DATE:\n      return ALL_FIELD_TYPES.date;\n    case TIME:\n    case DATETIME:\n      return ALL_FIELD_TYPES.timestamp;\n    case FLOAT:\n      return ALL_FIELD_TYPES.real;\n    case INT:\n      return ALL_FIELD_TYPES.integer;\n    case BOOLEAN:\n      return ALL_FIELD_TYPES.boolean;\n    case GEOMETRY:\n    case GEOMETRY_FROM_STRING:\n    case PAIR_GEOMETRY_FROM_STRING:\n      return ALL_FIELD_TYPES.geojson;\n    case ARRAY:\n      return ALL_FIELD_TYPES.array;\n    case OBJECT:\n      return ALL_FIELD_TYPES.object;\n    case NUMBER:\n    case STRING:\n    case ZIPCODE:\n      return ALL_FIELD_TYPES.string;\n    default:\n      globalConsole.warn(`Unsupported analyzer type: ${aType}`);\n      return ALL_FIELD_TYPES.string;\n  }\n}\n\nconst TIME_DISPLAY = '2020-05-11 14:00';\n\nconst addTimeLabel = (formats: TimeLabelFormat[]) =>\n  formats.map(f => ({\n    ...f,\n    label:\n      f.type === TOOLTIP_FORMAT_TYPES.DATE_TIME || f.type === TOOLTIP_FORMAT_TYPES.DATE\n        ? getFormatter(getFormatValue(f))(TIME_DISPLAY)\n        : f.label\n  }));\n\nexport function getFieldFormatLabels(fieldType?: string): TooltipFormat[] {\n  const tooltipTypes = (fieldType && FIELD_OPTS[fieldType].format.tooltip) || [];\n  const formatLabels: TimeLabelFormat[] = Object.values(TOOLTIP_FORMATS).filter(t =>\n    tooltipTypes.includes(t.type)\n  );\n  return addTimeLabel(formatLabels);\n}\n\nexport function getFormatLabels(fields: TooltipFields[], fieldName: string) {\n  const fieldType = fields.find(f => f.name === fieldName)?.type;\n  return getFieldFormatLabels(fieldType);\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\n// @ts-nocheck\nimport {KEPLER_GL_VERSION, EXPORT_HTML_MAP_MODES} from '@kepler.gl/constants';\n\n/**\n * This method is used to create an html file which will inlcude kepler and map data\n * @param {Object} options Object that collects all necessary data to  create the html file\n * @param {string} options.mapboxApiAccessToken Mapbox token used to fetch mapbox tiles\n * @param {Array<Object>} options.datasets Data to include in the map\n * @param {Object} options.config this object will contain the full kepler.gl instance configuration {mapState, mapStyle, visState}\n * @param {string} version which version of Kepler.gl to load.\n */\nexport const exportMapToHTML = (options, version = KEPLER_GL_VERSION) => {\n  return `\n    <!DOCTYPE html>\n    <html>\n      <head>\n        <meta charset=\"UTF-8\"/>\n        <title>Kepler.gl embedded map</title>\n\n        <!--Uber Font-->\n        <link rel=\"stylesheet\" href=\"https://d1a3f4spazzrp4.cloudfront.net/kepler.gl/uber-fonts/4.0.0/superfine.css\">\n\n        <!--MapBox css-->\n        <link href=\"https:https://unpkg.com/maplibre-gl@^3/dist/maplibre-gl.css\" rel=\"stylesheet\">\n\n        <!-— facebook open graph tags -->\n        <meta property=\"og:url\" content=\"http://kepler.gl/\" />\n        <meta property=\"og:title\" content=\"Large-scale WebGL-powered Geospatial Data Visualization Tool\" />\n        <meta property=\"og:description\" content=\"Kepler.gl is a powerful web-based geospatial data analysis tool. Built on a high performance rendering engine and designed for large-scale data sets.\" />\n        <meta property=\"og:site_name\" content=\"kepler.gl\" />\n        <meta property=\"og:image\" content=\"https://d1a3f4spazzrp4.cloudfront.net/kepler.gl/kepler.gl-meta-tag.png\" />\n        <meta property=\"og:image:type\" content=\"image/png\" />\n        <meta property=\"og:image:width\" content=\"800\" />\n        <meta property=\"og:image:height\" content=\"800\" />\n\n        <!-— twitter card tags -->\n        <meta name=\"twitter:card\" content=\"summary_large_image\">\n        <meta name=\"twitter:site\" content=\"@openjsf\">\n        <meta name=\"twitter:creator\" content=\"@openjsf\">\n        <meta name=\"twitter:title\" content=\"Large-scale WebGL-powered Geospatial Data Visualization Tool\">\n        <meta name=\"twitter:description\" content=\"Kepler.gl is a powerful web-based geospatial data analysis tool. Built on a high performance rendering engine and designed for large-scale data sets.\">\n        <meta name=\"twitter:image\" content=\"https://d1a3f4spazzrp4.cloudfront.net/kepler.gl/kepler.gl-meta-tag.png\" />\n\n        <!-- Load React/Redux -->\n        <script src=\"https://unpkg.com/react@16.8.4/umd/react.production.min.js\" crossorigin></script>\n        <script src=\"https://unpkg.com/react-dom@16.8.4/umd/react-dom.production.min.js\" crossorigin></script>\n        <script src=\"https://unpkg.com/redux@3.7.2/dist/redux.js\" crossorigin></script>\n        <script src=\"https://unpkg.com/react-redux@7.1.3/dist/react-redux.min.js\" crossorigin></script>\n        <script src=\"https://unpkg.com/styled-components@4.1.3/dist/styled-components.min.js\" crossorigin></script>\n\n        <!-- Load Kepler.gl -->\n        <script src=\"https://unpkg.com/kepler.gl@${version}/umd/keplergl.min.js\" crossorigin></script>\n\n        <style type=\"text/css\">\n          body {margin: 0; padding: 0; overflow: hidden;}\n        </style>\n\n        <!--MapBox token-->\n        <script>\n          /**\n           * Provide your MapBox Token\n           **/\n          const MAPBOX_TOKEN = '${options.mapboxApiAccessToken || 'PROVIDE_MAPBOX_TOKEN'}';\n          const WARNING_MESSAGE = 'Please Provide a Mapbox Token in order to use Kepler.gl. Edit this file and fill out MAPBOX_TOKEN with your access key';\n        </script>\n\n        <!-- GA: Delete this as you wish, However to pat ourselves on the back, we only track anonymous pageview to understand how many people are using kepler.gl. -->\n        <script>\n          (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n          (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n          m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n          })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');\n          ga('create', 'UA-64694404-19', {\n            'storage': 'none',\n            'clientId': localStorage.getItem('ga:clientId')\n          });\n          ga(function(tracker) {\n              localStorage.setItem('ga:clientId', tracker.get('clientId'));\n          });\n          ga('set', 'checkProtocolTask', null); // Disable file protocol checking.\n          ga('set', 'checkStorageTask', null); // Disable cookie storage checking.\n          ga('set', 'historyImportTask', null); // Disable history checking (requires reading from cookies).\n          ga('set', 'page', 'keplergl-html');\n          ga('send', 'pageview');\n        </script>\n      </head>\n      <body>\n        <!-- We will put our React component inside this div. -->\n        <div id=\"app\">\n          <!-- Kepler.gl map will be placed here-->\n        </div>\n\n        <!-- Load our React component. -->\n        <script>\n          /* Validate Mapbox Token */\n          if ((MAPBOX_TOKEN || '') === '' || MAPBOX_TOKEN === 'PROVIDE_MAPBOX_TOKEN') {\n            alert(WARNING_MESSAGE);\n          }\n\n          /** STORE **/\n          const reducers = (function createReducers(redux, keplerGl) {\n            return redux.combineReducers({\n              // mount keplerGl reducer\n              keplerGl: keplerGl.keplerGlReducer.initialState({\n                uiState: {\n                  readOnly: ${options.mode === EXPORT_HTML_MAP_MODES.READ},\n                  currentModal: null\n                }\n              })\n            });\n          }(Redux, KeplerGl));\n\n          const middleWares = (function createMiddlewares(keplerGl) {\n            return keplerGl.enhanceReduxMiddleware([\n              // Add other middlewares here\n            ]);\n          }(KeplerGl));\n\n          const enhancers = (function craeteEnhancers(redux, middles) {\n            return redux.applyMiddleware(...middles);\n          }(Redux, middleWares));\n\n          const store = (function createStore(redux, enhancers) {\n            const initialState = {};\n\n            return redux.createStore(\n              reducers,\n              initialState,\n              redux.compose(enhancers)\n            );\n          }(Redux, enhancers));\n          /** END STORE **/\n\n          /** COMPONENTS **/\n          var KeplerElement = (function makeKeplerElement(react, keplerGl, mapboxToken) {\n            var LogoSvg = function LogoSvg() {\n              return react.createElement(\n                \"div\",\n                { className: \"logo-container\", style: {position: 'fixed', zIndex: 10000, padding: '4px'} },\n                  react.createElement(\n                    \"svg\",\n                    {\n                      className: \"kepler_gl__logo\",\n                      width: \"107px\",\n                      height: \"21px\",\n                      viewBox: \"0 0 124 24\"\n                    },\n                    react.createElement(\n                      \"g\",\n                      { transform: \"translate(13.500000, 13.500000) rotate(45.000000) translate(-13.500000, -13.500000) translate(4.000000, 4.000000)\" },\n                      react.createElement(\"rect\", { x: \"0\", y: \"6\", transform: \"matrix(2.535181e-06 1 -1 2.535181e-06 18.1107 6.0369)\", fill: \"#535C6C\", width: \"12.1\", height: \"12.1\" }),\n                      react.createElement(\"rect\", { x: \"6\", y: \"0\", transform: \"matrix(2.535182e-06 1 -1 2.535182e-06 18.1107 -6.0369)\", fill:\"#1FBAD6\", width: \"12.1\", height: \"12.1\" })\n                    ),\n                    react.createElement(\n                      \"g\",\n                      {},\n                      react.createElement(\"path\", { fill:\"#1FBAD6\", d: \"M39,8.7h2.2l-2.8,4.2l2.9,5.1H39l-2.4-4.2h-1.3V18h-2V5l2-0.1v7.3h1.3L39,8.7z\" }),\n                      react.createElement(\"path\", { fill:\"#1FBAD6\", d: \"M42.4,13.3c0-1.5,0.4-2.7,1.1-3.5s1.8-1.2,3.1-1.2c1.3,0,2.2,0.4,2.8,1.1c0.6,0.7,0.9,1.8,0.9,3.3 c0,0.4,0,0.8,0,1.1h-5.8c0,1.6,0.8,2.4,2.4,2.4c1,0,2-0.2,2.9-0.6l0.2,1.7c-0.4,0.2-0.9,0.4-1.4,0.5s-1.1,0.2-1.7,0.2 c-1.5,0-2.6-0.4-3.3-1.2C42.8,16.1,42.4,14.9,42.4,13.3z M46.6,10.1c-0.7,0-1.2,0.2-1.5,0.5c-0.4,0.4-0.6,0.9-0.6,1.7h4 c0-0.8-0.2-1.4-0.5-1.7S47.2,10.1,46.6,10.1z\" }),\n                      react.createElement(\"path\", { fill:\"#1FBAD6\", d: \"M57.1,18.2c-1,0-1.8-0.3-2.3-0.9l0,0l0,1.3v2.5h-2V8.7h1.5l0.3,0.9h0c0.3-0.3,0.7-0.6,1.2-0.7 c0.4-0.2,0.9-0.3,1.4-0.3c1.2,0,2.1,0.4,2.7,1.1c0.6,0.7,0.9,2,0.9,3.7c0,1.6-0.3,2.8-1,3.7C59.2,17.8,58.3,18.2,57.1,18.2z M56.7,10.3c-0.4,0-0.8,0.1-1.1,0.2c-0.3,0.2-0.6,0.4-0.8,0.7v4.3c0.2,0.3,0.4,0.5,0.7,0.7c0.3,0.2,0.7,0.3,1.1,0.3 c0.7,0,1.2-0.2,1.6-0.7c0.4-0.5,0.5-1.3,0.5-2.5c0-0.8-0.1-1.4-0.2-1.8s-0.4-0.7-0.7-0.9C57.6,10.4,57.2,10.3,56.7,10.3z\" }),\n                      react.createElement(\"path\", { fill:\"#1FBAD6\", d: \"M63.2,16V5l2-0.1v10.8c0,0.3,0.1,0.5,0.2,0.6c0.1,0.1,0.3,0.2,0.6,0.2c0.3,0,0.6,0,0.9-0.1V18 c-0.4,0.1-1,0.2-1.6,0.2c-0.8,0-1.3-0.2-1.7-0.5S63.2,16.8,63.2,16z\" }),\n                      react.createElement(\"path\", { fill:\"#1FBAD6\", d: \"M68.2,13.3c0-1.5,0.4-2.7,1.1-3.5c0.7-0.8,1.8-1.2,3.1-1.2c1.3,0,2.2,0.4,2.8,1.1c0.6,0.7,0.9,1.8,0.9,3.3 c0,0.4,0,0.8,0,1.1h-5.8c0,1.6,0.8,2.4,2.4,2.4c1,0,2-0.2,2.9-0.6l0.2,1.7c-0.4,0.2-0.9,0.4-1.4,0.5s-1.1,0.2-1.7,0.2 c-1.5,0-2.6-0.4-3.3-1.2C68.6,16.1,68.2,14.9,68.2,13.3z M72.4,10.1c-0.7,0-1.2,0.2-1.5,0.5c-0.4,0.4-0.6,0.9-0.6,1.7h4 c0-0.8-0.2-1.4-0.5-1.7S73,10.1,72.4,10.1z\" }),\n                      react.createElement(\"path\", { fill:\"#1FBAD6\", d: \"M80.2,8.7l0.1,1.7h0c0.3-0.6,0.7-1.1,1.1-1.4c0.4-0.3,1-0.5,1.6-0.5c0.4,0,0.7,0,1,0.1l-0.1,2 c-0.3-0.1-0.7-0.2-1-0.2c-0.7,0-1.3,0.3-1.7,0.8c-0.4,0.5-0.7,1.2-0.7,2.1V18h-2V8.7H80.2z\" }),\n                      react.createElement(\"path\", { fill:\"#1FBAD6\", d: \"M83.8,17c0-0.8,0.4-1.2,1.2-1.2c0.8,0,1.2,0.4,1.2,1.2c0,0.8-0.4,1.1-1.2,1.1C84.2,18.2,83.8,17.8,83.8,17z\" }),\n                      react.createElement(\"path\", { fill:\"#1FBAD6\", d: \"M88.5,18.7c0-0.8,0.4-1.4,1.2-1.8c-0.6-0.3-0.9-0.8-0.9-1.5c0-0.7,0.4-1.2,1.1-1.6c-0.3-0.3-0.6-0.6-0.7-0.9 c-0.2-0.4-0.2-0.8-0.2-1.3c0-1,0.3-1.8,0.9-2.3c0.6-0.5,1.6-0.8,2.8-0.8c0.5,0,1,0,1.4,0.1c0.4,0.1,0.8,0.2,1.1,0.4l2.4-0.2v1.5 h-1.5c0.2,0.4,0.2,0.8,0.2,1.3c0,1-0.3,1.7-0.9,2.2s-1.5,0.8-2.7,0.8c-0.7,0-1.2-0.1-1.6-0.2c-0.1,0.1-0.2,0.2-0.3,0.3 c-0.1,0.1-0.1,0.2-0.1,0.4c0,0.2,0.1,0.3,0.2,0.4c0.1,0.1,0.3,0.2,0.6,0.2l2.7,0.2c1,0.1,1.7,0.3,2.2,0.6c0.5,0.3,0.8,0.9,0.8,1.7 c0,0.6-0.2,1.1-0.5,1.5c-0.4,0.4-0.9,0.8-1.5,1c-0.7,0.2-1.5,0.4-2.4,0.4c-1.3,0-2.3-0.2-3-0.6C88.8,20.1,88.5,19.5,88.5,18.7z M95.1,18.4c0-0.3-0.1-0.5-0.3-0.7s-0.6-0.2-1.1-0.3l-2.7-0.3c-0.2,0.1-0.4,0.3-0.5,0.5c-0.1,0.2-0.2,0.4-0.2,0.6 c0,0.4,0.2,0.8,0.5,1c0.4,0.2,1,0.3,1.8,0.3C94.2,19.5,95.1,19.2,95.1,18.4z M94.3,11.5c0-0.6-0.1-1-0.4-1.2 c-0.3-0.2-0.7-0.3-1.3-0.3c-0.7,0-1.1,0.1-1.4,0.3c-0.3,0.2-0.4,0.6-0.4,1.2s0.1,1,0.4,1.2c0.3,0.2,0.7,0.3,1.4,0.3 c0.6,0,1.1-0.1,1.3-0.4S94.3,12,94.3,11.5z\" }),\n                      react.createElement(\"path\", { fill:\"#1FBAD6\", d: \"M99.4,16V5l2-0.1v10.8c0,0.3,0.1,0.5,0.2,0.6c0.1,0.1,0.3,0.2,0.6,0.2c0.3,0,0.6,0,0.9-0.1V18 c-0.4,0.1-1,0.2-1.6,0.2c-0.8,0-1.3-0.2-1.7-0.5S99.4,16.8,99.4,16z\" })\n                    )\n                  )\n                );\n              };\n\n            return function App() {\n              var rootElm = react.useRef(null);\n              var _useState = react.useState({\n                width: window.innerWidth,\n                height: window.innerHeight\n              });\n              var windowDimension = _useState[0];\n              var setDimension = _useState[1];\n              react.useEffect(function sideEffect(){\n                function handleResize() {\n                  setDimension({width: window.innerWidth, height: window.innerHeight});\n                };\n                window.addEventListener('resize', handleResize);\n                return function() {window.removeEventListener('resize', handleResize);};\n              }, []);\n              return react.createElement(\n                'div',\n                {style: {position: 'absolute', left: 0, width: '100vw', height: '100vh'}},\n                ${options.mode === EXPORT_HTML_MAP_MODES.READ ? 'LogoSvg(),' : ''}\n                react.createElement(keplerGl.KeplerGl, {\n                  mapboxApiAccessToken: mapboxToken,\n                  id: \"map\",\n                  width: windowDimension.width,\n                  height: windowDimension.height\n                })\n              )\n            }\n          }(React, KeplerGl, MAPBOX_TOKEN));\n\n          const app = (function createReactReduxProvider(react, reactRedux, KeplerElement) {\n            return react.createElement(\n              reactRedux.Provider,\n              {store},\n              react.createElement(KeplerElement, null)\n            )\n          }(React, ReactRedux, KeplerElement));\n          /** END COMPONENTS **/\n\n          /** Render **/\n          (function render(react, reactDOM, app) {\n            reactDOM.render(app, document.getElementById('app'));\n          }(React, ReactDOM, app));\n        </script>\n        <!-- The next script will show how to interact directly with Kepler map store -->\n        <script>\n          /**\n           * Customize map.\n           * In the following section you can use the store object to dispatch Kepler.gl actions\n           * to add new data and customize behavior\n           */\n          (function customize(keplerGl, store) {\n            const datasets = ${JSON.stringify(options.datasets)};\n            const config = ${JSON.stringify(options.config)};\n\n            const loadedData = keplerGl.KeplerGlSchema.load(\n              datasets,\n              config\n            );\n\n            store.dispatch(keplerGl.addDataToMap({\n              datasets: loadedData.datasets,\n              config: loadedData.config,\n              options: {\n                centerMap: false\n              }\n            }));\n          }(KeplerGl, store))\n        </script>\n      </body>\n    </html>\n  `;\n};\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {Blob, URL, atob, Uint8Array, ArrayBuffer, document} from 'global/window';\nimport get from 'lodash.get';\n\nimport {\n  EXPORT_IMG_RESOLUTION_OPTIONS,\n  EXPORT_IMG_RATIO_OPTIONS,\n  RESOLUTIONS,\n  EXPORT_IMG_RATIOS,\n  FourByThreeRatioOption,\n  OneXResolutionOption,\n  ExportImage\n} from '@kepler.gl/constants';\nimport domtoimage from './dom-to-image';\nimport {generateHashId, set} from './utils';\nimport {exportMapToHTML} from './export-map-html';\n\n/**\n * Default file names\n */\nexport const DEFAULT_IMAGE_NAME = 'kepler.gl.png';\nexport const DEFAULT_HTML_NAME = 'kepler.gl.html';\nexport const DEFAULT_JSON_NAME = 'kepler.gl.json';\nexport const DEFAULT_DATA_NAME = 'kepler.gl';\n\n/**\n * Default json export settings\n */\nexport const DEFAULT_EXPORT_JSON_SETTINGS = {\n  hasData: true\n};\n\nconst defaultResolution = OneXResolutionOption;\n\nconst defaultRatio = FourByThreeRatioOption;\n\nexport function isMSEdge(window: Window): boolean {\n  // @ts-ignore msSaveOrOpenBlob was a proprietary addition to the Navigator object, added by Microsoft for Internet Explorer.\n  return Boolean(window.navigator && window.navigator.msSaveOrOpenBlob);\n}\n\nexport function getScaleFromImageSize(imageW = 0, imageH = 0, mapW = 0, mapH = 0) {\n  if ([imageW, imageH, mapW, mapH].some(d => d <= 0)) {\n    return 1;\n  }\n\n  const base = imageW / imageH > 1 ? imageW : imageH;\n  const mapBase = imageW / imageH > 1 ? mapW : mapH;\n  return base / mapBase;\n}\n\nexport function calculateExportImageSize({\n  mapW,\n  mapH,\n  ratio,\n  resolution\n}: {\n  mapW: number;\n  mapH: number;\n  ratio: keyof typeof EXPORT_IMG_RATIOS;\n  resolution: keyof typeof RESOLUTIONS;\n}) {\n  if (mapW <= 0 || mapH <= 0) {\n    return null;\n  }\n\n  const ratioItem = EXPORT_IMG_RATIO_OPTIONS.find(op => op.id === ratio) || defaultRatio;\n\n  const resolutionItem =\n    EXPORT_IMG_RESOLUTION_OPTIONS.find(op => op.id === resolution) || defaultResolution;\n\n  const {width: scaledWidth, height: scaledHeight} = resolutionItem.getSize(mapW, mapH);\n\n  const {width: imageW, height: imageH} = ratioItem.getSize(scaledWidth, scaledHeight);\n\n  const {scale} = ratioItem.id === EXPORT_IMG_RATIOS.CUSTOM ? {scale: undefined} : resolutionItem;\n\n  return {\n    scale,\n    imageW,\n    imageH\n  };\n}\n\nexport function convertToPng(sourceElem: HTMLElement, options) {\n  return domtoimage.toPng(sourceElem, options);\n}\n\nexport function dataURItoBlob(dataURI: string): Blob {\n  const binary = atob(dataURI.split(',')[1]);\n\n  // separate out the mime component\n  const mimeString = dataURI\n    .split(',')[0]\n    .split(':')[1]\n    .split(';')[0];\n\n  // write the bytes of the string to an ArrayBuffer\n  const ab = new ArrayBuffer(binary.length);\n\n  // create a view into the buffer\n  const ia = new Uint8Array(ab);\n\n  for (let i = 0; i < binary.length; i++) {\n    ia[i] = binary.charCodeAt(i);\n  }\n\n  return new Blob([ab], {type: mimeString});\n}\n\nexport function downloadFile(fileBlob: Blob, fileName: string) {\n  if (isMSEdge(window)) {\n    (window.navigator as any).msSaveOrOpenBlob(fileBlob, fileName);\n  } else {\n    const url = URL.createObjectURL(fileBlob);\n\n    const link = document.createElement('a');\n    link.setAttribute('href', url);\n    link.setAttribute('download', fileName);\n\n    document.body.appendChild(link);\n    // in some cases where maps are embedded, e.g. need to\n    // create and dispatch an event so that the browser downloads\n    // the file instead of navigating to the url\n    const evt = new MouseEvent('click', {\n      view: window,\n      bubbles: false,\n      cancelable: true\n    });\n    link.dispatchEvent(evt);\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n  }\n}\n\n/**\n * Whether color is rgb\n * @returns\n */\nexport function exportImage(uiStateExportImage: ExportImage, filename = DEFAULT_IMAGE_NAME) {\n  const {imageDataUri} = uiStateExportImage;\n  if (imageDataUri) {\n    const file = dataURItoBlob(imageDataUri);\n    downloadFile(file, filename);\n  }\n}\n\nexport function exportToJsonString(data) {\n  try {\n    return JSON.stringify(data);\n  } catch (e) {\n    if (e instanceof TypeError) return e.message;\n    // Non-Standard Error Object Property\n    return (e as any).description;\n  }\n}\n\nexport function getMapJSON(state, options = DEFAULT_EXPORT_JSON_SETTINGS) {\n  const {hasData} = options;\n  const schema = state.visState.schema;\n\n  if (!hasData) {\n    return schema.getConfigToSave(state);\n  }\n\n  let mapToSave = schema.save(state);\n  // add file name if title is not provided\n  const title = get(mapToSave, ['info', 'title']);\n  if (!title || !title.length) {\n    mapToSave = set(['info', 'title'], `keplergl_${generateHashId(6)}`, mapToSave);\n  }\n  return mapToSave;\n}\n\nexport function exportJson(state, options: any = {}) {\n  const map = getMapJSON(state, options);\n  map.info.source = 'kepler.gl';\n  const fileBlob = new Blob([exportToJsonString(map)], {type: 'application/json'});\n  const fileName = state.appName ? `${state.appName}.json` : DEFAULT_JSON_NAME;\n  downloadFile(fileBlob, fileName);\n}\n\nexport function exportHtml(state, options) {\n  const {userMapboxToken, exportMapboxAccessToken, mode} = options;\n\n  const data = {\n    ...getMapJSON(state),\n    mapboxApiAccessToken:\n      (userMapboxToken || '') !== '' ? userMapboxToken : exportMapboxAccessToken,\n    mode\n  };\n\n  const fileBlob = new Blob([exportMapToHTML(data)], {type: 'text/html'});\n  downloadFile(fileBlob, state.appName ? `${state.appName}.html` : DEFAULT_HTML_NAME);\n}\n\nexport function exportMap(state, options = DEFAULT_EXPORT_JSON_SETTINGS) {\n  const {imageDataUri} = state.uiState.exportImage;\n  const thumbnail: Blob | null = imageDataUri ? dataURItoBlob(imageDataUri) : null;\n  const mapToSave = getMapJSON(state, options);\n\n  return {\n    map: mapToSave,\n    thumbnail\n  };\n}\n\nconst exporters = {\n  exportImage,\n  exportJson,\n  exportHtml\n};\n\nexport default exporters;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {setParameters} from '@luma.gl/core';\nimport {LAYER_BLENDINGS} from '@kepler.gl/constants';\nimport GL from '@luma.gl/constants';\n\nconst getGlConst = d => GL[d];\n\nexport function setLayerBlending(gl, layerBlending) {\n  const blending = LAYER_BLENDINGS[layerBlending];\n  const {blendFunc, blendEquation} = blending;\n\n  setParameters(gl, {\n    [GL.BLEND]: true,\n    ...(blendFunc\n      ? {\n          blendFunc: blendFunc.map(getGlConst),\n          blendEquation: Array.isArray(blendEquation)\n            ? blendEquation.map(getGlConst)\n            : getGlConst(blendEquation)\n        }\n      : {})\n  });\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {isObject} from './utils';\nimport Console from 'global/console';\n\n// Flat messages since react-intl does not seem to support nested structures\n// Adapted from https://medium.com/siren-apparel-press/internationalization-and-localization-of-sirenapparel-eu-sirenapparel-us-and-sirenapparel-asia-ddee266066a2\nexport const flattenMessages = (nestedMessages, prefix = '') => {\n  return Object.keys(nestedMessages).reduce((messages, key) => {\n    const value = nestedMessages[key];\n    const prefixedKey = prefix ? `${prefix}.${key}` : key;\n    if (typeof value === 'string') {\n      messages[prefixedKey] = value;\n    } else {\n      Object.assign(messages, flattenMessages(value, prefixedKey));\n    }\n    return messages;\n  }, {});\n};\n\nexport const mergeMessages = (defaultMessages, userMessages) => {\n  if (!isObject(userMessages) || !isObject(userMessages.en)) {\n    Console.error(\n      'message should be an object and contain at least the `en` translation. Read more at https://docs.kepler.gl/docs/api-reference/localization'\n    );\n\n    return defaultMessages;\n  }\n\n  const userEnFlat = flattenMessages(userMessages.en);\n  return Object.keys(defaultMessages).reduce(\n    (acc, key) => ({\n      ...acc,\n      [key]:\n        key === 'en'\n          ? {...defaultMessages.en, ...userEnFlat}\n          : {...defaultMessages[key], ...userEnFlat, ...flattenMessages(userMessages[key] || {})}\n    }),\n    {}\n  );\n};\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport throttle from 'lodash.throttle';\nimport {useEffect, useRef, useState, RefObject} from 'react';\nimport ResizeObserver from 'resize-observer-polyfill';\n\nexport interface Dimensions {\n  readonly height: number;\n  readonly width: number;\n}\n\nconst DEFAULT_THROTTLE_DELAY = 100;\n\n// Using a single ResizeObserver for all elements can be 10x\n// more performant than using a separate ResizeObserver per element\n// https://groups.google.com/a/chromium.org/forum/#!msg/blink-dev/z6ienONUb5A/F5-VcUZtBAAJ\nlet _observerRegistry;\n\nfunction getObserverRegistry() {\n  if (_observerRegistry === undefined) {\n    const callbacks = new Map();\n    const resizeObserver = new ResizeObserver((entries, observer) => {\n      for (const entry of entries) {\n        callbacks.get(entry.target)?.(entry, observer);\n      }\n    });\n    _observerRegistry = {\n      subscribe(target, callback) {\n        if (target instanceof Element) {\n          resizeObserver.observe(target);\n          callbacks.set(target, callback);\n        }\n      },\n      unsubscribe(target) {\n        if (target instanceof Element) {\n          resizeObserver.unobserve(target);\n          callbacks.delete(target);\n        }\n      }\n    };\n  }\n  return _observerRegistry;\n}\n\nexport function observeDimensions(\n  target: Element,\n  handleResize: (size: Dimensions | null) => void,\n  throttleDelay = DEFAULT_THROTTLE_DELAY\n) {\n  const registry = getObserverRegistry();\n  const handler = throttleDelay > 0 ? throttle(handleResize, throttleDelay) : handleResize;\n  registry.subscribe(target, entry => handler(getSize(target, entry)));\n}\n\nexport function unobserveDimensions(target: Element) {\n  const registry = getObserverRegistry();\n  registry.unsubscribe(target);\n}\n\nfunction getSize(node, entry): Dimensions | null {\n  if (entry.contentRect) {\n    const {width, height} = entry.contentRect;\n    return {width, height};\n  }\n  if (node.getBoundingClientRect) {\n    const {width, height} = node.getBoundingClientRect();\n    return {width, height};\n  }\n  return null;\n}\n\n/**\n * Usage example:\n * const [ref, dimensions] = useDimensions<HTMLDivElement>();\n *\n * @param throttleDelay\n * @returns\n */\nexport default function useDimensions<T extends Element>(\n  nodeRef?: RefObject<T>,\n  throttleDelay = DEFAULT_THROTTLE_DELAY\n): [RefObject<T>, Dimensions | null] {\n  const ref = nodeRef ?? useRef<T>(null);\n  const [size, setSize] = useState(null);\n\n  useEffect(() => {\n    const {current} = ref;\n    if (!current) {\n      return;\n    }\n\n    let didUnobserve = false;\n    observeDimensions(\n      current,\n      entry => {\n        if (didUnobserve) return;\n        const newSize = getSize(current, entry);\n        if (newSize) {\n          // @ts-ignore\n          setSize(newSize);\n        }\n      },\n      throttleDelay\n    );\n    return () => {\n      didUnobserve = true;\n      unobserveDimensions(current);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [throttleDelay, ref?.current]);\n\n  return [ref, size];\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport geoViewport from '@mapbox/geo-viewport';\n\nimport WebMercatorViewport from 'viewport-mercator-project';\nimport Console from 'global/console';\n\nexport const MAPBOX_TILE_SIZE = 512;\n\nfunction isLat(num) {\n  return Number.isFinite(num) && num <= 90 && num >= -90;\n}\nfunction isLng(num) {\n  return Number.isFinite(num) && num <= 180 && num >= -180;\n}\n\n/**\n * bounds should be [minLng, minLat, maxLng, maxLat]\n * @param {*} bounds\n */\nexport function validateBounds(bounds) {\n  // array: [ -180, -85.05112877980659, 180, 85.0511287798066 ]\n  // validate bounds\n  if (\n    Array.isArray(bounds) &&\n    bounds.length === 4 &&\n    [bounds[0], bounds[2]].every(isLng) &&\n    [bounds[1], bounds[3]].every(isLat)\n  ) {\n    return bounds;\n  }\n  return null;\n}\n\nexport function getCenterAndZoomFromBounds(bounds, {width, height}) {\n  const validBounds = validateBounds(bounds);\n  if (!validBounds) {\n    Console.warn('invalid map bounds provided');\n    return null;\n  }\n\n  // viewport(bounds, dimensions, minzoom, maxzoom, tileSize, allowFloat)\n  const {zoom} = geoViewport.viewport(\n    bounds,\n    [width, height],\n    undefined,\n    undefined,\n    MAPBOX_TILE_SIZE\n  );\n  // center being calculated by geo-vieweport.viewport has a complex logic that\n  // projects and then unprojects the coordinates to determine the center\n  // Calculating a simple average instead as that is the expected behavior in most of cases\n  const center = [(bounds[0] + bounds[2]) / 2, (bounds[1] + bounds[3]) / 2];\n\n  return {zoom, center};\n}\n\n/**\n * Add extra info about screen space position and world position to the event.\n * @param {*} event Event to normalize.\n * @param {*} viewport Current viewport.\n * @returns Normalized event with extra information compatible with React-map-gl MapLayerMouseEvent\n * https://visgl.github.io/react-map-gl/docs/api-reference/types#maplayermouseevent\n */\nexport function normalizeEvent(event: any, viewport: WebMercatorViewport) {\n  var bounds = event.target?.getBoundingClientRect();\n  if (!bounds) {\n    return event;\n  }\n\n  var x = event.clientX - bounds.left;\n  var y = event.clientY - bounds.top;\n  if (!Number.isFinite(x) || !Number.isFinite(y)) {\n    return event;\n  }\n\n  event.point = [x, y];\n  const location = viewport.unproject(event.point, {targetZ: 0});\n  event.lngLat = [location[0], location[1]];\n\n  return event;\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\n/**\n * This method validates mapbox token.\n * This token provides a simple synchronous validation\n * @param {string} token the Mapbox token to validate\n * @return {boolean} true if token is valid, false otherwise\n */\nexport const validateToken = (token: string): boolean => (token || '') !== '';\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport memoize from 'lodash.memoize';\nimport clondDeep from 'lodash.clonedeep';\nimport {\n  DEFAULT_LAYER_GROUPS,\n  DEFAULT_MAPBOX_API_URL,\n  NO_MAP_ID,\n  EMPTY_MAPBOX_STYLE\n} from '@kepler.gl/constants';\nimport {BaseMapStyle, LayerGroup, MapState} from '@kepler.gl/types';\n\nconst mapUrlRg = /^mapbox:\\/\\/styles\\/[-a-z0-9]{2,256}\\/[-a-z0-9]{2,256}/;\nconst httpRg = /^(?=(http:|https:))/;\n\nexport function getDefaultLayerGroupVisibility({layerGroups = []}: {layerGroups: LayerGroup[]}) {\n  return layerGroups.reduce(\n    (accu, layer) => ({\n      ...accu,\n      [layer.slug]: layer.defaultVisibility\n    }),\n    {}\n  );\n}\n\nconst resolver = ({\n  id,\n  mapStyle,\n  visibleLayerGroups = {}\n}: {\n  id?: string;\n  mapStyle: BaseMapStyle;\n  visibleLayerGroups: {[id: string]: LayerGroup | boolean} | false;\n}) =>\n  `${id}:${Object.keys(visibleLayerGroups)\n    .filter(d => visibleLayerGroups[d])\n    .sort()\n    .join('-')}`;\n\n/**\n * Edit preset map style to keep only visible layers\n *\n * @param mapStyle - preset map style\n * @param visibleLayerGroups - visible layers of top map\n * @returns top map style\n */\nexport const editTopMapStyle = memoize(\n  ({\n    id,\n    mapStyle,\n    visibleLayerGroups\n  }: {\n    id?: string;\n    mapStyle: BaseMapStyle;\n    visibleLayerGroups: {[id: string]: LayerGroup | boolean} | false;\n  }) => {\n    const visibleFilters = (mapStyle.layerGroups || [])\n      .filter(lg => visibleLayerGroups[lg.slug])\n      .map(lg => lg.filter);\n\n    // if top map\n    // keep only visible layers\n    // @ts-expect-error\n    const filteredLayers = mapStyle.style.layers.filter(layer =>\n      visibleFilters.some(match => match(layer))\n    );\n\n    return {\n      ...mapStyle.style,\n      layers: filteredLayers\n    };\n  },\n  resolver\n);\n\n/**\n * Edit preset map style to filter out invisible layers\n *\n * @param {Object} mapStyle - preset map style\n * @param {Object} visibleLayerGroups - visible layers of bottom map\n * @returns {Object} bottom map style\n */\nexport const editBottomMapStyle = memoize(({id, mapStyle, visibleLayerGroups}) => {\n  if (id === NO_MAP_ID) {\n    return EMPTY_MAPBOX_STYLE;\n  }\n\n  const invisibleFilters = (mapStyle.layerGroups || [])\n    .filter(lg => !visibleLayerGroups[lg.slug])\n    .map(lg => lg.filter);\n\n  // if bottom map\n  // filter out invisible layers\n  const filteredLayers = mapStyle.style.layers.filter(layer =>\n    invisibleFilters.every(match => !match(layer))\n  );\n\n  return {\n    ...mapStyle.style,\n    layers: filteredLayers\n  };\n}, resolver);\n\n// valid style url\n// mapbox://styles/uberdata/cjfyl03kp1tul2smf5v2tbdd4\n// lowercase letters, numbers and dashes only.\nexport function isValidStyleUrl(url) {\n  return typeof url === 'string' && Boolean(url.match(mapUrlRg) || url.match(httpRg));\n}\n\nexport function getStyleDownloadUrl(styleUrl, accessToken, mapboxApiUrl) {\n  if (styleUrl.startsWith('http')) {\n    return styleUrl;\n  }\n\n  // mapbox://styles/jckr/cjhcl0lxv13di2rpfoytdbdyj\n  if (styleUrl.startsWith('mapbox://styles')) {\n    const styleId = styleUrl.replace('mapbox://styles/', '');\n\n    // https://api.mapbox.com/styles/v1/heshan0131/cjg1bfumo1cwm2rlrjxkinfgw?pluginName=Keplergl&access_token=<token>\n    return `${mapboxApiUrl ||\n      DEFAULT_MAPBOX_API_URL}/styles/v1/${styleId}?pluginName=Keplergl&access_token=${accessToken}`;\n  }\n\n  // style url not recognized\n  return null;\n}\n\n/**\n * Generate static map image from style Url to be used as icon\n * @param param\n * @param param.styleUrl\n * @param param.mapboxApiAccessToken\n * @param param.mapboxApiUrl\n * @param param.mapState\n * @param param.mapW\n * @param param.mapH\n */\nexport function getStyleImageIcon({\n  styleUrl,\n  mapboxApiAccessToken,\n  mapboxApiUrl = DEFAULT_MAPBOX_API_URL,\n  mapState = {\n    longitude: -122.3391,\n    latitude: 37.7922,\n    zoom: 9\n  },\n  mapW = 400,\n  mapH = 300\n}: {\n  styleUrl: string;\n  mapboxApiAccessToken: string;\n  mapboxApiUrl?: string;\n  mapState?: Partial<MapState>;\n  mapW?: number;\n  mapH?: number;\n}) {\n  const styleId = styleUrl.replace('mapbox://styles/', '');\n\n  return (\n    `${mapboxApiUrl}/styles/v1/${styleId}/static/` +\n    `${mapState.longitude},${mapState.latitude},${mapState.zoom},0,0/` +\n    `${mapW}x${mapH}` +\n    `?access_token=${mapboxApiAccessToken}&logo=false&attribution=false`\n  );\n}\n\nexport function scaleMapStyleByResolution(mapboxStyle, scale) {\n  if (scale !== 1 && mapboxStyle) {\n    const labelLayerGroup = DEFAULT_LAYER_GROUPS.find(lg => lg.slug === 'label');\n    // @ts-ignore\n    const {filter: labelLayerFilter} = labelLayerGroup;\n    const zoomOffset = Math.log2(scale);\n\n    const copyStyle = clondDeep(mapboxStyle);\n    (copyStyle.layers || []).forEach(d => {\n      // edit minzoom and maxzoom\n      if (d.maxzoom) {\n        d.maxzoom = Math.max(d.maxzoom + zoomOffset, 1);\n      }\n\n      if (d.minzoom) {\n        d.minzoom = Math.max(d.minzoom + zoomOffset, 1);\n      }\n\n      // edit text size\n      if (labelLayerFilter(d)) {\n        if (d.layout && d.layout['text-size'] && Array.isArray(d.layout['text-size'].stops)) {\n          d.layout['text-size'].stops.forEach(stop => {\n            // zoom\n            stop[0] = Math.max(stop[0] + zoomOffset, 1);\n            // size\n            stop[1] *= scale;\n          });\n        }\n      }\n    });\n\n    return copyStyle;\n  }\n\n  return mapboxStyle;\n}\n\n/**\n * When switch to a new style, try to keep current layer group visibility\n * by merging default and current\n * @param {Object} defaultLayerGroup\n * @param {Object} currentLayerGroup\n * @return {Object} mergedLayerGroups\n */\nexport function mergeLayerGroupVisibility(defaultLayerGroup, currentLayerGroup) {\n  return Object.keys(defaultLayerGroup).reduce(\n    (accu, key) => ({\n      ...accu,\n      ...(currentLayerGroup.hasOwnProperty(key) ? {[key]: currentLayerGroup[key]} : {})\n    }),\n    defaultLayerGroup\n  );\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {MAP_INFO_CHARACTER} from '@kepler.gl/constants';\n\nexport function isValidMapInfo(mapInfo) {\n  return (\n    mapInfo.title.length &&\n    mapInfo.title.length <= MAP_INFO_CHARACTER.title &&\n    (!mapInfo.description.length || mapInfo.description.length <= MAP_INFO_CHARACTER.description)\n  );\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport cloneDeep from 'lodash.clonedeep';\n\n/**\n * Add new layers to both existing maps\n * @param {Object} splitMaps\n * @param {Object|Array<Object>} layers\n * @returns {Array<Object>} new splitMaps\n */\nexport function addNewLayersToSplitMap(splitMaps, layers) {\n  const newLayers = Array.isArray(layers) ? layers : [layers];\n\n  if (!splitMaps.length || !newLayers.length) {\n    return splitMaps;\n  }\n\n  // add new layer to both maps,\n  // don't override, if layer.id is already in splitMaps\n  return splitMaps.map(settings => ({\n    ...settings,\n    layers: {\n      ...settings.layers,\n      ...newLayers.reduce(\n        (accu, newLayer) =>\n          // @ts-ignore\n          newLayer.id in settings.layers || !newLayer.config.isVisible\n            ? accu\n            : {\n                ...accu,\n                [newLayer.id]: newLayer.config.isVisible\n              },\n        {}\n      )\n    }\n  }));\n}\n\n/**\n * Remove an existing layer from split map settings\n * @param {Object} splitMaps\n * @param {Object} layer\n * @returns {Object} Maps of custom layer objects\n */\nexport function removeLayerFromSplitMaps(splitMaps, layer) {\n  if (!splitMaps.length) {\n    return splitMaps;\n  }\n  return splitMaps.map(settings => {\n    // eslint-disable-next-line no-unused-vars\n    const {[layer.id]: _, ...newLayers} = settings.layers;\n    return {\n      ...settings,\n      layers: newLayers\n    };\n  });\n}\n\n/**\n * This method will compute the default maps layer settings\n * based on the current layers visibility\n * @param {Array<Object>} layers\n * @returns {Array<Object>} layer visibility for each panel\n */\nexport function getInitialMapLayersForSplitMap(layers) {\n  return layers\n    .filter(layer => layer.config.isVisible)\n    .reduce(\n      (newLayers, currentLayer) => ({\n        ...newLayers,\n        [currentLayer.id]: currentLayer.config.isVisible\n      }),\n      {}\n    );\n}\n\n/**\n * This method will get default splitMap settings based on existing layers\n * @param {Array<Object>} layers\n * @param {Object} options\n * @returns {Array<Object>} split map settings\n */\nexport function computeSplitMapLayers(layers, options?: {duplicate: boolean}) {\n  const mapLayers = getInitialMapLayersForSplitMap(layers);\n  const {duplicate} = options || {};\n  // show all visible layers in left map, leave right map empty\n  return [{layers: mapLayers}, {layers: duplicate ? cloneDeep(mapLayers) : {}}];\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {arrayMove} from '@dnd-kit/sortable';\nimport SunCalc from 'suncalc';\nimport cloneDeep from 'lodash.clonedeep';\n\nimport {PostProcessEffect} from '@deck.gl/core/typed';\n\nimport {\n  LIGHT_AND_SHADOW_EFFECT,\n  LIGHT_AND_SHADOW_EFFECT_TIME_MODES,\n  FILTER_TYPES,\n  FILTER_VIEW_TYPES\n} from '@kepler.gl/constants';\nimport {VisState} from '@kepler.gl/schemas';\nimport {MapState, Effect, EffectProps, EffectDescription} from '@kepler.gl/types';\nimport {findById} from './utils';\nimport {clamp} from './data-utils';\n\nexport function computeDeckEffects({\n  visState,\n  mapState\n}: {\n  visState: VisState;\n  mapState: MapState;\n}): PostProcessEffect[] {\n  // TODO: 1) deck effects per deck context 2) preserved between draws\n  return visState.effectOrder\n    .map(effectId => {\n      const effect = findById(effectId)(visState.effects) as Effect | undefined;\n      if (effect?.isEnabled && effect.deckEffect) {\n        updateEffect({visState, mapState, effect});\n        return effect.deckEffect;\n      }\n      return null;\n    })\n    .filter(effect => effect);\n}\n\n/**\n * Always keep light & shadow effect at the top\n */\nexport const fixEffectOrder = (effects: Effect[], effectOrder: string[]): string[] => {\n  const lightShadowEffect = effects.find(effect => effect.type === LIGHT_AND_SHADOW_EFFECT.type);\n  if (lightShadowEffect) {\n    const ind = effectOrder.indexOf(lightShadowEffect.id);\n    if (ind > 0) {\n      effectOrder.splice(ind, 1);\n      effectOrder.unshift(lightShadowEffect.id);\n    }\n  }\n  return effectOrder;\n};\n\nexport function reorderEffectOrder(\n  effectOrder: string[],\n  originEffectId: string,\n  destinationEffectId: string\n): string[] {\n  const activeIndex = effectOrder.indexOf(originEffectId);\n  const overIndex = effectOrder.indexOf(destinationEffectId);\n  return arrayMove(effectOrder, activeIndex, overIndex);\n}\n\n/**\n * Check if the current time is daytime at the given location\n * @param {number} lat Latitude\n * @param {number} lon Longitude\n * @param {number} timestamp Milliseconds since the Unix Epoch\n * @returns boolean\n */\nfunction isDaytime(lat, lon, timestamp) {\n  const date = new Date(timestamp);\n  const {sunrise, sunset} = SunCalc.getTimes(date, lat, lon);\n  return date >= sunrise && date <= sunset;\n}\n\n/**\n * Update effect to match latest vis and map states\n */\nfunction updateEffect({visState, mapState, effect}) {\n  if (effect.type === LIGHT_AND_SHADOW_EFFECT.type) {\n    let {timestamp, timeMode} = effect.parameters;\n    const sunLight = effect.deckEffect.directionalLights[0];\n\n    // set timestamp for shadow\n    if (timeMode === LIGHT_AND_SHADOW_EFFECT_TIME_MODES.current) {\n      timestamp = Date.now();\n      sunLight.timestamp = timestamp;\n    } else if (timeMode === LIGHT_AND_SHADOW_EFFECT_TIME_MODES.animation) {\n      timestamp = visState.animationConfig.currentTime ?? 0;\n      if (!timestamp) {\n        const filter = visState.filters.find(\n          filter =>\n            filter.type === FILTER_TYPES.timeRange &&\n            (filter.view === FILTER_VIEW_TYPES.enlarged || filter.syncedWithLayerTimeline)\n        );\n        if (filter) {\n          timestamp = filter.value?.[0] ?? 0;\n        }\n      }\n      sunLight.timestamp = timestamp;\n    }\n\n    // output uniform shadow during nighttime\n    if (isDaytime(mapState.latitude, mapState.longitude, timestamp)) {\n      effect.deckEffect.outputUniformShadow = false;\n      sunLight.intensity = effect.parameters.sunLightIntensity;\n    } else {\n      effect.deckEffect.outputUniformShadow = true;\n      sunLight.intensity = 0;\n    }\n  }\n}\n\n/**\n * Validates parameters for an effect, clamps numbers to allowed ranges\n * or applies default values in case of wrong non-numeric values.\n * All unknown properties aren't modified.\n * @param parameters Parameters candidate for an effect.\n * @param effectDescription Description of an effect.\n * @returns\n */\nexport function validateEffectParameters(\n  parameters: EffectProps['parameters'] = {},\n  effectDescription: EffectDescription['parameters']\n): EffectProps['parameters'] {\n  const result = cloneDeep(parameters);\n  effectDescription.forEach(description => {\n    const {defaultValue, name, type, min, max} = description;\n\n    if (!result.hasOwnProperty(name)) return;\n    const property = result[name];\n\n    if (type === 'color' || type === 'array') {\n      if (!Array.isArray(defaultValue)) return;\n      if (property.length !== defaultValue?.length) {\n        result[name] = defaultValue;\n        return;\n      }\n      defaultValue.forEach((v, i) => {\n        let value = property[i];\n        value = Number.isFinite(value) ? clamp([min, max], value) : defaultValue[i] ?? min;\n        if (value !== undefined) {\n          property[i] = value;\n        }\n      });\n      return;\n    }\n\n    const value = Number.isFinite(property) ? clamp([min, max], property) : defaultValue ?? min;\n\n    if (value !== undefined) {\n      result[name] = value;\n    }\n  });\n  return result;\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\n/**\n * Determines whether a Map Style is using Mapbox Tiles\n * @param {any} mapStyle the mapStyle to check\n * @returns true if the style is using Mapbox tiles\n */\nexport function isStyleUsingMapboxTiles(mapStyle) {\n  const sources = mapStyle.stylesheet?.sources || {};\n\n  return Object.keys(sources).some(sourceId => {\n    const {url, tiles} = sources[sourceId] || {};\n\n    if (url) {\n      return url.toLowerCase().startsWith('mapbox://');\n    }\n\n    if (tiles) {\n      return tiles.some(tileUrl => tileUrl.toLowerCase().startsWith('mapbox://'));\n    }\n\n    return false;\n  });\n}\n\nexport const transformRequest = (url: string): {url: string} => {\n  return {\n    url\n  };\n};\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport WebMercatorViewport from 'viewport-mercator-project';\n\nimport {TRANSITION_DURATION} from '@kepler.gl/constants';\nimport {SplitMapLayers, SplitMap, Viewport, MapState} from '@kepler.gl/types';\n\nexport const onViewPortChange = (\n  viewState: Viewport,\n  onUpdateMap: (next: any, mapIndex: number) => any,\n  onViewStateChange?: (next: any) => void | null,\n  primary: boolean = false,\n  mapIndex: number = 0\n): void => {\n  const {width = 0, height = 0, ...restViewState} = viewState;\n  // react-map-gl sends 0,0 dimensions during initialization\n  // after we have received proper dimensions from observeDimensions\n  const next = {\n    ...(width > 0 && height > 0 ? viewState : restViewState),\n    // enabling transition in two maps may lead to endless update loops\n    transitionDuration: primary ? TRANSITION_DURATION : 0\n  };\n  if (onViewStateChange && typeof onViewStateChange === 'function') {\n    onViewStateChange(next);\n  }\n\n  onUpdateMap(next, mapIndex);\n};\n\nexport const getMapLayersFromSplitMaps = (\n  splitMaps: SplitMap[],\n  mapIndex?: number\n): SplitMapLayers | undefined | null => {\n  return splitMaps[mapIndex || 0]?.layers;\n};\n\n/**\n * Generates a viewport from a map state.\n * @param {*} mapState\n * @returns A viewport.\n */\nexport const getViewportFromMapState = (mapState: MapState): Viewport => {\n  return new WebMercatorViewport(mapState);\n};\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {DataContainerInterface} from './data-container-interface';\n\n/**\n * Setting for shared row optimization.\n * - False/undefined indicates that unique row objects should be used (default).\n * - True indicates that a single temporary row object should be created and used without extra allocations.\n * - A DataRow object indicates that the row should be used as a temporary shared row.\n * When used, the content of the shared row isn't preserved between calls.\n */\nexport type SharedRowOptions = DataRow | boolean | undefined;\n/**\n * Return type for createSharedRow:\n * - DataRow object that should be used as shared row.\n * - Falsy values indicate that shared row object shouldn't be used.\n */\nexport type SharedRowOptionsResult = DataRow | false | undefined;\n\nexport class DataRow {\n  _dataContainer: DataContainerInterface | null;\n\n  _rowIndex: number;\n\n  /**\n   * Creates new DataRow.\n   * @param dataContainer Data container where data is stored. Can be initialized with null for shared rows.\n   * @param rowIndex Index of a row in the data container.\n   */\n  constructor(dataContainer: DataContainerInterface | null, rowIndex: number) {\n    this._dataContainer = dataContainer;\n    this._rowIndex = rowIndex;\n  }\n\n  /**\n   * Conditionally creates a DataRow object.\n   * @param sharedRowDesc Accepts forllowing options:\n   * - true indicates that new DataRow should be created.\n   * - falsy value or a DataRow object is passed through without any change.\n   * @returns A new DataRow object or unchanged input argument.\n   */\n  static createSharedRow(sharedRowDesc: SharedRowOptions): SharedRowOptionsResult {\n    if (sharedRowDesc === true) {\n      return new DataRow(null, 0);\n    }\n    return sharedRowDesc;\n  }\n\n  /**\n   * Returns the value stored at the specified index in the row.\n   * @param columnIndex Index of the requested field in the row.\n   * @returns Value at the index.\n   */\n  valueAt(columnIndex: number): any {\n    return this._dataContainer?.valueAt(this._rowIndex, columnIndex);\n  }\n\n  /**\n   * Returns the row represented as an array.\n   * @returns The row represented as an array.\n   */\n  values(): any[] {\n    return this._dataContainer ? this._dataContainer.rowAsArray(this._rowIndex) : [];\n  }\n\n  /**\n   * Setup a row object. The method is used by shared rows to prevent excessive allocations.\n   * @param dataContainer Data container.\n   * @param rowIndex Index of a row in the data container.\n   */\n  setSource(dataContainer: DataContainerInterface, rowIndex: number): void {\n    this._dataContainer = dataContainer;\n    this._rowIndex = rowIndex;\n  }\n\n  /**\n   * Creates a new array populated with the results of calling the provided function\n   * on every element of the row.\n   * @param handler The callback is called with the following arguments:\n   * - elem: The current element being processed in the row.\n   * - index: The index of the current element being processed in the row.\n   * @returns A new array with each element being the result of the func callback.\n   */\n  map(handler: (elem: any, index: number) => any): any[] {\n    const numColumns = this._dataContainer?.numColumns() || 0;\n    const out: any[] = [];\n    for (let column = 0; column < numColumns; ++column) {\n      out[column] = handler(this.valueAt(column), column);\n    }\n    return out;\n  }\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport * as arrow from 'apache-arrow';\nimport {console as globalConsole} from 'global/window';\nimport {DATA_TYPES as AnalyzerDATA_TYPES} from 'type-analyzer';\nimport {Field} from '@kepler.gl/types';\nimport {ALL_FIELD_TYPES} from '@kepler.gl/constants';\n\nimport {DataRow, SharedRowOptions} from './data-row';\nimport {DataContainerInterface, RangeOptions} from './data-container-interface';\n\ntype ArrowDataContainerInput = {\n  cols: arrow.Vector[];\n  fields?: Field[];\n};\n\n/**\n * @param dataContainer\n * @param sharedRow\n */\nfunction* rowsIterator(dataContainer: DataContainerInterface, sharedRow: SharedRowOptions) {\n  const numRows = dataContainer.numRows();\n  for (let rowIndex = 0; rowIndex < numRows; ++rowIndex) {\n    yield dataContainer.row(rowIndex, sharedRow);\n  }\n}\n\n/**\n * @param dataContainer\n * @param columnIndex\n */\nfunction* columnIterator(dataContainer: DataContainerInterface, columnIndex: number) {\n  const numRows = dataContainer.numRows();\n  for (let rowIndex = 0; rowIndex < numRows; ++rowIndex) {\n    yield dataContainer.valueAt(rowIndex, columnIndex);\n  }\n}\n\n/**\n * A data container where all data is stored in raw Arrow table\n */\nexport class ArrowDataContainer implements DataContainerInterface {\n  _cols: arrow.Vector[];\n  _numColumns: number;\n  _numRows: number;\n  _fields: Field[];\n  _numChunks: number;\n  // cache column data to make valueAt() faster\n  // _colData: any[][];\n\n  constructor(data: ArrowDataContainerInput) {\n    if (!data.cols) {\n      throw Error('ArrowDataContainer: no columns provided');\n    }\n\n    if (!Array.isArray(data.cols)) {\n      throw Error(\"ArrowDataContainer: columns object isn't an array\");\n    }\n\n    this._cols = data.cols;\n    this._numColumns = data.cols.length;\n    this._numRows = data.cols[0].length;\n    this._fields = data.fields || [];\n    this._numChunks = data.cols[0].data.length;\n    // this._colData = data.cols.map(c => c.toArray());\n  }\n\n  update(updateData: arrow.Vector<any>[]) {\n    this._cols = updateData;\n    this._numColumns = this._cols.length;\n    this._numRows = this._cols[0].length;\n    this._numChunks = this._cols[0].data.length;\n    // cache column data to make valueAt() faster\n    // this._colData = this._cols.map(c => c.toArray());\n  }\n\n  numChunks(): number {\n    return this._numChunks;\n  }\n\n  numRows(): number {\n    return this._numRows;\n  }\n\n  numColumns(): number {\n    return this._numColumns;\n  }\n\n  valueAt(rowIndex: number, columnIndex: number): any {\n    // return this._colData[columnIndex][rowIndex];\n    return this._cols[columnIndex].get(rowIndex);\n  }\n\n  row(rowIndex: number, sharedRow?: SharedRowOptions): DataRow {\n    const tSharedRow = DataRow.createSharedRow(sharedRow);\n    if (tSharedRow) {\n      tSharedRow.setSource(this, rowIndex);\n      return tSharedRow;\n    }\n\n    return new DataRow(this, rowIndex);\n  }\n\n  rowAsArray(rowIndex: number): any[] {\n    // return this._colData.map(col => col[rowIndex]);\n    return this._cols.map(col => col.get(rowIndex));\n  }\n\n  rows(sharedRow: SharedRowOptions) {\n    const tSharedRow = DataRow.createSharedRow(sharedRow);\n    return rowsIterator(this, tSharedRow);\n  }\n\n  column(columnIndex: number) {\n    return columnIterator(this, columnIndex);\n  }\n\n  getColumn(columnIndex: number): arrow.Vector {\n    return this._cols[columnIndex];\n  }\n\n  getField(columnIndex: number): Field {\n    return this._fields[columnIndex];\n  }\n\n  flattenData(): any[][] {\n    const data: any[][] = [];\n    for (let i = 0; i < this._numRows; ++i) {\n      data.push(this.rowAsArray(i));\n    }\n    return data;\n  }\n\n  getPlainIndex(): number[] {\n    return [...Array(this._numRows).keys()];\n  }\n\n  map<T>(\n    func: (row: DataRow, index: number) => T,\n    sharedRow?: SharedRowOptions,\n    options: RangeOptions = {}\n  ): T[] {\n    const tSharedRow = DataRow.createSharedRow(sharedRow);\n\n    const {start = 0, end = this.numRows()} = options;\n    const endRow = Math.min(this.numRows(), end);\n\n    const out: T[] = [];\n    for (let rowIndex = start; rowIndex < endRow; ++rowIndex) {\n      const row = this.row(rowIndex, tSharedRow);\n      out.push(func(row, rowIndex));\n    }\n    return out;\n  }\n\n  mapIndex<T>(func: ({index}, dc: DataContainerInterface) => T, options: RangeOptions = {}): T[] {\n    const {start = 0, end = this.numRows()} = options;\n    const endRow = Math.min(this.numRows(), end);\n\n    const out: T[] = [];\n    for (let rowIndex = start; rowIndex < endRow; ++rowIndex) {\n      out.push(func({index: rowIndex}, this));\n    }\n    return out;\n  }\n\n  find(\n    func: (row: DataRow, index: number) => boolean,\n    sharedRow?: SharedRowOptions\n  ): DataRow | undefined {\n    const tSharedRow = DataRow.createSharedRow(sharedRow);\n\n    for (let rowIndex = 0; rowIndex < this._numRows; ++rowIndex) {\n      const row = this.row(rowIndex, tSharedRow);\n      if (func(row, rowIndex)) {\n        return row;\n      }\n    }\n    return undefined;\n  }\n\n  reduce<T>(\n    func: (acc: T, row: DataRow, index: number) => T,\n    initialValue: T,\n    sharedRow?: SharedRowOptions\n  ): T {\n    const tSharedRow = DataRow.createSharedRow(sharedRow);\n\n    for (let rowIndex = 0; rowIndex < this._numRows; ++rowIndex) {\n      const row = this.row(rowIndex, tSharedRow);\n      initialValue = func(initialValue, row, rowIndex);\n    }\n    return initialValue;\n  }\n}\n\n/**\n * Convert arrow data type to kepler.gl field types\n *\n * @param arrowType the arrow data type\n * @returns corresponding type in `ALL_FIELD_TYPES`\n */\nexport function arrowDataTypeToFieldType(arrowType: arrow.DataType): string {\n  // Note: this function doesn't return ALL_FIELD_TYPES.geojson or ALL_FIELD_TYPES.array, which\n  // should be further detected by caller\n  if (arrow.DataType.isDate(arrowType)) {\n    return ALL_FIELD_TYPES.date;\n  } else if (arrow.DataType.isTimestamp(arrowType) || arrow.DataType.isTime(arrowType)) {\n    return ALL_FIELD_TYPES.timestamp;\n  } else if (arrow.DataType.isFloat(arrowType)) {\n    return ALL_FIELD_TYPES.real;\n  } else if (arrow.DataType.isInt(arrowType)) {\n    return ALL_FIELD_TYPES.integer;\n  } else if (arrow.DataType.isBool(arrowType)) {\n    return ALL_FIELD_TYPES.boolean;\n  } else if (arrow.DataType.isUtf8(arrowType) || arrow.DataType.isNull(arrowType)) {\n    return ALL_FIELD_TYPES.string;\n  } else if (\n    arrow.DataType.isBinary(arrowType) ||\n    arrow.DataType.isDictionary(arrowType) ||\n    arrow.DataType.isFixedSizeBinary(arrowType) ||\n    arrow.DataType.isFixedSizeList(arrowType) ||\n    arrow.DataType.isList(arrowType) ||\n    arrow.DataType.isMap(arrowType) ||\n    arrow.DataType.isStruct(arrowType)\n  ) {\n    return ALL_FIELD_TYPES.object;\n  } else {\n    globalConsole.warn(`Unsupported arrow type: ${arrowType}`);\n    return ALL_FIELD_TYPES.string;\n  }\n}\n\n/**\n * Convert arrow data type to analyzer type\n *\n * @param arrowType the arrow data type\n * @returns corresponding type in `AnalyzerDATA_TYPES`\n */\nexport function arrowDataTypeToAnalyzerDataType(\n  arrowType: arrow.DataType\n): typeof AnalyzerDATA_TYPES {\n  if (arrow.DataType.isDate(arrowType)) {\n    return AnalyzerDATA_TYPES.DATE;\n  } else if (arrow.DataType.isTimestamp(arrowType) || arrow.DataType.isTime(arrowType)) {\n    return AnalyzerDATA_TYPES.DATETIME;\n  } else if (arrow.DataType.isFloat(arrowType)) {\n    return AnalyzerDATA_TYPES.FLOAT;\n  } else if (arrow.DataType.isInt(arrowType)) {\n    return AnalyzerDATA_TYPES.INT;\n  } else if (arrow.DataType.isBool(arrowType)) {\n    return AnalyzerDATA_TYPES.BOOLEAN;\n  } else if (arrow.DataType.isUtf8(arrowType) || arrow.DataType.isNull(arrowType)) {\n    return AnalyzerDATA_TYPES.STRING;\n  } else if (\n    arrow.DataType.isBinary(arrowType) ||\n    arrow.DataType.isDictionary(arrowType) ||\n    arrow.DataType.isFixedSizeBinary(arrowType) ||\n    arrow.DataType.isFixedSizeList(arrowType) ||\n    arrow.DataType.isList(arrowType) ||\n    arrow.DataType.isMap(arrowType) ||\n    arrow.DataType.isStruct(arrowType)\n  ) {\n    return AnalyzerDATA_TYPES.OBJECT;\n  } else {\n    globalConsole.warn(`Unsupported arrow type: ${arrowType}`);\n    return AnalyzerDATA_TYPES.STRING;\n  }\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {DataRow, SharedRowOptions} from './data-row';\nimport {Field} from '@kepler.gl/types';\nimport {DataContainerInterface, RangeOptions} from './data-container-interface';\n\ntype RowDataContainerInput = {\n  rows: any[][];\n  fields?: Field[];\n};\n\n/**\n * @param dataContainer\n * @param sharedRow\n */\nfunction* rowsIterator(dataContainer: DataContainerInterface, sharedRow: SharedRowOptions) {\n  const numRows = dataContainer.numRows();\n  for (let rowIndex = 0; rowIndex < numRows; ++rowIndex) {\n    yield dataContainer.row(rowIndex, sharedRow);\n  }\n}\n\n/**\n * @param dataContainer\n * @param columnIndex\n */\nfunction* columnIterator(dataContainer: DataContainerInterface, columnIndex: number) {\n  const numRows = dataContainer.numRows();\n  for (let rowIndex = 0; rowIndex < numRows; ++rowIndex) {\n    yield dataContainer.valueAt(rowIndex, columnIndex);\n  }\n}\n\n/**\n * A data container where all data is stored internally as a 2D array.\n */\nexport class RowDataContainer implements DataContainerInterface {\n  _rows: any[][];\n  _numColumns: number;\n\n  constructor(data: RowDataContainerInput) {\n    if (!data.rows) {\n      throw Error('RowDataContainer: no rows provided');\n    }\n\n    if (!Array.isArray(data.rows)) {\n      throw Error(\"RowDataContainer: rows object isn't an array\");\n    }\n\n    this._rows = data.rows;\n    this._numColumns = data.rows[0]?.length || 0;\n  }\n\n  numRows(): number {\n    return this._rows.length;\n  }\n\n  numColumns(): number {\n    return this._numColumns;\n  }\n\n  valueAt(rowIndex: number, columnIndex: number): any {\n    if (this._rows[rowIndex] === null) {\n      return null;\n    }\n    return this._rows[rowIndex][columnIndex];\n  }\n\n  row(rowIndex: number, sharedRow?: SharedRowOptions): DataRow {\n    const tSharedRow = DataRow.createSharedRow(sharedRow);\n    if (tSharedRow) {\n      tSharedRow.setSource(this, rowIndex);\n      return tSharedRow;\n    }\n\n    return new DataRow(this, rowIndex);\n  }\n\n  rowAsArray(rowIndex: number): any[] {\n    return this._rows[rowIndex];\n  }\n\n  rows(sharedRow: SharedRowOptions) {\n    const tSharedRow = DataRow.createSharedRow(sharedRow);\n    return rowsIterator(this, tSharedRow);\n  }\n\n  column(columnIndex: number) {\n    return columnIterator(this, columnIndex);\n  }\n\n  flattenData(): any[][] {\n    return this._rows;\n  }\n\n  getPlainIndex(): number[] {\n    return this._rows.map((_, i) => i);\n  }\n\n  map<T>(\n    func: (row: DataRow, index: number) => T,\n    sharedRow?: SharedRowOptions,\n    options: RangeOptions = {}\n  ): T[] {\n    const tSharedRow = DataRow.createSharedRow(sharedRow);\n\n    const {start = 0, end = this.numRows()} = options;\n    const endRow = Math.min(this.numRows(), end);\n\n    const out: T[] = [];\n    for (let rowIndex = start; rowIndex < endRow; ++rowIndex) {\n      const row = this.row(rowIndex, tSharedRow);\n      out.push(func(row, rowIndex));\n    }\n    return out;\n  }\n\n  mapIndex<T>(\n    func: ({index: number}, dc: DataContainerInterface) => T,\n    options: RangeOptions = {}\n  ): T[] {\n    const {start = 0, end = this.numRows()} = options;\n    const endRow = Math.min(this.numRows(), end);\n\n    const out: T[] = [];\n    for (let rowIndex = start; rowIndex < endRow; ++rowIndex) {\n      out.push(func({index: rowIndex}, this));\n    }\n    return out;\n  }\n\n  find(\n    func: (row: DataRow, index: number) => boolean,\n    sharedRow?: SharedRowOptions\n  ): DataRow | undefined {\n    const tSharedRow = DataRow.createSharedRow(sharedRow);\n\n    for (let rowIndex = 0; rowIndex < this._rows.length; ++rowIndex) {\n      const row = this.row(rowIndex, tSharedRow);\n      if (func(row, rowIndex)) {\n        return row;\n      }\n    }\n    return undefined;\n  }\n\n  reduce<T>(\n    func: (acc: T, row: DataRow, index: number) => T,\n    initialValue: T,\n    sharedRow?: SharedRowOptions\n  ): T {\n    const tSharedRow = DataRow.createSharedRow(sharedRow);\n\n    for (let rowIndex = 0; rowIndex < this._rows.length; ++rowIndex) {\n      const row = this.row(rowIndex, tSharedRow);\n      initialValue = func(initialValue, row, rowIndex);\n    }\n    return initialValue;\n  }\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {DataContainerInterface, RangeOptions} from './data-container-interface';\nimport {DataRow, SharedRowOptions} from './data-row';\n\n/**\n * @param dataContainer\n * @param indices\n * @param sharedRow\n * @returns\n */\nfunction* rowsIterator(\n  dataContainer: DataContainerInterface,\n  indices: number[],\n  sharedRow: SharedRowOptions\n): Generator<DataRow> {\n  const numRows = indices.length;\n  for (let rowIndex = 0; rowIndex < numRows; ++rowIndex) {\n    const mappedRowIndex = indices[rowIndex];\n    yield dataContainer.row(mappedRowIndex, sharedRow);\n  }\n}\n\n/**\n * @param dataContainer\n * @param indices\n * @param columnIndex\n * @returns\n */\nfunction* columnIterator(\n  dataContainer: DataContainerInterface,\n  indices: number[],\n  columnIndex: number\n): Generator<any> {\n  const numRows = indices.length;\n  for (let rowIndex = 0; rowIndex < numRows; ++rowIndex) {\n    const mappedRowIndex = indices[rowIndex];\n    yield dataContainer.valueAt(mappedRowIndex, columnIndex);\n  }\n}\n\n/**\n * A data container wrapper around another data container.\n * You have to pass an array of indices to reference rows in the parent data container.\n * For example indices [3, 4, 6, 8] means that IndexedDataContainer is going to have\n * 4 rows and row(2) points to 6th row in the referenced data container.\n */\nexport class IndexedDataContainer implements DataContainerInterface {\n  _parentDataContainer: DataContainerInterface;\n  _indices: number[];\n\n  constructor(parentDataContainer: DataContainerInterface, indices: number[]) {\n    this._parentDataContainer = parentDataContainer;\n    this._indices = indices;\n  }\n\n  numRows(): number {\n    return this._indices.length;\n  }\n\n  numColumns(): number {\n    return this._parentDataContainer.numColumns();\n  }\n\n  /**\n   * Remaps a local index to an index in the parent dataset\n   * @param rowIndex\n   * @returns number\n   */\n  _mappedRowIndex(rowIndex: number): number {\n    return this._indices[rowIndex];\n  }\n\n  valueAt(rowIndex: number, columnIndex: number): any {\n    return this._parentDataContainer.valueAt(this._mappedRowIndex(rowIndex), columnIndex);\n  }\n\n  row(rowIndex: number, sharedRow?: SharedRowOptions): DataRow {\n    return this._parentDataContainer.row(this._mappedRowIndex(rowIndex), sharedRow);\n  }\n\n  rowAsArray(rowIndex: number): any[] {\n    return this._parentDataContainer.rowAsArray(this._mappedRowIndex(rowIndex));\n  }\n\n  rows(sharedRow?: SharedRowOptions) {\n    return rowsIterator(this._parentDataContainer, this._indices, sharedRow);\n  }\n\n  column(columnIndex: number) {\n    return columnIterator(this._parentDataContainer, this._indices, columnIndex);\n  }\n\n  getPlainIndex(): number[] {\n    return this._indices.map((_, i) => i);\n  }\n\n  flattenData(): any[][] {\n    const tSharedRow = DataRow.createSharedRow(true);\n\n    return this._indices.map((_, i) => {\n      return this.row(i, tSharedRow).values();\n    }, this);\n  }\n\n  map<T>(\n    func: (row: DataRow, index: number) => T,\n    sharedRow?: SharedRowOptions,\n    options: RangeOptions = {}\n  ): T[] {\n    const {start = 0, end = this.numRows()} = options;\n    const endRow = Math.min(this.numRows(), end);\n\n    const tSharedRow = DataRow.createSharedRow(sharedRow);\n\n    const out: T[] = [];\n    for (let rowIndex = start; rowIndex < endRow; ++rowIndex) {\n      const row = this.row(rowIndex, tSharedRow);\n      out.push(func(row, rowIndex));\n    }\n    return out;\n  }\n\n  mapIndex<T>(\n    func: ({index: number}, dc: DataContainerInterface) => T,\n    options: RangeOptions = {}\n  ): T[] {\n    const {start = 0, end = this.numRows()} = options;\n    const endRow = Math.min(this.numRows(), end);\n\n    const out: T[] = [];\n    for (let rowIndex = start; rowIndex < endRow; ++rowIndex) {\n      out.push(func({index: this._mappedRowIndex(rowIndex)}, this._parentDataContainer));\n    }\n    return out;\n  }\n\n  find(\n    func: (row: DataRow, index: number) => boolean,\n    sharedRow?: SharedRowOptions\n  ): DataRow | undefined {\n    const tSharedRow = DataRow.createSharedRow(sharedRow);\n\n    for (let rowIndex = 0; rowIndex < this.numRows(); ++rowIndex) {\n      const row = this.row(rowIndex, tSharedRow);\n      if (func(row, rowIndex)) {\n        return row;\n      }\n    }\n    return undefined;\n  }\n\n  reduce<T>(\n    func: (acc: T, row: DataRow, index: number) => T,\n    initialValue: T,\n    sharedRow?: SharedRowOptions\n  ): T {\n    const tSharedRow = DataRow.createSharedRow(sharedRow);\n\n    for (let rowIndex = 0; rowIndex < this._indices.length; ++rowIndex) {\n      const row = this.row(rowIndex, tSharedRow);\n      initialValue = func(initialValue, row, rowIndex);\n    }\n    return initialValue;\n  }\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {ArrowDataContainer} from './arrow-data-container';\nimport {RowDataContainer} from './row-data-container';\nimport {IndexedDataContainer} from './indexed-data-container';\n\nimport {DataContainerInterface} from './data-container-interface';\nimport {Field} from '@kepler.gl/types';\n\nexport type DataContainerOptions = {\n  inputDataFormat?: string; // one of DataForm\n  fields?: Field[];\n};\n\nexport const DataForm = {\n  ROWS_ARRAY: 'ROWS_ARRAY',\n  COLS_ARRAY: 'COLS_ARRAY'\n};\n\nconst defaultOptions: DataContainerOptions = {\n  inputDataFormat: DataForm.ROWS_ARRAY\n};\n\n/**\n * Creates a data container wrapper for the data.\n * @param data Data.\n * @param options Options.\n * @returns A data container object which is based on data and options.\n */\nexport function createDataContainer(\n  data: any[],\n  options: DataContainerOptions = defaultOptions\n): DataContainerInterface {\n  options = {...defaultOptions, ...options};\n\n  if (options.inputDataFormat === DataForm.ROWS_ARRAY) {\n    return new RowDataContainer({rows: data, fields: options.fields});\n  } else if (options.inputDataFormat === DataForm.COLS_ARRAY) {\n    return new ArrowDataContainer({cols: data, fields: options.fields});\n  }\n\n  throw Error('Failed to create a data container: not implemented format');\n}\n\n/**\n * Creates a data container wrapper around another data container.\n * @param dataContainer Parent data container.\n * @param indices An array of row indices in the parent data container.\n */\nexport function createIndexedDataContainer(\n  dataContainer: DataContainerInterface,\n  indices: number[]\n): DataContainerInterface {\n  return new IndexedDataContainer(dataContainer, indices);\n}\n\n/**\n * Get a sample of rows from a data container.\n * @param dataContainer Data container to get samples from.\n * @param sampleSize Max number of samples.\n * @returns A data container which contains samples from the original data container.\n */\nexport function getSampleData(\n  dataContainer: DataContainerInterface,\n  sampleSize = 500\n): DataContainerInterface {\n  const numberOfRows = dataContainer.numRows();\n  const sampleStep = Math.max(Math.floor(numberOfRows / sampleSize), 1);\n\n  const indices: number[] = [];\n  for (let i = 0; i < numberOfRows; i += sampleStep) {\n    indices.push(i);\n  }\n\n  return createIndexedDataContainer(dataContainer, indices);\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {extent} from 'd3-array';\n\nimport {notNullorUndefined, unique} from './data-utils';\nimport {DataContainerInterface} from './data-container-interface';\n\ntype dataValueAccessor = <T>(param: T) => T;\ntype dataContainerValueAccessor = (d: {index: number}, dc: DataContainerInterface) => any;\ntype sort = (a: any, b: any) => any;\n/**\n * return quantile domain for an array of data\n */\nexport function getQuantileDomain(\n  data: any[],\n  valueAccessor?: dataValueAccessor,\n  sortFunc?: sort\n): number[] {\n  const values = typeof valueAccessor === 'function' ? data.map(valueAccessor) : data;\n\n  return values.filter(notNullorUndefined).sort(sortFunc);\n}\n\n/**\n * return ordinal domain for a data container\n */\nexport function getOrdinalDomain(\n  dataContainer: DataContainerInterface,\n  valueAccessor: dataContainerValueAccessor\n): string[] {\n  const values = dataContainer.mapIndex(valueAccessor);\n\n  return unique(values)\n    .filter(notNullorUndefined)\n    .sort();\n}\n\n/**\n * return linear domain for an array of data\n */\nexport function getLinearDomain(\n  data: number[],\n  valueAccessor?: dataValueAccessor\n): [number, number] {\n  const range = typeof valueAccessor === 'function' ? extent(data, valueAccessor) : extent(data);\n  return range.map((d: undefined | number, i: number) => (d === undefined ? i : d)) as [\n    number,\n    number\n  ];\n}\n\n/**\n * return linear domain for an array of data. A log scale domain cannot contain 0\n */\nexport function getLogDomain(data: any[], valueAccessor: dataValueAccessor): [number, number] {\n  const [d0, d1] = getLinearDomain(data, valueAccessor);\n  return [d0 === 0 ? 1e-5 : d0, d1];\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {h3GetResolution, H3Index, h3IsValid, h3ToGeo, h3ToGeoBoundary} from 'h3-js';\nimport {ALL_FIELD_TYPES} from '@kepler.gl/constants';\nimport {notNullorUndefined} from './data-utils';\n\nexport {h3GetResolution, h3IsValid};\n\nexport type Centroid = [number, number];\n\n// get vertices should return [lon, lat]\nexport function getVertices({id}: {id: H3Index}) {\n  // always reverse it\n  return h3ToGeoBoundary(id, true);\n}\n\n// get centroid should return [lon, lat]\nexport function getCentroid({id}: {id: H3Index}): Centroid {\n  // always reverse it to [lng, lat]\n  return h3ToGeo(id).reverse() as Centroid;\n}\n\nexport function idToPolygonGeo(object?: {id: H3Index}, properties?: any) {\n  if (!object?.id) {\n    return null;\n  }\n  const vertices = getVertices(object);\n\n  return {\n    type: 'Feature',\n    geometry: {\n      coordinates: properties?.isClosed ? [vertices] : vertices,\n      type: properties?.isClosed ? 'Polygon' : 'LineString'\n    },\n    properties\n  };\n}\n\nexport const isHexField = (field, fieldIdx, dataContainer) => {\n  if (field.type !== ALL_FIELD_TYPES.string) {\n    return false;\n  }\n\n  const firstDP = dataContainer.find(d => notNullorUndefined(d.valueAt(fieldIdx)), true);\n  return firstDP && h3IsValid(firstDP.valueAt(fieldIdx));\n};\n\nexport const getHexFields = (fields, dataContainer) =>\n  fields.filter((f, i) => isHexField(f, i, dataContainer));\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {ascending, extent, histogram as d3Histogram, ticks} from 'd3-array';\nimport keyMirror from 'keymirror';\nimport Console from 'global/console';\nimport get from 'lodash.get';\nimport isEqual from 'lodash.isequal';\n\nimport booleanWithin from '@turf/boolean-within';\nimport {point as turfPoint} from '@turf/helpers';\nimport {Decimal} from 'decimal.js';\nimport {\n  ALL_FIELD_TYPES,\n  FILTER_TYPES,\n  ANIMATION_WINDOW,\n  PLOT_TYPES,\n  LAYER_TYPES,\n  FILTER_VIEW_TYPES\n} from '@kepler.gl/constants';\nimport {VisState} from '@kepler.gl/schemas';\nimport * as ScaleUtils from './data-scale-utils';\nimport {h3IsValid} from 'h3-js';\n\nimport {\n  Millisecond,\n  Entries,\n  Field,\n  ParsedFilter,\n  Filter,\n  FilterBase,\n  PolygonFilter,\n  FieldDomain,\n  TimeRangeFieldDomain,\n  HistogramBin,\n  Feature,\n  FeatureValue,\n  LineChart,\n  TimeRangeFilter,\n  RangeFieldDomain,\n  FilterDatasetOpt,\n  FilterRecord\n} from '@kepler.gl/types';\n\nimport {DataContainerInterface} from './data-container-interface';\nimport {generateHashId, set, toArray} from './utils';\nimport {notNullorUndefined, timeToUnixMilli, unique} from './data-utils';\nimport {getCentroid} from './h3-utils';\n\nexport const durationSecond = 1000;\nexport const durationMinute = durationSecond * 60;\nexport const durationHour = durationMinute * 60;\nexport const durationDay = durationHour * 24;\nexport const durationWeek = durationDay * 7;\nexport const durationYear = durationDay * 365;\n\nexport type FilterResult = {\n  filteredIndexForDomain?: number[];\n  filteredIndex?: number[];\n};\n\nexport type FilterChanged = {\n  // eslint-disable-next-line no-unused-vars\n  [key in keyof FilterRecord]: {\n    [key: string]: 'added' | 'deleted' | 'name_changed' | 'value_changed' | 'dataId_changed';\n  } | null;\n};\n\nexport type dataValueAccessor = (data: {index: number}) => number | null;\n\nexport const TimestampStepMap = [\n  {max: 1, step: 0.05},\n  {max: 10, step: 0.1},\n  {max: 100, step: 1},\n  {max: 500, step: 5},\n  {max: 1000, step: 10},\n  {max: 5000, step: 50},\n  {max: Number.POSITIVE_INFINITY, step: 1000}\n];\n\nexport const histogramBins = 30;\nexport const enlargedHistogramBins = 100;\n\nexport const FILTER_UPDATER_PROPS = keyMirror({\n  dataId: null,\n  name: null,\n  layerId: null\n});\n\nexport const LIMITED_FILTER_EFFECT_PROPS = keyMirror({\n  [FILTER_UPDATER_PROPS.name]: null\n});\n/**\n * Max number of filter value buffers that deck.gl provides\n */\n\nconst SupportedPlotType = {\n  [FILTER_TYPES.timeRange]: {\n    default: 'histogram',\n    [ALL_FIELD_TYPES.integer]: 'lineChart',\n    [ALL_FIELD_TYPES.real]: 'lineChart'\n  },\n  [FILTER_TYPES.range]: {\n    default: 'histogram',\n    [ALL_FIELD_TYPES.integer]: 'lineChart',\n    [ALL_FIELD_TYPES.real]: 'lineChart'\n  }\n};\n\nexport const FILTER_COMPONENTS = {\n  [FILTER_TYPES.select]: 'SingleSelectFilter',\n  [FILTER_TYPES.multiSelect]: 'MultiSelectFilter',\n  [FILTER_TYPES.timeRange]: 'TimeRangeFilter',\n  [FILTER_TYPES.range]: 'RangeFilter',\n  [FILTER_TYPES.polygon]: 'PolygonFilter'\n};\n\nexport const DEFAULT_FILTER_STRUCTURE = {\n  dataId: [], // [string]\n  freeze: false,\n  id: null,\n  enabled: true,\n\n  // time range filter specific\n  fixedDomain: false,\n  view: FILTER_VIEW_TYPES.side,\n  isAnimating: false,\n  animationWindow: ANIMATION_WINDOW.free,\n  speed: 1,\n\n  // field specific\n  name: [], // string\n  type: null,\n  fieldIdx: [], // [integer]\n  domain: null,\n  value: null,\n\n  // plot\n  plotType: PLOT_TYPES.histogram,\n  yAxis: null,\n  interval: null,\n\n  // mode\n  gpu: false\n};\n\nexport const FILTER_ID_LENGTH = 4;\n\nexport const LAYER_FILTERS = [FILTER_TYPES.polygon];\n\n/**\n * Generates a filter with a dataset id as dataId\n */\nexport function getDefaultFilter({\n  dataId,\n  id\n}: {\n  dataId?: string | null | string[];\n  id?: string;\n} = {}): FilterBase<LineChart> {\n  return {\n    ...DEFAULT_FILTER_STRUCTURE,\n    // store it as dataId and it could be one or many\n    dataId: dataId ? toArray(dataId) : [],\n    id: id || generateHashId(FILTER_ID_LENGTH)\n  };\n}\n\n/**\n * Check if a filter is valid based on the given dataId\n * @param  filter to validate\n * @param  datasetId id to validate filter against\n * @return true if a filter is valid, false otherwise\n */\nexport function shouldApplyFilter(filter: Filter, datasetId: string): boolean {\n  const dataIds = toArray(filter.dataId);\n  return dataIds.includes(datasetId) && filter.value !== null;\n}\n\ninterface KeplerTableModel<K, L> {\n  id: string;\n  getColumnFieldIdx(columnName: string): number;\n  filterTable(filters: Filter[], layers: L[], opt?: FilterDatasetOpt): K;\n  getColumnFilterProps(columnName: string): Field['filterProps'] | null | undefined;\n  dataContainer: DataContainerInterface;\n  filterTableCPU(filters: Filter[], layers: L[]): K;\n}\n\n/**\n * Validates and modifies polygon filter structure\n * @param dataset\n * @param filter\n * @param layers\n * @return - {filter, dataset}\n */\nexport function validatePolygonFilter<K extends KeplerTableModel<K, L>, L extends {id: string}>(\n  dataset: K,\n  filter: PolygonFilter,\n  layers: L[]\n): {filter: PolygonFilter | null; dataset: K} {\n  const failed = {dataset, filter: null};\n  const {value, layerId, type, dataId} = filter;\n\n  if (!layerId || !isValidFilterValue(type, value)) {\n    return failed;\n  }\n\n  const isValidDataset = dataId.includes(dataset.id);\n\n  if (!isValidDataset) {\n    return failed;\n  }\n\n  const layer = layers.find(l => layerId.includes(l.id));\n\n  if (!layer) {\n    return failed;\n  }\n\n  return {\n    filter: {\n      ...filter,\n      freeze: true,\n      fieldIdx: []\n    },\n    dataset\n  };\n}\n\n/**\n * Custom filter validators\n */\nconst filterValidators = {\n  [FILTER_TYPES.polygon]: validatePolygonFilter\n};\n\n/**\n * Default validate filter function\n * @param dataset\n * @param filter\n * @return - {filter, dataset}\n */\nexport function validateFilter<K extends KeplerTableModel<K, L>, L>(\n  dataset: K,\n  filter: ParsedFilter\n): {filter: Filter | null; dataset: K} {\n  // match filter.dataId\n  const failed = {dataset, filter: null};\n  const filterDataId = toArray(filter.dataId);\n\n  const filterDatasetIndex = filterDataId.indexOf(dataset.id);\n  if (filterDatasetIndex < 0 || !toArray(filter.name)[filterDatasetIndex]) {\n    // the current filter is not mapped against the current dataset\n    return failed;\n  }\n\n  const initializeFilter: Filter = {\n    ...getDefaultFilter({dataId: filter.dataId}),\n    ...filter,\n    dataId: filterDataId,\n    name: toArray(filter.name)\n  };\n\n  const fieldName = initializeFilter.name[filterDatasetIndex];\n  const {filter: updatedFilter, dataset: updatedDataset} = applyFilterFieldName(\n    initializeFilter,\n    dataset,\n    fieldName,\n    filterDatasetIndex,\n    {mergeDomain: true}\n  );\n\n  if (!updatedFilter) {\n    return failed;\n  }\n\n  updatedFilter.value = adjustValueToFilterDomain(filter.value, updatedFilter);\n  updatedFilter.view = filter.view ?? updatedFilter.view;\n\n  if (updatedFilter.value === null) {\n    // cannot adjust saved value to filter\n    return failed;\n  }\n\n  return {\n    filter: validateFilterYAxis(updatedFilter, updatedDataset),\n    dataset: updatedDataset\n  };\n}\n\n/**\n * Validate saved filter config with new data,\n * calculate domain and fieldIdx based new fields and data\n *\n * @param dataset\n * @param filter - filter to be validate\n * @param layers - layers\n * @return validated filter\n */\nexport function validateFilterWithData<K extends KeplerTableModel<K, L>, L>(\n  dataset: K,\n  filter: ParsedFilter,\n  layers: L[]\n): {filter: Filter; dataset: K} {\n  return filter.type && filterValidators.hasOwnProperty(filter.type)\n    ? filterValidators[filter.type](dataset, filter, layers)\n    : validateFilter(dataset, filter);\n}\n\n/**\n * Validate YAxis\n * @param filter\n * @param dataset\n * @return {*}\n */\nfunction validateFilterYAxis(filter, dataset) {\n  // TODO: validate yAxis against other datasets\n\n  const {fields} = dataset;\n  const {yAxis} = filter;\n  // TODO: validate yAxis against other datasets\n  if (yAxis) {\n    const matchedAxis = fields.find(({name, type}) => name === yAxis.name && type === yAxis.type);\n\n    filter = matchedAxis\n      ? {\n          ...filter,\n          yAxis: matchedAxis,\n          ...getFilterPlot({...filter, yAxis: matchedAxis}, dataset)\n        }\n      : filter;\n  }\n\n  return filter;\n}\n\n/**\n * Get default filter prop based on field type\n *\n * @param field\n * @param fieldDomain\n * @returns default filter\n */\nexport function getFilterProps(\n  field: Field,\n  fieldDomain: FieldDomain\n): Partial<Filter> & {fieldType: string} {\n  const filterProps = {\n    ...fieldDomain,\n    fieldType: field.type,\n    view: FILTER_VIEW_TYPES.side\n  };\n\n  switch (field.type) {\n    case ALL_FIELD_TYPES.real:\n    case ALL_FIELD_TYPES.integer:\n      return {\n        ...filterProps,\n        value: fieldDomain.domain,\n        type: FILTER_TYPES.range,\n        // @ts-expect-error\n        typeOptions: [FILTER_TYPES.range],\n        gpu: true\n      };\n\n    case ALL_FIELD_TYPES.boolean:\n      // @ts-expect-error\n      return {\n        ...filterProps,\n        type: FILTER_TYPES.select,\n        value: true,\n        gpu: false\n      };\n\n    case ALL_FIELD_TYPES.string:\n    case ALL_FIELD_TYPES.date:\n      // @ts-expect-error\n      return {\n        ...filterProps,\n        type: FILTER_TYPES.multiSelect,\n        value: [],\n        gpu: false\n      };\n\n    case ALL_FIELD_TYPES.timestamp:\n      // @ts-expect-error\n      return {\n        ...filterProps,\n        type: FILTER_TYPES.timeRange,\n        view: FILTER_VIEW_TYPES.enlarged,\n        fixedDomain: true,\n        value: filterProps.domain,\n        gpu: true\n      };\n\n    default:\n      // @ts-expect-error\n      return {};\n  }\n}\n\nexport const getPolygonFilterFunctor = (layer, filter, dataContainer) => {\n  const getPosition = layer.getPositionAccessor(dataContainer);\n\n  switch (layer.type) {\n    case LAYER_TYPES.point:\n    case LAYER_TYPES.icon:\n      return data => {\n        const pos = getPosition(data);\n        return pos.every(Number.isFinite) && isInPolygon(pos, filter.value);\n      };\n    case LAYER_TYPES.arc:\n    case LAYER_TYPES.line:\n      return data => {\n        const pos = getPosition(data);\n        return (\n          pos.every(Number.isFinite) &&\n          [\n            [pos[0], pos[1]],\n            [pos[3], pos[4]]\n          ].every(point => isInPolygon(point, filter.value))\n        );\n      };\n    case LAYER_TYPES.hexagonId:\n      if (layer.dataToFeature && layer.dataToFeature.centroids) {\n        return data => {\n          // null or getCentroid({id})\n          const centroid = layer.dataToFeature.centroids[data.index];\n          return centroid && isInPolygon(centroid, filter.value);\n        };\n      }\n      return data => {\n        const id = getPosition(data);\n        if (!h3IsValid(id)) {\n          return false;\n        }\n        const pos = getCentroid({id});\n        return pos.every(Number.isFinite) && isInPolygon(pos, filter.value);\n      };\n    case LAYER_TYPES.geojson:\n      return data => {\n        return layer.isInPolygon(data, data.index, filter.value);\n      };\n    default:\n      return () => true;\n  }\n};\n\n/**\n * @param param An object that represents a row record.\n * @param param.index Index of the row in data container.\n * @returns Returns true to keep the element, or false otherwise.\n */\ntype filterFunction = (data: {index: number}) => boolean;\n/**\n * @param field dataset Field\n * @param dataId Dataset id\n * @param filter Filter object\n * @param layers list of layers to filter upon\n * @param dataContainer Data container\n * @return filterFunction\n */\n/* eslint-disable complexity */\nexport function getFilterFunction<L extends {config: {dataId: string | null}; id: string}>(\n  field: Field | null,\n  dataId: string,\n  filter: Filter,\n  layers: L[],\n  dataContainer: DataContainerInterface\n): filterFunction {\n  // field could be null in polygon filter\n  const valueAccessor = field ? field.valueAccessor : data => null;\n  const defaultFunc = d => true;\n\n  if (filter.enabled === false) {\n    return defaultFunc;\n  }\n\n  switch (filter.type) {\n    case FILTER_TYPES.range:\n      return data => isInRange(valueAccessor(data), filter.value);\n    case FILTER_TYPES.multiSelect:\n      return data => filter.value.includes(valueAccessor(data));\n    case FILTER_TYPES.select:\n      return data => valueAccessor(data) === filter.value;\n    case FILTER_TYPES.timeRange:\n      if (!field) {\n        return defaultFunc;\n      }\n      const mappedValue = get(field, ['filterProps', 'mappedValue']);\n      const accessor = Array.isArray(mappedValue)\n        ? data => mappedValue[data.index]\n        : data => timeToUnixMilli(valueAccessor(data), field.format);\n      return data => isInRange(accessor(data), filter.value);\n    case FILTER_TYPES.polygon:\n      if (!layers || !layers.length || !filter.layerId) {\n        return defaultFunc;\n      }\n      const layerFilterFunctions = filter.layerId\n        .map(id => layers.find(l => l.id === id))\n        .filter(l => l && l.config.dataId === dataId)\n        .map(layer => getPolygonFilterFunctor(layer, filter, dataContainer));\n\n      return data => layerFilterFunctions.every(filterFunc => filterFunc(data));\n    default:\n      return defaultFunc;\n  }\n}\n\nexport function updateFilterDataId(dataId: string | string[]): FilterBase<LineChart> {\n  return getDefaultFilter({dataId});\n}\n\nexport function filterDataByFilterTypes(\n  {\n    dynamicDomainFilters,\n    cpuFilters,\n    filterFuncs\n  }: {\n    dynamicDomainFilters: Filter[] | null;\n    cpuFilters: Filter[] | null;\n    filterFuncs: {\n      [key: string]: filterFunction;\n    };\n  },\n  dataContainer: DataContainerInterface\n): FilterResult {\n  const filteredIndexForDomain: number[] = [];\n  const filteredIndex: number[] = [];\n\n  const filterContext = {index: -1, dataContainer};\n  const filterFuncCaller = (filter: Filter) => filterFuncs[filter.id](filterContext);\n\n  const numRows = dataContainer.numRows();\n  for (let i = 0; i < numRows; ++i) {\n    filterContext.index = i;\n\n    const matchForDomain = dynamicDomainFilters && dynamicDomainFilters.every(filterFuncCaller);\n    if (matchForDomain) {\n      filteredIndexForDomain.push(filterContext.index);\n    }\n\n    const matchForRender = cpuFilters && cpuFilters.every(filterFuncCaller);\n    if (matchForRender) {\n      filteredIndex.push(filterContext.index);\n    }\n  }\n\n  return {\n    ...(dynamicDomainFilters ? {filteredIndexForDomain} : {}),\n    ...(cpuFilters ? {filteredIndex} : {})\n  };\n}\n\n/**\n * Get a record of filters based on domain type and gpu / cpu\n */\nexport function getFilterRecord(\n  dataId: string,\n  filters: Filter[],\n  opt: FilterDatasetOpt = {}\n): FilterRecord {\n  const filterRecord: FilterRecord = {\n    dynamicDomain: [],\n    fixedDomain: [],\n    cpu: [],\n    gpu: []\n  };\n\n  filters.forEach(f => {\n    if (isValidFilterValue(f.type, f.value) && toArray(f.dataId).includes(dataId)) {\n      (f.fixedDomain || opt.ignoreDomain\n        ? filterRecord.fixedDomain\n        : filterRecord.dynamicDomain\n      ).push(f);\n\n      (f.gpu && !opt.cpuOnly ? filterRecord.gpu : filterRecord.cpu).push(f);\n    }\n  });\n\n  return filterRecord;\n}\n\n/**\n * Compare filter records to get what has changed\n */\nexport function diffFilters(\n  filterRecord: FilterRecord,\n  oldFilterRecord: FilterRecord | {} = {}\n): FilterChanged {\n  let filterChanged: Partial<FilterChanged> = {};\n\n  (Object.entries(filterRecord) as Entries<FilterRecord>).forEach(([record, items]) => {\n    items.forEach(filter => {\n      const oldFilter: Filter = (oldFilterRecord[record] || []).find(\n        (f: Filter) => f.id === filter.id\n      );\n\n      if (!oldFilter) {\n        // added\n        filterChanged = set([record, filter.id], 'added', filterChanged);\n      } else {\n        // check  what has changed\n        ['name', 'value', 'dataId'].forEach(prop => {\n          if (filter[prop] !== oldFilter[prop]) {\n            filterChanged = set([record, filter.id], `${prop}_changed`, filterChanged);\n          }\n        });\n      }\n    });\n\n    (oldFilterRecord[record] || []).forEach((oldFilter: Filter) => {\n      // deleted\n      if (!items.find(f => f.id === oldFilter.id)) {\n        filterChanged = set([record, oldFilter.id], 'deleted', filterChanged);\n      }\n    });\n  });\n\n  return {...{dynamicDomain: null, fixedDomain: null, cpu: null, gpu: null}, ...filterChanged};\n}\n/**\n * Call by parsing filters from URL\n * Check if value of filter within filter domain, if not adjust it to match\n * filter domain\n *\n * @returns value - adjusted value to match filter or null to remove filter\n */\n// eslint-disable-next-line complexity\nexport function adjustValueToFilterDomain(value: Filter['value'], {domain, type}) {\n  if (!type) {\n    return false;\n  }\n  // if the current filter is a polygon it will not have any domain\n  // all other filter types require domain\n  if (type !== FILTER_TYPES.polygon && !domain) {\n    return false;\n  }\n\n  switch (type) {\n    case FILTER_TYPES.range:\n    case FILTER_TYPES.timeRange:\n      if (!Array.isArray(value) || value.length !== 2) {\n        return domain.map(d => d);\n      }\n\n      return value.map((d, i) => (notNullorUndefined(d) && isInRange(d, domain) ? d : domain[i]));\n\n    case FILTER_TYPES.multiSelect:\n      if (!Array.isArray(value)) {\n        return [];\n      }\n      const filteredValue = value.filter(d => domain.includes(d));\n      return filteredValue.length ? filteredValue : [];\n\n    case FILTER_TYPES.select:\n      return domain.includes(value) ? value : true;\n    case FILTER_TYPES.polygon:\n      return value;\n\n    default:\n      return null;\n  }\n}\n/* eslint-enable complexity */\n\n/**\n * Calculate numeric domain and suitable step\n */\nexport function getNumericFieldDomain(\n  dataContainer: DataContainerInterface,\n  valueAccessor: dataValueAccessor\n): RangeFieldDomain {\n  let domain: [number, number] = [0, 1];\n  let step = 0.1;\n\n  const mappedValue = dataContainer.mapIndex(valueAccessor);\n\n  if (dataContainer.numRows() > 1) {\n    domain = ScaleUtils.getLinearDomain(mappedValue);\n    const diff = domain[1] - domain[0];\n\n    // in case equal domain, [96, 96], which will break quantize scale\n    if (!diff) {\n      domain[1] = domain[0] + 1;\n    }\n\n    step = getNumericStepSize(diff) || step;\n    domain[0] = formatNumberByStep(domain[0], step, 'floor');\n    domain[1] = formatNumberByStep(domain[1], step, 'ceil');\n  }\n\n  const {histogram, enlargedHistogram} = getHistogram(domain, mappedValue);\n\n  return {domain, step, histogram, enlargedHistogram};\n}\n\n/**\n * Calculate step size for range and timerange filter\n */\nexport function getNumericStepSize(diff: number): number {\n  diff = Math.abs(diff);\n\n  if (diff > 100) {\n    return 1;\n  } else if (diff > 3) {\n    return 0.01;\n  } else if (diff > 1) {\n    return 0.001;\n  }\n  // Try to get at least 1000 steps - and keep the step size below that of\n  // the (diff > 1) case.\n  const x = diff / 1000;\n  // Find the exponent and truncate to 10 to the power of that exponent\n\n  const exponentialForm = x.toExponential();\n  const exponent = parseFloat(exponentialForm.split('e')[1]);\n\n  // Getting ready for node 12\n  // this is why we need decimal.js\n  // Math.pow(10, -5) = 0.000009999999999999999\n  // the above result shows in browser and node 10\n  // node 12 behaves correctly\n  return new Decimal(10).pow(exponent).toNumber();\n}\n\n/**\n * Calculate timestamp domain and suitable step\n */\nexport function getTimestampFieldDomain(\n  dataContainer: DataContainerInterface,\n  valueAccessor: dataValueAccessor\n): TimeRangeFieldDomain {\n  // to avoid converting string format time to epoch\n  // every time we compare we store a value mapped to int in filter domain\n\n  const mappedValue = dataContainer.mapIndex(valueAccessor);\n  const domain = ScaleUtils.getLinearDomain(mappedValue);\n  const defaultTimeFormat = getTimeWidgetTitleFormatter(domain);\n\n  let step = 0.01;\n\n  const diff = domain[1] - domain[0];\n  // in case equal timestamp add 1 second padding to prevent break\n  if (!diff) {\n    domain[1] = domain[0] + 1000;\n  }\n  const entry = TimestampStepMap.find(f => f.max >= diff);\n  if (entry) {\n    step = entry.step;\n  }\n\n  const {histogram, enlargedHistogram} = getHistogram(domain, mappedValue);\n\n  return {\n    domain,\n    step,\n    mappedValue,\n    histogram,\n    enlargedHistogram,\n    defaultTimeFormat\n  };\n}\n\nexport function histogramConstruct(\n  domain: [number, number],\n  mappedValue: (Millisecond | number)[],\n  bins: number\n): HistogramBin[] {\n  return d3Histogram()\n    .thresholds(ticks(domain[0], domain[1], bins))\n    .domain(domain)(mappedValue)\n    .map(bin => ({\n      count: bin.length,\n      bin,\n      x0: bin.x0,\n      x1: bin.x1\n    }));\n}\n/**\n * Calculate histogram from domain and array of values\n */\nexport function getHistogram(\n  domain: [number, number],\n  mappedValue: (Millisecond | number)[]\n): {histogram: HistogramBin[]; enlargedHistogram: HistogramBin[]} {\n  const histogram = histogramConstruct(domain, mappedValue, histogramBins);\n  const enlargedHistogram = histogramConstruct(domain, mappedValue, enlargedHistogramBins);\n\n  return {histogram, enlargedHistogram};\n}\n\n/**\n * round number based on step\n *\n * @param {Number} val\n * @param {Number} step\n * @param {string} bound\n * @returns {Number} rounded number\n */\nexport function formatNumberByStep(val: number, step: number, bound: 'floor' | 'ceil'): number {\n  if (bound === 'floor') {\n    return Math.floor(val * (1 / step)) / (1 / step);\n  }\n\n  return Math.ceil(val * (1 / step)) / (1 / step);\n}\n\nexport function isInRange(val: any, domain: number[]): boolean {\n  if (!Array.isArray(domain)) {\n    return false;\n  }\n\n  return val >= domain[0] && val <= domain[1];\n}\n\n/**\n * Determines whether a point is within the provided polygon\n *\n * @param point as input search [lat, lng]\n * @param polygon Points must be within these (Multi)Polygon(s)\n * @return {boolean}\n */\nexport function isInPolygon(point: number[], polygon: any): boolean {\n  return booleanWithin(turfPoint(point), polygon);\n}\nexport function getTimeWidgetTitleFormatter(domain: [number, number]): string | null {\n  if (!isValidTimeDomain(domain)) {\n    return null;\n  }\n\n  const diff = domain[1] - domain[0];\n\n  // Local aware formats\n  // https://momentjs.com/docs/#/parsing/string-format\n  return diff > durationYear ? 'L' : diff > durationDay ? 'L LT' : 'L LTS';\n}\n\n/**\n * Sanity check on filters to prepare for save\n * @type {typeof import('./filter-utils').isFilterValidToSave}\n */\nexport function isFilterValidToSave(filter: any): boolean {\n  return (\n    filter?.type && Array.isArray(filter?.name) && (filter?.name.length || filter?.layerId.length)\n  );\n}\n\n/**\n * Sanity check on filters to prepare for save\n * @type {typeof import('./filter-utils').isValidFilterValue}\n */\n/* eslint-disable complexity */\nexport function isValidFilterValue(type: string | null, value: any): boolean {\n  if (!type) {\n    return false;\n  }\n  switch (type) {\n    case FILTER_TYPES.select:\n      return value === true || value === false;\n\n    case FILTER_TYPES.range:\n    case FILTER_TYPES.timeRange:\n      return Array.isArray(value) && value.every(v => v !== null && !isNaN(v));\n\n    case FILTER_TYPES.multiSelect:\n      return Array.isArray(value) && Boolean(value.length);\n\n    case FILTER_TYPES.input:\n      return Boolean(value.length);\n\n    case FILTER_TYPES.polygon:\n      const coordinates = get(value, ['geometry', 'coordinates']);\n      return Boolean(value && value.id && coordinates);\n\n    default:\n      return true;\n  }\n}\n\nexport function getColumnFilterProps<K extends KeplerTableModel<K, L>, L>(\n  filter: Filter,\n  dataset: K\n): {lineChart: LineChart; yAxs: Field} | {} {\n  if (filter.plotType === PLOT_TYPES.histogram || !filter.yAxis) {\n    // histogram should be calculated when create filter\n    return {};\n  }\n\n  const {mappedValue = []} = filter;\n  const {yAxis} = filter;\n  const fieldIdx = dataset.getColumnFieldIdx(yAxis.name);\n  if (fieldIdx < 0) {\n    Console.warn(`yAxis ${yAxis.name} does not exist in dataset`);\n    return {lineChart: {}, yAxis};\n  }\n\n  // return lineChart\n  const series = dataset.dataContainer\n    .map(\n      (row, rowIndex) => ({\n        x: mappedValue[rowIndex],\n        y: row.valueAt(fieldIdx)\n      }),\n      true\n    )\n    .filter(({x, y}) => Number.isFinite(x) && Number.isFinite(y))\n    .sort((a, b) => ascending(a.x, b.x));\n\n  const yDomain = extent(series, d => d.y);\n  const xDomain = [series[0].x, series[series.length - 1].x];\n\n  return {lineChart: {series, yDomain, xDomain}, yAxis};\n}\n\nexport function getDefaultFilterPlotType(filter: Filter): string | null {\n  const filterPlotTypes: typeof SupportedPlotType[keyof typeof SupportedPlotType] | null =\n    filter.type && SupportedPlotType[filter.type];\n  if (!filterPlotTypes) {\n    return null;\n  }\n\n  if (!filter.yAxis) {\n    return filterPlotTypes.default;\n  }\n\n  return filterPlotTypes[filter.yAxis.type] || null;\n}\n\n/**\n *\n * @param datasetIds list of dataset ids to be filtered\n * @param datasets all datasets\n * @param filters all filters to be applied to datasets\n * @return datasets - new updated datasets\n */\nexport function applyFiltersToDatasets<\n  K extends KeplerTableModel<K, L>,\n  L extends {config: {dataId: string | null}}\n>(\n  datasetIds: string[],\n  datasets: {[id: string]: K},\n  filters: Filter[],\n  layers?: L[]\n): {[id: string]: K} {\n  const dataIds = toArray(datasetIds);\n  return dataIds.reduce((acc, dataId) => {\n    const layersToFilter = (layers || []).filter(l => l.config.dataId === dataId);\n    const appliedFilters = filters.filter(d => shouldApplyFilter(d, dataId));\n    const table = datasets[dataId];\n\n    return {\n      ...acc,\n      [dataId]: table.filterTable(appliedFilters, layersToFilter, {})\n    };\n  }, datasets);\n}\n\n/**\n * Applies a new field name value to fielter and update both filter and dataset\n * @param filter - to be applied the new field name on\n * @param dataset - dataset the field belongs to\n * @param fieldName - field.name\n * @param filterDatasetIndex - field.name\n * @param option\n * @return - {filter, datasets}\n */\nexport function applyFilterFieldName<K extends KeplerTableModel<K, L>, L>(\n  filter: Filter,\n  dataset: K,\n  fieldName: string,\n  filterDatasetIndex = 0,\n  option?: {mergeDomain: boolean}\n): {\n  filter: Filter | null;\n  dataset: K;\n} {\n  // using filterDatasetIndex we can filter only the specified dataset\n  const mergeDomain = option && option.hasOwnProperty('mergeDomain') ? option.mergeDomain : false;\n\n  const fieldIndex = dataset.getColumnFieldIdx(fieldName);\n  // if no field with same name is found, move to the next datasets\n  if (fieldIndex === -1) {\n    // throw new Error(`fieldIndex not found. Dataset must contain a property with name: ${fieldName}`);\n    return {filter: null, dataset};\n  }\n\n  // TODO: validate field type\n  const filterProps = dataset.getColumnFilterProps(fieldName);\n\n  const newFilter = {\n    ...(mergeDomain ? mergeFilterDomainStep(filter, filterProps) : {...filter, ...filterProps}),\n    name: Object.assign([...toArray(filter.name)], {[filterDatasetIndex]: fieldName}),\n    fieldIdx: Object.assign([...toArray(filter.fieldIdx)], {\n      [filterDatasetIndex]: fieldIndex\n    }),\n    // TODO, since we allow to add multiple fields to a filter we can no longer freeze the filter\n    freeze: true\n  };\n\n  return {\n    filter: newFilter,\n    dataset\n  };\n}\n\n/**\n * Merge one filter with other filter prop domain\n */\n/* eslint-disable complexity */\nexport function mergeFilterDomainStep(\n  filter: Filter,\n  filterProps?: Partial<Filter>\n): (Filter & {step?: number}) | null {\n  if (!filter) {\n    return null;\n  }\n\n  if (!filterProps) {\n    return filter;\n  }\n\n  if ((filter.fieldType && filter.fieldType !== filterProps.fieldType) || !filterProps.domain) {\n    return filter;\n  }\n\n  const combinedDomain = !filter.domain\n    ? filterProps.domain\n    : [...(filter.domain || []), ...(filterProps.domain || [])].sort((a, b) => a - b);\n\n  const newFilter = {\n    ...filter,\n    ...filterProps,\n    domain: [combinedDomain[0], combinedDomain[combinedDomain.length - 1]]\n  };\n\n  switch (filterProps.fieldType) {\n    case ALL_FIELD_TYPES.string:\n    case ALL_FIELD_TYPES.date:\n      return {\n        ...newFilter,\n        domain: unique(combinedDomain).sort()\n      };\n\n    case ALL_FIELD_TYPES.timestamp:\n      const step =\n        (filter as TimeRangeFilter).step < (filterProps as TimeRangeFieldDomain).step\n          ? (filter as TimeRangeFilter).step\n          : (filterProps as TimeRangeFieldDomain).step;\n\n      return {\n        ...newFilter,\n        step\n      };\n    case ALL_FIELD_TYPES.real:\n    case ALL_FIELD_TYPES.integer:\n    default:\n      return newFilter;\n  }\n}\n/* eslint-enable complexity */\n\n/**\n * Generates polygon filter\n */\nexport const featureToFilterValue = (\n  feature: Feature,\n  filterId: string,\n  properties?: {}\n): FeatureValue => ({\n  ...feature,\n  id: feature.id,\n  properties: {\n    ...feature.properties,\n    ...properties,\n    filterId\n  }\n});\n\nexport const getFilterIdInFeature = (f: FeatureValue): string => get(f, ['properties', 'filterId']);\n\n/**\n * Generates polygon filter\n */\nexport function generatePolygonFilter<\n  L extends {config: {dataId: string | null; label: string}; id: string}\n>(layers: L[], feature: Feature): PolygonFilter {\n  const dataId = layers.map(l => l.config.dataId).filter(notNullorUndefined);\n  const layerId = layers.map(l => l.id);\n  const name = layers.map(l => l.config.label);\n  const filter = getDefaultFilter({dataId});\n  return {\n    ...filter,\n    fixedDomain: true,\n    type: FILTER_TYPES.polygon,\n    name,\n    layerId,\n    value: featureToFilterValue(feature, filter.id, {isVisible: true})\n  };\n}\n\n/**\n * Run filter entirely on CPU\n */\ninterface StateType<K extends KeplerTableModel<K, L>, L> {\n  layers: L[];\n  filters: Filter[];\n  datasets: {[id: string]: K};\n}\n\nexport function filterDatasetCPU<T extends StateType<K, L>, K extends KeplerTableModel<K, L>, L>(\n  state: T,\n  dataId: string\n): T {\n  const datasetFilters = state.filters.filter(f => f.dataId.includes(dataId));\n  const dataset = state.datasets[dataId];\n\n  if (!dataset) {\n    return state;\n  }\n\n  const cpuFilteredDataset = dataset.filterTableCPU(datasetFilters, state.layers);\n\n  return set(['datasets', dataId], cpuFilteredDataset, state);\n}\n\n/**\n * Validate parsed filters with datasets and add filterProps to field\n */\ntype MinVisStateForFilter = Pick<VisState, 'layers' | 'datasets' | 'isMergingDatasets'>;\nexport function validateFiltersUpdateDatasets<\n  S extends MinVisStateForFilter,\n  K extends KeplerTableModel<K, L>,\n  L extends {config: {dataId: string | null; label: string}; id: string}\n>(\n  state: S,\n  filtersToValidate: ParsedFilter[] = []\n): {\n  validated: Filter[];\n  failed: Filter[];\n  updatedDatasets: S['datasets'];\n} {\n  // TODO Better Typings here\n  const validated: any[] = [];\n  const failed: any[] = [];\n  const {datasets} = state;\n  let updatedDatasets = datasets;\n\n  // merge filters\n  filtersToValidate.forEach(filter => {\n    // we can only look for datasets define in the filter dataId\n    const datasetIds = toArray(filter.dataId);\n\n    // we can merge a filter only if all datasets in filter.dataId are loaded\n    if (datasetIds.every(d => datasets[d] && !state.isMergingDatasets[d])) {\n      // all datasetIds in filter must be present the state datasets\n      const {filter: validatedFilter, applyToDatasets, augmentedDatasets} = datasetIds.reduce<{\n        filter: Filter | null;\n        applyToDatasets: string[];\n        augmentedDatasets: {[datasetId: string]: any};\n      }>(\n        (acc, datasetId) => {\n          const dataset = updatedDatasets[datasetId];\n          const layers = state.layers.filter(l => l.config.dataId === dataset.id);\n          const {filter: updatedFilter, dataset: updatedDataset} = validateFilterWithData(\n            acc.augmentedDatasets[datasetId] || dataset,\n            filter,\n            layers\n          );\n\n          if (updatedFilter) {\n            return {\n              ...acc,\n              // merge filter props\n              filter: acc.filter\n                ? {\n                    ...acc.filter,\n                    // TODO check: changed from acc to acc.filter to fix types\n                    ...mergeFilterDomainStep(acc.filter, updatedFilter)\n                  }\n                : updatedFilter,\n\n              applyToDatasets: [...acc.applyToDatasets, datasetId],\n\n              augmentedDatasets: {\n                ...acc.augmentedDatasets,\n                [datasetId]: updatedDataset\n              }\n            };\n          }\n\n          return acc;\n        },\n        {\n          filter: null,\n          applyToDatasets: [],\n          augmentedDatasets: {}\n        }\n      );\n\n      if (validatedFilter && isEqual(datasetIds, applyToDatasets)) {\n        validated.push(validatedFilter);\n        updatedDatasets = {\n          ...updatedDatasets,\n          ...augmentedDatasets\n        };\n      } else {\n        failed.push(filter);\n      }\n    } else {\n      failed.push(filter);\n    }\n  });\n\n  return {validated, failed, updatedDatasets};\n}\n\nexport function getFilterPlot<K extends KeplerTableModel<K, L>, L>(\n  filter: Filter,\n  dataset: K\n): {lineChart: LineChart; yAxs: Field} | {} {\n  if (filter.plotType === PLOT_TYPES.histogram || !filter.yAxis) {\n    // histogram should be calculated when create filter\n    return {};\n  }\n\n  const {mappedValue = []} = filter;\n  const {yAxis} = filter;\n  const fieldIdx = dataset.getColumnFieldIdx(yAxis.name);\n  if (fieldIdx < 0) {\n    Console.warn(`yAxis ${yAxis.name} does not exist in dataset`);\n    return {lineChart: {}, yAxis};\n  }\n\n  // return lineChart\n  const series = dataset.dataContainer\n    .map(\n      (row, rowIndex) => ({\n        x: mappedValue[rowIndex],\n        y: row.valueAt(fieldIdx)\n      }),\n      true\n    )\n    .filter(({x, y}) => Number.isFinite(x) && Number.isFinite(y))\n    .sort((a, b) => ascending(a.x, b.x));\n\n  const yDomain = extent(series, d => d.y);\n  const xDomain = [series[0].x, series[series.length - 1].x];\n\n  return {lineChart: {series, yDomain, xDomain}, yAxis};\n}\n\n/**\n * Retrieve interval bins for time filter\n */\nexport function getIntervalBins(filter: TimeRangeFilter) {\n  const {bins} = filter;\n  const interval = filter.plotType?.interval;\n  if (!interval || !bins || Object.keys(bins).length === 0) {\n    return null;\n  }\n  const values = Object.values(bins);\n  return values[0] ? values[0][interval] : null;\n}\n\nexport function isValidTimeDomain(domain) {\n  return Array.isArray(domain) && domain.every(Number.isFinite);\n}\n\nexport function getTimeWidgetHintFormatter(domain: [number, number]): string | undefined {\n  if (!isValidTimeDomain(domain)) {\n    return undefined;\n  }\n\n  const diff = domain[1] - domain[0];\n  return diff > durationWeek\n    ? 'L'\n    : diff > durationDay\n    ? 'L LT'\n    : diff > durationHour\n    ? 'LT'\n    : 'LTS';\n}\n\nexport function isSideFilter(filter: Filter): boolean {\n  return filter.view === FILTER_VIEW_TYPES.side;\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\n// from http://blog.stevenlevithan.com/archives/parseuri\n/**\n * Allows to break down a url into multiple params\n * @param str\n */\nexport function parseUri(str) {\n  const o = parseUri.options;\n  const m = o.parser[o.strictMode ? 'strict' : 'loose'].exec(str);\n  const uri = {};\n  let i = 14;\n\n  while (i--) uri[o.key[i]] = m[i] || '';\n\n  uri[o.q.name] = {};\n  uri[o.key[12]].replace(o.q.parser, ($0, $1, $2) => {\n    if ($1) uri[o.q.name][$1] = $2;\n  });\n\n  return uri;\n}\n\nparseUri.options = {\n  strictMode: false,\n  key: [\n    'source',\n    'protocol',\n    'authority',\n    'userInfo',\n    'user',\n    'password',\n    'host',\n    'port',\n    'relative',\n    'path',\n    'directory',\n    'file',\n    'query',\n    'anchor'\n  ],\n  q: {\n    name: 'queryKey',\n    parser: /(?:^|&)([^&=]*)=?([^&]*)/g\n  },\n  parser: {\n    strict: /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?))?((((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?(?:#(.*))?)/,\n    loose: /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/\n  }\n};\n\n/**\n * Validates an url\n * @param str\n */\nexport function validateUrl(str) {\n  return str?.match(/^(ftp|http|https?):\\/\\/+(www\\.)?[a-z0-9\\-\\.]{3,}\\.[a-z]{3}$/);\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {push} from 'react-router-redux';\nimport {request, text as requestText, json as requestJson} from 'd3-request';\nimport {loadFiles, toggleModal} from '@kepler.gl/actions';\nimport {load} from '@loaders.gl/core';\nimport {CSVLoader} from '@loaders.gl/csv';\nimport {ArrowLoader} from '@loaders.gl/arrow';\nimport {_GeoJSONLoader as GeoJSONLoader} from '@loaders.gl/json';\n\nimport {\n  LOADING_SAMPLE_ERROR_MESSAGE,\n  LOADING_SAMPLE_LIST_ERROR_MESSAGE,\n  MAP_CONFIG_URL\n} from './constants/default-settings';\nimport {parseUri} from './utils/url';\n\n// CONSTANTS\nexport const INIT = 'INIT';\nexport const LOAD_REMOTE_RESOURCE_SUCCESS = 'LOAD_REMOTE_RESOURCE_SUCCESS';\nexport const LOAD_REMOTE_RESOURCE_ERROR = 'LOAD_REMOTE_RESOURCE_ERROR';\nexport const LOAD_MAP_SAMPLE_FILE = 'LOAD_MAP_SAMPLE_FILE';\nexport const SET_SAMPLE_LOADING_STATUS = 'SET_SAMPLE_LOADING_STATUS';\n\n// Sharing\nexport const PUSHING_FILE = 'PUSHING_FILE';\nexport const CLOUD_LOGIN_SUCCESS = 'CLOUD_LOGIN_SUCCESS';\n\n// ACTIONS\nexport function initApp() {\n  return {\n    type: INIT\n  };\n}\n\nexport function loadRemoteResourceSuccess(response, config, options) {\n  return {\n    type: LOAD_REMOTE_RESOURCE_SUCCESS,\n    response,\n    config,\n    options\n  };\n}\n\nexport function loadRemoteResourceError(error, url) {\n  return {\n    type: LOAD_REMOTE_RESOURCE_ERROR,\n    error,\n    url\n  };\n}\n\nexport function loadMapSampleFile(samples) {\n  return {\n    type: LOAD_MAP_SAMPLE_FILE,\n    samples\n  };\n}\n\nexport function setLoadingMapStatus(isMapLoading) {\n  return {\n    type: SET_SAMPLE_LOADING_STATUS,\n    isMapLoading\n  };\n}\n\n/**\n * Actions passed to kepler.gl, called\n *\n * Note: exportFile is called on both saving and sharing\n *\n * @param {*} param0\n */\nexport function onExportFileSuccess({response = {}, provider, options}) {\n  return dispatch => {\n    // if isPublic is true, use share Url\n    if (options.isPublic && provider.getShareUrl) {\n      dispatch(push(provider.getShareUrl(false)));\n    } else if (!options.isPublic && provider.getMapUrl) {\n      // if save private map to storage, use map url\n      dispatch(push(provider.getMapUrl(false)));\n    }\n  };\n}\n\nexport function onLoadCloudMapSuccess({provider, loadParams}) {\n  return dispatch => {\n    const mapUrl = provider?.getMapUrl(loadParams);\n    if (mapUrl) {\n      const url = `demo/map/${provider.name}?path=${mapUrl}`;\n      dispatch(push(url));\n    }\n  };\n}\n/**\n * this method detects whther the response status is < 200 or > 300 in case the error\n * is not caught by the actualy request framework\n * @param response the response\n * @returns {{status: *, message: (*|{statusCode}|Object)}}\n */\nfunction detectResponseError(response) {\n  if (response.statusCode && (response.statusCode < 200 || response.statusCode >= 300)) {\n    return {\n      status: response.statusCode,\n      message: response.body || response.message || response\n    };\n  }\n}\n\n// This can be moved into Kepler.gl to provide ability to load data from remote URLs\n/**\n * The method is able to load both data and kepler.gl files.\n * It uses loadFile action to dispatcha and add new datasets/configs\n * to the kepler.gl instance\n * @param options\n * @param {string} options.dataUrl the URL to fetch data from. Current supoprted file type json,csv, kepler.json\n * @returns {Function}\n */\nexport function loadRemoteMap(options) {\n  return dispatch => {\n    dispatch(setLoadingMapStatus(true));\n    // breakdown url into url+query params\n    loadRemoteRawData(options.dataUrl).then(\n      // In this part we turn the response into a FileBlob\n      // so we can use it to call loadFiles\n      ([file, url]) => {\n        const {file: filename} = parseUri(url);\n        dispatch(loadFiles([new File([file], filename)])).then(() =>\n          dispatch(setLoadingMapStatus(false))\n        );\n      },\n      error => {\n        const {target = {}} = error;\n        const {status, responseText} = target;\n        dispatch(loadRemoteResourceError({status, message: responseText}, options.dataUrl));\n      }\n    );\n  };\n}\n\n/**\n * Load a file from a remote URL\n * @param url\n * @returns {Promise<any>}\n */\nfunction loadRemoteRawData(url) {\n  if (!url) {\n    // TODO: we should return reject with an appropriate error\n    return Promise.resolve(null);\n  }\n\n  return new Promise((resolve, reject) => {\n    request(url, (error, result) => {\n      if (error) {\n        reject(error);\n        return;\n      }\n      const responseError = detectResponseError(result);\n      if (responseError) {\n        reject(responseError);\n        return;\n      }\n      resolve([result.response, url]);\n    });\n  });\n}\n\n// The following methods are only used to load SAMPLES\n/**\n *\n * @param {Object} options\n * @param {string} [options.dataUrl] the URL to fetch data from, e.g. https://raw.githubusercontent.com/keplergl/kepler.gl-data/master/earthquakes/data.csv\n * @param {string} [options.configUrl] the URL string to fetch kepler config from, e.g. https://raw.githubusercontent.com/keplergl/kepler.gl-data/master/earthquakes/config.json\n * @param {string} [options.id] the id used as dataset unique identifier, e.g. earthquakes\n * @param {string} [options.label] the label used to describe the new dataset, e.g. California Earthquakes\n * @param {string} [options.queryType] the type of query to execute to load data/config, e.g. sample\n * @param {string} [options.imageUrl] the URL to fetch the dataset image to use in sample gallery\n * @param {string} [options.description] the description used in sample galley to define the current example\n * @param {string} [options.size] the number of entries displayed in the current sample\n * @param {string} [keplergl] url to fetch the full data/config generated by kepler\n * @returns {Function}\n */\nexport function loadSample(options, pushRoute = true) {\n  return (dispatch, getState) => {\n    const {routing} = getState();\n    if (options.id && pushRoute) {\n      dispatch(push(`/demo/${options.id}${routing.locationBeforeTransitions?.search ?? ''}`));\n    }\n    // if the sample has a kepler.gl config file url we load it\n    if (options.keplergl) {\n      dispatch(loadRemoteMap({dataUrl: options.keplergl}));\n    } else {\n      dispatch(loadRemoteSampleMap(options));\n    }\n\n    dispatch(setLoadingMapStatus(true));\n  };\n}\n\n/**\n * Load remote map with config and data\n * @param options {configUrl, dataUrl}\n * @returns {Function}\n */\nfunction loadRemoteSampleMap(options) {\n  return dispatch => {\n    // Load configuration first\n    const {configUrl, dataUrl} = options;\n\n    Promise.all([loadRemoteConfig(configUrl), loadRemoteData(dataUrl)]).then(\n      ([config, data]) => {\n        // TODO: these two actions can be merged\n        dispatch(loadRemoteResourceSuccess(data, config, options));\n        dispatch(toggleModal(null));\n      },\n      error => {\n        if (error) {\n          const {target = {}} = error;\n          const {status, responseText} = target;\n          dispatch(\n            loadRemoteResourceError(\n              {\n                status,\n                message: `${responseText} - ${LOADING_SAMPLE_ERROR_MESSAGE} ${options.id} (${configUrl})`\n              },\n              configUrl\n            )\n          );\n        }\n      }\n    );\n  };\n}\n\n/**\n *\n * @param url\n * @returns {Promise<any>}\n */\nfunction loadRemoteConfig(url) {\n  if (!url) {\n    // TODO: we should return reject with an appropriate error\n    return Promise.resolve(null);\n  }\n\n  return new Promise((resolve, reject) => {\n    requestJson(url, (error, config) => {\n      if (error) {\n        reject(error);\n        return;\n      }\n      const responseError = detectResponseError(config);\n      if (responseError) {\n        reject(responseError);\n        return;\n      }\n      resolve(config);\n    });\n  });\n}\n\n/**\n *\n * @param url to fetch data from (csv, json, geojson)\n * @returns {Promise<any>}\n */\nfunction loadRemoteData(url) {\n  if (!url) {\n    // TODO: we should return reject with an appropriate error\n    return Promise.resolve(null);\n  }\n\n  let requestMethod = requestText;\n  if (url.includes('.json') || url.includes('.geojson')) {\n    requestMethod = requestJson;\n  }\n\n  // Load data\n  return new Promise(resolve => {\n    const loaders = [CSVLoader, ArrowLoader, GeoJSONLoader];\n    const loadOptions = {\n      arrow: {\n        shape: 'arrow-table'\n      },\n      csv: {\n        shape: 'object-row-table'\n      },\n      metadata: true\n    };\n    const data = load(url, loaders, loadOptions);\n    resolve(data);\n  });\n}\n\n/**\n *\n * @param sampleMapId optional if we pass the sampleMapId, after fetching\n * map sample configurations we are going to load the actual map data if it exists\n * @returns {function(*)}\n */\nexport function loadSampleConfigurations(sampleMapId = null) {\n  return dispatch => {\n    requestJson(MAP_CONFIG_URL, (error, samples) => {\n      if (error) {\n        const {target = {}} = error;\n        const {status, responseText} = target;\n        dispatch(\n          loadRemoteResourceError(\n            {status, message: `${responseText} - ${LOADING_SAMPLE_LIST_ERROR_MESSAGE}`},\n            MAP_CONFIG_URL\n          )\n        );\n      } else {\n        const responseError = detectResponseError(samples);\n        if (responseError) {\n          dispatch(loadRemoteResourceError(responseError, MAP_CONFIG_URL));\n          return;\n        }\n\n        dispatch(loadMapSampleFile(samples));\n        // Load the specified map\n        const map = sampleMapId && samples.find(s => s.id === sampleMapId);\n        if (map) {\n          dispatch(loadSample(map, false));\n        }\n      }\n    });\n  };\n}\n","// SPDX-License-Identifier: MIT\r\n// Copyright contributors to the kepler.gl project\r\n\r\nimport {combineReducers} from 'redux';\r\nimport {handleActions} from 'redux-actions';\r\n\r\nimport keplerGlReducer, {combinedUpdaters, uiStateUpdaters} from '@kepler.gl/reducers';\r\nimport {processGeojson, processRowObject, processArrowTable} from '@kepler.gl/processors';\r\nimport KeplerGlSchema from '@kepler.gl/schemas';\r\nimport {EXPORT_MAP_FORMATS} from '@kepler.gl/constants';\r\n\r\nimport {\r\n  INIT,\r\n  LOAD_MAP_SAMPLE_FILE,\r\n  LOAD_REMOTE_RESOURCE_SUCCESS,\r\n  LOAD_REMOTE_RESOURCE_ERROR,\r\n  SET_SAMPLE_LOADING_STATUS\r\n} from '../actions';\r\n\r\nimport {CLOUD_PROVIDERS_CONFIGURATION} from '../constants/default-settings';\r\nimport {generateHashId} from '../utils/strings';\r\n\r\n// INITIAL_APP_STATE\r\nconst initialAppState = {\r\n  appName: 'example',\r\n  loaded: false,\r\n  sampleMaps: [], // this is used to store sample maps fetch from a remote json file\r\n  isMapLoading: false, // determine whether we are loading a sample map,\r\n  error: null // contains error when loading/retrieving data/configuration\r\n  // {\r\n  //   status: null,\r\n  //   message: null\r\n  // }\r\n};\r\n\r\n// App reducer\r\nexport const appReducer = handleActions(\r\n  {\r\n    [INIT]: state => ({\r\n      ...state,\r\n      loaded: true\r\n    }),\r\n    [LOAD_MAP_SAMPLE_FILE]: (state, action) => ({\r\n      ...state,\r\n      sampleMaps: action.samples\r\n    }),\r\n    [SET_SAMPLE_LOADING_STATUS]: (state, action) => ({\r\n      ...state,\r\n      isMapLoading: action.isMapLoading\r\n    })\r\n  },\r\n  initialAppState\r\n);\r\n\r\nconst {DEFAULT_EXPORT_MAP} = uiStateUpdaters;\r\n\r\n// combine app reducer and keplerGl reducer\r\n// to mimic the reducer state of kepler.gl website\r\nconst demoReducer = combineReducers({\r\n  // mount keplerGl reducer\r\n  keplerGl: keplerGlReducer.initialState({\r\n    // In order to provide single file export functionality\r\n    // we are going to set the mapbox access token to be used\r\n    // in the exported file\r\n    uiState: {\r\n      currentModal:null,\r\n      activeSidePanel:\"filter\",\r\n      exportMap: {\r\n        ...DEFAULT_EXPORT_MAP,\r\n        [EXPORT_MAP_FORMATS.HTML]: {\r\n          ...DEFAULT_EXPORT_MAP[[EXPORT_MAP_FORMATS.HTML]],\r\n          exportMapboxAccessToken: CLOUD_PROVIDERS_CONFIGURATION.EXPORT_MAPBOX_TOKEN\r\n        }\r\n      }\r\n    },\r\n    visState: {\r\n      loaders: [], // Add additional loaders.gl loaders here\r\n      loadOptions: {} // Add additional loaders.gl loader options here\r\n    }\r\n  }),\r\n  app: appReducer\r\n});\r\n\r\n// this can be moved into a action and call kepler.gl action\r\n/**\r\n *\r\n * @param state\r\n * @param action {map: resultset, config, map}\r\n * @returns {{app: {isMapLoading: boolean}, keplerGl: {map: (state|*)}}}\r\n */\r\nexport const loadRemoteResourceSuccess = (state, action) => {\r\n  // TODO: replace generate with a different function\r\n  const datasetId = action.options.id || generateHashId(6);\r\n  const {dataUrl} = action.options;\r\n  let processorMethod = processRowObject;\r\n  // TODO: create helper to determine file ext eligibility\r\n  if (dataUrl.includes('.json') || dataUrl.includes('.geojson')) {\r\n    processorMethod = processGeojson;\r\n  } else if (dataUrl.includes('.arrow')) {\r\n    processorMethod = processArrowTable;\r\n  }\r\n\r\n  const datasets = {\r\n    info: {\r\n      id: datasetId\r\n    },\r\n    data: processorMethod(action.response)\r\n  };\r\n\r\n  const config = action.config ? KeplerGlSchema.parseSavedConfig(action.config) : null;\r\n\r\n  const keplerGlInstance = combinedUpdaters.addDataToMapUpdater(\r\n    state.keplerGl.map, // \"map\" is the id of your kepler.gl instance\r\n    {\r\n      payload: {\r\n        datasets,\r\n        config,\r\n        options: {\r\n          centerMap: Boolean(!action.config)\r\n        }\r\n      }\r\n    }\r\n  );\r\n\r\n  return {\r\n    ...state,\r\n    app: {\r\n      ...state.app,\r\n      currentSample: action.options,\r\n      isMapLoading: false // we turn off the spinner\r\n    },\r\n    keplerGl: {\r\n      ...state.keplerGl, // in case you keep multiple instances\r\n      map: keplerGlInstance\r\n    }\r\n  };\r\n};\r\n\r\nexport const loadRemoteResourceError = (state, action) => {\r\n  const {error, url} = action;\r\n\r\n  const errorNote = {\r\n    type: 'error',\r\n    message: error.message || `Error loading ${url}`\r\n  };\r\n\r\n  return {\r\n    ...state,\r\n    app: {\r\n      ...state.app,\r\n      isMapLoading: false // we turn of the spinner\r\n    },\r\n    keplerGl: {\r\n      ...state.keplerGl, // in case you keep multiple instances\r\n      map: {\r\n        ...state.keplerGl.map,\r\n        uiState: uiStateUpdaters.addNotificationUpdater(state.keplerGl.map.uiState, {\r\n          payload: errorNote\r\n        })\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nconst composedUpdaters = {\r\n  [LOAD_REMOTE_RESOURCE_SUCCESS]: loadRemoteResourceSuccess,\r\n  [LOAD_REMOTE_RESOURCE_ERROR]: loadRemoteResourceError\r\n};\r\n\r\nconst composedReducer = (state, action) => {\r\n  if (composedUpdaters[action.type]) {\r\n    return composedUpdaters[action.type](state, action);\r\n  }\r\n  return demoReducer(state, action);\r\n};\r\n\r\n// export demoReducer to be combined in website app\r\nexport default composedReducer;\r\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\n/**\n * Generate a hash string based on number of character\n * @param {number} count\n * @returns {string} hash string\n */\nexport function generateHashId(count) {\n  return Math.random()\n    .toString(36)\n    .substr(count);\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {combineReducers, createStore, applyMiddleware, compose} from 'redux';\nimport {routerReducer, routerMiddleware} from 'react-router-redux';\nimport {browserHistory} from 'react-router';\nimport {enhanceReduxMiddleware} from '@kepler.gl/reducers';\nimport thunk from 'redux-thunk';\n// eslint-disable-next-line no-unused-vars\nimport window from 'global/window';\n\nimport demoReducer from './reducers/index';\n\nconst reducers = combineReducers({\n  demo: demoReducer,\n  routing: routerReducer\n});\n\nexport const middlewares = enhanceReduxMiddleware([thunk, routerMiddleware(browserHistory)]);\n\nexport const enhancers = [applyMiddleware(...middlewares)];\n\nconst initialState = {};\n\n// eslint-disable-next-line prefer-const\nlet composeEnhancers = compose;\n\n/**\n * comment out code below to enable Redux Devtools\n */\n\nif (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) {\n  composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n    actionsBlacklist: [\n      '@@kepler.gl/MOUSE_MOVE',\n      '@@kepler.gl/UPDATE_MAP',\n      '@@kepler.gl/LAYER_HOVER'\n    ]\n  });\n}\n\nexport default createStore(reducers, initialState, composeEnhancers(...enhancers));\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport {Icons} from '@kepler.gl/components';\n\nconst StyledBanner = styled.div`\n  align-items: center;\n  background-color: ${props => props.bgColor};\n  color: ${props => props.fontColor};\n  display: flex;\n  height: ${props => props.height}px;\n  justify-content: space-between;\n  padding: 0 40px;\n  position: absolute;\n  transition: top 1s;\n  width: 100%;\n  z-index: 9999;\n\n  svg:hover {\n    cursor: pointer;\n  }\n\n  top: ${props => (props.visible ? 0 : -100)}px;\n`;\n\nconst Banner = ({\n  bgColor = '#1F7CF4',\n  fontColor = '#FFFFFF',\n  height = 30,\n  children,\n  onClose,\n  show\n}) => (\n  <StyledBanner\n    className=\"top-banner\"\n    bgColor={bgColor}\n    fontColor={fontColor}\n    height={height}\n    visible={show}\n  >\n    <div>{children}</div>\n    <Icons.Delete height=\"14px\" onClick={onClose} />\n  </StyledBanner>\n);\n\nexport default Banner;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst StyledText = styled.div`\n  font-size: 12px;\n`;\n\nconst StyledLink = styled.a`\n  text-decoration: underline !important;\n  color: white !important;\n  font-weight: 500;\n  margin-left: 8px;\n\n  :hover {\n    cursor: pointer;\n  }\n`;\n\nconst DisableBanner = styled.div`\n  display: inline-block;\n  margin-left: 20px;\n`;\n\n// We are using the link to make sure users who have seen\n// previous banners can see this one because we check localstorage key\nexport const FormLink = 'https://shan990829.typeform.com/to/RbCAXt';\n\nconst Announcement = ({onDisable}) => (\n  <StyledText>\n    <span>\n      Kepler.gl turns two years old! Help our open source community by taking this 5-minute-survey\n      and get a chance to win a <b>$100 Amazon gift card</b>. Make your answers count!\n    </span>\n    <StyledLink target=\"_blank\" href={FormLink}>\n      Take the survey\n    </StyledLink>\n    {onDisable ? (\n      <DisableBanner>\n        <StyledLink onClick={onDisable}>Already provided my feedback!</StyledLink>\n      </DisableBanner>\n    ) : null}\n  </StyledText>\n);\n\nexport default Announcement;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport {format} from 'd3-format';\nimport {LoadingDialog} from '@kepler.gl/components';\nimport {FormattedMessage} from 'react-intl';\n\nconst numFormat = format(',');\n\nconst StyledSampleGallery = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n`;\n\nconst StyledSampleMap = styled.div`\n  font-size: 14px;\n  font-weight: 500;\n  color: ${props => props.theme.textColorLT};\n  line-height: 22px;\n  width: 30%;\n  max-width: 480px;\n  margin-bottom: 50px;\n\n  .sample-map__image {\n    border-radius: 4px;\n    overflow: hidden;\n    margin-bottom: 12px;\n    opacity: 0.9;\n    transition: opacity 0.4s ease;\n    position: relative;\n    line-height: 0;\n\n    img {\n      max-width: 100%;\n    }\n    :hover {\n      cursor: pointer;\n      opacity: 1;\n    }\n  }\n\n  .sample-map__size {\n    font-size: 12px;\n    font-weight: 400;\n    line-height: 24px;\n  }\n\n  :hover {\n    .sample-map__image__caption {\n      opacity: 0.8;\n      transition: opacity 0.4s ease;\n    }\n  }\n`;\n\nconst StyledImageCaption = styled.div`\n  color: ${props => props.theme.labelColorLT};\n  font-size: 11px;\n  font-weight: 400;\n  line-height: 16px;\n  margin-top: 10px;\n  opacity: 0;\n`;\n\nconst StyledError = styled.div`\n  color: red;\n  font-size: 14px;\n  margin-bottom: 16px;\n`;\n\nconst SampleMap = ({id, sample, onClick, locale}) => (\n  <StyledSampleMap id={id} className=\"sample-map-gallery__item\">\n    <div className=\"sample-map\">\n      <div className=\"sample-map__image\" onClick={onClick}>\n        {sample.imageUrl && <img src={sample.imageUrl} />}\n      </div>\n      <div className=\"sample-map__title\">{sample.label}</div>\n      <div className=\"sample-map__size\">\n        <FormattedMessage\n          id={'sampleDataViewer.rowCount'}\n          values={{rowCount: numFormat(sample.size)}}\n        />\n      </div>\n      <StyledImageCaption className=\"sample-map__image__caption\">\n        {sample.description}\n      </StyledImageCaption>\n    </div>\n  </StyledSampleMap>\n);\n\nconst SampleMapGallery = ({\n  sampleMaps,\n  onLoadSample,\n  error,\n  isMapLoading,\n  locale,\n  loadSampleConfigurations\n}) => {\n  useEffect(() => {\n    if (!sampleMaps.length) {\n      loadSampleConfigurations();\n    }\n  }, [sampleMaps, loadSampleConfigurations]);\n\n  return (\n    <div className=\"sample-data-modal\">\n      {error ? (\n        <StyledError>{error.message}</StyledError>\n      ) : isMapLoading ? (\n        <LoadingDialog size={64} />\n      ) : (\n        <StyledSampleGallery className=\"sample-map-gallery\">\n          {sampleMaps\n            .filter(sp => sp.visible)\n            .map(sp => (\n              <SampleMap\n                id={sp.id}\n                sample={sp}\n                key={sp.id}\n                onClick={() => onLoadSample(sp)}\n                locale={locale}\n              />\n            ))}\n        </StyledSampleGallery>\n      )}\n    </div>\n  );\n};\n\nSampleMapGallery.propTypes = {\n  sampleMaps: PropTypes.arrayOf(PropTypes.object),\n  onLoadSample: PropTypes.func.isRequired,\n  loadSampleConfigurations: PropTypes.func.isRequired,\n  error: PropTypes.object\n};\n\nexport default SampleMapGallery;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\n// TODO: this will move onto kepler.gl core\nimport React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport {CORS_LINK} from '../../constants/default-settings';\nimport {FormattedMessage} from 'react-intl';\nimport {Button} from '@kepler.gl/components';\nimport {validateUrl} from '../../utils/url';\n\nconst propTypes = {\n  onLoadRemoteMap: PropTypes.func.isRequired\n};\n\nconst StyledDescription = styled.div`\n  font-size: 14px;\n  color: ${props => props.theme.labelColorLT};\n  line-height: 18px;\n  margin-bottom: 12px;\n`;\n\nconst InputForm = styled.div`\n  flex-grow: 1;\n  padding: 32px;\n  background-color: ${props => props.theme.panelBackgroundLT};\n`;\n\nconst StyledInput = styled.input`\n  width: 100%;\n  padding: ${props => props.theme.inputPadding};\n  color: ${props => (props.error ? 'red' : props.theme.titleColorLT)};\n  height: ${props => props.theme.inputBoxHeight};\n  border: 0;\n  outline: 0;\n  font-size: ${props => props.theme.inputFontSize};\n\n  :active,\n  :focus,\n  &.focus,\n  &.active {\n    outline: 0;\n  }\n`;\n\nconst StyledFromGroup = styled.div`\n  margin-top: 30px;\n  display: flex;\n  flex-direction: row;\n`;\n\nexport const StyledInputLabel = styled.div`\n  font-size: 11px;\n  color: ${props => props.theme.textColorLT};\n  letter-spacing: 0.2px;\n  ul {\n    padding-left: 12px;\n  }\n`;\n\nexport const StyledError = styled.div`\n  color: red;\n`;\n\nexport const StyledErrorDescription = styled.div`\n  font-size: 14px;\n`;\n\nconst Error = ({error, url}) => (\n  <StyledError>\n    <StyledErrorDescription>{url}</StyledErrorDescription>\n    <StyledErrorDescription>{error.message}</StyledErrorDescription>\n  </StyledError>\n);\n\nconst CORS_LINK_MESSAGE = {corsLink: CORS_LINK};\n\nclass LoadRemoteMap extends Component {\n  state = {\n    dataUrl: '',\n    error: null,\n    submitted: false\n  };\n\n  onMapUrlChange = e => {\n    this.setState({\n      dataUrl: e.target.value,\n      error: !validateUrl(e.target.value) ? {message: 'Incorrect URL'} : null\n    });\n  };\n\n  onLoadRemoteMap = () => {\n    const {dataUrl, error} = this.state;\n\n    this.setState({submitted: true});\n\n    if (!dataUrl || error) {\n      return;\n    }\n\n    this.props.onLoadRemoteMap({dataUrl});\n  };\n\n  render() {\n    const displayedError = this.props.error || this.state.submitted ? this.state.error : null;\n\n    return (\n      <div>\n        <InputForm>\n          <StyledDescription>\n            <FormattedMessage id={'loadRemoteMap.description'} />\n          </StyledDescription>\n          <StyledInputLabel>\n            <FormattedMessage id={'loadRemoteMap.message'} />\n          </StyledInputLabel>\n          <StyledInputLabel>\n            <FormattedMessage id={'loadRemoteMap.examples'} />\n            <ul>\n              <li>https://your.map.url/map.json</li>\n              <li>http://your.map.url/data.csv</li>\n            </ul>\n          </StyledInputLabel>\n          <StyledInputLabel>\n            <FormattedMessage id={'loadRemoteMap.cors'} />{' '}\n            <FormattedMessage id={'loadRemoteMap.clickHere'} values={CORS_LINK_MESSAGE} />\n          </StyledInputLabel>\n          <StyledFromGroup>\n            <StyledInput\n              onChange={this.onMapUrlChange}\n              type=\"text\"\n              placeholder=\"Url\"\n              value={this.state.dataUrl}\n              error={displayedError}\n            />\n            <Button type=\"submit\" cta size=\"small\" onClick={this.onLoadRemoteMap}>\n              <FormattedMessage id={'loadRemoteMap.fetch'} />\n            </Button>\n          </StyledFromGroup>\n          {displayedError && <Error error={displayedError} url={this.props.option?.dataUrl} />}\n        </InputForm>\n      </div>\n    );\n  }\n}\n\nLoadRemoteMap.propTypes = propTypes;\n\nexport default LoadRemoteMap;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport {Icons} from '@kepler.gl/components';\nimport {media} from '@kepler.gl/styles';\nimport {FormattedMessage} from 'react-intl';\n\nimport {ASSETS_URL} from '../../constants/default-settings';\n\nconst StyledMapIcon = styled.div`\n  background-image: url(\"${ASSETS_URL}icon-demo-map.jpg\");\n  background-repeat: no-repeat;\n  background-size: 64px 48px;\n  width: 64px;\n  height: 48px;\n  border-radius: 2px;\n\n  ${media.portable`\n    width: 48px;\n    height: 32px;\n  `};\n`;\n\nconst StyledTrySampleData = styled.div`\n  display: flex;\n  margin-bottom: 12px;\n  flex-grow: 1;\n  justify-content: flex-end;\n  color: ${props => props.theme.subtextColorLT};\n\n  .demo-map-title {\n    margin-left: 16px;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n  }\n\n  .demo-map-label {\n    font-size: 11px;\n\n    ${media.portable`\n      font-size: 10px;\n    `};\n  }\n\n  .demo-map-action {\n    display: flex;\n    font-size: 14px;\n    align-items: center;\n    color: ${props => props.theme.subtextColorLT};\n    cursor: pointer;\n\n    ${media.portable`\n      font-size: 12px;\n    `};\n\n    :hover {\n      color: ${props => props.theme.textColorLT};\n    }\n\n    span {\n      white-space: nowrap;\n    }\n\n    svg {\n      margin-left: 10px;\n    }\n  }\n`;\n\nconst SampleMapsTab = ({onClick}) => {\n  return (\n    <StyledTrySampleData className=\"try-sample-data\">\n      <StyledMapIcon className=\"demo-map-icon\" />\n      <div className=\"demo-map-title\">\n        <div className=\"demo-map-label\">\n          <FormattedMessage id={'sampleMapsTab.noData'} defaultMessage=\"No Data\" />\n        </div>\n        <div className=\"demo-map-action\" onClick={onClick}>\n          <FormattedMessage id={'sampleMapsTab.trySampleData'} defaultMessage=\"Sample Maps\" />\n          <Icons.ArrowRight height=\"16px\" />\n        </div>\n      </div>\n    </StyledTrySampleData>\n  );\n};\n\nexport default SampleMapsTab;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {LoadDataModalFactory, withState} from '@kepler.gl/components';\nimport {LOADING_METHODS} from '../constants/default-settings';\n\nimport SampleMapGallery from '../components/load-data-modal/sample-data-viewer';\nimport LoadRemoteMap from '../components/load-data-modal/load-remote-map';\nimport SampleMapsTab from '../components/load-data-modal/sample-maps-tab';\nimport {loadRemoteMap, loadSample, loadSampleConfigurations} from '../actions';\n\nconst CustomLoadDataModalFactory = (...deps) => {\n  const LoadDataModal = LoadDataModalFactory(...deps);\n  const defaultLoadingMethods = LoadDataModal.defaultProps.loadingMethods;\n  const additionalMethods = {\n    remote: {\n      id: LOADING_METHODS.remote,\n      label: 'modal.loadData.remote',\n      elementType: LoadRemoteMap\n    },\n    sample: {\n      id: LOADING_METHODS.sample,\n      label: 'modal.loadData.sample',\n      elementType: SampleMapGallery,\n      tabElementType: SampleMapsTab\n    }\n  };\n\n  // add more loading methods\n  LoadDataModal.defaultProps = {\n    ...LoadDataModal.defaultProps,\n    loadingMethods: [\n      defaultLoadingMethods.find(lm => lm.id === 'upload'),\n      additionalMethods.remote,\n      defaultLoadingMethods.find(lm => lm.id === 'storage'),\n      additionalMethods.sample\n    ]\n  };\n\n  return withState([], state => ({...state.demo.app, ...state.demo.keplerGl.map.uiState}), {\n    onLoadSample: loadSample,\n    onLoadRemoteMap: loadRemoteMap,\n    loadSampleConfigurations\n  })(LoadDataModal);\n};\n\nCustomLoadDataModalFactory.deps = LoadDataModalFactory.deps;\n\nexport function replaceLoadDataModal() {\n  return [LoadDataModalFactory, CustomLoadDataModalFactory];\n}\n","// SPDX-License-Identifier: MIT\r\n// Copyright contributors to the kepler.gl project\r\n\r\nimport React, {useState} from 'react';\r\nimport classnames from 'classnames';\r\nimport styled from 'styled-components';\r\nimport {Icons, IconRoundSmall, MapControlButton} from '@kepler.gl/components';\r\n\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\nconst StyledFloatingPanel = styled.div`\r\n  margin-right: 12px;\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst StyledProjectPanel = styled.div`\r\n  background: ${props => props.theme.panelBackground};\r\n  padding: 16px 20px;\r\n  width: 280px;\r\n  box-shadow: ${props => props.theme.panelBoxShadow};\r\n\r\n  .project-title {\r\n    color: ${props => props.theme.titleTextColor};\r\n    font-size: 13px;\r\n    font-weight: 500;\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n\r\n  .project-description {\r\n    color: ${props => props.theme.textColor};\r\n    font-size: 11px;\r\n    margin-top: 12px;\r\n\r\n    a {\r\n      font-weight: 500;\r\n      color: ${props => props.theme.titleTextColor};\r\n    }\r\n  }\r\n\r\n  .project-links {\r\n    margin-top: 20px;\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-end;\r\n  }\r\n`;\r\nconst StyledPanelAction = styled.div`\r\n  border-radius: 2px;\r\n  margin-left: 4px;\r\n  padding: 5px;\r\n  font-weight: 500;\r\n\r\n  a {\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    display: flex;\r\n    height: 16px;\r\n    padding-right: 10px;\r\n    color: ${props => (props.active ? props.theme.textColorHl : props.theme.subtextColor)};\r\n\r\n    svg {\r\n      margin-right: 8px;\r\n    }\r\n  }\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n    a {\r\n      color: ${props => props.theme.textColorHl};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const LinkButton = props => (\r\n  <StyledPanelAction className=\"project-link__action\">\r\n    <a target=\"_blank\" rel=\"noopener noreferrer\" href={props.href}>\r\n      <props.iconComponent height={props.height || '16px'} />\r\n      <p>{props.label}</p>\r\n    </a>\r\n  </StyledPanelAction>\r\n);\r\n\r\nconst CloseButton = ({onClick}) => (\r\n  <IconRoundSmall>\r\n    <Icons.Close height=\"16px\" onClick={onClick} />\r\n  </IconRoundSmall>\r\n);\r\n\r\nconst LinkRenderer = props => {\r\n  return (\r\n    <a href={props.href} target=\"_blank\" rel=\"noopener noreferrer\">\r\n      {props.children}\r\n    </a>\r\n  );\r\n};\r\n\r\n// convert https://raw.githubusercontent.com/keplergl/kepler.gl-data/master/nyctrips/config.json\r\n// to https://github.com/keplergl/kepler.gl-data/blob/master/movement_pittsburgh/config.json\r\nfunction getURL(url) {\r\n  return url\r\n    ? url\r\n        .replace('https://raw.githubusercontent.com', 'https://github.com')\r\n        .replace('master', 'blob/master')\r\n    : url;\r\n}\r\n\r\nexport function SampleMapPanel(props) {\r\n  const [isActive, setActive] = useState(true);\r\n\r\n  return (\r\n    <StyledFloatingPanel>\r\n      {isActive ? (\r\n        <StyledProjectPanel>\r\n          <div className=\"project-title\">\r\n            <div>{props.currentSample.label}</div>\r\n            <CloseButton onClick={() => setActive(false)} />\r\n          </div>\r\n          <div className=\"project-description\">\r\n            <ReactMarkdown\r\n              source={props.currentSample.detail || props.currentSample.description}\r\n              renderers={{link: LinkRenderer}}\r\n            />\r\n          </div>\r\n          <div className=\"project-links\">\r\n            <LinkButton\r\n              label=\"Data\"\r\n              href={getURL(props.currentSample.dataUrl)}\r\n              iconComponent={Icons.Files}\r\n              height=\"15px\"\r\n            />\r\n            <LinkButton\r\n              label=\"Config\"\r\n              href={getURL(props.currentSample.configUrl)}\r\n              iconComponent={Icons.CodeAlt}\r\n              height=\"17px\"\r\n            />\r\n          </div>\r\n        </StyledProjectPanel>\r\n      ) : (\r\n        <MapControlButton\r\n          className={classnames('map-control-button', 'info-panel', {isActive})}\r\n          onClick={e => {\r\n            e.preventDefault();\r\n            setActive(true);\r\n          }}\r\n        >\r\n          <Icons.Docs height=\"18px\" />\r\n        </MapControlButton>\r\n      )}\r\n    </StyledFloatingPanel>\r\n  );\r\n}\r\n","// SPDX-License-Identifier: MIT\r\n// Copyright contributors to the kepler.gl project\r\n\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport {\r\n  withState,\r\n  MapControlFactory,\r\n  EffectControlFactory,\r\n  EffectManagerFactory\r\n} from '@kepler.gl/components';\r\nimport {SampleMapPanel} from '../components/map-control/map-control';\r\n\r\nconst StyledMapControlPanel = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nconst StyledMapControlContextPanel = styled.div`\r\n  max-height: 100%;\r\n  overflow: hidden;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  pointer-events: none !important; /* prevent padding from blocking input */\r\n  & > * {\r\n    /* all children should allow input */\r\n    pointer-events: all;\r\n  }\r\n`;\r\n\r\nconst StyledMapControlOverlay = styled.div`\r\n  position: absolute;\r\n  display: flex;\r\n  top: ${props => props.top}px;\r\n  right: 0;\r\n  z-index: 1;\r\n  pointer-events: none !important; /* prevent padding from blocking input */\r\n  & > * {\r\n    /* all children should allow input */\r\n    pointer-events: all;\r\n  }\r\n\r\n  margin-top: ${props => (props.rightPanelVisible ? props.theme.rightPanelMarginTop : 0)}px;\r\n  margin-right: ${props => (props.rightPanelVisible ? props.theme.rightPanelMarginRight : 0)}px;\r\n  ${props => (props.fullHeight ? 'height' : 'max-height')}: calc(100% - ${props =>\r\n  props.theme.rightPanelMarginTop + props.theme.bottomWidgetPaddingBottom}px);\r\n\r\n  .map-control {\r\n    ${props => (props.rightPanelVisible ? 'padding-top: 0px;' : '')}\r\n  }\r\n`;\r\n\r\nCustomMapControlFactory.deps = [\r\n  EffectControlFactory,\r\n  EffectManagerFactory,\r\n  ...MapControlFactory.deps\r\n];\r\nfunction CustomMapControlFactory(EffectControl, EffectManager, ...deps) {\r\n  const MapControl = MapControlFactory(...deps);\r\n  const actionComponents = [...(MapControl.defaultProps?.actionComponents ?? []), EffectControl];\r\n\r\n  const CustomMapControl = props => {\r\n    const showEffects = Boolean(props.mapControls?.effect?.active);\r\n    return (\r\n      <StyledMapControlOverlay top={props.top} rightPanelVisible={showEffects}>\r\n        <StyledMapControlPanel>\r\n          {!props.isExport && props.currentSample ? <SampleMapPanel {...props} /> : null}\r\n          <MapControl {...props} top={0} actionComponents={actionComponents} />\r\n        </StyledMapControlPanel>\r\n        <StyledMapControlContextPanel>\r\n          {showEffects ? <EffectManager /> : null}\r\n        </StyledMapControlContextPanel>\r\n      </StyledMapControlOverlay>\r\n    );\r\n  };\r\n\r\n  return withState([], state => ({...state.demo.app}))(CustomMapControl);\r\n}\r\n\r\nexport function replaceMapControl() {\r\n  return [MapControlFactory, CustomMapControlFactory];\r\n}\r\n","// SPDX-License-Identifier: MIT\r\n// Copyright contributors to the kepler.gl project\r\n\r\nimport {PanelHeaderFactory, Icons} from '@kepler.gl/components';\r\nimport {BUG_REPORT_LINK, USER_GUIDE_DOC} from '@kepler.gl/constants';\r\n\r\nexport function CustomPanelHeaderFactory(...deps) {\r\n  const PanelHeader = PanelHeaderFactory(...deps);\r\n  const defaultActionItems = PanelHeader.defaultProps.actionItems;\r\n  PanelHeader.defaultProps = {\r\n    ...PanelHeader.defaultProps,\r\n    actionItems: [\r\n//      {\r\n//        id: 'bug',\r\n//        iconComponent: Icons.Bug,\r\n//        href: BUG_REPORT_LINK,\r\n//        blank: true,\r\n//        tooltip: 'Bug Report',\r\n//        onClick: () => {}\r\n//      },\r\n//      {\r\n//        id: 'docs',\r\n//        iconComponent: Icons.Docs,\r\n//        href: USER_GUIDE_DOC,\r\n//        blank: true,\r\n//        tooltip: 'User Guide',\r\n//        onClick: () => {}\r\n//      },\r\n//      defaultActionItems.find(item => item.id === 'storage'),\r\n//      {\r\n//        ...defaultActionItems.find(item => item.id === 'save'),\r\n//        label: null,\r\n//      tooltip: 'Share'\r\n//      }\r\n    ]\r\n  };\r\n  return PanelHeader;\r\n}\r\n\r\nCustomPanelHeaderFactory.deps = PanelHeaderFactory.deps;\r\n\r\nexport function replacePanelHeader() {\r\n  return [PanelHeaderFactory, CustomPanelHeaderFactory];\r\n}\r\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\n// Add english messages here, other languages will use these\n// if translations not available for every message\nconst en = {\n  'modal.loadData.remote': 'Load Map using URL',\n  'sampleMapsTab.noData': 'No data ?',\n  'sampleMapsTab.trySampleData': 'Try sample data',\n  'sampleDataViewer.rowCount': ' {rowCount} rows',\n  'loadRemoteMap.description': 'Load your map using your custom URL',\n  'loadRemoteMap.message':\n    'You can use the following formats: CSV | JSON | Kepler.gl config json. Make sure the url contains the file extension.',\n  'loadRemoteMap.examples': 'Examples:',\n  'loadRemoteMap.cors':\n    '* CORS policy must be defined on your custom url domain in order to be accessible. For more info ',\n  'loadRemoteMap.clickHere':\n    '<a rel=\"noopener noreferrer\" target=\"_blank\" href=\"{corsLink}\">click here</a>',\n  'loadRemoteMap.fetch': 'Fetch'\n};\n\nexport const messages = {\n  en,\n  fi: {\n    'modal.loadData.remote': 'Lataa kartta URL-osoitteen avulla',\n    'sampleMapsTab.noData': 'Ei aineistoja?',\n    'sampleMapsTab.trySampleData': 'Kokeile testiaineistoja',\n    'sampleDataViewer.rowCount': ' {rowCount} riviä',\n    'loadRemoteMap.description': 'Lataa karttasi käyttämällä omaa urlia',\n    'loadRemoteMap.message':\n      'Voit käyttää formaatteja: CSV | JSON | Kepler.gl asetus-json. Varmista, että url sisältää tiedostopäätteen nimen.',\n    'loadRemoteMap.examples': 'Esimerkkejä:',\n    'loadRemoteMap.cors':\n      '* CORS-käytäntö pitää olla määriteltynä urlin domainissa, jotta aineiston voi ladata.',\n    'loadRemoteMap.clickHere':\n      '<a rel=\"noopener noreferrer\" target=\"_blank\" href=\"{corsLink}\">Lisätietoja</a>',\n    'loadRemoteMap.fetch': 'Nouda'\n  },\n  ca: {\n    'modal.loadData.remote': 'Carrega mapa mitjançant URL',\n    'sampleMapsTab.noData': 'Cap dada?',\n    'sampleMapsTab.trySampleData': 'Prova dades de mostra',\n    'sampleDataViewer.rowCount': ' {rowCount} files',\n    'loadRemoteMap.description': 'Carrega el teu mapa amb la teva URL personalitzada',\n    'loadRemoteMap.message':\n      \"Pots emprar els següents formats: CSV | JSON | Kepler.gl config json. Assegura't que la URL contingui l'extensió de l'arxiu.\",\n    'loadRemoteMap.examples': 'Exemples:',\n    'loadRemoteMap.cors':\n      '* La política CORS s’ha de definir al teu domini per tal que sigui accessible. Per a més informació ',\n    'loadRemoteMap.clickHere':\n      '<a rel=\"noopener noreferrer\" target=\"_blank\" href=\"{corsLink}\">fes clic aquí</a>',\n    'loadRemoteMap.fetch': 'Cerca'\n  },\n  es: {\n    'modal.loadData.remote': 'Cargar mapa usando URL',\n    'sampleMapsTab.noData': 'Ningún dato?',\n    'sampleMapsTab.trySampleData': 'Prueba datos de muestra',\n    'sampleDataViewer.rowCount': ' {rowCount} files',\n    'loadRemoteMap.description': 'Carga tu mapa con tu enlace personalizado',\n    'loadRemoteMap.message':\n      'Puedes usar los siguientes formatos: CSV | JSON | Kepler.gl config json. Asegurate que el enlace contenga la extensión del archivo.',\n    'loadRemoteMap.examples': 'Ejemplos:',\n    'loadRemoteMap.cors':\n      '* La política CORS debe ser definida en tu dominio para que sea accessible. Para más información ',\n    'loadRemoteMap.clickHere':\n      '<a rel=\"noopener noreferrer\" target=\"_blank\" href=\"{corsLink}\">haz clic aquí</a>',\n    'loadRemoteMap.fetch': 'Busca'\n  },\n  cn: {\n    'modal.loadData.remote': '使用 URL 加载地图',\n    'sampleMapsTab.noData': '没有数据？',\n    'sampleMapsTab.trySampleData': '尝试样本数据',\n    'sampleDataViewer.rowCount': ' {rowCount} 行',\n    'loadRemoteMap.description': '使用自定义 URL 加载地图',\n    'loadRemoteMap.message':\n      '您可以使用以下格式：CSV | JSON | Kepler.gl 配置 json。 确保 url 包含文件扩展名。',\n    'loadRemoteMap.examples': '示例：',\n    'loadRemoteMap.cors': '* 必须在您的自定义 url 域上定义 CORS 策略才能访问。欲了解更多信息',\n    'loadRemoteMap.clickHere':\n      '<a rel=\"noopener noreferrer\" target=\"_blank\" href=\"{corsLink}\">点击此处</a>',\n    'loadRemoteMap.fetch': '获取'\n  }\n};\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {Component} from 'react';\nimport {Icons} from '@kepler.gl/components';\nimport PropTypes from 'prop-types';\n\nclass DropboxIcon extends Component {\n  static propTypes = {\n    /** Set the height of the icon, ex. '16px' */\n    height: PropTypes.string,\n    colors: PropTypes.arrayOf(PropTypes.string)\n  };\n\n  static defaultProps = {\n    height: '16px',\n    predefinedClassName: 'data-ex-icons-dropbox',\n    totalColor: 1\n  };\n\n  render() {\n    return (\n      <Icons.IconWrapper {...this.props} viewBox={'0 0 416 416'} colors={['#0060ff']}>\n        <path\n          className=\"cr1\"\n          d=\"M348.911,169.42L220.258,91.062l81.133-67.164l128.732,79.217L348.911,169.42z M300.532,317.532\n\t\tl123.547-72.331l-74.31-62.858l-120.961,73.191L300.532,317.532z M201.328,255.534L80.355,182.343L6.06,245.201l123.559,72.331\n\t\tL201.328,255.534z M86.406,307.199v23.251l123.472,75.774V262.414l-81.989,67.168L86.406,307.199z M343.712,307.199l-41.453,22.388\n\t\tl-82.001-67.173v143.811l123.454-75.774V307.199z M209.878,91.062l-81.135-67.164L0,103.115l81.226,66.305L209.878,91.062z\"\n        />\n      </Icons.IconWrapper>\n    );\n  }\n}\n\nexport default DropboxIcon;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\n// DROPBOX\nimport {Dropbox} from 'dropbox';\nimport window from 'global/window';\nimport DropboxIcon from './dropbox-icon';\nimport {MAP_URI} from '../../constants/default-settings';\nimport {KEPLER_FORMAT, Provider} from '@kepler.gl/cloud-providers';\n\nconst NAME = 'dropbox';\nconst DISPLAY_NAME = 'Dropbox';\nconst DOMAIN = 'www.dropbox.com';\nconst KEPLER_DROPBOX_FOLDER_LINK = `//${DOMAIN}/home/Apps`;\nconst CORS_FREE_DOMAIN = 'dl.dropboxusercontent.com';\nconst PRIVATE_STORAGE_ENABLED = true;\nconst SHARING_ENABLED = true;\nconst MAX_THUMBNAIL_BATCH = 25;\nconst IMAGE_URL_PREFIX = 'data:image/gif;base64,';\n\nfunction parseQueryString(query) {\n  const searchParams = new URLSearchParams(query);\n  const params = {};\n  for (const p of searchParams) {\n    if (p && p.length === 2 && p[0]) params[p[0]] = p[1];\n  }\n\n  return params;\n}\n\nfunction isConfigFile(err) {\n  const summary = err.error && err.error.error_summary;\n  return typeof summary === 'string' && Boolean(summary.match(/path\\/conflict\\/file\\//g));\n}\n\nexport default class DropboxProvider extends Provider {\n  constructor(clientId, appName) {\n    super({name: NAME, displayName: DISPLAY_NAME, icon: DropboxIcon});\n    // All cloud-providers providers must implement the following properties\n\n    this.clientId = clientId;\n    this.appName = appName;\n\n    this._folderLink = `${KEPLER_DROPBOX_FOLDER_LINK}/${appName}`;\n    this._path = '';\n\n    // Initialize Dropbox API\n    this._initializeDropbox();\n  }\n\n  /**\n   * This method will handle the oauth flow by performing the following steps:\n   * - Opening a new window\n   * - Subscribe to message channel\n   * - Receive the token when ready\n   * - Close the opened tab\n   */\n  async login() {\n    return new Promise((resolve, reject) => {\n      const link = this._authLink();\n\n      const authWindow = window.open(link, '_blank', 'width=1024,height=716');\n\n      const handleToken = async event => {\n        // if user has dev tools this will skip all the react-devtools events\n        if (!event.data.token) {\n          return;\n        }\n\n        if (authWindow) {\n          authWindow.close();\n          window.removeEventListener('message', handleToken);\n        }\n\n        const {token} = event.data;\n\n        if (!token) {\n          reject('Failed to login to Dropbox');\n          return;\n        }\n\n        this._dropbox.setAccessToken(token);\n        // save user name\n        const user = await this.getUser();\n\n        if (window.localStorage) {\n          window.localStorage.setItem(\n            'dropbox',\n            JSON.stringify({\n              // dropbox token doesn't expire unless revoked by the user\n              token: token,\n              user,\n              timestamp: new Date()\n            })\n          );\n        }\n\n        resolve(user);\n      };\n\n      window.addEventListener('message', handleToken);\n    });\n  }\n\n  /**\n   * returns a list of maps\n   */\n  async listMaps() {\n    // list files\n    try {\n      // https://dropbox.github.io/dropbox-sdk-js/Dropbox.html#filesListFolder__anchor\n      const response = await this._dropbox.filesListFolder({\n        path: `${this._path}`\n      });\n      const {pngs, visualizations} = this._parseEntries(response);\n      // https://dropbox.github.io/dropbox-sdk-js/Dropbox.html#filesGetThumbnailBatch__anchor\n      // up to 25 per request\n      // TODO: implement pagination, so we don't need to get all the thumbs all at once\n      const thumbnails = await Promise.all(this._getThumbnailRequests(pngs)).then(results =>\n        results.reduce((accu, r) => [...accu, ...(r.entries || [])], [])\n      );\n\n      // append to visualizations\n      (thumbnails || []).forEach(thb => {\n        if (thb['.tag'] === 'success' && thb.thumbnail) {\n          const matchViz = visualizations[pngs[thb.metadata.id] && pngs[thb.metadata.id].name];\n          if (matchViz) {\n            matchViz.thumbnail = `${IMAGE_URL_PREFIX}${thb.thumbnail}`;\n          }\n        }\n      });\n\n      // dropbox returns\n      return Object.values(visualizations).reverse();\n    } catch (error) {\n      // made the error message human readable for provider updater\n      throw this._handleDropboxError(error);\n    }\n  }\n\n  /**\n   *\n   * @param mapData map data and config in one json object {map: {datasets: Array<Object>, config: Object, info: Object}\n   * @param blob json file blob to upload\n   */\n  async uploadMap({mapData, options = {}}) {\n    const {isPublic} = options;\n    const {map, thumbnail} = mapData;\n\n    // generate file name if is not provided\n    const name = map.info && map.info.title;\n    const fileName = `${name}.json`;\n    const fileContent = map;\n    // FileWriteMode: Selects what to do if the file already exists.\n    // Always overwrite if sharing\n    const mode = options.overwrite || isPublic ? 'overwrite' : 'add';\n    const path = `${this._path}/${fileName}`;\n    let metadata;\n    try {\n      metadata = await this._dropbox.filesUpload({\n        path,\n        contents: JSON.stringify(fileContent),\n        mode\n      });\n    } catch (err) {\n      if (isConfigFile(err)) {\n        throw this.getFileConflictError();\n      }\n    }\n\n    // save a thumbnail image\n    if (thumbnail) {\n      await this._dropbox.filesUpload({\n        path: path.replace(/\\.json$/, '.png'),\n        contents: thumbnail,\n        mode\n      });\n    }\n\n    // keep on create shareUrl\n    if (isPublic) {\n      return await this._shareFile(metadata);\n    }\n\n    return {id: metadata.id, path: metadata.path_lower};\n  }\n\n  /**\n   * download the map content\n   * @param loadParams\n   */\n  async downloadMap(loadParams) {\n    const {path} = loadParams;\n    const result = await this._dropbox.filesDownload({path});\n    const json = await this._readFile(result.fileBlob);\n\n    const response = {\n      map: json,\n      format: KEPLER_FORMAT\n    };\n\n    return Promise.resolve(response);\n  }\n\n  getUserName() {\n    // load user from\n    if (window.localStorage) {\n      const jsonString = window.localStorage.getItem('dropbox');\n      return jsonString && JSON.parse(jsonString).user;\n    }\n    return null;\n  }\n\n  async logout() {\n    await this._dropbox.authTokenRevoke();\n    if (window.localStorage) {\n      window.localStorage.removeItem('dropbox');\n    }\n    // re instantiate dropbox\n    this._initializeDropbox();\n  }\n\n  isEnabled() {\n    return this.clientId !== null;\n  }\n\n  hasPrivateStorage() {\n    return PRIVATE_STORAGE_ENABLED;\n  }\n\n  hasSharingUrl() {\n    return SHARING_ENABLED;\n  }\n\n  /**\n   * Get the share url of current map, this url can be accessed by anyone\n   * @param {boolean} fullUrl\n   */\n  getShareUrl(fullUrl = true) {\n    return fullUrl\n      ? `${window.location.protocol}//${window.location.host}/${MAP_URI}${this._shareUrl}`\n      : `/${MAP_URI}${this._shareUrl}`;\n  }\n\n  /**\n   * Get the map url of current map, this url can only be accessed by current logged in user\n   */\n  getMapUrl(loadParams) {\n    const {path} = loadParams;\n    return path;\n  }\n\n  getManagementUrl() {\n    return this._folderLink;\n  }\n\n  /**\n   * Provides the current dropbox auth token. If stored in localStorage is set onto dropbox handler and returned\n   * @returns {any}\n   */\n  getAccessToken() {\n    let token = this._dropbox.getAccessToken();\n    if (!token && window.localStorage) {\n      const jsonString = window.localStorage.getItem('dropbox');\n      token = jsonString && JSON.parse(jsonString).token;\n      if (token) {\n        this._dropbox.setAccessToken(token);\n      }\n    }\n    return (token || '') !== '' ? token : null;\n  }\n\n  /**\n   * This method will extract the auth token from the third party service callback url.\n   * @param {object} location the window location provided by react router\n   * @returns {?string} the token extracted from the oauth 2 callback URL\n   */\n  getAccessTokenFromLocation(location) {\n    if (!(location && location.hash.length)) {\n      return null;\n    }\n    // dropbox token usually start with # therefore we want to remove the '#'\n    const query = window.location.hash.substring(1);\n    return parseQueryString(query).access_token;\n  }\n\n  // PRIVATE\n  _initializeDropbox() {\n    this._dropbox = new Dropbox({fetch: window.fetch});\n    this._dropbox.setClientId(this.clientId);\n  }\n\n  async getUser() {\n    const response = await this._dropbox.usersGetCurrentAccount();\n    return this._getUserFromAccount(response);\n  }\n\n  _handleDropboxError(error) {\n    // dropbox list_folder error\n    if (error && error.error && error.error.error_summary) {\n      return new Error(`Dropbox Error: ${error.error.error_summary}`);\n    }\n\n    return error;\n  }\n\n  _readFile(fileBlob) {\n    return new Promise((resolve, reject) => {\n      const fileReader = new FileReader(fileBlob);\n      fileReader.onload = ({target: {result}}) => {\n        try {\n          const json = JSON.parse(result);\n          resolve(json);\n        } catch (err) {\n          reject(err);\n        }\n      };\n\n      fileReader.readAsText(fileBlob, 'utf-8');\n    });\n  }\n\n  // append url after map sharing\n  _getMapPermalink(mapLink, fullUrl = true) {\n    return fullUrl\n      ? `${window.location.protocol}//${window.location.host}/${MAP_URI}${mapLink}`\n      : `/${MAP_URI}${mapLink}`;\n  }\n\n  // append map url after load map from storage, this url is not meant\n  // to be directly shared with others\n  _getMapPermalinkFromParams({path}, fullURL = true) {\n    const mapLink = `demo/map/dropbox?path=${path}`;\n    return fullURL\n      ? `${window.location.protocol}//${window.location.host}/${mapLink}`\n      : `/${mapLink}`;\n  }\n  /**\n   * It will set access to file to public\n   * @param {Object} metadata metadata response from uploading the file\n   * @returns {Promise<DropboxTypes.sharing.FileLinkMetadataReference | DropboxTypes.sharing.FolderLinkMetadataReference | DropboxTypes.sharing.SharedLinkMetadataReference>}\n   */\n  _shareFile(metadata) {\n    const shareArgs = {\n      path: metadata.path_display || metadata.path_lower\n    };\n\n    return this._dropbox\n      .sharingListSharedLinks(shareArgs)\n      .then(({links} = {}) => {\n        if (links && links.length) {\n          return links[0];\n        }\n        return this._dropbox.sharingCreateSharedLinkWithSettings(shareArgs);\n      })\n      .then(result => {\n        // Update URL to avoid CORS issue\n        // Unfortunately this is not the ideal scenario but it will make sure people\n        // can share dropbox urls with users without the dropbox account (publish on twitter, facebook)\n        this._shareUrl = this._overrideUrl(result.url);\n\n        return {\n          // the full url to be displayed\n          shareUrl: this.getShareUrl(true),\n          folderLink: this._folderLink\n        };\n      });\n  }\n\n  /**\n   * Generate auth link url to open to be used to handle OAuth2\n   * @param {string} path\n   */\n  _authLink(path = 'auth') {\n    return this._dropbox.getAuthenticationUrl(\n      `${window.location.origin}/${path}`,\n      btoa(JSON.stringify({handler: 'dropbox', origin: window.location.origin}))\n    );\n  }\n\n  /**\n   * Override dropbox cloud-providers url\n   * https://www.dropbox.com/s/bxwwdb81z0jg7pb/keplergl_2018-11-01T23%3A22%3A43.940Z.json?rlkey=xxx&dl=0\n   * ->\n   * https://dl.dropboxusercontent.com/s/bxwwdb81z0jg7pb/keplergl_2018-11-01T23%3A22%3A43.940Z.json?rlkey=xxx&dl=0\n   * @param metadata\n   * @returns {DropboxTypes.sharing.FileLinkMetadataReference}\n   */\n  _overrideUrl(url) {\n    return url ? url.replace(DOMAIN, CORS_FREE_DOMAIN) : null;\n  }\n\n  _getUserFromAccount(response) {\n    const {name} = response;\n    return {\n      name: name.display_name,\n      email: response.email,\n      abbreviated: name.abbreviated_name\n    };\n  }\n\n  _getThumbnailRequests(pngs) {\n    const batches = Object.values(pngs).reduce((accu, c) => {\n      const lastBatch = accu.length && accu[accu.length - 1];\n      if (!lastBatch || lastBatch.length >= MAX_THUMBNAIL_BATCH) {\n        // add new batch\n        accu.push([c]);\n      } else {\n        lastBatch.push(c);\n      }\n      return accu;\n    }, []);\n\n    return batches.map(batch =>\n      this._dropbox.filesGetThumbnailBatch({\n        entries: batch.map(img => ({\n          path: img.path_lower,\n          format: 'png',\n          size: 'w128h128'\n        }))\n      })\n    );\n  }\n\n  /**\n   * Parse fileListFolder result as visualizations to be shown in load storage map modal\n   * @param {*} response\n   */\n  _parseEntries(response) {\n    const {entries, cursor, has_more} = response;\n\n    if (has_more) {\n      this._cursor = cursor;\n    }\n    const pngs = {};\n    const visualizations = {};\n\n    entries.forEach(entry => {\n      const {name, path_lower, id, client_modified} = entry;\n      if (name && name.endsWith('.json')) {\n        // find json\n        const title = name.replace(/\\.json$/, '');\n        const viz = {\n          name,\n          title,\n          id,\n          updatedAt: new Date(client_modified).getTime(),\n          loadParams: {\n            id,\n            path: path_lower\n          }\n        };\n\n        visualizations[title] = viz;\n      } else if (name && name.endsWith('.png')) {\n        const title = name.replace(/\\.png$/, '');\n\n        pngs[id] = {\n          name: title,\n          path_lower,\n          id\n        };\n      }\n    });\n\n    return {\n      visualizations,\n      pngs\n    };\n  }\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {Component} from 'react';\nimport {Icons} from '@kepler.gl/components';\nimport PropTypes from 'prop-types';\n\nclass CartoIcon extends Component {\n  static propTypes = {\n    /** Set the height of the icon, ex. '16px' */\n    height: PropTypes.string,\n    colors: PropTypes.arrayOf(PropTypes.string)\n  };\n\n  static defaultProps = {\n    height: '100%',\n    viewBox: '0 0 92 36',\n    predefinedClassName: 'data-ex-icons-carto'\n  };\n\n  render() {\n    return (\n      <Icons.IconWrapper {...this.props}>\n        <g id=\"Page-1\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n          <g\n            id=\"Logo-Scale-Negative\"\n            transform=\"translate(-162.000000, -282.000000)\"\n            fill=\"#2e3c43\"\n          >\n            <g id=\"logo_carto_n_36\" transform=\"translate(162.000000, 282.000000)\">\n              <path\n                d=\"M74,36 C83.9411255,36 92,27.9411255 92,18 C92,8.0588745 83.9411255,0 74,0 C64.0588745,0 56,8.0588745 56,18 C56,27.9411255 64.0588745,36 74,36 Z\"\n                id=\"halo\"\n                fillOpacity=\"0.200000018\"\n              />\n              <path\n                d=\"M6.25280899,23.981602 C8.76747566,23.981602 10.220757,22.882802 11.2984713,21.390402 L8.9144367,19.684802 C8.22861851,20.521202 7.52647133,21.078802 6.33445401,21.078802 C4.73421159,21.078802 3.60751029,19.734002 3.60751029,18.012002 L3.60751029,17.979202 C3.60751029,16.306402 4.73421159,14.928802 6.33445401,14.928802 C7.4284973,14.928802 8.1796315,15.470002 8.83279168,16.273602 L11.2168263,14.420402 C10.204428,13.026402 8.70215964,12.042402 6.36711202,12.042402 C2.9053631,12.042402 0.358038428,14.666402 0.358038428,18.012002 L0.358038428,18.044802 C0.358038428,21.472402 2.98700813,23.981602 6.25280899,23.981602 L6.25280899,23.981602 Z M16.732047,23.752002 L20.0468349,23.752002 L20.8632851,21.685602 L25.2884453,21.685602 L26.1048955,23.752002 L29.5013284,23.752002 L24.6352851,12.190002 L21.5817613,12.190002 L16.732047,23.752002 Z M21.7940384,19.209202 L23.0840297,15.962002 L24.357692,19.209202 L21.7940384,19.209202 Z M35.6697093,23.752002 L38.8375361,23.752002 L38.8375361,20.275202 L40.2418305,20.275202 L42.5442201,23.752002 L46.1855881,23.752002 L43.4586443,19.750402 C44.8792677,19.143602 45.810021,17.979202 45.810021,16.208002 L45.810021,16.175202 C45.810021,15.043602 45.4671119,14.174402 44.7976227,13.502002 C44.0301595,12.731202 42.8218132,12.272002 41.0746097,12.272002 L35.6697093,12.272002 L35.6697093,23.752002 Z M38.8375361,17.782402 L38.8375361,15.010802 L40.9276487,15.010802 C41.9727049,15.010802 42.6421941,15.470002 42.6421941,16.388402 L42.6421941,16.421202 C42.6421941,17.257602 42.005363,17.782402 40.9439777,17.782402 L38.8375361,17.782402 Z M55.2605317,23.752002 L58.4283585,23.752002 L58.4283585,15.060002 L61.8574495,15.060002 L61.8574495,12.272002 L51.8477698,12.272002 L51.8477698,15.060002 L55.2605317,15.060002 L55.2605317,23.752002 Z M74,24 C77.3137085,24 80,21.3137085 80,18 C80,14.6862915 77.3137085,12 74,12 C70.6862915,12 68,14.6862915 68,18 C68,21.3137085 70.6862915,24 74,24 Z\"\n                id=\"logotype\"\n              />\n            </g>\n          </g>\n        </g>\n      </Icons.IconWrapper>\n    );\n  }\n}\n\nexport default CartoIcon;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {OAuthApp} from '@carto/toolkit';\nimport Console from 'global/console';\nimport CartoIcon from './carto-icon';\nimport {Provider} from '@kepler.gl/cloud-providers';\nimport {createDataContainer} from '@kepler.gl/utils';\nimport {formatCsv} from '@kepler.gl/reducers';\n\nconst NAME = 'carto';\nconst DISPLAY_NAME = 'CARTO';\nconst NAMESPACE = 'keplergl';\nconst DOMAIN = 'carto.com';\nconst PRIVATE_STORAGE_ENABLED = true;\nconst SHARING_ENABLED = true;\n\nexport default class CartoProvider extends Provider {\n  constructor(clientId) {\n    super({name: NAME, displayName: DISPLAY_NAME, icon: CartoIcon});\n\n    this.clientId = clientId;\n    this.thumbnail = {width: 300, height: 200};\n    this.currentMap = null;\n\n    this._folderLink = `https://{user}.${DOMAIN}/dashboard/maps/external`;\n\n    // Initialize CARTO API\n    this._carto = new OAuthApp(\n      {\n        authorization: `https://${DOMAIN}/oauth2`,\n        scopes: 'schemas:c datasets:rw:*'\n      },\n      {\n        serverUrlTemplate: `https://{user}.${DOMAIN}/`,\n        namespace: NAMESPACE\n      }\n    );\n\n    this._carto.setClientID(clientId);\n  }\n\n  /**\n   * The CARTO toolkit library takes care of the login process.\n   */\n  login(onCloudLoginSuccess) {\n    try {\n      this._carto.login().then(() => {\n        onCloudLoginSuccess && onCloudLoginSuccess(this.name);\n      });\n    } catch (error) {\n      this._manageErrors(error);\n    }\n  }\n\n  logout(onCloudLogoutSuccess) {\n    try {\n      this._carto.oauth.clear();\n      this._carto.oauth._carto.sync();\n      onCloudLogoutSuccess();\n    } catch (error) {\n      this._manageErrors(error);\n    }\n  }\n\n  isEnabled() {\n    return this.clientId !== null;\n  }\n\n  hasPrivateStorage() {\n    return PRIVATE_STORAGE_ENABLED;\n  }\n\n  hasSharingUrl() {\n    return SHARING_ENABLED;\n  }\n\n  async uploadMap({mapData = {}, options = {}}) {\n    try {\n      const {isPublic = true, overwrite = true} = options;\n      const {map: {config, datasets, info} = {}, thumbnail} = mapData;\n\n      const cartoDatasets = datasets.map(this._convertDataset);\n\n      const cs = await this._carto.getCustomStorage();\n\n      const {title, description} = info;\n      const name = title;\n\n      const thumbnailBase64 =\n        mapData && thumbnail ? await this._blobToBase64(mapData.thumbnail) : null;\n\n      let result;\n      if (overwrite) {\n        result = await cs.updateVisualization(\n          {\n            id: this.currentMap.id,\n            name,\n            description,\n            thumbnail: thumbnailBase64,\n            config: JSON.stringify(config),\n            isprivate: this.currentMap.isprivate\n          },\n          cartoDatasets\n        );\n      } else {\n        // TODO: Ask for changing current shared map generation because of being too oriented to file based clouds\n        // Check public name generation and replace\n        const regex = /(?:^keplergl_)([a-z0-9]+)(?:.json$)/;\n        const capturedName = name.match(regex);\n        const visName = capturedName ? `sharedmap_${capturedName[1]}` : name;\n\n        result = await cs.createVisualization(\n          {\n            name: visName,\n            description,\n            thumbnail: thumbnailBase64,\n            config: JSON.stringify(config),\n            isprivate: !isPublic\n          },\n          cartoDatasets,\n          true\n        );\n      }\n\n      if (result) {\n        this.currentMap = result;\n      }\n\n      return {\n        shareUrl: this._getMapPermalinkFromParams(\n          {\n            mapId: result.id,\n            owner: this._carto.username,\n            privateMap: !isPublic\n          },\n          true\n        ),\n        folderLink: this._folderLink.replace('{user}', this._carto.username)\n      };\n    } catch (error) {\n      this._manageErrors(error);\n    }\n  }\n\n  /**\n   * Returns the access token. If it has expired returns null. The toolkit library loads it\n   * from localStorage automatically\n   */\n  async getAccessToken() {\n    let accessToken = null;\n    try {\n      accessToken = this._carto.oauth.expired ? null : this._carto.oauth.token;\n    } catch (error) {\n      this._manageErrors(error, false);\n    }\n\n    return accessToken;\n  }\n\n  getUserName() {\n    let username = null;\n    try {\n      username = this._carto.oauth.expired ? null : this._carto.username;\n    } catch (error) {\n      this._manageErrors(error, false);\n    }\n\n    return username;\n  }\n\n  /**\n   * The CARTO cloud provider polls the created window internally to parse the URL\n   * @param {*} location\n   */\n  getAccessTokenFromLocation(location) {\n    return;\n  }\n\n  async getUser() {\n    return {\n      name: this.getUserName(),\n      abbreviated: '',\n      email: ''\n    }\n  }\n\n  async downloadMap(queryParams) {\n    try {\n      const {owner: username, mapId, privateMap} = queryParams;\n\n      if (!username || !mapId) {\n        return;\n      }\n\n      let visualization;\n\n      if (privateMap.trim().toLowerCase() === 'true') {\n        await this._carto.login();\n        const currentUsername = this.getUserName();\n        if (currentUsername && currentUsername === username) {\n          const cs = await this._carto.getCustomStorage();\n          visualization = await cs.getVisualization(mapId);\n        }\n      } else {\n        visualization = await this._carto.PublicStorageReader.getVisualization(username, mapId);\n      }\n\n      if (!visualization) {\n        throw new Error(`Can't find map with ID: ${mapId}`);\n      }\n\n      // These are the options required for the action. For now, all datasets that come from CARTO are CSV\n      const datasets = visualization.datasets.map(dataset => {\n        const datasetId = dataset.name;\n\n        return {\n          info: {\n            id: datasetId,\n            label: datasetId,\n            description: dataset.description,\n            dataUrl: '',\n            configUrl: '',\n            panelDisabled: true\n          },\n          data: dataset.file\n        };\n      });\n\n      // const datasets = visualization.datasets.map(dataset => dataset.file);\n\n      this.currentMap = visualization.vis;\n\n      return {\n        map: {\n          datasets,\n          config: visualization.vis.config,\n          info: {title: visualization.vis.name, description: visualization.vis.description}\n        },\n        format: 'csv'\n      };\n    } catch (error) {\n      this._manageErrors(error);\n    }\n  }\n\n  async listMaps() {\n    // TODO: Implement pagination using {type='all', pageOffset=0, pageSize=-1}\n    try {\n      await this._carto.login();\n      const username = this.getUserName();\n      const cs = await this._carto.getCustomStorage();\n\n      const visualizations = await cs.getVisualizations();\n      let formattedVis = [];\n\n      // Format visualization object\n      for (const vis of visualizations) {\n        formattedVis.push({\n          id: vis.id,\n          title: vis.name,\n          description: vis.description,\n          privateMap: vis.isprivate,\n          thumbnail: vis.thumbnail === 'undefined' ? null : vis.thumbnail,\n          lastModification: new Date(Date.parse(vis.lastmodified)),\n          loadParams: {\n            owner: username,\n            mapId: vis.id,\n            privateMap: vis.isprivate.toString()\n          }\n        });\n      }\n\n      formattedVis = formattedVis.sort((a, b) => b.lastModification - a.lastModification);\n\n      return formattedVis;\n    } catch (error) {\n      this._manageErrors(error);\n    }\n  }\n\n  getShareUrl(fullUrl = false) {\n    return this.getMapUrl(fullUrl);\n  }\n\n  getMapUrl(fullUrl = true, mapParams = null) {\n    if (mapParams) {\n      return this._getMapPermalinkFromParams(mapParams, fullUrl);\n    } else if (this.currentMap) {\n      return this._getMapPermalinkFromParams(\n        {\n          mapId: this.currentMap.id,\n          owner: this.getUserName(),\n          privateMap: this.currentMap.isPrivate\n        },\n        fullUrl\n      );\n    }\n  }\n\n  getManagementUrl() {\n    return this._folderLink.replace('{user}', this._carto.username);\n  }\n\n  getCurrentVisualization() {\n    return this.currentMap\n      ? {title: this.currentMap.name, description: this.currentMap.description}\n      : null;\n  }\n\n  // PRIVATE\n\n  _getMapPermalinkFromParams({mapId, owner, privateMap}, fullURL = true) {\n    const mapLink = this._composeURL({mapId, owner, privateMap});\n    return fullURL\n      ? `${window.location.protocol}//${window.location.host}/${mapLink}`\n      : `/${mapLink}`;\n  }\n\n  _convertDataset({data: dataset}) {\n    const {allData, fields, id} = dataset;\n    const columns = fields.map(field => ({\n      name: field.name,\n      type: field.type\n    }));\n\n    const dataContainer = createDataContainer([...allData]);\n\n    const file = formatCsv(dataContainer, fields);\n\n    return {\n      name: id,\n      columns,\n      file\n    };\n  }\n\n  // eslint-disable-next-line complexity\n  _manageErrors(error, throwException = true) {\n    let message;\n    if (error && error.message) {\n      message = error.message;\n\n      switch (error.message) {\n        case 'No client ID has been specified':\n          Console.error('No ClientID set for CARTO provider');\n          break;\n        case 'Cannot set the client ID more than once':\n          Console.error('CARTO provider already initialized');\n          break;\n        case (error.message.match(/relation \"[a-zA-Z0-9_]+\" does not exist/) || {}).input:\n          Console.error('CARTO custom storage is not properly initialized');\n          message = 'Custom storage is not properly initialized';\n          break;\n        case (\n          error.message.match(/Failed to copy to keplergl_[a-zA-Z0-9_]+: Too many retries/) || {}\n        ).input:\n          Console.error('CARTO Rate limit exceeded');\n          message =\n            \"Failed to upload. You've exceeded the number of datasets allowed with your plan. Consider upgrading your plan.\";\n          break;\n        case (error.message.match(/[a-zA-Z0-9_\\s:]+: DB Quota exceeded/) || {}).input:\n          Console.error('CARTO DB Quota exceeded');\n          message =\n            \"Failed to upload. You've exceeded your account's disk storage limit. Consider upgrading your plan.\";\n          break;\n        default:\n          Console.error(`CARTO provider: ${message}`);\n      }\n    } else {\n      message = 'General error in CARTO provider';\n      Console.error(message);\n    }\n\n    // Use 'CARTO' as error code in order to show provider in notifications\n    if (throwException) {\n      throw new Error(message);\n    }\n  }\n\n  _composeURL({mapId, owner, privateMap}) {\n    return `demo/map/carto?mapId=${mapId}&owner=${owner}&privateMap=${privateMap}`;\n  }\n\n  _blobToBase64(blob) {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        if (!reader.error) {\n          resolve(reader.result);\n        } else {\n          reject(reader.error);\n        }\n      };\n      reader.readAsDataURL(blob);\n    });\n  }\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React, {Component} from 'react';\nimport {Icons} from '@kepler.gl/components';\nimport PropTypes from 'prop-types';\n\nconst style = {\n  background: 'black'\n};\nexport default class FoursquareIcon extends Component {\n  static propTypes = {\n    /** Set the height of the icon, ex. '16px' */\n    height: PropTypes.string,\n    colors: PropTypes.arrayOf(PropTypes.string)\n  };\n\n  static defaultProps = {\n    width: '64px',\n    fill: 'black',\n    predefinedClassName: 'cloud-provider-studio-icon',\n    totalColor: 1,\n    style\n  };\n\n  render() {\n    return (\n      <Icons.IconWrapper {...this.props} viewBox=\"0 -10 84 120\">\n        <path\n          d=\"M2.30368 0H33.1681V5.341H8.33118V18.5748H30.1695V23.7674H8.33118V43.5885H2.30368V0Z\"\n          fill=\"white\"\n        />\n        <path\n          d=\"M5.66576 84.6965C5.80711 87.1692 6.40279 89.177 7.4528 90.72C9.45187 93.6081 12.9755 95.0521 18.0236 95.0521C20.2852 95.0521 22.3449 94.7356 24.2026 94.1026C27.7969 92.8762 29.594 90.6804 29.594 87.5154C29.594 85.1416 28.8368 83.4503 27.3223 82.4414C25.7877 81.4524 23.3848 80.5919 20.1136 79.86L14.0861 78.5247C10.1485 77.6543 7.36194 76.6949 5.72633 75.6465C2.89937 73.8266 1.48588 71.1067 1.48588 67.4867C1.48588 63.5699 2.86908 60.3554 5.63547 57.8432C8.40186 55.3309 12.3192 54.0748 17.3876 54.0748C22.0521 54.0748 26.0098 55.1826 29.2608 57.3981C32.532 59.5939 34.1676 63.115 34.1676 67.9614H28.5036C28.2007 65.6272 27.5546 63.837 26.5651 62.5907C24.7276 60.3159 21.6078 59.1784 17.2058 59.1784C13.6519 59.1784 11.0976 59.9104 9.54274 61.3742C7.98791 62.838 7.21049 64.5392 7.21049 66.4778C7.21049 68.6142 8.11916 70.1769 9.9365 71.166C11.1279 71.799 13.8236 72.5903 18.0236 73.5398L24.2632 74.9344C27.2719 75.607 29.594 76.5268 31.2296 77.6939C34.0566 79.7314 35.4701 82.6887 35.4701 86.5659C35.4701 91.3926 33.6729 94.8444 30.0786 96.9215C26.5045 98.9985 22.3449 100.037 17.5996 100.037C12.0668 100.037 7.7355 98.6524 4.60564 95.883C1.47579 93.1333 -0.0588526 89.4045 0.00172532 84.6965H5.66576Z\"\n          fill=\"white\"\n        />\n        <path\n          d=\"M83.8112 98.6425L80.7823 102.233L73.9067 97.0995C72.2509 97.9897 70.4538 98.7018 68.5153 99.2359C66.597 99.77 64.497 100.037 62.2152 100.037C55.3093 100.037 49.8977 97.8215 45.9803 93.3905C42.5274 89.0781 40.8009 83.6778 40.8009 77.1895C40.8009 71.2946 42.2952 66.2503 45.2837 62.0566C49.1203 56.6761 54.7944 53.9858 62.3061 53.9858C70.161 53.9858 75.9765 56.4585 79.7525 61.4039C82.7006 65.2612 84.1747 70.1967 84.1747 76.2103C84.1747 79.0193 83.8213 81.7194 83.1146 84.3108C82.0444 88.2671 80.2371 91.4915 77.6929 93.9839L83.8112 98.6425ZM62.9421 94.7554C64.1941 94.7554 65.3653 94.6763 66.4557 94.518C67.5461 94.34 68.4951 94.0037 69.3028 93.5092L64.4263 89.7705L67.4552 86.1208L73.2707 90.542C75.1082 88.4847 76.35 86.1801 76.9962 83.6283C77.6626 81.0765 77.9957 78.6335 77.9957 76.2993C77.9957 71.1759 76.6226 67.0515 73.8764 63.926C71.1504 60.8005 67.4148 59.2378 62.6695 59.2378C57.8637 59.2378 54.0574 60.7412 51.2506 63.748C48.4438 66.735 47.0404 71.344 47.0404 77.5752C47.0404 82.8173 48.3833 86.9912 51.0689 90.0969C53.7747 93.2026 57.7324 94.7554 62.9421 94.7554Z\"\n          fill=\"white\"\n        />\n      </Icons.IconWrapper>\n    );\n  }\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport FSQIcon from './foursquare-icon';\nimport {Provider, KEPLER_FORMAT} from '@kepler.gl/cloud-providers';\nimport {Auth0Client} from '@auth0/auth0-spa-js';\n\nconst NAME = 'foursquare';\nconst DISPLAY_NAME = 'Foursquare';\nconst APP_NAME = 'Kepler.gl';\n\nconst FOURSQUARE_PRIVATE_STORAGE_ENABLED = true;\nconst FOURSQUARE_AUTH_AUDIENCE = 'https://foursquare.com/api/';\nconst FOURSQUARE_AUTH_SCOPE = 'openid profile email';\n\n// Foursquare stores kepler maps using kepler.gl-raw as ImportSource\nconst FOURSQUARE_KEPLER_GL_IMPORT_SOURCE = 'kepler.gl-raw';\n\n/**\n * Converts a FSQ map model to cloud provider map item\n * @param model Foursquare Map\n * @return {MapItem} Map\n */\nfunction convertFSQModelToMapItem(model, baseApi) {\n  return {\n    id: model.id,\n    title: model.name,\n    thumbnail: model.previewReadPath,\n    updatedAt: model.updatedAt,\n    description: model.description,\n    loadParams: {\n      id: model.id,\n      path: `${baseApi}/${model.id}`\n    }\n  };\n}\n\nfunction extractMapFromFSQResponse(response) {\n  const {\n    latestState: {data}\n  } = response;\n  return data;\n}\n\nexport default class FoursquareProvider extends Provider {\n  constructor({clientId, authDomain, apiURL, userMapsURL}) {\n    super({name: NAME, displayName: DISPLAY_NAME, icon: FSQIcon});\n    this.icon = FSQIcon;\n    this.appName = APP_NAME;\n    this.apiURL = apiURL;\n\n    this._auth0 = new Auth0Client({\n      domain: authDomain,\n      clientId: clientId,\n      scope: FOURSQUARE_AUTH_SCOPE,\n      authorizationParams: {\n        redirect_uri: window.location.origin,\n        audience: FOURSQUARE_AUTH_AUDIENCE\n      },\n      cacheLocation: 'localstorage'\n    });\n\n    // the domain needs to be passed as input param\n    this._folderLink = userMapsURL;\n    this.isNew = true;\n  }\n\n  hasPrivateStorage() {\n    return FOURSQUARE_PRIVATE_STORAGE_ENABLED;\n  }\n\n  async getUser() {\n    return this._auth0.getUser();\n  }\n\n  async login() {\n    return this._auth0.loginWithPopup();\n  }\n\n  async logout() {\n    return this._auth0.logout({\n      // this make sure after logging out the sdk will not redirect the user\n      openUrl: false\n    });\n  }\n\n  async uploadMap({mapData, options = {}}) {\n    // TODO: handle replace\n    const mode = options.overwrite ? 'overwrite' : 'add';\n    const method = options.overwrite ? 'PUT' : 'POST';\n    const {map, thumbnail} = mapData;\n\n    const {title = '', description = '', id} = map.info;\n    const headers = await this.getHeaders();\n    const payload = {\n      name: title,\n      description,\n      importSource: FOURSQUARE_KEPLER_GL_IMPORT_SOURCE,\n      latestState: {\n        data: map\n      }\n    };\n\n    const mapResponse = await fetch(\n      `${this.apiURL}/v1/maps${mode === 'overwrite' ? `/${id}` : ''}`,\n      {\n        method,\n        headers,\n        body: JSON.stringify(payload)\n      }\n    );\n\n    const createMap = await mapResponse.json();\n\n    await fetch(`${this.apiURL}/v1/maps/${createMap.id}/thumbnail`, {\n      method: 'PUT',\n      headers: {\n        ...headers,\n        'Content-Type': 'image/png'\n      },\n      body: thumbnail\n    });\n\n    return map;\n  }\n\n  async listMaps() {\n    const headers = await this.getHeaders();\n    const response = await fetch(\n      `${this.apiURL}/v1/maps?importSource=${FOURSQUARE_KEPLER_GL_IMPORT_SOURCE}`,\n      {\n        method: 'GET',\n        mode: 'cors',\n        headers\n      }\n    );\n    const data = await response.json();\n    return data.items.map(map => convertFSQModelToMapItem(map, `${this.apiURL}/v1/maps`));\n  }\n\n  async downloadMap(loadParams) {\n    const {id} = loadParams;\n    if (!id) {\n      return Promise.reject('No Map is was provider as part of loadParams');\n    }\n    const headers = await this.getHeaders();\n\n    const response = await fetch(`${this.apiURL}/v1/maps/${id}`, {\n      method: 'GET',\n      headers\n    });\n\n    const map = await response.json();\n\n    return Promise.resolve({\n      map: extractMapFromFSQResponse(map),\n      format: KEPLER_FORMAT\n    });\n  }\n\n  getMapUrl(loadParams) {\n    const {id} = loadParams;\n    return `${this.apiURL}/v1/maps/${id}`;\n  }\n\n  getManagementUrl() {\n    return this._folderLink;\n  }\n\n  async getAccessToken() {\n    return this._auth0.getTokenSilently();\n  }\n\n  async getHeaders() {\n    const accessToken = await this.getAccessToken();\n    return {\n      Authorization: `Bearer ${accessToken}`,\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    };\n  }\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {CLOUD_PROVIDERS_CONFIGURATION} from '../constants/default-settings';\n\nimport DropboxProvider from './dropbox/dropbox-provider';\nimport CartoProvider from './carto/carto-provider';\nimport FoursquareProvider from './foursquare/foursquare-provider';\n\nconst {\n  DROPBOX_CLIENT_ID,\n  CARTO_CLIENT_ID,\n  FOURSQUARE_CLIENT_ID,\n  FOURSQUARE_DOMAIN,\n  FOURSQUARE_API_URL,\n  FOURSQUARE_USER_MAPS_URL\n} = CLOUD_PROVIDERS_CONFIGURATION;\n\nconst DROPBOX_CLIENT_NAME = 'Kepler.gl Demo App';\n\nexport const DEFAULT_CLOUD_PROVIDER = 'dropbox';\n\nexport const CLOUD_PROVIDERS = [\n  new FoursquareProvider({\n    clientId: FOURSQUARE_CLIENT_ID,\n    authDomain: FOURSQUARE_DOMAIN,\n    apiURL: FOURSQUARE_API_URL,\n    userMapsURL: FOURSQUARE_USER_MAPS_URL\n  }),\n  new DropboxProvider(DROPBOX_CLIENT_ID, DROPBOX_CLIENT_NAME),\n  new CartoProvider(CARTO_CLIENT_ID)\n];\n\nexport function getCloudProvider(providerName) {\n  const cloudProvider = CLOUD_PROVIDERS.find(provider => provider.name === providerName);\n  if (!cloudProvider) {\n    throw new Error(`Unknown cloud provider ${providerName}`);\n  }\n  return cloudProvider;\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\n// Sample Taxi Trip Data\nexport const testCsvData = `gps_data.utc_timestamp,gps_data.lat,gps_data.lng,gps_data.types,epoch,has_result,id,time,begintrip_ts_utc,begintrip_ts_local,date,<img>_tooltip,website\n2016-09-17 00:09:55,29.9900937,31.2590542,driver_analytics,1472688000000,False,1,2016-09-23T00:00:00.000Z,2016-10-01 09:41:39+00:00,2016-10-01 09:41:39+00:00,2016-09-23,https://d1a3f4spazzrp4.cloudfront.net/kepler.gl/icon-demo-map.jpg,http://kepler.gl\n2016-09-17 00:10:56,29.9927699,31.2461142,driver_analytics,1472688000000,False,2,2016-09-23T00:00:00.000Z,2016-10-01 09:46:37+00:00,2016-10-01 16:46:37+00:00,2016-09-23,https://d1a3f4spazzrp4.cloudfront.net/kepler.gl/icon-demo-map.jpg,http://kepler.gl\n2016-09-17 00:11:56,29.9907261,31.2312742,driver_analytics,1472688000000,False,3,2016-09-23T00:00:00.000Z,,,2016-09-23,https://user-images.githubusercontent.com/3605556/66859873-f2aed400-ef40-11e9-8a41-d07de7560376.png,http://kepler.gl\n2016-09-17 00:12:58,29.9870074,31.2175827,driver_analytics,1472688000000,False,4,2016-09-23T00:00:00.000Z,,,2016-09-23,https://user-images.githubusercontent.com/3605556/66859873-f2aed400-ef40-11e9-8a41-d07de7560376.png,http://kepler.gl\n2016-09-17 00:14:00,29.9923041,31.2154899,driver_analytics,1472688000000,False,5,2016-09-23T00:00:00.000Z,2016-10-01 09:47:37+00:00,2016-10-01 16:47:37+00:00,,https://user-images.githubusercontent.com/3605556/66859873-f2aed400-ef40-11e9-8a41-d07de7560376.png,http://kepler.gl\n2016-09-17 00:15:01,29.9968249,31.2149361,driver_analytics,1472688000000,False,12124,2016-09-23T05:00:00.000Z,,,,https://user-images.githubusercontent.com/3605556/66859873-f2aed400-ef40-11e9-8a41-d07de7560376.png,http://kepler.gl\n2016-09-17 00:16:03,30.0037217,31.2164035,driver_analytics,1472688000000,False,222,2016-09-23T05:00:00.000Z,,,,https://user-images.githubusercontent.com/3605556/66859873-f2aed400-ef40-11e9-8a41-d07de7560376.png,http://kepler.gl\n2016-09-17 00:17:05,30.0116207,31.2179346,driver_analytics,1472688000000,False,345,2016-09-23T00:00:00.000Z,,,2016-09-24,https://user-images.githubusercontent.com/3605556/66859873-f2aed400-ef40-11e9-8a41-d07de7560376.png,http://kepler.gl\n2016-09-17 00:18:09,30.0208925,31.2179556,driver_analytics,1472708000000,False,,2016-09-23T00:00:00.000Z,,,2016-09-24,https://user-images.githubusercontent.com/3605556/66859873-f2aed400-ef40-11e9-8a41-d07de7560376.png,http://kepler.gl\n2016-09-17 00:19:12,30.0218999,31.2178842,driver_analytics,1472708000000,False,,2016-09-23T06:00:00.000Z,,,2016-09-24,https://user-images.githubusercontent.com/3605556/66859873-f2aed400-ef40-11e9-8a41-d07de7560376.png,http://kepler.gl\n2016-09-17 00:19:27,30.0229344,31.2179138,driver_analytics,1472708000000,False,,2016-09-23T05:00:00.000Z,,,2016-09-24,https://user-images.githubusercontent.com/3605556/66859873-f2aed400-ef40-11e9-8a41-d07de7560376.png,http://kepler.gl\n2016-09-17 00:20:14,30.0264237,31.2179415,driver_analytics,1472708000000,False,,,,,2016-09-24,https://user-images.githubusercontent.com/3605556/66859873-f2aed400-ef40-11e9-8a41-d07de7560376.png,http://kepler.gl\n2016-09-17 00:21:17,30.0292134,31.2181809,driver_analytics,1472754400000,False,,,,,2016-09-24,https://user-images.githubusercontent.com/3605556/66859873-f2aed400-ef40-11e9-8a41-d07de7560376.png,http://kepler.gl\n2016-09-17 00:22:20,30.034391,31.2193991,driver_analytics,1472754400000,,,2016-09-23T06:00:00.000Z,,,,https://user-images.githubusercontent.com/3605556/66859873-f2aed400-ef40-11e9-8a41-d07de7560376.png,http://kepler.gl\n2016-09-17 00:23:22,30.0352752,31.2181803,driver_analytics,1472754400000,,,2016-09-23T06:00:00.000Z,2016-10-01 10:01:54+00:00,2016-10-01 17:01:54+00:00,,https://user-images.githubusercontent.com/3605556/66859873-f2aed400-ef40-11e9-8a41-d07de7560376.png,http://kepler.gl\n2016-09-17 00:24:24,30.0395918,31.2195902,driver_analytics,1472754400000,,1,2016-09-23T00:00:00.000Z,2016-10-01 09:53:04+00:00,2016-10-01 16:53:04+00:00,,https://user-images.githubusercontent.com/3605556/66859873-f2aed400-ef40-11e9-8a41-d07de7560376.png,http://kepler.gl\n2016-09-17 00:25:28,30.0497387,31.2174421,driver_analytics,1472774400000,,,2016-09-23T07:00:00.000Z,2016-10-01 09:55:23+00:00,2016-10-01 16:55:23+00:00,,https://d1a3f4spazzrp4.cloudfront.net/kepler.gl/icon-demo-map.jpg,http://kepler.gl\n2016-09-17 00:26:29,30.0538936,31.2165983,driver_analytics,1472774400000,,43,2016-09-23T07:00:00.000Z,2016-10-01 09:59:53+00:00,2016-10-01 16:59:53+00:00,2016-10-10,https://d1a3f4spazzrp4.cloudfront.net/kepler.gl/icon-demo-map.jpg,http://kepler.gl\n2016-09-17 00:27:31,30.060911,31.2148748,driver_analytics,1472774400000,,4,2016-09-23T07:00:00.000Z,2016-10-01 09:57:11+00:00,2016-10-01 16:57:11+00:00,2016-10-10,https://d1a3f4spazzrp4.cloudfront.net/kepler.gl/icon-demo-map.jpg,http://kepler.gl\n2016-09-17 00:28:35,30.060334,31.2212278,driver_analytics,1472774400000,,5,2016-09-23T07:00:00.000Z,2016-10-01 09:59:27+00:00,2016-10-01 16:59:27+00:00,2016-10-10,https://d1a3f4spazzrp4.cloudfront.net/kepler.gl/icon-demo-map.jpg,http://kepler.gl\n2016-09-17 00:29:40,30.0554663,31.2288985,driver_analytics,1472774400000,True,,2016-09-23T07:00:00.000Z,2016-10-01 09:46:36+00:00,2016-10-01 16:46:36+00:00,2016-10-10,https://d1a3f4spazzrp4.cloudfront.net/kepler.gl/icon-demo-map.jpg,http://kepler.gl\n2016-09-17 00:30:03,30.0614122,31.2187021,driver_gps,1472774400000,True,6,2016-09-23T08:00:00.000Z,2016-10-01 09:54:31+00:00,2016-10-01 16:54:31+00:00,2016-10-10,https://d1a3f4spazzrp4.cloudfront.net/kepler.gl/icon-demo-map.jpg,http://kepler.gl\n2016-09-17 00:30:03,30.0612697,31.2191059,driver_gps,1472774400000,True,7,2016-09-23T08:00:00.000Z,2016-10-01 09:53:35+00:00,2016-10-01 16:53:35+00:00,2016-10-10,https://d1a3f4spazzrp4.cloudfront.net/kepler.gl/icon-demo-map.jpg,http://kepler.gl\n2016-09-17 00:30:08,30.0610977,31.2194728,driver_gps,1472774400000,True,,2016-09-23T08:00:00.000Z,,,,https://d1a3f4spazzrp4.cloudfront.net/kepler.gl/icon-demo-map.jpg,http://kepler.gl\n`;\n\nexport default {\n  fields: [\n    {\n      name: 'tpep_pickup_datetime',\n      format: 'YYYY-M-D H:m:s',\n      type: 'timestamp'\n    },\n    {\n      name: 'tpep_dropoff_datetime',\n      format: 'YYYY-M-D H:m:s',\n      type: 'timestamp'\n    },\n    {\n      name: 'passenger_count',\n      format: '',\n      type: 'integer'\n    },\n    {name: 'trip_distance', format: '', type: 'real'},\n    {name: 'pickup_longitude', format: '', type: 'real'},\n    {name: 'pickup_latitude', format: '', type: 'real'},\n    {name: 'dropoff_longitude', format: '', type: 'real'},\n    {name: 'dropoff_latitude', format: '', type: 'real'},\n    {name: 'fare_amount', format: '', type: 'real'},\n    {name: 'is_completed', format: '', type: 'boolean'},\n    {name: 'fare_type', format: '', type: 'string'}\n  ],\n  rows: [\n    [\n      null,\n      '2015-01-15 19:23:42 +00:00',\n      null,\n      1.59,\n      -73.99389648,\n      40.75011063,\n      -73.97478485,\n      40.75061798,\n      12,\n      true,\n      'orange peel 0'\n    ],\n    [\n      null,\n      '2015-01-15 19:32:00 +00:00',\n      -3,\n      2.38,\n      -73.97642517,\n      40.73981094,\n      -73.98397827,\n      40.75788879,\n      16.5,\n      false,\n      'orange peel 0'\n    ],\n    [\n      '2015-01-15 19:05:40 +00:00',\n      '2015-01-15 19:21:00 +00:00',\n      5,\n      2.83,\n      -73.96870422,\n      40.75424576,\n      -73.9551239,\n      40.7868576,\n      12.5,\n      false,\n      'apple tree'\n    ],\n    [\n      null,\n      '2015-01-15 19:28:18 +00:00',\n      5,\n      8.33,\n      -73.86306,\n      40.76958084,\n      -73.95271301,\n      40.78578186,\n      26,\n      true,\n      'orange peel 0'\n    ],\n    [\n      '2015-01-15 19:05:41 +00:00',\n      '2015-01-15 19:20:36 +00:00',\n      1,\n      2.37,\n      -73.94554138,\n      40.77942276,\n      -73.98085022,\n      40.78608322,\n      11.5,\n      true,\n      'apple tree'\n    ],\n    [\n      '2015-01-15 19:05:41 +00:00',\n      '2015-01-15 19:20:22 +00:00',\n      2,\n      7.13,\n      -73.87445831,\n      40.7740097,\n      -73.95237732,\n      40.71858978,\n      21.5,\n      true,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 19:05:41 +00:00',\n      '2015-01-15 19:31:00 +00:00',\n      0,\n      3.6,\n      -73.97660065,\n      40.7518959,\n      -73.99892426,\n      40.71459579,\n      17.5,\n      true,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 19:05:41 +00:00',\n      '2015-01-15 19:10:22 +00:00',\n      1,\n      0.89,\n      -73.99495697,\n      40.74507904,\n      -73.99993896,\n      40.73464966,\n      5.5,\n      false,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 19:05:41 +00:00',\n      '2015-01-15 19:10:55 +00:00',\n      1,\n      0.96,\n      -74.00093842,\n      40.74706268,\n      -74.00356293,\n      40.73551178,\n      5.5,\n      false,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 19:05:41 +00:00',\n      '2015-01-15 19:12:36 +00:00',\n      2,\n      1.25,\n      -74.0027771,\n      40.71789169,\n      -74.00791931,\n      40.70421982,\n      6.5,\n      true,\n      'mango mint pineapple juice'\n    ],\n    [\n      '2015-01-15 19:05:41 +00:00',\n      '2015-01-15 19:22:11 +00:00',\n      5,\n      2.11,\n      -73.99745941,\n      40.73636246,\n      -73.9781723,\n      40.76185608,\n      11.5,\n      false,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 19:05:41 +00:00',\n      '2015-01-15 19:14:05 +00:00',\n      5,\n      1.15,\n      -73.95227814,\n      40.82399368,\n      -73.95333862,\n      40.81108856,\n      7.5,\n      false,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 19:05:42 +00:00',\n      '2015-01-15 19:16:18 +00:00',\n      0,\n      1.53,\n      -73.99112701,\n      40.75008011,\n      -73.98860931,\n      40.73488998,\n      9,\n      false,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 19:05:42 +00:00',\n      '2015-01-15 19:49:07 +00:00',\n      1,\n      18.06,\n      -73.78657532,\n      40.64412689,\n      -73.98560333,\n      40.74353027,\n      52,\n      false,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 19:05:42 +00:00',\n      '2015-01-15 19:18:33 +00:00',\n      1,\n      1.76,\n      -73.9936676,\n      40.74144745,\n      -73.99451447,\n      40.75772095,\n      10,\n      false,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 19:05:42 +00:00',\n      '2015-01-15 19:21:40 +00:00',\n      6,\n      5.19,\n      -73.98529053,\n      40.7440834,\n      -74.00907898,\n      40.70468903,\n      17.5,\n      false,\n      'mango mint pineapple juice'\n    ],\n    [\n      '2015-01-15 19:05:42 +00:00',\n      '2015-01-15 19:14:23 +00:00',\n      1,\n      1.38,\n      -73.96977234,\n      40.7856102,\n      -73.95070648,\n      40.77468109,\n      7.5,\n      false,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 19:05:43 +00:00',\n      '2015-01-15 19:17:43 +00:00',\n      -3,\n      2.23,\n      -73.98509216,\n      40.75698853,\n      -73.98487854,\n      40.78015137,\n      10,\n      true,\n      'apple tree'\n    ],\n    [\n      '2015-01-15 19:05:43 +00:00',\n      '2015-01-15 19:15:17 +00:00',\n      1,\n      1.56,\n      -73.96616364,\n      40.76216125,\n      -73.95005035,\n      40.77625275,\n      8,\n      true,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 19:05:43 +00:00',\n      '2015-01-15 19:15:09 +00:00',\n      5,\n      1.57,\n      -73.97842407,\n      40.74620819,\n      -73.98021698,\n      40.72854233,\n      8,\n      false,\n      'mango mint pineapple juice'\n    ],\n    [\n      '2015-01-15 19:05:44 +00:00',\n      '2015-01-15 19:17:44 +00:00',\n      1,\n      2.92,\n      -73.99835205,\n      40.72003174,\n      -73.95582581,\n      40.71559906,\n      12.5,\n      false,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 14:00:41 +00:00',\n      '2015-01-15 14:11:18 +00:00',\n      1,\n      1.64,\n      -73.9837265,\n      40.74634171,\n      -73.96679688,\n      40.76140594,\n      8.5,\n      false,\n      'apple tree'\n    ],\n    [\n      '2015-01-15 14:00:41 +00:00',\n      '2015-01-15 14:19:26 +00:00',\n      1,\n      1.53,\n      -73.99578094,\n      40.73294067,\n      -73.99107361,\n      40.75038147,\n      12,\n      true,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 14:00:41 +00:00',\n      '2015-01-15 14:31:42 +00:00',\n      -5,\n      7.48,\n      -73.87081909,\n      40.77370071,\n      -73.96869659,\n      40.76268005,\n      27,\n      false,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 14:00:41 +00:00',\n      '2015-01-15 14:13:48 +00:00',\n      1,\n      3,\n      -73.96427155,\n      40.7730217,\n      -73.96577454,\n      40.80466843,\n      12,\n      false,\n      'apple tree'\n    ],\n    [\n      '2015-01-15 14:00:42 +00:00',\n      '2015-01-15 14:05:01 +00:00',\n      1,\n      0.67,\n      -73.97093201,\n      40.79592133,\n      -73.97016907,\n      40.78912354,\n      5,\n      true,\n      'mango mint pineapple juice'\n    ],\n    [\n      '2015-01-15 14:00:42 +00:00',\n      '2015-01-15 14:20:40 +00:00',\n      1,\n      1.51,\n      -73.97212219,\n      40.75902939,\n      -73.99093628,\n      40.7557373,\n      13,\n      false,\n      'apple tree'\n    ],\n    [\n      '2015-01-15 14:00:42 +00:00',\n      '2015-01-15 14:05:16 +00:00',\n      2,\n      0.85,\n      -73.98056793,\n      40.7656517,\n      -73.97304535,\n      40.75827026,\n      5.5,\n      true,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 14:00:43 +00:00',\n      '2015-01-15 14:58:40 +00:00',\n      -1,\n      15.2,\n      -73.8012619,\n      40.66772842,\n      -73.9933548,\n      40.75600052,\n      52,\n      true,\n      'apple tree'\n    ],\n    [\n      '2015-01-15 14:00:43 +00:00',\n      '2015-01-15 14:41:50 +00:00',\n      3,\n      9.96,\n      -73.99095917,\n      40.74534225,\n      -73.97360229,\n      40.63248062,\n      35.5,\n      false,\n      'mango mint pineapple juice'\n    ],\n    [\n      '2015-01-15 14:00:44 +00:00',\n      '2015-01-15 14:04:55 +00:00',\n      1,\n      0.76,\n      -73.96351624,\n      40.77156067,\n      -73.95298767,\n      40.77246094,\n      5,\n      true,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 14:00:44 +00:00',\n      '2015-01-15 14:04:06 +00:00',\n      1,\n      0.38,\n      -73.99138641,\n      40.7701683,\n      -73.98978424,\n      40.77473831,\n      4,\n      false,\n      'apple tree'\n    ],\n    [\n      '2015-01-15 14:00:45 +00:00',\n      '2015-01-15 14:05:40 +00:00',\n      2,\n      0.63,\n      -73.95426941,\n      40.77827072,\n      -73.95627594,\n      40.78404617,\n      5,\n      true,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 14:00:45 +00:00',\n      '2015-01-15 14:39:09 +00:00',\n      1,\n      12.63,\n      -73.78852844,\n      40.64778519,\n      -73.97788239,\n      40.68964005,\n      40,\n      true,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 14:00:45 +00:00',\n      '2015-01-15 14:10:24 +00:00',\n      null,\n      1.2,\n      -73.9940033,\n      40.7513504,\n      -73.98135376,\n      40.76112366,\n      8.5,\n      false,\n      'mango mint pineapple juice'\n    ],\n    [\n      '2015-01-15 14:00:45 +00:00',\n      '2015-01-15 14:16:31 +00:00',\n      2,\n      1.18,\n      -74.00641632,\n      40.73965454,\n      -73.98991394,\n      40.73839569,\n      10.5,\n      false,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 14:00:45 +00:00',\n      '2015-01-15 14:47:12 +00:00',\n      1,\n      10.89,\n      -74.00640869,\n      40.73976517,\n      -73.87119293,\n      40.77421188,\n      40.5,\n      true,\n      'apple tree'\n    ],\n    [\n      '2015-01-15 14:00:46 +00:00',\n      '2015-01-15 14:41:54 +00:00',\n      6,\n      10.39,\n      -73.9930954,\n      40.74725723,\n      -73.86483002,\n      40.77032089,\n      38,\n      true,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 14:00:46 +00:00',\n      '2015-01-15 14:33:02 +00:00',\n      5,\n      2.96,\n      -73.96273041,\n      40.77416992,\n      -73.99333191,\n      40.7498703,\n      20.5,\n      true,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 14:00:46 +00:00',\n      '2015-01-15 14:10:09 +00:00',\n      1,\n      1.18,\n      -73.9825592,\n      40.77320099,\n      -73.96412659,\n      40.76470947,\n      8,\n      true,\n      'apple tree'\n    ],\n    [\n      '2015-01-15 14:00:46 +00:00',\n      '2015-01-15 14:14:51 +00:00',\n      1,\n      1.62,\n      -73.97618103,\n      40.75120544,\n      -73.9863739,\n      40.7665863,\n      10.5,\n      true,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 14:00:47 +00:00',\n      '2015-01-15 14:16:01 +00:00',\n      null,\n      1.56,\n      -73.95927429,\n      40.77437592,\n      -73.97639465,\n      40.76293945,\n      10.5,\n      true,\n      'banana peel 2'\n    ],\n    [\n      '2015-01-15 14:00:47 +00:00',\n      '2015-01-15 14:23:36 +00:00',\n      5,\n      4.96,\n      -73.97286224,\n      40.74352264,\n      -73.91412354,\n      40.76496887,\n      19,\n      true,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 10:26:13 +00:00',\n      '2015-01-15 10:30:49 +00:00',\n      1,\n      0.8,\n      -73.97223663,\n      40.74559402,\n      -73.96466827,\n      40.75601959,\n      5.5,\n      true,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 10:26:14 +00:00',\n      '2015-01-15 10:42:16 +00:00',\n      -1,\n      1.9,\n      -73.94948578,\n      40.77207184,\n      -73.97072601,\n      40.75839233,\n      12.5,\n      false,\n      'apple tree'\n    ],\n    [\n      '2015-01-15 10:26:14 +00:00',\n      '2015-01-15 10:51:03 +00:00',\n      1,\n      2.6,\n      -73.96176147,\n      40.76427078,\n      -73.98921967,\n      40.74206543,\n      16,\n      true,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 10:26:14 +00:00',\n      '2015-01-15 10:38:13 +00:00',\n      1,\n      0.8,\n      -73.99343872,\n      40.74200058,\n      -73.98744965,\n      40.75202179,\n      8.5,\n      true,\n      'mango mint pineapple juice'\n    ],\n    [\n      '2015-01-15 10:26:14 +00:00',\n      '2015-01-15 10:49:00 +00:00',\n      null,\n      6.8,\n      -73.97297668,\n      40.7611351,\n      -74.00971222,\n      40.70956421,\n      23,\n      true,\n      'banana peel 2'\n    ],\n    [\n      '2015-01-15 10:26:15 +00:00',\n      '2015-01-15 10:34:40 +00:00',\n      1,\n      1.3,\n      -73.94763947,\n      40.77514267,\n      -73.96069336,\n      40.76080704,\n      7.5,\n      true,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 10:26:15 +00:00',\n      '2015-01-15 10:35:33 +00:00',\n      1,\n      0.7,\n      -73.98516846,\n      40.75121307,\n      -73.97951508,\n      40.7618866,\n      7.5,\n      false,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 10:26:15 +00:00',\n      '2015-01-15 10:33:37 +00:00',\n      1,\n      0.3,\n      -73.98387146,\n      40.74245453,\n      -73.98730469,\n      40.74406052,\n      6,\n      false,\n      'apple tree'\n    ],\n    [\n      '2015-01-15 10:26:15 +00:00',\n      '2015-01-15 10:36:03 +00:00',\n      1,\n      1.4,\n      -73.96815491,\n      40.76235962,\n      -73.98164368,\n      40.74707031,\n      8,\n      true,\n      'mango mint pineapple juice'\n    ],\n    [\n      '2015-01-15 10:26:16 +00:00',\n      '2015-01-15 10:32:04 +00:00',\n      1,\n      1.2,\n      -74.00554657,\n      40.72677612,\n      -74.01348114,\n      40.71365738,\n      6.5,\n      true,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 10:26:16 +00:00',\n      '2015-01-15 11:08:10 +00:00',\n      2,\n      12.6,\n      -73.86273956,\n      40.7688446,\n      -73.98956299,\n      40.75883865,\n      40,\n      false,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 10:26:16 +00:00',\n      '2015-01-15 10:26:42 +00:00',\n      2,\n      0,\n      -73.98765564,\n      40.74364471,\n      -73.98748779,\n      40.7434845,\n      60,\n      false,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 10:26:17 +00:00',\n      '2015-01-15 10:27:28 +00:00',\n      1,\n      0,\n      -73.94652557,\n      40.7449913,\n      -73.94652557,\n      40.7449913,\n      3,\n      false,\n      'apple tree'\n    ],\n    [\n      '2015-01-15 09:46:59 +00:00',\n      '2015-01-15 09:57:44 +00:00',\n      1,\n      3.1,\n      -74.01138306,\n      40.71348953,\n      -73.99554443,\n      40.74922943,\n      11.5,\n      true,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 09:46:59 +00:00',\n      '2015-01-15 09:56:44 +00:00',\n      1,\n      0.8,\n      -73.99701691,\n      40.74232101,\n      -73.98770142,\n      40.73540497,\n      7.5,\n      false,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 09:46:59 +00:00',\n      '2015-01-15 10:27:34 +00:00',\n      1,\n      9.5,\n      -73.87297058,\n      40.77403259,\n      -74.00010681,\n      40.71933746,\n      34,\n      true,\n      'apple tree'\n    ],\n    [\n      '2015-01-15 09:47:00 +00:00',\n      '2015-01-15 09:50:43 +00:00',\n      1,\n      0.4,\n      -74.00221252,\n      40.72949219,\n      -73.9969101,\n      40.72514343,\n      4.5,\n      true,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 09:47:02 +00:00',\n      '2015-01-15 10:01:48 +00:00',\n      1,\n      1.1,\n      -73.96573639,\n      40.7954216,\n      -73.95262909,\n      40.78934479,\n      10,\n      false,\n      'apple tree'\n    ],\n    [\n      '2015-01-15 09:47:02 +00:00',\n      '2015-01-15 10:14:12 +00:00',\n      2,\n      2.2,\n      -74.00695801,\n      40.73000336,\n      -73.98561859,\n      40.7528801,\n      16.5,\n      false,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 09:47:03 +00:00',\n      '2015-01-15 09:57:10 +00:00',\n      1,\n      0.7,\n      -73.97551727,\n      40.75428009,\n      -73.97853088,\n      40.76155853,\n      7.5,\n      true,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 09:47:03 +00:00',\n      '2015-01-15 09:53:04 +00:00',\n      3,\n      0.8,\n      -73.94737244,\n      40.77603912,\n      -73.95754242,\n      40.77267075,\n      6,\n      false,\n      'apple tree'\n    ],\n    [\n      '2015-01-15 09:47:03 +00:00',\n      '2015-01-15 09:51:15 +00:00',\n      1,\n      1.1,\n      -73.96231079,\n      40.75884628,\n      -73.95182037,\n      40.77346039,\n      5.5,\n      true,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 09:47:04 +00:00',\n      '2015-01-15 10:02:36 +00:00',\n      1,\n      1.4,\n      -73.98874664,\n      40.75502777,\n      -73.99000549,\n      40.73872375,\n      10.5,\n      true,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 09:47:04 +00:00',\n      '2015-01-15 10:00:56 +00:00',\n      2,\n      1.6,\n      -73.98256683,\n      40.73551559,\n      -73.9910965,\n      40.74888992,\n      10,\n      true,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 09:47:05 +00:00',\n      '2015-01-15 09:52:25 +00:00',\n      1,\n      0.6,\n      -73.99432373,\n      40.75033188,\n      -74.00239563,\n      40.74866867,\n      5.5,\n      false,\n      'mango mint pineapple juice'\n    ],\n    [\n      '2015-01-15 09:47:05 +00:00',\n      '2015-01-15 09:53:18 +00:00',\n      1,\n      0.7,\n      -73.96313477,\n      40.77178955,\n      -73.95404053,\n      40.76702499,\n      5.5,\n      false,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 09:47:05 +00:00',\n      '2015-01-15 09:48:54 +00:00',\n      1,\n      0.5,\n      -73.96200562,\n      40.75959015,\n      -73.95683289,\n      40.76490021,\n      3.5,\n      true,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 09:47:05 +00:00',\n      '2015-01-15 09:51:23 +00:00',\n      1,\n      0.9,\n      -73.97065735,\n      40.78341293,\n      -73.9588623,\n      40.78094482,\n      5.5,\n      true,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 09:47:06 +00:00',\n      '2015-01-15 09:55:23 +00:00',\n      1,\n      1.6,\n      -73.96646881,\n      40.79238129,\n      -73.95868683,\n      40.77577209,\n      8,\n      false,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 09:47:06 +00:00',\n      '2015-01-15 10:01:35 +00:00',\n      2,\n      6.9,\n      -73.98991394,\n      40.75692368,\n      -73.94661713,\n      40.83629227,\n      21,\n      true,\n      'mango mint pineapple juice'\n    ],\n    [\n      '2015-01-15 09:47:07 +00:00',\n      '2015-01-15 09:55:25 +00:00',\n      1,\n      0.7,\n      -73.9852066,\n      40.74163055,\n      -73.97882843,\n      40.75057602,\n      7,\n      false,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 09:47:07 +00:00',\n      '2015-01-15 10:08:50 +00:00',\n      1,\n      2.9,\n      -73.97415161,\n      40.78395081,\n      -73.97834778,\n      40.75157547,\n      15,\n      true,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 09:47:07 +00:00',\n      '2015-01-15 09:56:05 +00:00',\n      1,\n      1.6,\n      -73.97924042,\n      40.77156448,\n      -73.96215057,\n      40.77807236,\n      8.5,\n      true,\n      'apple tree'\n    ],\n    [\n      '2015-01-15 10:26:10 +00:00',\n      '2015-01-15 10:42:12 +00:00',\n      1,\n      1.5,\n      -73.99133301,\n      40.74978256,\n      -73.97821045,\n      40.73733521,\n      11,\n      true,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 10:26:10 +00:00',\n      '2015-01-15 10:53:36 +00:00',\n      1,\n      3.7,\n      -73.99958801,\n      40.72176361,\n      -73.96715546,\n      40.75602341,\n      18.5,\n      false,\n      'mango mint pineapple juice'\n    ],\n    [\n      '2015-01-15 10:26:12 +00:00',\n      '2015-01-15 10:46:58 +00:00',\n      1,\n      1.8,\n      -73.97556305,\n      40.75548553,\n      -73.99723816,\n      40.75146484,\n      13.5,\n      false,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 10:26:12 +00:00',\n      '2015-01-15 10:50:20 +00:00',\n      1,\n      1.4,\n      -73.97470093,\n      40.74204636,\n      -73.97841644,\n      40.75669479,\n      15.5,\n      true,\n      'apple tree'\n    ],\n    [\n      '2015-01-15 10:26:12 +00:00',\n      '2015-01-15 10:39:05 +00:00',\n      1,\n      1.4,\n      -73.9725647,\n      40.75384521,\n      -73.98822021,\n      40.74080658,\n      9.5,\n      false,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 10:26:12 +00:00',\n      '2015-01-15 10:43:52 +00:00',\n      2,\n      2.6,\n      -73.9773941,\n      40.78989792,\n      -73.9559021,\n      40.7661171,\n      13,\n      true,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 10:26:12 +00:00',\n      '2015-01-15 10:32:31 +00:00',\n      1,\n      0.8,\n      -73.95783997,\n      40.7794075,\n      -73.95165253,\n      40.77099991,\n      6,\n      false,\n      'mango mint pineapple juice'\n    ],\n    [\n      '2015-01-15 10:26:13 +00:00',\n      '2015-01-15 10:35:01 +00:00',\n      1,\n      0.5,\n      -73.98423767,\n      40.7456665,\n      -73.97926331,\n      40.74409866,\n      7,\n      false,\n      'mango mint pineapple juice'\n    ],\n    [\n      '2015-01-15 10:56:46 +00:00',\n      '2015-01-15 11:06:13 +00:00',\n      1,\n      1.6,\n      -73.98516846,\n      40.76850128,\n      -73.98157501,\n      40.75225067,\n      7.5,\n      false,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 10:56:46 +00:00',\n      '2015-01-15 11:09:23 +00:00',\n      1,\n      2,\n      -73.98225403,\n      40.76245117,\n      -73.99003601,\n      40.73810959,\n      10,\n      false,\n      'apple tree'\n    ],\n    [\n      '2015-01-15 10:56:47 +00:00',\n      '2015-01-15 11:23:18 +00:00',\n      1,\n      5.4,\n      -73.97812653,\n      40.75257492,\n      -74.00234222,\n      40.7152977,\n      22,\n      true,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 10:56:48 +00:00',\n      '2015-01-15 11:07:26 +00:00',\n      1,\n      1.5,\n      -74.00622559,\n      40.73387146,\n      -73.99993134,\n      40.75349426,\n      9,\n      true,\n      'mango mint pineapple juice'\n    ],\n    [\n      '2015-01-15 10:56:48 +00:00',\n      '2015-01-15 11:08:55 +00:00',\n      1,\n      1.5,\n      -73.97122955,\n      40.75518417,\n      -73.95401001,\n      40.76623917,\n      9.5,\n      true,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 10:56:48 +00:00',\n      '2015-01-15 11:10:30 +00:00',\n      1,\n      2.2,\n      -73.97627258,\n      40.75893402,\n      -73.98604584,\n      40.73451614,\n      11,\n      false,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 10:56:48 +00:00',\n      '2015-01-15 11:06:10 +00:00',\n      1,\n      1.4,\n      -73.97628021,\n      40.77590942,\n      -73.96232605,\n      40.76773834,\n      8.5,\n      true,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 10:56:49 +00:00',\n      '2015-01-15 11:03:29 +00:00',\n      1,\n      0.7,\n      -73.98015594,\n      40.76077652,\n      -73.97042084,\n      40.76482773,\n      6,\n      true,\n      'mango mint pineapple juice'\n    ],\n    [\n      '2015-01-15 10:56:49 +00:00',\n      '2015-01-15 11:05:22 +00:00',\n      1,\n      0.5,\n      -73.98032379,\n      40.74335861,\n      -73.97641754,\n      40.73955154,\n      6.5,\n      true,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 10:56:49 +00:00',\n      '2015-01-15 11:04:05 +00:00',\n      1,\n      0.5,\n      -73.97009277,\n      40.7521019,\n      -73.97557068,\n      40.7491951,\n      6,\n      false,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 10:56:49 +00:00',\n      '2015-01-15 11:12:20 +00:00',\n      1,\n      1.5,\n      -73.98545837,\n      40.75137329,\n      -74.00403595,\n      40.75012589,\n      11,\n      false,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 10:56:49 +00:00',\n      '2015-01-15 11:25:21 +00:00',\n      1,\n      8.7,\n      -73.86603546,\n      40.77074432,\n      -73.98206329,\n      40.74584198,\n      29,\n      true,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 10:56:50 +00:00',\n      '2015-01-15 11:31:54 +00:00',\n      1,\n      12.5,\n      -73.99441528,\n      40.72490692,\n      -73.94686127,\n      40.61621094,\n      38,\n      true,\n      'mango mint pineapple juice'\n    ],\n    [\n      '2015-01-15 10:56:50 +00:00',\n      '2015-01-15 11:16:04 +00:00',\n      1,\n      0,\n      -73.99421692,\n      40.73490906,\n      -73.97660828,\n      40.75004578,\n      12,\n      true,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 10:56:50 +00:00',\n      '2015-01-15 11:03:51 +00:00',\n      1,\n      1.3,\n      -74.01493835,\n      40.71023178,\n      -74.0075531,\n      40.72661591,\n      7,\n      true,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 10:56:50 +00:00',\n      '2015-01-15 11:21:30 +00:00',\n      1,\n      6,\n      -73.99806976,\n      40.73566437,\n      -73.96785736,\n      40.80531311,\n      22.5,\n      false,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 10:56:50 +00:00',\n      '2015-01-15 11:03:30 +00:00',\n      1,\n      1.3,\n      -73.98352051,\n      40.76331329,\n      -73.99245453,\n      40.74995804,\n      6,\n      false,\n      'apple tree'\n    ],\n    [\n      '2015-01-15 10:56:52 +00:00',\n      '2015-01-15 11:05:46 +00:00',\n      1,\n      1.2,\n      -74.00131989,\n      40.7518959,\n      -73.98478699,\n      40.75503922,\n      7.5,\n      false,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 10:56:52 +00:00',\n      '2015-01-15 11:11:58 +00:00',\n      1,\n      3.6,\n      -74.01648712,\n      40.71627426,\n      -73.99113464,\n      40.75481415,\n      13.5,\n      true,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 10:56:52 +00:00',\n      '2015-01-15 11:12:56 +00:00',\n      1,\n      1.6,\n      -73.9691925,\n      40.76200104,\n      -73.98760986,\n      40.74968338,\n      11,\n      true,\n      'apple tree'\n    ],\n    [\n      '2015-01-15 10:56:53 +00:00',\n      '2015-01-15 10:59:35 +00:00',\n      1,\n      0.4,\n      -73.9547348,\n      40.76564026,\n      -73.95345306,\n      40.77137756,\n      4,\n      false,\n      'mango mint pineapple juice'\n    ],\n    [\n      '2015-01-15 11:35:15 +00:00',\n      '2015-01-15 11:53:23 +00:00',\n      1,\n      2.2,\n      -73.9984436,\n      40.71989441,\n      -74.00462341,\n      40.74206543,\n      12.5,\n      false,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 11:35:15 +00:00',\n      '2015-01-15 11:43:13 +00:00',\n      1,\n      1.2,\n      -73.9718399,\n      40.79421616,\n      -73.95295715,\n      40.78664398,\n      7.5,\n      true,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 11:35:16 +00:00',\n      '2015-01-15 12:01:53 +00:00',\n      1,\n      6.8,\n      -73.95982361,\n      40.77128983,\n      -74.00769043,\n      40.71765518,\n      24.5,\n      false,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 11:35:17 +00:00',\n      '2015-01-15 11:49:54 +00:00',\n      1,\n      1.9,\n      -73.9616394,\n      40.77980804,\n      -73.98139954,\n      40.75747299,\n      10.5,\n      false,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 11:35:18 +00:00',\n      '2015-01-15 11:51:31 +00:00',\n      2,\n      0.8,\n      -73.96839905,\n      40.76218033,\n      -73.98125458,\n      40.76370239,\n      10.5,\n      false,\n      'apple tree'\n    ],\n    [\n      '2015-01-15 11:35:19 +00:00',\n      '2015-01-15 11:46:14 +00:00',\n      1,\n      1.4,\n      -73.96898651,\n      40.79833221,\n      -73.97193146,\n      40.78203964,\n      9,\n      true,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 11:35:20 +00:00',\n      '2015-01-15 11:43:38 +00:00',\n      1,\n      1.7,\n      -73.98987579,\n      40.76201248,\n      -73.98152924,\n      40.78125763,\n      8,\n      true,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 11:35:20 +00:00',\n      '2015-01-15 11:47:17 +00:00',\n      1,\n      1.4,\n      -73.98216248,\n      40.77657318,\n      -73.97359467,\n      40.76300049,\n      9.5,\n      true,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 11:35:21 +00:00',\n      '2015-01-15 11:35:28 +00:00',\n      1,\n      0,\n      -73.9733963,\n      40.76347733,\n      -73.9733963,\n      40.76347733,\n      2.5,\n      false,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 11:35:22 +00:00',\n      '2015-01-15 11:46:32 +00:00',\n      1,\n      1.1,\n      -73.98245239,\n      40.7314949,\n      -73.97905731,\n      40.74420929,\n      8.5,\n      true,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 11:35:23 +00:00',\n      '2015-01-15 11:44:32 +00:00',\n      1,\n      1.2,\n      -73.94425964,\n      40.7760582,\n      -73.96222687,\n      40.77615738,\n      8,\n      false,\n      'apple tree'\n    ],\n    [\n      '2015-01-15 11:35:24 +00:00',\n      '2015-01-15 11:58:40 +00:00',\n      1,\n      2.1,\n      -74.00631714,\n      40.73365784,\n      -74.00494385,\n      40.71043015,\n      15,\n      true,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 11:35:25 +00:00',\n      '2015-01-15 11:51:24 +00:00',\n      1,\n      1.9,\n      -73.98616791,\n      40.72227859,\n      -73.99510193,\n      40.73960114,\n      12,\n      false,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 11:35:25 +00:00',\n      '2015-01-15 11:51:06 +00:00',\n      1,\n      2,\n      -73.96168518,\n      40.75761414,\n      -73.98378754,\n      40.74235153,\n      11,\n      false,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 11:35:25 +00:00',\n      '2015-01-15 12:01:33 +00:00',\n      1,\n      3.5,\n      -73.9727478,\n      40.74853134,\n      -74.00801849,\n      40.72272873,\n      18,\n      false,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 11:35:25 +00:00',\n      '2015-01-15 11:40:23 +00:00',\n      1,\n      0.6,\n      -73.96208954,\n      40.76380157,\n      -73.96765137,\n      40.75511551,\n      5,\n      false,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 11:35:25 +00:00',\n      '2015-01-15 11:56:42 +00:00',\n      1,\n      1.9,\n      -73.9851532,\n      40.7371788,\n      -73.96670532,\n      40.76086426,\n      14,\n      false,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 11:35:26 +00:00',\n      '2015-01-15 11:51:09 +00:00',\n      2,\n      2.3,\n      -73.97872925,\n      40.75224304,\n      -73.96221161,\n      40.77930069,\n      12,\n      false,\n      'apple tree'\n    ],\n    [\n      '2015-01-15 11:35:26 +00:00',\n      '2015-01-15 11:44:50 +00:00',\n      1,\n      1.3,\n      -73.95684814,\n      40.78347778,\n      -73.95326996,\n      40.79862976,\n      7.5,\n      false,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 11:35:26 +00:00',\n      '2015-01-15 11:48:16 +00:00',\n      1,\n      1.8,\n      -73.95348358,\n      40.76652908,\n      -73.97425842,\n      40.75358963,\n      10,\n      false,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 11:35:27 +00:00',\n      '2015-01-15 11:43:45 +00:00',\n      2,\n      0.9,\n      -73.98709869,\n      40.7389946,\n      -73.97855377,\n      40.75112534,\n      7,\n      false,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 11:49:53 +00:00',\n      '2015-01-15 12:02:35 +00:00',\n      1,\n      1.3,\n      -73.98623657,\n      40.74385834,\n      -73.97293854,\n      40.75786209,\n      9,\n      false,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 11:49:53 +00:00',\n      '2015-01-15 12:06:10 +00:00',\n      1,\n      6.3,\n      -73.96685791,\n      40.76138687,\n      -73.87236786,\n      40.77438354,\n      20,\n      false,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 11:49:53 +00:00',\n      '2015-01-15 11:56:36 +00:00',\n      1,\n      0.4,\n      -73.96569824,\n      40.75917053,\n      -73.97373962,\n      40.7628479,\n      6,\n      false,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 11:49:54 +00:00',\n      '2015-01-15 11:59:59 +00:00',\n      1,\n      0.9,\n      -74.00165558,\n      40.74570465,\n      -73.98720551,\n      40.73950577,\n      8,\n      false,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 11:49:54 +00:00',\n      '2015-01-15 11:50:33 +00:00',\n      1,\n      0,\n      -73.94851685,\n      40.74454117,\n      -73.94844818,\n      40.74446869,\n      20,\n      true,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 11:49:54 +00:00',\n      '2015-01-15 12:20:30 +00:00',\n      1,\n      9.9,\n      -73.95471954,\n      40.6891098,\n      -73.87099457,\n      40.77423859,\n      31,\n      true,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 11:49:54 +00:00',\n      '2015-01-15 11:51:35 +00:00',\n      1,\n      0.3,\n      -73.97939301,\n      40.78484344,\n      -73.98139191,\n      40.78102112,\n      3.5,\n      true,\n      'apple tree'\n    ],\n    [\n      '2015-01-15 11:49:55 +00:00',\n      '2015-01-15 12:15:37 +00:00',\n      1,\n      2.1,\n      -73.96233368,\n      40.7553978,\n      -73.9940567,\n      40.75914383,\n      16,\n      false,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 11:49:55 +00:00',\n      '2015-01-15 12:23:44 +00:00',\n      2,\n      2.2,\n      -73.9991684,\n      40.72670746,\n      -73.98468781,\n      40.75434113,\n      20,\n      false,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 11:49:55 +00:00',\n      '2015-01-15 12:01:31 +00:00',\n      1,\n      1.9,\n      -73.99319458,\n      40.74750137,\n      -73.99531555,\n      40.72745132,\n      9,\n      false,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 11:49:55 +00:00',\n      '2015-01-15 11:57:33 +00:00',\n      1,\n      1.3,\n      -73.98823547,\n      40.76163101,\n      -73.97983551,\n      40.77527237,\n      7,\n      true,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 11:49:55 +00:00',\n      '2015-01-15 12:02:53 +00:00',\n      1,\n      1.5,\n      -73.98677063,\n      40.74547958,\n      -73.97886658,\n      40.76271439,\n      9.5,\n      true,\n      'mango mint pineapple juice'\n    ],\n    [\n      '2015-01-15 11:49:55 +00:00',\n      '2015-01-15 11:54:40 +00:00',\n      1,\n      0.8,\n      -73.99420166,\n      40.75626373,\n      -73.99887848,\n      40.74616241,\n      5,\n      false,\n      'apple tree'\n    ],\n    [\n      '2015-01-15 11:49:56 +00:00',\n      '2015-01-15 12:38:59 +00:00',\n      3,\n      17.4,\n      -73.9848175,\n      40.75334549,\n      -73.78993988,\n      40.6469841,\n      52,\n      false,\n      'mango mint pineapple juice'\n    ],\n    [\n      '2015-01-15 11:49:56 +00:00',\n      '2015-01-15 11:56:08 +00:00',\n      1,\n      0.9,\n      -73.98517609,\n      40.75651169,\n      -73.98495483,\n      40.74806595,\n      6,\n      true,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 11:49:56 +00:00',\n      '2015-01-15 12:02:54 +00:00',\n      1,\n      1.4,\n      -73.98865509,\n      40.7688942,\n      -73.97301483,\n      40.78256226,\n      10,\n      false,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 11:49:56 +00:00',\n      '2015-01-15 12:01:01 +00:00',\n      1,\n      1.8,\n      -73.96639252,\n      40.78882599,\n      -73.98210907,\n      40.76841354,\n      9.5,\n      false,\n      'apple tree'\n    ],\n    [\n      '2015-01-15 11:49:57 +00:00',\n      '2015-01-15 12:03:47 +00:00',\n      4,\n      1.9,\n      -73.9731369,\n      40.75410843,\n      -73.98535156,\n      40.73196411,\n      10.5,\n      false,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 11:49:57 +00:00',\n      '2015-01-15 12:03:11 +00:00',\n      1,\n      0.9,\n      -73.97318268,\n      40.75216675,\n      -73.98213196,\n      40.75175858,\n      9.5,\n      true,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 11:49:57 +00:00',\n      '2015-01-15 11:58:02 +00:00',\n      1,\n      0.9,\n      -73.99911499,\n      40.72656631,\n      -73.99121094,\n      40.71820831,\n      7,\n      false,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 11:49:57 +00:00',\n      '2015-01-15 12:14:42 +00:00',\n      1,\n      2.8,\n      -73.99176788,\n      40.74915695,\n      -73.95938873,\n      40.76327515,\n      16.5,\n      false,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 12:09:15 +00:00',\n      '2015-01-15 12:24:25 +00:00',\n      1,\n      1.5,\n      -73.98931885,\n      40.73603058,\n      -73.98506165,\n      40.75305939,\n      10.5,\n      true,\n      'apple tree'\n    ],\n    [\n      '2015-01-15 12:09:15 +00:00',\n      '2015-01-15 12:46:14 +00:00',\n      1,\n      17,\n      -73.98258209,\n      40.73946762,\n      -73.77700043,\n      40.6446991,\n      52,\n      true,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 12:09:16 +00:00',\n      '2015-01-15 12:22:54 +00:00',\n      1,\n      3.5,\n      -74.0118866,\n      40.71377945,\n      -74.00259399,\n      40.76077271,\n      13.5,\n      false,\n      'mango mint pineapple juice'\n    ],\n    [\n      '2015-01-15 12:09:16 +00:00',\n      '2015-01-15 12:26:07 +00:00',\n      1,\n      0.9,\n      -73.96848297,\n      40.76449585,\n      -73.97989655,\n      40.75763321,\n      11,\n      true,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 12:09:16 +00:00',\n      '2015-01-15 12:21:53 +00:00',\n      2,\n      2.1,\n      -73.97838593,\n      40.75712967,\n      -73.98999023,\n      40.73477173,\n      10.5,\n      true,\n      'mango mint pineapple juice'\n    ],\n    [\n      '2015-01-15 12:09:16 +00:00',\n      '2015-01-15 12:19:48 +00:00',\n      1,\n      1.4,\n      -73.97607422,\n      40.75993729,\n      -73.96143341,\n      40.77157211,\n      8.5,\n      true,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 12:09:16 +00:00',\n      '2015-01-15 12:14:50 +00:00',\n      1,\n      0.7,\n      -73.99591827,\n      40.75410461,\n      -73.98538208,\n      40.74870682,\n      5.5,\n      true,\n      'apple tree'\n    ],\n    [\n      '2015-01-15 12:09:16 +00:00',\n      '2015-01-15 12:22:32 +00:00',\n      1,\n      2.6,\n      -73.98551941,\n      40.76311111,\n      -73.95552063,\n      40.7767334,\n      11.5,\n      true,\n      'apple tree'\n    ],\n    [\n      '2015-01-15 12:09:16 +00:00',\n      '2015-01-15 12:26:30 +00:00',\n      1,\n      1.5,\n      -74.00605774,\n      40.74533844,\n      -73.9868927,\n      40.75108337,\n      12,\n      false,\n      'mango mint pineapple juice'\n    ],\n    [\n      '2015-01-15 12:09:17 +00:00',\n      '2015-01-15 12:21:25 +00:00',\n      1,\n      1.5,\n      -73.97014618,\n      40.78909683,\n      -73.95428467,\n      40.78998566,\n      9.5,\n      true,\n      'apple tree'\n    ],\n    [\n      '2015-01-15 12:09:18 +00:00',\n      '2015-01-15 12:27:32 +00:00',\n      1,\n      2.9,\n      -73.9768219,\n      40.75079346,\n      -74.00571442,\n      40.7264595,\n      13.5,\n      true,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 12:09:18 +00:00',\n      '2015-01-15 12:34:06 +00:00',\n      1,\n      4.5,\n      -73.94947815,\n      40.78125381,\n      -73.98471832,\n      40.73619461,\n      19,\n      true,\n      'apple tree'\n    ],\n    [\n      '2015-01-15 12:09:19 +00:00',\n      '2015-01-15 12:16:46 +00:00',\n      1,\n      1.2,\n      -73.99941254,\n      40.72211075,\n      -73.99222565,\n      40.73061752,\n      7,\n      true,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 12:09:19 +00:00',\n      '2015-01-15 12:18:59 +00:00',\n      1,\n      1.5,\n      -74.00551605,\n      40.73760223,\n      -74.00695038,\n      40.71791077,\n      8,\n      false,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 12:09:19 +00:00',\n      '2015-01-15 12:09:49 +00:00',\n      1,\n      0,\n      -73.97665405,\n      40.74756622,\n      -73.97657776,\n      40.74789429,\n      52,\n      true,\n      'apple tree'\n    ],\n    [\n      '2015-01-15 12:09:19 +00:00',\n      '2015-01-15 12:19:40 +00:00',\n      1,\n      1,\n      -73.96508026,\n      40.77230072,\n      -73.96895599,\n      40.76291275,\n      8,\n      false,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 12:09:19 +00:00',\n      '2015-01-15 12:21:35 +00:00',\n      1,\n      0.5,\n      -73.97304535,\n      40.75561142,\n      -73.97867584,\n      40.75485992,\n      8.5,\n      false,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 12:09:20 +00:00',\n      '2015-01-15 12:16:18 +00:00',\n      1,\n      0.8,\n      -73.96009827,\n      40.76205063,\n      -73.95944214,\n      40.77100372,\n      6.5,\n      true,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 12:09:20 +00:00',\n      '2015-01-15 12:11:19 +00:00',\n      1,\n      0.3,\n      -73.98959351,\n      40.76280975,\n      -73.99365997,\n      40.75977707,\n      3.5,\n      true,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 12:09:21 +00:00',\n      '2015-01-15 12:26:54 +00:00',\n      1,\n      1.4,\n      -73.98150635,\n      40.74670792,\n      -73.97824097,\n      40.76279449,\n      12,\n      false,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 12:09:21 +00:00',\n      '2015-01-15 12:35:03 +00:00',\n      1,\n      5.5,\n      -74.01249695,\n      40.70261383,\n      -73.98406219,\n      40.76308823,\n      21.5,\n      true,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 13:08:41 +00:00',\n      '2015-01-15 13:26:26 +00:00',\n      1,\n      1.8,\n      -73.99486542,\n      40.72507477,\n      -73.99129486,\n      40.74486542,\n      12.5,\n      true,\n      'mango mint pineapple juice'\n    ],\n    [\n      '2015-01-15 13:08:42 +00:00',\n      '2015-01-15 13:19:14 +00:00',\n      1,\n      1.3,\n      -73.97502136,\n      40.75313187,\n      -73.9878006,\n      40.73916626,\n      8.5,\n      false,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 13:08:43 +00:00',\n      '2015-01-15 13:17:41 +00:00',\n      1,\n      0.6,\n      -73.98260498,\n      40.73439026,\n      -73.97531128,\n      40.74148941,\n      7,\n      true,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 13:08:43 +00:00',\n      '2015-01-15 13:19:05 +00:00',\n      2,\n      1.3,\n      -73.98284912,\n      40.7354126,\n      -73.99924469,\n      40.7266922,\n      8.5,\n      false,\n      'mango mint pineapple juice'\n    ],\n    [\n      '2015-01-15 13:08:43 +00:00',\n      '2015-01-15 13:34:05 +00:00',\n      1,\n      3.6,\n      -73.95719147,\n      40.78299713,\n      -73.99330902,\n      40.74977875,\n      17.5,\n      false,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 13:08:44 +00:00',\n      '2015-01-15 13:14:13 +00:00',\n      1,\n      0.5,\n      -73.98175812,\n      40.75990677,\n      -73.97349548,\n      40.75848007,\n      5,\n      true,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 13:08:44 +00:00',\n      '2015-01-15 13:17:26 +00:00',\n      1,\n      1.1,\n      -73.95582581,\n      40.78220749,\n      -73.95806885,\n      40.76962662,\n      7.5,\n      false,\n      'apple tree'\n    ],\n    [\n      '2015-01-15 13:08:45 +00:00',\n      '2015-01-15 13:19:40 +00:00',\n      1,\n      1.9,\n      -73.96497345,\n      40.75543213,\n      -73.96150208,\n      40.77624893,\n      9,\n      false,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 13:08:45 +00:00',\n      '2015-01-15 13:23:14 +00:00',\n      1,\n      2.4,\n      -73.95355988,\n      40.77692032,\n      -73.98401642,\n      40.77029419,\n      11.5,\n      true,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 13:08:45 +00:00',\n      '2015-01-15 13:17:58 +00:00',\n      1,\n      0.3,\n      -73.97407532,\n      40.76476288,\n      -73.96971893,\n      40.76197052,\n      7,\n      false,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 13:08:46 +00:00',\n      '2015-01-15 13:26:23 +00:00',\n      1,\n      1.4,\n      -73.99007416,\n      40.73517609,\n      -73.99027252,\n      40.74991226,\n      11.5,\n      false,\n      'apple tree'\n    ],\n    [\n      '2015-01-15 13:08:46 +00:00',\n      '2015-01-15 13:13:56 +00:00',\n      1,\n      0.9,\n      -73.96412659,\n      40.79253387,\n      -73.95281982,\n      40.78904343,\n      5.5,\n      false,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 13:08:46 +00:00',\n      '2015-01-15 13:15:29 +00:00',\n      3,\n      1.2,\n      -73.97790527,\n      40.75739288,\n      -73.98935699,\n      40.74221802,\n      7,\n      false,\n      'apple tree'\n    ],\n    [\n      '2015-01-15 13:08:47 +00:00',\n      '2015-01-15 13:26:21 +00:00',\n      1,\n      1.7,\n      -73.98762512,\n      40.74157333,\n      -73.9746933,\n      40.76345444,\n      12,\n      true,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 13:08:47 +00:00',\n      '2015-01-15 13:21:41 +00:00',\n      1,\n      0.6,\n      -73.98404694,\n      40.7493248,\n      -73.98500824,\n      40.75600052,\n      9,\n      true,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 13:08:48 +00:00',\n      '2015-01-15 13:23:10 +00:00',\n      1,\n      1.8,\n      -73.97254944,\n      40.76478958,\n      -73.99060059,\n      40.74874496,\n      10.5,\n      true,\n      'mango mint pineapple juice'\n    ],\n    [\n      '2015-01-15 13:08:49 +00:00',\n      '2015-01-15 13:13:00 +00:00',\n      1,\n      0.9,\n      -73.96455383,\n      40.77020264,\n      -73.95604706,\n      40.78163147,\n      5.5,\n      true,\n      'apple tree'\n    ],\n    [\n      '2015-01-15 13:08:49 +00:00',\n      '2015-01-15 13:23:34 +00:00',\n      1,\n      0.9,\n      -73.98060608,\n      40.73400497,\n      -73.98609924,\n      40.7435112,\n      10,\n      false,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 13:08:49 +00:00',\n      '2015-01-15 13:30:58 +00:00',\n      4,\n      2.5,\n      -73.97557068,\n      40.76527786,\n      -73.94625854,\n      40.7804451,\n      15.5,\n      false,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 13:08:49 +00:00',\n      '2015-01-15 13:13:42 +00:00',\n      1,\n      1.2,\n      -73.96572876,\n      40.79036331,\n      -73.97844696,\n      40.77741241,\n      6.5,\n      true,\n      'apple tree'\n    ],\n    [\n      '2015-01-15 13:08:49 +00:00',\n      '2015-01-15 13:29:01 +00:00',\n      1,\n      1.6,\n      -73.96913147,\n      40.76098633,\n      -73.98926544,\n      40.75290298,\n      13,\n      true,\n      'mango mint pineapple juice'\n    ],\n    [\n      '2015-01-15 13:08:50 +00:00',\n      '2015-01-15 13:32:26 +00:00',\n      2,\n      6.1,\n      -74.01412964,\n      40.71213531,\n      -73.97323608,\n      40.78503036,\n      22,\n      true,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 13:28:31 +00:00',\n      '2015-01-15 13:58:40 +00:00',\n      1,\n      3.1,\n      -73.99403381,\n      40.75093079,\n      -73.99698639,\n      40.71781158,\n      19.5,\n      true,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 13:28:32 +00:00',\n      '2015-01-15 13:44:36 +00:00',\n      1,\n      3.2,\n      -73.94548798,\n      40.77409363,\n      -73.98342133,\n      40.74536514,\n      14.5,\n      true,\n      'mango mint pineapple juice'\n    ],\n    [\n      '2015-01-15 13:28:32 +00:00',\n      '2015-01-15 13:32:56 +00:00',\n      1,\n      0.6,\n      -73.96230316,\n      40.76759338,\n      -73.96643829,\n      40.76444244,\n      5,\n      false,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 13:28:33 +00:00',\n      '2015-01-15 13:32:51 +00:00',\n      1,\n      0.6,\n      -73.96742249,\n      40.7690239,\n      -73.96128082,\n      40.77759552,\n      5,\n      false,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 13:28:33 +00:00',\n      '2015-01-15 13:49:49 +00:00',\n      1,\n      1.1,\n      -73.97927094,\n      40.76162338,\n      -73.97733307,\n      40.75179291,\n      13,\n      false,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 13:28:33 +00:00',\n      '2015-01-15 13:44:36 +00:00',\n      1,\n      1.9,\n      -73.98165131,\n      40.77998734,\n      -73.99479675,\n      40.75537109,\n      11.5,\n      false,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 13:28:34 +00:00',\n      '2015-01-15 13:30:29 +00:00',\n      1,\n      0.4,\n      -73.9751358,\n      40.77751541,\n      -73.98141479,\n      40.77855301,\n      3.5,\n      true,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 13:28:34 +00:00',\n      '2015-01-15 13:46:03 +00:00',\n      1,\n      0.6,\n      -73.9865036,\n      40.75201797,\n      -73.98056793,\n      40.76026917,\n      11,\n      false,\n      'apple tree'\n    ],\n    [\n      '2015-01-15 13:28:34 +00:00',\n      '2015-01-15 13:53:30 +00:00',\n      1,\n      9.1,\n      -73.96624756,\n      40.76560974,\n      -73.87232208,\n      40.77435303,\n      29,\n      true,\n      'apple tree'\n    ],\n    [\n      '2015-01-15 13:28:34 +00:00',\n      '2015-01-15 13:43:58 +00:00',\n      1,\n      1.7,\n      -73.97924042,\n      40.76350784,\n      -73.98809814,\n      40.74477005,\n      11,\n      false,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 13:28:35 +00:00',\n      '2015-01-15 13:55:10 +00:00',\n      1,\n      2.6,\n      -74.00570679,\n      40.74041748,\n      -73.97388458,\n      40.75088882,\n      17,\n      false,\n      'mango mint pineapple juice'\n    ],\n    [\n      '2015-01-15 13:28:35 +00:00',\n      '2015-01-15 13:46:07 +00:00',\n      1,\n      4.9,\n      -74.00881195,\n      40.70446777,\n      -73.98458862,\n      40.74863434,\n      18.5,\n      true,\n      'apple tree'\n    ],\n    [\n      '2015-01-15 13:28:35 +00:00',\n      '2015-01-15 13:42:22 +00:00',\n      1,\n      1.3,\n      -73.99788666,\n      40.74094391,\n      -73.98456573,\n      40.74730682,\n      10,\n      true,\n      'apple tree'\n    ],\n    [\n      '2015-01-15 13:28:36 +00:00',\n      '2015-01-15 13:35:23 +00:00',\n      3,\n      1.1,\n      -73.99003601,\n      40.73796463,\n      -73.99784851,\n      40.72401047,\n      6.5,\n      false,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 14:48:02 +00:00',\n      '2015-01-15 15:02:15 +00:00',\n      1,\n      1.7,\n      -73.96941376,\n      40.76636124,\n      -73.95368958,\n      40.78794479,\n      10.5,\n      false,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 14:48:02 +00:00',\n      '2015-01-15 15:35:10 +00:00',\n      1,\n      18.7,\n      -73.78253937,\n      40.64458466,\n      -73.99058533,\n      40.72745132,\n      52,\n      true,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 14:48:02 +00:00',\n      '2015-01-15 14:58:13 +00:00',\n      1,\n      1.7,\n      -73.97823334,\n      40.7544632,\n      -73.98209381,\n      40.77376556,\n      9,\n      true,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 14:48:02 +00:00',\n      '2015-01-15 16:02:16 +00:00',\n      1,\n      17.9,\n      -73.9863205,\n      40.72613144,\n      -73.78303528,\n      40.64387894,\n      52,\n      false,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 14:48:02 +00:00',\n      '2015-01-15 14:52:03 +00:00',\n      4,\n      0.7,\n      -73.97944641,\n      40.77158737,\n      -73.98216248,\n      40.76358795,\n      4.5,\n      true,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 14:48:03 +00:00',\n      '2015-01-15 14:54:40 +00:00',\n      1,\n      0.7,\n      -73.98408508,\n      40.73751831,\n      -73.9903183,\n      40.73723984,\n      6,\n      true,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 14:48:03 +00:00',\n      '2015-01-15 15:07:23 +00:00',\n      1,\n      2.1,\n      -74.00341034,\n      40.72686768,\n      -73.98469543,\n      40.75408173,\n      13,\n      true,\n      'mango mint pineapple juice'\n    ],\n    [\n      '2015-01-15 14:48:03 +00:00',\n      '2015-01-15 15:28:40 +00:00',\n      2,\n      11.6,\n      -73.77835846,\n      40.64676285,\n      -73.95575714,\n      40.65594101,\n      39,\n      false,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 14:48:03 +00:00',\n      '2015-01-15 14:50:48 +00:00',\n      1,\n      0.7,\n      -73.96367645,\n      40.77734756,\n      -73.97085571,\n      40.78310394,\n      4.5,\n      false,\n      'apple tree'\n    ],\n    [\n      '2015-01-15 14:48:04 +00:00',\n      '2015-01-15 15:12:15 +00:00',\n      2,\n      2.7,\n      -73.96225739,\n      40.77906799,\n      -73.99147034,\n      40.75802994,\n      16,\n      true,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 14:48:04 +00:00',\n      '2015-01-15 14:52:41 +00:00',\n      1,\n      0.6,\n      -73.97543335,\n      40.75215912,\n      -73.96953583,\n      40.75200653,\n      5,\n      false,\n      'mango mint pineapple juice'\n    ],\n    [\n      '2015-01-15 14:48:04 +00:00',\n      '2015-01-15 14:54:52 +00:00',\n      1,\n      0.8,\n      -73.97546387,\n      40.75792694,\n      -73.97644043,\n      40.75066376,\n      6,\n      false,\n      'mango mint pineapple juice'\n    ],\n    [\n      '2015-01-15 14:48:04 +00:00',\n      '2015-01-15 14:54:11 +00:00',\n      1,\n      0.7,\n      -73.98100281,\n      40.75943375,\n      -73.99040222,\n      40.75676727,\n      5.5,\n      false,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 14:48:05 +00:00',\n      '2015-01-15 14:52:33 +00:00',\n      1,\n      0.8,\n      -73.96006012,\n      40.76252747,\n      -73.95191193,\n      40.77336502,\n      5.5,\n      false,\n      'mango mint pineapple juice'\n    ],\n    [\n      '2015-01-15 14:48:05 +00:00',\n      '2015-01-15 15:02:12 +00:00',\n      1,\n      2.6,\n      -73.95397949,\n      40.76646423,\n      -73.98020935,\n      40.77532959,\n      11.5,\n      true,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 14:48:05 +00:00',\n      '2015-01-15 15:17:12 +00:00',\n      1,\n      10.2,\n      -73.87229156,\n      40.77449799,\n      -73.9723587,\n      40.76523972,\n      32.5,\n      false,\n      'apple tree'\n    ],\n    [\n      '2015-01-15 14:48:06 +00:00',\n      '2015-01-15 14:58:55 +00:00',\n      1,\n      1.3,\n      -73.99183655,\n      40.7434082,\n      -73.97814178,\n      40.75121689,\n      8.5,\n      false,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 14:48:06 +00:00',\n      '2015-01-15 15:03:19 +00:00',\n      1,\n      2,\n      -73.99678802,\n      40.76287842,\n      -73.98536682,\n      40.7436142,\n      11.5,\n      false,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 14:48:06 +00:00',\n      '2015-01-15 14:56:09 +00:00',\n      1,\n      0.8,\n      -73.97661591,\n      40.78069687,\n      -73.98725128,\n      40.77615738,\n      6.5,\n      false,\n      'apple tree'\n    ],\n    [\n      '2015-01-15 13:28:37 +00:00',\n      '2015-01-15 13:39:20 +00:00',\n      1,\n      1.3,\n      -73.96536255,\n      40.76590729,\n      -73.95040131,\n      40.77541351,\n      8.5,\n      false,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 13:28:37 +00:00',\n      '2015-01-15 13:37:49 +00:00',\n      1,\n      2.9,\n      -73.95761871,\n      40.76847076,\n      -73.97514343,\n      40.73571014,\n      11.5,\n      false,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 13:28:37 +00:00',\n      '2015-01-15 13:52:56 +00:00',\n      2,\n      2.4,\n      -73.99796295,\n      40.75651932,\n      -73.9693985,\n      40.76195526,\n      16,\n      true,\n      'apple tree'\n    ],\n    [\n      '2015-01-15 13:28:37 +00:00',\n      '2015-01-15 13:57:15 +00:00',\n      1,\n      3.3,\n      -74.01082611,\n      40.70900726,\n      -73.98595428,\n      40.75083542,\n      19,\n      true,\n      'mango mint pineapple juice'\n    ],\n    [\n      '2015-01-15 13:28:37 +00:00',\n      '2015-01-15 13:33:57 +00:00',\n      1,\n      0.5,\n      -73.97025299,\n      40.75899887,\n      -73.97548676,\n      40.75217438,\n      5,\n      false,\n      'mango mint pineapple juice'\n    ],\n    [\n      '2015-01-15 13:28:38 +00:00',\n      '2015-01-15 14:13:39 +00:00',\n      1,\n      10.4,\n      -73.98912048,\n      40.75639343,\n      -73.87306213,\n      40.77438354,\n      38.5,\n      false,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 11:08:27 +00:00',\n      '2015-01-15 11:13:04 +00:00',\n      1,\n      0.57,\n      -73.99191284,\n      40.73366165,\n      -73.99928284,\n      40.73590088,\n      5,\n      true,\n      'apple tree'\n    ],\n    [\n      '2015-01-15 11:08:27 +00:00',\n      '2015-01-15 11:17:22 +00:00',\n      5,\n      1.36,\n      -73.97545624,\n      40.78210831,\n      -73.98251343,\n      40.76395035,\n      8,\n      false,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 15:47:38 +00:00',\n      '2015-01-15 16:13:56 +00:00',\n      2,\n      3.4,\n      -73.98490143,\n      40.76909256,\n      -73.95078278,\n      40.78242874,\n      18.5,\n      false,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 15:47:38 +00:00',\n      '2015-01-15 16:11:28 +00:00',\n      1,\n      4.9,\n      -73.98446655,\n      40.75934601,\n      -73.94443512,\n      40.8130722,\n      19.5,\n      false,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 15:47:38 +00:00',\n      '2015-01-15 15:56:08 +00:00',\n      1,\n      1.1,\n      -73.95365906,\n      40.76678848,\n      -73.9686203,\n      40.76480484,\n      7.5,\n      false,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 15:47:39 +00:00',\n      '2015-01-15 16:01:53 +00:00',\n      4,\n      1.6,\n      -74.00598907,\n      40.74010849,\n      -74.00376129,\n      40.7591362,\n      10.5,\n      false,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 15:47:39 +00:00',\n      '2015-01-15 16:06:25 +00:00',\n      1,\n      2.5,\n      -73.98991394,\n      40.7408638,\n      -73.96156311,\n      40.75641632,\n      13.5,\n      true,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 15:47:40 +00:00',\n      '2015-01-15 15:54:36 +00:00',\n      1,\n      0.6,\n      -73.9804306,\n      40.76034927,\n      -73.97067261,\n      40.75859451,\n      6,\n      false,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 15:47:40 +00:00',\n      '2015-01-15 15:57:34 +00:00',\n      1,\n      1.2,\n      -73.98097992,\n      40.73818588,\n      -73.98110962,\n      40.75061417,\n      8,\n      true,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 15:47:40 +00:00',\n      '2015-01-15 15:56:19 +00:00',\n      1,\n      1.4,\n      -73.98873138,\n      40.75407028,\n      -74.00460052,\n      40.73969269,\n      7.5,\n      true,\n      'apple tree'\n    ],\n    [\n      '2015-01-15 15:47:41 +00:00',\n      '2015-01-15 16:00:53 +00:00',\n      1,\n      1.4,\n      -73.9916153,\n      40.75009918,\n      -73.99889374,\n      40.7610817,\n      9.5,\n      false,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 15:47:41 +00:00',\n      '2015-01-15 15:57:32 +00:00',\n      1,\n      1.3,\n      -73.9928894,\n      40.75384521,\n      -73.97768402,\n      40.76447296,\n      8,\n      true,\n      'mango mint pineapple juice'\n    ],\n    [\n      '2015-01-15 15:47:41 +00:00',\n      '2015-01-15 16:02:12 +00:00',\n      2,\n      2.1,\n      -73.987854,\n      40.75493622,\n      -73.99325562,\n      40.73668671,\n      11,\n      true,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 15:47:41 +00:00',\n      '2015-01-15 17:08:39 +00:00',\n      1,\n      8.8,\n      -73.98908997,\n      40.75322723,\n      -73.8707962,\n      40.77392578,\n      50,\n      false,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 15:47:41 +00:00',\n      '2015-01-15 15:54:06 +00:00',\n      1,\n      1.5,\n      -73.98497009,\n      40.76370239,\n      -73.97200775,\n      40.78221512,\n      7,\n      true,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 15:47:42 +00:00',\n      '2015-01-15 16:17:48 +00:00',\n      1,\n      9.2,\n      -73.8709259,\n      40.77367401,\n      -73.95968628,\n      40.7660408,\n      31.5,\n      false,\n      'mango mint pineapple juice'\n    ],\n    [\n      '2015-01-15 15:47:42 +00:00',\n      '2015-01-15 15:53:42 +00:00',\n      2,\n      0.7,\n      -73.95475006,\n      40.77365875,\n      -73.96230316,\n      40.77204895,\n      5.5,\n      true,\n      'apple tree'\n    ],\n    [\n      '2015-01-15 15:47:42 +00:00',\n      '2015-01-15 15:52:40 +00:00',\n      1,\n      0.6,\n      -73.96900177,\n      40.76102829,\n      -73.97166443,\n      40.75520325,\n      5,\n      false,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 15:47:43 +00:00',\n      '2015-01-15 16:02:21 +00:00',\n      1,\n      2,\n      -73.98990631,\n      40.77584076,\n      -73.97659302,\n      40.7581749,\n      11,\n      false,\n      'mango mint pineapple juice'\n    ],\n    [\n      '2015-01-15 15:47:43 +00:00',\n      '2015-01-15 17:12:21 +00:00',\n      1,\n      17.2,\n      -73.97954559,\n      40.74938965,\n      -73.77823639,\n      40.64494324,\n      52,\n      false,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 15:47:43 +00:00',\n      '2015-01-15 15:52:40 +00:00',\n      1,\n      0.7,\n      -73.96670532,\n      40.80432129,\n      -73.97161102,\n      40.79508209,\n      5.5,\n      false,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 15:47:43 +00:00',\n      '2015-01-15 16:01:34 +00:00',\n      1,\n      1.6,\n      -73.97691345,\n      40.75243378,\n      -73.9618454,\n      40.76618576,\n      10.5,\n      true,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 15:47:43 +00:00',\n      '2015-01-15 16:05:15 +00:00',\n      1,\n      5.6,\n      -73.97419739,\n      40.75210953,\n      -74.01583099,\n      40.70493317,\n      19,\n      false,\n      'mango mint pineapple juice'\n    ],\n    [\n      '2015-01-15 15:47:44 +00:00',\n      '2015-01-15 15:51:25 +00:00',\n      3,\n      0.6,\n      -73.98048401,\n      40.73053741,\n      -73.99012756,\n      40.73469543,\n      4.5,\n      true,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 11:08:28 +00:00',\n      '2015-01-15 11:22:08 +00:00',\n      5,\n      1.02,\n      -73.96199036,\n      40.76301956,\n      -73.97537231,\n      40.76025009,\n      9.5,\n      true,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 11:08:28 +00:00',\n      '2015-01-15 11:12:03 +00:00',\n      2,\n      0.71,\n      -73.96024323,\n      40.81326675,\n      -73.96228027,\n      40.80551529,\n      5,\n      false,\n      'mango mint pineapple juice'\n    ],\n    [\n      '2015-01-15 11:08:28 +00:00',\n      '2015-01-15 11:45:14 +00:00',\n      4,\n      3.29,\n      -73.99386597,\n      40.72647858,\n      -73.97525024,\n      40.76517868,\n      22.5,\n      true,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 11:08:28 +00:00',\n      '2015-01-15 11:16:27 +00:00',\n      6,\n      1.69,\n      -73.97033691,\n      40.76505661,\n      -73.95837402,\n      40.78314972,\n      7.5,\n      false,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 11:08:29 +00:00',\n      '2015-01-15 11:31:28 +00:00',\n      1,\n      3.45,\n      -73.97387695,\n      40.76417923,\n      -73.99996185,\n      40.72422028,\n      16.5,\n      false,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 11:08:29 +00:00',\n      '2015-01-15 11:19:43 +00:00',\n      1,\n      1.91,\n      -73.98752594,\n      40.7325058,\n      -74.00524902,\n      40.71485138,\n      9.5,\n      false,\n      'apple tree'\n    ],\n    [\n      '2015-01-15 11:08:30 +00:00',\n      '2015-01-15 11:20:15 +00:00',\n      1,\n      1.71,\n      -73.99472046,\n      40.75059509,\n      -73.97688293,\n      40.76406479,\n      9.5,\n      false,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 11:08:30 +00:00',\n      '2015-01-15 11:23:16 +00:00',\n      1,\n      1.92,\n      -73.97637177,\n      40.76343155,\n      -73.99304962,\n      40.74539948,\n      11,\n      false,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 11:08:30 +00:00',\n      '2015-01-15 11:10:32 +00:00',\n      5,\n      0.27,\n      -73.95477295,\n      40.76545715,\n      -73.95536804,\n      40.76841354,\n      3.5,\n      false,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 11:08:30 +00:00',\n      '2015-01-15 11:22:21 +00:00',\n      1,\n      1.44,\n      -73.95503235,\n      40.77841568,\n      -73.97670746,\n      40.78928375,\n      10,\n      true,\n      'mango mint pineapple juice'\n    ],\n    [\n      '2015-01-15 11:08:31 +00:00',\n      '2015-01-15 11:17:10 +00:00',\n      1,\n      2.17,\n      -73.95035553,\n      40.77127838,\n      -73.96971893,\n      40.75237656,\n      9,\n      true,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 11:08:31 +00:00',\n      '2015-01-15 11:22:19 +00:00',\n      1,\n      2.13,\n      -73.95650482,\n      40.77070236,\n      -73.9798584,\n      40.75445557,\n      10.5,\n      true,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 11:08:31 +00:00',\n      '2015-01-15 12:07:41 +00:00',\n      1,\n      18.23,\n      -73.78193665,\n      40.64471054,\n      -73.99067688,\n      40.72071075,\n      52,\n      true,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 11:08:31 +00:00',\n      '2015-01-15 11:24:35 +00:00',\n      1,\n      1.01,\n      -73.97892761,\n      40.75037766,\n      -73.99127197,\n      40.75544739,\n      10.5,\n      true,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 11:08:31 +00:00',\n      '2015-01-15 11:14:02 +00:00',\n      5,\n      0.88,\n      -73.9934845,\n      40.73516464,\n      -73.99437714,\n      40.74361038,\n      5.5,\n      false,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 11:08:33 +00:00',\n      '2015-01-15 11:16:14 +00:00',\n      5,\n      1.51,\n      -73.97502899,\n      40.76099014,\n      -73.98868561,\n      40.74270248,\n      7.5,\n      true,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 11:08:33 +00:00',\n      '2015-01-15 11:52:22 +00:00',\n      1,\n      8.14,\n      -73.95440674,\n      40.76395798,\n      -73.8562851,\n      40.75259018,\n      33.5,\n      false,\n      'apple tree'\n    ],\n    [\n      '2015-01-15 11:08:33 +00:00',\n      '2015-01-15 11:48:04 +00:00',\n      5,\n      15.13,\n      -73.95636749,\n      40.78319931,\n      -73.98403931,\n      40.63248825,\n      46,\n      true,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 11:08:34 +00:00',\n      '2015-01-15 11:30:55 +00:00',\n      1,\n      2.47,\n      -74.00182343,\n      40.75087738,\n      -73.9638443,\n      40.77070618,\n      15.5,\n      true,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 11:08:34 +00:00',\n      '2015-01-15 11:15:45 +00:00',\n      1,\n      1.27,\n      -73.97843933,\n      40.74962616,\n      -73.99088287,\n      40.73462677,\n      7,\n      false,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 14:19:58 +00:00',\n      '2015-01-15 14:30:43 +00:00',\n      3,\n      1.9,\n      -73.9719696,\n      40.78208542,\n      -73.9462738,\n      40.78117752,\n      9.5,\n      true,\n      'mango mint pineapple juice'\n    ],\n    [\n      '2015-01-15 14:19:59 +00:00',\n      '2015-01-15 14:26:18 +00:00',\n      1,\n      1.4,\n      -73.96221161,\n      40.75906372,\n      -73.95623016,\n      40.77560425,\n      6.5,\n      false,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 14:20:00 +00:00',\n      '2015-01-15 14:29:24 +00:00',\n      1,\n      1,\n      -73.98879242,\n      40.74028015,\n      -73.99024963,\n      40.72889328,\n      7.5,\n      true,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 14:20:00 +00:00',\n      '2015-01-15 14:24:37 +00:00',\n      1,\n      0.7,\n      -73.96638489,\n      40.80471039,\n      -73.97330475,\n      40.79518509,\n      5,\n      false,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 14:20:00 +00:00',\n      '2015-01-15 14:25:07 +00:00',\n      1,\n      0.6,\n      -73.98246765,\n      40.77352142,\n      -73.9892807,\n      40.76781464,\n      5.5,\n      false,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 14:20:00 +00:00',\n      '2015-01-15 15:08:06 +00:00',\n      1,\n      20.8,\n      -73.97194672,\n      40.75946808,\n      -73.78960419,\n      40.64704132,\n      52,\n      true,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 14:20:01 +00:00',\n      '2015-01-15 14:30:10 +00:00',\n      1,\n      1.5,\n      -73.97073364,\n      40.76262283,\n      -73.95559692,\n      40.7793045,\n      8.5,\n      false,\n      'mango mint pineapple juice'\n    ],\n    [\n      '2015-01-15 14:20:02 +00:00',\n      '2015-01-15 14:44:57 +00:00',\n      1,\n      4.9,\n      -73.95665741,\n      40.76708221,\n      -73.96069336,\n      40.81632614,\n      20.5,\n      false,\n      'mango mint pineapple juice'\n    ],\n    [\n      '2015-01-15 14:20:02 +00:00',\n      '2015-01-15 14:25:28 +00:00',\n      1,\n      1.5,\n      -73.97408295,\n      40.77892685,\n      -73.95641327,\n      40.7840538,\n      6.5,\n      true,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 14:20:02 +00:00',\n      '2015-01-15 15:05:17 +00:00',\n      1,\n      16.2,\n      -73.97773743,\n      40.76435471,\n      -73.79027557,\n      40.64681244,\n      52,\n      true,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 14:20:04 +00:00',\n      '2015-01-15 14:30:20 +00:00',\n      1,\n      0.9,\n      -73.96961975,\n      40.75938034,\n      -73.9821701,\n      40.76047134,\n      7.5,\n      true,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 14:20:06 +00:00',\n      '2015-01-15 14:23:11 +00:00',\n      1,\n      0.2,\n      -73.97293091,\n      40.79558563,\n      -73.97042847,\n      40.79651642,\n      4,\n      true,\n      'apple tree'\n    ],\n    [\n      '2015-01-15 14:20:06 +00:00',\n      '2015-01-15 14:25:16 +00:00',\n      1,\n      0.7,\n      -73.74542999,\n      40.58639145,\n      -73.74523926,\n      40.58619308,\n      5.5,\n      false,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 14:20:06 +00:00',\n      '2015-01-15 14:25:32 +00:00',\n      1,\n      0.7,\n      -73.98985291,\n      40.73440552,\n      -73.99806976,\n      40.73797989,\n      5.5,\n      true,\n      'apple tree'\n    ],\n    [\n      '2015-01-15 14:20:07 +00:00',\n      '2015-01-15 14:31:34 +00:00',\n      1,\n      1.2,\n      -73.96231842,\n      40.77913666,\n      -73.9730835,\n      40.76346207,\n      9,\n      true,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 14:20:08 +00:00',\n      '2015-01-15 14:43:34 +00:00',\n      1,\n      4.3,\n      -73.97229004,\n      40.74654388,\n      -74.00812531,\n      40.71973419,\n      19,\n      true,\n      'apple tree'\n    ],\n    [\n      '2015-01-15 14:20:08 +00:00',\n      '2015-01-15 14:23:44 +00:00',\n      1,\n      0.9,\n      -74.00809479,\n      40.73937225,\n      -74.00430298,\n      40.72974777,\n      5,\n      true,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 11:09:27 +00:00',\n      '2015-01-15 11:18:50 +00:00',\n      2,\n      0.82,\n      -73.98420715,\n      40.74626923,\n      -73.97663116,\n      40.75596619,\n      7,\n      true,\n      'apple tree'\n    ],\n    [\n      '2015-01-15 11:09:28 +00:00',\n      '2015-01-15 11:21:16 +00:00',\n      5,\n      1.48,\n      -73.9804306,\n      40.74560547,\n      -73.98104858,\n      40.72947693,\n      9,\n      true,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 11:09:28 +00:00',\n      '2015-01-15 11:17:09 +00:00',\n      1,\n      0.85,\n      -73.98188782,\n      40.74059677,\n      -73.98110199,\n      40.74951172,\n      6.5,\n      true,\n      'apple tree'\n    ],\n    [\n      '2015-01-15 11:09:28 +00:00',\n      '2015-01-15 11:12:01 +00:00',\n      1,\n      0.39,\n      -73.96213531,\n      40.76808167,\n      -73.96128845,\n      40.76436234,\n      3.5,\n      false,\n      'banana peel'\n    ],\n    [\n      '2015-01-15 11:09:28 +00:00',\n      '2015-01-15 11:16:34 +00:00',\n      4,\n      1.08,\n      -73.98171997,\n      40.75831985,\n      -73.96775055,\n      40.76005936,\n      6.5,\n      false,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 11:09:32 +00:00',\n      '2015-01-15 11:45:33 +00:00',\n      1,\n      4.35,\n      -73.92948914,\n      40.75658035,\n      -73.99256134,\n      40.75829315,\n      23,\n      false,\n      'orange peel'\n    ],\n    [\n      '2015-01-15 11:09:32 +00:00',\n      '2015-01-15 11:27:44 +00:00',\n      1,\n      0.87,\n      -73.97641754,\n      40.74801636,\n      -73.97517395,\n      40.74153519,\n      11.5,\n      true,\n      'apple tree'\n    ],\n    [\n      '2015-01-15 11:09:32 +00:00',\n      '2015-01-15 11:16:36 +00:00',\n      1,\n      0.96,\n      -73.96311951,\n      40.76504517,\n      -73.95355225,\n      40.77010727,\n      6.5,\n      false,\n      'mango mint pineapple juice'\n    ],\n    [\n      '2015-01-15 11:09:34 +00:00',\n      '2015-01-15 11:28:22 +00:00',\n      1,\n      1.2,\n      -73.99105835,\n      40.74952698,\n      -73.97509003,\n      40.74176025,\n      12,\n      false,\n      'mango mint pineapple juice'\n    ],\n    [\n      '2015-01-15 11:09:34 +00:00',\n      '2015-01-15 11:39:55 +00:00',\n      1,\n      7.47,\n      -74.01488495,\n      40.71375275,\n      -73.97367859,\n      40.76446533,\n      28,\n      true,\n      'orange peel'\n    ]\n  ]\n};\n\nexport const sampleTripDataConfig = {\n  version: 'v1',\n  config: {\n    visState: {\n      layers: [\n        {\n          type: 'heatmap',\n          config: {\n            dataId: 'test_trip_data',\n            columns: {\n              lat: 'pickup_latitude',\n              lng: 'pickup_longitude'\n            },\n            isVisible: true\n          }\n        },\n        {\n          type: 'point',\n          config: {\n            dataId: 'test_trip_data',\n            columns: {\n              lat: 'pickup_latitude',\n              lng: 'pickup_longitude'\n            },\n            color: [255, 0, 0],\n            label: 'pickup',\n            isVisible: true,\n            visConfig: {\n              colorRange: {\n                colorMap: [\n                  ['apple tree', '#FF000'],\n                  ['banana peel', '#00FF00'],\n                  ['banana peel 2', '#0000FF'],\n                  ['mango mint pineapple juice', '#555555'],\n                  ['orange peel', '#111111'],\n                  ['orange peel 0', '#222222']\n                ]\n              }\n            }\n          },\n          visualChannels: {\n            colorField: {\n              name: 'fare_type',\n              type: 'string'\n            }\n          }\n        },\n        {\n          type: 'point',\n          config: {\n            dataId: 'test_trip_data',\n            columns: {\n              lat: 'dropoff_latitude',\n              lng: 'dropoff_longitude'\n            },\n            color: [0, 0, 255],\n            label: 'dropoff',\n            isVisible: true\n          }\n        },\n        {\n          type: 'cluster',\n          config: {\n            dataId: 'test_trip_data',\n            columns: {\n              lat: 'pickup_latitude',\n              lng: 'pickup_longitude'\n            },\n            isVisible: true\n          }\n        },\n        {\n          type: 'arc',\n          config: {\n            dataId: 'test_trip_data',\n            label: 'pickup -> dropoff',\n            columns: {\n              lat0: 'pickup_latitude',\n              lng0: 'pickup_longitude',\n              lat1: 'dropoff_latitude',\n              lng1: 'dropoff_longitude'\n            },\n            color: [255, 0, 0],\n            isVisible: true,\n            visConfig: {\n              targetColor: [0, 0, 255]\n            }\n          }\n        }\n      ],\n      filters: [\n        {\n          dataId: 'test_trip_data',\n          name: 'tpep_pickup_datetime',\n          enlarged: true\n        },\n        {\n          dataId: 'test_trip_data',\n          name: 'passenger_count'\n        },\n        {\n          dataId: 'test_trip_data',\n          name: 'fare_type',\n          value: ['orange peel', 'apple tree']\n        },\n        {\n          dataId: 'test_trip_data',\n          name: 'is_completed',\n          value: true\n        }\n      ]\n    },\n    mapStyle: {\n      styleType: '41fv96u',\n      visibleLayerGroups: {\n        label: false,\n        road: false,\n        border: false,\n        building: true,\n        water: true,\n        land: true,\n        '3d building': false\n      },\n      mapStyles: {\n        '41fv96u': {\n          accessToken: null,\n          custom: true,\n          icon:\n            'https://api.mapbox.com/styles/v1/MAPBOX_USER/cjg0ks54x300a2squ8fr9vhvq/static/-122.3391,37.7922,9,0,0/400x300?access_token=ACCESS_TOKEN&logo=false&attribution=false',\n          id: '41fv96u',\n          label: 'Outdoors',\n          url: 'mapbox://styles/MAPBOX_USER/cjhnxdcfy4ug62sn6qdfjutob'\n        }\n      }\n    }\n  }\n};\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nexport default {\n  type: 'FeatureCollection',\n  features: [\n    {\n      type: 'Feature',\n      properties: {OBJECTID: 1, ZIP_CODE: 94107, ID: 94107},\n      geometry: {\n        type: 'Polygon',\n        coordinates: [\n          [\n            [-122.401159718585049, 37.782024266952142],\n            [-122.400374366843309, 37.782644515545172],\n            [-122.400019020063766, 37.782925153640136],\n            [-122.399891477967842, 37.783025880124256],\n            [-122.398930331092998, 37.783784933304034],\n            [-122.397811613142864, 37.784666586003652],\n            [-122.396705177550587, 37.785542130425938],\n            [-122.395895701657864, 37.784896929203114],\n            [-122.395160622349934, 37.78431101230386],\n            [-122.394398389309941, 37.783701667981575],\n            [-122.39343711789931, 37.784459123881106],\n            [-122.39286959393705, 37.78478280203197],\n            [-122.39285700396303, 37.784773072758867],\n            [-122.392216553530702, 37.784278123341721],\n            [-122.392215026316663, 37.784279352365694],\n            [-122.392118766536498, 37.784205306785267],\n            [-122.392032919786118, 37.784168354830349],\n            [-122.391600764141245, 37.783823989838545],\n            [-122.391599105853345, 37.783822668268179],\n            [-122.390856721023212, 37.784410569188324],\n            [-122.389846392025618, 37.783609176617361],\n            [-122.389843136047602, 37.783611740842574],\n            [-122.388306939892615, 37.782385221520776],\n            [-122.388304301898813, 37.782356717503951],\n            [-122.388231340039766, 37.782146697467269],\n            [-122.388106738902522, 37.781931906493995],\n            [-122.388094863959623, 37.781887241816527],\n            [-122.387765464889313, 37.78194244138043],\n            [-122.387754811744713, 37.781795652877442],\n            [-122.385560654233757, 37.781935833609538],\n            [-122.385544999019174, 37.781932650370386],\n            [-122.38553439339303, 37.781923892586839],\n            [-122.385511671392734, 37.781778670688965],\n            [-122.384922372713746, 37.781810068903333],\n            [-122.384901998602373, 37.781825502544642],\n            [-122.384858074907243, 37.781799422577222],\n            [-122.384893494062709, 37.781763146995921],\n            [-122.38491634743859, 37.781777202531266],\n            [-122.38550727073536, 37.781741658296774],\n            [-122.385491676395333, 37.781604563077408],\n            [-122.385493075388183, 37.781591492690396],\n            [-122.38550321006835, 37.781581716485675],\n            [-122.385518655734231, 37.781576662678262],\n            [-122.38762837564704, 37.781450881969413],\n            [-122.387583140105036, 37.780964719298666],\n            [-122.387467577483136, 37.780979617487112],\n            [-122.387479366190874, 37.781103038700273],\n            [-122.387462086323822, 37.781104002067416],\n            [-122.387450297298699, 37.780980580858106],\n            [-122.387337984465276, 37.780987185935416],\n            [-122.387348026094102, 37.781109948402708],\n            [-122.387330746223768, 37.781110911750616],\n            [-122.387320704623349, 37.780988149281868],\n            [-122.387206644553231, 37.780994095205941],\n            [-122.387216703416328, 37.781117544403045],\n            [-122.387199423542512, 37.781118507731705],\n            [-122.387189364714985, 37.780995058807726],\n            [-122.387068420460224, 37.78100248851576],\n            [-122.387080191758074, 37.781125223313062],\n            [-122.387062911534741, 37.78112618662724],\n            [-122.387051140611234, 37.78100345182272],\n            [-122.386937097943829, 37.781010084204837],\n            [-122.386948869025886, 37.781132819015049],\n            [-122.386931588799087, 37.78113378231],\n            [-122.386919818091386, 37.781011047492527],\n            [-122.386812677010425, 37.7810168822962],\n            [-122.386824465334769, 37.781140303837503],\n            [-122.386807185104601, 37.781141267114201],\n            [-122.386795397161777, 37.781017845840225],\n            [-122.386676165495402, 37.781024560738594],\n            [-122.386687953248156, 37.781147982298883],\n            [-122.386670672668515, 37.781148945561135],\n            [-122.386658885297223, 37.781025524268173],\n            [-122.386543112789369, 37.781032183675542],\n            [-122.386554900668202, 37.781155605243434],\n            [-122.386537620431014, 37.781156568480647],\n            [-122.386525832933643, 37.781033147180089],\n            [-122.386411790166775, 37.781039778779515],\n            [-122.386423577828609, 37.781163200360375],\n            [-122.386406297587911, 37.781164163578339],\n            [-122.386394510307582, 37.7810407422648],\n            [-122.386282162758775, 37.781045973167615],\n            [-122.386293984730017, 37.781170767655468],\n            [-122.386276704139945, 37.78117173085996],\n            [-122.386264917419695, 37.781048309528096],\n            [-122.386147415421732, 37.781054996216575],\n            [-122.386159201954754, 37.781178417834589],\n            [-122.386141922053085, 37.781179381008279],\n            [-122.386130135209612, 37.78105595966862],\n            [-122.386019552249252, 37.781062535536719],\n            [-122.386031321484509, 37.781185270717479],\n            [-122.386014040887659, 37.781186233883489],\n            [-122.386002272033735, 37.781063498970049],\n            [-122.385879580345062, 37.78107026841095],\n            [-122.385891367127385, 37.781193690044354],\n            [-122.385874086872718, 37.781194653184308],\n            [-122.385862300471871, 37.781071231818238],\n            [-122.385755176650932, 37.781077752105325],\n            [-122.385766945797698, 37.781200487306606],\n            [-122.385749665539848, 37.78120145042832],\n            [-122.385737896774387, 37.781078715494381],\n            [-122.385622107018349, 37.781084687547477],\n            [-122.385633892683231, 37.781208109217374],\n            [-122.385616612767805, 37.781209072314041],\n            [-122.385604844221021, 37.781086337366979],\n            [-122.385487342103474, 37.781093023397624],\n            [-122.385499110464124, 37.781215758630843],\n            [-122.38548182985329, 37.781216721718849],\n            [-122.385470061873946, 37.781093986752957],\n            [-122.385352559732169, 37.781100672649266],\n            [-122.38536432752538, 37.781223407901315],\n            [-122.385347047602892, 37.781224370958491],\n            [-122.385335279499117, 37.781101635984861],\n            [-122.385219507099919, 37.781108294087041],\n            [-122.385231275020445, 37.781231029346657],\n            [-122.385213994748526, 37.781231992389863],\n            [-122.385202226517421, 37.781109257408659],\n            [-122.385086454440369, 37.781115915374649],\n            [-122.385098222142247, 37.781238650647374],\n            [-122.385080941520883, 37.781239613676604],\n            [-122.385069174200339, 37.781116878671227],\n            [-122.38495511409829, 37.781122822411653],\n            [-122.384966899006869, 37.781246244141819],\n            [-122.384949618382038, 37.781247207151821],\n            [-122.384937851277286, 37.781124472133506],\n            [-122.384823791153082, 37.781130415746894],\n            [-122.384835575844662, 37.781253837490027],\n            [-122.384818295216348, 37.781254800480774],\n            [-122.384792264836477, 37.780979154238715],\n            [-122.384809545055035, 37.780978191257269],\n            [-122.384831743135436, 37.781102819695278],\n            [-122.384925045670656, 37.781097207947639],\n            [-122.384923587517477, 37.780971560938383],\n            [-122.384940867732567, 37.780970597937682],\n            [-122.384963066031062, 37.781095226351141],\n            [-122.385056368546813, 37.781089614499592],\n            [-122.385054910171618, 37.780963967491779],\n            [-122.385072190383269, 37.780963004471836],\n            [-122.385094388899816, 37.781087632860746],\n            [-122.385189421508272, 37.781081993240349],\n            [-122.385187962562227, 37.780956346239556],\n            [-122.385205242424405, 37.780955383205644],\n            [-122.38522744150788, 37.781080011564157],\n            [-122.385322474096498, 37.781074371836517],\n            [-122.385321014925523, 37.780948724837195],\n            [-122.385338295130154, 37.780947761778229],\n            [-122.385360493742681, 37.78107239012293],\n            [-122.385457256077231, 37.781066722624757],\n            [-122.385455797024363, 37.780941075621371],\n            [-122.38547307722547, 37.78094011254268],\n            [-122.385495276407823, 37.781064740856642],\n            [-122.385592038722095, 37.781059073247853],\n            [-122.385590579095435, 37.780933426251508],\n            [-122.385607859293003, 37.780932463153057],\n            [-122.385630058353271, 37.781057091447337],\n            [-122.38572509122794, 37.781051451389651],\n            [-122.385723631030388, 37.780925804400319],\n            [-122.385740911570423, 37.780924841276843],\n            [-122.385763111197619, 37.781049469540704],\n            [-122.385849512311808, 37.781044654171389],\n            [-122.385848051896943, 37.78091900690886],\n            [-122.385865332440758, 37.780918044041726],\n            [-122.385887514843574, 37.781041985837916],\n            [-122.385989466046908, 37.781036234899503],\n            [-122.385988006094351, 37.780910587902042],\n            [-122.386005286281474, 37.780909624745334],\n            [-122.386027486347686, 37.781034252959756],\n            [-122.38611734695634, 37.781029382050761],\n            [-122.386115886434652, 37.78090373478566],\n            [-122.386133166625513, 37.780902771884811],\n            [-122.386155349124707, 37.781026713636507],\n            [-122.386250399355106, 37.78102175959976],\n            [-122.386248938262554, 37.780896112341686],\n            [-122.386266218795839, 37.780895149415798],\n            [-122.386288401860739, 37.781019091137082],\n            [-122.386381721962337, 37.781014164675518],\n            [-122.386380260647812, 37.780888517418902],\n            [-122.386397541177601, 37.780887554473743],\n            [-122.386419741895395, 37.781012182614816],\n            [-122.386513044542724, 37.781006569605005],\n            [-122.386511583006197, 37.780880922349844],\n            [-122.386528863532533, 37.780879959385452],\n            [-122.386551064468406, 37.781004587501954],\n            [-122.386646096514042, 37.780998946712984],\n            [-122.386644635444497, 37.780873299448245],\n            [-122.386661915621403, 37.780872336469891],\n            [-122.386684116778227, 37.780996964561524],\n            [-122.386782608677009, 37.780991268294322],\n            [-122.386781146684797, 37.780865621042153],\n            [-122.386798427204084, 37.780864658038261],\n            [-122.386820628587657, 37.780989286104372],\n            [-122.386907012122748, 37.780983783515829],\n            [-122.386905549920243, 37.780858136265046],\n            [-122.386922830436163, 37.780857173242921],\n            [-122.386945032026247, 37.780981801285769],\n            [-122.387038334595715, 37.780976187860247],\n            [-122.387036872171194, 37.780850540610921],\n            [-122.387054152683675, 37.780849577569541],\n            [-122.387076354491839, 37.780974205587825],\n            [-122.387174846330339, 37.780968508992949],\n            [-122.387173384021025, 37.7808428617396],\n            [-122.387190664183962, 37.780841898683754],\n            [-122.387212865872911, 37.78096652668205],\n            [-122.387306168748907, 37.78096091303906],\n            [-122.387304706217577, 37.780835265787175],\n            [-122.387321986377088, 37.780834302712059],\n            [-122.387344188284104, 37.780958930685784],\n            [-122.387435761378228, 37.780953344631229],\n            [-122.387434316073197, 37.780828383824961],\n            [-122.387451578437933, 37.780826734292219],\n            [-122.387473781252041, 37.780951362230645],\n            [-122.387582651602727, 37.780945499137275],\n            [-122.38754001837809, 37.780493630652451],\n            [-122.38744131821305, 37.780491090765793],\n            [-122.387419058221624, 37.780500374265543],\n            [-122.387330736209734, 37.780497667864211],\n            [-122.387308476209526, 37.780506951617653],\n            [-122.387208063026961, 37.780505125406954],\n            [-122.387184073602839, 37.780514436820333],\n            [-122.387081931006932, 37.780512638185321],\n            [-122.387059670971126, 37.780521921891747],\n            [-122.386964429936867, 37.780519325963184],\n            [-122.386942169884378, 37.780528609647433],\n            [-122.386852118103619, 37.780525930572708],\n            [-122.386829875474817, 37.780535900680007],\n            [-122.386736346744712, 37.780532590439464],\n            [-122.386712374345294, 37.780542588206671],\n            [-122.386618863049748, 37.780539964317235],\n            [-122.386594873201545, 37.780549275890777],\n            [-122.386499632141522, 37.780546679312224],\n            [-122.386475659366695, 37.780556677311395],\n            [-122.386383878154234, 37.780554025277233],\n            [-122.386359888272054, 37.780563336802956],\n            [-122.386266376955888, 37.780560712359396],\n            [-122.386242404491071, 37.780570710305611],\n            [-122.386143703562112, 37.780568168794694],\n            [-122.386119713984229, 37.780577479991436],\n            [-122.386022743164474, 37.78057491124985],\n            [-122.386000500402702, 37.780584880926071],\n            [-122.385901799477139, 37.780582339761835],\n            [-122.385877827288269, 37.780592337079185],\n            [-122.385784298190572, 37.780589026363579],\n            [-122.38576205573851, 37.780598995989244],\n            [-122.385668544412525, 37.780596371620753],\n            [-122.385646283822041, 37.780605654791167],\n            [-122.385554502585677, 37.780603002386016],\n            [-122.385532242331863, 37.780612285803919],\n            [-122.385433541724893, 37.780609743967645],\n            [-122.385411298534606, 37.78061971381274],\n            [-122.385310868512505, 37.780617199530866],\n            [-122.385288625649494, 37.780627169347277],\n            [-122.385191654786624, 37.780624599647666],\n            [-122.38516766472523, 37.780633910656128],\n            [-122.385079342290652, 37.780631202574007],\n            [-122.385057082314987, 37.780640485896626],\n            [-122.384960111442751, 37.78063791600659],\n            [-122.384936138770243, 37.780647913412501],\n            [-122.384835917442729, 37.780653636341071],\n            [-122.384842007573795, 37.78075723388941],\n            [-122.384817825799914, 37.78075899421075],\n            [-122.38480325384981, 37.78052574104445],\n            [-122.384827435209161, 37.780523981006105],\n            [-122.384843799331136, 37.780623294238858],\n            [-122.384923281326039, 37.780618589884874],\n            [-122.384925926962097, 37.780518286009212],\n            [-122.384957841591557, 37.780616663880899],\n            [-122.385044241908545, 37.780611849106826],\n            [-122.385045157967028, 37.780511572605498],\n            [-122.385078784737303, 37.780609236348262],\n            [-122.385154824277294, 37.780605273878329],\n            [-122.385157469939188, 37.780504969717121],\n            [-122.38518938452367, 37.780603347531915],\n            [-122.385275768076681, 37.780597846132551],\n            [-122.385276683130513, 37.780497569640254],\n            [-122.385310328316436, 37.780595919750695],\n            [-122.385398458680143, 37.78059107677575],\n            [-122.385399356494702, 37.780490114106904],\n            [-122.385433018927529, 37.78058915090709],\n            [-122.385519402086118, 37.780583648785594],\n            [-122.385520317170744, 37.78048337283478],\n            [-122.385553962326881, 37.780581722881479],\n            [-122.385633443879414, 37.780577017779677],\n            [-122.385634358810009, 37.780476741827854],\n            [-122.385666274013943, 37.780575119514069],\n            [-122.385749215060514, 37.780570359001402],\n            [-122.385750112750941, 37.780469396598548],\n            [-122.385783775282164, 37.780568432755352],\n            [-122.385864986912736, 37.780563700098369],\n            [-122.385865884092837, 37.780462737425502],\n            [-122.38589954712829, 37.780561773818384],\n            [-122.385987659981154, 37.780556243958578],\n            [-122.385988556648442, 37.780455281290152],\n            [-122.386022220190043, 37.78055431764264],\n            [-122.386106890951012, 37.780549529481313],\n            [-122.386107787802118, 37.780448566806321],\n            [-122.386141451153719, 37.780547603130415],\n            [-122.386229563971753, 37.780542073089819],\n            [-122.386232190406915, 37.780441082739081],\n            [-122.386264124167781, 37.780540146702961],\n            [-122.386347065143937, 37.780535386044313],\n            [-122.386349691419113, 37.78043439569084],\n            [-122.386381625333826, 37.780533459623001],\n            [-122.386462836549086, 37.780528726834362],\n            [-122.386465444877402, 37.780427049764754],\n            [-122.386497396725886, 37.780526800104532],\n            [-122.386582067431817, 37.780522011876563],\n            [-122.386584675942643, 37.78042033479867],\n            [-122.386616627602407, 37.780520085111789],\n            [-122.386699551102055, 37.78051463803542],\n            [-122.386702159451801, 37.78041296095477],\n            [-122.386734111266165, 37.780512711236199],\n            [-122.386817052181556, 37.780507950246935],\n            [-122.386817930281353, 37.780406301126988],\n            [-122.386851612353468, 37.780506023962438],\n            [-122.386929363990731, 37.7805013456708],\n            [-122.386930242282716, 37.780399696544364],\n            [-122.386963924156646, 37.780499419353383],\n            [-122.387046865035501, 37.780494657927875],\n            [-122.387047743173568, 37.78039300907502],\n            [-122.387081425188285, 37.780492731301436],\n            [-122.387171267622861, 37.780487172869918],\n            [-122.387173875339855, 37.780385496327504],\n            [-122.387205827768923, 37.780485246207022],\n            [-122.387295687629134, 37.780480374124949],\n            [-122.387296547982558, 37.780378038825731],\n            [-122.387330247768816, 37.780478447425573],\n            [-122.387406269602806, 37.780473796784797],\n            [-122.38740712980379, 37.780371461484656],\n            [-122.38744082973659, 37.78047187005302],\n            [-122.387527230063114, 37.780467053179258],\n            [-122.38749949992625, 37.780056836734332],\n            [-122.387400782538194, 37.780053609825671],\n            [-122.387378540131436, 37.780063580311925],\n            [-122.387290201196578, 37.780060187435744],\n            [-122.387267941315415, 37.780069470907662],\n            [-122.387167511635454, 37.780066958487033],\n            [-122.387143539437361, 37.780076956068172],\n            [-122.387041380009435, 37.780074471228168],\n            [-122.387019120092901, 37.780083754653084],\n            [-122.386922167327057, 37.780081873095298],\n            [-122.386901619695664, 37.780090442368873],\n            [-122.386811551008179, 37.78008707681861],\n            [-122.386787578762636, 37.780097074601919],\n            [-122.386695780329632, 37.780093736646045],\n            [-122.386671790289242, 37.780103048241536],\n            [-122.386578279887487, 37.780100424039603],\n            [-122.386554289830215, 37.78010973561117],\n            [-122.386459049681108, 37.780107138994076],\n            [-122.386435059945711, 37.780116450261254],\n            [-122.386343278946669, 37.780113798749966],\n            [-122.386319288841676, 37.780123109724549],\n            [-122.386225778441045, 37.780120485792217],\n            [-122.386201788319156, 37.780129796742877],\n            [-122.38610135893272, 37.780127283134078],\n            [-122.386079098889809, 37.780136566656026],\n            [-122.385982128640109, 37.780133997606264],\n            [-122.38595813883623, 37.780143308776367],\n            [-122.385859438837869, 37.78014076729638],\n            [-122.385837196191162, 37.780150737217127],\n            [-122.385743667990269, 37.780147426188911],\n            [-122.385719678159148, 37.780156737585067],\n            [-122.385627896776001, 37.780154084973319],\n            [-122.385603907274145, 37.780163396340377],\n            [-122.385513855977493, 37.78016071596884],\n            [-122.385489865760334, 37.780170027049152],\n            [-122.385392895494292, 37.780167457789418],\n            [-122.385368905944745, 37.780176768559457],\n            [-122.385270205929046, 37.780174226860836],\n            [-122.385246216015972, 37.78018353761145],\n            [-122.385150975133058, 37.78018094022346],\n            [-122.385126985555786, 37.780190251218855],\n            [-122.385038663996198, 37.78018754310051],\n            [-122.385014674056748, 37.780196854078561],\n            [-122.384919433510831, 37.780194256498035],\n            [-122.38489544320835, 37.780203567457356],\n            [-122.384795222823172, 37.780209290346271],\n            [-122.384801312515108, 37.780312887910483],\n            [-122.384777113810173, 37.780313961773459],\n            [-122.384762559495741, 37.780081395028191],\n            [-122.384786741057312, 37.780079634992532],\n            [-122.384803105027004, 37.780178948238863],\n            [-122.384882586203048, 37.780174243917422],\n            [-122.384885231532309, 37.780073940040232],\n            [-122.384917146262893, 37.780172317925249],\n            [-122.385001816666616, 37.780167530831704],\n            [-122.385004462173583, 37.780067226671626],\n            [-122.385036376713245, 37.780165604530019],\n            [-122.38511414553922, 37.780161614154224],\n            [-122.385116790908242, 37.780061310540667],\n            [-122.385148705594133, 37.780159688368748],\n            [-122.385233375608649, 37.780154900565314],\n            [-122.385236021162356, 37.780054596943422],\n            [-122.385267935657353, 37.780152974744887],\n            [-122.385356065837257, 37.780148131521123],\n            [-122.385358710872126, 37.780047827627314],\n            [-122.385390625872631, 37.780146205390146],\n            [-122.385477025953321, 37.780141390018422],\n            [-122.385479653051561, 37.780040399682747],\n            [-122.385511585982442, 37.780139463852002],\n            [-122.385591067071402, 37.78013475905297],\n            [-122.385593711788431, 37.78003445515364],\n            [-122.38562562709447, 37.78013283285312],\n            [-122.385706855349099, 37.780128787029341],\n            [-122.385709482473402, 37.780027796408206],\n            [-122.385741415359448, 37.780126860520987],\n            [-122.385824355914565, 37.780122100504215],\n            [-122.385825252791648, 37.780021137554606],\n            [-122.38585891591876, 37.780120173961421],\n            [-122.385945315592835, 37.780115358252047],\n            [-122.385947942745361, 37.780014367894388],\n            [-122.38597987560469, 37.780113432222926],\n            [-122.386066275948011, 37.78010861613928],\n            [-122.38606717251001, 37.780007653736739],\n            [-122.38610083595357, 37.78010669007471],\n            [-122.386188965678286, 37.780101846233919],\n            [-122.386191574380462, 37.780000169711762],\n            [-122.386223525670573, 37.780099919858799],\n            [-122.386306466157762, 37.780095159228338],\n            [-122.386309092126623, 37.77999416887333],\n            [-122.386341026143853, 37.780093232818778],\n            [-122.386422253963318, 37.780089186233084],\n            [-122.386424863030612, 37.77998750941989],\n            [-122.386456813943639, 37.780087259789596],\n            [-122.386541484497073, 37.780082471584841],\n            [-122.386544092702067, 37.77998079450537],\n            [-122.386576044464221, 37.780080544831833],\n            [-122.386658984914163, 37.780075784227932],\n            [-122.386661592958049, 37.779974107145748],\n            [-122.386693544875143, 37.780073857440478],\n            [-122.386776485303088, 37.780069096479352],\n            [-122.386777363799169, 37.779967447346195],\n            [-122.386809315183925, 37.780067197895306],\n            [-122.386888813892412, 37.780063178385696],\n            [-122.386889674448653, 37.77996084281277],\n            [-122.38692337384856, 37.780061251805442],\n            [-122.387006314247685, 37.780056490682639],\n            [-122.387007174648929, 37.779954155383322],\n            [-122.38704087419768, 37.780054564067953],\n            [-122.387130733547679, 37.78004969211122],\n            [-122.387133323862429, 37.779947329117419],\n            [-122.38716529349125, 37.780047765460061],\n            [-122.387255152824864, 37.780042893408485],\n            [-122.387256012876136, 37.779940557832525],\n            [-122.387289712762055, 37.78004096672084],\n            [-122.387365734157797, 37.780036316380411],\n            [-122.387366594049666, 37.779933980528931],\n            [-122.387400294082084, 37.78003438938579],\n            [-122.387486693563403, 37.780029572821469],\n            [-122.387461810378028, 37.779663260524117],\n            [-122.387378661112308, 37.779659784635669],\n            [-122.387356418813553, 37.779669754843859],\n            [-122.387276728664503, 37.779666223506673],\n            [-122.387252739526915, 37.779675535209975],\n            [-122.387173049376599, 37.779672003802716],\n            [-122.387150789943092, 37.779681287247612],\n            [-122.387067640671745, 37.779677811139862],\n            [-122.387043668592767, 37.779687808975972],\n            [-122.386969150543408, 37.779683507921064],\n            [-122.386945178103403, 37.779693505742671],\n            [-122.386868930320873, 37.779689232309579],\n            [-122.386844958564382, 37.779699230374298],\n            [-122.386765268401049, 37.779695698416859],\n            [-122.386741279182857, 37.779705009741512],\n            [-122.386659859644624, 37.77970150593859],\n            [-122.386635887496141, 37.77971150341719],\n            [-122.386556180245535, 37.77970728514304],\n            [-122.386533937822136, 37.779717255195997],\n            [-122.386452518273302, 37.779713750975354],\n            [-122.386428528664126, 37.77972306224185],\n            [-122.38635402805015, 37.779719447242712],\n            [-122.386331768168034, 37.779728731087609],\n            [-122.386245159413448, 37.779725309752138],\n            [-122.386222916935935, 37.779735279471808],\n            [-122.386151858355305, 37.779730922551266],\n            [-122.386127868702886, 37.77974023375657],\n            [-122.386048178882604, 37.779736701583559],\n            [-122.386025936036276, 37.779746671546171],\n            [-122.385946246559868, 37.779743139298724],\n            [-122.385922256538748, 37.779752450742315],\n            [-122.385842567054112, 37.779748918150233],\n            [-122.385818577011165, 37.779758229298103],\n            [-122.385742346663463, 37.779754641855682],\n            [-122.385718357291026, 37.779763952697529],\n            [-122.385635207994184, 37.779760475579685],\n            [-122.385611235349785, 37.779770473129936],\n            [-122.385528086050684, 37.779766995936541],\n            [-122.385504096654358, 37.779776307009364],\n            [-122.38542267708938, 37.779772802077623],\n            [-122.385400434501221, 37.779782772191204],\n            [-122.385319014927063, 37.779779266913316],\n            [-122.385296754890703, 37.779788550288139],\n            [-122.385225696313427, 37.779784192809487],\n            [-122.385201723952207, 37.779794190270913],\n            [-122.385120304035951, 37.779790685135936],\n            [-122.38509804431726, 37.779799968467685],\n            [-122.385020084218212, 37.779796407941809],\n            [-122.38499609406378, 37.779805719196837],\n            [-122.384916404566042, 37.779802185978852],\n            [-122.384894161901101, 37.779812155996879],\n            [-122.38480257260197, 37.779817053634027],\n            [-122.384809835241697, 37.779898657585051],\n            [-122.384782194261888, 37.779900472932383],\n            [-122.384761383067243, 37.779694102231538],\n            [-122.384789023963819, 37.779692286614427],\n            [-122.384808725038937, 37.779786739726958],\n            [-122.384879557453601, 37.779782173395887],\n            [-122.384880595342565, 37.779686702548538],\n            [-122.384914117331078, 37.779780247404453],\n            [-122.384983237080689, 37.779776395391224],\n            [-122.384984274829336, 37.77968092426827],\n            [-122.385017796952795, 37.779774469369393],\n            [-122.385085186616962, 37.779770645233363],\n            [-122.38508622457347, 37.779675173829325],\n            [-122.385119746476775, 37.779768718907071],\n            [-122.385188848787607, 37.77976418060323],\n            [-122.385189886610789, 37.779668709198148],\n            [-122.385223408641721, 37.779762254246563],\n            [-122.385283897452879, 37.779759226795328],\n            [-122.385284934821826, 37.779663755944007],\n            [-122.385318457309211, 37.779757300685375],\n            [-122.385385847281285, 37.779753476097383],\n            [-122.385386866740049, 37.779657318531406],\n            [-122.3854203897058, 37.77975086351293],\n            [-122.385491239136826, 37.779746983539091],\n            [-122.385492276232114, 37.779651512411178],\n            [-122.385525798982087, 37.779745057368359],\n            [-122.385598378143868, 37.779741149940357],\n            [-122.385599415094418, 37.779645678536831],\n            [-122.385632937976666, 37.779739223463643],\n            [-122.385705499691042, 37.779734629250548],\n            [-122.385706536510781, 37.779639158120546],\n            [-122.385740059531955, 37.779732703291586],\n            [-122.385805719718547, 37.779728905856508],\n            [-122.385806756416358, 37.779633435000086],\n            [-122.385840279547224, 37.779726979593605],\n            [-122.385909399199221, 37.7797231270374],\n            [-122.385910435756728, 37.779627655905408],\n            [-122.385943959022555, 37.779721200744085],\n            [-122.386013061231836, 37.779716661682606],\n            [-122.386014097656016, 37.779621190549562],\n            [-122.386047621049443, 37.779714735358894],\n            [-122.38611501060636, 37.779710910634236],\n            [-122.386116047238417, 37.779615439220123],\n            [-122.386149570411703, 37.779708984006099],\n            [-122.386208311974158, 37.779705297309562],\n            [-122.386211077885747, 37.779609798774842],\n            [-122.386242871788397, 37.779703371203219],\n            [-122.386317180591391, 37.779699435108718],\n            [-122.38631821662446, 37.77960396397274],\n            [-122.386351740393124, 37.779697508695882],\n            [-122.386415670790853, 37.779693738872112],\n            [-122.386416706351284, 37.779598267740703],\n            [-122.386450230587357, 37.779691812430414],\n            [-122.386519350181956, 37.779687959791211],\n            [-122.386520385602097, 37.779592488384218],\n            [-122.386553892529193, 37.77968534660009],\n            [-122.386623012105417, 37.779681493625532],\n            [-122.386624047399195, 37.779586022492111],\n            [-122.386657571897828, 37.779679567397658],\n            [-122.386728421189233, 37.779675686405767],\n            [-122.386729456700351, 37.779580215540342],\n            [-122.386762980969223, 37.779673759872402],\n            [-122.386832100523861, 37.779669906775261],\n            [-122.386833135894662, 37.779574435634252],\n            [-122.386866660298466, 37.779667980211499],\n            [-122.386932302936756, 37.779663495979172],\n            [-122.386933338178679, 37.779568024837168],\n            [-122.386966862705819, 37.779661569386036],\n            [-122.387030793048368, 37.779657799503305],\n            [-122.38704566565184, 37.779562106599087],\n            [-122.387054991513921, 37.779656725452249],\n            [-122.387136202059708, 37.779651991644378],\n            [-122.387139193519673, 37.77956541658935],\n            [-122.387170761825075, 37.779650065266061],\n            [-122.387239881329535, 37.779646211655297],\n            [-122.387241125495137, 37.779558977842669],\n            [-122.387274441082525, 37.779644284971994],\n            [-122.387341830851355, 37.779640459266005],\n            [-122.387344804633926, 37.779553198035785],\n            [-122.387376373154481, 37.7796378461085],\n            [-122.387448951768221, 37.779633937546841],\n            [-122.387428243590108, 37.779295714050406],\n            [-122.387339905566151, 37.779292321211003],\n            [-122.38731766337223, 37.779302291412563],\n            [-122.387236244241279, 37.77929878773282],\n            [-122.387212254525394, 37.779308099439604],\n            [-122.387132565463105, 37.779304567993648],\n            [-122.387108575718415, 37.779313879130164],\n            [-122.387028886654846, 37.779310347614164],\n            [-122.387004914343294, 37.779320345448582],\n            [-122.386932126735232, 37.779316016678415],\n            [-122.386908154408829, 37.779326014493151],\n            [-122.386828447902374, 37.779321796397241],\n            [-122.386804475567118, 37.779331794465456],\n            [-122.386726516216612, 37.779328234787421],\n            [-122.3867025267663, 37.779337546110341],\n            [-122.386624566736728, 37.779333986925117],\n            [-122.386600577610722, 37.779343297947158],\n            [-122.386520887847865, 37.7793397660989],\n            [-122.386496916150335, 37.779349763818921],\n            [-122.386417208949837, 37.779345545456096],\n            [-122.386393237236504, 37.77935554315502],\n            [-122.386318719558147, 37.779351241688801],\n            [-122.386296477216476, 37.779361211972173],\n            [-122.386211598617734, 37.779357762936172],\n            [-122.386187609086349, 37.779367073879669],\n            [-122.386113108495195, 37.779363458733613],\n            [-122.386089119302554, 37.779372769926113],\n            [-122.386011159604379, 37.779369210055243],\n            [-122.385987187482783, 37.779379207677103],\n            [-122.385909210351812, 37.779374961294259],\n            [-122.385885237875669, 37.779384959175481],\n            [-122.385802088988314, 37.779381481900515],\n            [-122.385778099750866, 37.779390793029705],\n            [-122.385698409983121, 37.779387260900187],\n            [-122.385676150450635, 37.779396544067176],\n            [-122.385598190747288, 37.779392983923266],\n            [-122.385574218216505, 37.779402981466639],\n            [-122.3854945117032, 37.779398762469064],\n            [-122.3854705391566, 37.779408759991362],\n            [-122.38538912034204, 37.779405255030689],\n            [-122.385366860087544, 37.779414538699463],\n            [-122.385285441271535, 37.779411033667223],\n            [-122.385261469031803, 37.779421030866885],\n            [-122.385190410808178, 37.779416673366669],\n            [-122.38516642079081, 37.779425984382435],\n            [-122.385088461426918, 37.77942242389598],\n            [-122.38506448916398, 37.779432421330149],\n            [-122.384984782302112, 37.779428201993547],\n            [-122.384960810030293, 37.779438199681202],\n            [-122.384881120582591, 37.779434666444651],\n            [-122.38485713086655, 37.779443977391921],\n            [-122.384765559446308, 37.779449561719943],\n            [-122.384771214222269, 37.779535998445006],\n            [-122.384747015071127, 37.779537072038458],\n            [-122.38473308847739, 37.779329217537743],\n            [-122.384757287215081, 37.779328143952647],\n            [-122.384773494195869, 37.779421279213679],\n            [-122.384846073080865, 37.779417372248531],\n            [-122.384848858140316, 37.779322559636441],\n            [-122.384880632782526, 37.779415445992221],\n            [-122.384949752194402, 37.77941159399834],\n            [-122.384952537135234, 37.779316781932884],\n            [-122.384984294475274, 37.779408981541515],\n            [-122.385051684148522, 37.779405157144254],\n            [-122.385056216100068, 37.779311003588973],\n            [-122.385086243853095, 37.779403231376833],\n            [-122.385155363235981, 37.779399378987847],\n            [-122.385158147906921, 37.779304566642743],\n            [-122.38518992292822, 37.779397452915447],\n            [-122.385248663600038, 37.779393766707848],\n            [-122.385253195301217, 37.779299613144822],\n            [-122.385283223287274, 37.779391840608099],\n            [-122.385354072735922, 37.779387960985474],\n            [-122.385358586870339, 37.779293120699045],\n            [-122.385388632410709, 37.779386034580241],\n            [-122.385459481495417, 37.779382154625232],\n            [-122.385462265784483, 37.779287342547207],\n            [-122.385494023751633, 37.779379542293618],\n            [-122.385561413364954, 37.77937571733046],\n            [-122.385565944668585, 37.779281563755077],\n            [-122.385595973035649, 37.779373791139029],\n            [-122.385663362299539, 37.779369966397688],\n            [-122.385667876044934, 37.779275126373676],\n            [-122.385697921964919, 37.779368040176379],\n            [-122.385765311917211, 37.779364215640285],\n            [-122.385769825525102, 37.779269375337698],\n            [-122.385799871570299, 37.779362289114509],\n            [-122.385874162638899, 37.779357667403531],\n            [-122.38587696382136, 37.779263541485342],\n            [-122.385908722286104, 37.779355740845865],\n            [-122.385976111863471, 37.779351915920223],\n            [-122.385978912570593, 37.779257790005062],\n            [-122.386010671519301, 37.779349989881837],\n            [-122.386078060733283, 37.77934616462889],\n            [-122.386080844570401, 37.779251352255542],\n            [-122.386112620376821, 37.779344238286029],\n            [-122.386174820757347, 37.779340496265526],\n            [-122.386179333847906, 37.779245656221427],\n            [-122.386209380395755, 37.779338569894314],\n            [-122.386283671761092, 37.779333947919731],\n            [-122.386288202139696, 37.779239794041324],\n            [-122.386318231386639, 37.779332021242034],\n            [-122.386380431746588, 37.779328279113052],\n            [-122.386384962016137, 37.779234125779993],\n            [-122.386414991380946, 37.77932635295614],\n            [-122.38648584000218, 37.779322472115325],\n            [-122.386488640754166, 37.779228346176467],\n            [-122.386520399624118, 37.779320545652922],\n            [-122.386589518862621, 37.779316692697755],\n            [-122.386592302045827, 37.779221880311852],\n            [-122.386624078479215, 37.779314766204962],\n            [-122.386691468335471, 37.779310941139499],\n            [-122.386694251035379, 37.779216128482069],\n            [-122.386726027939744, 37.77930901434226],\n            [-122.386793400000514, 37.779304502779596],\n            [-122.38679620001615, 37.779210376838677],\n            [-122.386827959599159, 37.779302575952464],\n            [-122.386897078804992, 37.779298722816996],\n            [-122.386901608410881, 37.779204569189005],\n            [-122.386931638412193, 37.779296796508632],\n            [-122.386992108980877, 37.779293081467337],\n            [-122.386996638465945, 37.779198927835616],\n            [-122.387026668576013, 37.779291154856551],\n            [-122.387095787760913, 37.779287301604562],\n            [-122.38710029967234, 37.779192461524332],\n            [-122.387130347350677, 37.779285374963401],\n            [-122.387199466531811, 37.779281521925199],\n            [-122.387204309717603, 37.779199724010219],\n            [-122.387234026109212, 37.779279594979052],\n            [-122.387304857552181, 37.779275027470717],\n            [-122.387309700628478, 37.779193229825893],\n            [-122.387339417137795, 37.779273101042833],\n            [-122.387415455175415, 37.779269136564935],\n            [-122.387394991136247, 37.778940523542531],\n            [-122.387315302113649, 37.778936992225411],\n            [-122.387291312863496, 37.778946303668732],\n            [-122.387218525259328, 37.778941975080627],\n            [-122.38719628281504, 37.778951945540015],\n            [-122.38712349555685, 37.77894761688772],\n            [-122.387099505926273, 37.778956928022971],\n            [-122.387025006394012, 37.778953313441747],\n            [-122.387002746472433, 37.778962597145551],\n            [-122.386929976655324, 37.778958954818265],\n            [-122.386905987003843, 37.778968266188713],\n            [-122.386836658833175, 37.778963881995679],\n            [-122.386812687306417, 37.778973880055133],\n            [-122.386736440270226, 37.778969606535817],\n            [-122.386712468022296, 37.778979604036806],\n            [-122.386637951048542, 37.77897530276654],\n            [-122.386613979138446, 37.778985300516517],\n            [-122.386549822682738, 37.778980146669305],\n            [-122.386527580483204, 37.778990116996944],\n            [-122.386449603383866, 37.778985870976705],\n            [-122.386425631783965, 37.778995868408273],\n            [-122.386356303615884, 37.778991483932835],\n            [-122.386332313881979, 37.779000795186512],\n            [-122.386256084279836, 37.778997207801154],\n            [-122.386233824940902, 37.779006491348653],\n            [-122.386164496774228, 37.779002106760423],\n            [-122.386140524798748, 37.779012104688697],\n            [-122.386067737197138, 37.779007775390234],\n            [-122.386043765192852, 37.779017772749661],\n            [-122.385962346433857, 37.779014268190103],\n            [-122.385938356643209, 37.779023579363574],\n            [-122.385865569388116, 37.779019249934791],\n            [-122.385841597013936, 37.779029247533202],\n            [-122.385768809758915, 37.779024918044691],\n            [-122.385744837376848, 37.779034915898023],\n            [-122.385675509212518, 37.779030531022293],\n            [-122.385651520065593, 37.779039841851741],\n            [-122.385578749547165, 37.77903619870164],\n            [-122.385554760393234, 37.779045509785973],\n            [-122.385481989874023, 37.779041866576151],\n            [-122.385458000713072, 37.779051177915363],\n            [-122.385385212767062, 37.779046848201126],\n            [-122.385361223578457, 37.779056158971507],\n            [-122.385286723685297, 37.779052543297539],\n            [-122.385262734143524, 37.779061854327978],\n            [-122.385195135701593, 37.77905744150933],\n            [-122.385171163224882, 37.779067438971381],\n            [-122.385094916187072, 37.779063164390635],\n            [-122.385070944393846, 37.779073162095791],\n            [-122.385001616233609, 37.779068776823863],\n            [-122.38497935636353, 37.77907805986537],\n            [-122.384906586186588, 37.779074416294911],\n            [-122.384884326309916, 37.779083699593059],\n            [-122.384796197708141, 37.779088542459625],\n            [-122.384801451464668, 37.77915919068996],\n            [-122.384780712232896, 37.779160209251955],\n            [-122.384765734942761, 37.778979153747279],\n            [-122.384786456703722, 37.778977448743071],\n            [-122.384804149136215, 37.779060946405302],\n            [-122.384871538841949, 37.779057121830682],\n            [-122.384874585188271, 37.778972606432866],\n            [-122.384906098382288, 37.779055195841352],\n            [-122.384966568862538, 37.779051482113282],\n            [-122.384969632515677, 37.778967652883104],\n            [-122.385001128397789, 37.779049556096091],\n            [-122.385058156860921, 37.779046584353601],\n            [-122.385061202980566, 37.778962068401654],\n            [-122.385092716384577, 37.779044658035005],\n            [-122.385158376003019, 37.779040861234485],\n            [-122.38516315173905, 37.77895631817001],\n            [-122.385192918111116, 37.779038248990936],\n            [-122.385249946543951, 37.779035276606521],\n            [-122.385253009876607, 37.778951447368748],\n            [-122.385284506064338, 37.779033350506261],\n            [-122.385350165317007, 37.779029553604488],\n            [-122.385353228882295, 37.778945724358508],\n            [-122.385382995459778, 37.779027655131593],\n            [-122.385445195618914, 37.779023913770359],\n            [-122.385448258723784, 37.778940084252753],\n            [-122.385479755121978, 37.779021987338304],\n            [-122.385541972691954, 37.779018932096108],\n            [-122.385545018273902, 37.778934416680386],\n            [-122.385576532197149, 37.779017005910269],\n            [-122.385638732330676, 37.779013264172356],\n            [-122.385641777795314, 37.77892874847948],\n            [-122.385673291830699, 37.779011337958153],\n            [-122.38573203252615, 37.779007651778535],\n            [-122.385735094960694, 37.77892382225879],\n            [-122.385766592014193, 37.779005725262394],\n            [-122.385828792128677, 37.779001983424223],\n            [-122.385831854467739, 37.778918154451013],\n            [-122.385863351625531, 37.779000057428874],\n            [-122.385925569154423, 37.778997001709705],\n            [-122.385930344007448, 37.778912458338894],\n            [-122.385960128639468, 37.778995075411409],\n            [-122.386030959889439, 37.778990508668088],\n            [-122.386034022338819, 37.778906679409381],\n            [-122.386065519368728, 37.778988582338918],\n            [-122.386127736893627, 37.778985527062204],\n            [-122.386132511508848, 37.778900983408484],\n            [-122.386162278927955, 37.778982913985502],\n            [-122.386221036657432, 37.7789799137378],\n            [-122.386224081811065, 37.778895398298431],\n            [-122.386255596133822, 37.778977987627471],\n            [-122.386319526256145, 37.778974217575232],\n            [-122.386322588033238, 37.778890388314295],\n            [-122.38635408572037, 37.778972291161459],\n            [-122.386412826344156, 37.778968604368089],\n            [-122.386417618076294, 37.778884747421706],\n            [-122.386447385803351, 37.778966677926974],\n            [-122.386514775006972, 37.77896285296778],\n            [-122.386517836902243, 37.778879023421496],\n            [-122.386549334453889, 37.778960926222204],\n            [-122.386602903347566, 37.778958008816609],\n            [-122.386605964804218, 37.778874179548069],\n            [-122.386637462796912, 37.778956082319787],\n            [-122.386699662825961, 37.778952340022151],\n            [-122.386702724173148, 37.778868510751018],\n            [-122.386734222270135, 37.778950413496958],\n            [-122.386799881728336, 37.778946616056871],\n            [-122.386804673015121, 37.778862758819848],\n            [-122.386834441160303, 37.778944689227728],\n            [-122.386894928894066, 37.778941660955091],\n            [-122.38689797293344, 37.778857145503274],\n            [-122.386929488335198, 37.77893973464726],\n            [-122.386989958613299, 37.77893601960681],\n            [-122.386993002191389, 37.778851503883409],\n            [-122.387024518042367, 37.778934092996543],\n            [-122.387086718033501, 37.778930350494704],\n            [-122.387091509002346, 37.778846493520362],\n            [-122.387121277457396, 37.778928423856051],\n            [-122.387183477445888, 37.778924681577777],\n            [-122.387186764992791, 37.77884977579707],\n            [-122.387218036857675, 37.778922754636191],\n            [-122.387280254273051, 37.778919698476713],\n            [-122.387283524285621, 37.778844106523373],\n            [-122.387314813687013, 37.77891777178133],\n            [-122.387382202448663, 37.778913946057301],\n            [-122.387364166474967, 37.778612763090031],\n            [-122.387286207520319, 37.778609204336291],\n            [-122.387262218365407, 37.778618515499687],\n            [-122.387185989110648, 37.778614928715285],\n            [-122.387161999948319, 37.778624240132871],\n            [-122.387092672083611, 37.778619856090089],\n            [-122.387070429718904, 37.778629826526299],\n            [-122.386994183021031, 37.778625553173391],\n            [-122.386971941319302, 37.778635523030793],\n            [-122.386900883746804, 37.778631166560793],\n            [-122.386876911637231, 37.778641164370391],\n            [-122.38679893557611, 37.778636918569845],\n            [-122.386774963796881, 37.778646916353182],\n            [-122.386707365642749, 37.778642504401184],\n            [-122.386683376072511, 37.77865181600145],\n            [-122.386614065647606, 37.778648118121843],\n            [-122.386590076741811, 37.778657429142889],\n            [-122.386510387715276, 37.778653897287107],\n            [-122.386486398801594, 37.778663208561632],\n            [-122.386417070940411, 37.778658824121642],\n            [-122.386393098756784, 37.778668821832838],\n            [-122.38631686949239, 37.77866523448656],\n            [-122.386292880557747, 37.778674545996267],\n            [-122.38622009293212, 37.778670216797138],\n            [-122.386197851113138, 37.778680186508431],\n            [-122.386125063833461, 37.778675857245105],\n            [-122.38610282131512, 37.778685827224102],\n            [-122.386028304671399, 37.778681525568288],\n            [-122.38600433277405, 37.778691523194873],\n            [-122.385931545494543, 37.77868719381209],\n            [-122.385909285516078, 37.778696477309893],\n            [-122.385834786309914, 37.778692862251056],\n            [-122.385810796946046, 37.778702173118987],\n            [-122.385741486517588, 37.778698474726497],\n            [-122.385717497147184, 37.778707785850045],\n            [-122.385642980157812, 37.778703483956278],\n            [-122.385619007862559, 37.778713481784578],\n            [-122.385549680005639, 37.778709096834618],\n            [-122.385525708373962, 37.778719094083733],\n            [-122.385451191384348, 37.778714792068747],\n            [-122.385428949109837, 37.778724761915029],\n            [-122.385354432120124, 37.778720459838901],\n            [-122.385330442694098, 37.778729770883643],\n            [-122.385257672841163, 37.778726127529652],\n            [-122.385235413119702, 37.778735411169237],\n            [-122.385147302363819, 37.778740940194126],\n            [-122.385154355852308, 37.778814307082541],\n            [-122.385130156934849, 37.778815380480168],\n            [-122.385113449499144, 37.778634352661491],\n            [-122.385137630588289, 37.778632592828004],\n            [-122.385155236200447, 37.778712657669637],\n            [-122.385222625586081, 37.778708833443275],\n            [-122.385225758626859, 37.778627749705855],\n            [-122.38525718494833, 37.778706907076334],\n            [-122.38531938483824, 37.778703165506691],\n            [-122.385322517780125, 37.778622082041188],\n            [-122.385352214498553, 37.778701267322347],\n            [-122.385416144082598, 37.778697497765265],\n            [-122.385419276918626, 37.778616414297126],\n            [-122.385450703441506, 37.77869557161619],\n            [-122.38551290331219, 37.778691829944421],\n            [-122.385517765757882, 37.778610719084014],\n            [-122.38554746266594, 37.778689903767003],\n            [-122.385606220534413, 37.778686903820002],\n            [-122.385611082870923, 37.77860579268107],\n            [-122.385640779890451, 37.778684977889775],\n            [-122.385704709445832, 37.778681208176224],\n            [-122.385707841966195, 37.778600124700183],\n            [-122.385739268789678, 37.778679281942566],\n            [-122.385798008866331, 37.778675595460832],\n            [-122.385801141637501, 37.77859451225126],\n            [-122.385832568205146, 37.778673669199819],\n            [-122.385896498100962, 37.77866989992588],\n            [-122.385899630058546, 37.778588816175542],\n            [-122.385931057427598, 37.778667973361443],\n            [-122.385991527195401, 37.778664259112972],\n            [-122.385994659747908, 37.778583175623524],\n            [-122.386026086530904, 37.778662333069811],\n            [-122.386090016393183, 37.778658563141803],\n            [-122.386093148146045, 37.778577479660726],\n            [-122.386124575716508, 37.778656636795191],\n            [-122.386185062898718, 37.778653608892128],\n            [-122.386202015472293, 37.778571617834082],\n            [-122.386209244307707, 37.778651848558759],\n            [-122.386280092656236, 37.778647968384718],\n            [-122.386284954247373, 37.778566856942867],\n            [-122.386314651962735, 37.778646041707809],\n            [-122.386380311166334, 37.778642244226567],\n            [-122.386385172654656, 37.778561133055092],\n            [-122.386414870481516, 37.778640318069463],\n            [-122.386473610832795, 37.778636630970986],\n            [-122.386476742511945, 37.778555547473879],\n            [-122.386508170135954, 37.778634704511973],\n            [-122.386577288736902, 37.778630851563484],\n            [-122.386580420309613, 37.778549768338095],\n            [-122.386611848034704, 37.778628925074045],\n            [-122.386670588381151, 37.778625238426613],\n            [-122.386673719491867, 37.778544154655052],\n            [-122.386705147666916, 37.778623311635243],\n            [-122.386762158289017, 37.778619652349228],\n            [-122.386765307091096, 37.778539255288756],\n            [-122.386796717583763, 37.778617726080171],\n            [-122.386864106438878, 37.778613900371958],\n            [-122.386867237344845, 37.778532816869664],\n            [-122.386898665721333, 37.778611973798455],\n            [-122.386959152842579, 37.77860894577281],\n            [-122.386962284329485, 37.778527861982276],\n            [-122.38699369467254, 37.778606332452348],\n            [-122.387057641885832, 37.778603248718746],\n            [-122.387060772580114, 37.778522165211164],\n            [-122.387092183716675, 37.778600635643997],\n            [-122.38715094145212, 37.778597634927166],\n            [-122.387154334023649, 37.778526848079068],\n            [-122.387183771011991, 37.778595735958248],\n            [-122.38724942978078, 37.778591937998534],\n            [-122.387254551963991, 37.778521123457843],\n            [-122.387283989043027, 37.778590011312069],\n            [-122.387351378207768, 37.778586185868939],\n            [-122.387340432224974, 37.778359741993853],\n            [-122.385336224880277, 37.778480397809368],\n            [-122.385292215885698, 37.77845088576418],\n            [-122.385332752982109, 37.778411780987071],\n            [-122.385371486072913, 37.77843794377425],\n            [-122.387505436887736, 37.778315896876499],\n            [-122.387507690304943, 37.778336462786434],\n            [-122.387691125877438, 37.77833695908997],\n            [-122.387623881872372, 37.778210305157842],\n            [-122.390410335866818, 37.777142437885963],\n            [-122.390374260520773, 37.777113759158638],\n            [-122.390348522259259, 37.777093298197975],\n            [-122.389857561580598, 37.776499598895249],\n            [-122.389810930692391, 37.776503093591124],\n            [-122.389821814335647, 37.776590819837281],\n            [-122.38767762612953, 37.776716506820485],\n            [-122.387616143310936, 37.776748393866363],\n            [-122.387584974466847, 37.776747519757691],\n            [-122.387567625478937, 37.776745737093393],\n            [-122.387552006163176, 37.776743927007061],\n            [-122.387536369402838, 37.776741430474004],\n            [-122.387505026105131, 37.776733691622944],\n            [-122.387489337013818, 37.776729135749626],\n            [-122.387475360143554, 37.776723865736592],\n            [-122.387461365830632, 37.776717909277224],\n            [-122.387447354082425, 37.776711266646082],\n            [-122.387419295684069, 37.77669660766567],\n            [-122.387406978711525, 37.776688564173618],\n            [-122.387394643958672, 37.776679834515676],\n            [-122.387373399569938, 37.776660946088832],\n            [-122.387362760285328, 37.776650815560998],\n            [-122.38735385031967, 37.776640657346583],\n            [-122.387344922566982, 37.776629812692306],\n            [-122.387335978065309, 37.776618281581548],\n            [-122.387328762881694, 37.776606722784834],\n            [-122.387323277015341, 37.77659513630249],\n            [-122.387316044392662, 37.776582891060237],\n            [-122.387312271446064, 37.776570590705511],\n            [-122.387306768480713, 37.776558317497482],\n            [-122.387304707400645, 37.776545302738185],\n            [-122.387302663771393, 37.776532974698164],\n            [-122.387298541607819, 37.776506944904682],\n            [-122.387299939508821, 37.776493875044565],\n            [-122.387299608083069, 37.776480832320061],\n            [-122.387311076202096, 37.776319268586136],\n            [-122.387103587414643, 37.776325337046984],\n            [-122.387082386717438, 37.776103864569507],\n            [-122.385027425864848, 37.776335891081246],\n            [-122.385011788936296, 37.776333394493314],\n            [-122.384999507467228, 37.776326723359297],\n            [-122.384988868215274, 37.776316592896777],\n            [-122.385025875302759, 37.776274797468226],\n            [-122.384827030762366, 37.775394163410851],\n            [-122.384880527469605, 37.775388501004997],\n            [-122.384877317104468, 37.775330181090084],\n            [-122.386995863440688, 37.775082030997162],\n            [-122.386923061819843, 37.774327799469994],\n            [-122.381813822024597, 37.774615486663201],\n            [-122.381456516831207, 37.771917559332238],\n            [-122.384671101595274, 37.773340605158566],\n            [-122.384690336061794, 37.773348538332996],\n            [-122.384706059111224, 37.773354467747083],\n            [-122.38472349432422, 37.773359682786399],\n            [-122.384740912113955, 37.773364211103086],\n            [-122.384758312493929, 37.773368053246259],\n            [-122.384775695456668, 37.773371208941398],\n            [-122.384793061001673, 37.77337367818847],\n            [-122.384812120957065, 37.773374747168276],\n            [-122.384829452003999, 37.773375843238945],\n            [-122.384848494879705, 37.773376225487283],\n            [-122.38486577332894, 37.77337526249628],\n            [-122.386759568868584, 37.773272861257844],\n            [-122.386575835242937, 37.772851405934894],\n            [-122.38657206225551, 37.772839105279289],\n            [-122.386575190127743, 37.772826007459408],\n            [-122.386581812023351, 37.772814227444925],\n            [-122.386593692364443, 37.772805109622055],\n            [-122.386717419519911, 37.772771540111776],\n            [-122.386708370613761, 37.772755890279406],\n            [-122.386704597609267, 37.772743589627844],\n            [-122.386699094688865, 37.772731316663254],\n            [-122.386691548686684, 37.772706715359256],\n            [-122.38668746217553, 37.772682058686371],\n            [-122.386685401318488, 37.772669044181889],\n            [-122.386683357538772, 37.772656715579039],\n            [-122.386682694959006, 37.772630630932561],\n            [-122.386684111009814, 37.772618246955815],\n            [-122.386683779716421, 37.772605204495207],\n            [-122.386685195434609, 37.772592821073083],\n            [-122.386688340360166, 37.772580409425913],\n            [-122.386661929793348, 37.772494305123679],\n            [-122.386659886368264, 37.772481976514491],\n            [-122.386661302081109, 37.772469592817821],\n            [-122.38666965348915, 37.772457784842032],\n            [-122.386681551212874, 37.772449354004202],\n            [-122.386714186256512, 37.772439903990914],\n            [-122.386679336788333, 37.772362175448528],\n            [-122.386644902453284, 37.772368906802633],\n            [-122.386631976023693, 37.772336837636807],\n            [-122.386620901217455, 37.772309545906367],\n            [-122.386592865526183, 37.772227587668034],\n            [-122.386585249868389, 37.772200240573625],\n            [-122.386577616780784, 37.772172207033208],\n            [-122.386570001134302, 37.772144859937534],\n            [-122.386558193761417, 37.772088737774723],\n            [-122.386541497954923, 37.771976381892166],\n            [-122.386539053911875, 37.771948265304715],\n            [-122.386438565499603, 37.771943006477983],\n            [-122.386459543589496, 37.771678968587629],\n            [-122.386414488196351, 37.771676255706971],\n            [-122.386416883827636, 37.771634327179655],\n            [-122.386370064064607, 37.77163026961771],\n            [-122.386370799901215, 37.771591114275026],\n            [-122.386346586274058, 37.771591501747267],\n            [-122.386349295737674, 37.771561929239198],\n            [-122.386373509355195, 37.77156154176641],\n            [-122.386383018231356, 37.77145906765827],\n            [-122.386277185313745, 37.771447713434846],\n            [-122.386286481744634, 37.771404987761201],\n            [-122.386248187810011, 37.771395986654248],\n            [-122.386213474980906, 37.771391735029944],\n            [-122.386175916991888, 37.77134357828146],\n            [-122.386158586399219, 37.771342482408336],\n            [-122.386142916299207, 37.771338612516935],\n            [-122.386128940538697, 37.771333342339254],\n            [-122.386116624249169, 37.771325298710295],\n            [-122.38610598590013, 37.771315168059481],\n            [-122.386097059315517, 37.771304323294956],\n            [-122.386091556948031, 37.771292050293354],\n            [-122.386142815223778, 37.771266508342599],\n            [-122.38608534348306, 37.771183647247369],\n            [-122.386039082134474, 37.771201555805888],\n            [-122.386023428808656, 37.771198372355109],\n            [-122.386011095814837, 37.771189642258307],\n            [-122.386041843996964, 37.771174042639558],\n            [-122.38589549059256, 37.770997835524099],\n            [-122.385920430782591, 37.770821635056869],\n            [-122.385847920885212, 37.770691630725352],\n            [-122.385837299399952, 37.770682186505887],\n            [-122.385823306356514, 37.770676229845748],\n            [-122.385795755972097, 37.770681477661917],\n            [-122.3857856231634, 37.770691253905198],\n            [-122.385782477468226, 37.770703665268918],\n            [-122.385798079922523, 37.771250048587049],\n            [-122.385622255652152, 37.772162083932052],\n            [-122.385554576344688, 37.772154239361129],\n            [-122.385681891861481, 37.771444190077446],\n            [-122.385515420224039, 37.771429684819722],\n            [-122.38546780756441, 37.771530707856108],\n            [-122.385335917119292, 37.771651620630855],\n            [-122.385287036807085, 37.771634547559174],\n            [-122.385642517132254, 37.770847369439849],\n            [-122.385683664105002, 37.770764304300435],\n            [-122.385720236601344, 37.770637361956886],\n            [-122.385724274638122, 37.77059197382043],\n            [-122.385559320924514, 37.770637189122013],\n            [-122.383154992189901, 37.769708715839762],\n            [-122.383375582677616, 37.76933298733065],\n            [-122.385570199525418, 37.770179656618097],\n            [-122.385492733315886, 37.769990673321502],\n            [-122.38547497668678, 37.769836444052352],\n            [-122.38501929687861, 37.768856908704215],\n            [-122.384893636964136, 37.768882266758567],\n            [-122.384787561607197, 37.76865665734794],\n            [-122.38500549801104, 37.768585873156887],\n            [-122.385007528170945, 37.768529529274218],\n            [-122.385037840293677, 37.768496768478933],\n            [-122.385006697245259, 37.768428594043755],\n            [-122.38508052413836, 37.768406124957501],\n            [-122.385042550658142, 37.768341493386622],\n            [-122.38510771303342, 37.768318476117585],\n            [-122.385167686616882, 37.76829554179551],\n            [-122.385149073018809, 37.768175662662372],\n            [-122.385147029970554, 37.768163334292169],\n            [-122.385144812710706, 37.768144141461285],\n            [-122.38470084491486, 37.768171155877575],\n            [-122.384624005099198, 37.768074869544797],\n            [-122.383881223535184, 37.768121766230543],\n            [-122.383842264982363, 37.767745376829602],\n            [-122.382456893000523, 37.767832748125578],\n            [-122.382439473722869, 37.767691561099248],\n            [-122.384901003015941, 37.7675361686969],\n            [-122.384848518174209, 37.767018283287165],\n            [-122.384847918040649, 37.767012360130963],\n            [-122.382854528282635, 37.767138299649837],\n            [-122.382800567665527, 37.766784124750316],\n            [-122.385859942984411, 37.766599245791156],\n            [-122.385894343938588, 37.766523155929399],\n            [-122.385924379700455, 37.76641142564803],\n            [-122.385933483994975, 37.766361149056699],\n            [-122.385914237836445, 37.766284543788501],\n            [-122.385992644580284, 37.766169979928648],\n            [-122.386291877422522, 37.765689977677845],\n            [-122.386372587962043, 37.765598038596792],\n            [-122.386520103480208, 37.765411635088689],\n            [-122.386541125110512, 37.765285627921941],\n            [-122.386469993174757, 37.765277839225583],\n            [-122.386436744413672, 37.76505861928149],\n            [-122.386447302231559, 37.764929345689509],\n            [-122.386483096429387, 37.76490817106005],\n            [-122.386501478211272, 37.764814482226171],\n            [-122.386491269379732, 37.764616868735338],\n            [-122.38644793023208, 37.764613442288407],\n            [-122.386451155646682, 37.764399819097633],\n            [-122.386482284438713, 37.7643993208899],\n            [-122.386481482527714, 37.764367744084808],\n            [-122.386603169586195, 37.764322532741204],\n            [-122.386601548243974, 37.76425869323451],\n            [-122.386585931922852, 37.764256883010674],\n            [-122.386571940029569, 37.764250926432666],\n            [-122.38656131971895, 37.764241482262236],\n            [-122.38655581779787, 37.764229209267128],\n            [-122.38655550400469, 37.764216853507875],\n            [-122.386720358990686, 37.764100218114386],\n            [-122.386739211018067, 37.764025063281011],\n            [-122.386733691302794, 37.764012103852934],\n            [-122.38672476584992, 37.764001259116526],\n            [-122.386714128120815, 37.763991128513133],\n            [-122.38670010140504, 37.763983799331974],\n            [-122.386686126988522, 37.763978529213567],\n            [-122.386670492591179, 37.763976032291019],\n            [-122.386649740182264, 37.763976364463595],\n            [-122.386634036749314, 37.763971122014347],\n            [-122.386621721632579, 37.763963078702353],\n            [-122.386611066835059, 37.763952261637705],\n            [-122.386603852994298, 37.763940702770881],\n            [-122.386600062668251, 37.763927715381541],\n            [-122.386601461140231, 37.763914645215138],\n            [-122.386604606072254, 37.763902234094914],\n            [-122.386738907102767, 37.763808749639459],\n            [-122.386828889531799, 37.763741383598706],\n            [-122.386840716091143, 37.763730206671987],\n            [-122.386855983933643, 37.763718287929905],\n            [-122.386869539846316, 37.763707083316298],\n            [-122.386884824769794, 37.763695851022327],\n            [-122.386900145253236, 37.763685991607943],\n            [-122.38691721218359, 37.763676790958648],\n            [-122.386934296546428, 37.763668276753165],\n            [-122.386951398349183, 37.763660449266119],\n            [-122.386970246931185, 37.763653279988162],\n            [-122.386989112953756, 37.763646797428088],\n            [-122.387007996064526, 37.763641001316863],\n            [-122.387026897301666, 37.763635891637833],\n            [-122.387047562432002, 37.763632127441824],\n            [-122.387066515625051, 37.76362907682639],\n            [-122.387271786163467, 37.763605188503739],\n            [-122.387241692331358, 37.763510215504958],\n            [-122.386905339639924, 37.763549936808673],\n            [-122.386894896912324, 37.763479371256736],\n            [-122.386775626938885, 37.763415354890846],\n            [-122.386725141086345, 37.763471101073094],\n            [-122.386629276523749, 37.763443106355105],\n            [-122.386635775530237, 37.763426520918784],\n            [-122.386503316054672, 37.763388124513462],\n            [-122.386596764100844, 37.763184731253212],\n            [-122.386314395824243, 37.763102036396099],\n            [-122.386214308919619, 37.763316522997265],\n            [-122.385510514730285, 37.763329843761532],\n            [-122.385502904472929, 37.763234510683318],\n            [-122.385278141497096, 37.763240166132988],\n            [-122.385288368966343, 37.763370480347639],\n            [-122.38518118352205, 37.763373568175126],\n            [-122.385104258477085, 37.762319301701545],\n            [-122.384682038971576, 37.762111108737756],\n            [-122.384291646501694, 37.762134518628663],\n            [-122.384461265879253, 37.764047083641032],\n            [-122.384304084745608, 37.764057150214732],\n            [-122.384132119672074, 37.762256559028991],\n            [-122.383427389000644, 37.762300785113965],\n            [-122.383450606038608, 37.762465914870035],\n            [-122.383630300057192, 37.762456862777178],\n            [-122.3836690703355, 37.762553071423532],\n            [-122.383744969614881, 37.762544304446941],\n            [-122.383904907669475, 37.764143878058199],\n            [-122.383832343655854, 37.764147784454543],\n            [-122.383810360659879, 37.764236036587789],\n            [-122.383580701961776, 37.764253441592125],\n            [-122.383538646212543, 37.764164152408867],\n            [-122.383462623420698, 37.764168114122675],\n            [-122.383459954192517, 37.764131073630139],\n            [-122.383299279201026, 37.764139821513076],\n            [-122.383109557752064, 37.762320284660944],\n            [-122.382290828789408, 37.762371818989514],\n            [-122.38251353675102, 37.764606298459128],\n            [-122.382344144468703, 37.764612437347246],\n            [-122.382121545934865, 37.762382076243206],\n            [-122.38174844490716, 37.762405201559091],\n            [-122.381695087947634, 37.764738170521944],\n            [-122.381631135065035, 37.764740565182315],\n            [-122.381630936164214, 37.764801000118787],\n            [-122.381492672008349, 37.764806640579245],\n            [-122.381450941763589, 37.76493503772344],\n            [-122.381172352882004, 37.76493330344676],\n            [-122.381123981911756, 37.764799477425129],\n            [-122.380983831900423, 37.764798967139676],\n            [-122.381029346103958, 37.762223710202747],\n            [-122.38330764917707, 37.762081573209855],\n            [-122.382185556454559, 37.760879873475361],\n            [-122.382168402620636, 37.760885641207267],\n            [-122.382152908506868, 37.760888635257665],\n            [-122.382137362223574, 37.760889570238476],\n            [-122.382121780810863, 37.760889132328003],\n            [-122.38210441862546, 37.760886662951151],\n            [-122.382090445117498, 37.760881392285128],\n            [-122.382076454213362, 37.760875434895482],\n            [-122.382064140442054, 37.760867390822959],\n            [-122.382053521188098, 37.760857946240883],\n            [-122.382044596105573, 37.76084710115525],\n            [-122.382023253267107, 37.760824093302155],\n            [-122.382014294110562, 37.760811875582888],\n            [-122.382005317206719, 37.760798970871889],\n            [-122.381998069607818, 37.76078603882209],\n            [-122.381986997879679, 37.76075874660679],\n            [-122.381983174441103, 37.760744386430567],\n            [-122.381981079958692, 37.760729998921875],\n            [-122.381980366958516, 37.760701854577775],\n            [-122.381981731049137, 37.76068741129496],\n            [-122.381984824092612, 37.760672940679711],\n            [-122.38198793521687, 37.760659156500736],\n            [-122.381992775285752, 37.760645344714604],\n            [-122.381695267558513, 37.760647347915544],\n            [-122.381838070964363, 37.762118779804872],\n            [-122.381335375976406, 37.762148093200558],\n            [-122.381148296266858, 37.760157516712624],\n            [-122.380611046370689, 37.760188065470565],\n            [-122.380912187127535, 37.763336013717719],\n            [-122.380701275367471, 37.763342126118935],\n            [-122.380400282533174, 37.760199669192616],\n            [-122.379507164112297, 37.760250310896886],\n            [-122.379808005517475, 37.763456637815253],\n            [-122.379779318273378, 37.763485250755494],\n            [-122.379565016753276, 37.763494162073435],\n            [-122.379533176547326, 37.763466514378344],\n            [-122.379201704975202, 37.759937914686475],\n            [-122.381256986630419, 37.759667520373661],\n            [-122.381256577752055, 37.759583059710486],\n            [-122.381469121143184, 37.759573486743299],\n            [-122.381446760180623, 37.75930533388199],\n            [-122.381389798546991, 37.759310363785765],\n            [-122.381303248927566, 37.759308311423226],\n            [-122.381202252005025, 37.758325846274602],\n            [-122.381200105587652, 37.758309399127988],\n            [-122.381197941449869, 37.758292265813587],\n            [-122.381197089710227, 37.758258629870305],\n            [-122.381199679398975, 37.758224251997007],\n            [-122.381200991455458, 37.758207749648136],\n            [-122.38120401536365, 37.75819053325035],\n            [-122.381207056652954, 37.758174003300283],\n            [-122.381221367866601, 37.758124330651064],\n            [-122.381234402126012, 37.75809253323947],\n            [-122.381242648836448, 37.758076607200529],\n            [-122.381262669528837, 37.75804744489573],\n            [-122.381289433303067, 37.758011307974613],\n            [-122.381302797797105, 37.757992553063836],\n            [-122.381314432708805, 37.757973825759706],\n            [-122.381327797196747, 37.757955071120548],\n            [-122.381337703552219, 37.757936371131194],\n            [-122.381360938912749, 37.75789754361324],\n            [-122.381380716140868, 37.757858771292213],\n            [-122.381390587715856, 37.757838698951588],\n            [-122.381398729699725, 37.757818653670306],\n            [-122.381408600911726, 37.757798581058942],\n            [-122.381416742893265, 37.757778536050878],\n            [-122.381423155645805, 37.757758518646433],\n            [-122.381431297626008, 37.7577384739118],\n            [-122.381444088336707, 37.757697065930351],\n            [-122.381450501074838, 37.757677048524144],\n            [-122.381464499104396, 37.757615019779642],\n            [-122.381469148185403, 37.757593657075738],\n            [-122.381475021977749, 37.757552359783979],\n            [-122.381477941486636, 37.757531024690024],\n            [-122.381480843608969, 37.757509003148037],\n            [-122.381427480867771, 37.75751946944429],\n            [-122.381405721286413, 37.757343328372727],\n            [-122.381468641764485, 37.757300433411309],\n            [-122.381446638421224, 37.75711468207534],\n            [-122.381323864533158, 37.757116641937891],\n            [-122.381323169199888, 37.757089184020202],\n            [-122.381364426846005, 37.75707891127486],\n            [-122.381321992818584, 37.756564544822638],\n            [-122.381321662531036, 37.756551502035926],\n            [-122.38132307883005, 37.756539118369027],\n            [-122.381326206602509, 37.756526020931318],\n            [-122.381331099013835, 37.756514268226432],\n            [-122.381339449129754, 37.756502460600949],\n            [-122.381347834701543, 37.756492025859821],\n            [-122.381357966510507, 37.756482250242897],\n            [-122.381369844881263, 37.756473132920476],\n            [-122.381383504601786, 37.756466047611781],\n            [-122.381397181710526, 37.756459649024094],\n            [-122.381399266420004, 37.75640536415446],\n            [-122.381383669266881, 37.756404239961626],\n            [-122.381368019603769, 37.756401055879024],\n            [-122.381354081758502, 37.756397158017677],\n            [-122.381338379955181, 37.756391914861666],\n            [-122.381324389963666, 37.756385957652711],\n            [-122.38129976407464, 37.756369869336808],\n            [-122.381289145560629, 37.756360424678547],\n            [-122.381280238512659, 37.756350265974667],\n            [-122.381265813968113, 37.756327147557755],\n            [-122.381260331236177, 37.756315560741236],\n            [-122.381258271437829, 37.756302546110341],\n            [-122.381256229700497, 37.756290217367201],\n            [-122.381255916815178, 37.756277861302344],\n            [-122.381240855709805, 37.755888041607285],\n            [-122.381237067430561, 37.75587505429101],\n            [-122.381229855216972, 37.755863495353786],\n            [-122.381219219049328, 37.755853363971241],\n            [-122.381205211793798, 37.755846720574091],\n            [-122.381189545219783, 37.75584285001387],\n            [-122.381023178934683, 37.755831084166076],\n            [-122.381005052890941, 37.755798410637965],\n            [-122.380939344081298, 37.755799459348452],\n            [-122.380938179657051, 37.755753467322073],\n            [-122.381031311951133, 37.755742366765169],\n            [-122.381010248974547, 37.755730341878809],\n            [-122.38098743910173, 37.755717658143908],\n            [-122.380924145958886, 37.755677464760758],\n            [-122.380881915817497, 37.755649296531168],\n            [-122.380862530269653, 37.755635184397235],\n            [-122.380841397836633, 37.755620413687737],\n            [-122.380821994593731, 37.755605615653565],\n            [-122.380802573973469, 37.755590130893374],\n            [-122.38078488252836, 37.755574618260482],\n            [-122.380758354080839, 37.755551693216646],\n            [-122.380751124581494, 37.755539447252119],\n            [-122.380745589509232, 37.755525801070959],\n            [-122.38074007147074, 37.755512841343261],\n            [-122.380736283298162, 37.75549985401004],\n            [-122.38073074823852, 37.755486208102681],\n            [-122.380728671510397, 37.755472506457778],\n            [-122.380724865279745, 37.755458832961516],\n            [-122.380718635462969, 37.755417728569704],\n            [-122.380718270538722, 37.755403313156876],\n            [-122.380719652161702, 37.755389556598288],\n            [-122.380719304614729, 37.755375827633614],\n            [-122.380722067512963, 37.755348314521783],\n            [-122.380728289091294, 37.755320746216135],\n            [-122.380731417602021, 37.755307648505891],\n            [-122.380736257562816, 37.755293837033165],\n            [-122.38074597221329, 37.755267586159846],\n            [-122.380759145196464, 37.755241280371166],\n            [-122.380767425749198, 37.755226726990642],\n            [-122.380777557807846, 37.755216951415953],\n            [-122.380789436047536, 37.755207834150042],\n            [-122.3808030608416, 37.755199376285184],\n            [-122.380814973485883, 37.755191631918663],\n            [-122.380828633023739, 37.75518454667273],\n            [-122.380844056826504, 37.755178806720394],\n            [-122.380857751116352, 37.755173094367549],\n            [-122.380873209326097, 37.755168727313375],\n            [-122.380888684919853, 37.755165046980004],\n            [-122.380905907041537, 37.755162024947012],\n            [-122.380921434762783, 37.75516040367944],\n            [-122.380952524623297, 37.755158534314724],\n            [-122.380976698502963, 37.755156774772679],\n            [-122.380999125498533, 37.755154356655588],\n            [-122.381021534766717, 37.755151252091551],\n            [-122.381043927344422, 37.755147461063977],\n            [-122.381066302193489, 37.755142983589487],\n            [-122.38108865965917, 37.755137819662529],\n            [-122.38111099939502, 37.755131969288627],\n            [-122.38113332243789, 37.755125432451251],\n            [-122.381153915967687, 37.755118923215505],\n            [-122.381176203900949, 37.755111013753655],\n            [-122.38119676265265, 37.755103131339425],\n            [-122.381225828164943, 37.755089619604064],\n            [-122.381246943141264, 37.755103703797808],\n            [-122.381242963358787, 37.755083165829973],\n            [-122.38126015068255, 37.755078770848776],\n            [-122.381277355393678, 37.755075062587856],\n            [-122.381292865706087, 37.755072754823154],\n            [-122.38131010484075, 37.755070419733926],\n            [-122.381327362035009, 37.75506877053013],\n            [-122.381361945276268, 37.755068218467898],\n            [-122.381396598051168, 37.755070412188203],\n            [-122.381413958860932, 37.755072881946376],\n            [-122.381448715950555, 37.755079194614936],\n            [-122.381480084590436, 37.755088307721437],\n            [-122.381497532329476, 37.755094209708098],\n            [-122.381511539483228, 37.755100853620512],\n            [-122.381527276134307, 37.755107469370813],\n            [-122.381548321633034, 37.755118807717949],\n            [-122.381562363566104, 37.755126824520609],\n            [-122.381579829044853, 37.755133412663042],\n            [-122.381595565024199, 37.755140028689837],\n            [-122.381612996090695, 37.755145244200165],\n            [-122.381630391696547, 37.755149086822691],\n            [-122.381647770609987, 37.755152242983492],\n            [-122.381665131447221, 37.755154712704652],\n            [-122.381684187368847, 37.755155781907895],\n            [-122.38170149639484, 37.755156192273823],\n            [-122.382833235564902, 37.755035795269471],\n            [-122.383668861276263, 37.754971624407645],\n            [-122.383685978819074, 37.754964483555838],\n            [-122.38372028351472, 37.754952947636127],\n            [-122.383737470668777, 37.75494855256818],\n            [-122.383756404038564, 37.75494481631263],\n            [-122.383773626345388, 37.754941794129564],\n            [-122.383792594868737, 37.754939430758334],\n            [-122.383811580457817, 37.754937754111957],\n            [-122.38384268824322, 37.754936570147059],\n            [-122.383861726388119, 37.754936952556008],\n            [-122.383880781586896, 37.754938021140639],\n            [-122.383896396575224, 37.754939831714687],\n            [-122.384073136269635, 37.754951427650568],\n            [-122.384099862744918, 37.754913917176538],\n            [-122.384076095308828, 37.754658835300546],\n            [-122.383998950777894, 37.754618177983438],\n            [-122.383899356302948, 37.754647239093948],\n            [-122.383797997440993, 37.754674954869053],\n            [-122.383696604385719, 37.754701297650087],\n            [-122.383569360630759, 37.75473148712782],\n            [-122.383548680403266, 37.754734564546567],\n            [-122.3835279827709, 37.754736955513799],\n            [-122.383505538587656, 37.754738687938882],\n            [-122.38348480614728, 37.754739706002738],\n            [-122.383441577306456, 37.754740396857535],\n            [-122.383400008003704, 37.754738313997002],\n            [-122.38337920595491, 37.754736586250608],\n            [-122.383356657006146, 37.754734199690795],\n            [-122.383335820163737, 37.754731099315492],\n            [-122.383314965907985, 37.754727311939398],\n            [-122.383295841160447, 37.754723497196949],\n            [-122.383254063070865, 37.754713177184357],\n            [-122.383234885782983, 37.75470730309371],\n            [-122.383213961945074, 37.754700770182538],\n            [-122.383194767270453, 37.754694209911989],\n            [-122.383175537439726, 37.754686276198775],\n            [-122.383158037470992, 37.754678315390812],\n            [-122.383138807994129, 37.754670381666052],\n            [-122.383103737780345, 37.754651713981168],\n            [-122.383086185277548, 37.75464169354953],\n            [-122.383068615380594, 37.754630986667287],\n            [-122.383052774639708, 37.754620252154247],\n            [-122.383036916504807, 37.754608831191064],\n            [-122.383015731729387, 37.754592001250259],\n            [-122.38299259130558, 37.754566275663684],\n            [-122.382971180378888, 37.754540521890775],\n            [-122.382949752076243, 37.754514081940449],\n            [-122.382930053282664, 37.754487614354218],\n            [-122.382908625009904, 37.754461174396191],\n            [-122.382888908501968, 37.754434020360335],\n            [-122.382870920808742, 37.754406838701115],\n            [-122.382842850708954, 37.754363390808408],\n            [-122.382816907001839, 37.754323234339928],\n            [-122.382797016608123, 37.754289216082142],\n            [-122.382791480900465, 37.754275569725095],\n            [-122.382785928504248, 37.754261237457797],\n            [-122.38278210489284, 37.754246877022375],\n            [-122.382781722177867, 37.754231775164968],\n            [-122.382784449823419, 37.754202889097733],\n            [-122.382789271581657, 37.754188390821014],\n            [-122.382795840220822, 37.754174551362205],\n            [-122.382804155740061, 37.754161370721022],\n            [-122.382814217447034, 37.754148848908173],\n            [-122.382826043083483, 37.754137672365715],\n            [-122.382839615252593, 37.75412715464509],\n            [-122.382853204821586, 37.754117323645531],\n            [-122.382868575702929, 37.754109523814002],\n            [-122.382885693124038, 37.754102383077345],\n            [-122.382904591526582, 37.754097274061955],\n            [-122.382896892098685, 37.754066494402807],\n            [-122.382890922160428, 37.754035687111681],\n            [-122.382884969278336, 37.754005566273698],\n            [-122.382876487005475, 37.753943896449059],\n            [-122.382873975008934, 37.75391303391072],\n            [-122.382869733880582, 37.753882198997694],\n            [-122.382868951022118, 37.753851308833418],\n            [-122.382866421635015, 37.753819759846344],\n            [-122.382865638778583, 37.753788869681728],\n            [-122.38286753098933, 37.753727034381221],\n            [-122.382869667430043, 37.75367480879347],\n            [-122.382867485984363, 37.753656988767865],\n            [-122.382865286797127, 37.753638482299571],\n            [-122.382861376571569, 37.753620689893637],\n            [-122.382850096841622, 37.753585160622798],\n            [-122.382842745420064, 37.753568109920103],\n            [-122.382833665214591, 37.753551086561764],\n            [-122.382822855548582, 37.753534091107603],\n            [-122.382812063283737, 37.753517782100509],\n            [-122.382801288419827, 37.753502159540567],\n            [-122.382788801838672, 37.753487251326646],\n            [-122.382774586124242, 37.75347237018628],\n            [-122.382742765715449, 37.753445409495008],\n            [-122.382726873440859, 37.753432615860532],\n            [-122.382709269084074, 37.753420535751609],\n            [-122.382691682135089, 37.753409142362763],\n            [-122.382672383117907, 37.753398463047603],\n            [-122.382653119587403, 37.753389156614546],\n            [-122.382611168393765, 37.753371971889877],\n            [-122.382590227592559, 37.7533647524183],\n            [-122.382569321590282, 37.753358906113988],\n            [-122.382546703510585, 37.753353773605845],\n            [-122.382524103512239, 37.753349327255975],\n            [-122.382501520571083, 37.75334556763007],\n            [-122.382478972425403, 37.753343181170841],\n            [-122.382456441314361, 37.753341480611873],\n            [-122.382433945688362, 37.753341153208574],\n            [-122.382402821501856, 37.753341650348268],\n            [-122.38237864858533, 37.753343409903252],\n            [-122.382356222188207, 37.753345828558139],\n            [-122.382297501266095, 37.753349513077993],\n            [-122.38226810654271, 37.753349982559506],\n            [-122.382240423203967, 37.753349737974666],\n            [-122.382210993352999, 37.753348834550927],\n            [-122.382181546112378, 37.753347244671602],\n            [-122.382152081137065, 37.753344968342162],\n            [-122.382124328241176, 37.753341977937026],\n            [-122.382094811792641, 37.753337642237426],\n            [-122.38206700673382, 37.753332592473967],\n            [-122.382039184289724, 37.753326856255676],\n            [-122.38201134446112, 37.753320433582523],\n            [-122.38200001736864, 37.75331754288009],\n            [-122.381983487255724, 37.753313324729064],\n            [-122.381957341428489, 37.753305501265011],\n            [-122.3819294494578, 37.75329701950217],\n            [-122.38187705455077, 37.753277254112369],\n            [-122.381850839550978, 37.753266685100435],\n            [-122.3818017982653, 37.753242746046119],\n            [-122.381777242861062, 37.753229403614625],\n            [-122.381754416238635, 37.753216033574361],\n            [-122.381731572936843, 37.753201977344837],\n            [-122.381708677132991, 37.753185861496782],\n            [-122.381985040410456, 37.753169774197133],\n            [-122.382560765120331, 37.753136419940226],\n            [-122.382560989570067, 37.75313671714089],\n            [-122.382951309683904, 37.753114103639163],\n            [-122.383438933023925, 37.753085850281579],\n            [-122.383914427464433, 37.753058600498669],\n            [-122.384879974685347, 37.753002645165687],\n            [-122.385845520438053, 37.752946681373402],\n            [-122.385845731512404, 37.752946669205699],\n            [-122.386811064397406, 37.752890709951139],\n            [-122.386811676199414, 37.752890674609837],\n            [-122.387755875750031, 37.752835749697695],\n            [-122.387756291326852, 37.752835725460692],\n            [-122.387756280477618, 37.752835611637821],\n            [-122.387633974640565, 37.751559603455405],\n            [-122.387585270262662, 37.750263378063039],\n            [-122.388507729357968, 37.750205975353602],\n            [-122.389478017653872, 37.750145107673561],\n            [-122.390433038183829, 37.750118341633915],\n            [-122.391418367221192, 37.750140606282606],\n            [-122.391693805117924, 37.750111668488358],\n            [-122.391705979739527, 37.750110389401705],\n            [-122.391714686151033, 37.750109474739723],\n            [-122.391929934247997, 37.750086859865874],\n            [-122.392350740047519, 37.750026024134087],\n            [-122.392354048972692, 37.750025545503377],\n            [-122.392381992909165, 37.750021506018193],\n            [-122.393314555211816, 37.749918012051069],\n            [-122.393322792145199, 37.749917097944952],\n            [-122.393340265733656, 37.749915158351328],\n            [-122.395231400136637, 37.749808114846253],\n            [-122.395307862010839, 37.749803786070743],\n            [-122.396273544250747, 37.74974560058007],\n            [-122.397285415820363, 37.749684622841229],\n            [-122.40206163398004, 37.749396678541473],\n            [-122.402063015501824, 37.749396333205695],\n            [-122.402215286387033, 37.749358244852793],\n            [-122.402746245055127, 37.749375020002113],\n            [-122.402866303074774, 37.749478453789486],\n            [-122.402866309087059, 37.749478458911533],\n            [-122.402968925612569, 37.749550036933734],\n            [-122.403054692816028, 37.74954427306843],\n            [-122.403203674195439, 37.749534260068266],\n            [-122.403260968692152, 37.749530409553117],\n            [-122.403568849778438, 37.749475672986911],\n            [-122.403592456970202, 37.749471475909672],\n            [-122.403667613571599, 37.749458113882532],\n            [-122.403783562755194, 37.749432891426196],\n            [-122.403735650894049, 37.749583872707518],\n            [-122.403514246938869, 37.750281563827826],\n            [-122.403378511001179, 37.750679445903444],\n            [-122.403214572776321, 37.751164169122518],\n            [-122.403175027775376, 37.751281093014263],\n            [-122.403072643662085, 37.751794247946641],\n            [-122.403060331379024, 37.751915861053995],\n            [-122.403006670294943, 37.752445905732571],\n            [-122.402978169178084, 37.75275045704997],\n            [-122.40301031565609, 37.753201877425177],\n            [-122.403011715723153, 37.753221541143297],\n            [-122.403127143734139, 37.75447773377249],\n            [-122.403244936870763, 37.755759623462495],\n            [-122.403245024221292, 37.755760575231484],\n            [-122.403305530792395, 37.756165877853867],\n            [-122.403395700993769, 37.756471262485057],\n            [-122.403543859417937, 37.75680412126377],\n            [-122.403689260967766, 37.757015002579273],\n            [-122.403774084903432, 37.757138026202746],\n            [-122.403774405770974, 37.757138490742172],\n            [-122.404168659910013, 37.75752977302043],\n            [-122.404441730762329, 37.757748221369937],\n            [-122.40472107938929, 37.757950649275713],\n            [-122.404835145723425, 37.7580339263735],\n            [-122.405048169961901, 37.758189448369819],\n            [-122.405545221503274, 37.758536929330724],\n            [-122.405903135660481, 37.758934413706449],\n            [-122.406103779268008, 37.759196479511928],\n            [-122.406247868764623, 37.759429354319998],\n            [-122.406261953936678, 37.75945211819198],\n            [-122.406389357641601, 37.759804405761585],\n            [-122.406492391998796, 37.760255279712112],\n            [-122.406492697683589, 37.760686469836571],\n            [-122.406479479731502, 37.760730932047331],\n            [-122.4062826701159, 37.761392945250627],\n            [-122.406147061407296, 37.7616371808829],\n            [-122.406021608630979, 37.761863123291867],\n            [-122.405925510731336, 37.762011914887523],\n            [-122.405653838302513, 37.762432552128487],\n            [-122.405384490436404, 37.76297005284507],\n            [-122.40532469627189, 37.76313750682079],\n            [-122.405258413683796, 37.763323129887908],\n            [-122.405203088479681, 37.763478066930332],\n            [-122.405104592203571, 37.763852244172895],\n            [-122.405059622300016, 37.764310557738277],\n            [-122.405089602982216, 37.764628538373131],\n            [-122.404841911264157, 37.764643492872132],\n            [-122.404496977488066, 37.764664317561468],\n            [-122.403527034519726, 37.764722870371436],\n            [-122.402563396844656, 37.764781034314389],\n            [-122.401598999326723, 37.764839236400867],\n            [-122.401604204317508, 37.764894634517518],\n            [-122.401720515816834, 37.766132520250999],\n            [-122.40075504647362, 37.766190486570189],\n            [-122.399760960198876, 37.766250252443854],\n            [-122.39980174760619, 37.766587745781216],\n            [-122.399677637243116, 37.766695444602661],\n            [-122.4004285874814, 37.76730030349627],\n            [-122.400680751363893, 37.767503407870436],\n            [-122.400877239583821, 37.76748837440357],\n            [-122.401842503677628, 37.76743077711658],\n            [-122.401962350744, 37.768706209224241],\n            [-122.402926809989424, 37.76864812762463],\n            [-122.403037758616776, 37.769828657390953],\n            [-122.403406518421917, 37.769807099957397],\n            [-122.403615112128733, 37.769893190404822],\n            [-122.403877699904385, 37.770062866265505],\n            [-122.403531054507056, 37.770336670466769],\n            [-122.401656665936628, 37.77181711392474],\n            [-122.399647849152032, 37.773403860176856],\n            [-122.399516440682405, 37.773507653276255],\n            [-122.399433130909728, 37.773573455617395],\n            [-122.400212340411557, 37.77419510487973],\n            [-122.400592319049849, 37.774498244536282],\n            [-122.400981567656032, 37.774808775969753],\n            [-122.402524096584528, 37.776039321403807],\n            [-122.40337073826143, 37.776714700215486],\n            [-122.403505778866929, 37.776822422431877],\n            [-122.403673439982725, 37.776956165214415],\n            [-122.404070256642925, 37.777272702482797],\n            [-122.404605505853894, 37.777699659794813],\n            [-122.405068508898097, 37.778068981419388],\n            [-122.405615266425855, 37.778505104539292],\n            [-122.404431250807633, 37.779440334605447],\n            [-122.403387209275081, 37.78026497235011],\n            [-122.401159718585049, 37.782024266952142]\n          ]\n        ]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {OBJECTID: 2, ZIP_CODE: 94105, ID: 94105},\n      geometry: {\n        type: 'Polygon',\n        coordinates: [\n          [\n            [-122.39249932896719, 37.793768814133983],\n            [-122.391890260341384, 37.794278544568918],\n            [-122.391788865572423, 37.794170982455135],\n            [-122.39173429034625, 37.79420276052317],\n            [-122.391666728649753, 37.794132425256194],\n            [-122.391723034266192, 37.79410061945832],\n            [-122.391673228351905, 37.794047854124599],\n            [-122.391982015107928, 37.793871906128679],\n            [-122.391589022782, 37.793527982873798],\n            [-122.391723231555744, 37.793429001692992],\n            [-122.390805927608938, 37.792657675413892],\n            [-122.388808599369057, 37.790978116182679],\n            [-122.388930714411984, 37.790880018842998],\n            [-122.388611692601799, 37.790313089306778],\n            [-122.388048971491713, 37.790507516256234],\n            [-122.388012417064502, 37.790431188672287],\n            [-122.388369268465311, 37.790308044637399],\n            [-122.388285919009036, 37.790161047422416],\n            [-122.388320274159014, 37.790150883121463],\n            [-122.388243932142601, 37.790007207265845],\n            [-122.388219415789919, 37.789995925591761],\n            [-122.388076857804336, 37.790038725053051],\n            [-122.38779803320179, 37.790149885537438],\n            [-122.385731305877229, 37.790973806479329],\n            [-122.385715648397209, 37.790970622998962],\n            [-122.385703294724394, 37.790961206457723],\n            [-122.385509561738004, 37.790556391724344],\n            [-122.385507518014222, 37.790544063409705],\n            [-122.385514141658973, 37.790532283492631],\n            [-122.385686917933171, 37.79045260764569],\n            [-122.387606646474296, 37.789787359176458],\n            [-122.387348795424046, 37.789311467853956],\n            [-122.38734757309517, 37.78931176210844],\n            [-122.385363735345749, 37.789788908162748],\n            [-122.385346470166525, 37.789790557672781],\n            [-122.385330865935444, 37.789789433734306],\n            [-122.3853151742195, 37.789784877582385],\n            [-122.385301142770246, 37.789777548268411],\n            [-122.385290501190326, 37.789767417313975],\n            [-122.385283285054584, 37.789755858694043],\n            [-122.385108047186435, 37.789329458915937],\n            [-122.385106003217075, 37.789317130597112],\n            [-122.385109132387825, 37.789304032849302],\n            [-122.385115773404124, 37.789292939120834],\n            [-122.385127656568173, 37.78928382174719],\n            [-122.385141339390941, 37.789277422487608],\n            [-122.385148542800621, 37.789220309385662],\n            [-122.387188020139192, 37.788773590697055],\n            [-122.387049561519532, 37.788228488916552],\n            [-122.385265755459955, 37.788520039162925],\n            [-122.385250134063114, 37.78851822849537],\n            [-122.385234425193858, 37.78851298588809],\n            [-122.385222089078539, 37.788504256015905],\n            [-122.385214890495845, 37.788493383558084],\n            [-122.385126670096767, 37.788154179856562],\n            [-122.385126356426341, 37.788141823596902],\n            [-122.385129502623784, 37.788129412294914],\n            [-122.385137873116122, 37.788118290909864],\n            [-122.385149773868434, 37.788109860244717],\n            [-122.385165203482913, 37.788104119771369],\n            [-122.38712311120571, 37.787785749180493],\n            [-122.387152415559953, 37.787781160094404],\n            [-122.38716964498991, 37.787778137163613],\n            [-122.38718858690207, 37.78777440037284],\n            [-122.387205798545097, 37.787770691273494],\n            [-122.387224740799539, 37.787766954471365],\n            [-122.387241935339802, 37.787762558917869],\n            [-122.387260859452994, 37.787758135677656],\n            [-122.387278054335084, 37.787753740113331],\n            [-122.387312408509445, 37.787743576101576],\n            [-122.387329567801103, 37.787737807654125],\n            [-122.387346745228243, 37.787732725636424],\n            [-122.387363887068403, 37.787726270740649],\n            [-122.38738104704403, 37.787720502274603],\n            [-122.38740694457185, 37.787241442038656],\n            [-122.387019444956891, 37.787247644385083],\n            [-122.384558944804354, 37.787400993480382],\n            [-122.384543323667074, 37.787399182993411],\n            [-122.384527632511421, 37.787394627009306],\n            [-122.384515296650974, 37.787385896512234],\n            [-122.384504655873897, 37.787375765751548],\n            [-122.384499135159118, 37.787362806267062],\n            [-122.384342210870813, 37.785748083262355],\n            [-122.384341897348037, 37.785735727269817],\n            [-122.384346773449252, 37.785723288336335],\n            [-122.38435689108006, 37.785712825798925],\n            [-122.384370521056837, 37.785704367292539],\n            [-122.384385968349036, 37.785699313626168],\n            [-122.387217967726542, 37.785525599931667],\n            [-122.387242186237785, 37.785525212275893],\n            [-122.387269846695702, 37.785524082797316],\n            [-122.387295742393547, 37.78552160811531],\n            [-122.387323367958444, 37.785519105736952],\n            [-122.387349245861117, 37.785515944605116],\n            [-122.387375089561743, 37.785511410569285],\n            [-122.387402662781668, 37.785506848841521],\n            [-122.387454279688384, 37.785495034977437],\n            [-122.387478323373855, 37.785487782842686],\n            [-122.387504079475306, 37.785479816566138],\n            [-122.387528105357717, 37.785471877983142],\n            [-122.387553826899222, 37.785462538802953],\n            [-122.387580894103834, 37.785438070169313],\n            [-122.387630346985745, 37.78486455148672],\n            [-122.385458308223278, 37.78499338709468],\n            [-122.385413881876744, 37.784606785946664],\n            [-122.387221366105805, 37.784501641660896],\n            [-122.387418079949683, 37.784479264504995],\n            [-122.38743876829875, 37.784476186423468],\n            [-122.387483534893533, 37.784467229088612],\n            [-122.387528231689217, 37.784455525961853],\n            [-122.387550562288524, 37.78444898795393],\n            [-122.387571145938807, 37.78444179118685],\n            [-122.387593442333781, 37.784433880546885],\n            [-122.387613991073025, 37.784425310610295],\n            [-122.38765505365474, 37.784406798388098],\n            [-122.387673819852623, 37.78439619708557],\n            [-122.387677823231684, 37.784349435820396],\n            [-122.387709046749492, 37.783875783688671],\n            [-122.386286930602978, 37.783958976243902],\n            [-122.386236533710786, 37.783405597391891],\n            [-122.387525601081578, 37.78333071590594],\n            [-122.387695596747974, 37.783278550154108],\n            [-122.387751878035047, 37.783246059476667],\n            [-122.387776877347846, 37.78286796141245],\n            [-122.3875502225155, 37.782801544578085],\n            [-122.387525883466154, 37.782797127453357],\n            [-122.387484228568439, 37.78279230054234],\n            [-122.387463418560699, 37.782790573250665],\n            [-122.387440913647538, 37.782790246810194],\n            [-122.387420138539767, 37.78278989267335],\n            [-122.387388984601131, 37.782789704683182],\n            [-122.387368261829351, 37.782791409869013],\n            [-122.387347521611616, 37.782792428607252],\n            [-122.384758972173714, 37.782940280456494],\n            [-122.384743316428853, 37.782937096842417],\n            [-122.384732711445736, 37.782928338977264],\n            [-122.384679972094801, 37.782554918115103],\n            [-122.384681388329753, 37.782542534464426],\n            [-122.384691505480149, 37.782532071892298],\n            [-122.384705187096728, 37.782525672675533],\n            [-122.387509249137921, 37.78234690330077],\n            [-122.387528224534123, 37.782344539065186],\n            [-122.387554136561661, 37.78234275076899],\n            [-122.38762294594062, 37.782322839482177],\n            [-122.387787765874378, 37.782275144853472],\n            [-122.387765464889313, 37.78194244138043],\n            [-122.388106738902522, 37.781931906493995],\n            [-122.388231340039766, 37.782146697467269],\n            [-122.388304301898813, 37.782356717503951],\n            [-122.388306939892615, 37.782385221520776],\n            [-122.389843136047602, 37.783611740842574],\n            [-122.389846392025618, 37.783609176617361],\n            [-122.390856721023212, 37.784410569188324],\n            [-122.391599105853345, 37.783822668268179],\n            [-122.391600764141245, 37.783823989838545],\n            [-122.392032919786118, 37.784168354830349],\n            [-122.392118766536498, 37.784205306785267],\n            [-122.392215026316663, 37.784279352365694],\n            [-122.392216553530702, 37.784278123341721],\n            [-122.39285700396303, 37.784773072758867],\n            [-122.39286959393705, 37.78478280203197],\n            [-122.39343711789931, 37.784459123881106],\n            [-122.394398389309941, 37.783701667981575],\n            [-122.395160622349934, 37.78431101230386],\n            [-122.395895701657864, 37.784896929203114],\n            [-122.396705177550587, 37.785542130425938],\n            [-122.397811613142864, 37.784666586003652],\n            [-122.399369533643153, 37.785899247741973],\n            [-122.400468483886854, 37.785030285141588],\n            [-122.400994549885382, 37.785441790992316],\n            [-122.400998469557948, 37.785444857061968],\n            [-122.401480059865179, 37.785821567351917],\n            [-122.401489835489045, 37.785829214187501],\n            [-122.402025419766176, 37.786248152290575],\n            [-122.402575227394536, 37.786678208153539],\n            [-122.403028193190352, 37.787024418822838],\n            [-122.403028734856406, 37.78702485040828],\n            [-122.403342641535644, 37.787274627660381],\n            [-122.403430800369534, 37.787641848645734],\n            [-122.403239953883428, 37.787802352067843],\n            [-122.40290309900054, 37.788085647297414],\n            [-122.402903089488873, 37.788085654318181],\n            [-122.402404665507532, 37.788463925757384],\n            [-122.402065730098272, 37.788721152097366],\n            [-122.401375490979433, 37.789264321921429],\n            [-122.400067228055164, 37.790303858609981],\n            [-122.399919790020746, 37.790414442896498],\n            [-122.399480001759599, 37.790744297277485],\n            [-122.399222136170906, 37.790956214990921],\n            [-122.39914859901539, 37.791016648609592],\n            [-122.399148598683425, 37.79101664916432],\n            [-122.398264448861653, 37.791716058450703],\n            [-122.39826444614279, 37.791716060417308],\n            [-122.397840810091907, 37.792047595331439],\n            [-122.39738344591872, 37.792405521295422],\n            [-122.396504486670068, 37.793097082520163],\n            [-122.396376076969489, 37.793198086984006],\n            [-122.396302004629632, 37.793256350149633],\n            [-122.396302004290646, 37.793256350429786],\n            [-122.395983670970253, 37.793501461560965],\n            [-122.395622922555773, 37.793779228585429],\n            [-122.39533276386878, 37.794011429145591],\n            [-122.395317307728533, 37.794023797689903],\n            [-122.394971722038662, 37.794300351169447],\n            [-122.394747579547172, 37.794479718347191],\n            [-122.394745733667804, 37.794478246556643],\n            [-122.394745701490038, 37.794478274267938],\n            [-122.394150899798674, 37.794987788593353],\n            [-122.39270797067924, 37.793614415765255],\n            [-122.392702063215523, 37.793608792659974],\n            [-122.39249932896719, 37.793768814133983]\n          ]\n        ]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {OBJECTID: 3, ZIP_CODE: 94129, ID: 94129},\n      geometry: {\n        type: 'Polygon',\n        coordinates: [\n          [\n            [-122.470990721149789, 37.787534455433345],\n            [-122.472290534181823, 37.787395917162272],\n            [-122.472401902490546, 37.787384046501884],\n            [-122.47254342327507, 37.787368961705944],\n            [-122.472782224474642, 37.787331534391747],\n            [-122.473316434470121, 37.787247805418339],\n            [-122.474432824368861, 37.787072820298278],\n            [-122.474584006514732, 37.787049123020516],\n            [-122.47616220885665, 37.786978730627588],\n            [-122.478707989065171, 37.78691405835],\n            [-122.481375583614479, 37.787198893328011],\n            [-122.483910676418589, 37.787705653817092],\n            [-122.483911841345289, 37.78771598691722],\n            [-122.484019551359538, 37.788671434543716],\n            [-122.484071292407094, 37.789571562974182],\n            [-122.484214987310182, 37.789767611906584],\n            [-122.484758163249651, 37.789969442365155],\n            [-122.485095392905748, 37.790094746949087],\n            [-122.486221786002261, 37.790513270391187],\n            [-122.486196663014411, 37.790544596769486],\n            [-122.486148110204482, 37.790605847513199],\n            [-122.486108757859654, 37.790687545376898],\n            [-122.486034586054117, 37.790761588869977],\n            [-122.48595999185838, 37.790819844471812],\n            [-122.485896199163861, 37.790893713055688],\n            [-122.485740384038749, 37.791021323419344],\n            [-122.48558351329909, 37.791238913899868],\n            [-122.485411383576832, 37.791468435611826],\n            [-122.485284654257228, 37.791712987869268],\n            [-122.484994993901111, 37.791948608146861],\n            [-122.484752903676167, 37.79221570331633],\n            [-122.484541285320944, 37.792522116372695],\n            [-122.484363647892437, 37.79274005429609],\n            [-122.484183607122475, 37.793062416612024],\n            [-122.484072129345151, 37.793295035940602],\n            [-122.483858237133077, 37.793646123471206],\n            [-122.483593432919847, 37.794035150786577],\n            [-122.48329368676049, 37.794671303481294],\n            [-122.483518531231283, 37.794730014502065],\n            [-122.48308859662535, 37.79561146099627],\n            [-122.482999467368202, 37.795903449272551],\n            [-122.48285101972256, 37.796177893057802],\n            [-122.482765752291186, 37.796484924353678],\n            [-122.482667211606753, 37.796813467545597],\n            [-122.482504820847737, 37.797149264997877],\n            [-122.482349642968302, 37.797495928150028],\n            [-122.482180347467406, 37.797832527598885],\n            [-122.482169137762298, 37.797996159399602],\n            [-122.482136359830861, 37.798129936813986],\n            [-122.482085493238017, 37.798234488898757],\n            [-122.482121580114068, 37.798289507917929],\n            [-122.482129545147487, 37.798328517967903],\n            [-122.482111649834962, 37.798371396374968],\n            [-122.482102148276397, 37.798404519393337],\n            [-122.482087585279373, 37.798442534909526],\n            [-122.482079722552115, 37.798472196426395],\n            [-122.482040900643639, 37.798509246213612],\n            [-122.481958513784505, 37.798535353148957],\n            [-122.481870239865685, 37.798535463289312],\n            [-122.481831454802517, 37.798573885582073],\n            [-122.48191348856912, 37.79872908258961],\n            [-122.481933747767386, 37.798774753652147],\n            [-122.481894064444091, 37.798779540742402],\n            [-122.481782518807989, 37.79868595916038],\n            [-122.481759479485277, 37.798795537302446],\n            [-122.481735532663109, 37.798806240772073],\n            [-122.481729674725472, 37.79884616987701],\n            [-122.481697076819628, 37.79885701872184],\n            [-122.481553967429107, 37.798748172710248],\n            [-122.481544740366218, 37.798791592096414],\n            [-122.481675391067768, 37.798887599511232],\n            [-122.481685177680191, 37.798930012650303],\n            [-122.481641997341171, 37.798933485499177],\n            [-122.481619981772425, 37.798951710306021],\n            [-122.481601609693158, 37.798976741512377],\n            [-122.481583384160913, 37.799007264136819],\n            [-122.481561643359143, 37.799035785621555],\n            [-122.481552599461594, 37.799086069282282],\n            [-122.48153672724159, 37.799139901359283],\n            [-122.481507471077649, 37.799211126714575],\n            [-122.481470873600131, 37.799266680501994],\n            [-122.481417267273812, 37.799333507835762],\n            [-122.481380082795965, 37.799367095921824],\n            [-122.481394839952742, 37.799401184738606],\n            [-122.48138749011072, 37.799450066445814],\n            [-122.481313103352264, 37.799516556146521],\n            [-122.481199920275785, 37.799556228466017],\n            [-122.481106226731853, 37.799612741364335],\n            [-122.481068868952889, 37.799704704484391],\n            [-122.481063386681015, 37.799823601791012],\n            [-122.481042139949025, 37.799870656721012],\n            [-122.48098682060791, 37.799938199625082],\n            [-122.480980184705871, 37.800013851703859],\n            [-122.480977156432658, 37.800224730569639],\n            [-122.480974804661557, 37.800331213761126],\n            [-122.480860274222692, 37.800385329797535],\n            [-122.480757965088657, 37.800443360304584],\n            [-122.48067857879505, 37.800582040732152],\n            [-122.48065611449222, 37.800648344612128],\n            [-122.480592381330325, 37.800724956178229],\n            [-122.480537665874181, 37.800815150409605],\n            [-122.480468568377589, 37.800950224199951],\n            [-122.480375485908439, 37.801094628286094],\n            [-122.480295978813317, 37.801293743123836],\n            [-122.480202328037436, 37.801416867810858],\n            [-122.480181840275407, 37.801557305763211],\n            [-122.480071801739967, 37.801844835145566],\n            [-122.480027318791514, 37.802059156846411],\n            [-122.480044134726015, 37.802235365083838],\n            [-122.480004943470632, 37.80238847850972],\n            [-122.479965705600534, 37.802604771748101],\n            [-122.479928024203545, 37.802749618690633],\n            [-122.479899085376999, 37.802897752511299],\n            [-122.479813341330441, 37.803057827736559],\n            [-122.479734279947053, 37.803208863153962],\n            [-122.479678141843124, 37.803310755542739],\n            [-122.479612025097651, 37.803427923840943],\n            [-122.479496444899141, 37.803572704736546],\n            [-122.479357004588351, 37.803861413494445],\n            [-122.479173928312875, 37.80433146553451],\n            [-122.479146809127258, 37.804483001950985],\n            [-122.479060667102701, 37.804693214811543],\n            [-122.478953175659996, 37.804881810346664],\n            [-122.478815220557294, 37.805291358623961],\n            [-122.47872883882674, 37.805492647931004],\n            [-122.478723432948883, 37.805679530333919],\n            [-122.47869664200617, 37.805843422292654],\n            [-122.478685946257201, 37.805961720018743],\n            [-122.478628322791295, 37.806008011253461],\n            [-122.478654742843744, 37.806089976088074],\n            [-122.478631304779441, 37.806119899160173],\n            [-122.478660343597923, 37.806170230012903],\n            [-122.478638955177018, 37.806277032642242],\n            [-122.478627125019798, 37.806352771870088],\n            [-122.478625044107972, 37.806469551574978],\n            [-122.47857586751384, 37.806637939992576],\n            [-122.478562516078711, 37.80678649853526],\n            [-122.478544650108333, 37.806960541692234],\n            [-122.478526703332861, 37.807066600081164],\n            [-122.478526389161814, 37.807184723319764],\n            [-122.478521297177736, 37.807253482414033],\n            [-122.478488208711909, 37.807311036148292],\n            [-122.478483958170003, 37.807411370608691],\n            [-122.478496304822514, 37.807549883734964],\n            [-122.478476156109295, 37.807833156107016],\n            [-122.478405186887699, 37.808093245296376],\n            [-122.478343748883177, 37.808126216988313],\n            [-122.478060427750734, 37.808278265895638],\n            [-122.477897062640963, 37.80844925522419],\n            [-122.477885395973601, 37.808531172189731],\n            [-122.477923697644769, 37.808669250052077],\n            [-122.477956528906134, 37.809251736581921],\n            [-122.477922196862778, 37.80978247039468],\n            [-122.477956931601639, 37.810111519960003],\n            [-122.477924513902849, 37.810324264541741],\n            [-122.477975357212003, 37.810543166576302],\n            [-122.477691959274622, 37.810627579828761],\n            [-122.477738440983671, 37.81094269802653],\n            [-122.477669662799912, 37.810960332923507],\n            [-122.477465352217308, 37.810997758254302],\n            [-122.4773147668257, 37.811025342092201],\n            [-122.476951827952391, 37.810983355163785],\n            [-122.476621797907725, 37.810876948869407],\n            [-122.47656163509636, 37.810893065263848],\n            [-122.476466638674822, 37.81083628492037],\n            [-122.47639876264958, 37.810757761311969],\n            [-122.476244453139699, 37.810423848047549],\n            [-122.476192907539087, 37.810243414175943],\n            [-122.47615497008627, 37.809858792499412],\n            [-122.47604874198008, 37.809640130705603],\n            [-122.475967371125094, 37.809574880888988],\n            [-122.475790153494444, 37.809485827869665],\n            [-122.475539966877108, 37.809387008587656],\n            [-122.474949730564461, 37.809260233883315],\n            [-122.474802168498073, 37.809179610065499],\n            [-122.474477490769161, 37.809143842083898],\n            [-122.474059299537672, 37.809106891534391],\n            [-122.473248913495638, 37.809099164155811],\n            [-122.472667246163553, 37.80903404071298],\n            [-122.472248345244111, 37.80897031306057],\n            [-122.471807567969009, 37.808865058985567],\n            [-122.471692590128313, 37.808861156356251],\n            [-122.471577117792876, 37.808857237159089],\n            [-122.471241422813662, 37.80879760884919],\n            [-122.470932885927255, 37.808717610499883],\n            [-122.47066006806898, 37.808613665617798],\n            [-122.470600816238615, 37.80859886080146],\n            [-122.470032562336371, 37.809430372877515],\n            [-122.469989867152222, 37.809452374737276],\n            [-122.469923620349192, 37.809434939483481],\n            [-122.469403337873828, 37.809203958897747],\n            [-122.469386781047135, 37.809167151824653],\n            [-122.469446470968407, 37.809067952374448],\n            [-122.469513627885206, 37.809054469737255],\n            [-122.470046113471852, 37.809288679655658],\n            [-122.470536336868321, 37.808582769832967],\n            [-122.47042036446561, 37.808452854807648],\n            [-122.470227327454069, 37.808354443608728],\n            [-122.470098624189163, 37.80826663136105],\n            [-122.470013817898405, 37.808202121652926],\n            [-122.469815463486142, 37.808098991213633],\n            [-122.469586546186093, 37.807953106986339],\n            [-122.469305300471973, 37.807727061403774],\n            [-122.469233592741006, 37.807568936815628],\n            [-122.469112342826094, 37.807370435141976],\n            [-122.46886886007195, 37.807066844008062],\n            [-122.468789265438318, 37.807002933173059],\n            [-122.468641769161479, 37.806924361175163],\n            [-122.468442727148087, 37.806860383444018],\n            [-122.468303117397753, 37.806818075943092],\n            [-122.46814816670377, 37.806980670547468],\n            [-122.46804250856195, 37.806913074050627],\n            [-122.468204198687829, 37.806743499513175],\n            [-122.468154584727131, 37.80670037662253],\n            [-122.467927641872478, 37.806563383834956],\n            [-122.4677672527434, 37.806455496134681],\n            [-122.467355591928154, 37.806141659736177],\n            [-122.467203291926239, 37.806012347645776],\n            [-122.466996296046148, 37.805909356729394],\n            [-122.466671493417238, 37.805802836197401],\n            [-122.466463320033583, 37.805982110961864],\n            [-122.466652133036774, 37.805790797867139],\n            [-122.466274152924925, 37.805653990321176],\n            [-122.466075349709101, 37.80558203392561],\n            [-122.465895016150796, 37.805570618742252],\n            [-122.465648753037854, 37.805488195293123],\n            [-122.46546102999136, 37.805393808021854],\n            [-122.464551731906468, 37.805113664168701],\n            [-122.464230324554308, 37.805004333527904],\n            [-122.463987997870177, 37.804939695859083],\n            [-122.463579617827847, 37.804879883064366],\n            [-122.463271699005631, 37.804887756693624],\n            [-122.462952230341088, 37.804917109899002],\n            [-122.4624302743036, 37.805013698161765],\n            [-122.462214023782167, 37.805018669869817],\n            [-122.462027122615794, 37.804955166469341],\n            [-122.461896643188638, 37.804930554615567],\n            [-122.461601325019004, 37.804956755736356],\n            [-122.461272453201914, 37.805023344559039],\n            [-122.461007547032963, 37.805086808651389],\n            [-122.459772513833471, 37.805253612450713],\n            [-122.45957795006224, 37.805293241948746],\n            [-122.459540191073017, 37.805305543773983],\n            [-122.45950068434351, 37.805317187894794],\n            [-122.459462907558404, 37.805328803259258],\n            [-122.459423363879012, 37.805339074505127],\n            [-122.45938555118417, 37.805349316978521],\n            [-122.459306427886148, 37.805368486538775],\n            [-122.459227232780066, 37.805384910313265],\n            [-122.459185886621981, 37.805392464497949],\n            [-122.459106618316682, 37.805406142481793],\n            [-122.459065217794489, 37.805411637333286],\n            [-122.459025547917307, 37.805417103422087],\n            [-122.458984129270405, 37.80542191181479],\n            [-122.458944422811243, 37.805426005021417],\n            [-122.458902967930442, 37.80542944052501],\n            [-122.458861494934339, 37.805432189583698],\n            [-122.458788912310027, 37.805436828799479],\n            [-122.458735345621889, 37.80544046541047],\n            [-122.458683526998115, 37.80544475969581],\n            [-122.458631726477662, 37.805449740388731],\n            [-122.458578213760234, 37.805455436499734],\n            [-122.458526449095928, 37.805461790012899],\n            [-122.458474703215558, 37.805468829647623],\n            [-122.458371283182728, 37.805485655405761],\n            [-122.458319609004732, 37.805495440705506],\n            [-122.458269665819927, 37.805505197514321],\n            [-122.45821802818655, 37.805516356173719],\n            [-122.458168120492331, 37.805527485811837],\n            [-122.458116519376176, 37.805540017007239],\n            [-122.458066648197928, 37.805552519182882],\n            [-122.457989327072951, 37.805574405126777],\n            [-122.45793619470966, 37.805594515430641],\n            [-122.457883043876322, 37.805613939560359],\n            [-122.457829874920449, 37.805632677510189],\n            [-122.457774957510779, 37.805650757180459],\n            [-122.457721751946011, 37.805668121951648],\n            [-122.457666780196845, 37.805684142829186],\n            [-122.457610078443324, 37.805700191847833],\n            [-122.457500062415335, 37.80572948720183],\n            [-122.457443287865871, 37.805742790973085],\n            [-122.457386495190917, 37.805755408011883],\n            [-122.457329684053221, 37.805767338598564],\n            [-122.457272855492562, 37.805778582715845],\n            [-122.457186701695477, 37.805793746855791],\n            [-122.457077909022615, 37.805803793319789],\n            [-122.456970882463025, 37.805815183288864],\n            [-122.456862180533747, 37.805828661426311],\n            [-122.456755226634087, 37.80584279746536],\n            [-122.456648326952561, 37.805858992150092],\n            [-122.456541463411881, 37.805876559873688],\n            [-122.456434635998889, 37.805895500361686],\n            [-122.45632959276756, 37.805916471347693],\n            [-122.456224568256204, 37.805938128659257],\n            [-122.456119597596228, 37.80596184517497],\n            [-122.456014644961741, 37.805986248302439],\n            [-122.45591147681688, 37.806012681382633],\n            [-122.455806614105612, 37.806040516209428],\n            [-122.455705248815832, 37.806069666405428],\n            [-122.455564429228914, 37.806112518618505],\n            [-122.45530695988451, 37.806195761893825],\n            [-122.454600415883462, 37.806430130022392],\n            [-122.454483234784888, 37.806468999744823],\n            [-122.454353658700001, 37.806478701096999],\n            [-122.454308145719423, 37.806459540393945],\n            [-122.454293829263207, 37.806375996256122],\n            [-122.454085665791084, 37.806359530611644],\n            [-122.454069929877903, 37.806353610767474],\n            [-122.453815604080873, 37.806293271483817],\n            [-122.453295386032664, 37.806259311412973],\n            [-122.452781551105744, 37.806270567825713],\n            [-122.452438711570082, 37.806267316310901],\n            [-122.451653324871984, 37.806353109244483],\n            [-122.450906745259303, 37.80653233722969],\n            [-122.450459653590798, 37.806646175036533],\n            [-122.44991286747026, 37.806721142700994],\n            [-122.449819483247254, 37.806724746830461],\n            [-122.449720673642986, 37.806719513093618],\n            [-122.449631038513971, 37.806734042766898],\n            [-122.449554038474531, 37.806768278664137],\n            [-122.44947869660497, 37.806799740182214],\n            [-122.449399659671798, 37.806822335243758],\n            [-122.449304851007483, 37.806837636909691],\n            [-122.449171524916196, 37.806836407131136],\n            [-122.449109070409847, 37.806831258752986],\n            [-122.449048183710957, 37.806819903592029],\n            [-122.449010891791161, 37.806784123494651],\n            [-122.448891660899136, 37.806726348099637],\n            [-122.448806459828916, 37.806711961234221],\n            [-122.448728288255808, 37.806701578532227],\n            [-122.448565239272398, 37.806755090545202],\n            [-122.448529100304583, 37.806763241657009],\n            [-122.448455091339923, 37.806133486140737],\n            [-122.448455258275729, 37.806133277363898],\n            [-122.448323332142422, 37.805007750605469],\n            [-122.448321161555853, 37.804993824977359],\n            [-122.448279145759457, 37.80472422506687],\n            [-122.44824552349904, 37.804508484024247],\n            [-122.448240728857812, 37.804477717258706],\n            [-122.448240723025904, 37.804477679722268],\n            [-122.448245764546613, 37.8044754914729],\n            [-122.448316879890498, 37.804444627382082],\n            [-122.448814547024654, 37.804228638340902],\n            [-122.448954929708933, 37.80412855834809],\n            [-122.449124213448584, 37.804007874392056],\n            [-122.449253815658196, 37.803861977230383],\n            [-122.449388062152011, 37.803710849923448],\n            [-122.449495662264184, 37.803470319431604],\n            [-122.449583722697156, 37.803153095621241],\n            [-122.449583713807527, 37.803152915295549],\n            [-122.449565462756809, 37.802791419060213],\n            [-122.449536106109235, 37.802697377072583],\n            [-122.449460220896157, 37.80245428555321],\n            [-122.449178591741017, 37.802073857413127],\n            [-122.449043488821943, 37.801965383441527],\n            [-122.448802640091088, 37.801772003872607],\n            [-122.448359651469772, 37.801586782043685],\n            [-122.447921599691895, 37.801532283988202],\n            [-122.447857007904148, 37.801596177616553],\n            [-122.447819731578562, 37.801633051558142],\n            [-122.447819572978844, 37.801633208279924],\n            [-122.447802865090509, 37.801525678628579],\n            [-122.447614227653389, 37.80032479990944],\n            [-122.447613279369918, 37.80032370169468],\n            [-122.447466030932901, 37.799389886853575],\n            [-122.447400275900733, 37.798948048802856],\n            [-122.447341437979304, 37.798552685345861],\n            [-122.447327769221047, 37.798519415660031],\n            [-122.447303043858923, 37.798459232650295],\n            [-122.447209582420982, 37.797849561838987],\n            [-122.44715829626513, 37.797515005478481],\n            [-122.44715829625072, 37.79751500492933],\n            [-122.447014738232738, 37.796578510197754],\n            [-122.447014738218328, 37.796578509648619],\n            [-122.446928896449293, 37.796018515191513],\n            [-122.44687098056005, 37.795640691997477],\n            [-122.446751148304088, 37.794858932799087],\n            [-122.446727777275527, 37.794706465308671],\n            [-122.446727777261131, 37.794706464759514],\n            [-122.446587862952981, 37.793765120337646],\n            [-122.446446456540414, 37.792813716046261],\n            [-122.446446033268856, 37.792810866507708],\n            [-122.446299573716246, 37.791878694429421],\n            [-122.446299547924625, 37.791878529215651],\n            [-122.44720637942703, 37.791763091830468],\n            [-122.447679208068394, 37.79170289872647],\n            [-122.449367313308201, 37.791487980191171],\n            [-122.449385188501296, 37.791484927305568],\n            [-122.450995459060991, 37.791209906278311],\n            [-122.452035629818212, 37.790998907609811],\n            [-122.454248357567437, 37.79059310209788],\n            [-122.455878319348855, 37.790294143976332],\n            [-122.457498733292852, 37.789996912625632],\n            [-122.459011873160264, 37.789719335764374],\n            [-122.459028627866218, 37.789715983297555],\n            [-122.459250455476877, 37.789713291862398],\n            [-122.45947565027717, 37.789710559160014],\n            [-122.459781586189493, 37.789596250165474],\n            [-122.459925547070256, 37.789542753604124],\n            [-122.468653534340191, 37.787783523544832],\n            [-122.470990721149789, 37.787534455433345]\n          ]\n        ]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {OBJECTID: 4, ZIP_CODE: 94121, ID: 94121},\n      geometry: {\n        type: 'Polygon',\n        coordinates: [\n          [\n            [-122.504456509027335, 37.788067554312491],\n            [-122.504150949920984, 37.788096097763379],\n            [-122.504066815467581, 37.788120877294119],\n            [-122.504049145771674, 37.78810744254686],\n            [-122.503997231067004, 37.788107638193928],\n            [-122.503846231021797, 37.788091662877633],\n            [-122.503713944876083, 37.788063694207068],\n            [-122.503612889329972, 37.788038628655784],\n            [-122.503526395190363, 37.78804009845387],\n            [-122.503485137277139, 37.78805041389267],\n            [-122.503463545305024, 37.78801987747579],\n            [-122.503373498826377, 37.788017973822534],\n            [-122.503335534005146, 37.788022052592311],\n            [-122.503263415949803, 37.788043193399247],\n            [-122.503234378285072, 37.788057421563131],\n            [-122.503243398050046, 37.788071003120102],\n            [-122.503209152201507, 37.78808463302547],\n            [-122.503179577522019, 37.788078954832578],\n            [-122.503144887269229, 37.788076110778647],\n            [-122.503077958752755, 37.78809716302807],\n            [-122.503049013609541, 37.788114823274398],\n            [-122.503006581160705, 37.78814576070333],\n            [-122.502956321560973, 37.788143180813591],\n            [-122.502925535751373, 37.788156752131144],\n            [-122.502902751007483, 37.788146151342978],\n            [-122.502865053026014, 37.788095972678335],\n            [-122.502836115946863, 37.78804976589835],\n            [-122.502789020665148, 37.78803614434397],\n            [-122.502704311593945, 37.788039643712104],\n            [-122.502589076168022, 37.788066323379901],\n            [-122.502515190951499, 37.788086120259166],\n            [-122.502425496104195, 37.788097257971025],\n            [-122.502376106845503, 37.788126939838207],\n            [-122.502316846531585, 37.7881114644726],\n            [-122.502255070395776, 37.788131055545016],\n            [-122.502169528699341, 37.788103665363288],\n            [-122.502105689513968, 37.788110929794158],\n            [-122.50207398762231, 37.788154733004774],\n            [-122.502071249254328, 37.788181562090124],\n            [-122.501989944924048, 37.788182942633284],\n            [-122.501951813392949, 37.78818084312524],\n            [-122.501912664088508, 37.788140990459205],\n            [-122.501912016401619, 37.788116965280736],\n            [-122.501877326179624, 37.788114120853955],\n            [-122.501877973840479, 37.788138145483494],\n            [-122.501858399507697, 37.788182429188559],\n            [-122.501842192404723, 37.788223222019695],\n            [-122.501801304245816, 37.788247265660054],\n            [-122.501766151357245, 37.788227260005755],\n            [-122.501756965310037, 37.788207500503631],\n            [-122.50172600293584, 37.788150340007959],\n            [-122.501700517223497, 37.788167941185236],\n            [-122.50167957356264, 37.788161429621908],\n            [-122.501619212555269, 37.788169321478662],\n            [-122.501569767420492, 37.788196943730178],\n            [-122.501591358665465, 37.788227480492822],\n            [-122.501533078675976, 37.788248385310276],\n            [-122.501514596042369, 37.788204747707923],\n            [-122.50145942465268, 37.788212551659868],\n            [-122.501437657642668, 37.788239704012419],\n            [-122.501335150234794, 37.788224962263008],\n            [-122.501268313574613, 37.788249445888859],\n            [-122.50115878458611, 37.788295256277053],\n            [-122.501091780980232, 37.788313561975109],\n            [-122.501021937979715, 37.788290711431223],\n            [-122.501006184350814, 37.78828411139213],\n            [-122.50097195648992, 37.788298427073251],\n            [-122.500993621505359, 37.788331709648567],\n            [-122.500947376526028, 37.788349663239131],\n            [-122.500879097304491, 37.788320605139283],\n            [-122.500861336013799, 37.788303738053742],\n            [-122.500826830696198, 37.788307757577726],\n            [-122.500806349431429, 37.788318405959657],\n            [-122.500754452719278, 37.788319286610971],\n            [-122.500738328529678, 37.78829895802815],\n            [-122.500712935348687, 37.788319991115557],\n            [-122.500640723790397, 37.788337698187455],\n            [-122.500593831459696, 37.788331626454848],\n            [-122.500550140713713, 37.78831588602435],\n            [-122.500538567416584, 37.788335997845735],\n            [-122.50048939950284, 37.78837391630227],\n            [-122.500458095017024, 37.788368266503305],\n            [-122.500446429574566, 37.788384946179491],\n            [-122.50034045177307, 37.788434129242091],\n            [-122.500272801380206, 37.788428409551436],\n            [-122.500256870701349, 37.788479498553457],\n            [-122.500250772830086, 37.788574372083048],\n            [-122.500192399744307, 37.788591844106463],\n            [-122.500174472488098, 37.788568799078057],\n            [-122.500178293975864, 37.788517915512088],\n            [-122.500130319126384, 37.788535897847389],\n            [-122.500091521884229, 37.788509086399898],\n            [-122.500099172636652, 37.788471872673249],\n            [-122.500066212558522, 37.788468998362944],\n            [-122.50006658231419, 37.788482726609828],\n            [-122.500011040812936, 37.788476801362307],\n            [-122.499966794796208, 37.788440467945314],\n            [-122.499878115891249, 37.788489357153694],\n            [-122.499810631863213, 37.788489815307436],\n            [-122.499785570748472, 37.78852320387022],\n            [-122.499760324750355, 37.788549727891812],\n            [-122.499797151337432, 37.788567645255235],\n            [-122.499803450517931, 37.788608742793357],\n            [-122.49976162645244, 37.788662331112889],\n            [-122.499733393517658, 37.788642207768127],\n            [-122.499727335024716, 37.788610033760072],\n            [-122.49968724080243, 37.78866359271359],\n            [-122.499634371443463, 37.788692645687142],\n            [-122.499577562358439, 37.788703910220832],\n            [-122.499554630056736, 37.788687817377856],\n            [-122.499511356576448, 37.788623310977023],\n            [-122.499481164550005, 37.788530426400044],\n            [-122.499432590648397, 37.788461889419303],\n            [-122.499336411156918, 37.788425062960037],\n            [-122.499266771879846, 37.788409762065221],\n            [-122.499202877060384, 37.788414965914313],\n            [-122.499128103233858, 37.788401812217707],\n            [-122.499099500985864, 37.788367960195586],\n            [-122.499041638784547, 37.788340098176221],\n            [-122.498955421371278, 37.788351861015244],\n            [-122.498920128036829, 37.788390916780045],\n            [-122.498889600061332, 37.788414096736403],\n            [-122.498846352726645, 37.788414829911119],\n            [-122.498829249780883, 37.788358120749585],\n            [-122.498858133988094, 37.78827384858316],\n            [-122.49881028141921, 37.788232082242921],\n            [-122.498779365121052, 37.788240846950437],\n            [-122.498721638945739, 37.788282343161484],\n            [-122.498684745303493, 37.788326233159403],\n            [-122.498610415395817, 37.78832955335983],\n            [-122.498598336042235, 37.788266578082698],\n            [-122.498619439354101, 37.78821471490064],\n            [-122.498602392043921, 37.788160064708592],\n            [-122.498537684539031, 37.788135065438439],\n            [-122.498508608985759, 37.788147919585676],\n            [-122.498480069151427, 37.788180680090115],\n            [-122.498393075984339, 37.788163612611328],\n            [-122.498359007071954, 37.788119551978269],\n            [-122.498367465612489, 37.788047987710556],\n            [-122.498258002596998, 37.788031987711385],\n            [-122.498205083784299, 37.787930560386634],\n            [-122.498141496631646, 37.787882879514228],\n            [-122.498020127555392, 37.787874635204304],\n            [-122.497965657850202, 37.7879085217278],\n            [-122.497937733854386, 37.787835513791961],\n            [-122.497862794972676, 37.787816181447418],\n            [-122.497833152644503, 37.787872309616162],\n            [-122.497858996475657, 37.787932304773527],\n            [-122.497838976582202, 37.787960113577462],\n            [-122.497779058543074, 37.787984477979037],\n            [-122.497727525397508, 37.787934532426668],\n            [-122.4976806523715, 37.787929145955836],\n            [-122.497620549305267, 37.78794664601778],\n            [-122.497594065916346, 37.787927179270163],\n            [-122.49754290189, 37.78789096244769],\n            [-122.49750382929264, 37.787853853467084],\n            [-122.497544349339876, 37.787816083058736],\n            [-122.497526053110533, 37.787779309105126],\n            [-122.497500930399411, 37.787746084497506],\n            [-122.497517139436695, 37.787705292265386],\n            [-122.497507659501551, 37.787674549599402],\n            [-122.497485331532715, 37.787616555022737],\n            [-122.497458570647495, 37.787586791856477],\n            [-122.497406323956653, 37.787574629197884],\n            [-122.49735786900257, 37.787574763042187],\n            [-122.497315176016556, 37.787596088453697],\n            [-122.497275259657627, 37.787591957457558],\n            [-122.497216443565691, 37.787592953772126],\n            [-122.497168648080745, 37.787553245760044],\n            [-122.497138187607533, 37.787514617578381],\n            [-122.497106127216909, 37.787480823939255],\n            [-122.497044990964866, 37.787459883810421],\n            [-122.496999885071403, 37.787455840347057],\n            [-122.496923235404381, 37.787437223130333],\n            [-122.496894579157143, 37.787401311287425],\n            [-122.49685734707576, 37.787368291637833],\n            [-122.496811927818939, 37.787352579117055],\n            [-122.496751769988833, 37.787368019451996],\n            [-122.496728617227618, 37.787343688934776],\n            [-122.496685721170834, 37.787357463425209],\n            [-122.496639544906756, 37.787313607347343],\n            [-122.496583690806744, 37.787296011229486],\n            [-122.496547105206147, 37.787287016686854],\n            [-122.496516354783793, 37.787301958649365],\n            [-122.49646797383916, 37.787304838384266],\n            [-122.496443903661216, 37.787310739875238],\n            [-122.496383616604291, 37.787321374760424],\n            [-122.496337075877918, 37.787328343443079],\n            [-122.496276530804948, 37.787329368567015],\n            [-122.496247565545247, 37.787346340725328],\n            [-122.496197934785357, 37.787367096454552],\n            [-122.496141439524379, 37.787390028597343],\n            [-122.496086747911505, 37.787415677408667],\n            [-122.496068420456311, 37.787442083500181],\n            [-122.496016690354622, 37.787449139908034],\n            [-122.495972174940263, 37.787467062259353],\n            [-122.495951842506244, 37.787478615416269],\n            [-122.495939786703687, 37.787485465489738],\n            [-122.495905650481646, 37.787503211836551],\n            [-122.495879794980965, 37.787507083489736],\n            [-122.495820979283494, 37.78750807910243],\n            [-122.49579201419597, 37.787525051142431],\n            [-122.495771716907484, 37.787542562920031],\n            [-122.495716453167731, 37.787546932051697],\n            [-122.495690597288615, 37.78755080339463],\n            [-122.495618108578682, 37.787558210990248],\n            [-122.495602871400223, 37.787570830192877],\n            [-122.495572047584162, 37.787583026463722],\n            [-122.495539604212951, 37.787599370571847],\n            [-122.495514135330879, 37.787617657121146],\n            [-122.495483182354334, 37.787625048105859],\n            [-122.495437195053938, 37.787652609233902],\n            [-122.495395954684781, 37.787663608544698],\n            [-122.495370190617706, 37.787670911683094],\n            [-122.495333314088882, 37.787715487058371],\n            [-122.495282044474621, 37.787739703822119],\n            [-122.495193913200154, 37.787744628911668],\n            [-122.495147390885393, 37.787752283545302],\n            [-122.495107603658113, 37.787752956804084],\n            [-122.495081894872186, 37.787762319709344],\n            [-122.495049506978233, 37.787780722682484],\n            [-122.494942531016747, 37.787792833838672],\n            [-122.494936422880045, 37.787823153702263],\n            [-122.49487624549289, 37.787837906657984],\n            [-122.494850021018962, 37.787828049271276],\n            [-122.494803406419749, 37.787832271634258],\n            [-122.494754880927445, 37.787894212652994],\n            [-122.494747761584406, 37.787951332156055],\n            [-122.494723178126165, 37.788002566741419],\n            [-122.494687204176572, 37.788080776838861],\n            [-122.494700862218465, 37.788138231843071],\n            [-122.494641953469724, 37.788135794738686],\n            [-122.494554921507401, 37.788052798168373],\n            [-122.494515868416002, 37.788016374906285],\n            [-122.4945350783522, 37.787958364153376],\n            [-122.494513047598829, 37.787911351574522],\n            [-122.494517883781597, 37.787833668269109],\n            [-122.494492854234224, 37.787803875161934],\n            [-122.494463538439888, 37.787807804761236],\n            [-122.494432676774579, 37.787818627891369],\n            [-122.494408993418205, 37.787838943934148],\n            [-122.494413448366132, 37.787875952476604],\n            [-122.494396887310245, 37.787903702167263],\n            [-122.49434981175834, 37.787890763675087],\n            [-122.494353194757167, 37.787823406042577],\n            [-122.494335895597104, 37.78782369865479],\n            [-122.49430957902598, 37.787810409012593],\n            [-122.494266331651687, 37.787811140513561],\n            [-122.49416034840992, 37.787795764612234],\n            [-122.494129594818148, 37.787746152815927],\n            [-122.494106737724252, 37.787732804619111],\n            [-122.494080878906914, 37.78767212220432],\n            [-122.494005791021607, 37.787582742860096],\n            [-122.49397989817011, 37.78758524069908],\n            [-122.493937148914341, 37.787604505606133],\n            [-122.49390314117592, 37.787627056362858],\n            [-122.493853140270886, 37.787634082573049],\n            [-122.493776804515477, 37.787627132573334],\n            [-122.493743568607016, 37.787613959813378],\n            [-122.493738061048077, 37.787613306047696],\n            [-122.493682801772195, 37.787606746485388],\n            [-122.493586205100101, 37.787618680905503],\n            [-122.493496509486093, 37.787629812101237],\n            [-122.493461856653141, 37.787628337503875],\n            [-122.493419162517711, 37.787649661504638],\n            [-122.493384362282285, 37.787642696015901],\n            [-122.493336275791464, 37.787656556752133],\n            [-122.493293636533849, 37.787679939994845],\n            [-122.493241832649318, 37.78768424947036],\n            [-122.493193617141287, 37.7876933054322],\n            [-122.493182042295089, 37.787713416527986],\n            [-122.493127220447846, 37.787734258699906],\n            [-122.493090653466112, 37.787725949238315],\n            [-122.493056424336842, 37.787740262623288],\n            [-122.493004582859115, 37.787743199151691],\n            [-122.492969929990394, 37.787741724684366],\n            [-122.492955061461288, 37.787768072078173],\n            [-122.492913931184304, 37.787783188809769],\n            [-122.492855170492433, 37.787786242224989],\n            [-122.492860417128782, 37.787852767193691],\n            [-122.492830071355925, 37.787882810136729],\n            [-122.492771255320051, 37.787883804228279],\n            [-122.492769800087729, 37.787829576197716],\n            [-122.492735920840914, 37.787856931882516],\n            [-122.49268687433684, 37.78777054473629],\n            [-122.492679439061774, 37.787751441716487],\n            [-122.492627892968244, 37.787765361179233],\n            [-122.492565672509713, 37.787768472646512],\n            [-122.492506929887313, 37.787772212321414],\n            [-122.492446513322577, 37.787778040470201],\n            [-122.492381054094224, 37.787789447708391],\n            [-122.492305602297094, 37.78781544526975],\n            [-122.492216274554934, 37.787840303764064],\n            [-122.492178548608294, 37.787853302497936],\n            [-122.492118555140365, 37.787874918314273],\n            [-122.492079412316457, 37.787899615509929],\n            [-122.492057605141056, 37.787925393277668],\n            [-122.491876207129678, 37.788001938945712],\n            [-122.491812827679937, 37.788026359033061],\n            [-122.491772083659185, 37.788055890066879],\n            [-122.491719745560601, 37.788104846164785],\n            [-122.491654323091851, 37.788117625573307],\n            [-122.491646041850075, 37.7881315002275],\n            [-122.491614039214184, 37.788164317512276],\n            [-122.491501375628616, 37.788222533071625],\n            [-122.491447583651606, 37.788217260993214],\n            [-122.491404851437281, 37.788237211413325],\n            [-122.491281422016286, 37.788281187084038],\n            [-122.491218428658357, 37.788320021552913],\n            [-122.491190014384841, 37.788357585284182],\n            [-122.491137087049111, 37.788384575161345],\n            [-122.491061983912687, 37.788423614320799],\n            [-122.490946338544006, 37.788499734606098],\n            [-122.490859530409139, 37.788554079246722],\n            [-122.490843207112334, 37.788590751992317],\n            [-122.490818381167585, 37.788633062206074],\n            [-122.490696422877051, 37.78873195173508],\n            [-122.490605105739689, 37.78881178134435],\n            [-122.490527498874997, 37.788886572527467],\n            [-122.490413287423564, 37.788951680519325],\n            [-122.490407103746506, 37.78897925443183],\n            [-122.490354139232181, 37.78900487109366],\n            [-122.490306437661019, 37.789033145843504],\n            [-122.490251889996458, 37.789064283086574],\n            [-122.490252239550742, 37.789077325209703],\n            [-122.490220015123754, 37.789101904980171],\n            [-122.490046709329732, 37.789222262378196],\n            [-122.489918657120555, 37.789352156846768],\n            [-122.489828681483118, 37.789482095324693],\n            [-122.489700630133797, 37.789482882790033],\n            [-122.489592566089883, 37.789454489856745],\n            [-122.489300670464104, 37.789412030065776],\n            [-122.489191447548507, 37.789340391834585],\n            [-122.488990889258972, 37.789283342302205],\n            [-122.48848285911852, 37.789442306771541],\n            [-122.488100013149761, 37.789428847345718],\n            [-122.488028309941384, 37.789530320047362],\n            [-122.487863707315668, 37.789588034282978],\n            [-122.487736999824023, 37.789574375465854],\n            [-122.487584402186499, 37.78949866010057],\n            [-122.487564674856429, 37.789472896340307],\n            [-122.487563664349921, 37.78943514280558],\n            [-122.487464302267156, 37.789473215069947],\n            [-122.48744759425297, 37.789430918694578],\n            [-122.487369692668253, 37.789430171560369],\n            [-122.487296628705792, 37.789480848156245],\n            [-122.487120114954962, 37.789610869819036],\n            [-122.487051777894393, 37.789708851205745],\n            [-122.4869376141597, 37.789840568479555],\n            [-122.486809390152729, 37.789964281705743],\n            [-122.486730121786451, 37.790041845235905],\n            [-122.486553036429143, 37.790150586495734],\n            [-122.486429009493079, 37.790237144752382],\n            [-122.486335272657072, 37.790356155991162],\n            [-122.486245109599949, 37.790414674064778],\n            [-122.486236878145661, 37.790495160989501],\n            [-122.486221786002261, 37.790513270391187],\n            [-122.485095392905748, 37.790094746949087],\n            [-122.484316748868366, 37.789805424389257],\n            [-122.484214987310182, 37.789767611906584],\n            [-122.484071292407094, 37.789571562974182],\n            [-122.484019551359538, 37.788671434543716],\n            [-122.483911841345289, 37.78771598691722],\n            [-122.483910676418589, 37.787705653817092],\n            [-122.481375583614479, 37.787198893328011],\n            [-122.479861181106074, 37.787037199203986],\n            [-122.478707989065171, 37.78691405835],\n            [-122.477707716230128, 37.786939475526701],\n            [-122.476637454822679, 37.786966661899442],\n            [-122.476572244768761, 37.786128658440397],\n            [-122.476575166016133, 37.786128513873635],\n            [-122.476575148769683, 37.786128282045887],\n            [-122.476436803741322, 37.784271125057622],\n            [-122.476306551695615, 37.782405954593735],\n            [-122.476169188584777, 37.78047585000003],\n            [-122.476025278884237, 37.778553841183147],\n            [-122.475888270951586, 37.776692974324831],\n            [-122.475750968701433, 37.774828017958995],\n            [-122.475613644972711, 37.772962670675476],\n            [-122.475613625589148, 37.772962410314676],\n            [-122.476694205661246, 37.772912858094969],\n            [-122.477069824745385, 37.772895630732648],\n            [-122.477766947236773, 37.772863655180586],\n            [-122.478836951668541, 37.772814568639937],\n            [-122.47883762078969, 37.772814536530767],\n            [-122.478848715172788, 37.772814028898644],\n            [-122.479904580478745, 37.772765580938412],\n            [-122.480978851643016, 37.772716079930653],\n            [-122.481947659007389, 37.77267180789157],\n            [-122.482048961146063, 37.772667157434498],\n            [-122.483119121668807, 37.772618024364625],\n            [-122.483119139145145, 37.772618264154566],\n            [-122.484194219251819, 37.772569315707138],\n            [-122.484194201052048, 37.772569061919981],\n            [-122.485152053625171, 37.772525429693054],\n            [-122.485261332297384, 37.772520422109807],\n            [-122.485262022888591, 37.772520390701253],\n            [-122.486334053115812, 37.772471462244795],\n            [-122.486678527930636, 37.772455879683093],\n            [-122.487398288926627, 37.772423078182946],\n            [-122.487398306387334, 37.772423316873983],\n            [-122.487399123482518, 37.77242327974907],\n            [-122.488470602075608, 37.772374307055074],\n            [-122.488471323394165, 37.772374169626119],\n            [-122.489539486385709, 37.772325343661755],\n            [-122.49061689309373, 37.772276279654356],\n            [-122.490617013718605, 37.772276274046327],\n            [-122.491688031137627, 37.772227293012065],\n            [-122.492761363210761, 37.772178246338406],\n            [-122.493316307377469, 37.772153213706439],\n            [-122.493832479293559, 37.77212966191987],\n            [-122.493832498174271, 37.772129926957135],\n            [-122.493833180817205, 37.772129896182108],\n            [-122.494902921073546, 37.772080894286702],\n            [-122.494903299427449, 37.772080795311069],\n            [-122.495971990075716, 37.772031913255347],\n            [-122.497046812008847, 37.771982808835908],\n            [-122.497412740335307, 37.771966238858134],\n            [-122.498113882732468, 37.771934487449556],\n            [-122.499183042122894, 37.771885392463027],\n            [-122.500200291234236, 37.771838923903807],\n            [-122.500257545202601, 37.771836308607973],\n            [-122.501327700223527, 37.771787274197017],\n            [-122.502399595949868, 37.771738155153713],\n            [-122.502399732131124, 37.771738148994636],\n            [-122.503472688521128, 37.771689380410749],\n            [-122.503472690942445, 37.771689380369601],\n            [-122.504544396347384, 37.771640577944709],\n            [-122.505611140464779, 37.771591516134151],\n            [-122.50668530503512, 37.771542352938617],\n            [-122.506685577396198, 37.771542340610623],\n            [-122.506991972993774, 37.771528822999358],\n            [-122.507750664399296, 37.771495034126787],\n            [-122.507750665782908, 37.771495034103232],\n            [-122.508780633594597, 37.771447480819759],\n            [-122.508823169175031, 37.771445503888728],\n            [-122.508823330922013, 37.771445496187766],\n            [-122.508867990729883, 37.771443447055226],\n            [-122.509894749698645, 37.771396032095495],\n            [-122.509894781266311, 37.771396329054475],\n            [-122.511053819156686, 37.771347546731022],\n            [-122.511055400217217, 37.771347479926334],\n            [-122.512571364940968, 37.771283657974607],\n            [-122.51313192303401, 37.771260053409627],\n            [-122.51314077587368, 37.771331323581165],\n            [-122.513103639776702, 37.771429475690731],\n            [-122.513116974838326, 37.771538439951165],\n            [-122.5131111559662, 37.771706791559524],\n            [-122.513101727800077, 37.771741976505247],\n            [-122.513108516285712, 37.771800920539754],\n            [-122.513097415135022, 37.771902061732895],\n            [-122.513158379126494, 37.77223615155534],\n            [-122.513150048202618, 37.772247968474822],\n            [-122.513145175599931, 37.772259726057939],\n            [-122.513142070416649, 37.772272827219133],\n            [-122.513140694405962, 37.772285899124284],\n            [-122.513142777404809, 37.77229891140734],\n            [-122.51314831943732, 37.772311864891819],\n            [-122.513155553774638, 37.772323415987366],\n            [-122.513162806726825, 37.772335653782996],\n            [-122.513171807785298, 37.772348547918142],\n            [-122.513179470052052, 37.772375886809904],\n            [-122.513181590285754, 37.772390272493183],\n            [-122.513180232870297, 37.772404030275354],\n            [-122.513177164205956, 37.772418504300951],\n            [-122.513164035088622, 37.772444825057953],\n            [-122.513153956021, 37.772455985088065],\n            [-122.513145624725894, 37.77246780201267],\n            [-122.513139041542303, 37.772480275551658],\n            [-122.513134206485844, 37.772493406254469],\n            [-122.513132830469672, 37.772506478159016],\n            [-122.513133202560653, 37.772520206404018],\n            [-122.513137015097556, 37.772533189699409],\n            [-122.513142557139105, 37.772546142909071],\n            [-122.513149791498321, 37.772557694004483],\n            [-122.513128650263695, 37.772862969521874],\n            [-122.513143974877181, 37.772917647305441],\n            [-122.513134546565453, 37.772952831971672],\n            [-122.513140759176039, 37.773054363934854],\n            [-122.513127629925961, 37.773080684410282],\n            [-122.513121083909837, 37.773094531347873],\n            [-122.513117996938973, 37.773108318663766],\n            [-122.513113180104355, 37.773122136070647],\n            [-122.513110502783931, 37.773151024750284],\n            [-122.513109145348821, 37.773164782804365],\n            [-122.513109926760848, 37.773193612966814],\n            [-122.513112046989562, 37.773207998100119],\n            [-122.513115877809639, 37.773221667551859],\n            [-122.513119727927929, 37.77323602341751],\n            [-122.513123558750877, 37.773249692868944],\n            [-122.513130848990954, 37.773263303241755],\n            [-122.513136372841529, 37.773275570567371],\n            [-122.513136837962776, 37.773292730939929],\n            [-122.513139032281771, 37.773309862056486],\n            [-122.513139962541018, 37.773344183350439],\n            [-122.513137434071865, 37.77337856371112],\n            [-122.513137899208886, 37.773395724632501],\n            [-122.51313663480029, 37.773412914815644],\n            [-122.513133622247153, 37.773429448109219],\n            [-122.513132357829548, 37.773446638017631],\n            [-122.513129363533338, 37.773463857742755],\n            [-122.513124956674076, 37.773492776231812],\n            [-122.513123636099678, 37.773507907142864],\n            [-122.513125756700802, 37.773522292818349],\n            [-122.513127895547086, 37.773537364376381],\n            [-122.513130108829742, 37.773555182186904],\n            [-122.51313457258631, 37.77359218983559],\n            [-122.513137102897502, 37.773685543750098],\n            [-122.51313464849045, 37.773722669817865],\n            [-122.513133402680765, 37.77374054642582],\n            [-122.513130445590789, 37.773759139276294],\n            [-122.513129218723165, 37.773777702029449],\n            [-122.513126261969134, 37.773796294599215],\n            [-122.513121575665878, 37.773814916705028],\n            [-122.513118599957409, 37.773832822854594],\n            [-122.513113913995852, 37.773851444954062],\n            [-122.513110938637425, 37.773869351371971],\n            [-122.513106251972374, 37.773887973208282],\n            [-122.513098199929146, 37.77391008650784],\n            [-122.513115558504083, 37.774550522030069],\n            [-122.513135161617555, 37.77469921031755],\n            [-122.513164585532962, 37.774890995995399],\n            [-122.513170483591551, 37.775108592933201],\n            [-122.513148799533084, 37.77520236034195],\n            [-122.513166877896921, 37.775294761967629],\n            [-122.513138108336719, 37.775382469681844],\n            [-122.513154511511672, 37.775413093012311],\n            [-122.513118656446565, 37.775494741304421],\n            [-122.513116560550898, 37.775991978980805],\n            [-122.513220716743945, 37.77664260637399],\n            [-122.513262136135666, 37.776766199546913],\n            [-122.513273147342474, 37.776853227885702],\n            [-122.513301250635152, 37.776996277263876],\n            [-122.513336088063554, 37.777196211308791],\n            [-122.513350113009579, 37.777330573444466],\n            [-122.513418927986152, 37.77744339753194],\n            [-122.513485622738756, 37.777541836186963],\n            [-122.513511493535475, 37.777602514461641],\n            [-122.513605787519069, 37.777633867571893],\n            [-122.513789576977686, 37.777711077145469],\n            [-122.513970390041706, 37.777742325491253],\n            [-122.514130469394843, 37.777902348781886],\n            [-122.514271487815051, 37.77812519117407],\n            [-122.514413862528215, 37.778270408245596],\n            [-122.514604595643718, 37.77847591891544],\n            [-122.51462964838835, 37.778506394234036],\n            [-122.514661065627067, 37.778643892998048],\n            [-122.514636184118331, 37.778747329407956],\n            [-122.514564452996041, 37.778846072735902],\n            [-122.514578405995934, 37.778977688986053],\n            [-122.51449838155861, 37.779153489214309],\n            [-122.5144938833634, 37.779242842682805],\n            [-122.514567855611702, 37.77941807161681],\n            [-122.514670725915678, 37.779446530659044],\n            [-122.514854558211539, 37.779525111397355],\n            [-122.514948079566921, 37.779719234525949],\n            [-122.514897941861832, 37.779848512679017],\n            [-122.514749765647835, 37.779872333834206],\n            [-122.514641072918508, 37.779820625636908],\n            [-122.514565266573783, 37.77989677577483],\n            [-122.514533951466817, 37.780082044762075],\n            [-122.514511340895595, 37.780269225221183],\n            [-122.514474054726847, 37.780425753002312],\n            [-122.51446673230646, 37.780602371059075],\n            [-122.514648527113849, 37.780860913612862],\n            [-122.51472341591213, 37.781133644263413],\n            [-122.514586047991969, 37.781300809991649],\n            [-122.514468426928062, 37.781302819849991],\n            [-122.514292998946104, 37.781279034300063],\n            [-122.514303621052633, 37.781351647553429],\n            [-122.514284968188448, 37.781429568185636],\n            [-122.514242655950966, 37.781464628517519],\n            [-122.513867881152649, 37.781428452669296],\n            [-122.513760174171992, 37.78147699096975],\n            [-122.513883322187127, 37.781614982927096],\n            [-122.513812238767187, 37.78173775061245],\n            [-122.513697000270085, 37.781891489394212],\n            [-122.513670014693673, 37.78198122658408],\n            [-122.513522169917209, 37.782081269425682],\n            [-122.513466336763443, 37.782192101792845],\n            [-122.513546762127802, 37.782286185176545],\n            [-122.513589561336119, 37.782396706497991],\n            [-122.513504004159799, 37.782432504856651],\n            [-122.51345966482603, 37.782520478406092],\n            [-122.513490615272289, 37.782576949453883],\n            [-122.51349907897729, 37.782633804536587],\n            [-122.513499154475824, 37.782700417272132],\n            [-122.513444212427984, 37.782780331251374],\n            [-122.513311970586869, 37.782817613200059],\n            [-122.513176844047379, 37.782748499450129],\n            [-122.513099674895386, 37.782774539876293],\n            [-122.513082211268937, 37.782896391754747],\n            [-122.512985625061674, 37.783036075867919],\n            [-122.513019551763222, 37.783138507955194],\n            [-122.513026396706579, 37.783199511429288],\n            [-122.512878567398928, 37.783236372275823],\n            [-122.512854035372925, 37.783352850568228],\n            [-122.512805434943459, 37.783475233699562],\n            [-122.512705462306386, 37.783553855572684],\n            [-122.512518627902452, 37.783620225547125],\n            [-122.512466567525493, 37.783742667306889],\n            [-122.512644903191074, 37.783873537806549],\n            [-122.512713964283492, 37.783931418677646],\n            [-122.512652381073622, 37.784021746473734],\n            [-122.512681006779928, 37.784120148680003],\n            [-122.512565948104239, 37.784153016218092],\n            [-122.512295468592697, 37.783942683042248],\n            [-122.512111442218099, 37.7837933668308],\n            [-122.511916645881882, 37.783949148187006],\n            [-122.511936379260646, 37.784102641671865],\n            [-122.512002036912364, 37.7841626409828],\n            [-122.51201098319315, 37.784237343198853],\n            [-122.511976089219957, 37.784290817818842],\n            [-122.511911287292179, 37.784326260764388],\n            [-122.511796674312308, 37.784311734732256],\n            [-122.511643280924901, 37.784334954352396],\n            [-122.511486279442096, 37.784288874386938],\n            [-122.511300968574147, 37.78428379521467],\n            [-122.511334223422679, 37.784425383212891],\n            [-122.511306545033449, 37.784553589399493],\n            [-122.511229614678896, 37.784588552121491],\n            [-122.51102434727656, 37.784485608568794],\n            [-122.510971002039966, 37.784496819600761],\n            [-122.510838401528204, 37.784584923981406],\n            [-122.510747296660981, 37.784671633775218],\n            [-122.510491862112929, 37.784697278857706],\n            [-122.510370776300974, 37.784699343616424],\n            [-122.510236724687886, 37.784733906185757],\n            [-122.510168389422006, 37.784702794445394],\n            [-122.510020323714343, 37.784723420804994],\n            [-122.509994254968106, 37.784727052267002],\n            [-122.509808028924709, 37.784816069670107],\n            [-122.509716922917022, 37.784902778658349],\n            [-122.509665899527562, 37.784999792217178],\n            [-122.509574233553352, 37.78512977535155],\n            [-122.509483405510977, 37.78522678080374],\n            [-122.50935080157798, 37.785314883231258],\n            [-122.509270075574662, 37.785337547981477],\n            [-122.509233168789549, 37.785444621876991],\n            [-122.509117710773396, 37.785590805131108],\n            [-122.508796514633275, 37.785744614237508],\n            [-122.508661532747013, 37.785744853745925],\n            [-122.508565980602214, 37.785795240243836],\n            [-122.508486275275231, 37.785855657828165],\n            [-122.50845217664569, 37.785938647661681],\n            [-122.508258558155333, 37.786074486851589],\n            [-122.50824179847983, 37.786094687819457],\n            [-122.508218230136194, 37.78611912520401],\n            [-122.508132741023516, 37.786157665329803],\n            [-122.508102962554631, 37.786144437693665],\n            [-122.508035220497703, 37.78613529033418],\n            [-122.507963402235234, 37.786167416830274],\n            [-122.507918608664951, 37.786238914034136],\n            [-122.507884921314982, 37.786273138055307],\n            [-122.507810998339579, 37.786355432403496],\n            [-122.507791149628716, 37.786389420730835],\n            [-122.507786702460081, 37.786416966109108],\n            [-122.507753742643061, 37.786414093677742],\n            [-122.507723143657557, 37.786434530234523],\n            [-122.507686905785704, 37.786502447942446],\n            [-122.50771513615085, 37.786586436657288],\n            [-122.507634122264022, 37.786726537606768],\n            [-122.507529970492527, 37.786842996798164],\n            [-122.507416802174745, 37.786882007667536],\n            [-122.507337150418977, 37.786944484013162],\n            [-122.507251469686537, 37.787040025961154],\n            [-122.50719904571541, 37.787149423517022],\n            [-122.507107186903028, 37.787272540712486],\n            [-122.507053654233644, 37.787276885429115],\n            [-122.506971891727119, 37.787453396158277],\n            [-122.506896872053431, 37.78749519083452],\n            [-122.50673936089315, 37.787494438084011],\n            [-122.506717248362293, 37.787444682355584],\n            [-122.506653688773341, 37.787462245895419],\n            [-122.506526049480186, 37.787478152978885],\n            [-122.506492546406875, 37.787519241120947],\n            [-122.506427084531083, 37.787594522862221],\n            [-122.506343785965981, 37.787650192878154],\n            [-122.506284872420196, 37.787711628562818],\n            [-122.506271997783998, 37.787747558158287],\n            [-122.506258863502353, 37.787773877799495],\n            [-122.50624035413243, 37.787793421492793],\n            [-122.506219873800518, 37.787804071365088],\n            [-122.506177628287418, 37.787841873914068],\n            [-122.506131292484596, 37.787856397132735],\n            [-122.506163876746712, 37.787909408764172],\n            [-122.506122372558949, 37.787974668305665],\n            [-122.506121008614969, 37.788052293211784],\n            [-122.506089600492331, 37.788170947004069],\n            [-122.506052098981115, 37.788192187283286],\n            [-122.505852340805589, 37.788229236102978],\n            [-122.505747263058424, 37.788247505451196],\n            [-122.505657587040744, 37.788259332046266],\n            [-122.505605226952582, 37.788243054476361],\n            [-122.505520554840288, 37.788247928168715],\n            [-122.505423328958457, 37.788236533825454],\n            [-122.505330267621474, 37.78825116471306],\n            [-122.505202440987361, 37.788260206114757],\n            [-122.505107748523827, 37.788214431400775],\n            [-122.505021260444238, 37.788152035322256],\n            [-122.50498134335804, 37.788147906935059],\n            [-122.504941407743146, 37.788143092108974],\n            [-122.504896245414301, 37.788136992665024],\n            [-122.504877161086682, 37.788135256957062],\n            [-122.504859843370596, 37.788134864962309],\n            [-122.504835625333357, 37.788135276762382],\n            [-122.504801138826153, 37.7881399833256],\n            [-122.504785514269201, 37.788138188774688],\n            [-122.504771508408268, 37.788132246255898],\n            [-122.504759158308161, 37.788123528620481],\n            [-122.5047502309164, 37.788113379306509],\n            [-122.504739555111996, 37.788102572979582],\n            [-122.504727204674595, 37.788093855346673],\n            [-122.504711432227211, 37.788086569376937],\n            [-122.504695715029484, 37.788081342687157],\n            [-122.504680053426, 37.788078175271465],\n            [-122.50466269900177, 37.788076410116517],\n            [-122.50464541869988, 37.788077390660611],\n            [-122.504626408521617, 37.788078400888217],\n            [-122.504609090805303, 37.788078008307494],\n            [-122.504591755258659, 37.788076929561612],\n            [-122.504576093667978, 37.788073762406697],\n            [-122.504558683651112, 37.788069937685613],\n            [-122.504543003526479, 37.788066083826294],\n            [-122.504525593174549, 37.788062259380773],\n            [-122.504508220574564, 37.788059807771766],\n            [-122.50449088434911, 37.788058729297397],\n            [-122.504468396217547, 37.788059111612547],\n            [-122.504456509027335, 37.788067554312491]\n          ]\n        ]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {OBJECTID: 5, ZIP_CODE: 94118, ID: 94118},\n      geometry: {\n        type: 'Polygon',\n        coordinates: [\n          [\n            [-122.448885763577039, 37.778388598994987],\n            [-122.449767079183658, 37.778277008331997],\n            [-122.450654812483819, 37.778164598609756],\n            [-122.450826415883952, 37.778142868140662],\n            [-122.451543139139602, 37.778052106408275],\n            [-122.452431111623397, 37.777939652339285],\n            [-122.453384996187339, 37.777826863341367],\n            [-122.45318832797058, 37.776853425180988],\n            [-122.452963825070867, 37.775750129254348],\n            [-122.452810237317621, 37.774995318605924],\n            [-122.453003330637316, 37.774970754669006],\n            [-122.45468264773983, 37.77475548474694],\n            [-122.454683295611602, 37.774755406979118],\n            [-122.455033749574639, 37.77471323536281],\n            [-122.45525254468275, 37.774686906456331],\n            [-122.455898178089939, 37.774604132119862],\n            [-122.456283639851293, 37.774554711848936],\n            [-122.456283671603558, 37.774554866249353],\n            [-122.456283917173579, 37.774554834704738],\n            [-122.457134751103212, 37.774454490912483],\n            [-122.458371099123696, 37.774308895694055],\n            [-122.458795325509186, 37.774254885425997],\n            [-122.459486118442314, 37.77416693399686],\n            [-122.459486145343419, 37.77416729779403],\n            [-122.459486938645284, 37.774167197254911],\n            [-122.460552700773292, 37.774031358657659],\n            [-122.460552661960989, 37.774031133779268],\n            [-122.461619755154771, 37.7738952534419],\n            [-122.461619775372085, 37.773895534117642],\n            [-122.461620188227315, 37.77389548164836],\n            [-122.462535340858068, 37.773778657528119],\n            [-122.462683796526321, 37.773759751788596],\n            [-122.463749210177951, 37.773624065149079],\n            [-122.464811670328331, 37.773488744378348],\n            [-122.465331676538511, 37.773422509669793],\n            [-122.465883163277454, 37.773398204721545],\n            [-122.466373346760548, 37.773376599548058],\n            [-122.466951728424362, 37.773351356945881],\n            [-122.466952500298319, 37.773351323464517],\n            [-122.468023916207073, 37.773303833556405],\n            [-122.468348575135167, 37.773289518371953],\n            [-122.469092496140973, 37.773256712542192],\n            [-122.469517084069324, 37.773237987003441],\n            [-122.470162692059887, 37.773209510586071],\n            [-122.470162712316579, 37.773209791534974],\n            [-122.471240089434815, 37.773162280380667],\n            [-122.47124006836178, 37.773161981865066],\n            [-122.471762122569857, 37.773138947752848],\n            [-122.472219951938214, 37.773117969260745],\n            [-122.472297341321692, 37.773114423074823],\n            [-122.473427836194134, 37.773062613687692],\n            [-122.473737577092777, 37.773048416620476],\n            [-122.474550910293516, 37.773011133644289],\n            [-122.474550931211951, 37.773011425844139],\n            [-122.47455168367884, 37.773011391539193],\n            [-122.475612802305008, 37.772962709520556],\n            [-122.475613644972711, 37.772962670675476],\n            [-122.475750968701433, 37.774828017958995],\n            [-122.475888270951586, 37.776692974324831],\n            [-122.476025278884237, 37.778553841183147],\n            [-122.476169188584777, 37.78047585000003],\n            [-122.476306551695615, 37.782405954593735],\n            [-122.476436803741322, 37.784271125057622],\n            [-122.476575148769683, 37.786128282045887],\n            [-122.476575166016133, 37.786128513873635],\n            [-122.476572244768761, 37.786128658440397],\n            [-122.476637454822679, 37.786966661899442],\n            [-122.47616220885665, 37.786978730627588],\n            [-122.475567725323828, 37.787005248954515],\n            [-122.475136959985235, 37.787024462123846],\n            [-122.474584006514732, 37.787049123020516],\n            [-122.474432824368861, 37.787072820298278],\n            [-122.473333621918172, 37.787245111436654],\n            [-122.473316434470121, 37.787247805418339],\n            [-122.472782224474642, 37.787331534391747],\n            [-122.47254342327507, 37.787368961705944],\n            [-122.472401902490546, 37.787384046501884],\n            [-122.472290534181823, 37.787395917162272],\n            [-122.468653534340191, 37.787783523544832],\n            [-122.466942641213976, 37.788133153852705],\n            [-122.465882841138949, 37.788349715761562],\n            [-122.4648365613821, 37.788563504283978],\n            [-122.463771243725489, 37.788781172337565],\n            [-122.459781586189493, 37.789596250165474],\n            [-122.45947565027717, 37.789710559160014],\n            [-122.459250455476877, 37.789713291862398],\n            [-122.459028627866218, 37.789715983297555],\n            [-122.459011873160264, 37.789719335764374],\n            [-122.457498733292852, 37.789996912625632],\n            [-122.455878319348855, 37.790294143976332],\n            [-122.454248357567437, 37.79059310209788],\n            [-122.452035629818212, 37.790998907609811],\n            [-122.450995459060991, 37.791209906278311],\n            [-122.449385188501296, 37.791484927305568],\n            [-122.449367313308201, 37.791487980191171],\n            [-122.449189583391288, 37.790608108274284],\n            [-122.449011564525605, 37.789726786022129],\n            [-122.448835781299294, 37.788856511426609],\n            [-122.448656220796209, 37.787977164570449],\n            [-122.4469741664482, 37.788186460801001],\n            [-122.446792779960703, 37.787261853518181],\n            [-122.446610465639836, 37.786302298311156],\n            [-122.446738337622591, 37.786243163870765],\n            [-122.446849274413296, 37.786186897081585],\n            [-122.447533801639068, 37.785411415165207],\n            [-122.447605133356163, 37.785275579171099],\n            [-122.447621599012791, 37.785194684567394],\n            [-122.447620107068687, 37.785083635258417],\n            [-122.447578549915917, 37.784998355250835],\n            [-122.447549635601661, 37.784906798974511],\n            [-122.447149436147441, 37.783030677550911],\n            [-122.447173033991248, 37.782710075581413],\n            [-122.447225622636566, 37.782575775503396],\n            [-122.447283893261542, 37.782434393634787],\n            [-122.447301513844337, 37.78239164221629],\n            [-122.447450898997985, 37.782195217632704],\n            [-122.447637300982407, 37.781719177617617],\n            [-122.447655108274333, 37.781537309189886],\n            [-122.447576361567485, 37.781175778551805],\n            [-122.447517982733274, 37.781069510753063],\n            [-122.447351927163439, 37.780152061280916],\n            [-122.447039806751391, 37.778622307248391],\n            [-122.447997721370214, 37.778501033647089],\n            [-122.448879206948348, 37.778389428728616],\n            [-122.448885763577039, 37.778388598994987]\n          ]\n        ]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {OBJECTID: 6, ZIP_CODE: 94123, ID: 94123},\n      geometry: {\n        type: 'Polygon',\n        coordinates: [\n          [\n            [-122.438402484723895, 37.794806973138577],\n            [-122.440045216960385, 37.794597761146619],\n            [-122.440868123190498, 37.794493055920753],\n            [-122.440870170501768, 37.794492795601883],\n            [-122.441712771485612, 37.794385578392699],\n            [-122.443384198876302, 37.794172877898092],\n            [-122.445035345747925, 37.79396273368863],\n            [-122.446587034424141, 37.793765298555968],\n            [-122.446446456540414, 37.792813716046261],\n            [-122.446587862952981, 37.793765120337646],\n            [-122.446727777261131, 37.794706464759514],\n            [-122.446727777275527, 37.794706465308671],\n            [-122.446751148304088, 37.794858932799087],\n            [-122.44687098056005, 37.795640691997477],\n            [-122.446928896449293, 37.796018515191513],\n            [-122.447014738218328, 37.796578509648619],\n            [-122.447014738232738, 37.796578510197754],\n            [-122.44715829625072, 37.79751500492933],\n            [-122.44715829626513, 37.797515005478481],\n            [-122.447209582420982, 37.797849561838987],\n            [-122.447303043858923, 37.798459232650295],\n            [-122.447327769221047, 37.798519415660031],\n            [-122.447341437979304, 37.798552685345861],\n            [-122.447400275900733, 37.798948048802856],\n            [-122.447466030932901, 37.799389886853575],\n            [-122.447613279369918, 37.80032370169468],\n            [-122.447614227653389, 37.80032479990944],\n            [-122.447802865090509, 37.801525678628579],\n            [-122.447819572978844, 37.801633208279924],\n            [-122.447819731578562, 37.801633051558142],\n            [-122.447857007904148, 37.801596177616553],\n            [-122.447921599691895, 37.801532283988202],\n            [-122.448359651469772, 37.801586782043685],\n            [-122.448802640091088, 37.801772003872607],\n            [-122.449043488821943, 37.801965383441527],\n            [-122.449178591741017, 37.802073857413127],\n            [-122.449460220896157, 37.80245428555321],\n            [-122.449536106109235, 37.802697377072583],\n            [-122.449565462756809, 37.802791419060213],\n            [-122.449583713807527, 37.803152915295549],\n            [-122.449583722697156, 37.803153095621241],\n            [-122.449495662264184, 37.803470319431604],\n            [-122.449388062152011, 37.803710849923448],\n            [-122.449253815658196, 37.803861977230383],\n            [-122.449124213448584, 37.804007874392056],\n            [-122.448954929708933, 37.80412855834809],\n            [-122.448814547024654, 37.804228638340902],\n            [-122.448316879890498, 37.804444627382082],\n            [-122.448245764546613, 37.8044754914729],\n            [-122.448240723025904, 37.804477679722268],\n            [-122.448240728857812, 37.804477717258706],\n            [-122.44824552349904, 37.804508484024247],\n            [-122.448279145759457, 37.80472422506687],\n            [-122.448321161555853, 37.804993824977359],\n            [-122.448323332142422, 37.805007750605469],\n            [-122.448455258275729, 37.806133277363898],\n            [-122.448456716038393, 37.806145711376217],\n            [-122.448529100304583, 37.806763241657009],\n            [-122.448398315024306, 37.806792871575105],\n            [-122.448372486009177, 37.806798105392311],\n            [-122.448348405000459, 37.806803997055574],\n            [-122.44832261235274, 37.806810603719661],\n            [-122.448274523063262, 37.806825132736471],\n            [-122.448250514438882, 37.806833770101044],\n            [-122.448204281209826, 37.806853075532878],\n            [-122.448182039290586, 37.806863057432189],\n            [-122.448159833037835, 37.806874411921982],\n            [-122.448139357121818, 37.80688573782485],\n            [-122.448117186873532, 37.806898464895561],\n            [-122.448103560271292, 37.806906930735266],\n            [-122.447833857922845, 37.807052164926837],\n            [-122.447528276286675, 37.807250818574119],\n            [-122.447180260711605, 37.80747705551984],\n            [-122.446637954280746, 37.807525151443585],\n            [-122.446476742583258, 37.807516824572637],\n            [-122.445255735074412, 37.807626931568663],\n            [-122.444832951299077, 37.807611928844082],\n            [-122.444812115030089, 37.807609525524043],\n            [-122.444789548054757, 37.807607150739592],\n            [-122.443882698723485, 37.807700913966812],\n            [-122.443762319418525, 37.807713359922936],\n            [-122.443684632386478, 37.807721507559208],\n            [-122.442739197031372, 37.807965235732532],\n            [-122.442711389346584, 37.807972404225552],\n            [-122.442625660786931, 37.808004032657479],\n            [-122.442524054141913, 37.808024247618199],\n            [-122.442354908341343, 37.808043514915532],\n            [-122.441767928096084, 37.808104685164672],\n            [-122.44153654297466, 37.808127036445633],\n            [-122.441200035212404, 37.808167598495942],\n            [-122.44095148917647, 37.808195724629321],\n            [-122.44065270005224, 37.808288542686931],\n            [-122.440627067703531, 37.808301325835579],\n            [-122.440575873699515, 37.808329637315019],\n            [-122.440528212527582, 37.808360637280757],\n            [-122.440504418161254, 37.808377510253422],\n            [-122.440482353473598, 37.808394354762264],\n            [-122.440462037446096, 37.808411857223902],\n            [-122.440440008975642, 37.808430074859068],\n            [-122.440419728804599, 37.808448949904253],\n            [-122.440401196955307, 37.808468483183979],\n            [-122.440382683383717, 37.808488702887828],\n            [-122.440369270902693, 37.808505405024498],\n            [-122.440221248842576, 37.808670595014306],\n            [-122.440123020723803, 37.808753931536479],\n            [-122.440031607015868, 37.808833035512706],\n            [-122.439928060968157, 37.808779113775664],\n            [-122.440270312303127, 37.808229595265985],\n            [-122.440282155842453, 37.808219099502388],\n            [-122.440294017657806, 37.80820928989008],\n            [-122.440307609508267, 37.808199452089056],\n            [-122.440319488926107, 37.808190329461823],\n            [-122.440334864961784, 37.808182522213436],\n            [-122.440348510624844, 37.808174743706033],\n            [-122.440379298231178, 37.808160502620083],\n            [-122.440394728431826, 37.80815475493111],\n            [-122.440410176225527, 37.808149693678615],\n            [-122.440427371995767, 37.808145290667582],\n            [-122.440444586383592, 37.808141573526278],\n            [-122.440470613795014, 37.808143892481645],\n            [-122.440632371579539, 37.808106894262245],\n            [-122.440777543613365, 37.808097638147814],\n            [-122.441785658321223, 37.807988336182923],\n            [-122.441808099289275, 37.807985906519384],\n            [-122.441799274649981, 37.807913258896662],\n            [-122.441490202960892, 37.807943755875684],\n            [-122.441489843938655, 37.807930027497129],\n            [-122.441472521937172, 37.807929625920565],\n            [-122.441480832705722, 37.807916441000579],\n            [-122.441399010156047, 37.807832633902123],\n            [-122.441414331805831, 37.807822767220159],\n            [-122.441512177188741, 37.807923479293905],\n            [-122.44162439956051, 37.807912017357232],\n            [-122.441545678197272, 37.807814424464247],\n            [-122.441557557740268, 37.807805301431408],\n            [-122.441658935146762, 37.807908701878773],\n            [-122.441779792066384, 37.807896411186228],\n            [-122.441788084829597, 37.807882540086432],\n            [-122.441704477043643, 37.807796702127824],\n            [-122.441718086585212, 37.807787550596132],\n            [-122.44181950044613, 37.807892323765437],\n            [-122.441935183814792, 37.807880804821842],\n            [-122.441943476554428, 37.807866933985672],\n            [-122.441859851343693, 37.807780409692931],\n            [-122.441873460855945, 37.807771257868716],\n            [-122.441976640855827, 37.807877375557908],\n            [-122.441977107703579, 37.807895222530654],\n            [-122.441816542778795, 37.807911600852826],\n            [-122.441823637077619, 37.807984277513498],\n            [-122.442320834639688, 37.807932139640414],\n            [-122.442377595612399, 37.807918156721222],\n            [-122.442423345751081, 37.807880319904761],\n            [-122.442454552098894, 37.807815940203007],\n            [-122.442446930178193, 37.807789283331502],\n            [-122.442372794146465, 37.807800805256427],\n            [-122.442345413582302, 37.807812930576347],\n            [-122.442346006240967, 37.807835582850217],\n            [-122.442033707111619, 37.807875062158132],\n            [-122.442009243703154, 37.807733999234173],\n            [-122.442027954502791, 37.807721329750571],\n            [-122.442048400903616, 37.807841170516582],\n            [-122.442059070073554, 37.807851982482966],\n            [-122.442207469058346, 37.807833743991878],\n            [-122.442217473805144, 37.807819158213746],\n            [-122.442189585584913, 37.807679524627673],\n            [-122.44220852946296, 37.807675779293724],\n            [-122.442236490235743, 37.807818158319698],\n            [-122.442248872177956, 37.807828255059988],\n            [-122.442314446214397, 37.807820307862364],\n            [-122.442321008509211, 37.807806465496753],\n            [-122.442293084181387, 37.807665459069689],\n            [-122.442311884371406, 37.807656221984004],\n            [-122.442337612108403, 37.807779409372287],\n            [-122.442355041151117, 37.807783929703042],\n            [-122.442395115206907, 37.807727644711157],\n            [-122.442384613878218, 37.807657084644539],\n            [-122.44241012033585, 37.80763949635341],\n            [-122.442685954576561, 37.807595809313327],\n            [-122.442711892175168, 37.807793159839584],\n            [-122.442714242657956, 37.807793886686525],\n            [-122.442762503926971, 37.807808807618663],\n            [-122.442779771325021, 37.807807149719757],\n            [-122.442902339949939, 37.807794142945916],\n            [-122.442998755417392, 37.807774012900218],\n            [-122.44305537242154, 37.807754538469467],\n            [-122.44312779660163, 37.807743731320251],\n            [-122.443201717191158, 37.807723971451296],\n            [-122.443260064122327, 37.807704468417526],\n            [-122.443291085252142, 37.807699150180341],\n            [-122.443284905918816, 37.807661481932094],\n            [-122.443264195467847, 37.807663883640146],\n            [-122.443274020298077, 37.807642433173122],\n            [-122.443270056810988, 37.807623269807593],\n            [-122.44314383017317, 37.807628783225987],\n            [-122.443254016387542, 37.807605679164965],\n            [-122.44326198542305, 37.807579452177009],\n            [-122.443135758859114, 37.807584965586791],\n            [-122.443242483942598, 37.807561918560637],\n            [-122.443256021380762, 37.807550021121365],\n            [-122.443252111820613, 37.807532917601364],\n            [-122.443237999416624, 37.807522848927505],\n            [-122.443246112189684, 37.807502113399792],\n            [-122.443244040453081, 37.807489099968812],\n            [-122.443229963993403, 37.807480404158795],\n            [-122.443238040829058, 37.80745829576658],\n            [-122.443234130578546, 37.807441191982505],\n            [-122.443218162072228, 37.807426347064215],\n            [-122.443264702406339, 37.807418712940589],\n            [-122.443256517776859, 37.807436702740098],\n            [-122.443274647533997, 37.807467993526231],\n            [-122.44326455321054, 37.80747914750733],\n            [-122.443284610988869, 37.807517960537304],\n            [-122.443274498692247, 37.807528428086727],\n            [-122.443278390296598, 37.807544845448142],\n            [-122.443294466994871, 37.807563808946817],\n            [-122.443284389944367, 37.807575649647809],\n            [-122.443286551537625, 37.807592095514579],\n            [-122.443302628241014, 37.807611058737429],\n            [-122.443292551178217, 37.80762289916445],\n            [-122.443296353650368, 37.807635884626045],\n            [-122.443302173270908, 37.807659823956676],\n            [-122.443308298708217, 37.807695432906783],\n            [-122.443434058250361, 37.807672072344801],\n            [-122.443672727711146, 37.807597406163168],\n            [-122.443654441112585, 37.80749401124762],\n            [-122.443659326683914, 37.80748225662078],\n            [-122.443872884696731, 37.807440280106206],\n            [-122.443843293810986, 37.807367974319583],\n            [-122.44370731452436, 37.807397684591926],\n            [-122.443671444290359, 37.807416130974829],\n            [-122.443653888762242, 37.807406805822907],\n            [-122.443615857187666, 37.807408806048031],\n            [-122.443601726794256, 37.807398051259632],\n            [-122.443646374280576, 37.807384267621238],\n            [-122.443657912040536, 37.807362102160489],\n            [-122.443677395248955, 37.807378949282132],\n            [-122.443708397548889, 37.807372944513865],\n            [-122.443719917316642, 37.807350092614648],\n            [-122.443739400535989, 37.807366939726066],\n            [-122.443768690788104, 37.807361649886793],\n            [-122.443780246134452, 37.8073401708521],\n            [-122.443799711046125, 37.807356331526904],\n            [-122.443829001635834, 37.807351041666962],\n            [-122.443838790315425, 37.807328218286891],\n            [-122.443858291875273, 37.807345751805421],\n            [-122.443944431867095, 37.807329910704055],\n            [-122.443955915261199, 37.807305685922557],\n            [-122.44397716482635, 37.807323877338213],\n            [-122.444023687043469, 37.8073155564826],\n            [-122.444033511615373, 37.807294106225484],\n            [-122.444052976916183, 37.807310266852966],\n            [-122.444104672197867, 37.807301173690028],\n            [-122.444114316981555, 37.807272858828142],\n            [-122.444139117510247, 37.80729442532332],\n            [-122.444173580792466, 37.807288363378881],\n            [-122.444194201234893, 37.80728252962394],\n            [-122.444071355206816, 37.80715270277112],\n            [-122.444216516082363, 37.807275294750141],\n            [-122.444262912050363, 37.807262168504906],\n            [-122.444272682607831, 37.807238658656139],\n            [-122.444290381984246, 37.807253474900222],\n            [-122.444329892128806, 37.807241835878372],\n            [-122.444341267517572, 37.807213492465038],\n            [-122.444362535128633, 37.807232370243902],\n            [-122.44440375797123, 37.807220016231902],\n            [-122.444415151652876, 37.807192359237938],\n            [-122.444436401305339, 37.807210550845831],\n            [-122.444546334776021, 37.807177835248929],\n            [-122.444557764011307, 37.807151551111282],\n            [-122.444577265002437, 37.807169084522954],\n            [-122.444645975607855, 37.807148723180354],\n            [-122.444656807573693, 37.807165712792234],\n            [-122.444442095756031, 37.807229685090327],\n            [-122.444483781319875, 37.807301104324431],\n            [-122.444798026960797, 37.807203901149613],\n            [-122.445256739502199, 37.807070664930905],\n            [-122.445225848727588, 37.807014862399406],\n            [-122.445091259282876, 37.807031503517287],\n            [-122.445058382323012, 37.807032045740513],\n            [-122.44505631062799, 37.807019032334502],\n            [-122.445158131368714, 37.807007052095038],\n            [-122.44517833798561, 37.806985429952121],\n            [-122.445116858617496, 37.806951420767781],\n            [-122.445030629048986, 37.806963830570979],\n            [-122.445058875964975, 37.806918727340673],\n            [-122.445006173970214, 37.806889380441703],\n            [-122.444888888156058, 37.806905735960221],\n            [-122.444874654156408, 37.80682493696483],\n            [-122.444919463246819, 37.806817330453363],\n            [-122.445007311205075, 37.806866699909307],\n            [-122.444974402625263, 37.806799942930326],\n            [-122.444993292526533, 37.806794137571423],\n            [-122.445038942963123, 37.806884719639513],\n            [-122.445121510119179, 37.806930742460146],\n            [-122.445046609432765, 37.806780897144854],\n            [-122.445065498977499, 37.806775091780075],\n            [-122.445153141586133, 37.806948762165227],\n            [-122.44523217658535, 37.806992095976476],\n            [-122.44535586222473, 37.80695571941591],\n            [-122.445247620593648, 37.806722643522114],\n            [-122.445266510453877, 37.806716838119371],\n            [-122.445374751789728, 37.806949914001784],\n            [-122.445469219634987, 37.806921573283674],\n            [-122.445352433919155, 37.8066927587953],\n            [-122.445373036116507, 37.806686238401404],\n            [-122.44548810952854, 37.806915767845673],\n            [-122.445561992695104, 37.80689463390474],\n            [-122.445445188748025, 37.806665133074851],\n            [-122.445464060244248, 37.8066586412139],\n            [-122.445580882228484, 37.806888828457545],\n            [-122.44570454953481, 37.806851765098479],\n            [-122.445651671462073, 37.806749628119896],\n            [-122.44565282578796, 37.806727633749716],\n            [-122.445895754405569, 37.806815647477016],\n            [-122.445736019894767, 37.806863607021306],\n            [-122.445754222526631, 37.806897643432812],\n            [-122.446384760166481, 37.806715556411739],\n            [-122.446258463322081, 37.806718327435846],\n            [-122.446193213892712, 37.806738632616792],\n            [-122.446170395914976, 37.806726648309962],\n            [-122.445981443875837, 37.806782644077451],\n            [-122.445970540045622, 37.80676290912637],\n            [-122.445598235532685, 37.806626211997774],\n            [-122.445606509444289, 37.806611653919497],\n            [-122.446001524256076, 37.806756217316881],\n            [-122.446149253941641, 37.806712575605459],\n            [-122.445708764584751, 37.806550221539489],\n            [-122.445717038134546, 37.806535664008109],\n            [-122.446176741453044, 37.806704568267236],\n            [-122.446283248720263, 37.80667328102048],\n            [-122.446005194935296, 37.806500006546784],\n            [-122.446020461726192, 37.80648808024214],\n            [-122.446305581169554, 37.806666731908173],\n            [-122.446420668040176, 37.806632556303882],\n            [-122.446151409366294, 37.806464630848126],\n            [-122.446166694812902, 37.806453390945222],\n            [-122.446443000465095, 37.806626007165498],\n            [-122.446554662537906, 37.806593261684583],\n            [-122.446391023698155, 37.806492266360543],\n            [-122.446406290771549, 37.806480340000242],\n            [-122.446524184932926, 37.806553247425605],\n            [-122.446620237835958, 37.806519385773647],\n            [-122.446642693746213, 37.806583567659246],\n            [-122.44670978090322, 37.806567352265269],\n            [-122.446939773843297, 37.806492135834091],\n            [-122.446948929215651, 37.806511213110113],\n            [-122.446720738906919, 37.806589146719396],\n            [-122.446733553252031, 37.806615717634571],\n            [-122.446996260681743, 37.80653378052115],\n            [-122.44699045975274, 37.806444601492437],\n            [-122.446974562378131, 37.806432503088267],\n            [-122.446987792972394, 37.806408935599343],\n            [-122.446983774594216, 37.806387713332704],\n            [-122.44696966191627, 37.806377645652319],\n            [-122.446979503500458, 37.806356881028954],\n            [-122.446973448766144, 37.806324017983009],\n            [-122.446942374816217, 37.806327277888172],\n            [-122.44695713738291, 37.806296131639499],\n            [-122.446941332573715, 37.806221538794638],\n            [-122.446922047288439, 37.806212242955326],\n            [-122.446935223870369, 37.806186616724325],\n            [-122.446919473110199, 37.806114083171188],\n            [-122.446903683817155, 37.806106103074534],\n            [-122.446913508081977, 37.806084652286692],\n            [-122.446909453048207, 37.80606205716353],\n            [-122.446700318081568, 37.806074437190453],\n            [-122.446888239127603, 37.80604523913599],\n            [-122.446903488381423, 37.806032626547122],\n            [-122.446899451700631, 37.806010717849745],\n            [-122.446881914446337, 37.806002079602202],\n            [-122.446893486335398, 37.805981286694831],\n            [-122.446879430339621, 37.805907352248376],\n            [-122.446670313096035, 37.805920418116813],\n            [-122.446859964791457, 37.805891192083081],\n            [-122.446873519346127, 37.805879980657039],\n            [-122.446859427027746, 37.80580467279912],\n            [-122.446845404479788, 37.805798037263322],\n            [-122.446855228367411, 37.805776586210264],\n            [-122.446849425403357, 37.805753333484326],\n            [-122.446649086514796, 37.805771061515294],\n            [-122.446833420536592, 37.805737116186556],\n            [-122.446845280397781, 37.805727305922368],\n            [-122.446841244096817, 37.805705397216052],\n            [-122.446823724582785, 37.805697445671754],\n            [-122.446835297139998, 37.805676653032066],\n            [-122.446831332492664, 37.805657489784885],\n            [-122.446817327967949, 37.805651540403126],\n            [-122.446825403536536, 37.805629431757723],\n            [-122.446805830072663, 37.805609152989824],\n            [-122.446817348267402, 37.805586300786253],\n            [-122.446809113007006, 37.805536305492353],\n            [-122.446789863569947, 37.805528382500277],\n            [-122.446803112068949, 37.805505501734793],\n            [-122.446787107265692, 37.805489284429996],\n            [-122.446700807332093, 37.805498949734627],\n            [-122.446698645389645, 37.80548250391827],\n            [-122.446795308825045, 37.805471980811141],\n            [-122.446771068810406, 37.805405768207393],\n            [-122.446462225224153, 37.805444515694951],\n            [-122.445989505497494, 37.805505194954378],\n            [-122.446003707846955, 37.805518695189633],\n            [-122.4460087518259, 37.805579044127001],\n            [-122.446547025898894, 37.805509728799308],\n            [-122.446550972467278, 37.805528205624398],\n            [-122.446518204506802, 37.805532866567553],\n            [-122.446489185128556, 37.80554845357441],\n            [-122.446462996481614, 37.80553995860523],\n            [-122.446437419711515, 37.805554801776253],\n            [-122.446402597499727, 37.805547136014376],\n            [-122.446377002372941, 37.805561292745764],\n            [-122.446359483641928, 37.805553341395452],\n            [-122.446335312891549, 37.805555800213412],\n            [-122.446311412770896, 37.805568555772986],\n            [-122.446295642000578, 37.805561262020625],\n            [-122.44627666253902, 37.805563635428271],\n            [-122.446249319434344, 37.805577134798497],\n            [-122.446231800006771, 37.805569182891531],\n            [-122.446148996869667, 37.805580163541499],\n            [-122.446123402382483, 37.805594320480907],\n            [-122.446104135009989, 37.805585710944754],\n            [-122.44608171290129, 37.805588827858948],\n            [-122.44605783038071, 37.805602270079603],\n            [-122.446038580653479, 37.805594346696139],\n            [-122.446017870868147, 37.805596748888597],\n            [-122.445994006657656, 37.805610876973709],\n            [-122.445976469264281, 37.80560223887116],\n            [-122.445950586862267, 37.805605412856671],\n            [-122.445928452266116, 37.805619512663846],\n            [-122.445909185255772, 37.805610903090184],\n            [-122.445885032816534, 37.805614048516972],\n            [-122.445861132260902, 37.80562680426543],\n            [-122.445845361169205, 37.805619510184115],\n            [-122.445814305801534, 37.805623456219109],\n            [-122.44579215352951, 37.805636869562669],\n            [-122.445772886191605, 37.805628260247033],\n            [-122.445750464048956, 37.80563137682369],\n            [-122.445724833141924, 37.805644160817579],\n            [-122.445709062413187, 37.805636866986909],\n            [-122.445683179641605, 37.805640040919442],\n            [-122.445655872372569, 37.805654912741964],\n            [-122.445638335008098, 37.805646274589208],\n            [-122.445605549302542, 37.805650249115246],\n            [-122.445581648680047, 37.80566300453242],\n            [-122.445565859972788, 37.805655024250306],\n            [-122.445531361592955, 37.805659714013281],\n            [-122.445505730631226, 37.805672497684945],\n            [-122.445489959918007, 37.805665203825008],\n            [-122.445462346810999, 37.80566840625292],\n            [-122.445436715841595, 37.805681190184124],\n            [-122.445420945133293, 37.805673896314971],\n            [-122.445391619690682, 37.8056778137015],\n            [-122.445362527733508, 37.805690654981625],\n            [-122.445346757369364, 37.8056833608223],\n            [-122.44531225895534, 37.805688050246587],\n            [-122.445290052615164, 37.805699404198599],\n            [-122.445276030220143, 37.805692768201546],\n            [-122.445243244128591, 37.805696742632556],\n            [-122.445217576794818, 37.805708153657022],\n            [-122.445203554404628, 37.805701517651372],\n            [-122.445170786636353, 37.80570617848889],\n            [-122.445148507984058, 37.805714786690388],\n            [-122.445105232410981, 37.805714813715646],\n            [-122.445083008046993, 37.805725481196227],\n            [-122.44507071598305, 37.80571881663689],\n            [-122.445037947513853, 37.80572347772349],\n            [-122.445017471439073, 37.805734803086857],\n            [-122.445001701099429, 37.805727508881461],\n            [-122.444908551660831, 37.805740032744836],\n            [-122.44488456097811, 37.805749355858453],\n            [-122.444846440036883, 37.805747924599146],\n            [-122.444825945937126, 37.805758563222234],\n            [-122.444811923572402, 37.805751927170057],\n            [-122.44478259772076, 37.805755844410804],\n            [-122.44476037365142, 37.805766512099389],\n            [-122.444713600749751, 37.805765222919185],\n            [-122.444691394641026, 37.805776576752621],\n            [-122.444677372284929, 37.805769940684463],\n            [-122.444653201761611, 37.805772399426502],\n            [-122.444630958989393, 37.805782380395051],\n            [-122.444585917098436, 37.805781062896116],\n            [-122.444563710619391, 37.805792416711171],\n            [-122.444549688278883, 37.80578578090244],\n            [-122.444518632419573, 37.805789726327305],\n            [-122.444494659650545, 37.805799735794025],\n            [-122.444451329400607, 37.805797703293351],\n            [-122.444429141227388, 37.805809743784408],\n            [-122.444413370583575, 37.805802449506146],\n            [-122.444390948345657, 37.805805566373394],\n            [-122.44436699318581, 37.805816262252314],\n            [-122.444352970844008, 37.805809625871085],\n            [-122.444327105931421, 37.805813485938437],\n            [-122.44430666567736, 37.805826184043205],\n            [-122.444289129128734, 37.805817545953296],\n            [-122.444266706866628, 37.805820662247768],\n            [-122.444242769660434, 37.805832044533943],\n            [-122.444228747333952, 37.805825408412545],\n            [-122.444206307444119, 37.80582783853189],\n            [-122.444182406178044, 37.805840593670816],\n            [-122.44416661758342, 37.805832613201659],\n            [-122.44414592563939, 37.805835701223295],\n            [-122.444121953151352, 37.805845710608445],\n            [-122.444025145055349, 37.805850740063669],\n            [-122.444001189835404, 37.805861436142784],\n            [-122.443959572249256, 37.805858688226643],\n            [-122.443935671622995, 37.805871443304085],\n            [-122.443919900675667, 37.805864149240215],\n            [-122.443902651728223, 37.805866493739174],\n            [-122.443880499045548, 37.805879906997674],\n            [-122.443864710121758, 37.805871926219289],\n            [-122.44378192426916, 37.805883591639486],\n            [-122.443756257338379, 37.805895002334175],\n            [-122.443714639749658, 37.805892254606199],\n            [-122.443692432758084, 37.80590360826271],\n            [-122.4436766621739, 37.805896314160641],\n            [-122.443654240222742, 37.805899430882093],\n            [-122.443630320868039, 37.805911499476395],\n            [-122.443614550281069, 37.80590420509148],\n            [-122.44359211035453, 37.805906635368508],\n            [-122.443568208950381, 37.805919390108215],\n            [-122.443552420405013, 37.80591140955697],\n            [-122.443535171434974, 37.805913754002177],\n            [-122.443511270025937, 37.805926509004905],\n            [-122.443495481838426, 37.805918528714912],\n            [-122.443473041543214, 37.805920958425858],\n            [-122.443450852475209, 37.80593299846943],\n            [-122.443435081915695, 37.805925704609677],\n            [-122.443407468616002, 37.805928906281792],\n            [-122.443388776471963, 37.805942262421105],\n            [-122.443369509665189, 37.805933652158522],\n            [-122.443347069022408, 37.805936082125754],\n            [-122.443328395172557, 37.80595012440785],\n            [-122.443309128031871, 37.805941514415672],\n            [-122.443291878362203, 37.805943859111288],\n            [-122.443267959626397, 37.805955927620595],\n            [-122.443252189065603, 37.805948633187285],\n            [-122.443233209414942, 37.805951006379615],\n            [-122.443207595577817, 37.805964475989526],\n            [-122.443174557723637, 37.805958839788218],\n            [-122.443148908639841, 37.80597093678324],\n            [-122.443134868425886, 37.805963614373887],\n            [-122.443058967715231, 37.805973792109128],\n            [-122.443036832460166, 37.805987891372702],\n            [-122.443017547724423, 37.805978594894604],\n            [-122.442981318355606, 37.805983312150161],\n            [-122.442948532359026, 37.805987285937427],\n            [-122.442926379114695, 37.806000698747546],\n            [-122.44290884267825, 37.805992060178127],\n            [-122.442839827294776, 37.806000751431881],\n            [-122.442815943694384, 37.806014192451634],\n            [-122.442798425230706, 37.806006240298515],\n            [-122.442734582834518, 37.806014159544731],\n            [-122.442707256867862, 37.806028343976273],\n            [-122.44268971976544, 37.806019705660304],\n            [-122.442636241331058, 37.806026767128834],\n            [-122.442610646012994, 37.806040923030253],\n            [-122.442591378939156, 37.80603231319558],\n            [-122.442551688858117, 37.806037087047187],\n            [-122.442547725650329, 37.806017923926198],\n            [-122.443029120691975, 37.805957802366279],\n            [-122.443387985849299, 37.805912059110995],\n            [-122.443753825765924, 37.805868259987832],\n            [-122.443769345089194, 37.805865944017846],\n            [-122.443957339015583, 37.805839496905513],\n            [-122.444492227815289, 37.805772993462419],\n            [-122.444668235229059, 37.805751549942215],\n            [-122.445284142224111, 37.805672032526566],\n            [-122.445279062855903, 37.805610310694497],\n            [-122.44527006920417, 37.805597411188494],\n            [-122.444483346869873, 37.805698286438428],\n            [-122.443744945559246, 37.805793553184138],\n            [-122.443018600699929, 37.805886555905765],\n            [-122.442516549650193, 37.805951138305055],\n            [-122.442427410705633, 37.806050808392641],\n            [-122.442522464016989, 37.806507977467341],\n            [-122.442586642075881, 37.806579026869471],\n            [-122.443131937777821, 37.806513045572309],\n            [-122.443499493172467, 37.806468532301039],\n            [-122.443667282141945, 37.806463706682081],\n            [-122.443846679856065, 37.806439461357343],\n            [-122.443959061743129, 37.806434175357609],\n            [-122.443938050605254, 37.806358981524156],\n            [-122.443116244562106, 37.806442570813587],\n            [-122.442613848569025, 37.80649411140103],\n            [-122.442611615303633, 37.806474919513256],\n            [-122.442654765933469, 37.806470088368528],\n            [-122.442661399886077, 37.806458991436592],\n            [-122.442687570467214, 37.806466801090252],\n            [-122.442708298579689, 37.80646508646474],\n            [-122.442716537115061, 37.806449155723413],\n            [-122.442746276492144, 37.806461026947929],\n            [-122.442770051771902, 37.806443467084335],\n            [-122.44279979080919, 37.80645533830107],\n            [-122.442874033560784, 37.806447934694987],\n            [-122.442882218173921, 37.806429944918698],\n            [-122.442912011462568, 37.806443875399388],\n            [-122.442927548550728, 37.806442245978758],\n            [-122.442937481103471, 37.806424914130673],\n            [-122.442965543726487, 37.806438873384522],\n            [-122.442990995725921, 37.806419225391323],\n            [-122.443019058349662, 37.806433184357886],\n            [-122.443039786445084, 37.806431469674095],\n            [-122.443047971009094, 37.806413479611678],\n            [-122.443077764322211, 37.806427410050546],\n            [-122.443098474448703, 37.80642500892381],\n            [-122.443108388985991, 37.806406990354105],\n            [-122.443136451627183, 37.806420949292765],\n            [-122.443157179716479, 37.806419234588326],\n            [-122.443165418150457, 37.806403303815522],\n            [-122.443193426900422, 37.806415203442874],\n            [-122.443215885660081, 37.806413459937652],\n            [-122.443222483596756, 37.806400990383416],\n            [-122.443248689797912, 37.806410172509004],\n            [-122.443329817859791, 37.806401281706691],\n            [-122.443338074230084, 37.806386037628911],\n            [-122.443366083001223, 37.806397937215287],\n            [-122.443447229004846, 37.806389732764778],\n            [-122.443455467380517, 37.806373802246185],\n            [-122.443480033821288, 37.806386445534933],\n            [-122.443505916940026, 37.806383271811711],\n            [-122.443512496848314, 37.806370115534087],\n            [-122.443538721058857, 37.806379984576957],\n            [-122.443562892155768, 37.806377525783311],\n            [-122.443569490023762, 37.806365055935018],\n            [-122.44359742694175, 37.80637420973634],\n            [-122.443676842221919, 37.806366033924192],\n            [-122.443672164594389, 37.806253487231395],\n            [-122.443695462542081, 37.806349932284753],\n            [-122.443707916670277, 37.806362774599044],\n            [-122.44379596596373, 37.806353769679554],\n            [-122.443802527838344, 37.806339926678575],\n            [-122.443830500721077, 37.806350453289745],\n            [-122.443861574478419, 37.806347194484687],\n            [-122.443868190266627, 37.806335411052103],\n            [-122.443896109229783, 37.80634387807568],\n            [-122.443922010642723, 37.806341390962501],\n            [-122.443913871646629, 37.806228901600704],\n            [-122.443940541034891, 37.806321857121844],\n            [-122.443956527422003, 37.806337388377891],\n            [-122.44398415881686, 37.80633487273537],\n            [-122.444004419522869, 37.806315310362876],\n            [-122.444018675589732, 37.806330870132562],\n            [-122.444044576647997, 37.806328382998174],\n            [-122.444051174437902, 37.806315913397398],\n            [-122.444077344761538, 37.806323722474062],\n            [-122.444106688857119, 37.806320492116114],\n            [-122.444113268646205, 37.806307335530214],\n            [-122.444137744599871, 37.806316546256639],\n            [-122.444163610043603, 37.806312686225482],\n            [-122.444171919814423, 37.806299501392182],\n            [-122.444198126803698, 37.806308683844726],\n            [-122.44422572221977, 37.806304795006142],\n            [-122.444232302000771, 37.806291638962733],\n            [-122.444258508634277, 37.806300820858432],\n            [-122.444287834382735, 37.806296903754081],\n            [-122.44429446807581, 37.806285806729939],\n            [-122.444320620790435, 37.806292929589091],\n            [-122.444410328338193, 37.806281149679826],\n            [-122.444398674018615, 37.806166658108886],\n            [-122.444430732743257, 37.806267078693303],\n            [-122.444443114393508, 37.806277175761053],\n            [-122.44453626493052, 37.806264652260793],\n            [-122.444546322932027, 37.806252125028941],\n            [-122.444572511964111, 37.80626062069139],\n            [-122.44466566211247, 37.806248097094617],\n            [-122.444654277108668, 37.8061439020343],\n            [-122.444684317803762, 37.806233368169231],\n            [-122.444698448132328, 37.806244122830272],\n            [-122.444729504511017, 37.806240177078124],\n            [-122.444737832507585, 37.806227678906012],\n            [-122.444765733548039, 37.806235459291536],\n            [-122.444782982907213, 37.806233114935374],\n            [-122.44479131087958, 37.806220616210318],\n            [-122.444819211930195, 37.806228396857783],\n            [-122.444886496978683, 37.806219733530369],\n            [-122.44488089641429, 37.806138105148783],\n            [-122.444906901269448, 37.806205662186763],\n            [-122.444919282967007, 37.806215758930051],\n            [-122.444986568338436, 37.806207095539854],\n            [-122.444994931901647, 37.806195969945342],\n            [-122.445021067006977, 37.806202405936702],\n            [-122.445093525002505, 37.8061929701732],\n            [-122.445087942204026, 37.80611202850794],\n            [-122.445113929253864, 37.806178899068257],\n            [-122.445128041656801, 37.806188967520207],\n            [-122.445202229600525, 37.806179502882479],\n            [-122.445210557849578, 37.806167004396592],\n            [-122.445236728249824, 37.806174813490792],\n            [-122.44525743822885, 37.806172411710314],\n            [-122.445265766467799, 37.80615991322049],\n            [-122.445267302625481, 37.806086407881679],\n            [-122.445285033545986, 37.806168522898403],\n            [-122.445310916864869, 37.806165349047845],\n            [-122.445305315838027, 37.806083720685585],\n            [-122.445331267107818, 37.80614921860834],\n            [-122.445347145482373, 37.806160631088311],\n            [-122.445366125472304, 37.806158257824791],\n            [-122.445374453006437, 37.806145759613244],\n            [-122.44540062410141, 37.806153568385149],\n            [-122.445424776743849, 37.806150423332426],\n            [-122.445433086611402, 37.80613723812958],\n            [-122.445434730189021, 37.806067851662334],\n            [-122.445459293346119, 37.806146420033315],\n            [-122.445479985322095, 37.806143331781477],\n            [-122.445489989537165, 37.806128745440887],\n            [-122.445516214271365, 37.806138614038851],\n            [-122.445543827543716, 37.806135411324078],\n            [-122.445560788683153, 37.80612208366891],\n            [-122.445567131287589, 37.806165929693421],\n            [-122.445546061556797, 37.806154603157502],\n            [-122.445523639245678, 37.806157719690731],\n            [-122.445501522738013, 37.806172505842895],\n            [-122.445489122634442, 37.806161722734075],\n            [-122.44546670032598, 37.806164839531021],\n            [-122.445442817508763, 37.806178281625698],\n            [-122.445432201695837, 37.806169528989997],\n            [-122.445352822460961, 37.806179079403755],\n            [-122.445327226916191, 37.806193235905667],\n            [-122.445316593481564, 37.806183797096139],\n            [-122.445244135177305, 37.806193233002396],\n            [-122.44522027063509, 37.806207361203953],\n            [-122.445207906544567, 37.80619795120483],\n            [-122.445188926532239, 37.806200324168309],\n            [-122.445161708883106, 37.806218628036419],\n            [-122.445135448551525, 37.806207386764015],\n            [-122.445111565653477, 37.806220828516935],\n            [-122.44509921920563, 37.806212104669896],\n            [-122.445030203866864, 37.80622079693034],\n            [-122.445008123555382, 37.806236955848796],\n            [-122.444978438202398, 37.806227144485362],\n            [-122.444954644838973, 37.806244018373903],\n            [-122.444924959836314, 37.806234206991327],\n            [-122.444902861169254, 37.806249679463384],\n            [-122.444888730810021, 37.806238924826829],\n            [-122.444823175735436, 37.806247559901692],\n            [-122.444801113352611, 37.806264405213646],\n            [-122.444785216712205, 37.806252306233745],\n            [-122.444723104639422, 37.806260197747797],\n            [-122.444699383130299, 37.80627981731422],\n            [-122.444681702577071, 37.806265687549761],\n            [-122.444619590489268, 37.806273579283847],\n            [-122.444597491739671, 37.806289051423988],\n            [-122.444583361417187, 37.806278296750953],\n            [-122.444519536610485, 37.806286903400981],\n            [-122.444493959540637, 37.806301746142793],\n            [-122.44447984720945, 37.80629167788976],\n            [-122.444386678651156, 37.806303514912976],\n            [-122.444361209083098, 37.806322476775328],\n            [-122.444343546554336, 37.806309033118175],\n            [-122.444324566500356, 37.806311406491666],\n            [-122.444297366567298, 37.806330396317819],\n            [-122.444279722039454, 37.806317639632702],\n            [-122.444255568948051, 37.806320784456545],\n            [-122.444233506414719, 37.806337629662124],\n            [-122.444217609851108, 37.806325530605875],\n            [-122.444126171547992, 37.806337339172615],\n            [-122.444102396615747, 37.806354899035341],\n            [-122.444084751416256, 37.806342142057929],\n            [-122.444034733554687, 37.806349147388161],\n            [-122.443955318332002, 37.806357323441311],\n            [-122.443976328801966, 37.806432517557667],\n            [-122.444009133253417, 37.806429229637253],\n            [-122.44401497169018, 37.80645385590833],\n            [-122.443983915176943, 37.806457801197638],\n            [-122.443991501564284, 37.806483085111559],\n            [-122.444006566508079, 37.806529534342857],\n            [-122.443998364182022, 37.80654683776438],\n            [-122.444012889909018, 37.806572694020851],\n            [-122.444137456251781, 37.806569953925113],\n            [-122.444004705900142, 37.806590683869416],\n            [-122.444008597616772, 37.806607101209622],\n            [-122.444028224510816, 37.8066294400098],\n            [-122.444014687364202, 37.806641337539759],\n            [-122.444016813135761, 37.806656410256579],\n            [-122.444032907804939, 37.806676060090197],\n            [-122.4440210291, 37.806685183643154],\n            [-122.444025100564104, 37.806708465032258],\n            [-122.444042961537718, 37.806729459206764],\n            [-122.444031118428768, 37.806739955631187],\n            [-122.444035226540592, 37.806764609873134],\n            [-122.444052799240296, 37.806774621138679],\n            [-122.444173599989711, 37.806760268693552],\n            [-122.444175761756156, 37.806776714546551],\n            [-122.443903104192728, 37.806809364848277],\n            [-122.443899212488802, 37.80679294750523],\n            [-122.443999302417467, 37.806780996791801],\n            [-122.444012857566491, 37.806769785696332],\n            [-122.443998457621589, 37.806748734467796],\n            [-122.444004821781832, 37.806727340974426],\n            [-122.443985267126379, 37.806707748443934],\n            [-122.443996768032036, 37.80668420981921],\n            [-122.443979015619519, 37.806667334220748],\n            [-122.443988858092823, 37.806646570397213],\n            [-122.443972709865449, 37.806624861254427],\n            [-122.443980822328029, 37.806604125398131],\n            [-122.443978768461875, 37.806591798410317],\n            [-122.443966422424324, 37.806583074165033],\n            [-122.443972768605505, 37.806560994240272],\n            [-122.443949501347888, 37.806531848697659],\n            [-122.443975330928197, 37.806526615843026],\n            [-122.443974234501226, 37.806484743188264],\n            [-122.443966666100792, 37.806460145980267],\n            [-122.443854499850644, 37.806473669177059],\n            [-122.443860373479154, 37.806499667782823],\n            [-122.443717402901086, 37.806526746415607],\n            [-122.443667420469765, 37.806535124185942],\n            [-122.443645087827377, 37.806541672798915],\n            [-122.443622719585392, 37.806546848536961],\n            [-122.443600333023568, 37.806551337843935],\n            [-122.443577910179286, 37.806554454561891],\n            [-122.443581820462299, 37.80657155833741],\n            [-122.443586556699174, 37.806620238019541],\n            [-122.443637961503612, 37.806864552713115],\n            [-122.443633273319165, 37.806883858652405],\n            [-122.443607138425932, 37.806877421799527],\n            [-122.443529794028962, 37.806898611546323],\n            [-122.443526675114754, 37.806911710787858],\n            [-122.443502306167488, 37.806906618541966],\n            [-122.443424944087113, 37.80692712178169],\n            [-122.443421824461069, 37.806940221031809],\n            [-122.443397438234925, 37.806934442320348],\n            [-122.443318380993759, 37.806956346879609],\n            [-122.443315262039832, 37.806969446115438],\n            [-122.443289162740911, 37.806964382337512],\n            [-122.443211818508658, 37.806985571869724],\n            [-122.443208734784008, 37.807000044253662],\n            [-122.443180869538779, 37.806993635816845],\n            [-122.443103524899072, 37.807014825283645],\n            [-122.443102154219687, 37.807028582437368],\n            [-122.443076036948625, 37.80702283217979],\n            [-122.442998692594642, 37.807044021572032],\n            [-122.442995572888506, 37.807057120810583],\n            [-122.442969456307765, 37.807051370518039],\n            [-122.442895554290288, 37.807071816676462],\n            [-122.442876807520932, 37.807083113165248],\n            [-122.442860372447001, 37.807050420945309],\n            [-122.44288643546534, 37.807054111684081],\n            [-122.442950027240173, 37.807036582576075],\n            [-122.442956535452808, 37.807020680875418],\n            [-122.44298955579778, 37.807025630704103],\n            [-122.443044549671924, 37.807010303103709],\n            [-122.443051093786181, 37.806995773988241],\n            [-122.443080653430101, 37.80700078080757],\n            [-122.443137377283094, 37.806985425210136],\n            [-122.443143903403268, 37.806970209382371],\n            [-122.443176924084369, 37.806975159152948],\n            [-122.443230187542511, 37.806959860250316],\n            [-122.443236731623188, 37.806945331399028],\n            [-122.443266291259548, 37.806950338171859],\n            [-122.443323015021249, 37.806934981935846],\n            [-122.443327829074263, 37.806920481311195],\n            [-122.443311249747254, 37.806882297698685],\n            [-122.443357388360823, 37.806925488066938],\n            [-122.443415825168074, 37.806909417378883],\n            [-122.443402365072131, 37.806858134260111],\n            [-122.443446755408701, 37.806900666674323],\n            [-122.443506922515155, 37.806884567152593],\n            [-122.443513466527847, 37.806870038011155],\n            [-122.443541295807862, 37.80687507323001],\n            [-122.443611772372606, 37.806856057118701],\n            [-122.443568098366953, 37.806642517527813],\n            [-122.443490717910933, 37.80666233411602],\n            [-122.443464637369544, 37.806657956797729],\n            [-122.443447387531151, 37.806660301241159],\n            [-122.443394142301429, 37.806676286675255],\n            [-122.443369792101194, 37.80667188082289],\n            [-122.443307715462936, 37.806681144456071],\n            [-122.443302883453555, 37.806694958647995],\n            [-122.443274946458374, 37.806685805052041],\n            [-122.443204469968975, 37.806704820962679],\n            [-122.443178370770624, 37.806699757160004],\n            [-122.443107894250431, 37.806718773287464],\n            [-122.44308352539521, 37.806713680954857],\n            [-122.443013048491437, 37.806732697031315],\n            [-122.442985237265603, 37.806728348120288],\n            [-122.442950738216922, 37.806733036852982],\n            [-122.44291647270785, 37.806746649473865],\n            [-122.442888625547027, 37.806740927400313],\n            [-122.442821555362244, 37.806757827053026],\n            [-122.442793726174969, 37.806752791664266],\n            [-122.442731613479054, 37.806760682403457],\n            [-122.442721537132741, 37.806772522772178],\n            [-122.442695384049358, 37.806765399290242],\n            [-122.442678134861055, 37.806767743884308],\n            [-122.442671608648851, 37.806782959137742],\n            [-122.442640174735473, 37.806772489262421],\n            [-122.44262290758212, 37.806774147415787],\n            [-122.442611226258151, 37.806790821310969],\n            [-122.442619566601024, 37.806844935481941],\n            [-122.4425572741916, 37.806845961528367],\n            [-122.442543113877818, 37.806767907443565],\n            [-122.442812274930034, 37.80673394443496],\n            [-122.442895043918895, 37.806721593264598],\n            [-122.44288439854499, 37.806645541768312],\n            [-122.44286390392358, 37.80665618032328],\n            [-122.442620734223425, 37.806691089066426],\n            [-122.442586432743397, 37.80670332845169],\n            [-122.442569254711358, 37.806708418497294],\n            [-122.442553843632766, 37.806714852893514],\n            [-122.44253845015912, 37.806721973451488],\n            [-122.442524957636692, 37.80672882453954],\n            [-122.442523074304333, 37.806729780720396],\n            [-122.44251132146853, 37.806743708869504],\n            [-122.442504741349737, 37.806756865090371],\n            [-122.442501639536246, 37.806770651023797],\n            [-122.442501980779383, 37.80678369296961],\n            [-122.442511153361352, 37.806803457290563],\n            [-122.442513800037688, 37.806838436574978],\n            [-122.442498190669355, 37.806837320216118],\n            [-122.442500262610309, 37.806850333930662],\n            [-122.442500855308538, 37.806872986207821],\n            [-122.442513308640088, 37.806885829207545],\n            [-122.442543448720272, 37.807045340228143],\n            [-122.442550657494735, 37.807056209147177],\n            [-122.442552729104918, 37.807069222865962],\n            [-122.442549574089071, 37.807080949216051],\n            [-122.442542975993348, 37.807093419280186],\n            [-122.442532880918762, 37.80710457321085],\n            [-122.442521020253452, 37.807114382489758],\n            [-122.442507375020014, 37.80712216152461],\n            [-122.442493693848277, 37.807128567143486],\n            [-122.442476479790699, 37.807132284309965],\n            [-122.44245921255002, 37.807133942439243],\n            [-122.442443603113219, 37.807132825798654],\n            [-122.442426210144987, 37.807129678620242],\n            [-122.442401877121071, 37.807125959012424],\n            [-122.442394668361601, 37.807115090084459],\n            [-122.442382322776425, 37.807106365943092],\n            [-122.442371670941014, 37.807096240723055],\n            [-122.442357217513063, 37.80707312972298],\n            [-122.442353415933297, 37.807060144492915],\n            [-122.442352751441661, 37.807034746485243],\n            [-122.442355888527402, 37.807022333707671],\n            [-122.442327317913012, 37.80685661596673],\n            [-122.442325228043273, 37.806842915816503],\n            [-122.442319678177554, 37.80682927264953],\n            [-122.442314163892661, 37.806817002627895],\n            [-122.442303476176264, 37.806805503986638],\n            [-122.442292807121106, 37.806794692040256],\n            [-122.442278730911681, 37.806785996390175],\n            [-122.44225259583861, 37.806779559791913],\n            [-122.442263912071212, 37.806815083032639],\n            [-122.442334351220893, 37.807191623601256],\n            [-122.442574008114292, 37.807154713430769],\n            [-122.442579917970377, 37.807182085225314],\n            [-122.442316125837024, 37.807222826535309],\n            [-122.442296128149565, 37.807120146892402],\n            [-122.442249660075092, 37.807130526084627],\n            [-122.442243205590515, 37.807148487593025],\n            [-122.442218675723581, 37.80713721717698],\n            [-122.442177362768064, 37.807146137987679],\n            [-122.442169249735414, 37.807166873443258],\n            [-122.44214120495144, 37.807153600709071],\n            [-122.442110219881215, 37.807160291509724],\n            [-122.442102143088249, 37.807182399820256],\n            [-122.442074080353734, 37.807168440637511],\n            [-122.441951871381676, 37.807195175211561],\n            [-122.441943758626778, 37.807215910645752],\n            [-122.441915713871779, 37.807202638132658],\n            [-122.441829644720443, 37.807221223495034],\n            [-122.441823243975179, 37.807241243729116],\n            [-122.441796947879098, 37.807228628850183],\n            [-122.441714321769382, 37.807246470710545],\n            [-122.441706226203735, 37.807267892572305],\n            [-122.441678163511327, 37.807253933295577],\n            [-122.441590382530393, 37.807273233392451],\n            [-122.441583945818934, 37.807291881022437],\n            [-122.441559397367783, 37.80727992432282],\n            [-122.441528412884566, 37.807286614959068],\n            [-122.441522065914484, 37.807308694749302],\n            [-122.4414922725324, 37.807294763645217],\n            [-122.441459575632209, 37.807302169181312],\n            [-122.441451444085047, 37.807322218159875],\n            [-122.441425148030646, 37.807309603472838],\n            [-122.441347676557456, 37.807325986488941],\n            [-122.441341185930639, 37.807342574807244],\n            [-122.441318422046436, 37.807332648592578],\n            [-122.441240951224984, 37.807349031801699],\n            [-122.441234550317162, 37.807369052277899],\n            [-122.441208253583667, 37.807356437279445],\n            [-122.44112907030356, 37.807373535328814],\n            [-122.44112095660725, 37.807394270717083],\n            [-122.44109464263579, 37.807380969523756],\n            [-122.440999993407189, 37.807402442127575],\n            [-122.440987126791967, 37.807373811300785],\n            [-122.441006340540554, 37.807380362365826],\n            [-122.441088966969374, 37.807362521001856],\n            [-122.441071293907683, 37.807282464951484],\n            [-122.441105839449861, 37.807345761826411],\n            [-122.441121664279194, 37.807355115562864],\n            [-122.441199135479366, 37.807338732426437],\n            [-122.441181426400448, 37.807257303252058],\n            [-122.441215936141603, 37.807319227778606],\n            [-122.441235275185775, 37.807330583566994],\n            [-122.44130240044376, 37.80731574411066],\n            [-122.44131244119076, 37.80730253099884],\n            [-122.441289899930467, 37.807234916217887],\n            [-122.441336846017577, 37.807308996562313],\n            [-122.441403970896872, 37.807294157328393],\n            [-122.441389758204977, 37.807214043807704],\n            [-122.441424286396526, 37.807276654700864],\n            [-122.441440110897986, 37.807286008125857],\n            [-122.441505522979043, 37.807271883482372],\n            [-122.441489561884524, 37.807191112300579],\n            [-122.441524179900497, 37.807257155053932],\n            [-122.441538238159126, 37.807265164360558],\n            [-122.441610518456187, 37.807248866405487],\n            [-122.441598394609557, 37.807182453357271],\n            [-122.441630905705154, 37.807234109473121],\n            [-122.441643233270554, 37.80724214726019],\n            [-122.441715531475523, 37.807226535673394],\n            [-122.441722129729229, 37.807214065930424],\n            [-122.441749959016704, 37.807219101571583],\n            [-122.44181537098703, 37.807204977030693],\n            [-122.441821969214871, 37.8071925070075],\n            [-122.441804977662258, 37.807138535507519],\n            [-122.441848068147848, 37.807197571115559],\n            [-122.441911750066581, 37.807183474731303],\n            [-122.441901356658576, 37.80711703321635],\n            [-122.441942735164389, 37.807176783982825],\n            [-122.442002974305893, 37.807163431240092],\n            [-122.44201133876993, 37.807152305853435],\n            [-122.442037401781846, 37.80715599677972],\n            [-122.442094216092357, 37.807144073567486],\n            [-122.44210250836673, 37.807130202449336],\n            [-122.442130373562975, 37.807136610866159],\n            [-122.442190612977058, 37.807123257747243],\n            [-122.4421768301127, 37.807059618983033],\n            [-122.442207521070316, 37.807107871278774],\n            [-122.442221597332434, 37.80711656693682],\n            [-122.442292164942742, 37.807100983492141],\n            [-122.442243704644795, 37.806836704402386],\n            [-122.442167767011739, 37.806845508971712],\n            [-122.442147308147, 37.806857520267137],\n            [-122.442072831477645, 37.806855999790052],\n            [-122.442050696118415, 37.806870098860529],\n            [-122.442038314362932, 37.806860002097636],\n            [-122.44197618353418, 37.806867205731571],\n            [-122.44195577849186, 37.806881276017322],\n            [-122.441943396394166, 37.806871178975598],\n            [-122.441881247592036, 37.806877696126804],\n            [-122.441859148445275, 37.806893168021055],\n            [-122.44184673044974, 37.806881698103723],\n            [-122.441786329930238, 37.806888873147223],\n            [-122.441762464513715, 37.80690300092192],\n            [-122.441750082438688, 37.806892903859939],\n            [-122.441684509153674, 37.806900850470612],\n            [-122.441658930973958, 37.80691569315082],\n            [-122.441646530958224, 37.806904909645212],\n            [-122.441572305572137, 37.806912998636243],\n            [-122.441548386244634, 37.806925066794669],\n            [-122.441465311637984, 37.806925747662177],\n            [-122.441443158191802, 37.806939160185685],\n            [-122.44142908206166, 37.806930464709019],\n            [-122.44136529221457, 37.806940441967662],\n            [-122.441344958843104, 37.806957258153332],\n            [-122.441327368515545, 37.806946560051927],\n            [-122.441311849243505, 37.806948875968999],\n            [-122.441293246205632, 37.806965663663163],\n            [-122.441275637234966, 37.806954278858043],\n            [-122.44126011795251, 37.806956594493755],\n            [-122.441239730706059, 37.80697135136279],\n            [-122.441223906642946, 37.806961997904651],\n            [-122.441151465000161, 37.806972117453661],\n            [-122.441129311490656, 37.806985530192655],\n            [-122.441115235374099, 37.806976834129472],\n            [-122.441037621302598, 37.806987725743447],\n            [-122.44101719810962, 37.807001109708246],\n            [-122.441003139964337, 37.806993100613703],\n            [-122.440922064462001, 37.807004048844455],\n            [-122.440901659189493, 37.807018119222057],\n            [-122.440895696481135, 37.806988688312863],\n            [-122.441218230630383, 37.806943549393232],\n            [-122.441263058469275, 37.806936630972665],\n            [-122.441435464921327, 37.80690975751326],\n            [-122.441433016200833, 37.806882328691337],\n            [-122.441372490336036, 37.806884698487615],\n            [-122.441304935046745, 37.806883063866231],\n            [-122.441274237201611, 37.806900737372722],\n            [-122.441242947719005, 37.806895758576474],\n            [-122.44119330612007, 37.806917177241274],\n            [-122.441110393048419, 37.806924035754299],\n            [-122.441042945411667, 37.806926519579946],\n            [-122.440998117551175, 37.806933437642307],\n            [-122.440918593700744, 37.806937493327403],\n            [-122.440899792827196, 37.80694673020367],\n            [-122.440782200958282, 37.806951412279737],\n            [-122.440680218094201, 37.806957210845738],\n            [-122.44054721454367, 37.806968326842338],\n            [-122.440468121234176, 37.806988856613863],\n            [-122.440371365223044, 37.806995942367976],\n            [-122.440134737571853, 37.807016316747912],\n            [-122.43989673886324, 37.807050447763743],\n            [-122.43967267172718, 37.807087782808438],\n            [-122.439538386124013, 37.807116087220599],\n            [-122.439408914197855, 37.80712989048353],\n            [-122.439239537222377, 37.807140229675355],\n            [-122.439104802429114, 37.807151372502958],\n            [-122.438766800452754, 37.807200879974303],\n            [-122.438299128879564, 37.807256638299236],\n            [-122.437960892936687, 37.807297219553782],\n            [-122.437688625577763, 37.807344957007658],\n            [-122.437514504314919, 37.807372539848515],\n            [-122.437376577168436, 37.807394034049501],\n            [-122.437259217227975, 37.807407636246566],\n            [-122.437146815479664, 37.80741222942855],\n            [-122.437031382840118, 37.807433353744614],\n            [-122.436885215537345, 37.80747077743743],\n            [-122.436714393247598, 37.807492124635075],\n            [-122.436614801865048, 37.807523289038706],\n            [-122.436563088290782, 37.807531692199284],\n            [-122.436507376472989, 37.80751955916309],\n            [-122.436298557575597, 37.807544276277241],\n            [-122.436240083275962, 37.807558970839189],\n            [-122.436155205939471, 37.807556930640864],\n            [-122.435982097955772, 37.80755702547102],\n            [-122.435828364056036, 37.807569849863164],\n            [-122.435859235962624, 37.807691580598309],\n            [-122.433925269093152, 37.807945122059223],\n            [-122.433817271048738, 37.80791942385212],\n            [-122.433787568621852, 37.807908923241605],\n            [-122.433755903391244, 37.807889527355464],\n            [-122.43376416154652, 37.807874283957823],\n            [-122.433933527911989, 37.807929878638532],\n            [-122.435838185171932, 37.807680938490563],\n            [-122.435834169572829, 37.807659716129535],\n            [-122.435737591220459, 37.807673662142683],\n            [-122.433917274710794, 37.807904049527295],\n            [-122.433913385157453, 37.807887631858222],\n            [-122.434041074707324, 37.807871803440726],\n            [-122.434044035083929, 37.807852526536877],\n            [-122.434070401961165, 37.807867888872153],\n            [-122.434160130921143, 37.807856803195897],\n            [-122.434164803061421, 37.807836811488876],\n            [-122.434189457816743, 37.807852888603414],\n            [-122.434284359969311, 37.807841031264509],\n            [-122.434289032075128, 37.807821039552501],\n            [-122.434313686852093, 37.80783711664111],\n            [-122.434406858247897, 37.807825287589175],\n            [-122.434411548897913, 37.80780598229466],\n            [-122.434437915834692, 37.807821344547961],\n            [-122.434520741089443, 37.807811058557668],\n            [-122.434525413482959, 37.8077910671051],\n            [-122.434551797979211, 37.80780711577237],\n            [-122.434636336023075, 37.807796114603541],\n            [-122.434641025919433, 37.807776809311157],\n            [-122.434665680757917, 37.807792886326304],\n            [-122.434750218436946, 37.807781885630661],\n            [-122.434754908641708, 37.807762580053435],\n            [-122.434779544918584, 37.807777970622496],\n            [-122.434871004379232, 37.807766856012883],\n            [-122.434875676329611, 37.807746864551945],\n            [-122.434900331208965, 37.807762941518149],\n            [-122.434976252743482, 37.807753454920828],\n            [-122.434979194289198, 37.807733491570779],\n            [-122.435005579555238, 37.807749540125371],\n            [-122.435084943914418, 37.807739310518855],\n            [-122.43508961579829, 37.807719318774772],\n            [-122.435116018975634, 37.807736053738346],\n            [-122.435191922576223, 37.807725881117662],\n            [-122.435196576876137, 37.807705202655406],\n            [-122.43522297972649, 37.807721937600746],\n            [-122.435302361927597, 37.807712394556091],\n            [-122.435306998308789, 37.807691029930353],\n            [-122.435333419066353, 37.8077084510101],\n            [-122.435402436929863, 37.807699764700374],\n            [-122.435407055040258, 37.807677713642711],\n            [-122.435433494058017, 37.807695821128007],\n            [-122.435507685095942, 37.807686362859421],\n            [-122.435514015990663, 37.807663596960829],\n            [-122.43554045469773, 37.807681704977007],\n            [-122.435609472497859, 37.807673017996969],\n            [-122.435614072648008, 37.807650280497519],\n            [-122.435642259638655, 37.807669046525525],\n            [-122.435711277415109, 37.807660359485872],\n            [-122.43572966745738, 37.807635335465775],\n            [-122.435735467093281, 37.807658589004994],\n            [-122.435830350851532, 37.807646043988242],\n            [-122.435804210559851, 37.807572993499143],\n            [-122.435788619382777, 37.807572562680427],\n            [-122.435772938706066, 37.807568699417203],\n            [-122.435758952605468, 37.807563435158237],\n            [-122.435746625277645, 37.807555396762375],\n            [-122.435735992180923, 37.807545957377542],\n            [-122.435727054339125, 37.807535116438025],\n            [-122.435721558628927, 37.807523531999962],\n            [-122.435719488549438, 37.807510518156661],\n            [-122.435678807510797, 37.807410923656249],\n            [-122.435671271850225, 37.807321086052454],\n            [-122.435659314380757, 37.807260850297496],\n            [-122.435635232905554, 37.807266739353338],\n            [-122.435635716129568, 37.807285273061382],\n            [-122.435609349135348, 37.807269911074314],\n            [-122.435543792417761, 37.807278540984541],\n            [-122.43552006850399, 37.80729815869541],\n            [-122.435504101570785, 37.807283312732451],\n            [-122.435441987649398, 37.807291199357643],\n            [-122.435419994063011, 37.807310788651876],\n            [-122.43540402680101, 37.807295942681101],\n            [-122.435341912858448, 37.807303829253563],\n            [-122.435318189229335, 37.807323446918055],\n            [-122.435302222331032, 37.807308600927854],\n            [-122.435234935185079, 37.80731725906076],\n            [-122.435212941536335, 37.807336848316268],\n            [-122.435196974310131, 37.807322002317541],\n            [-122.435127956788023, 37.807330689056798],\n            [-122.435105963445992, 37.807350278012088],\n            [-122.435089996584352, 37.807335431993209],\n            [-122.435019248678017, 37.807344147060114],\n            [-122.4349972725025, 37.807364422440152],\n            [-122.434981288114457, 37.807348889967201],\n            [-122.434910540175395, 37.807357604694324],\n            [-122.434888564319408, 37.807377880322939],\n            [-122.434872579266241, 37.807362348121238],\n            [-122.434798388810123, 37.807371805710694],\n            [-122.434776412580376, 37.807392081598607],\n            [-122.434758697865377, 37.807376577207712],\n            [-122.434691410594411, 37.807385235030431],\n            [-122.434667704309632, 37.80740553900322],\n            [-122.434651719289548, 37.807390006497108],\n            [-122.434575798078043, 37.807399492611601],\n            [-122.434552092103161, 37.807419796555429],\n            [-122.434536125337331, 37.807404950461788],\n            [-122.434461916577604, 37.807413721960565],\n            [-122.434439940575373, 37.80743399723081],\n            [-122.434423973489999, 37.807419151402279],\n            [-122.434349765034597, 37.807427922275664],\n            [-122.43432605864993, 37.807448226454213],\n            [-122.434310074038208, 37.807432693896239],\n            [-122.434230709546782, 37.807442922713086],\n            [-122.434208733825983, 37.807463198209049],\n            [-122.434192749235578, 37.807447665635237],\n            [-122.434111654710136, 37.807457923293533],\n            [-122.434087948236439, 37.807478226874963],\n            [-122.434071963321998, 37.807462694290493],\n            [-122.433992599465014, 37.807472923210291],\n            [-122.433970605449531, 37.807492512508169],\n            [-122.433954638431118, 37.807477666067122],\n            [-122.433870083452888, 37.807487980028228],\n            [-122.433846376910722, 37.807508283835588],\n            [-122.433830409920873, 37.80749343765234],\n            [-122.43374412454402, 37.807503779895939],\n            [-122.433722148333416, 37.807524055581261],\n            [-122.433706163485638, 37.807508522947344],\n            [-122.433606088798641, 37.807521151358706],\n            [-122.433584112530909, 37.807541426469101],\n            [-122.433574191011218, 37.807492831512612],\n            [-122.433602216513336, 37.807505419848866],\n            [-122.433678120078412, 37.807495247927321],\n            [-122.433686343139499, 37.80747863165486],\n            [-122.433714368662436, 37.807491220239072],\n            [-122.433795462933048, 37.807480962859643],\n            [-122.433803685966325, 37.807464346578953],\n            [-122.433831693616042, 37.80747624842688],\n            [-122.433911075733292, 37.807466706318117],\n            [-122.433919280165583, 37.807449403606796],\n            [-122.433947305702674, 37.807461991586599],\n            [-122.434024939884253, 37.807451791061574],\n            [-122.434034892878572, 37.807435146394688],\n            [-122.434062900561514, 37.80744704846235],\n            [-122.434135379039915, 37.807438305591944],\n            [-122.434143601646298, 37.807421689293108],\n            [-122.434171609334427, 37.807433591060409],\n            [-122.434245800271043, 37.807424133585066],\n            [-122.434254022851178, 37.80740751727847],\n            [-122.434282048436359, 37.807420105453431],\n            [-122.434352778623364, 37.807410704669572],\n            [-122.434361000831984, 37.807394088361185],\n            [-122.434389026430239, 37.807406676510716],\n            [-122.43446148730483, 37.807397247549531],\n            [-122.434471439847925, 37.807380602851318],\n            [-122.43449944756594, 37.807392504266289],\n            [-122.434571926300066, 37.807383761671048],\n            [-122.434581860921966, 37.807366430255094],\n            [-122.434609886547221, 37.807379018352258],\n            [-122.434682347359626, 37.807369588980769],\n            [-122.434690569836022, 37.807352972643585],\n            [-122.434718577593046, 37.807364874555745],\n            [-122.434784152364955, 37.807356931263477],\n            [-122.43479237481715, 37.807340314919166],\n            [-122.434820382585727, 37.807352216807175],\n            [-122.434884226976308, 37.807344301846562],\n            [-122.434894179763575, 37.807327657106839],\n            [-122.434922187543705, 37.807339558970696],\n            [-122.434987762271462, 37.807331615565204],\n            [-122.434997697142578, 37.807314284382969],\n            [-122.435025722825799, 37.807326872656006],\n            [-122.43509127963911, 37.807318242759216],\n            [-122.435101232376525, 37.807301598001935],\n            [-122.435129240172827, 37.807313499542126],\n            [-122.43519308450432, 37.807305584688869],\n            [-122.435201306859327, 37.807288968315881],\n            [-122.435231044678986, 37.807300841444686],\n            [-122.435296619692778, 37.807292898136311],\n            [-122.4353048420232, 37.807276281756089],\n            [-122.435332849842581, 37.807288183247969],\n            [-122.435398406593208, 37.807279553455011],\n            [-122.435406628899386, 37.80726293706762],\n            [-122.435436384982893, 37.8072754965727],\n            [-122.435451904167508, 37.80727318170905],\n            [-122.435460126807058, 37.807256565312237],\n            [-122.435488134643933, 37.807268466767304],\n            [-122.435508433635007, 37.807250278724965],\n            [-122.435536459373509, 37.807262866602237],\n            [-122.435602016078107, 37.80725423669606],\n            [-122.435615572581426, 37.80724302656666],\n            [-122.435634803373304, 37.807250264946127],\n            [-122.435655496065394, 37.807247178418407],\n            [-122.435588180541416, 37.806922774713847],\n            [-122.435582667693723, 37.80691050382292],\n            [-122.435534182131477, 37.806909926104069],\n            [-122.435571873987683, 37.806894886513319],\n            [-122.435559492755871, 37.80688478880149],\n            [-122.435545453103273, 37.806877464940861],\n            [-122.435529719250937, 37.806871542612598],\n            [-122.435514074542013, 37.806869052731017],\n            [-122.435493292470525, 37.806868707065597],\n            [-122.435344768504805, 37.806882132076758],\n            [-122.435121911744176, 37.806899523218981],\n            [-122.434871780421872, 37.806933156410132],\n            [-122.434433666315243, 37.806993908011997],\n            [-122.434416381034183, 37.806994878255509],\n            [-122.434278149661878, 37.807004699734037],\n            [-122.434260827915324, 37.807004297098374],\n            [-122.434243471085438, 37.807002521306472],\n            [-122.434227808507927, 37.806999344820447],\n            [-122.434210379805293, 37.806994823568417],\n            [-122.434194645688478, 37.806988901067868],\n            [-122.434180606150846, 37.806981577044944],\n            [-122.434166548746745, 37.806973567135586],\n            [-122.434154185915276, 37.806964155430045],\n            [-122.434143535561248, 37.806954029186485],\n            [-122.434134579447857, 37.806942501702544],\n            [-122.434125606153387, 37.806930288047226],\n            [-122.434123142595496, 37.806902172634167],\n            [-122.434101162359013, 37.806855835376808],\n            [-122.434090404384904, 37.806841590530418],\n            [-122.434081359579054, 37.806826631135792],\n            [-122.43406669419322, 37.806795281911626],\n            [-122.434061091508866, 37.806779579065555],\n            [-122.434055471636611, 37.80676318977391],\n            [-122.434051599648825, 37.806747458545502],\n            [-122.434049475890433, 37.80673238537485],\n            [-122.434047316368137, 37.806715939336222],\n            [-122.434046440132462, 37.806682304072865],\n            [-122.43401902773472, 37.806493903623902],\n            [-122.434011784506907, 37.806481661588982],\n            [-122.434004523385283, 37.806468732570444],\n            [-122.433998992958308, 37.806455775445059],\n            [-122.433995192532976, 37.806442790224423],\n            [-122.433964135838224, 37.806446732869858],\n            [-122.433932703641176, 37.806436260667759],\n            [-122.433886127202001, 37.806442518242726],\n            [-122.433858853036313, 37.806458760199753],\n            [-122.433839551447093, 37.806448775787949],\n            [-122.433791244999313, 37.806455061692688],\n            [-122.4337639708083, 37.80647130362771],\n            [-122.433744668882483, 37.806461319206093],\n            [-122.433694632079209, 37.806467633442772],\n            [-122.433667357862433, 37.806483875355433],\n            [-122.43364805594635, 37.806473890918021],\n            [-122.433596288440668, 37.806480233488799],\n            [-122.433569014197744, 37.806496475378673],\n            [-122.433549712637699, 37.806486490919518],\n            [-122.433503136480809, 37.806492748337497],\n            [-122.433477574676203, 37.806508275404134],\n            [-122.433458272433256, 37.806498290941384],\n            [-122.433404793122563, 37.806505348218124],\n            [-122.43337751882855, 37.806521590063653],\n            [-122.433358216941642, 37.806511605578869],\n            [-122.4333047372658, 37.806518662815925],\n            [-122.433279192939949, 37.806534876279215],\n            [-122.433259891408895, 37.80652489177271],\n            [-122.433206393839583, 37.806531262531053],\n            [-122.433179119492635, 37.806547504330624],\n            [-122.433159817625679, 37.806537519813411],\n            [-122.43309943408164, 37.806545377123399],\n            [-122.43307215969898, 37.806561618623626],\n            [-122.433052858195936, 37.806551634357852],\n            [-122.432990744619175, 37.806559519418741],\n            [-122.432963470221836, 37.806575761442943],\n            [-122.43294416836936, 37.80656577661594],\n            [-122.432885515114464, 37.806573605181946],\n            [-122.432858276424469, 37.806591219775477],\n            [-122.432851977723161, 37.806548745928424],\n            [-122.432876452705358, 37.806557958985486],\n            [-122.432950642939176, 37.806548502597778],\n            [-122.432958937194059, 37.806534631840726],\n            [-122.432985142526235, 37.806543816515223],\n            [-122.433055872042729, 37.806534416507489],\n            [-122.433064219557167, 37.806522605325611],\n            [-122.433088659156226, 37.806530445464773],\n            [-122.43316111864155, 37.80652101703766],\n            [-122.433169413207281, 37.806507146534614],\n            [-122.433195618216885, 37.806516331442637],\n            [-122.433259444532922, 37.80650773092048],\n            [-122.433269469079946, 37.806493832326176],\n            [-122.433293944088703, 37.806503045022133],\n            [-122.433357787918965, 37.806495131161043],\n            [-122.433366082106133, 37.806481260924372],\n            [-122.433392287462695, 37.806490445233919],\n            [-122.433454400931879, 37.806482559686899],\n            [-122.433462695099607, 37.806468689443392],\n            [-122.433488900463672, 37.806477873731517],\n            [-122.433552726373762, 37.806469273330841],\n            [-122.433561038053369, 37.806456089520083],\n            [-122.433587243771214, 37.806465273780709],\n            [-122.433649339320041, 37.806456701696959],\n            [-122.43365765098109, 37.806443517879387],\n            [-122.433683838827505, 37.806452015684521],\n            [-122.433745952233608, 37.806444129983937],\n            [-122.433754245996482, 37.806430259725488],\n            [-122.43378045172912, 37.806439443943233],\n            [-122.433842565114432, 37.806431558191733],\n            [-122.433850858857866, 37.806417687926462],\n            [-122.433877064598036, 37.806426872122742],\n            [-122.433932274491454, 37.806419786251801],\n            [-122.433954393037553, 37.806405002549944],\n            [-122.433958408377592, 37.806426224974288],\n            [-122.43399121327684, 37.806422940114579],\n            [-122.433989124957407, 37.806409239815579],\n            [-122.433988785204093, 37.806396197569725],\n            [-122.433991530954188, 37.80636868345389],\n            [-122.433981985185667, 37.806334503629429],\n            [-122.433942822534163, 37.806226642930824],\n            [-122.433950330141514, 37.806182569274938],\n            [-122.433940283395017, 37.806129169298679],\n            [-122.433873424076822, 37.805821925113698],\n            [-122.433853509955952, 37.80572198947479],\n            [-122.433844483207295, 37.805707716218421],\n            [-122.433823004146618, 37.805680599328511],\n            [-122.433808821860836, 37.805667784061214],\n            [-122.433796405313814, 37.805656313293774],\n            [-122.433780528829729, 37.805644899532474],\n            [-122.433766418068998, 37.805634829721896],\n            [-122.43374886455932, 37.805625503361618],\n            [-122.433731328933206, 37.805616863432853],\n            [-122.433713811190202, 37.805608909935621],\n            [-122.433675422356743, 37.805597178553839],\n            [-122.433656263344702, 37.805592685320363],\n            [-122.433637140790879, 37.805589565215314],\n            [-122.433616323330028, 37.805587846350818],\n            [-122.43359552375523, 37.805586814191379],\n            [-122.433576472363242, 37.805586439544221],\n            [-122.433535016220674, 37.805589866131839],\n            [-122.433516072105618, 37.805593610629053],\n            [-122.433498858293476, 37.805597326206154],\n            [-122.432719648836795, 37.805721348282255],\n            [-122.432704236424613, 37.805727781678655],\n            [-122.432688842557212, 37.805734900946824],\n            [-122.432673484086777, 37.805743393361759],\n            [-122.432659891674504, 37.805753230287664],\n            [-122.432648029581884, 37.805763038856455],\n            [-122.432637933547895, 37.805774191937303],\n            [-122.432627855379891, 37.805786031451547],\n            [-122.432619525401748, 37.805798529044132],\n            [-122.432612943621251, 37.805811684990026],\n            [-122.432606379692928, 37.805825526820627],\n            [-122.432603276080599, 37.805839312496055],\n            [-122.432600137407348, 37.805851724742368],\n            [-122.432500317433352, 37.805940575058216],\n            [-122.432391913920043, 37.805965699763121],\n            [-122.432397426855275, 37.805977970519415],\n            [-122.432516390332239, 37.805959539768239],\n            [-122.432628376560629, 37.805872550799698],\n            [-122.432642540805432, 37.805884679499613],\n            [-122.432527165744716, 37.805974471194816],\n            [-122.432403189584164, 37.805999851361079],\n            [-122.43238951051228, 37.806072868560939],\n            [-122.432404443045669, 37.806114514237365],\n            [-122.432490452847844, 37.806359639916195],\n            [-122.43244910342851, 37.806367184726966],\n            [-122.432520431119073, 37.806580274784345],\n            [-122.432498061398036, 37.806585448423995],\n            [-122.432424985907915, 37.806371700265615],\n            [-122.432400868391511, 37.806376216073893],\n            [-122.432301460176419, 37.806081865240721],\n            [-122.43236869294482, 37.806071149476409],\n            [-122.432380802509087, 37.806004338539104],\n            [-122.43235326017701, 37.806010283635004],\n            [-122.432347175872593, 37.805976047248159],\n            [-122.432319651407369, 37.805982678495994],\n            [-122.432302633632929, 37.805993944955773],\n            [-122.432282173360747, 37.806005686719168],\n            [-122.432280461289963, 37.806006669320666],\n            [-122.432265120589491, 37.806015848390899],\n            [-122.432249654811855, 37.806020221869829],\n            [-122.432227231644546, 37.806023336155739],\n            [-122.432194784491401, 37.806040349205666],\n            [-122.432179693529363, 37.806059138076137],\n            [-122.432171560304809, 37.806079186408191],\n            [-122.432165157068255, 37.806099206671476],\n            [-122.432169117939694, 37.806118369860684],\n            [-122.432192469776069, 37.806150950175152],\n            [-122.432209844223067, 37.806153412703416],\n            [-122.432227007583123, 37.806214250207013],\n            [-122.432213468614208, 37.806226146108848],\n            [-122.432203354593938, 37.806236612991817],\n            [-122.432202178080502, 37.806257920803567],\n            [-122.43220649593593, 37.806290812956746],\n            [-122.432221571326565, 37.806337949854225],\n            [-122.432306430556167, 37.806804907302421],\n            [-122.432383452345448, 37.807103744994606],\n            [-122.432564682589728, 37.808479722911237],\n            [-122.432615131844727, 37.808489197136744],\n            [-122.432610261989339, 37.808501638018015],\n            [-122.432598381927761, 37.808510760137189],\n            [-122.432584628175405, 37.80851441914389],\n            [-122.432342320320956, 37.808516329227118],\n            [-122.432078432185492, 37.807223425689031],\n            [-122.431999351719028, 37.807178023752513],\n            [-122.431443837686672, 37.8072509882197],\n            [-122.431386630568454, 37.807314417209206],\n            [-122.431727121174518, 37.8090235974717],\n            [-122.431341938476805, 37.809056687748011],\n            [-122.430994999022246, 37.807365467556572],\n            [-122.430915919059899, 37.807320064620313],\n            [-122.430360402907354, 37.807393024257635],\n            [-122.430303194747026, 37.8074564524454],\n            [-122.43062118366457, 37.809166690185819],\n            [-122.430108306409053, 37.8092156017048],\n            [-122.429835000067499, 37.807825332620489],\n            [-122.429264030219372, 37.807903346686288],\n            [-122.429270969868725, 37.807970532619663],\n            [-122.428236680346103, 37.808405663457563],\n            [-122.427001622006514, 37.808109268493716],\n            [-122.426995537909036, 37.808141644021028],\n            [-122.427545144293163, 37.808640840008444],\n            [-122.428014153033857, 37.808569308327186],\n            [-122.428043639051282, 37.808704798333089],\n            [-122.427533242566099, 37.808782500069931],\n            [-122.427523467767188, 37.808739396087624],\n            [-122.427301030953672, 37.808773247159571],\n            [-122.427287243070779, 37.808708920235645],\n            [-122.427490716316399, 37.808678126013014],\n            [-122.426909232318224, 37.808151294840016],\n            [-122.426839001555635, 37.808113298884024],\n            [-122.426613230594512, 37.808152010516238],\n            [-122.426560904719622, 37.807943556174827],\n            [-122.426488519796493, 37.807651861239542],\n            [-122.426357658303132, 37.807388412718332],\n            [-122.426257507799036, 37.807185417079722],\n            [-122.426066893674061, 37.80699787612533],\n            [-122.4257796482039, 37.806715259689653],\n            [-122.425627533230582, 37.806456787332273],\n            [-122.425531817297653, 37.806150610629167],\n            [-122.425487611207828, 37.806009959663712],\n            [-122.425486832357592, 37.806006120121552],\n            [-122.425298563577385, 37.80507790289635],\n            [-122.425204919000421, 37.804616199985951],\n            [-122.425109521046082, 37.804145845932808],\n            [-122.424918804152185, 37.803205508171892],\n            [-122.424808684502352, 37.802662664019884],\n            [-122.424731259133807, 37.802280983275736],\n            [-122.424731635083759, 37.802281009278651],\n            [-122.424538324517613, 37.801303719934985],\n            [-122.424517597070277, 37.801201189595353],\n            [-122.424358667137113, 37.800415027771606],\n            [-122.424242907462499, 37.799842398528341],\n            [-122.42417056511286, 37.799484537126212],\n            [-122.42417056430692, 37.799484532744323],\n            [-122.423982145098208, 37.798552453684835],\n            [-122.423982396975646, 37.798552421556877],\n            [-122.423793785438747, 37.7976164776058],\n            [-122.423792964234153, 37.797616581376253],\n            [-122.423601296960271, 37.796691058659476],\n            [-122.42360129621845, 37.796691056748735],\n            [-122.423601876988513, 37.796690945913937],\n            [-122.423601877370103, 37.796690947281171],\n            [-122.425249874473522, 37.79648130315109],\n            [-122.426892728667355, 37.796272251947869],\n            [-122.428537813517494, 37.796062892623418],\n            [-122.430182832162615, 37.795853517593606],\n            [-122.431827832563371, 37.79564412085616],\n            [-122.433469062960725, 37.795435179810816],\n            [-122.435113289920963, 37.795225833115033],\n            [-122.436760975027326, 37.795016021968365],\n            [-122.438402484723895, 37.794806973138577]\n          ]\n        ]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {OBJECTID: 7, ZIP_CODE: 94133, ID: 94133},\n      geometry: {\n        type: 'Polygon',\n        coordinates: [\n          [\n            [-122.418530631419571, 37.804999043218864],\n            [-122.418718265666911, 37.805931520041717],\n            [-122.418781807492508, 37.806241018338142],\n            [-122.418781854642702, 37.806241248585302],\n            [-122.418856183917853, 37.806607498073362],\n            [-122.418908043871269, 37.806863030947284],\n            [-122.419086067910683, 37.807803117635643],\n            [-122.419223966222532, 37.808453096037454],\n            [-122.419103158585543, 37.808467422639801],\n            [-122.419122467317635, 37.808544708340989],\n            [-122.418980965776527, 37.808562118993599],\n            [-122.418965099874526, 37.808484090255142],\n            [-122.417886530686005, 37.80861494396968],\n            [-122.417923033396889, 37.808821741173873],\n            [-122.417843612318336, 37.80882989992265],\n            [-122.417811191268285, 37.808647071958433],\n            [-122.417726330574766, 37.808645704666795],\n            [-122.417731886802656, 37.808592736810425],\n            [-122.417624531730937, 37.808591735208473],\n            [-122.417601699719071, 37.808579058949235],\n            [-122.41748929463067, 37.808583633129054],\n            [-122.417485092698755, 37.808420948020817],\n            [-122.417586902421718, 37.808408305143338],\n            [-122.417575917233663, 37.808385134844094],\n            [-122.417669145522396, 37.808375378317514],\n            [-122.41765313920358, 37.808291858459306],\n            [-122.41737529132557, 37.808325217992042],\n            [-122.417344584298249, 37.808141675039998],\n            [-122.416347061956941, 37.808260209523006],\n            [-122.416354024690548, 37.808328768820694],\n            [-122.416305697821443, 37.808334361125667],\n            [-122.416338782629509, 37.80847597548388],\n            [-122.41718410046191, 37.808496573566089],\n            [-122.417183326975007, 37.808533669258267],\n            [-122.416327431803367, 37.808505689336052],\n            [-122.416281962820022, 37.808487886292838],\n            [-122.416150789583881, 37.80850306555427],\n            [-122.416144807019506, 37.808539558863203],\n            [-122.416207242955323, 37.808544038257011],\n            [-122.416187547333237, 37.808854071166344],\n            [-122.41742892570683, 37.808927290365972],\n            [-122.417412600540189, 37.80916653558441],\n            [-122.418193962887401, 37.809680962781762],\n            [-122.41929170565983, 37.810403664792204],\n            [-122.41931534577914, 37.810380618458765],\n            [-122.419422885954745, 37.810454266609824],\n            [-122.419833484960733, 37.810735462513406],\n            [-122.419807989843818, 37.810753732347422],\n            [-122.420595101766708, 37.811266948659416],\n            [-122.420353825913267, 37.811509857466909],\n            [-122.420001661760068, 37.81128073132367],\n            [-122.419845148459302, 37.811320361929653],\n            [-122.419951835473171, 37.811563099184333],\n            [-122.419915762044113, 37.811573987538154],\n            [-122.419724362099529, 37.811134852199615],\n            [-122.41972295750638, 37.81113418613959],\n            [-122.419216088646508, 37.810893843097361],\n            [-122.419185739151644, 37.810925239548666],\n            [-122.419097184597589, 37.810915006165231],\n            [-122.418987802638568, 37.810835752698928],\n            [-122.418935347953351, 37.810882616404598],\n            [-122.419125945102621, 37.811023040645175],\n            [-122.419048154317267, 37.811094352280243],\n            [-122.419465867632354, 37.811381473037407],\n            [-122.419350858543552, 37.811486353332427],\n            [-122.418846744437559, 37.811473267417028],\n            [-122.416831664498375, 37.810133272229294],\n            [-122.415352404138332, 37.809160867759147],\n            [-122.415205531523597, 37.809171493557926],\n            [-122.415205867990196, 37.809184535850846],\n            [-122.415200978155667, 37.80919628956385],\n            [-122.415187329670815, 37.809204065160294],\n            [-122.415151663626474, 37.809230739831797],\n            [-122.415171052667063, 37.809244159741915],\n            [-122.415194871121983, 37.809227978313764],\n            [-122.415413019588954, 37.809363153673537],\n            [-122.415370856947149, 37.809406415569271],\n            [-122.415142166917732, 37.809265230241984],\n            [-122.415155744585249, 37.809254708904987],\n            [-122.415139781310558, 37.809239860465802],\n            [-122.415039713249854, 37.809185860695372],\n            [-122.41488880052961, 37.80924118848273],\n            [-122.414968316086458, 37.80930376277346],\n            [-122.414992913705149, 37.809317784591791],\n            [-122.415006420575594, 37.809304517526144],\n            [-122.415222785388849, 37.809437662297633],\n            [-122.415180622939999, 37.809480924119129],\n            [-122.41496425806919, 37.809347778996823],\n            [-122.414981136896941, 37.8093310235652],\n            [-122.41495316698277, 37.809320490118694],\n            [-122.414845930117963, 37.809256992445782],\n            [-122.414780776445994, 37.809281398852669],\n            [-122.414774461081151, 37.809372149219335],\n            [-122.415340036749569, 37.80975508488244],\n            [-122.415288518799699, 37.809838328383556],\n            [-122.41456302792659, 37.80956443044294],\n            [-122.414023978762671, 37.809471544827012],\n            [-122.413420668373689, 37.809236173514122],\n            [-122.41337430449579, 37.809317959368158],\n            [-122.413395600212141, 37.809338215320878],\n            [-122.413411510435665, 37.809351004954635],\n            [-122.413425672211702, 37.809363136228626],\n            [-122.413441564407123, 37.809375239427176],\n            [-122.413455726199771, 37.809387370972054],\n            [-122.413471618398191, 37.809399473891929],\n            [-122.413487492569899, 37.80941089065314],\n            [-122.413505097854454, 37.809422279326348],\n            [-122.413520972382244, 37.809433696077356],\n            [-122.413538559637843, 37.80944439831444],\n            [-122.413554416481929, 37.809455128624236],\n            [-122.413572003401356, 37.809465830861896],\n            [-122.413607142559428, 37.809485862444731],\n            [-122.413624694804525, 37.809495192064489],\n            [-122.414282035042135, 37.809946003161961],\n            [-122.414200903764723, 37.81002217256772],\n            [-122.414027337823839, 37.810138985552911],\n            [-122.413780738047123, 37.809907441000853],\n            [-122.413857049972947, 37.809845771015681],\n            [-122.412616832608151, 37.809078904365926],\n            [-122.412498775807535, 37.80906571088461],\n            [-122.412398060995869, 37.809120908451149],\n            [-122.412400109349747, 37.809133236262518],\n            [-122.412396967167027, 37.809145648237823],\n            [-122.412390346141294, 37.809157430172931],\n            [-122.412380210884578, 37.809167208369729],\n            [-122.412426492762847, 37.809216588736774],\n            [-122.412450629760414, 37.809212763732177],\n            [-122.41262839277087, 37.809393236325491],\n            [-122.412573868329858, 37.809427083257212],\n            [-122.412396105370902, 37.809246610582868],\n            [-122.412412861666652, 37.809225050449037],\n            [-122.412356250722411, 37.809177897728922],\n            [-122.41234073008107, 37.809180209833173],\n            [-122.412323390603305, 37.809179117259049],\n            [-122.412307675451856, 37.809173878278465],\n            [-122.412099340782589, 37.809285071655154],\n            [-122.412099676704088, 37.809298113956672],\n            [-122.412096516784118, 37.809309839486673],\n            [-122.412089895696084, 37.809321621404543],\n            [-122.412078012629308, 37.8093307411864],\n            [-122.412124294062423, 37.809380121676121],\n            [-122.412148413801376, 37.809375610565525],\n            [-122.412315935400727, 37.809561743172587],\n            [-122.412252793608843, 37.809597103119742],\n            [-122.412093889154491, 37.809409457275514],\n            [-122.41211066290181, 37.809388583353197],\n            [-122.412057512853792, 37.809341374382768],\n            [-122.412040244067796, 37.809343027789311],\n            [-122.412024634631933, 37.809341907398313],\n            [-122.412008919813204, 37.809336668372488],\n            [-122.411894272206808, 37.809388657747697],\n            [-122.412861765933144, 37.810522545447967],\n            [-122.412718336607824, 37.810599724430624],\n            [-122.412705816724809, 37.810584132828346],\n            [-122.411509089676429, 37.81123738012537],\n            [-122.41148957739901, 37.811219154555417],\n            [-122.412686215557258, 37.810562475550952],\n            [-122.411452462026304, 37.809105334882879],\n            [-122.411423380532113, 37.809118854220145],\n            [-122.411248622782082, 37.808920476073887],\n            [-122.411085557936261, 37.808907323817536],\n            [-122.411283571142818, 37.809134854169606],\n            [-122.411256255700124, 37.809149718017444],\n            [-122.411031438641331, 37.808889659210472],\n            [-122.410955336187001, 37.808892265747417],\n            [-122.410765573350616, 37.808850703243849],\n            [-122.410736033164511, 37.808846374759867],\n            [-122.410731512966407, 37.808872543480319],\n            [-122.410649866328171, 37.808861505447226],\n            [-122.410652655797975, 37.808835364493682],\n            [-122.410546641899074, 37.808819227353638],\n            [-122.410441958004114, 37.809325664485378],\n            [-122.410406413493931, 37.809289843904054],\n            [-122.410401787512413, 37.809311893981061],\n            [-122.410630331289113, 37.809716792194763],\n            [-122.410709259423612, 37.809689418065965],\n            [-122.410633083668301, 37.809554681184579],\n            [-122.41064851611452, 37.809548937394226],\n            [-122.410729547478269, 37.809670547859675],\n            [-122.410757004560026, 37.809661175631867],\n            [-122.410712947997226, 37.809563688219221],\n            [-122.410728380093076, 37.809557944424022],\n            [-122.410791312651469, 37.80964894551029],\n            [-122.410822177556227, 37.809637457886339],\n            [-122.410778085579025, 37.80953859734884],\n            [-122.410793518010678, 37.809532853539501],\n            [-122.410858216047515, 37.809625199709956],\n            [-122.410889098254941, 37.809614398511123],\n            [-122.410843240792332, 37.809514193154044],\n            [-122.410858672867818, 37.809508449341749],\n            [-122.410923406302985, 37.809602168351013],\n            [-122.410950845665482, 37.809592109640889],\n            [-122.410904952795121, 37.809490531433248],\n            [-122.410920384860916, 37.809484787612853],\n            [-122.410985153693048, 37.809579879462774],\n            [-122.411024617975485, 37.809566192280315],\n            [-122.410978689334627, 37.809463241232329],\n            [-122.410994104065225, 37.809456810959603],\n            [-122.411058925978935, 37.809553962080649],\n            [-122.411089808473605, 37.809543160823544],\n            [-122.411042113998747, 37.809438864964896],\n            [-122.411057546043196, 37.809433121126496],\n            [-122.411195348876859, 37.80967536169041],\n            [-122.41117818636998, 37.809681133587063],\n            [-122.411116453591873, 37.809569511282646],\n            [-122.41104955067469, 37.80959325722408],\n            [-122.41111476155065, 37.809705510201134],\n            [-122.411097598684464, 37.809711282091641],\n            [-122.411034100233891, 37.80959831463543],\n            [-122.410977509113948, 37.809619146556997],\n            [-122.411041007143098, 37.809732113774253],\n            [-122.411025592359422, 37.809738544052792],\n            [-122.410960346257056, 37.809624918427609],\n            [-122.410907162593759, 37.809643635209717],\n            [-122.410972426300958, 37.809757947300923],\n            [-122.410956993836351, 37.80976369113344],\n            [-122.410891730147881, 37.809649379033807],\n            [-122.410835138249837, 37.809670210623501],\n            [-122.410900419538606, 37.809785209191027],\n            [-122.410884987408849, 37.809790953008481],\n            [-122.410819706138938, 37.809675954432528],\n            [-122.410764809648242, 37.809695385622547],\n            [-122.410830108511632, 37.809811070390921],\n            [-122.41081467602497, 37.809816814204737],\n            [-122.410747646757216, 37.80970115746215],\n            [-122.410639354408318, 37.809731067210933],\n            [-122.410896947885561, 37.810188372007936],\n            [-122.410975841429376, 37.810159624823598],\n            [-122.410901536485113, 37.810030351311333],\n            [-122.410916969009435, 37.810024607486383],\n            [-122.410997965998874, 37.810144845157168],\n            [-122.41103912533255, 37.810129757339681],\n            [-122.410977003992286, 37.810003033077805],\n            [-122.410992436505126, 37.809997289242951],\n            [-122.411075146003029, 37.810116812392209],\n            [-122.411112880121649, 37.810103153220581],\n            [-122.411050758345823, 37.809976429551675],\n            [-122.411066208857108, 37.809971371863952],\n            [-122.411147188358683, 37.810090922996501],\n            [-122.411190078057032, 37.810075806811575],\n            [-122.411127956511336, 37.809949082902484],\n            [-122.411143389001253, 37.809943339047805],\n            [-122.411224368596535, 37.81006289012803],\n            [-122.411256964037719, 37.810051374350031],\n            [-122.411194842059288, 37.809924650755768],\n            [-122.41121027488505, 37.809918906886708],\n            [-122.4112929849924, 37.810038429879377],\n            [-122.411332431435511, 37.81002405588923],\n            [-122.411270309344076, 37.809897332059471],\n            [-122.411285742158299, 37.809891588180513],\n            [-122.411366721926342, 37.810011139164168],\n            [-122.411401047752832, 37.809999595302976],\n            [-122.411337195490745, 37.809872899820583],\n            [-122.411354358375661, 37.809867127895387],\n            [-122.411435338227506, 37.809986678832487],\n            [-122.411471359105562, 37.809973733758071],\n            [-122.411409237165202, 37.809847009994684],\n            [-122.411424669612117, 37.809841266103092],\n            [-122.41150566722375, 37.80996150342942],\n            [-122.411546826352634, 37.809946415434261],\n            [-122.411484704299241, 37.809819691435401],\n            [-122.411500136734659, 37.809813947533918],\n            [-122.411582846845619, 37.809933470331323],\n            [-122.4116188680253, 37.809920525480692],\n            [-122.411556745877689, 37.809793801793724],\n            [-122.411572177956074, 37.809788057888397],\n            [-122.411653176094603, 37.809908295109032],\n            [-122.4116909096619, 37.809894636032141],\n            [-122.411628787405917, 37.809767912107915],\n            [-122.411644219819436, 37.809762168187518],\n            [-122.411725217707357, 37.809882405639449],\n            [-122.411759525734439, 37.809870174962185],\n            [-122.411697403388885, 37.809743451348098],\n            [-122.411712835792031, 37.809737707418712],\n            [-122.411881278427131, 37.810026834486933],\n            [-122.41186411554628, 37.81003260648864],\n            [-122.411782586611622, 37.809891776308959],\n            [-122.411719126796399, 37.80991478009306],\n            [-122.411802385721074, 37.810055582271964],\n            [-122.411785222827419, 37.810061354262146],\n            [-122.411703694356945, 37.809920524023092],\n            [-122.411645389734517, 37.809942070760108],\n            [-122.411726900787329, 37.810082214596392],\n            [-122.411711467967621, 37.810087958532876],\n            [-122.411628227200978, 37.809947842721932],\n            [-122.41156305384375, 37.809971560917056],\n            [-122.411644564773539, 37.810111704809465],\n            [-122.411629131941311, 37.810117448735141],\n            [-122.411547621726527, 37.809977304820983],\n            [-122.411485874174801, 37.809999594002001],\n            [-122.411567384297499, 37.810139737958238],\n            [-122.411551952145643, 37.810145481862563],\n            [-122.411470441699677, 37.81000533790143],\n            [-122.411408676427612, 37.810026940604999],\n            [-122.411490204455376, 37.81016777104513],\n            [-122.41147477194562, 37.81017351494495],\n            [-122.411393243940836, 37.810032684494281],\n            [-122.411328070780158, 37.81005640255357],\n            [-122.41140959834128, 37.810197233054254],\n            [-122.411394148491496, 37.81020229050096],\n            [-122.41131090784944, 37.810062174474744],\n            [-122.411249177828495, 37.810085149968437],\n            [-122.411330687944414, 37.810225294080347],\n            [-122.4113152554104, 37.810231037959227],\n            [-122.411232014885002, 37.810090921878086],\n            [-122.411175405434363, 37.810111067735896],\n            [-122.411256933104966, 37.81025189806045],\n            [-122.411241500559697, 37.810257641929645],\n            [-122.411159972912074, 37.810116811594561],\n            [-122.411103380733024, 37.810137643311123],\n            [-122.411184890977466, 37.810277787516789],\n            [-122.411169458075165, 37.810283531382133],\n            [-122.411087948545713, 37.810143387154753],\n            [-122.411017619235537, 37.810168562307894],\n            [-122.411099128998927, 37.810308706303054],\n            [-122.411083696429642, 37.810314450151544],\n            [-122.411004005467134, 37.81017771001823],\n            [-122.410905971459442, 37.810202646996828],\n            [-122.411216101543474, 37.810750434096292],\n            [-122.411307020324173, 37.810718058221234],\n            [-122.411214614556201, 37.8105581756828],\n            [-122.411231794935318, 37.81055309021869],\n            [-122.411325542368957, 37.810697843090367],\n            [-122.411366719609191, 37.810683441322411],\n            [-122.411291830600106, 37.810531515646439],\n            [-122.411307262852333, 37.810525771776568],\n            [-122.411402864908169, 37.810675301597549],\n            [-122.411522935608915, 37.810632152260467],\n            [-122.411446209498621, 37.810476136111049],\n            [-122.411461659747943, 37.810471078652185],\n            [-122.411555407533228, 37.810615831617966],\n            [-122.41160859172949, 37.810597114547022],\n            [-122.411624041992908, 37.810592057067005],\n            [-122.411677226161913, 37.810573340239586],\n            [-122.411600605842565, 37.810421442809904],\n            [-122.411617768833821, 37.810415670846979],\n            [-122.411711534523249, 37.810561109852458],\n            [-122.411738974133357, 37.810551050960818],\n            [-122.411686385419046, 37.810391210096554],\n            [-122.411701817957677, 37.810385466169308],\n            [-122.411764700631707, 37.810541706828857],\n            [-122.411829892102887, 37.810518674961713],\n            [-122.41176529620391, 37.810363148827776],\n            [-122.411780746061879, 37.81035809133261],\n            [-122.411847054752684, 37.810512902971148],\n            [-122.411915671345156, 37.810488441813206],\n            [-122.411840781416544, 37.810336516754752],\n            [-122.411856213585779, 37.81033077281284],\n            [-122.411935941632692, 37.810468884965481],\n            [-122.411921351800245, 37.810305681309181],\n            [-122.411938638145514, 37.810304714362765],\n            [-122.411953405498025, 37.81047478237366],\n            [-122.412071780474818, 37.810433033401743],\n            [-122.412010591984938, 37.810275392256564],\n            [-122.412115642263785, 37.810455670909619],\n            [-122.412100192408317, 37.810460728448561],\n            [-122.412084406280471, 37.810452743692409],\n            [-122.41176878056207, 37.810565675738737],\n            [-122.41175334799118, 37.810571419674538],\n            [-122.411684748938015, 37.810596566899896],\n            [-122.411669298331702, 37.810601624393506],\n            [-122.411598969130708, 37.810626799885483],\n            [-122.411583536533968, 37.810632543799024],\n            [-122.411518344886403, 37.810655575529537],\n            [-122.411502912623547, 37.810661319426885],\n            [-122.411432582949345, 37.810686494275835],\n            [-122.411417150327338, 37.81069223816754],\n            [-122.411223323763636, 37.810761991358582],\n            [-122.41132311146211, 37.810939609065692],\n            [-122.411244573940635, 37.811116682909216],\n            [-122.410949479920689, 37.811220352571489],\n            [-122.410930216342933, 37.811279036146971],\n            [-122.410681455051716, 37.81136684679597],\n            [-122.410613578346386, 37.811352838185535],\n            [-122.410419696661208, 37.811420531005773],\n            [-122.410148367227194, 37.811505958616635],\n            [-122.408511879957302, 37.811283856992631],\n            [-122.407577358643394, 37.808803424612513],\n            [-122.407596251976869, 37.808797625245276],\n            [-122.408535735474004, 37.811269050069917],\n            [-122.410153064417187, 37.811486654300801],\n            [-122.41040703579597, 37.811399447392162],\n            [-122.410397994853795, 37.811384485925792],\n            [-122.410199185064457, 37.81132796106332],\n            [-122.410033026138677, 37.811396577420801],\n            [-122.410028523199003, 37.811423432538689],\n            [-122.408569038736545, 37.811217693403208],\n            [-122.408604939400348, 37.811065346992223],\n            [-122.408622314546491, 37.811067812437848],\n            [-122.408601547208733, 37.811202746444437],\n            [-122.408639776140404, 37.811208308039326],\n            [-122.408681379486623, 37.811075784005041],\n            [-122.408700502750108, 37.811078908147074],\n            [-122.408681466003685, 37.811213813888727],\n            [-122.408723173522517, 37.811220006160561],\n            [-122.408763046269982, 37.811087510102226],\n            [-122.408782169539933, 37.811090634230986],\n            [-122.40876313259281, 37.811225539991135],\n            [-122.408803092361268, 37.811231073796982],\n            [-122.408842964625947, 37.811098577717516],\n            [-122.408862088248199, 37.811101701827724],\n            [-122.408843051796623, 37.811236607869454],\n            [-122.408881280424794, 37.811242169666208],\n            [-122.408921153248102, 37.811109673549396],\n            [-122.408942006980325, 37.811112769370261],\n            [-122.408921240203938, 37.811247703157434],\n            [-122.408964677875915, 37.811253867342053],\n            [-122.409004568208587, 37.811122057634492],\n            [-122.409025404309773, 37.811124467552588],\n            [-122.409006385440833, 37.811260059513721],\n            [-122.409042866672721, 37.811264962818356],\n            [-122.409082738873835, 37.811132466653085],\n            [-122.409101862168811, 37.811135590729982],\n            [-122.409082825791046, 37.81127049654058],\n            [-122.409126264189027, 37.81127666092906],\n            [-122.409166136247578, 37.811144164735886],\n            [-122.409185259542042, 37.811147288524687],\n            [-122.409166223312823, 37.811282194348451],\n            [-122.409211409832309, 37.811289016857089],\n            [-122.409251281745554, 37.811156520635443],\n            [-122.40927213551177, 37.811159616672512],\n            [-122.40925136932222, 37.811294550516585],\n            [-122.409279162626277, 37.81129822094033],\n            [-122.40932078253644, 37.811166383119904],\n            [-122.409339888202226, 37.811168820995697],\n            [-122.409320870242325, 37.811304413000762],\n            [-122.409364308333835, 37.811310577307111],\n            [-122.409405910098016, 37.811178053025465],\n            [-122.409425033757373, 37.811181176769772],\n            [-122.409405998308287, 37.811316082900326],\n            [-122.40944074878638, 37.811321014101964],\n            [-122.40948063795679, 37.811189203966087],\n            [-122.409501474085218, 37.811191613525516],\n            [-122.409480725959895, 37.811327233846249],\n            [-122.409527624648632, 37.811333341792235],\n            [-122.409567496367472, 37.811200845459226],\n            [-122.409588350159311, 37.811203941440354],\n            [-122.40956758453207, 37.81133887533899],\n            [-122.409607544075371, 37.811344408877801],\n            [-122.409647432976385, 37.811212599235269],\n            [-122.409666538650669, 37.811215036508962],\n            [-122.4096475212896, 37.811350629114692],\n            [-122.409687480492039, 37.811356162357413],\n            [-122.409729082397121, 37.811223637951706],\n            [-122.409748205742758, 37.811226761923784],\n            [-122.40972917051603, 37.811361667836366],\n            [-122.40976739996718, 37.811367229334621],\n            [-122.409807270930216, 37.811234732926998],\n            [-122.409826394289098, 37.811237857160975],\n            [-122.409807359540622, 37.811372762805725],\n            [-122.409849067242604, 37.811378954679277],\n            [-122.409888938066231, 37.811246458244362],\n            [-122.409909791884289, 37.81124955416864],\n            [-122.409890757298484, 37.811384460375677],\n            [-122.409934195469972, 37.811390623922954],\n            [-122.409972335687982, 37.811258155482349],\n            [-122.409991388408557, 37.811258533667043],\n            [-122.410051001542016, 37.811355083215751],\n            [-122.410080225111116, 37.811347055723829],\n            [-122.410039452733983, 37.811242647397464],\n            [-122.410060076955276, 37.811236819614464],\n            [-122.410111355764599, 37.81134586484395],\n            [-122.410186754248173, 37.811315801374953],\n            [-122.410002034752523, 37.810999466686859],\n            [-122.410015948336749, 37.810934689402742],\n            [-122.410036236914948, 37.810915819594705],\n            [-122.410045418985376, 37.810868973454134],\n            [-122.40995683043738, 37.810857360334786],\n            [-122.409929090780366, 37.810990347084882],\n            [-122.409911715601922, 37.810987881557118],\n            [-122.409936471227283, 37.810873484930354],\n            [-122.409873927744698, 37.810864883322409],\n            [-122.409849172039969, 37.810979280485419],\n            [-122.409831796859692, 37.810976814671307],\n            [-122.409859730943055, 37.810851378751366],\n            [-122.409793708942289, 37.810842147255194],\n            [-122.409767522509881, 37.810968241308018],\n            [-122.409751878141279, 37.810965747731309],\n            [-122.409778063900148, 37.81083965341854],\n            [-122.409713790367476, 37.810831080014538],\n            [-122.409685856045158, 37.810956515900401],\n            [-122.409668480889763, 37.810954050611365],\n            [-122.409696415233427, 37.810828614454991],\n            [-122.40963387182353, 37.810820012994292],\n            [-122.409609415933446, 37.810946079263672],\n            [-122.409592040775962, 37.810943613688799],\n            [-122.409616496701801, 37.810817547697539],\n            [-122.409552222853762, 37.810808973936524],\n            [-122.409527766835737, 37.810935040463818],\n            [-122.4095103913304, 37.810932574607932],\n            [-122.409534847384165, 37.81080650835878],\n            [-122.409470556252117, 37.810797248385086],\n            [-122.4094443696399, 37.810923342636215],\n            [-122.409426994147125, 37.810920877042648],\n            [-122.409453181134111, 37.810794782789721],\n            [-122.40938717688249, 37.810786237228463],\n            [-122.409360972477401, 37.810911645024227],\n            [-122.409343596990126, 37.810909179418339],\n            [-122.409371532226004, 37.810783743881395],\n            [-122.409307258435504, 37.810775169986833],\n            [-122.409279323454484, 37.810900606052307],\n            [-122.409261948311553, 37.810898140154237],\n            [-122.409289883328043, 37.810772704367388],\n            [-122.409222130673314, 37.810763500569543],\n            [-122.409194195884822, 37.810888936060401],\n            [-122.409178551206097, 37.810886442413199],\n            [-122.409204755910437, 37.810761034657382],\n            [-122.409142194961319, 37.810751746498703],\n            [-122.409114277009948, 37.810877868693844],\n            [-122.409096902238019, 37.810875403314995],\n            [-122.409124837171674, 37.81074996729771],\n            [-122.409062293894237, 37.810741365533815],\n            [-122.409034358851102, 37.810866801261916],\n            [-122.409016983385186, 37.810864335607896],\n            [-122.409044919155974, 37.810738900147257],\n            [-122.408982375890048, 37.810730298066382],\n            [-122.408954440030968, 37.81085573406159],\n            [-122.408937065255401, 37.810853268110044],\n            [-122.408965000457812, 37.810727832404666],\n            [-122.408898979017181, 37.810718600127345],\n            [-122.408871043014514, 37.810844035828495],\n            [-122.408853668258587, 37.8108415704138],\n            [-122.408881603590444, 37.810716134453337],\n            [-122.408815582170575, 37.810706902129297],\n            [-122.408787646031413, 37.810832337810972],\n            [-122.408770288923606, 37.810830558546641],\n            [-122.408798206756401, 37.810704436717558],\n            [-122.408730454910014, 37.810695232351428],\n            [-122.408702518970472, 37.810820667733054],\n            [-122.408686891971527, 37.810818860457857],\n            [-122.408713079833362, 37.810692766372398],\n            [-122.408650536651805, 37.810684164390111],\n            [-122.408622600588473, 37.810809600027646],\n            [-122.408605243143839, 37.810807820744628],\n            [-122.408633161587474, 37.810681698673903],\n            [-122.408556510134844, 37.810663024107164],\n            [-122.408588984612706, 37.810512106294745],\n            [-122.408606359289806, 37.810514572023159],\n            [-122.408587340511048, 37.810650164195629],\n            [-122.408629047705375, 37.810656356501411],\n            [-122.408668902323384, 37.810523174029143],\n            [-122.408686277704945, 37.81052564000916],\n            [-122.40866552792356, 37.81066125993452],\n            [-122.408708965930458, 37.810667424477344],\n            [-122.408748820750048, 37.810534241698186],\n            [-122.40876619543765, 37.81053670740306],\n            [-122.40874717695219, 37.810672299875314],\n            [-122.408794093155748, 37.810679094270796],\n            [-122.408833947835987, 37.810545911737734],\n            [-122.408849592085303, 37.810548405436371],\n            [-122.40883057374208, 37.810683997647232],\n            [-122.408875741869977, 37.810690133853562],\n            [-122.408915614060632, 37.81055763773044],\n            [-122.408932971115192, 37.810559417248072],\n            [-122.408913970565308, 37.81069569563472],\n            [-122.408960869161646, 37.810701804075741],\n            [-122.409000741206668, 37.810569307924148],\n            [-122.409018098597954, 37.810571086874475],\n            [-122.40899736742189, 37.810707393837795],\n            [-122.409040787124908, 37.810712871283229],\n            [-122.409080641733894, 37.810579688936649],\n            [-122.409096286337629, 37.810582182322406],\n            [-122.409077268090201, 37.810717774577761],\n            [-122.40911897536337, 37.810723966710214],\n            [-122.409158829484909, 37.81059078406853],\n            [-122.409176204199355, 37.810593249712966],\n            [-122.409157186441121, 37.810728841975312],\n            [-122.409200623829136, 37.810735006073635],\n            [-122.409240478156264, 37.81060182339904],\n            [-122.409257853229136, 37.810604289300421],\n            [-122.409238852918037, 37.810740567743849],\n            [-122.409285751569428, 37.810746676055665],\n            [-122.409325605404021, 37.810613493358183],\n            [-122.409341250023104, 37.81061598671144],\n            [-122.40932224986912, 37.810752265442567],\n            [-122.4093656699755, 37.81075774303735],\n            [-122.40940554098205, 37.810625246755905],\n            [-122.409422898749284, 37.810627025915643],\n            [-122.409403898742326, 37.810763304659638],\n            [-122.409447336517104, 37.810769468661483],\n            [-122.40948544197218, 37.810635627488516],\n            [-122.409502816715019, 37.810638093359387],\n            [-122.409485547293727, 37.810774343825763],\n            [-122.409528985434875, 37.8107805080665],\n            [-122.409565359949454, 37.810646694615322],\n            [-122.409582735382628, 37.810649160188639],\n            [-122.409567196568673, 37.810785383198734],\n            [-122.409612364812048, 37.81079151884834],\n            [-122.409648756853613, 37.810658392357979],\n            [-122.409666132285238, 37.810660857644436],\n            [-122.409648863165444, 37.8107971084087],\n            [-122.409690552872675, 37.810802613901892],\n            [-122.409730423669671, 37.810670117506156],\n            [-122.409747781109076, 37.81067189662366],\n            [-122.409728781340874, 37.810808175424455],\n            [-122.409772201856015, 37.810813652863935],\n            [-122.409810324407417, 37.810680498024219],\n            [-122.409827699517621, 37.810682963841622],\n            [-122.409810430682086, 37.810819214354417],\n            [-122.4098555989803, 37.810825350459979],\n            [-122.409895451834942, 37.810692167571958],\n            [-122.409912826590485, 37.810694632833282],\n            [-122.409895222374288, 37.810817841328777],\n            [-122.409936876790525, 37.81082197386079],\n            [-122.409973639826163, 37.810703262163521],\n            [-122.409991014940061, 37.810705727682269],\n            [-122.409959938125212, 37.81084357554878],\n            [-122.410048526318235, 37.810855188946014],\n            [-122.41005622518567, 37.810817980946432],\n            [-122.410043511556253, 37.810794838529432],\n            [-122.410054194116455, 37.810739040961913],\n            [-122.410078049482479, 37.810724233171044],\n            [-122.410094488114893, 37.810623018930904],\n            [-122.410081703845862, 37.810597130219826],\n            [-122.410092509988729, 37.810546137980772],\n            [-122.410117989755761, 37.810527183534326],\n            [-122.410136070412563, 37.810422508799753],\n            [-122.410119930917134, 37.810400795044814],\n            [-122.41012762970874, 37.810363587311961],\n            [-122.410156217048225, 37.810330848613937],\n            [-122.41017620465729, 37.81023300994017],\n            [-122.410158299784257, 37.810209951610261],\n            [-122.410179752853338, 37.810101788351538],\n            [-122.410076402542387, 37.809920107344034],\n            [-122.410041882266327, 37.809924099736733],\n            [-122.410019086454341, 37.809912794612728],\n            [-122.409979357246016, 37.809916185169463],\n            [-122.409958274206915, 37.809904165299031],\n            [-122.409922023510461, 37.809908185953802],\n            [-122.409899227375504, 37.80989688081219],\n            [-122.409856019993072, 37.80989964065347],\n            [-122.409833224216882, 37.809888335493483],\n            [-122.409796955869524, 37.80989166994722],\n            [-122.409774159751635, 37.809880364506853],\n            [-122.40973616131653, 37.809883726681605],\n            [-122.409715095991231, 37.809872393479395],\n            [-122.409673618697951, 37.809875125240453],\n            [-122.409650822957047, 37.809863820045173],\n            [-122.409611093758144, 37.809867210477904],\n            [-122.409590028449543, 37.809855876978752],\n            [-122.409552029326491, 37.809859239105428],\n            [-122.40952923395507, 37.809847933880995],\n            [-122.409489504405954, 37.809851324003851],\n            [-122.409466709046484, 37.809840018767318],\n            [-122.409426961850301, 37.809842722706414],\n            [-122.409405896576772, 37.809831389174342],\n            [-122.409362689214092, 37.809834148834945],\n            [-122.409339893540192, 37.80982284385405],\n            [-122.40930537326976, 37.809826836031277],\n            [-122.409282577599768, 37.809815530764716],\n            [-122.409239369556644, 37.809818290665945],\n            [-122.409216574238357, 37.809806985106434],\n            [-122.409183784056154, 37.809810949516532],\n            [-122.409160988755644, 37.809799644220845],\n            [-122.409117781056253, 37.80980240379737],\n            [-122.409096715848435, 37.809791070484557],\n            [-122.409062177941692, 37.809794376702477],\n            [-122.40903938231871, 37.80978307138885],\n            [-122.409001401198537, 37.80978711949534],\n            [-122.408980336012803, 37.809775786161715],\n            [-122.408940588826241, 37.809778489662385],\n            [-122.408917793572726, 37.809767184319618],\n            [-122.408872855464537, 37.809769972088361],\n            [-122.408850059531787, 37.809758666743676],\n            [-122.408812061110055, 37.80976202834627],\n            [-122.408789265535077, 37.809750722984248],\n            [-122.40874778827569, 37.809753454419798],\n            [-122.408724992367041, 37.80974214905094],\n            [-122.408688724387432, 37.809745483158423],\n            [-122.408665928836285, 37.809734177772519],\n            [-122.408627929726592, 37.809737539327024],\n            [-122.408605134533261, 37.809726233923747],\n            [-122.40856886620287, 37.809729567725441],\n            [-122.408546070674888, 37.809718262316345],\n            [-122.408502862660981, 37.80972102194783],\n            [-122.408480067491766, 37.809709716520373],\n            [-122.408442068732256, 37.809713078009395],\n            [-122.408419272882526, 37.809701772581377],\n            [-122.40838475263304, 37.809705765038423],\n            [-122.408363687557454, 37.809694431319926],\n            [-122.408318732173385, 37.809696532434543],\n            [-122.408295936693619, 37.809685226977031],\n            [-122.408254459445629, 37.809687957964584],\n            [-122.408238053815026, 37.809790545390122],\n            [-122.40821721811372, 37.809788135332319],\n            [-122.408256439046454, 37.809562942360742],\n            [-122.408275562248491, 37.809566066566916],\n            [-122.408269450984477, 37.809665053549438],\n            [-122.408286825452777, 37.809667519325309],\n            [-122.40832766898086, 37.809572777430049],\n            [-122.408321557439706, 37.809671764420713],\n            [-122.408342410750109, 37.809674860622998],\n            [-122.408383254218379, 37.809580118983206],\n            [-122.408377142750709, 37.809679105976613],\n            [-122.408394517910963, 37.809681571450852],\n            [-122.408435360963296, 37.809586829524143],\n            [-122.408429249910625, 37.809685816514552],\n            [-122.408451833660507, 37.80968888497187],\n            [-122.408492676297627, 37.809594143031056],\n            [-122.408484852889558, 37.809693844457087],\n            [-122.408503958134872, 37.809696281919784],\n            [-122.408544801055655, 37.809601539955445],\n            [-122.408536959377372, 37.809700554958617],\n            [-122.408557795064482, 37.809702964959982],\n            [-122.408598638259278, 37.809608222696959],\n            [-122.408592544731249, 37.809707896412988],\n            [-122.408615128826568, 37.809710964284278],\n            [-122.40865597161357, 37.809616222281704],\n            [-122.408639231230907, 37.809705767179551],\n            [-122.408663757193779, 37.809717044567101],\n            [-122.408704599922103, 37.80962230254778],\n            [-122.408696758454738, 37.809721317561177],\n            [-122.408722821063833, 37.809725016115578],\n            [-122.408763663375069, 37.80963027408157],\n            [-122.408757553102589, 37.809729261082566],\n            [-122.408776676029532, 37.8097323854876],\n            [-122.408817518615137, 37.809637643154893],\n            [-122.408811408067763, 37.809736630164153],\n            [-122.408839165466787, 37.809738927817939],\n            [-122.408880043284086, 37.809645558612985],\n            [-122.408873932819418, 37.809744545625371],\n            [-122.40889130733342, 37.809747011586715],\n            [-122.408932150126873, 37.809652269208989],\n            [-122.408926057042962, 37.809751942941425],\n            [-122.408946892742989, 37.809754352324887],\n            [-122.408987735476614, 37.809659610202615],\n            [-122.408979894728986, 37.80975862522854],\n            [-122.409002478177683, 37.809761693586005],\n            [-122.409043320837327, 37.809666951170023],\n            [-122.40903548016307, 37.809765966199507],\n            [-122.409052855026459, 37.809768431856902],\n            [-122.409093697286551, 37.809673689703786],\n            [-122.409085856332652, 37.809772704742095],\n            [-122.409106709703295, 37.809775800809213],\n            [-122.409147552244775, 37.809681058631973],\n            [-122.409141441787753, 37.809780045663132],\n            [-122.409162295162758, 37.809783141720409],\n            [-122.409203137637348, 37.809688399524063],\n            [-122.409195297173937, 37.809787414563765],\n            [-122.409214402473708, 37.809789852185943],\n            [-122.409255244539409, 37.809695109977277],\n            [-122.409249134570899, 37.809794097008144],\n            [-122.409268257528154, 37.809797221058851],\n            [-122.409309099536273, 37.809702479106257],\n            [-122.40930298963896, 37.809801466139774],\n            [-122.409325573445983, 37.809804533880602],\n            [-122.409366415377917, 37.809709791633715],\n            [-122.409360305556405, 37.809808778670053],\n            [-122.409379410874138, 37.809811216540062],\n            [-122.409420252741057, 37.809716474274637],\n            [-122.409412429873498, 37.809816175771125],\n            [-122.409431535526792, 37.809818613077915],\n            [-122.409472376985178, 37.809723870800191],\n            [-122.409466267649847, 37.80982285783616],\n            [-122.409488851138192, 37.809825926100473],\n            [-122.409529693219639, 37.809731183791826],\n            [-122.409521853187186, 37.809830198852438],\n            [-122.409544436665897, 37.809833266556943],\n            [-122.409585278680453, 37.809738524229203],\n            [-122.409577438721357, 37.809837539293362],\n            [-122.409600022218754, 37.809840607536366],\n            [-122.409640864166391, 37.809745865189505],\n            [-122.409624124935263, 37.809835409950374],\n            [-122.409648668402042, 37.809847373575664],\n            [-122.409694718878129, 37.809753233598798],\n            [-122.409683400550946, 37.809851618269946],\n            [-122.40970946326199, 37.809855316880828],\n            [-122.409750304385923, 37.809760574507528],\n            [-122.409744195418114, 37.809859561557211],\n            [-122.409763300747386, 37.809861998815862],\n            [-122.409800681301817, 37.809767312459051],\n            [-122.409798050568668, 37.809866929913561],\n            [-122.409813677394268, 37.809868737041889],\n            [-122.409859727674416, 37.809774597001002],\n            [-122.409848409562613, 37.809872981687576],\n            [-122.409872741508423, 37.809876708014343],\n            [-122.409896207540612, 37.809779500054304],\n            [-122.409902917913584, 37.809838449581335],\n            [-122.409927956256155, 37.809869633383848],\n            [-122.410058214833967, 37.809886065459693],\n            [-122.40978805552237, 37.809411107578008],\n            [-122.409692176324654, 37.809452490025258],\n            [-122.409753394315103, 37.809476907533615],\n            [-122.409795083288799, 37.80948241299123],\n            [-122.409790439454952, 37.809503776606206],\n            [-122.409767643810284, 37.809492471432705],\n            [-122.409733123723498, 37.809496464009918],\n            [-122.40971032808983, 37.809485158825325],\n            [-122.40967926884106, 37.809489095348837],\n            [-122.409656473217836, 37.809477790153814],\n            [-122.409630622889722, 37.80948232932171],\n            [-122.409609557687361, 37.809470995825244],\n            [-122.409573289526762, 37.809474329935902],\n            [-122.409550493924201, 37.809463024720365],\n            [-122.40952291317636, 37.809467591881273],\n            [-122.409500117230408, 37.809456286387039],\n            [-122.409465597146067, 37.809460278886],\n            [-122.409442784254765, 37.809448287206727],\n            [-122.409413473087668, 37.809452882357093],\n            [-122.409390677508952, 37.809441576836036],\n            [-122.409354409006824, 37.809444910885041],\n            [-122.409331613792688, 37.809433605621535],\n            [-122.409304033042332, 37.809438172731298],\n            [-122.409281237484791, 37.809426867189075],\n            [-122.409251926309096, 37.809431462024762],\n            [-122.40922913042256, 37.809420156752616],\n            [-122.409192844962547, 37.809422804303409],\n            [-122.409170049433754, 37.809411499014253],\n            [-122.409133798935159, 37.809415519427169],\n            [-122.409110985426068, 37.809403527969394],\n            [-122.409076465338302, 37.809407520079958],\n            [-122.409053670177968, 37.809396214762678],\n            [-122.409027819488273, 37.809400753529559],\n            [-122.409005024337446, 37.809389448202872],\n            [-122.408973965091334, 37.809393384540734],\n            [-122.408951169258785, 37.809382079214799],\n            [-122.40891837994225, 37.80938604354025],\n            [-122.408895584120444, 37.809374738203552],\n            [-122.408862794804193, 37.809378702513534],\n            [-122.408839998993102, 37.809367397166127],\n            [-122.408808940093522, 37.809371333454934],\n            [-122.408786144638981, 37.809360028091476],\n            [-122.408756815463747, 37.809363936372364],\n            [-122.4087340203655, 37.80935263099321],\n            [-122.408701230358204, 37.809356595269499],\n            [-122.408678435270645, 37.809345289879595],\n            [-122.408645645263661, 37.809349254140457],\n            [-122.408622850186802, 37.809337948739781],\n            [-122.408591790941983, 37.809341884977052],\n            [-122.408568995183444, 37.809330579577171],\n            [-122.408536205869268, 37.809334543796403],\n            [-122.408513410121444, 37.809323238385751],\n            [-122.408482351223043, 37.809327174588631],\n            [-122.408459555831755, 37.809315869161935],\n            [-122.408426766172141, 37.809319833356362],\n            [-122.408403970791582, 37.809308527918944],\n            [-122.408371181132239, 37.809312492097938],\n            [-122.408350116177374, 37.809301158650754],\n            [-122.408315578458229, 37.809304464375806],\n            [-122.408292783099327, 37.809293158916844],\n            [-122.408263471569185, 37.80929775351261],\n            [-122.408240676566351, 37.80928644803798],\n            [-122.408207886561954, 37.809290412177198],\n            [-122.408185073925949, 37.809278420254287],\n            [-122.408155762741032, 37.809283014817716],\n            [-122.408132967413039, 37.809271709327838],\n            [-122.408100177755486, 37.809275673431507],\n            [-122.408077382438208, 37.809264367930865],\n            [-122.408039154542493, 37.809258805877114],\n            [-122.408058756181504, 37.809145866471148],\n            [-122.408066594168815, 37.809248747837302],\n            [-122.408087429706811, 37.809251157647353],\n            [-122.408126507222988, 37.809155071214583],\n            [-122.408120448716886, 37.809256117235002],\n            [-122.408137823084502, 37.809258583032992],\n            [-122.408178631290198, 37.80916246830698],\n            [-122.408172554871641, 37.809262828172606],\n            [-122.408196869235468, 37.809265868402413],\n            [-122.408235946617765, 37.809169781933626],\n            [-122.408229888259399, 37.809270827959395],\n            [-122.408254202289157, 37.809273868457552],\n            [-122.408293279587355, 37.809177781420765],\n            [-122.408287221320464, 37.809278827998476],\n            [-122.408308056867014, 37.809281237494979],\n            [-122.408347134113498, 37.809185150989656],\n            [-122.408332158807269, 37.809276040458201],\n            [-122.408356702573101, 37.809288004342378],\n            [-122.408397510165557, 37.809191889546774],\n            [-122.408391452032305, 37.809292935854977],\n            [-122.408412287593251, 37.809295345607659],\n            [-122.408453095124827, 37.809199231067545],\n            [-122.408447037059574, 37.809300277103894],\n            [-122.408471350761801, 37.809303317562879],\n            [-122.408512158553279, 37.809207202447709],\n            [-122.408506100235769, 37.809308249041685],\n            [-122.408521727251397, 37.8093100560612],\n            [-122.408560804236558, 37.809213969485583],\n            [-122.408554745970605, 37.809315015532796],\n            [-122.408577329958945, 37.809318083960704],\n            [-122.408618119627377, 37.809221282377308],\n            [-122.40861206179197, 37.80932232869629],\n            [-122.408636375847209, 37.809325368841058],\n            [-122.408677182759092, 37.809229254229557],\n            [-122.408671125342451, 37.80933030027127],\n            [-122.40868850009889, 37.809332766257086],\n            [-122.408727576866028, 37.809236679077507],\n            [-122.408721501183379, 37.80933703897],\n            [-122.408740606697776, 37.80933947666351],\n            [-122.408781413482515, 37.80924336201619],\n            [-122.408775356206561, 37.809344408062977],\n            [-122.40879620945104, 37.809347504459829],\n            [-122.408837016154081, 37.809251389244281],\n            [-122.408830941310313, 37.809351749130926],\n            [-122.408848316070006, 37.809354214818633],\n            [-122.4088891230695, 37.809258100128716],\n            [-122.40888306559286, 37.80935914618636],\n            [-122.408902170426074, 37.809361583864899],\n            [-122.408942977698928, 37.809265468876312],\n            [-122.408936919955934, 37.809366515216752],\n            [-122.408959503968703, 37.809369583296906],\n            [-122.408998562767209, 37.809272810139959],\n            [-122.408992505092215, 37.809373856208545],\n            [-122.409013358354017, 37.809376952566957],\n            [-122.409054147832379, 37.809280150828236],\n            [-122.409048090239509, 37.809381197174098],\n            [-122.409070674261315, 37.809384265232971],\n            [-122.409109750575112, 37.809288178476827],\n            [-122.40910369305017, 37.809389224550813],\n            [-122.409122798597593, 37.809391662456981],\n            [-122.409161857180791, 37.809294888697217],\n            [-122.409155800079347, 37.809395935042737],\n            [-122.409180113834879, 37.809398975080981],\n            [-122.409220920775525, 37.809302860271487],\n            [-122.409214863400692, 37.809403906350916],\n            [-122.409233968955562, 37.809406344239079],\n            [-122.409273045055528, 37.809310256880117],\n            [-122.409266988111227, 37.80941130350562],\n            [-122.40929130186926, 37.809414343246381],\n            [-122.409332108667385, 37.80931822812412],\n            [-122.409326033795196, 37.809418588046228],\n            [-122.409343408940103, 37.809421053929945],\n            [-122.40938421532131, 37.809324938520824],\n            [-122.409378158527119, 37.809425985151776],\n            [-122.40939901180549, 37.809429080892826],\n            [-122.409438070062492, 37.809332307591447],\n            [-122.409432013326835, 37.809433353675857],\n            [-122.409477180743622, 37.809439489653357],\n            [-122.409529287502835, 37.809446200260403],\n            [-122.409588351243272, 37.809454171101315],\n            [-122.40962830977378, 37.809459704635067],\n            [-122.409632794735771, 37.809432163090825],\n            [-122.409672911837845, 37.809443874825128],\n            [-122.409782563727632, 37.809399522210484],\n            [-122.409759009148317, 37.809358700227392],\n            [-122.409646479104083, 37.809089266648215],\n            [-122.409583548723262, 37.809065563811615],\n            [-122.409522825494292, 37.80906036618412],\n            [-122.409518181262428, 37.809081729795679],\n            [-122.409495386134864, 37.809070424563046],\n            [-122.409466075113144, 37.809075019452258],\n            [-122.409443262001091, 37.809063028052371],\n            [-122.409410472498593, 37.80906699224586],\n            [-122.409387677045885, 37.809055686998015],\n            [-122.409356617959673, 37.80905962343688],\n            [-122.409333822524488, 37.809048318453144],\n            [-122.409299302613846, 37.809052310629191],\n            [-122.40927823759111, 37.809040977347202],\n            [-122.409247178159163, 37.809044913762847],\n            [-122.409226113153551, 37.80903358074611],\n            [-122.409193341651701, 37.809038231311064],\n            [-122.409172276649144, 37.80902689801011],\n            [-122.409141217563558, 37.809030834392281],\n            [-122.409118422162948, 37.809019529092303],\n            [-122.409083884609018, 37.809022835042484],\n            [-122.409061089219591, 37.809011529731414],\n            [-122.409026569318456, 37.809015522102243],\n            [-122.409005504354852, 37.809004189046036],\n            [-122.408972714854954, 37.80900815311788],\n            [-122.408949919486972, 37.808996847785302],\n            [-122.408918860402167, 37.809000784108946],\n            [-122.408896065051678, 37.808989479040513],\n            [-122.408865005613961, 37.808993415081005],\n            [-122.408842210612988, 37.80898210972196],\n            [-122.408807673071223, 37.808985415865877],\n            [-122.408784877735343, 37.808974110501353],\n            [-122.408753818298166, 37.808978046512571],\n            [-122.408732753379752, 37.808966713133003],\n            [-122.40870344269787, 37.808971307827179],\n            [-122.408680647389247, 37.80896000271705],\n            [-122.408653066760635, 37.80896456912587],\n            [-122.408630271454712, 37.808953263731418],\n            [-122.408595751557471, 37.808957255976196],\n            [-122.408574686669112, 37.808945922568363],\n            [-122.40853841837243, 37.808949256366759],\n            [-122.4085173534951, 37.808937922948687],\n            [-122.408484564351539, 37.808941887153871],\n            [-122.408461768739215, 37.80893058200698],\n            [-122.408432440401654, 37.808934489921761],\n            [-122.408409645138534, 37.808923184484605],\n            [-122.408375125243424, 37.808927176664845],\n            [-122.408354060404321, 37.808915843492116],\n            [-122.408319522857553, 37.808919148943978],\n            [-122.408296727616332, 37.808907843484988],\n            [-122.408265686178666, 37.808912466074247],\n            [-122.408242890954767, 37.808901160879408],\n            [-122.408208353409876, 37.808904466298728],\n            [-122.408185558190112, 37.808893160818222],\n            [-122.408154499115199, 37.808897097215251],\n            [-122.40813170390588, 37.808885791724293],\n            [-122.40810064447102, 37.808889727563603],\n            [-122.408077849618252, 37.808878422056637],\n            [-122.408048538584595, 37.808883016593732],\n            [-122.408027473807891, 37.80887168336259],\n            [-122.407989475110696, 37.808875044711961],\n            [-122.407968410338185, 37.808863711195677],\n            [-122.40793908201519, 37.808867619537004],\n            [-122.407916286847737, 37.808856314004366],\n            [-122.407867659098386, 37.808850233137854],\n            [-122.407892470076433, 37.808737895932389],\n            [-122.407895080955839, 37.808839488699526],\n            [-122.407919412118858, 37.808843215435566],\n            [-122.407965428881198, 37.808747703240833],\n            [-122.407954143699186, 37.808847460639832],\n            [-122.407971518664866, 37.808849926725884],\n            [-122.408015804954957, 37.808754442230494],\n            [-122.408004537488765, 37.808854886346353],\n            [-122.408030581417677, 37.80885789835331],\n            [-122.408074867989683, 37.808762414104869],\n            [-122.408063600595128, 37.808862857951631],\n            [-122.408080957579173, 37.808864637589593],\n            [-122.408126991783163, 37.808769811495232],\n            [-122.408115706821903, 37.808869569183827],\n            [-122.408134811496907, 37.808872006712299],\n            [-122.408175637137717, 37.80877657841792],\n            [-122.408167830687617, 37.808876966281417],\n            [-122.408188666131636, 37.808879376348344],\n            [-122.408234682562991, 37.808783863774664],\n            [-122.40822341538842, 37.808884307910851],\n            [-122.4082459985258, 37.808887375864508],\n            [-122.408292014895409, 37.808791863543163],\n            [-122.408280730145464, 37.80889162097256],\n            [-122.408299853182712, 37.808894745449784],\n            [-122.408345869480527, 37.808799232832989],\n            [-122.408334584808884, 37.808898990541991],\n            [-122.40835716795533, 37.808902058474338],\n            [-122.408401454133696, 37.808806574104075],\n            [-122.408390187174248, 37.808907017981177],\n            [-122.408412770332475, 37.808910086177463],\n            [-122.408457056451198, 37.808814602061034],\n            [-122.408447501979367, 37.808914331510991],\n            [-122.408464876962967, 37.808916796975197],\n            [-122.408510893069277, 37.808821284568992],\n            [-122.408499626255633, 37.808921728456291],\n            [-122.408520461722972, 37.808924138464597],\n            [-122.408564747351377, 37.808828653764436],\n            [-122.408553480616533, 37.808929097931319],\n            [-122.40857606412726, 37.808932165816167],\n            [-122.408622080100045, 37.808836653366868],\n            [-122.408610795786757, 37.808936410826988],\n            [-122.408633379309109, 37.808939478975418],\n            [-122.408677664815599, 37.808843994782293],\n            [-122.408666398217051, 37.808944438410528],\n            [-122.408683754881451, 37.808946217690789],\n            [-122.408728058314978, 37.808851419636184],\n            [-122.408718504202398, 37.808951149107379],\n            [-122.40873414881105, 37.808953643085459],\n            [-122.40878016458673, 37.808858130300308],\n            [-122.408768880489617, 37.80895788804974],\n            [-122.408788002858174, 37.808961011909815],\n            [-122.408832288517658, 37.808865527378856],\n            [-122.408822734543293, 37.808965256858244],\n            [-122.40884531843632, 37.808968325235043],\n            [-122.408891334078092, 37.80887281240679],\n            [-122.408880067778369, 37.808973256604034],\n            [-122.40889917250513, 37.808975694008623],\n            [-122.408943458030421, 37.808880209436197],\n            [-122.408933921854199, 37.808980625361755],\n            [-122.408953027290934, 37.808983063295585],\n            [-122.408997312398199, 37.808887578434081],\n            [-122.408987758995764, 37.808987308195377],\n            [-122.409008612134684, 37.808990404005712],\n            [-122.409052897181908, 37.808894919398057],\n            [-122.409041631090304, 37.808995363335725],\n            [-122.40906421464841, 37.808998431401648],\n            [-122.409110230041378, 37.808902919037678],\n            [-122.409098946373874, 37.809002676543273],\n            [-122.409121529583416, 37.809005744329234],\n            [-122.409165814840676, 37.808910259673837],\n            [-122.409154548899522, 37.809010703622],\n            [-122.409175384406026, 37.80901311324002],\n            [-122.4092196692594, 37.808917628844746],\n            [-122.409208385736662, 37.80901738636053],\n            [-122.409229238893218, 37.809020482131849],\n            [-122.409273523674656, 37.808924997441885],\n            [-122.4092622402232, 37.809024754962692],\n            [-122.40927961492774, 37.809027220861601],\n            [-122.409325630047334, 37.808931707864964],\n            [-122.409314364326178, 37.80903215210256],\n            [-122.409336947553612, 37.809035219847274],\n            [-122.409381232551411, 37.808939735111537],\n            [-122.409369949242404, 37.809039492642384],\n            [-122.409390802418955, 37.809042588659686],\n            [-122.409422921195898, 37.808945240701227],\n            [-122.409422903348997, 37.809011853140163],\n            [-122.40946679914822, 37.809035864508125],\n            [-122.409564019832658, 37.809046651478369],\n            [-122.409549629214183, 37.809025596054688],\n            [-122.409548887643922, 37.80899676568643],\n            [-122.409387695818651, 37.808719879048233],\n            [-122.409342422574227, 37.808709624416799],\n            [-122.409302270626966, 37.808696540242821],\n            [-122.409262612300481, 37.808769974638814],\n            [-122.409243366033195, 37.808762045524638],\n            [-122.409286290635848, 37.808681004303558],\n            [-122.409251523749987, 37.808675386616557],\n            [-122.409211865384634, 37.808748820995767],\n            [-122.409192619474325, 37.8087408918677],\n            [-122.409232277847408, 37.808667457220274],\n            [-122.409218046276052, 37.808652579691525],\n            [-122.409199082493714, 37.808655633568947],\n            [-122.409183155837965, 37.808642156922303],\n            [-122.409146746495978, 37.80863999940842],\n            [-122.409132550252011, 37.808626494744182],\n            [-122.409097906968512, 37.808625682074002],\n            [-122.409081980690672, 37.808612205682593],\n            [-122.409045571705349, 37.808610047857293],\n            [-122.409029645094293, 37.808596571464371],\n            [-122.40899498416762, 37.808595072051922],\n            [-122.408979057222851, 37.808581595657749],\n            [-122.408939170155094, 37.808578807372939],\n            [-122.408923243223967, 37.808565330971156],\n            [-122.40887636397639, 37.80855990894463],\n            [-122.408862167796897, 37.808546404247657],\n            [-122.40882402846016, 37.808544274635025],\n            [-122.408771338418944, 37.808649509314336],\n            [-122.408752144836185, 37.80864363943796],\n            [-122.408804834900437, 37.808538404767106],\n            [-122.408755995512777, 37.808524087565431],\n            [-122.40870503613472, 37.808629294204955],\n            [-122.408684130157809, 37.808624138753608],\n            [-122.408736802648747, 37.808518217400646],\n            [-122.408686214896832, 37.808503241742777],\n            [-122.408633542337299, 37.808609162798888],\n            [-122.40861434946801, 37.808603292888833],\n            [-122.408665291301503, 37.808497399575863],\n            [-122.408618182709631, 37.808483054307779],\n            [-122.408565527707552, 37.808589661496853],\n            [-122.408546334502589, 37.808583791581334],\n            [-122.408598989528059, 37.808477184400701],\n            [-122.408550150206281, 37.808462866564483],\n            [-122.408494192805264, 37.808575707944065],\n            [-122.408475017602044, 37.808570524448861],\n            [-122.408530957042373, 37.808456996920889],\n            [-122.408475143235307, 37.808440732021886],\n            [-122.408419203721877, 37.80855425952376],\n            [-122.408400010537662, 37.808548389584381],\n            [-122.40845594972285, 37.808434861822526],\n            [-122.408401884334964, 37.808419255320196],\n            [-122.408345944732787, 37.808532783062383],\n            [-122.408326768858856, 37.808527599554232],\n            [-122.408382691187029, 37.808413385377861],\n            [-122.408326877445205, 37.808397120408593],\n            [-122.40827095504342, 37.808511334558837],\n            [-122.408251779872415, 37.808506151027288],\n            [-122.408325818753553, 37.80835593442692],\n            [-122.408307261690325, 37.808307477072752],\n            [-122.408233773949888, 37.808277076846032],\n            [-122.408190831757594, 37.808290132648246],\n            [-122.408103813680896, 37.80847420912815],\n            [-122.408070707145512, 37.808465817066804],\n            [-122.408167524728952, 37.808258920751598],\n            [-122.408046540290897, 37.80819907276836],\n            [-122.408024204007958, 37.808205614634559],\n            [-122.407919104249203, 37.808427066268948],\n            [-122.407885997416685, 37.80841867443587],\n            [-122.407996041444051, 37.808187528721767],\n            [-122.407913795821727, 37.808153149917878],\n            [-122.407807565173499, 37.808397968053718],\n            [-122.407786659324017, 37.808392812443081],\n            [-122.407868398033912, 37.808205388267609],\n            [-122.407660185387385, 37.808254079991599],\n            [-122.407706584592447, 37.808375566178441],\n            [-122.407613672832028, 37.80839767070411],\n            [-122.407507720833991, 37.808114394328115],\n            [-122.407549056121539, 37.808106171825735],\n            [-122.407536061536263, 37.808072046122568],\n            [-122.407462591282297, 37.808042331588446],\n            [-122.40744611868692, 37.808007575403529],\n            [-122.407487420240358, 37.807930680888951],\n            [-122.407431324879042, 37.807903432764398],\n            [-122.407355431147764, 37.80804887173035],\n            [-122.406644940711814, 37.807817946705647],\n            [-122.406816836689401, 37.809994826134172],\n            [-122.406786252768356, 37.810017295716854],\n            [-122.40617819806161, 37.810068327706666],\n            [-122.406151660268563, 37.810046094760864],\n            [-122.406135997898389, 37.810042914277616],\n            [-122.406123656094778, 37.810034186621294],\n            [-122.405904441804637, 37.807159674056429],\n            [-122.405322208784199, 37.806866923600786],\n            [-122.404400300125417, 37.808853394598287],\n            [-122.404390181819835, 37.80886385881621],\n            [-122.404376497046869, 37.808870260285914],\n            [-122.404359263409262, 37.808873285169796],\n            [-122.404316325011152, 37.808819040682266],\n            [-122.403937477028578, 37.80876197892308],\n            [-122.403923457745378, 37.80875533773979],\n            [-122.403912828869224, 37.808745895483341],\n            [-122.403907320429198, 37.80873362312807],\n            [-122.403906985949291, 37.808720580801918],\n            [-122.404717282916977, 37.806971462592401],\n            [-122.403955936424254, 37.806579276399596],\n            [-122.402761932327437, 37.808014567794245],\n            [-122.402746534430648, 37.808021683436984],\n            [-122.402731014070881, 37.808023993997161],\n            [-122.402715370212889, 37.808021499491424],\n            [-122.40235585639897, 37.807840510524542],\n            [-122.402346922703828, 37.807829667068134],\n            [-122.402341415289797, 37.807817394901065],\n            [-122.402339367950134, 37.807805066923208],\n            [-122.402340764477955, 37.807791996673913],\n            [-122.402345656255733, 37.807780243491045],\n            [-122.403421726415289, 37.806471156550586],\n            [-122.402804368682325, 37.806023074735968],\n            [-122.400943288973451, 37.807638041928655],\n            [-122.40092780379058, 37.807641725129315],\n            [-122.400912142497489, 37.807638543945465],\n            [-122.400398744529411, 37.807261566606726],\n            [-122.400572958659495, 37.806120993590262],\n            [-122.401732349384048, 37.805192215433102],\n            [-122.403194419486127, 37.805118563841738],\n            [-122.403587277644846, 37.805412029499024],\n            [-122.404128809815958, 37.80582849738515],\n            [-122.404696069838451, 37.806264743038192],\n            [-122.405495723806581, 37.806640585378162],\n            [-122.405545441190654, 37.806634177056651],\n            [-122.405362337774832, 37.805695301990511],\n            [-122.405357241074242, 37.805695943874476],\n            [-122.405356257037084, 37.805690948342658],\n            [-122.405173536628851, 37.804763212222298],\n            [-122.404986245080067, 37.803832670552438],\n            [-122.404798316633176, 37.802900762043983],\n            [-122.40352117840483, 37.80305477917063],\n            [-122.40315960682554, 37.803098380641011],\n            [-122.402973676735002, 37.802166749844929],\n            [-122.402973611142329, 37.802166419353441],\n            [-122.402883459886269, 37.801713453423041],\n            [-122.402789664410264, 37.801242172237629],\n            [-122.402604124590809, 37.800307129616797],\n            [-122.402603736644934, 37.800305175692849],\n            [-122.402420666593613, 37.799382141273902],\n            [-122.402228639238132, 37.798429701815799],\n            [-122.402040983242472, 37.797504944420098],\n            [-122.401906946643678, 37.796875708196644],\n            [-122.401853390100442, 37.796626165074152],\n            [-122.402402444702886, 37.796554566975963],\n            [-122.40291796673857, 37.796490379340391],\n            [-122.403496709817034, 37.796417485859841],\n            [-122.404412160626791, 37.796302098196776],\n            [-122.405142977212691, 37.796210954635839],\n            [-122.405862652252878, 37.796122174218517],\n            [-122.406224736410849, 37.796077505131322],\n            [-122.406350669109713, 37.796061968858353],\n            [-122.406652352369846, 37.796024750165536],\n            [-122.407083680819795, 37.795970583772274],\n            [-122.407319877605971, 37.795940921047873],\n            [-122.407432089697608, 37.795926828732469],\n            [-122.407563768850565, 37.795910291726024],\n            [-122.40779730388941, 37.795880962818103],\n            [-122.408253202051654, 37.795823706218044],\n            [-122.408704654154022, 37.795766841471867],\n            [-122.408743234497422, 37.795761981540487],\n            [-122.409075520379659, 37.795720125786943],\n            [-122.409077868767497, 37.795719830108119],\n            [-122.409343544204319, 37.795686363949223],\n            [-122.40954722057397, 37.795660707190791],\n            [-122.40989875147848, 37.795616424537307],\n            [-122.411081667103218, 37.795467382264249],\n            [-122.411541226025591, 37.795408552082151],\n            [-122.411541229133036, 37.795408565216896],\n            [-122.411541531721369, 37.795408526524874],\n            [-122.411893657029495, 37.795363458292385],\n            [-122.412335878555311, 37.795306857217497],\n            [-122.413187771447625, 37.795197816725128],\n            [-122.414825631965456, 37.794988155997579],\n            [-122.415005455310151, 37.795877318912275],\n            [-122.415094279286492, 37.796316514471208],\n            [-122.415172033219093, 37.796700969266084],\n            [-122.41519297245145, 37.796804503853558],\n            [-122.415290513107706, 37.797286788953464],\n            [-122.415384105347158, 37.79774954140936],\n            [-122.415384693800732, 37.797752451808172],\n            [-122.415571551794869, 37.798676329254079],\n            [-122.415572319635913, 37.798680127283284],\n            [-122.415667503417794, 37.799150732537029],\n            [-122.41576151132729, 37.799616465113374],\n            [-122.416491256558686, 37.799525268171301],\n            [-122.417385454528372, 37.799413513042644],\n            [-122.417492539304973, 37.799906258247788],\n            [-122.417586974866069, 37.800340791478632],\n            [-122.417798642975782, 37.801267347943607],\n            [-122.41787748762404, 37.801706751150704],\n            [-122.417966229723234, 37.802201308768375],\n            [-122.418151092101994, 37.803135399210959],\n            [-122.418255886912107, 37.803650215613203],\n            [-122.418215611082957, 37.803687299847837],\n            [-122.418280954876565, 37.804023161939504],\n            [-122.418341342522965, 37.804070022432718],\n            [-122.418530631419571, 37.804999043218864]\n          ]\n        ]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {OBJECTID: 8, ZIP_CODE: 94109, ID: 94109},\n      geometry: {\n        type: 'Polygon',\n        coordinates: [\n          [\n            [-122.413915879652706, 37.790463115032836],\n            [-122.412266187164306, 37.790672783986288],\n            [-122.412154318600955, 37.79012444884593],\n            [-122.412075867445836, 37.789739906579548],\n            [-122.411885657146456, 37.788807543703371],\n            [-122.413541442066688, 37.788598204045492],\n            [-122.415185269301574, 37.788387930678724],\n            [-122.414995423274036, 37.787453843784689],\n            [-122.414806647966373, 37.786519819325378],\n            [-122.414617207572036, 37.785582474657787],\n            [-122.414430198422409, 37.784657140813145],\n            [-122.414241572919337, 37.783723783021379],\n            [-122.415882538254209, 37.783515640872785],\n            [-122.417528773439201, 37.78331088958533],\n            [-122.419181703937824, 37.783101400150407],\n            [-122.420816620257895, 37.78289417046458],\n            [-122.420817002825672, 37.782894121654586],\n            [-122.422463744273344, 37.782685368786026],\n            [-122.422597534917514, 37.782659914421728],\n            [-122.424108200948226, 37.782477051425644],\n            [-122.427396397680198, 37.782056939506091],\n            [-122.427490665181679, 37.782522998381459],\n            [-122.427584325166535, 37.78298604740867],\n            [-122.427778871361184, 37.783924735360486],\n            [-122.427988927379005, 37.784953879052303],\n            [-122.428148186422831, 37.785784488173462],\n            [-122.428241496400901, 37.78624657727314],\n            [-122.428241829261111, 37.786248226022003],\n            [-122.428335613076769, 37.786712655890966],\n            [-122.428525011003728, 37.78765056176524],\n            [-122.428712111452299, 37.788577067507021],\n            [-122.428905308896674, 37.789533740830485],\n            [-122.429092268257477, 37.790459499306614],\n            [-122.429269817037863, 37.791338636935983],\n            [-122.429447192175289, 37.79221689778025],\n            [-122.429625242377327, 37.793098475947545],\n            [-122.429803981887915, 37.793977244761322],\n            [-122.429989276973558, 37.794894937362344],\n            [-122.430182832162615, 37.795853517593606],\n            [-122.428537813517494, 37.796062892623418],\n            [-122.426892728667355, 37.796272251947869],\n            [-122.425249874473522, 37.79648130315109],\n            [-122.423601877370103, 37.796690947281171],\n            [-122.423601876988513, 37.796690945913937],\n            [-122.42360129621845, 37.796691056748735],\n            [-122.423601296960271, 37.796691058659476],\n            [-122.423792964234153, 37.797616581376253],\n            [-122.423793785438747, 37.7976164776058],\n            [-122.423982396975646, 37.798552421556877],\n            [-122.423982145098208, 37.798552453684835],\n            [-122.42417056430692, 37.799484532744323],\n            [-122.42417056511286, 37.799484537126212],\n            [-122.424242907462499, 37.799842398528341],\n            [-122.424358667137113, 37.800415027771606],\n            [-122.424517597070277, 37.801201189595353],\n            [-122.424538324517613, 37.801303719934985],\n            [-122.424731635083759, 37.802281009278651],\n            [-122.424731259133807, 37.802280983275736],\n            [-122.424808684502352, 37.802662664019884],\n            [-122.424918804152185, 37.803205508171892],\n            [-122.425109521046082, 37.804145845932808],\n            [-122.425204919000421, 37.804616199985951],\n            [-122.425298563577385, 37.80507790289635],\n            [-122.425486832357592, 37.806006120121552],\n            [-122.425487611207828, 37.806009959663712],\n            [-122.425531817297653, 37.806150610629167],\n            [-122.425627533230582, 37.806456787332273],\n            [-122.4257796482039, 37.806715259689653],\n            [-122.426066893674061, 37.80699787612533],\n            [-122.426256728575282, 37.807185221316665],\n            [-122.426357658303132, 37.807388412718332],\n            [-122.426488519796493, 37.807651861239542],\n            [-122.426560904719622, 37.807943556174827],\n            [-122.426613230594512, 37.808152010516238],\n            [-122.426749407153778, 37.80832970781308],\n            [-122.426815901093192, 37.808623913624309],\n            [-122.42681099272437, 37.808701593834883],\n            [-122.426830737473963, 37.808795352699491],\n            [-122.426826276753118, 37.808823581609779],\n            [-122.426828951398363, 37.808859934107588],\n            [-122.426829913470996, 37.808897001584555],\n            [-122.426829127336148, 37.808933411171161],\n            [-122.426830071586494, 37.80896979193826],\n            [-122.426848658020631, 37.809018932542891],\n            [-122.426823913850725, 37.809066034426849],\n            [-122.426821397293551, 37.809102471733105],\n            [-122.426817149990782, 37.809138937589218],\n            [-122.426811172632014, 37.809175431983689],\n            [-122.42680517743706, 37.809211239393754],\n            [-122.426799200066583, 37.80924773378711],\n            [-122.426791474798563, 37.809283569459971],\n            [-122.426783766999961, 37.80932009184702],\n            [-122.426764854928408, 37.809391820287793],\n            [-122.426753650652387, 37.809427026340984],\n            [-122.426742463842274, 37.809462919107801],\n            [-122.42673125988388, 37.809498124878161],\n            [-122.426718325162497, 37.809533359195932],\n            [-122.426703641860442, 37.809567935625843],\n            [-122.426690707106644, 37.80960316966555],\n            [-122.426674294047132, 37.809637774073536],\n            [-122.426659593228109, 37.809671663782375],\n            [-122.426641449382515, 37.809706296733168],\n            [-122.426624999956104, 37.809739528275571],\n            [-122.426606838595305, 37.809773474231129],\n            [-122.426586928644923, 37.809806762295736],\n            [-122.426568749097328, 37.809840022090548],\n            [-122.426547090883986, 37.809872652254199],\n            [-122.426527163066623, 37.80990525387346],\n            [-122.426505504455619, 37.809937883485567],\n            [-122.426482098287991, 37.809969855187106],\n            [-122.426435249574482, 37.810032425717694],\n            [-122.426410094762232, 37.810063739239673],\n            [-122.426384921777455, 37.810094366601653],\n            [-122.426359731637717, 37.810124306962969],\n            [-122.426305889769012, 37.810184245028879],\n            [-122.426277202393095, 37.810212869038814],\n            [-122.426248533505472, 37.810242179739554],\n            [-122.426219828627396, 37.810270117569488],\n            [-122.426165541280753, 37.810312894703067],\n            [-122.426148806543424, 37.810335143220563],\n            [-122.426077517869416, 37.810389871747489],\n            [-122.426029956191201, 37.810424984999884],\n            [-122.426004427087875, 37.810441883304833],\n            [-122.425978879818175, 37.810458095175186],\n            [-122.425953351037933, 37.810474993463338],\n            [-122.425902221511379, 37.810506044020848],\n            [-122.425874926298846, 37.810521597684627],\n            [-122.425847613267436, 37.810536464907365],\n            [-122.425792951557781, 37.810564826464294],\n            [-122.425738254193391, 37.810591815126337],\n            [-122.425709157251291, 37.810604651266786],\n            [-122.425621812948378, 37.810641100340696],\n            [-122.425563512153047, 37.810662654222938],\n            [-122.425532631291532, 37.810673458992433],\n            [-122.425501732623886, 37.810683577593657],\n            [-122.425472546238581, 37.810692981507543],\n            [-122.425441630096913, 37.810702413652621],\n            [-122.425410695451745, 37.810711159366136],\n            [-122.425348791232992, 37.810727278162595],\n            [-122.425317821646317, 37.810734650696368],\n            [-122.42528512127241, 37.810742051749649],\n            [-122.425254133532235, 37.81074873811216],\n            [-122.425221397542259, 37.810754766278279],\n            [-122.425190391643511, 37.810760766194903],\n            [-122.425157620386827, 37.810765421468112],\n            [-122.425124866580816, 37.810770763172656],\n            [-122.425093807273001, 37.810774704034145],\n            [-122.425028228777975, 37.810782641379291],\n            [-122.424962578393604, 37.810787833509224],\n            [-122.424931484149809, 37.810790400897922],\n            [-122.424898623523902, 37.810791623930832],\n            [-122.424876305744775, 37.810798855419677],\n            [-122.424848476260408, 37.810793815800935],\n            [-122.424819040922628, 37.810793609459935],\n            [-122.42478787514149, 37.810793431351755],\n            [-122.424758404216234, 37.810791852400563],\n            [-122.42472891548077, 37.810789586458021],\n            [-122.424699408618324, 37.810786634628094],\n            [-122.424640324731897, 37.810777984365998],\n            [-122.424610747039267, 37.810772286768845],\n            [-122.424582881984065, 37.810765873943147],\n            [-122.42455326835632, 37.810758803192932],\n            [-122.424525367734788, 37.810751018033073],\n            [-122.424497431514737, 37.810741859447681],\n            [-122.42447122609704, 37.810732672889145],\n            [-122.424443254308628, 37.810722141695749],\n            [-122.424406843510837, 37.810719989167595],\n            [-122.424404739729965, 37.810705601989262],\n            [-122.424392430564922, 37.810698249126709],\n            [-122.424380086492334, 37.810689522832604],\n            [-122.424367724289866, 37.810680110382542],\n            [-122.424357092185232, 37.810670669703008],\n            [-122.424346425188247, 37.810659856141378],\n            [-122.424337488288586, 37.810649014350894],\n            [-122.424328533252009, 37.810637486130467],\n            [-122.424321309004071, 37.810625929670387],\n            [-122.424315797750651, 37.810613658536091],\n            [-122.424310250566421, 37.810600014537307],\n            [-122.42430472117745, 37.810587056973155],\n            [-122.4243009222361, 37.810574071450297],\n            [-122.424298835580885, 37.810560370715905],\n            [-122.424298497510776, 37.810547328452351],\n            [-122.424299872431348, 37.810533571515215],\n            [-122.424301264798501, 37.810520501018615],\n            [-122.424304387263248, 37.810507402569137],\n            [-122.424309258634793, 37.810494961760924],\n            [-122.424315860102183, 37.810482492999512],\n            [-122.424324191657433, 37.810469996010013],\n            [-122.424332559488974, 37.810458871878474],\n            [-122.42434440529064, 37.810448377725301],\n            [-122.424354539139387, 37.810438598228359],\n            [-122.424368151310617, 37.810429448977779],\n            [-122.424380050823189, 37.810421013845534],\n            [-122.424395446797789, 37.810413895387818],\n            [-122.424410860570717, 37.810407463637567],\n            [-122.424426309569299, 37.810402404211651],\n            [-122.424441794853934, 37.810398717916826],\n            [-122.42445902802703, 37.810395690099803],\n            [-122.424474548198873, 37.810393376407241],\n            [-122.424495313410532, 37.810393037578869],\n            [-122.424512653696851, 37.810394128357849],\n            [-122.424528280984248, 37.810395933262043],\n            [-122.424545674311858, 37.810399083346539],\n            [-122.424561354987802, 37.810402947551076],\n            [-122.424577071263883, 37.810408184897881],\n            [-122.424591092706251, 37.810414823624235],\n            [-122.424605131932822, 37.810422148234672],\n            [-122.424619206768625, 37.810430846262342],\n            [-122.424631551158143, 37.810439571977035],\n            [-122.424642200368709, 37.810449699078426],\n            [-122.424652868070766, 37.810460512602432],\n            [-122.424661822790284, 37.810472040804292],\n            [-122.424669047076236, 37.810483597243831],\n            [-122.424676306964855, 37.810496526827265],\n            [-122.424683904979332, 37.810522498123575],\n            [-122.424685973208497, 37.810535512153116],\n            [-122.424686685078399, 37.810562969547746],\n            [-122.424688754001352, 37.810575983565833],\n            [-122.424694265313605, 37.810588254682798],\n            [-122.424703220408176, 37.810599783150167],\n            [-122.424713852193449, 37.810609223529688],\n            [-122.424727909273159, 37.81061723483468],\n            [-122.424743643057568, 37.81062315859959],\n            [-122.424759306354005, 37.810626336886287],\n            [-122.424774915898695, 37.810627455322866],\n            [-122.424844204676688, 37.810629071443891],\n            [-122.424883986990039, 37.810627735460123],\n            [-122.424942750746894, 37.810624029768022],\n            [-122.424970402172974, 37.810622204741975],\n            [-122.424999748098813, 37.810618978876803],\n            [-122.425029112521329, 37.810616439702436],\n            [-122.42505844098109, 37.810612527107622],\n            [-122.425086039005805, 37.810608643024629],\n            [-122.425115367473737, 37.810604730964819],\n            [-122.425142947684478, 37.810600160159147],\n            [-122.425172240190349, 37.810594874946659],\n            [-122.42519980259955, 37.810589617967473],\n            [-122.425229077987609, 37.810583646294816],\n            [-122.425311658363697, 37.810563756689383],\n            [-122.425339167350202, 37.810556440647844],\n            [-122.425394149679065, 37.810540434852271],\n            [-122.425449096383744, 37.810523056436082],\n            [-122.425474821139559, 37.810513709039498],\n            [-122.42550225886724, 37.810503646946287],\n            [-122.425553673774345, 37.810483579237776],\n            [-122.425579363239436, 37.810472858943186],\n            [-122.425656378173159, 37.810438638721514],\n            [-122.425680301215294, 37.81042657379389],\n            [-122.425705937577163, 37.810413794436336],\n            [-122.425729843135883, 37.81040104278366],\n            [-122.425777618636445, 37.81037416741794],\n            [-122.425799775930017, 37.810360757570926],\n            [-122.425823645502135, 37.810346633309891],\n            [-122.425845767517558, 37.810331850853636],\n            [-122.425869619617202, 37.810317040417416],\n            [-122.425891740915375, 37.81030225768918],\n            [-122.425912114318606, 37.810286817047619],\n            [-122.425934218490383, 37.810271348139892],\n            [-122.42595457407505, 37.810255221330763],\n            [-122.425976660073871, 37.81023906598594],\n            [-122.426033069704985, 37.810211362243855],\n            [-122.426044381296308, 37.810180274872565],\n            [-122.426071409213066, 37.810154424922551],\n            [-122.426098419287058, 37.810127887982347],\n            [-122.426123698921984, 37.810101379570156],\n            [-122.42617422251692, 37.810046989859728],\n            [-122.426197736051108, 37.810019136822319],\n            [-122.426222979645814, 37.809991255524551],\n            [-122.426244745255502, 37.809962744298282],\n            [-122.426268240925296, 37.809934204811682],\n            [-122.426289987997293, 37.809905007153375],\n            [-122.426310004983833, 37.8098758380223],\n            [-122.426331734895541, 37.809845953635381],\n            [-122.426350003264446, 37.809816126056347],\n            [-122.426370002384175, 37.809786270205322],\n            [-122.42640650446053, 37.80972524214534],\n            [-122.426423024539801, 37.809694756383479],\n            [-122.426439527484902, 37.809663584173109],\n            [-122.426456011918219, 37.809631725811407],\n            [-122.426470784413283, 37.809600581586317],\n            [-122.426485538743833, 37.809568751204715],\n            [-122.426498562648177, 37.809536949086315],\n            [-122.426511568735094, 37.809504460806153],\n            [-122.426524592609866, 37.809472658409931],\n            [-122.426535868255684, 37.809440198117713],\n            [-122.426547125731901, 37.809407051395155],\n            [-122.426556671294222, 37.80937461936086],\n            [-122.42657572607385, 37.809308382431155],\n            [-122.426583523043476, 37.809275292231341],\n            [-122.426589589599459, 37.809242230297407],\n            [-122.426597386209863, 37.809209140101942],\n            [-122.426601704881108, 37.809175419993217],\n            [-122.42660775360666, 37.809141671622967],\n            [-122.426612089737361, 37.809108637953877],\n            [-122.42661985311382, 37.809007562446936],\n            [-122.426622425964752, 37.808906571727555],\n            [-122.426632418849564, 37.808824688117525],\n            [-122.426616150524296, 37.80879817156422],\n            [-122.426607002185577, 37.808712480555535],\n            [-122.426596123115345, 37.808626817267942],\n            [-122.42658353220007, 37.808541869217166],\n            [-122.426569192751245, 37.808456262451642],\n            [-122.426553140769713, 37.808371370658513],\n            [-122.426535358440475, 37.808286507127633],\n            [-122.426521448780022, 37.808150762619441],\n            [-122.42648716178519, 37.808163683754294],\n            [-122.426478316482672, 37.808089661844356],\n            [-122.426472145992449, 37.808051992713068],\n            [-122.426465992974997, 37.808015010021762],\n            [-122.42645810959354, 37.807978055869093],\n            [-122.426450244018099, 37.807941787601465],\n            [-122.426431016184523, 37.807867935277343],\n            [-122.426421420613309, 37.807831695540209],\n            [-122.426410094332368, 37.807795484071661],\n            [-122.426383981060937, 37.807723117657737],\n            [-122.426370941909852, 37.807687620888885],\n            [-122.426356154936116, 37.8076514659409],\n            [-122.42634140359948, 37.807616683860772],\n            [-122.426324904443447, 37.807581243600652],\n            [-122.426289370917274, 37.807546114229226],\n            [-122.426116990256872, 37.807640950874436],\n            [-122.426004575599805, 37.807511622087709],\n            [-122.425948221432193, 37.807541385135394],\n            [-122.426072979790121, 37.807679439549148],\n            [-122.426043902201883, 37.807692962208542],\n            [-122.425788908967789, 37.807405954455511],\n            [-122.425811101339534, 37.807393917738004],\n            [-122.425841407866244, 37.807427759425885],\n            [-122.425860156968014, 37.807416465651144],\n            [-122.425910013941177, 37.807469902573231],\n            [-122.425894653990497, 37.807478394108394],\n            [-122.425932202930852, 37.807524478297722],\n            [-122.425969647726248, 37.80749983141159],\n            [-122.425933954139211, 37.807458524016887],\n            [-122.426097611558333, 37.807361083192824],\n            [-122.42613200511353, 37.807352281054179],\n            [-122.426091315966914, 37.80731860900228],\n            [-122.4260559073373, 37.80728828460429],\n            [-122.425981701022749, 37.807230438026032],\n            [-122.425942884837923, 37.807202229419872],\n            [-122.425865288869659, 37.807147185302298],\n            [-122.425824778720127, 37.807120377771732],\n            [-122.425784286059837, 37.807094256667916],\n            [-122.425743811226624, 37.807068821710658],\n            [-122.425659436564132, 37.807019381954113],\n            [-122.425575133216185, 37.806972687328404],\n            [-122.425531269042693, 37.806950055090923],\n            [-122.425487422692115, 37.806928108997688],\n            [-122.425396304969212, 37.806885646130702],\n            [-122.425305258549756, 37.806845928659463],\n            [-122.425259770989555, 37.806827443179728],\n            [-122.425212552741186, 37.806808985385324],\n            [-122.425165353022919, 37.806791214545072],\n            [-122.425118188573762, 37.806774816287508],\n            [-122.425069293788937, 37.80675844598079],\n            [-122.4250204168317, 37.806742762363598],\n            [-122.424973288049415, 37.806727737193157],\n            [-122.42492444672159, 37.806713426132198],\n            [-122.424873892869243, 37.806699830002309],\n            [-122.424802432493848, 37.806681081528858],\n            [-122.424772802670631, 37.806673324118421],\n            [-122.424744921357572, 37.806666225439869],\n            [-122.424689194317793, 37.806653400109965],\n            [-122.424659600807814, 37.806647015805055],\n            [-122.424631755098972, 37.806641289695882],\n            [-122.42460219684277, 37.806636278252959],\n            [-122.42457436893713, 37.806631238565636],\n            [-122.424544828483292, 37.806626913543731],\n            [-122.424517018379291, 37.806622560278207],\n            [-122.424487495380134, 37.806618921682983],\n            [-122.424428486015572, 37.806613017324239],\n            [-122.424398998964037, 37.806610751846591],\n            [-122.42437124224621, 37.806608457578399],\n            [-122.424341772644766, 37.806606878527504],\n            [-122.424282870046667, 37.806605092433877],\n            [-122.424224002349433, 37.806604679467583],\n            [-122.424165170926941, 37.806605639331515],\n            [-122.424135772832813, 37.80660680569077],\n            [-122.424077012229233, 37.806610511532789],\n            [-122.424018287184794, 37.806615589667317],\n            [-122.42398895989578, 37.806619501737501],\n            [-122.423959615506732, 37.806622727353634],\n            [-122.423932018904594, 37.806626611175993],\n            [-122.423873400581527, 37.806635808400436],\n            [-122.423845839538984, 37.806641064799031],\n            [-122.423816565594137, 37.806647036132823],\n            [-122.423789022338056, 37.806652979228197],\n            [-122.423759766870432, 37.806659637246682],\n            [-122.423706445903605, 37.806672867782268],\n            [-122.423653321266002, 37.806693649347707],\n            [-122.423589920527235, 37.806718718849552],\n            [-122.423526538222887, 37.806744474741464],\n            [-122.423399843925978, 37.80679873217619],\n            [-122.423338262626473, 37.806827205494514],\n            [-122.423215171014846, 37.806886897776501],\n            [-122.423155391052063, 37.806918088524029],\n            [-122.423095628820221, 37.806949965676615],\n            [-122.423037614673063, 37.806982501019867],\n            [-122.422979636035322, 37.807016409205524],\n            [-122.422923387701616, 37.807050289149693],\n            [-122.422867174874767, 37.807085541937973],\n            [-122.422807430162962, 37.807118105379153],\n            [-122.422669617719095, 37.80721100017012],\n            [-122.422538512716017, 37.807295544473774],\n            [-122.422410922154015, 37.807382091240839],\n            [-122.422406568873129, 37.807385156047935],\n            [-122.422285114644055, 37.807470669252126],\n            [-122.422159360151895, 37.8075613064347],\n            [-122.422037101638551, 37.807653259953362],\n            [-122.421916608736879, 37.807746558017001],\n            [-122.421799629592272, 37.807841858870269],\n            [-122.42168270310637, 37.807939218918449],\n            [-122.421532057745097, 37.808071464473507],\n            [-122.421789175548739, 37.808374241220797],\n            [-122.421758561641454, 37.808395342089796],\n            [-122.421493253559859, 37.808110553294661],\n            [-122.421324496714121, 37.808278803348081],\n            [-122.421367127445279, 37.808320685807196],\n            [-122.421400626951964, 37.808344175435167],\n            [-122.421417984134223, 37.808345953110788],\n            [-122.421538848573221, 37.808467594219884],\n            [-122.421521846706554, 37.808479545548913],\n            [-122.421585810928775, 37.808543055557919],\n            [-122.421558551068415, 37.808559981099798],\n            [-122.421494604621685, 37.808497157511823],\n            [-122.421482722503114, 37.808506278522707],\n            [-122.42136546133365, 37.808390072182092],\n            [-122.421343808401488, 37.808356088677073],\n            [-122.421300875659668, 37.808302536803509],\n            [-122.421061625998746, 37.808556401980894],\n            [-122.421102646347336, 37.808803641534986],\n            [-122.421495500883367, 37.809133737012722],\n            [-122.421447795704026, 37.809163356667042],\n            [-122.422886026597482, 37.810219448665336],\n            [-122.422843690020329, 37.8102558485987],\n            [-122.42136637775458, 37.809161249445332],\n            [-122.421209585435776, 37.809189899457976],\n            [-122.421035643651535, 37.808957186122555],\n            [-122.420944163231766, 37.808967603286121],\n            [-122.420910323787112, 37.808797159929568],\n            [-122.420858358549751, 37.808795946109164],\n            [-122.420717381312784, 37.80890056409217],\n            [-122.420760227934167, 37.809084595303112],\n            [-122.420694330112809, 37.809080174685604],\n            [-122.420677247269424, 37.809022081268409],\n            [-122.420415813879998, 37.809020844655912],\n            [-122.420359979289643, 37.809003898946663],\n            [-122.420384124514499, 37.808933459866985],\n            [-122.420668674045118, 37.808958355470025],\n            [-122.420635748727079, 37.808756307812423],\n            [-122.420540860637956, 37.808768840609403],\n            [-122.420461300526242, 37.808303163202581],\n            [-122.419223966222532, 37.808453096037454],\n            [-122.419086067910683, 37.807803117635643],\n            [-122.418908043871269, 37.806863030947284],\n            [-122.418856183917853, 37.806607498073362],\n            [-122.418781854642702, 37.806241248585302],\n            [-122.418781807492508, 37.806241018338142],\n            [-122.418718265666911, 37.805931520041717],\n            [-122.418530631419571, 37.804999043218864],\n            [-122.418341342522965, 37.804070022432718],\n            [-122.418280954876565, 37.804023161939504],\n            [-122.418215611082957, 37.803687299847837],\n            [-122.418255886912107, 37.803650215613203],\n            [-122.418151092101994, 37.803135399210959],\n            [-122.417966229723234, 37.802201308768375],\n            [-122.41787748762404, 37.801706751150704],\n            [-122.417798642975782, 37.801267347943607],\n            [-122.417586974866069, 37.800340791478632],\n            [-122.417492539304973, 37.799906258247788],\n            [-122.417385454528372, 37.799413513042644],\n            [-122.416491256558686, 37.799525268171301],\n            [-122.41576151132729, 37.799616465113374],\n            [-122.415667503417794, 37.799150732537029],\n            [-122.415572319635913, 37.798680127283284],\n            [-122.415571551794869, 37.798676329254079],\n            [-122.415384693800732, 37.797752451808172],\n            [-122.415384105347158, 37.79774954140936],\n            [-122.415290513107706, 37.797286788953464],\n            [-122.41519297245145, 37.796804503853558],\n            [-122.415172033219093, 37.796700969266084],\n            [-122.415094279286492, 37.796316514471208],\n            [-122.415005455310151, 37.795877318912275],\n            [-122.414825631965456, 37.794988155997579],\n            [-122.414647632176155, 37.794109807074861],\n            [-122.414470074462415, 37.79322314646798],\n            [-122.414381908270244, 37.792784070108439],\n            [-122.414293264567746, 37.792342610236801],\n            [-122.414107303557273, 37.79141647884336],\n            [-122.413915879652706, 37.790463115032836]\n          ]\n        ]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {OBJECTID: 9, ZIP_CODE: 94111, ID: 94111},\n      geometry: {\n        type: 'Polygon',\n        coordinates: [\n          [\n            [-122.400058259594957, 37.793693587424592],\n            [-122.400148778887171, 37.794134234665414],\n            [-122.400149325778898, 37.794134165695652],\n            [-122.401314504615144, 37.793987063215781],\n            [-122.402133431503088, 37.793883778773662],\n            [-122.40215951272063, 37.793880489466119],\n            [-122.402957360909014, 37.793779857671261],\n            [-122.40308689535884, 37.793763518993806],\n            [-122.404016114128936, 37.793646309359175],\n            [-122.404370134182003, 37.793598168205968],\n            [-122.404613421373455, 37.793565084338127],\n            [-122.404710582177955, 37.794021380197684],\n            [-122.404796472837063, 37.794453004909116],\n            [-122.404875610619072, 37.794859533373135],\n            [-122.404957208224928, 37.795326691921687],\n            [-122.405142977212691, 37.796210954635839],\n            [-122.404412160626791, 37.796302098196776],\n            [-122.403496709817034, 37.796417485859841],\n            [-122.40291796673857, 37.796490379340391],\n            [-122.402402444702886, 37.796554566975963],\n            [-122.401853390100442, 37.796626165074152],\n            [-122.401906946643678, 37.796875708196644],\n            [-122.402040983242472, 37.797504944420098],\n            [-122.402228639238132, 37.798429701815799],\n            [-122.402420666593613, 37.799382141273902],\n            [-122.402603736644934, 37.800305175692849],\n            [-122.402604124590809, 37.800307129616797],\n            [-122.402789664410264, 37.801242172237629],\n            [-122.402883459886269, 37.801713453423041],\n            [-122.402973611142329, 37.802166419353441],\n            [-122.402973676735002, 37.802166749844929],\n            [-122.40315960682554, 37.803098380641011],\n            [-122.40352117840483, 37.80305477917063],\n            [-122.404798316633176, 37.802900762043983],\n            [-122.404986245080067, 37.803832670552438],\n            [-122.405173536628851, 37.804763212222298],\n            [-122.405356257037084, 37.805690948342658],\n            [-122.405357241074242, 37.805695943874476],\n            [-122.405362337774832, 37.805695301990511],\n            [-122.405545441190654, 37.806634177056651],\n            [-122.405495723806581, 37.806640585378162],\n            [-122.404696069838451, 37.806264743038192],\n            [-122.404128809815958, 37.80582849738515],\n            [-122.403587277644846, 37.805412029499024],\n            [-122.403194419486127, 37.805118563841738],\n            [-122.401732349384048, 37.805192215433102],\n            [-122.400572958659495, 37.806120993590262],\n            [-122.400963593501643, 37.803563391134098],\n            [-122.400842454396695, 37.803429372376385],\n            [-122.400479886428016, 37.803466118528789],\n            [-122.398551197769294, 37.804602806142064],\n            [-122.398535712754665, 37.804606489036345],\n            [-122.398520052204233, 37.804603307533085],\n            [-122.398559631153262, 37.804526444219782],\n            [-122.398227927335071, 37.804281130126874],\n            [-122.398222420518948, 37.804268857764917],\n            [-122.398225564864617, 37.80425644615601],\n            [-122.399971727587683, 37.803225025895152],\n            [-122.399602741790233, 37.802807948916175],\n            [-122.397824683987196, 37.803810348092696],\n            [-122.397809199101829, 37.803814030892141],\n            [-122.397793538749667, 37.803810849291956],\n            [-122.397517150597622, 37.803494597437428],\n            [-122.397511661501127, 37.80348301148031],\n            [-122.3975148062854, 37.803470600157546],\n            [-122.399615259663278, 37.802282404799911],\n            [-122.39972332623249, 37.802176282179168],\n            [-122.399409670069147, 37.801824238674413],\n            [-122.399371692841143, 37.801828283680663],\n            [-122.399347556878283, 37.801832106025373],\n            [-122.399325151849467, 37.801835900487347],\n            [-122.399302764032285, 37.801840381390434],\n            [-122.39928039377223, 37.801845548729034],\n            [-122.399258040722614, 37.801851402508781],\n            [-122.399235705920944, 37.801857942712921],\n            [-122.399215101014406, 37.801864455053376],\n            [-122.399192800984025, 37.8018723684091],\n            [-122.399172231180287, 37.801880253347079],\n            [-122.399151696503523, 37.801889511710215],\n            [-122.397115576147101, 37.803021039584841],\n            [-122.397100091038084, 37.803024722022734],\n            [-122.397084431235825, 37.80302154059693],\n            [-122.396146888856933, 37.801962584949095],\n            [-122.396143112804936, 37.801950284664713],\n            [-122.396146275276891, 37.801938559540567],\n            [-122.396156183429241, 37.801919858733392],\n            [-122.398383194135846, 37.80067265166084],\n            [-122.398279805658603, 37.800555512940733],\n            [-122.397989357773142, 37.800230561089471],\n            [-122.395767421385884, 37.801472872307706],\n            [-122.395751936546873, 37.801476555118818],\n            [-122.395736277114864, 37.801473372963947],\n            [-122.395444597217249, 37.801167663046662],\n            [-122.395439108270097, 37.801156076993678],\n            [-122.395442253641278, 37.801143665440662],\n            [-122.397525741108808, 37.799970200398498],\n            [-122.397542727338319, 37.799957565794791],\n            [-122.397573204312565, 37.79993098020509],\n            [-122.397588407347527, 37.799916314120374],\n            [-122.397601862985724, 37.799900989703779],\n            [-122.397613588764841, 37.799885693121588],\n            [-122.397625296656045, 37.799869710378033],\n            [-122.397635256446222, 37.799853068765884],\n            [-122.397583045956239, 37.799774248814408],\n            [-122.397381692278955, 37.799548810060863],\n            [-122.397362923291766, 37.799559412884541],\n            [-122.397350478314067, 37.799546565387622],\n            [-122.39725607725606, 37.79944232919879],\n            [-122.396973022275191, 37.799609635784066],\n            [-122.396895724416169, 37.799632854304804],\n            [-122.396944532454214, 37.799578505110418],\n            [-122.39725156444139, 37.799401198172731],\n            [-122.397069823583166, 37.79919810547964],\n            [-122.39674205306757, 37.798834607866056],\n            [-122.396702784737215, 37.798855840868825],\n            [-122.396669034992286, 37.798822047566397],\n            [-122.396624664146429, 37.798846796498019],\n            [-122.396609180236553, 37.798850479143326],\n            [-122.396595251158345, 37.798847269554258],\n            [-122.396579311359616, 37.798833104740751],\n            [-122.395709347701867, 37.79933397933474],\n            [-122.395681634538477, 37.799401037179429],\n            [-122.395581007954107, 37.799459652414193],\n            [-122.395491073098484, 37.799462471471649],\n            [-122.39520444855259, 37.799625711063314],\n            [-122.394470973718072, 37.800049529845779],\n            [-122.394485183177821, 37.80006372301127],\n            [-122.394463863656298, 37.80011007561265],\n            [-122.394495883468409, 37.800143897322769],\n            [-122.394436254505337, 37.800181251519263],\n            [-122.394338714865782, 37.800157409688907],\n            [-122.39425176311174, 37.800073652886503],\n            [-122.394244541007424, 37.799994109133792],\n            [-122.39430588261277, 37.79995604107372],\n            [-122.39433954456824, 37.799986402561352],\n            [-122.394405256913004, 37.79998397351315],\n            [-122.394419466347642, 37.799998166686734],\n            [-122.395383240540369, 37.799442229567333],\n            [-122.3954446687179, 37.79940759283992],\n            [-122.395460481077649, 37.799348967284097],\n            [-122.395564480002861, 37.799286864055659],\n            [-122.395650954616428, 37.799284100562168],\n            [-122.396137291028239, 37.799011206820815],\n            [-122.39652596834469, 37.798777651667436],\n            [-122.396513506102295, 37.798764117365188],\n            [-122.396508017858096, 37.798752531345663],\n            [-122.396511162609784, 37.798740120038758],\n            [-122.396521298172757, 37.798730342643047],\n            [-122.396562296308161, 37.798709081605075],\n            [-122.396530276519627, 37.798675260441449],\n            [-122.396574647301449, 37.798650511819105],\n            [-122.396522999163949, 37.798593657491452],\n            [-122.396499841034597, 37.79856793447253],\n            [-122.396467423337157, 37.798586310883579],\n            [-122.396357190239343, 37.798472027219738],\n            [-122.396393032843889, 37.798452222590186],\n            [-122.395860656588496, 37.797870888391557],\n            [-122.395839947322898, 37.79787328122778],\n            [-122.395814065475506, 37.797876444215788],\n            [-122.395788200806479, 37.797880293644518],\n            [-122.395762353661098, 37.797884829508355],\n            [-122.395738254199486, 37.7978900242679],\n            [-122.395712442099452, 37.797895933002444],\n            [-122.395664348290325, 37.797910440317423],\n            [-122.395640318568425, 37.797918380825799],\n            [-122.395616307044421, 37.797927007209815],\n            [-122.39557006603053, 37.797946292034375],\n            [-122.395547836878862, 37.797956950195463],\n            [-122.395525625244971, 37.797968294793179],\n            [-122.395505143760289, 37.797979611576075],\n            [-122.393842000273821, 37.798938215357374],\n            [-122.393826533722603, 37.798942584352829],\n            [-122.39381087421539, 37.798939401951962],\n            [-122.393557994085199, 37.798661220282753],\n            [-122.393552505963697, 37.798649634131031],\n            [-122.393557381363038, 37.798637194571512],\n            [-122.395454327884067, 37.797548480176857],\n            [-122.395493853667872, 37.797469558194479],\n            [-122.395422650268614, 37.797392416327632],\n            [-122.395305000587612, 37.797394307309993],\n            [-122.395131013605095, 37.797494618186263],\n            [-122.394995545751499, 37.797340909474201],\n            [-122.395176347980751, 37.797236368651362],\n            [-122.395203657816268, 37.797153523030403],\n            [-122.395175134630833, 37.797121018758673],\n            [-122.395015962104765, 37.797123576784635],\n            [-122.394842063300572, 37.797227319439131],\n            [-122.394877471902745, 37.797258339703205],\n            [-122.393211663425149, 37.798247880172283],\n            [-122.393197909634068, 37.798251534593128],\n            [-122.393182250998592, 37.798248352371843],\n            [-122.392924377254829, 37.797977803222231],\n            [-122.392918871782612, 37.79796553059834],\n            [-122.392922034593937, 37.797953805551998],\n            [-122.392933760337485, 37.797938509440698],\n            [-122.393022573378389, 37.797891760094423],\n            [-122.393418332763261, 37.797664281733844],\n            [-122.39349443929828, 37.797594387482981],\n            [-122.393614723501102, 37.797492194551531],\n            [-122.39379620770903, 37.797346441866999],\n            [-122.393858891962495, 37.797293244534764],\n            [-122.39453577454303, 37.796890939592352],\n            [-122.394518070397197, 37.796875429409333],\n            [-122.394797677744066, 37.796708870398604],\n            [-122.394681926486655, 37.796581626428896],\n            [-122.394272580881463, 37.796818941592662],\n            [-122.39351702175675, 37.797258217667746],\n            [-122.39355080472113, 37.797293385033349],\n            [-122.39316857384685, 37.797508285701419],\n            [-122.393092042374221, 37.797425733952373],\n            [-122.393468994757654, 37.797207484670842],\n            [-122.393490421626595, 37.797233236341413],\n            [-122.39412658804784, 37.796863176781166],\n            [-122.393932453058198, 37.796648603921177],\n            [-122.393850369991199, 37.796687691964301],\n            [-122.393741908884792, 37.796574751186853],\n            [-122.393880385256736, 37.796507288896663],\n            [-122.393597295890373, 37.796198002709581],\n            [-122.393523863725633, 37.796236951615114],\n            [-122.393397437145097, 37.796098203833878],\n            [-122.393481197043371, 37.796057028727645],\n            [-122.393264277786542, 37.795831146645604],\n            [-122.39319930347132, 37.795862405337601],\n            [-122.393014017140644, 37.7956552428926],\n            [-122.39305487457618, 37.795628491529783],\n            [-122.392997761288825, 37.795560736430133],\n            [-122.392816418294032, 37.795643993697439],\n            [-122.391589731865537, 37.796205501614423],\n            [-122.391196361068637, 37.795779176166889],\n            [-122.39241116638668, 37.794819563891082],\n            [-122.39226709396803, 37.794667363398794],\n            [-122.391941265746169, 37.794853886332461],\n            [-122.391649609982679, 37.794547480215279],\n            [-122.391828732520565, 37.794445031825084],\n            [-122.391802064349278, 37.794417304057546],\n            [-122.391945361729881, 37.794335345459139],\n            [-122.391890260341384, 37.794278544568918],\n            [-122.392507683750154, 37.79377708635252],\n            [-122.39249932896719, 37.793768814133983],\n            [-122.392702063215523, 37.793608792659974],\n            [-122.39270797067924, 37.793614415765255],\n            [-122.394150899798674, 37.794987788593353],\n            [-122.394745701490038, 37.794478274267938],\n            [-122.394745733667804, 37.794478246556643],\n            [-122.394747579547172, 37.794479718347191],\n            [-122.394971722038662, 37.794300351169447],\n            [-122.395317307728533, 37.794023797689903],\n            [-122.39533276386878, 37.794011429145591],\n            [-122.395622922555773, 37.793779228585429],\n            [-122.395983670970253, 37.793501461560965],\n            [-122.396302004290646, 37.793256350429786],\n            [-122.396302004629632, 37.793256350149633],\n            [-122.396376076969489, 37.793198086984006],\n            [-122.396504486670068, 37.793097082520163],\n            [-122.39738344591872, 37.792405521295422],\n            [-122.397840810091907, 37.792047595331439],\n            [-122.39826444614279, 37.791716060417308],\n            [-122.398264448861653, 37.791716058450703],\n            [-122.399148598683425, 37.79101664916432],\n            [-122.39914859901539, 37.791016648609592],\n            [-122.399148705293825, 37.791016743863253],\n            [-122.399148704954868, 37.791016744143391],\n            [-122.399494165511513, 37.791324916192721],\n            [-122.399572029409299, 37.791326533708947],\n            [-122.399763353084495, 37.792257948007119],\n            [-122.399958735737897, 37.793209101900771],\n            [-122.400058259594957, 37.793693587424592]\n          ]\n        ]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {OBJECTID: 10, ZIP_CODE: 94104, ID: 94104},\n      geometry: {\n        type: 'Polygon',\n        coordinates: [\n          [\n            [-122.400067228055164, 37.790303858609981],\n            [-122.401375490979433, 37.789264321921429],\n            [-122.4018939793784, 37.788856309111516],\n            [-122.402065730098272, 37.788721152097366],\n            [-122.401960433993054, 37.788922171387867],\n            [-122.401997470431979, 37.789102650051042],\n            [-122.402189645264357, 37.790039096806382],\n            [-122.402532679537515, 37.789995540560724],\n            [-122.40273920526738, 37.789969317269424],\n            [-122.403841563913829, 37.789829338872408],\n            [-122.403934377264903, 37.790286026286218],\n            [-122.404030724679231, 37.790760095776051],\n            [-122.404219835191427, 37.791690583910508],\n            [-122.40441842761642, 37.79263865633952],\n            [-122.404613389070732, 37.793564931583006],\n            [-122.404613421373455, 37.793565084338127],\n            [-122.404370134182003, 37.793598168205968],\n            [-122.404016114128936, 37.793646309359175],\n            [-122.40308689535884, 37.793763518993806],\n            [-122.402957360909014, 37.793779857671261],\n            [-122.40215951272063, 37.793880489466119],\n            [-122.402133431503088, 37.793883778773662],\n            [-122.401314504615144, 37.793987063215781],\n            [-122.400149325778898, 37.794134165695652],\n            [-122.400148778887171, 37.794134234665414],\n            [-122.400058259594957, 37.793693587424592],\n            [-122.399958735737897, 37.793209101900771],\n            [-122.399763353084495, 37.792257948007119],\n            [-122.399572029409299, 37.791326533708947],\n            [-122.399494165511513, 37.791324916192721],\n            [-122.399148704954868, 37.791016744143391],\n            [-122.399148705293825, 37.791016743863253],\n            [-122.39914859901539, 37.791016648609592],\n            [-122.399222136170906, 37.790956214990921],\n            [-122.399480001759599, 37.790744297277485],\n            [-122.399919790020746, 37.790414442896498],\n            [-122.400024135710936, 37.790336179680637],\n            [-122.400067228055164, 37.790303858609981]\n          ]\n        ]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {OBJECTID: 11, ZIP_CODE: 94108, ID: 94108},\n      geometry: {\n        type: 'Polygon',\n        coordinates: [\n          [\n            [-122.404219835191427, 37.791690583910508],\n            [-122.404030724679231, 37.790760095776051],\n            [-122.403934377264903, 37.790286026286218],\n            [-122.403841563913829, 37.789829338872408],\n            [-122.40273920526738, 37.789969317269424],\n            [-122.402532679537515, 37.789995540560724],\n            [-122.402189645264357, 37.790039096806382],\n            [-122.401997470431979, 37.789102650051042],\n            [-122.401960433993054, 37.788922171387867],\n            [-122.402065730098272, 37.788721152097366],\n            [-122.402404665507532, 37.788463925757384],\n            [-122.402903089488873, 37.788085654318181],\n            [-122.40290309900054, 37.788085647297414],\n            [-122.403239953883428, 37.787802352067843],\n            [-122.403430800369534, 37.787641848645734],\n            [-122.403925775648347, 37.787250481113581],\n            [-122.404583316787637, 37.786730565897571],\n            [-122.404583317133643, 37.786730565891986],\n            [-122.404583317818549, 37.786730565606241],\n            [-122.4045836593057, 37.786730668317922],\n            [-122.404583659644615, 37.786730668037741],\n            [-122.404849901045083, 37.78680995410096],\n            [-122.405346079234604, 37.786747618574395],\n            [-122.40639887788349, 37.786615347203238],\n            [-122.408036236552462, 37.786409613336666],\n            [-122.408226725993813, 37.78735926231473],\n            [-122.408401550373739, 37.788293193957799],\n            [-122.408595045382015, 37.789225614946417],\n            [-122.408595692092703, 37.789225606675593],\n            [-122.410242438640608, 37.789016337723744],\n            [-122.411885657146456, 37.788807543703371],\n            [-122.412075867445836, 37.789739906579548],\n            [-122.412154318600955, 37.79012444884593],\n            [-122.412266187164306, 37.790672783986288],\n            [-122.413915879652706, 37.790463115032836],\n            [-122.414107303557273, 37.79141647884336],\n            [-122.414293264567746, 37.792342610236801],\n            [-122.414381908270244, 37.792784070108439],\n            [-122.414470074462415, 37.79322314646798],\n            [-122.414647632176155, 37.794109807074861],\n            [-122.414825631965456, 37.794988155997579],\n            [-122.413187771447625, 37.795197816725128],\n            [-122.412335878555311, 37.795306857217497],\n            [-122.411893657029495, 37.795363458292385],\n            [-122.411541531721369, 37.795408526524874],\n            [-122.411081667103218, 37.795467382264249],\n            [-122.40989875147848, 37.795616424537307],\n            [-122.40954722057397, 37.795660707190791],\n            [-122.409343544204319, 37.795686363949223],\n            [-122.409077868767497, 37.795719830108119],\n            [-122.409075520379659, 37.795720125786943],\n            [-122.408743234497422, 37.795761981540487],\n            [-122.408704654154022, 37.795766841471867],\n            [-122.408253202051654, 37.795823706218044],\n            [-122.40779730388941, 37.795880962818103],\n            [-122.407563768850565, 37.795910291726024],\n            [-122.407432089697608, 37.795926828732469],\n            [-122.407319877605971, 37.795940921047873],\n            [-122.407083680819795, 37.795970583772274],\n            [-122.406652352369846, 37.796024750165536],\n            [-122.406350669109713, 37.796061968858353],\n            [-122.406224736410849, 37.796077505131322],\n            [-122.405862652252878, 37.796122174218517],\n            [-122.405142977212691, 37.796210954635839],\n            [-122.404957208224928, 37.795326691921687],\n            [-122.404875610619072, 37.794859533373135],\n            [-122.404796472837063, 37.794453004909116],\n            [-122.404710582177955, 37.794021380197684],\n            [-122.404613421373455, 37.793565084338127],\n            [-122.404613389070732, 37.793564931583006],\n            [-122.40441842761642, 37.79263865633952],\n            [-122.404219835191427, 37.791690583910508]\n          ]\n        ]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {OBJECTID: 12, ZIP_CODE: 94103, ID: 94103},\n      geometry: {\n        type: 'Polygon',\n        coordinates: [\n          [\n            [-122.403877699904385, 37.770062866265505],\n            [-122.403615112128733, 37.769893190404822],\n            [-122.403406518421917, 37.769807099957397],\n            [-122.403037758616776, 37.769828657390953],\n            [-122.402926809989424, 37.76864812762463],\n            [-122.401962350744, 37.768706209224241],\n            [-122.401842503677628, 37.76743077711658],\n            [-122.400877239583821, 37.76748837440357],\n            [-122.400680751363893, 37.767503407870436],\n            [-122.4004285874814, 37.76730030349627],\n            [-122.399677637243116, 37.766695444602661],\n            [-122.39980174760619, 37.766587745781216],\n            [-122.399760960198876, 37.766250252443854],\n            [-122.40075504647362, 37.766190486570189],\n            [-122.401720515816834, 37.766132520250999],\n            [-122.401604204317508, 37.764894634517518],\n            [-122.401598999326723, 37.764839236400867],\n            [-122.402563396844656, 37.764781034314389],\n            [-122.403527034519726, 37.764722870371436],\n            [-122.404496977488066, 37.764664317561468],\n            [-122.404841911264157, 37.764643492872132],\n            [-122.405089602982216, 37.764628538373131],\n            [-122.405089603673972, 37.764628538361961],\n            [-122.405463420216606, 37.764605967981389],\n            [-122.406005237363416, 37.764573252226405],\n            [-122.406429152848446, 37.764547653527842],\n            [-122.406429154577822, 37.764547653499882],\n            [-122.406859230067056, 37.764521681123377],\n            [-122.407419737953433, 37.764487829924626],\n            [-122.407534229395537, 37.765783299286987],\n            [-122.408544242939584, 37.765722599679115],\n            [-122.410486689274492, 37.765605838622655],\n            [-122.411455262151748, 37.765547605227276],\n            [-122.412416426589019, 37.765489809283601],\n            [-122.413105243007919, 37.765447608576679],\n            [-122.415308388038014, 37.765314639624691],\n            [-122.416387522888556, 37.765249494040667],\n            [-122.41748659577631, 37.765183134636899],\n            [-122.418579138459435, 37.765117159398407],\n            [-122.418698425401715, 37.765109955145007],\n            [-122.419668972681833, 37.765051337054757],\n            [-122.420482492120144, 37.765002197009743],\n            [-122.420580607922048, 37.764996270018614],\n            [-122.420901270224292, 37.764976898858535],\n            [-122.421239593012103, 37.764956459387825],\n            [-122.421381475659516, 37.764947887797014],\n            [-122.421886445840627, 37.764917378530825],\n            [-122.42285341443899, 37.764858950163855],\n            [-122.423112421134832, 37.764843298770074],\n            [-122.424102683503691, 37.764783452170008],\n            [-122.424574375550648, 37.764754942537614],\n            [-122.426381062356072, 37.764645726997848],\n            [-122.426381062758907, 37.764645729188807],\n            [-122.426381708477521, 37.764645690891633],\n            [-122.426490697526233, 37.765773605772118],\n            [-122.426518991136163, 37.766066400051031],\n            [-122.426538465047457, 37.766267922745747],\n            [-122.426572006355102, 37.766615035704866],\n            [-122.426615944414863, 37.767069730096857],\n            [-122.426693183296933, 37.76786901846797],\n            [-122.426693183304053, 37.767869018742559],\n            [-122.426902347012131, 37.769049368265463],\n            [-122.426309438735913, 37.769602597220121],\n            [-122.424852598682307, 37.770747745074537],\n            [-122.423971653706317, 37.771401668385572],\n            [-122.423707555870649, 37.771638138620823],\n            [-122.42361952356508, 37.771716961429995],\n            [-122.423479344850293, 37.771827141530693],\n            [-122.423258913662679, 37.772000399157754],\n            [-122.422619690282815, 37.772502817311128],\n            [-122.422169936976104, 37.77285593639396],\n            [-122.421941247178026, 37.773036050819961],\n            [-122.421284370393934, 37.77356039048216],\n            [-122.421008229272687, 37.773780811646674],\n            [-122.420910608715644, 37.773852419132908],\n            [-122.420699239041511, 37.774007568561714],\n            [-122.420698854806645, 37.774007872313192],\n            [-122.42069877383058, 37.774007805509001],\n            [-122.420254278900828, 37.774358674888319],\n            [-122.420254205644639, 37.774358732668077],\n            [-122.419544527888206, 37.774918988504218],\n            [-122.419256088091217, 37.775146694295351],\n            [-122.419256086565611, 37.775146688826375],\n            [-122.419255604623004, 37.775147068879761],\n            [-122.419255606501622, 37.775147074617692],\n            [-122.419255600381447, 37.775147078837719],\n            [-122.418683590110874, 37.775586568849455],\n            [-122.417757669457401, 37.776334062520824],\n            [-122.417501462863584, 37.776540893581355],\n            [-122.416757677810395, 37.777126789723972],\n            [-122.416291701725271, 37.777493842582118],\n            [-122.416291701393504, 37.777493843136881],\n            [-122.416024573316548, 37.777713893977598],\n            [-122.415925978170975, 37.777795112873314],\n            [-122.414741221622947, 37.778719429321896],\n            [-122.412512255967954, 37.78047851222005],\n            [-122.412243715889375, 37.780689421480552],\n            [-122.411972359306191, 37.780902540886757],\n            [-122.411972358960256, 37.78090254089237],\n            [-122.411625130786987, 37.781189627190479],\n            [-122.410716598656492, 37.781899054565059],\n            [-122.410292026384454, 37.782230575136197],\n            [-122.40895215871069, 37.783287852576514],\n            [-122.408597310055299, 37.783569788681966],\n            [-122.408066548174432, 37.783991486066526],\n            [-122.408066547510714, 37.783991487176031],\n            [-122.407625723544982, 37.784337071806426],\n            [-122.406821367207598, 37.78496763543707],\n            [-122.405831011063668, 37.78574398921409],\n            [-122.405371564397683, 37.786107287119592],\n            [-122.404583317818549, 37.786730565606241],\n            [-122.404583317133643, 37.786730565891986],\n            [-122.404583316787637, 37.786730565897571],\n            [-122.403925775648347, 37.787250481113581],\n            [-122.403430800369534, 37.787641848645734],\n            [-122.403342641535644, 37.787274627660381],\n            [-122.403028734856406, 37.78702485040828],\n            [-122.403028193190352, 37.787024418822838],\n            [-122.402575227394536, 37.786678208153539],\n            [-122.402025419766176, 37.786248152290575],\n            [-122.401489835489045, 37.785829214187501],\n            [-122.401480059865179, 37.785821567351917],\n            [-122.400998469557948, 37.785444857061968],\n            [-122.400994549885382, 37.785441790992316],\n            [-122.400468483886854, 37.785030285141588],\n            [-122.399369533643153, 37.785899247741973],\n            [-122.397811613142864, 37.784666586003652],\n            [-122.398930331092998, 37.783784933304034],\n            [-122.399891477967842, 37.783025880124256],\n            [-122.400019020063766, 37.782925153640136],\n            [-122.400374366843309, 37.782644515545172],\n            [-122.401159718585049, 37.782024266952142],\n            [-122.403387209275081, 37.78026497235011],\n            [-122.404431250807633, 37.779440334605447],\n            [-122.405615266425855, 37.778505104539292],\n            [-122.405068508898097, 37.778068981419388],\n            [-122.404605505853894, 37.777699659794813],\n            [-122.404070256642925, 37.777272702482797],\n            [-122.403673439982725, 37.776956165214415],\n            [-122.403505778866929, 37.776822422431877],\n            [-122.40337073826143, 37.776714700215486],\n            [-122.402524096584528, 37.776039321403807],\n            [-122.400981567656032, 37.774808775969753],\n            [-122.400592319049849, 37.774498244536282],\n            [-122.400212340771517, 37.774195105423317],\n            [-122.400212340411557, 37.77419510487973],\n            [-122.399433130909728, 37.773573455617395],\n            [-122.401656680421155, 37.7718171255028],\n            [-122.403877699904385, 37.770062866265505]\n          ]\n        ]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {OBJECTID: 13, ZIP_CODE: 94115, ID: 94115},\n      geometry: {\n        type: 'Polygon',\n        coordinates: [\n          [\n            [-122.447679208068394, 37.79170289872647],\n            [-122.44720637942703, 37.791763091830468],\n            [-122.446299547924625, 37.791878529215651],\n            [-122.446299573716246, 37.791878694429421],\n            [-122.446446033268856, 37.792810866507708],\n            [-122.446446456540414, 37.792813716046261],\n            [-122.446587034424141, 37.793765298555968],\n            [-122.445035345747925, 37.79396273368863],\n            [-122.443384198876302, 37.794172877898092],\n            [-122.441712771485612, 37.794385578392699],\n            [-122.440870170501768, 37.794492795601883],\n            [-122.440868123190498, 37.794493055920753],\n            [-122.440045216960385, 37.794597761146619],\n            [-122.438402484723895, 37.794806973138577],\n            [-122.436760975027326, 37.795016021968365],\n            [-122.435113289920963, 37.795225833115033],\n            [-122.433469062960725, 37.795435179810816],\n            [-122.431827832563371, 37.79564412085616],\n            [-122.430182832162615, 37.795853517593606],\n            [-122.429989276973558, 37.794894937362344],\n            [-122.429803981887915, 37.793977244761322],\n            [-122.429625242377327, 37.793098475947545],\n            [-122.429447192175289, 37.79221689778025],\n            [-122.429269817037863, 37.791338636935983],\n            [-122.429092268257477, 37.790459499306614],\n            [-122.428905308896674, 37.789533740830485],\n            [-122.428712111452299, 37.788577067507021],\n            [-122.428525011003728, 37.78765056176524],\n            [-122.428335613076769, 37.786712655890966],\n            [-122.428241829261111, 37.786248226022003],\n            [-122.428241496400901, 37.78624657727314],\n            [-122.428148186422831, 37.785784488173462],\n            [-122.427988927379005, 37.784953879052303],\n            [-122.427778871361184, 37.783924735360486],\n            [-122.427584325166535, 37.78298604740867],\n            [-122.427490665181679, 37.782522998381459],\n            [-122.427396397680198, 37.782056939506091],\n            [-122.42720275579525, 37.781117127328834],\n            [-122.427016756808811, 37.780193030481158],\n            [-122.42868554474839, 37.779980201690215],\n            [-122.430233236584385, 37.779782794230314],\n            [-122.431951802315041, 37.779564148987781],\n            [-122.433595938040227, 37.779354585436536],\n            [-122.435241012398947, 37.779144878458894],\n            [-122.436884629197735, 37.778937753600381],\n            [-122.437707163233824, 37.778832380147421],\n            [-122.43855227772093, 37.778724107938281],\n            [-122.440213334218711, 37.778511463388014],\n            [-122.441865640580161, 37.778299553615973],\n            [-122.441865640558632, 37.778299552792262],\n            [-122.441865967212379, 37.778299511152262],\n            [-122.441865967226732, 37.778299511701405],\n            [-122.443506919728407, 37.778089213415292],\n            [-122.445155752336433, 37.777886506805444],\n            [-122.446846469920573, 37.777669108909684],\n            [-122.447039806751391, 37.778622307248391],\n            [-122.447351927163439, 37.780152061280916],\n            [-122.447517982733274, 37.781069510753063],\n            [-122.447576361567485, 37.781175778551805],\n            [-122.447655108274333, 37.781537309189886],\n            [-122.447637300982407, 37.781719177617617],\n            [-122.447450898997985, 37.782195217632704],\n            [-122.447301513844337, 37.78239164221629],\n            [-122.447283893261542, 37.782434393634787],\n            [-122.447225622636566, 37.782575775503396],\n            [-122.447173033991248, 37.782710075581413],\n            [-122.447149436147441, 37.783030677550911],\n            [-122.447549635601661, 37.784906798974511],\n            [-122.447578549915917, 37.784998355250835],\n            [-122.447620107068687, 37.785083635258417],\n            [-122.447621599012791, 37.785194684567394],\n            [-122.447605133356163, 37.785275579171099],\n            [-122.447533801639068, 37.785411415165207],\n            [-122.446849274413296, 37.786186897081585],\n            [-122.446738337622591, 37.786243163870765],\n            [-122.446610465639836, 37.786302298311156],\n            [-122.446792779960703, 37.787261853518181],\n            [-122.4469741664482, 37.788186460801001],\n            [-122.448656220796209, 37.787977164570449],\n            [-122.448835781299294, 37.788856511426609],\n            [-122.449011564525605, 37.789726786022129],\n            [-122.449189583391288, 37.790608108274284],\n            [-122.449367313308201, 37.791487980191171],\n            [-122.447679208068394, 37.79170289872647]\n          ]\n        ]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {OBJECTID: 14, name: '16th St. Mission (16TH)'},\n      geometry: {type: 'Point', coordinates: [-122.419694, 37.765062]}\n    },\n    {\n      type: 'Feature',\n      properties: {OBJECTID: 15, name: '19th St. Oakland (19TH)'},\n      geometry: {type: 'Point', coordinates: [-122.269029, 37.80787]}\n    },\n    {\n      type: 'Feature',\n      properties: {OBJECTID: 16, name: '24th St. Mission (24TH)'},\n      geometry: {type: 'Point', coordinates: [-122.418466, 37.752254]}\n    },\n    {\n      type: 'Feature',\n      properties: {OBJECTID: 17, STREETNAME: null, CNN: null, CNNTEXT: null, LAYER: null},\n      geometry: {\n        type: 'LineString',\n        coordinates: [\n          [-122.404496510855935, 37.747208431159258, 0.0],\n          [-122.404724947212969, 37.746505061621882, 0.0],\n          [-122.404910121756458, 37.745826557926733, 0.0],\n          [-122.40505115991364, 37.745369647146362, 0.0],\n          [-122.405179629589213, 37.744981134594937, 0.0],\n          [-122.405475696208015, 37.744427002056398, 0.0],\n          [-122.405747110770719, 37.74402859882732, 0.0],\n          [-122.406047832261379, 37.743656241938524, 0.0],\n          [-122.406881612819447, 37.742665294624537, 0.0],\n          [-122.407209492100122, 37.742235665881928, 0.0],\n          [-122.407448074495264, 37.741860522092949, 0.0],\n          [-122.407625696930154, 37.741528038899268, 0.0],\n          [-122.407757063324084, 37.741253133458535, 0.0],\n          [-122.407846654066077, 37.741024367212859, 0.0],\n          [-122.407964646258392, 37.74066255255704, 0.0],\n          [-122.408049229599797, 37.74033911017515, 0.0],\n          [-122.40811407182305, 37.739818087474802, 0.0],\n          [-122.408155426277474, 37.739489700638032, 0.0],\n          [-122.4081815622297, 37.739061925772134, 0.0]\n        ]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {OBJECTID: 18, STREETNAME: null, CNN: null, CNNTEXT: null, LAYER: null},\n      geometry: {\n        type: 'LineString',\n        coordinates: [\n          [-122.423396761198774, 37.771885644205057, 0.0],\n          [-122.423341877997842, 37.7716970422617, 0.0],\n          [-122.42310057516444, 37.771322004989457, 0.0],\n          [-122.423023389959624, 37.771214151829795, 0.0],\n          [-122.422909336817526, 37.771075536726087, 0.0],\n          [-122.422813562263059, 37.770970841731483, 0.0],\n          [-122.422687528244538, 37.770851679988603, 0.0],\n          [-122.422548319806467, 37.770735086967235, 0.0],\n          [-122.422398678994213, 37.770624666937692, 0.0],\n          [-122.422251635554701, 37.770526810613305, 0.0],\n          [-122.422118196802614, 37.770448774473365, 0.0],\n          [-122.421934187850198, 37.770355122684251, 0.0],\n          [-122.421813265154583, 37.770301864818435, 0.0],\n          [-122.421699352349904, 37.770256296204039, 0.0],\n          [-122.421444606183769, 37.77017071999213, 0.0],\n          [-122.42115970557785, 37.770096121272886, 0.0],\n          [-122.420898240339739, 37.770049954636129, 0.0],\n          [-122.420722192307608, 37.770030010784517, 0.0],\n          [-122.420585860012409, 37.770019508727906, 0.0],\n          [-122.419997377433887, 37.769997815936115, 0.0],\n          [-122.419496824292551, 37.769981089772898, 0.0],\n          [-122.419358230344216, 37.7699709673944, 0.0],\n          [-122.419180619296924, 37.769953778292248, 0.0],\n          [-122.418926623491956, 37.769918930266449, 0.0],\n          [-122.416139450807378, 37.769545473811675, 0.0]\n        ]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {OBJECTID: 19, STREETNAME: null, CNN: null, CNNTEXT: null, LAYER: null},\n      geometry: {\n        type: 'LineString',\n        coordinates: [\n          [-122.416338879874303, 37.769687518927974, 0.0],\n          [-122.418400932566996, 37.769948381534682, 0.0],\n          [-122.419176763922451, 37.770054187185572, 0.0],\n          [-122.419354003754208, 37.770073213616591, 0.0],\n          [-122.419542138973512, 37.770086427945351, 0.0],\n          [-122.419723964918447, 37.770092686385524, 0.0],\n          [-122.420100214695708, 37.770105478471756, 0.0],\n          [-122.420476463491056, 37.770118270276519, 0.0],\n          [-122.420616194034608, 37.770125614199095, 0.0],\n          [-122.420816021735661, 37.770145216687936, 0.0],\n          [-122.421007563773117, 37.770174292292772, 0.0],\n          [-122.421149554735379, 37.770202567397305, 0.0],\n          [-122.421323625825579, 37.770245387827444, 0.0],\n          [-122.42150000102616, 37.770298447039025, 0.0],\n          [-122.421757333137421, 37.770394874007152, 0.0],\n          [-122.421886515500674, 37.770452654763503, 0.0],\n          [-122.422041292168728, 37.770530023310897, 0.0],\n          [-122.422168383585031, 37.770601574230888, 0.0],\n          [-122.42227536100421, 37.770668224151905, 0.0],\n          [-122.422351617622013, 37.770720521989226, 0.0],\n          [-122.422517355438828, 37.770847486375189, 0.0],\n          [-122.422654966009191, 37.770969406462996, 0.0],\n          [-122.422814001010366, 37.771134535526315, 0.0],\n          [-122.422907046260278, 37.77124703002864, 0.0],\n          [-122.422985096055257, 37.771353508317482, 0.0],\n          [-122.423251598467544, 37.771769674548985, 0.0],\n          [-122.423396761198774, 37.771885644205057, 0.0]\n        ]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {OBJECTID: 20, name: 'FRMT-DALY (ROUTE 5/6)', color: '#4db848'},\n      geometry: {\n        type: 'MultiLineString',\n        coordinates: [\n          [\n            [-122.117691, 37.690853],\n            [-122.115804, 37.689526],\n            [-122.114714, 37.688759],\n            [-122.113653, 37.688024],\n            [-122.111942, 37.686838],\n            [-122.108067, 37.684181],\n            [-122.105053, 37.682106],\n            [-122.102954, 37.68066],\n            [-122.102038, 37.680022],\n            [-122.101587, 37.679705],\n            [-122.101264, 37.679484],\n            [-122.100991, 37.679307],\n            [-122.099792, 37.678482],\n            [-122.099169, 37.678052],\n            [-122.098553, 37.677627],\n            [-122.098007, 37.677245],\n            [-122.095037, 37.675203],\n            [-122.094074, 37.674541],\n            [-122.090903, 37.672359],\n            [-122.089886, 37.671685],\n            [-122.089195, 37.671243],\n            [-122.088304, 37.670637],\n            [-122.087763, 37.670258],\n            [-122.08744, 37.670036],\n            [-122.086993, 37.669721],\n            [-122.086371, 37.669288],\n            [-122.085998, 37.669034],\n            [-122.084869, 37.668261],\n            [-122.084598, 37.668069],\n            [-122.08442, 37.667945],\n            [-122.084211, 37.667804],\n            [-122.084084, 37.667711],\n            [-122.083897, 37.667578],\n            [-122.08372, 37.667449],\n            [-122.083589, 37.66735],\n            [-122.083479, 37.667265],\n            [-122.083322, 37.66714],\n            [-122.083076, 37.666953],\n            [-122.082935, 37.66683],\n            [-122.082632, 37.666538],\n            [-122.082446, 37.666354],\n            [-122.082369, 37.666272],\n            [-122.082333, 37.666234],\n            [-122.082284, 37.666184],\n            [-122.082226, 37.666121],\n            [-122.082156, 37.666044],\n            [-122.082064, 37.665942],\n            [-122.081967, 37.665832],\n            [-122.081859, 37.665707],\n            [-122.081619, 37.665418],\n            [-122.081437, 37.66521],\n            [-122.08108, 37.664741],\n            [-122.080772, 37.66435],\n            [-122.080436, 37.663925],\n            [-122.080142, 37.663548],\n            [-122.079515, 37.66275],\n            [-122.079077, 37.662191],\n            [-122.078544, 37.661513],\n            [-122.078221, 37.661104],\n            [-122.077928, 37.660729],\n            [-122.076837, 37.659338],\n            [-122.076609, 37.659057],\n            [-122.076483, 37.658895],\n            [-122.076067, 37.658358],\n            [-122.075285, 37.657361],\n            [-122.074609, 37.656503],\n            [-122.074027, 37.655761],\n            [-122.07354, 37.65514],\n            [-122.07297, 37.654414],\n            [-122.071948, 37.653108],\n            [-122.071259, 37.652248],\n            [-122.070921, 37.651817],\n            [-122.070654, 37.651473],\n            [-122.070295, 37.651016],\n            [-122.069886, 37.650495],\n            [-122.069584, 37.650128],\n            [-122.069135, 37.649539],\n            [-122.068707, 37.648992],\n            [-122.067593, 37.647577],\n            [-122.066986, 37.646801],\n            [-122.066533, 37.646228],\n            [-122.065976, 37.645512],\n            [-122.065554, 37.644979],\n            [-122.065403, 37.644785],\n            [-122.064328, 37.643416],\n            [-122.064026, 37.643029],\n            [-122.06333, 37.642146],\n            [-122.062654, 37.641281],\n            [-122.062072, 37.640542],\n            [-122.061487, 37.639797],\n            [-122.061192, 37.639424],\n            [-122.06063, 37.638707],\n            [-122.060059, 37.637982],\n            [-122.05983, 37.637697],\n            [-122.059604, 37.637414],\n            [-122.059404, 37.637168],\n            [-122.059164, 37.636868],\n            [-122.058808, 37.636417],\n            [-122.058253, 37.635703],\n            [-122.057911, 37.635273],\n            [-122.05747, 37.63471],\n            [-122.05725, 37.634427],\n            [-122.057054, 37.634176],\n            [-122.056852, 37.633926],\n            [-122.056006, 37.632842],\n            [-122.055549, 37.63226],\n            [-122.054814, 37.631328],\n            [-122.054167, 37.630498],\n            [-122.053868, 37.63011],\n            [-122.053568, 37.629681],\n            [-122.053468, 37.629507],\n            [-122.053338, 37.629302],\n            [-122.053222, 37.629103],\n            [-122.053084, 37.628859],\n            [-122.05294, 37.628593],\n            [-122.052839, 37.628415],\n            [-122.0527, 37.62811],\n            [-122.052452, 37.627612],\n            [-122.051964, 37.626617],\n            [-122.051772, 37.626229],\n            [-122.051609, 37.625908],\n            [-122.050977, 37.624599],\n            [-122.050737, 37.624113],\n            [-122.050523, 37.623678],\n            [-122.050316, 37.623254],\n            [-122.049984, 37.622579],\n            [-122.04972, 37.622073],\n            [-122.049565, 37.621804],\n            [-122.049416, 37.621558],\n            [-122.049302, 37.621378],\n            [-122.04918, 37.621195],\n            [-122.049031, 37.620985],\n            [-122.048878, 37.620777],\n            [-122.048723, 37.620579],\n            [-122.048556, 37.620373],\n            [-122.04842, 37.620214],\n            [-122.048146, 37.619908],\n            [-122.047999, 37.619757],\n            [-122.04792, 37.619676],\n            [-122.047835, 37.619592],\n            [-122.047736, 37.619493],\n            [-122.047497, 37.619263],\n            [-122.047325, 37.619105],\n            [-122.047063, 37.618871],\n            [-122.046236, 37.618155],\n            [-122.045398, 37.617408],\n            [-122.044619, 37.616726],\n            [-122.043788, 37.615997],\n            [-122.037595, 37.610563],\n            [-122.037278, 37.610274],\n            [-122.036229, 37.60925],\n            [-122.036117, 37.609133],\n            [-122.034705, 37.607718],\n            [-122.033443, 37.606397],\n            [-122.03295, 37.605879],\n            [-122.030835, 37.603662],\n            [-122.029644, 37.602411],\n            [-122.029135, 37.601873],\n            [-122.028693, 37.601412],\n            [-122.02835, 37.601054],\n            [-122.028222, 37.600917],\n            [-122.028091, 37.600781],\n            [-122.027998, 37.600684],\n            [-122.02774, 37.600412],\n            [-122.027534, 37.600196],\n            [-122.02729, 37.599942],\n            [-122.027101, 37.599745],\n            [-122.026868, 37.599512],\n            [-122.026728, 37.599375],\n            [-122.026611, 37.599264],\n            [-122.026452, 37.599123],\n            [-122.026324, 37.599004],\n            [-122.026214, 37.598906],\n            [-122.025593, 37.598354],\n            [-122.025281, 37.598081],\n            [-122.025, 37.597834],\n            [-122.024688, 37.597564],\n            [-122.024296, 37.59722],\n            [-122.023757, 37.596736],\n            [-122.023642, 37.596631],\n            [-122.023542, 37.596538],\n            [-122.023369, 37.596378],\n            [-122.023206, 37.596218],\n            [-122.023154, 37.596168],\n            [-122.023115, 37.59613],\n            [-122.023079, 37.596097],\n            [-122.023029, 37.596045],\n            [-122.022965, 37.595978],\n            [-122.02275, 37.595756],\n            [-122.022531, 37.595514],\n            [-122.022291, 37.595242],\n            [-122.022234, 37.595174],\n            [-122.022161, 37.595086],\n            [-122.022103, 37.595019],\n            [-122.022034, 37.594939],\n            [-122.021966, 37.594859],\n            [-122.021915, 37.594795],\n            [-122.021817, 37.594675],\n            [-122.021658, 37.594495],\n            [-122.021426, 37.594212],\n            [-122.021219, 37.593972],\n            [-122.021065, 37.593801],\n            [-122.021007, 37.593736],\n            [-122.020967, 37.593694],\n            [-122.020929, 37.593655],\n            [-122.020872, 37.593597],\n            [-122.020802, 37.593526],\n            [-122.020647, 37.593377],\n            [-122.020549, 37.593284],\n            [-122.020461, 37.593199],\n            [-122.020412, 37.593156],\n            [-122.020354, 37.593104],\n            [-122.020183, 37.592954],\n            [-122.020048, 37.592838],\n            [-122.019885, 37.592705],\n            [-122.019793, 37.592635],\n            [-122.01972, 37.592576],\n            [-122.01965, 37.592525],\n            [-122.019557, 37.592457],\n            [-122.019385, 37.592326],\n            [-122.019085, 37.592102],\n            [-122.018765, 37.591865],\n            [-122.018204, 37.591448],\n            [-122.017895, 37.591219],\n            [-122.0171, 37.590622],\n            [-122.016692, 37.59032],\n            [-122.016371, 37.590089],\n            [-122.015817, 37.589669],\n            [-122.015497, 37.589431],\n            [-122.01515, 37.589169],\n            [-122.014159, 37.588415],\n            [-122.013847, 37.588182],\n            [-122.011853, 37.586658],\n            [-122.011481, 37.586373],\n            [-122.011229, 37.586182],\n            [-122.01049, 37.585619],\n            [-122.010333, 37.585498],\n            [-122.010143, 37.585354],\n            [-122.009574, 37.584919],\n            [-122.00888, 37.584388],\n            [-122.008313, 37.583958],\n            [-122.007269, 37.583164],\n            [-122.006446, 37.58254],\n            [-122.005567, 37.58186],\n            [-122.004923, 37.581365],\n            [-122.004537, 37.581069],\n            [-122.003136, 37.580005],\n            [-122.002242, 37.579319],\n            [-122.001715, 37.578913],\n            [-122.001253, 37.578556],\n            [-122.000564, 37.578025],\n            [-121.999847, 37.577472],\n            [-121.997932, 37.576006],\n            [-121.995922, 37.574459],\n            [-121.995619, 37.574225],\n            [-121.994714, 37.573527],\n            [-121.99397, 37.572962],\n            [-121.993694, 37.572743],\n            [-121.993273, 37.57242],\n            [-121.991502, 37.571059],\n            [-121.990996, 37.57067],\n            [-121.990659, 37.570401],\n            [-121.990182, 37.569997],\n            [-121.989955, 37.569795],\n            [-121.989463, 37.569339],\n            [-121.98896, 37.568829],\n            [-121.988807, 37.568679],\n            [-121.988626, 37.568481],\n            [-121.988448, 37.568282],\n            [-121.988089, 37.567844],\n            [-121.987733, 37.567417],\n            [-121.986703, 37.566157],\n            [-121.986537, 37.56595],\n            [-121.986376, 37.565751],\n            [-121.986181, 37.565514],\n            [-121.985957, 37.56525],\n            [-121.985776, 37.565041],\n            [-121.985623, 37.564863],\n            [-121.985499, 37.56472],\n            [-121.985318, 37.56452],\n            [-121.985027, 37.564218],\n            [-121.984899, 37.564089],\n            [-121.984774, 37.563963],\n            [-121.984676, 37.563865],\n            [-121.984603, 37.563796],\n            [-121.984412, 37.563618],\n            [-121.984246, 37.563464],\n            [-121.984127, 37.563356],\n            [-121.983855, 37.563112],\n            [-121.983641, 37.562932],\n            [-121.983256, 37.562582],\n            [-121.982572, 37.561982],\n            [-121.982033, 37.561511],\n            [-121.981559, 37.561092],\n            [-121.981106, 37.560701],\n            [-121.980652, 37.560324],\n            [-121.980387, 37.560105],\n            [-121.980102, 37.559882],\n            [-121.979814, 37.559666],\n            [-121.979434, 37.559423],\n            [-121.978995, 37.559116],\n            [-121.978639, 37.558864],\n            [-121.978169, 37.558551],\n            [-121.977623, 37.55817],\n            [-121.977417, 37.558024],\n            [-121.977121, 37.557831],\n            [-121.976865, 37.557655],\n            [-121.976568, 37.557436],\n            [-121.976395, 37.557353]\n          ],\n          [\n            [-122.270713, 37.799861],\n            [-122.270179, 37.799654],\n            [-122.269529, 37.799396],\n            [-122.268525, 37.798992],\n            [-122.267377, 37.798517],\n            [-122.267183, 37.798395],\n            [-122.26691, 37.79824],\n            [-122.266683, 37.798083],\n            [-122.266323, 37.797875],\n            [-122.265589, 37.797472],\n            [-122.265182, 37.797248],\n            [-122.264574, 37.796939],\n            [-122.264202, 37.79674],\n            [-122.26366, 37.796465],\n            [-122.262696, 37.795886],\n            [-122.261985, 37.79539],\n            [-122.261091, 37.794706],\n            [-122.25951, 37.793439],\n            [-122.25895, 37.793028],\n            [-122.258557, 37.792739],\n            [-122.258382, 37.79261],\n            [-122.258303, 37.792553],\n            [-122.258165, 37.792459],\n            [-122.258031, 37.79237],\n            [-122.257893, 37.792285],\n            [-122.257676, 37.792154],\n            [-122.257415, 37.791995],\n            [-122.257306, 37.791933],\n            [-122.257196, 37.791872],\n            [-122.256969, 37.791744],\n            [-122.256716, 37.791614],\n            [-122.256498, 37.791511],\n            [-122.256259, 37.7914],\n            [-122.25612, 37.791336],\n            [-122.256014, 37.791289],\n            [-122.255908, 37.791246],\n            [-122.255851, 37.791221],\n            [-122.255652, 37.791139],\n            [-122.255356, 37.791024],\n            [-122.255004, 37.790899],\n            [-122.254959, 37.790879],\n            [-122.254782, 37.79082],\n            [-122.254661, 37.790779],\n            [-122.254394, 37.790691],\n            [-122.254234, 37.790639],\n            [-122.25379, 37.790503],\n            [-122.253541, 37.790425],\n            [-122.25316, 37.79031],\n            [-122.252814, 37.790202],\n            [-122.252551, 37.790121],\n            [-122.252439, 37.790085],\n            [-122.252299, 37.790038],\n            [-122.252153, 37.789989],\n            [-122.251745, 37.789843],\n            [-122.251551, 37.789773],\n            [-122.250857, 37.789496],\n            [-122.24971, 37.788996],\n            [-122.248543, 37.788495],\n            [-122.246809, 37.787751],\n            [-122.245552, 37.787202],\n            [-122.244862, 37.786885],\n            [-122.244353, 37.786636],\n            [-122.243912, 37.786423],\n            [-122.243421, 37.786186],\n            [-122.243086, 37.786023],\n            [-122.24279, 37.785882],\n            [-122.242285, 37.785636],\n            [-122.241987, 37.785491],\n            [-122.241666, 37.785326],\n            [-122.241364, 37.785177],\n            [-122.241185, 37.785089],\n            [-122.241043, 37.785018],\n            [-122.240807, 37.7849],\n            [-122.240536, 37.78476],\n            [-122.240049, 37.784497],\n            [-122.239549, 37.784216],\n            [-122.23922, 37.784016],\n            [-122.238971, 37.783868],\n            [-122.238817, 37.783777],\n            [-122.238699, 37.783707],\n            [-122.238569, 37.783631],\n            [-122.238397, 37.783525],\n            [-122.238274, 37.783455],\n            [-122.238181, 37.7834],\n            [-122.238025, 37.783314],\n            [-122.237927, 37.783256],\n            [-122.237796, 37.783181],\n            [-122.237656, 37.783095],\n            [-122.237312, 37.782888],\n            [-122.237159, 37.782797],\n            [-122.236743, 37.782548],\n            [-122.236563, 37.78244],\n            [-122.236442, 37.782368],\n            [-122.236194, 37.782221],\n            [-122.236047, 37.782134],\n            [-122.235734, 37.781944],\n            [-122.235587, 37.781855],\n            [-122.235446, 37.781769],\n            [-122.235044, 37.781514],\n            [-122.234858, 37.781391],\n            [-122.234693, 37.781277],\n            [-122.234605, 37.781216],\n            [-122.234475, 37.781124],\n            [-122.234323, 37.781014],\n            [-122.234195, 37.780916],\n            [-122.233983, 37.78075],\n            [-122.2332, 37.780127],\n            [-122.232935, 37.779904],\n            [-122.232743, 37.77975],\n            [-122.232408, 37.779492],\n            [-122.232055, 37.779233],\n            [-122.231803, 37.779057],\n            [-122.231595, 37.778921],\n            [-122.231321, 37.778746],\n            [-122.231123, 37.778624],\n            [-122.230862, 37.778473],\n            [-122.230571, 37.778311],\n            [-122.230383, 37.778209],\n            [-122.23023, 37.778127],\n            [-122.230001, 37.778007],\n            [-122.229772, 37.777891],\n            [-122.229105, 37.777549],\n            [-122.228728, 37.777359],\n            [-122.228307, 37.77714],\n            [-122.22813, 37.777051],\n            [-122.227894, 37.776929],\n            [-122.227597, 37.77678],\n            [-122.22656, 37.776269],\n            [-122.226374, 37.776174],\n            [-122.226171, 37.776069],\n            [-122.226094, 37.776027],\n            [-122.225862, 37.775897],\n            [-122.225558, 37.775724],\n            [-122.225047, 37.775422],\n            [-122.224572, 37.775141],\n            [-122.22382, 37.774706],\n            [-122.223652, 37.77461],\n            [-122.223298, 37.774402],\n            [-122.222984, 37.774223],\n            [-122.222818, 37.774124],\n            [-122.222585, 37.773986],\n            [-122.222329, 37.773839],\n            [-122.222026, 37.773662],\n            [-122.22163, 37.773441],\n            [-122.221151, 37.773194],\n            [-122.220924, 37.773077],\n            [-122.220649, 37.772945],\n            [-122.220236, 37.772752],\n            [-122.219737, 37.772515],\n            [-122.219285, 37.7723],\n            [-122.218757, 37.772057],\n            [-122.218323, 37.771832],\n            [-122.218171, 37.771751],\n            [-122.218089, 37.771708],\n            [-122.217913, 37.771608],\n            [-122.217764, 37.771525],\n            [-122.217523, 37.771389],\n            [-122.217314, 37.77126],\n            [-122.217092, 37.771119],\n            [-122.216791, 37.770914],\n            [-122.216585, 37.770767],\n            [-122.216384, 37.770616],\n            [-122.216272, 37.770528],\n            [-122.216187, 37.77046],\n            [-122.2161, 37.770392],\n            [-122.215956, 37.770275],\n            [-122.215834, 37.770169],\n            [-122.215617, 37.769975],\n            [-122.215391, 37.769768],\n            [-122.215127, 37.76951],\n            [-122.214725, 37.769102],\n            [-122.213975, 37.768328],\n            [-122.213715, 37.768059],\n            [-122.213622, 37.767966],\n            [-122.213373, 37.767709],\n            [-122.213171, 37.767508],\n            [-122.213032, 37.767372],\n            [-122.212766, 37.767121],\n            [-122.21262, 37.766983],\n            [-122.212323, 37.766721],\n            [-122.211957, 37.766401],\n            [-122.211802, 37.766276],\n            [-122.211492, 37.766011],\n            [-122.211363, 37.765908],\n            [-122.211146, 37.765721],\n            [-122.210737, 37.765378],\n            [-122.210451, 37.765136],\n            [-122.210161, 37.764895],\n            [-122.209748, 37.76455],\n            [-122.209532, 37.764369],\n            [-122.209231, 37.764115],\n            [-122.209064, 37.76398],\n            [-122.208445, 37.763457],\n            [-122.206766, 37.762054],\n            [-122.205483, 37.760979],\n            [-122.205025, 37.760595],\n            [-122.203892, 37.759651],\n            [-122.20063, 37.756912],\n            [-122.199879, 37.756274],\n            [-122.198766, 37.755271],\n            [-122.198327, 37.754895],\n            [-122.196884, 37.753678],\n            [-122.196409, 37.753284],\n            [-122.195922, 37.752873],\n            [-122.19573, 37.752712],\n            [-122.195487, 37.75251],\n            [-122.19528, 37.752335],\n            [-122.194969, 37.752074],\n            [-122.194684, 37.751843],\n            [-122.194409, 37.751629],\n            [-122.193529, 37.750938],\n            [-122.192961, 37.750466],\n            [-122.191093, 37.748907],\n            [-122.190632, 37.748524],\n            [-122.188553, 37.746778],\n            [-122.186353, 37.744931],\n            [-122.185911, 37.744555],\n            [-122.184359, 37.743261],\n            [-122.180251, 37.73981],\n            [-122.179614, 37.739272],\n            [-122.17726, 37.737349],\n            [-122.174961, 37.735423],\n            [-122.174445, 37.734989],\n            [-122.167116, 37.728838],\n            [-122.165421, 37.727412],\n            [-122.164801, 37.726886],\n            [-122.164287, 37.72643],\n            [-122.164047, 37.726194],\n            [-122.16369, 37.725831],\n            [-122.163281, 37.725371],\n            [-122.16291, 37.724904],\n            [-122.162513, 37.724379],\n            [-122.162009, 37.723643],\n            [-122.161361, 37.722695],\n            [-122.159669, 37.720244],\n            [-122.15952, 37.72003],\n            [-122.159398, 37.719865],\n            [-122.159334, 37.71978],\n            [-122.159273, 37.719699],\n            [-122.15918, 37.719588],\n            [-122.159048, 37.719437],\n            [-122.15897, 37.719351],\n            [-122.158889, 37.719271],\n            [-122.158804, 37.719185],\n            [-122.158779, 37.71916],\n            [-122.158714, 37.719101],\n            [-122.158639, 37.719034],\n            [-122.158541, 37.718949],\n            [-122.158298, 37.718757],\n            [-122.158132, 37.718635],\n            [-122.157878, 37.718452],\n            [-122.157566, 37.718237],\n            [-122.156866, 37.717754],\n            [-122.155854, 37.717057],\n            [-122.154863, 37.716379],\n            [-122.154301, 37.715991],\n            [-122.154006, 37.715787],\n            [-122.15375, 37.715612],\n            [-122.153029, 37.715119],\n            [-122.148444, 37.711966],\n            [-122.147591, 37.711379],\n            [-122.146414, 37.710571],\n            [-122.144545, 37.709282],\n            [-122.142296, 37.707738],\n            [-122.138726, 37.70528],\n            [-122.137211, 37.704236],\n            [-122.133704, 37.701825],\n            [-122.130722, 37.699774],\n            [-122.130305, 37.699488],\n            [-122.130015, 37.699288],\n            [-122.12982, 37.699153],\n            [-122.128081, 37.697997],\n            [-122.124181, 37.695383],\n            [-122.124181, 37.695383],\n            [-122.121564, 37.693512],\n            [-122.119058, 37.691789],\n            [-122.117691, 37.690853]\n          ],\n          [\n            [-122.270713, 37.799861],\n            [-122.270928, 37.799942],\n            [-122.271097, 37.799987],\n            [-122.271322, 37.800023],\n            [-122.272291, 37.799938],\n            [-122.27243, 37.799896],\n            [-122.272781, 37.799796],\n            [-122.2732, 37.79959],\n            [-122.273728, 37.799315],\n            [-122.274691, 37.79884],\n            [-122.274868, 37.798753],\n            [-122.276054, 37.798516],\n            [-122.276236, 37.798476],\n            [-122.276856, 37.798527]\n          ],\n          [\n            [-122.469106, 37.706105],\n            [-122.468903, 37.706333],\n            [-122.468809, 37.706437],\n            [-122.468678, 37.706588],\n            [-122.468434, 37.706903],\n            [-122.468029, 37.707393],\n            [-122.467923, 37.707522],\n            [-122.467832, 37.707627],\n            [-122.466801, 37.708779],\n            [-122.466732, 37.708861],\n            [-122.46667, 37.708939],\n            [-122.4666, 37.709019],\n            [-122.466526, 37.709095],\n            [-122.466449, 37.709166],\n            [-122.466376, 37.709237],\n            [-122.466284, 37.709309],\n            [-122.466215, 37.709364],\n            [-122.466126, 37.709428],\n            [-122.466028, 37.709493],\n            [-122.465941, 37.709544],\n            [-122.465846, 37.709608],\n            [-122.465752, 37.709656],\n            [-122.465664, 37.709709],\n            [-122.465569, 37.709755],\n            [-122.465466, 37.709801],\n            [-122.465351, 37.709849],\n            [-122.465245, 37.70989],\n            [-122.465148, 37.709922],\n            [-122.465035, 37.709958],\n            [-122.464925, 37.709987],\n            [-122.46481, 37.710013],\n            [-122.464685, 37.710036],\n            [-122.464576, 37.71006],\n            [-122.464464, 37.710078],\n            [-122.464349, 37.710097],\n            [-122.464248, 37.710106],\n            [-122.464125, 37.710117],\n            [-122.464, 37.710122],\n            [-122.463871, 37.710128],\n            [-122.463753, 37.710132],\n            [-122.463654, 37.710127],\n            [-122.462673, 37.710117],\n            [-122.461932, 37.710109],\n            [-122.461456, 37.710106],\n            [-122.461205, 37.710107],\n            [-122.460612, 37.710103],\n            [-122.460513, 37.710103],\n            [-122.460089, 37.7101],\n            [-122.459798, 37.710097],\n            [-122.459371, 37.710095],\n            [-122.458818, 37.710096],\n            [-122.458429, 37.710097],\n            [-122.458239, 37.710103],\n            [-122.458046, 37.710114],\n            [-122.457854, 37.710123],\n            [-122.457689, 37.710132],\n            [-122.457494, 37.710148],\n            [-122.457301, 37.710168],\n            [-122.45712, 37.710193],\n            [-122.456943, 37.71022],\n            [-122.456714, 37.710261],\n            [-122.45647, 37.710314],\n            [-122.456253, 37.710367],\n            [-122.456029, 37.710421],\n            [-122.455812, 37.710483],\n            [-122.455588, 37.710559],\n            [-122.455342, 37.710654],\n            [-122.455158, 37.710734],\n            [-122.454985, 37.71082],\n            [-122.454815, 37.710906],\n            [-122.454757, 37.710939],\n            [-122.454638, 37.711002],\n            [-122.454466, 37.711098],\n            [-122.454306, 37.711201],\n            [-122.454132, 37.711315],\n            [-122.453978, 37.711421],\n            [-122.453808, 37.711542],\n            [-122.453514, 37.711768],\n            [-122.453207, 37.712002],\n            [-122.452952, 37.712213],\n            [-122.452635, 37.712477],\n            [-122.45215, 37.712868],\n            [-122.451705, 37.713224],\n            [-122.451441, 37.713439],\n            [-122.451107, 37.713707],\n            [-122.450884, 37.713896],\n            [-122.450715, 37.714043],\n            [-122.450556, 37.714184],\n            [-122.450426, 37.714317],\n            [-122.450264, 37.714469],\n            [-122.450109, 37.714616],\n            [-122.449961, 37.714764],\n            [-122.449842, 37.714875],\n            [-122.449687, 37.715039],\n            [-122.449586, 37.715155],\n            [-122.449493, 37.715256],\n            [-122.449409, 37.715351],\n            [-122.449317, 37.71545],\n            [-122.449226, 37.715551],\n            [-122.449141, 37.715654],\n            [-122.449058, 37.71576],\n            [-122.448989, 37.715852],\n            [-122.448913, 37.715962],\n            [-122.448844, 37.716072],\n            [-122.448783, 37.716173],\n            [-122.448722, 37.716283],\n            [-122.448661, 37.716398],\n            [-122.448609, 37.716502],\n            [-122.448567, 37.716602],\n            [-122.448514, 37.716725],\n            [-122.448431, 37.716914],\n            [-122.448349, 37.717127],\n            [-122.448303, 37.717282],\n            [-122.448233, 37.71749],\n            [-122.448165, 37.717655],\n            [-122.448122, 37.717956],\n            [-122.448092, 37.718172],\n            [-122.448092, 37.718314],\n            [-122.448061, 37.718552],\n            [-122.448055, 37.718621],\n            [-122.448051, 37.718656],\n            [-122.448034, 37.718801],\n            [-122.448005, 37.719277],\n            [-122.447846, 37.720179],\n            [-122.447631, 37.721123],\n            [-122.447624, 37.721147],\n            [-122.447593, 37.721264],\n            [-122.447372, 37.722221],\n            [-122.447196, 37.723],\n            [-122.446967, 37.723855],\n            [-122.446671, 37.724539],\n            [-122.446363, 37.725104],\n            [-122.446308, 37.725188],\n            [-122.446245, 37.72529],\n            [-122.446186, 37.725395],\n            [-122.44613, 37.725479],\n            [-122.446059, 37.725571],\n            [-122.445995, 37.725663],\n            [-122.44593, 37.725755],\n            [-122.445865, 37.725839],\n            [-122.445526, 37.726234],\n            [-122.445164, 37.726612],\n            [-122.445034, 37.726729],\n            [-122.444943, 37.726806],\n            [-122.444845, 37.726909],\n            [-122.444723, 37.727013],\n            [-122.44461, 37.727109],\n            [-122.444507, 37.727194],\n            [-122.444392, 37.727285],\n            [-122.444267, 37.727381],\n            [-122.443613, 37.727828],\n            [-122.443394, 37.727959],\n            [-122.44319, 37.728081],\n            [-122.442962, 37.728209],\n            [-122.442869, 37.728256],\n            [-122.442575, 37.728409],\n            [-122.442264, 37.72856],\n            [-122.441807, 37.728764],\n            [-122.441408, 37.728925],\n            [-122.440789, 37.729147],\n            [-122.43985, 37.729516],\n            [-122.439205, 37.72978],\n            [-122.43892, 37.72988],\n            [-122.438031, 37.730328],\n            [-122.437495, 37.730633],\n            [-122.437173, 37.730829],\n            [-122.436901, 37.731003],\n            [-122.43666, 37.731183],\n            [-122.436385, 37.731366],\n            [-122.436179, 37.731508],\n            [-122.43605, 37.731595],\n            [-122.435966, 37.731656],\n            [-122.435706, 37.731839],\n            [-122.435447, 37.732004],\n            [-122.435241, 37.732136],\n            [-122.435117, 37.732222],\n            [-122.435026, 37.732295],\n            [-122.434642, 37.732542],\n            [-122.434329, 37.732752],\n            [-122.433801, 37.733121],\n            [-122.433405, 37.733368],\n            [-122.432847, 37.733721],\n            [-122.432582, 37.733918],\n            [-122.431811, 37.734415],\n            [-122.431274, 37.734758],\n            [-122.430172, 37.735479],\n            [-122.428873, 37.736323],\n            [-122.427615, 37.737145],\n            [-122.426334, 37.737984],\n            [-122.425826, 37.738339],\n            [-122.425538, 37.738547],\n            [-122.425326, 37.738713],\n            [-122.424999, 37.73895],\n            [-122.424828, 37.739072],\n            [-122.424649, 37.739215],\n            [-122.424537, 37.739296],\n            [-122.424351, 37.739428],\n            [-122.42411, 37.739622],\n            [-122.424011, 37.739738],\n            [-122.423827, 37.739869],\n            [-122.423179, 37.740563],\n            [-122.422476, 37.741588],\n            [-122.422061, 37.742264],\n            [-122.420958, 37.743961],\n            [-122.419834, 37.745675],\n            [-122.419392, 37.746361],\n            [-122.418916, 37.747089],\n            [-122.418687, 37.747518],\n            [-122.41859, 37.747722],\n            [-122.418544, 37.747813],\n            [-122.41849, 37.747912],\n            [-122.418397, 37.748166],\n            [-122.41836, 37.748248],\n            [-122.418323, 37.748339],\n            [-122.41829, 37.748442],\n            [-122.418259, 37.748552],\n            [-122.418218, 37.748731],\n            [-122.418186, 37.748868],\n            [-122.41816, 37.749093],\n            [-122.418301, 37.75055],\n            [-122.41844, 37.752086],\n            [-122.418615, 37.753786],\n            [-122.418742, 37.755411],\n            [-122.4189, 37.756821],\n            [-122.418962, 37.757461],\n            [-122.419053, 37.758554],\n            [-122.419231, 37.76021],\n            [-122.419372, 37.761849],\n            [-122.419543, 37.763429],\n            [-122.41967, 37.764723],\n            [-122.419692, 37.765024],\n            [-122.419854, 37.766637],\n            [-122.419892, 37.767184],\n            [-122.419996, 37.768204],\n            [-122.420043, 37.768923],\n            [-122.420062, 37.769113],\n            [-122.420119, 37.769442],\n            [-122.420128, 37.769528],\n            [-122.42014, 37.769621],\n            [-122.420147, 37.76977],\n            [-122.420152, 37.769886],\n            [-122.420176, 37.770065],\n            [-122.420215, 37.770362],\n            [-122.420327, 37.771558],\n            [-122.420316, 37.771965],\n            [-122.420322, 37.772277],\n            [-122.420317, 37.772531],\n            [-122.420281, 37.772812],\n            [-122.420153, 37.773345],\n            [-122.420104, 37.773593],\n            [-122.420038, 37.773762],\n            [-122.419906, 37.774022],\n            [-122.419471, 37.774777],\n            [-122.419429, 37.774913],\n            [-122.419406, 37.774983],\n            [-122.419377, 37.775045],\n            [-122.419321, 37.775113],\n            [-122.419239, 37.775191],\n            [-122.418701, 37.775596],\n            [-122.417492, 37.776574],\n            [-122.41652, 37.777348],\n            [-122.416228, 37.77756],\n            [-122.414798, 37.7787],\n            [-122.412528, 37.780489],\n            [-122.41145, 37.781351],\n            [-122.410319, 37.782234],\n            [-122.408084, 37.784002],\n            [-122.405876, 37.785769],\n            [-122.404718, 37.786653],\n            [-122.404003, 37.787215],\n            [-122.403499, 37.787631],\n            [-122.402875, 37.788109],\n            [-122.402102, 37.788723],\n            [-122.401386, 37.789267],\n            [-122.399138, 37.791042],\n            [-122.398258, 37.791728],\n            [-122.397415, 37.792407],\n            [-122.396506, 37.793169],\n            [-122.395321, 37.794057],\n            [-122.394828, 37.794362],\n            [-122.394659, 37.794469],\n            [-122.394508, 37.79455],\n            [-122.394366, 37.794631],\n            [-122.394072, 37.794782],\n            [-122.393814, 37.794904],\n            [-122.393498, 37.79506],\n            [-122.393151, 37.795219],\n            [-122.392537, 37.795517],\n            [-122.391751, 37.795841],\n            [-122.391448, 37.795976],\n            [-122.391302, 37.796041],\n            [-122.390733, 37.796294],\n            [-122.38985, 37.796687],\n            [-122.389027, 37.797053],\n            [-122.388439, 37.797315],\n            [-122.387975, 37.797522],\n            [-122.387476, 37.797743],\n            [-122.386946, 37.797979],\n            [-122.386305, 37.798265],\n            [-122.385701, 37.798534],\n            [-122.385193, 37.79876],\n            [-122.384824, 37.798924],\n            [-122.38453, 37.799055],\n            [-122.384152, 37.799223],\n            [-122.383849, 37.799358],\n            [-122.383682, 37.799432],\n            [-122.383442, 37.799539],\n            [-122.383164, 37.799663],\n            [-122.382839, 37.799808],\n            [-122.382558, 37.799933],\n            [-122.382295, 37.80005],\n            [-122.381886, 37.800232],\n            [-122.381553, 37.80038],\n            [-122.381386, 37.800454],\n            [-122.381017, 37.800618],\n            [-122.380655, 37.800779],\n            [-122.380293, 37.800941],\n            [-122.379997, 37.801072],\n            [-122.379566, 37.801264],\n            [-122.379333, 37.801367],\n            [-122.379061, 37.801484],\n            [-122.378788, 37.801599],\n            [-122.378485, 37.801723],\n            [-122.378206, 37.801835],\n            [-122.377961, 37.801929],\n            [-122.377783, 37.801997],\n            [-122.377556, 37.802081],\n            [-122.377278, 37.802182],\n            [-122.377102, 37.802244],\n            [-122.376862, 37.802327],\n            [-122.376663, 37.802394],\n            [-122.37642, 37.802474],\n            [-122.376049, 37.802592],\n            [-122.375907, 37.802636],\n            [-122.375677, 37.802705],\n            [-122.375582, 37.802734],\n            [-122.374975, 37.802906],\n            [-122.374499, 37.803034],\n            [-122.374181, 37.803113],\n            [-122.373835, 37.803197],\n            [-122.373325, 37.803313],\n            [-122.37284, 37.803416],\n            [-122.372496, 37.803485],\n            [-122.37218, 37.803544],\n            [-122.372018, 37.803573],\n            [-122.371873, 37.803599],\n            [-122.371594, 37.803647],\n            [-122.37109, 37.803733],\n            [-122.370628, 37.803811],\n            [-122.370395, 37.80385],\n            [-122.370216, 37.803881],\n            [-122.370018, 37.803914],\n            [-122.369691, 37.803969],\n            [-122.369393, 37.80402],\n            [-122.369234, 37.804047],\n            [-122.368983, 37.804089],\n            [-122.36873, 37.804132],\n            [-122.368345, 37.804197],\n            [-122.367904, 37.804272],\n            [-122.367638, 37.804317],\n            [-122.367375, 37.804361],\n            [-122.367188, 37.804393],\n            [-122.366998, 37.804425],\n            [-122.366678, 37.804479],\n            [-122.366367, 37.804532],\n            [-122.366027, 37.804589],\n            [-122.365735, 37.804639],\n            [-122.365328, 37.804708],\n            [-122.365107, 37.804745],\n            [-122.364819, 37.804794],\n            [-122.364621, 37.804827],\n            [-122.364322, 37.804878],\n            [-122.364022, 37.804929],\n            [-122.363705, 37.804982],\n            [-122.363326, 37.805046],\n            [-122.363004, 37.805101],\n            [-122.362666, 37.805158],\n            [-122.362384, 37.805206],\n            [-122.362149, 37.805246],\n            [-122.361906, 37.805287],\n            [-122.361806, 37.805303],\n            [-122.361615, 37.805336],\n            [-122.361334, 37.805383],\n            [-122.361157, 37.805413],\n            [-122.360916, 37.805454],\n            [-122.360766, 37.805479],\n            [-122.360571, 37.805512],\n            [-122.360333, 37.805553],\n            [-122.360139, 37.805586],\n            [-122.359966, 37.805615],\n            [-122.359805, 37.805642],\n            [-122.359603, 37.805676],\n            [-122.359438, 37.805704],\n            [-122.359239, 37.805738],\n            [-122.359127, 37.805757],\n            [-122.358849, 37.805804],\n            [-122.358639, 37.805839],\n            [-122.358458, 37.80587],\n            [-122.35819, 37.805915],\n            [-122.358054, 37.805938],\n            [-122.357891, 37.805966],\n            [-122.357755, 37.805989],\n            [-122.357578, 37.806019],\n            [-122.357468, 37.806037],\n            [-122.357171, 37.806087],\n            [-122.356963, 37.806122],\n            [-122.356845, 37.806143],\n            [-122.35676, 37.806157],\n            [-122.356589, 37.806186],\n            [-122.356403, 37.806217],\n            [-122.356282, 37.806238],\n            [-122.356198, 37.806252],\n            [-122.356066, 37.806274],\n            [-122.355882, 37.806305],\n            [-122.355686, 37.806339],\n            [-122.355403, 37.806386],\n            [-122.355272, 37.806408],\n            [-122.355008, 37.806453],\n            [-122.354917, 37.806468],\n            [-122.35485, 37.80648],\n            [-122.35476, 37.806495],\n            [-122.354695, 37.806506],\n            [-122.354525, 37.806535],\n            [-122.354409, 37.806554],\n            [-122.354325, 37.806569],\n            [-122.354227, 37.806585],\n            [-122.354086, 37.806609],\n            [-122.354017, 37.806621],\n            [-122.353947, 37.806633],\n            [-122.353904, 37.80664],\n            [-122.353765, 37.806663],\n            [-122.353575, 37.806695],\n            [-122.353343, 37.806735],\n            [-122.353173, 37.806763],\n            [-122.35303, 37.806788],\n            [-122.352832, 37.806821],\n            [-122.352675, 37.806848],\n            [-122.352471, 37.806882],\n            [-122.35208, 37.806948],\n            [-122.351678, 37.807016],\n            [-122.351343, 37.807073],\n            [-122.351125, 37.80711],\n            [-122.350989, 37.807133],\n            [-122.350903, 37.807147],\n            [-122.350826, 37.80716],\n            [-122.350549, 37.807207],\n            [-122.350215, 37.807264],\n            [-122.349855, 37.807325],\n            [-122.349491, 37.807386],\n            [-122.349227, 37.807431],\n            [-122.348673, 37.807524],\n            [-122.34762, 37.807702],\n            [-122.346954, 37.807817],\n            [-122.346269, 37.807931],\n            [-122.345982, 37.807981],\n            [-122.345735, 37.808021],\n            [-122.34529, 37.808096],\n            [-122.344754, 37.808186],\n            [-122.342008, 37.808651],\n            [-122.341598, 37.80872],\n            [-122.341341, 37.808763],\n            [-122.340242, 37.808948],\n            [-122.339687, 37.809041],\n            [-122.339143, 37.809133],\n            [-122.338773, 37.809194],\n            [-122.338187, 37.809285],\n            [-122.337648, 37.809363],\n            [-122.337162, 37.809429],\n            [-122.336553, 37.809505],\n            [-122.336131, 37.809552],\n            [-122.3358, 37.809588],\n            [-122.335224, 37.809645],\n            [-122.334668, 37.809694],\n            [-122.334142, 37.809735],\n            [-122.333583, 37.809772],\n            [-122.33315, 37.809797],\n            [-122.332755, 37.809816],\n            [-122.332116, 37.809842],\n            [-122.33108, 37.809866],\n            [-122.330735, 37.80987],\n            [-122.330014, 37.80987],\n            [-122.329757, 37.809867],\n            [-122.329449, 37.809862],\n            [-122.32917, 37.809857],\n            [-122.328638, 37.809842],\n            [-122.328189, 37.809825],\n            [-122.328029, 37.809818],\n            [-122.327321, 37.809778],\n            [-122.326497, 37.809718],\n            [-122.326137, 37.809687],\n            [-122.325817, 37.809649],\n            [-122.323554, 37.809392],\n            [-122.322814, 37.809368],\n            [-122.322059, 37.809327],\n            [-122.320701, 37.80925],\n            [-122.320136, 37.80922],\n            [-122.31951, 37.809162],\n            [-122.318885, 37.809106],\n            [-122.316062, 37.808815],\n            [-122.315696, 37.808781],\n            [-122.315482, 37.808758],\n            [-122.315185, 37.808731],\n            [-122.314429, 37.808664],\n            [-122.312583, 37.808473],\n            [-122.312057, 37.808422],\n            [-122.308982, 37.808129],\n            [-122.308486, 37.808084],\n            [-122.308295, 37.808064],\n            [-122.306411, 37.807806],\n            [-122.305541, 37.807685],\n            [-122.305182, 37.807598],\n            [-122.30506, 37.807577],\n            [-122.304526, 37.807461],\n            [-122.30445, 37.807442],\n            [-122.304175, 37.807385],\n            [-122.303977, 37.807343],\n            [-122.303794, 37.807301],\n            [-122.302436, 37.806996],\n            [-122.302398, 37.806989],\n            [-122.298135, 37.806031],\n            [-122.297836, 37.805959],\n            [-122.297584, 37.805879],\n            [-122.297324, 37.805794],\n            [-122.297073, 37.805706],\n            [-122.296836, 37.805615],\n            [-122.296599, 37.805523],\n            [-122.296356, 37.805421],\n            [-122.296134, 37.805318],\n            [-122.296096, 37.805302],\n            [-122.295089, 37.804897],\n            [-122.293883, 37.80441],\n            [-122.29341, 37.804204],\n            [-122.292579, 37.803875],\n            [-122.292563, 37.803872],\n            [-122.29206, 37.803669],\n            [-122.291923, 37.803616],\n            [-122.291747, 37.803548],\n            [-122.291663, 37.803513],\n            [-122.291564, 37.803468],\n            [-122.291335, 37.803381],\n            [-122.29132, 37.803376],\n            [-122.291312, 37.803371],\n            [-122.291297, 37.803365],\n            [-122.291137, 37.803291],\n            [-122.290946, 37.803223],\n            [-122.284796, 37.801721],\n            [-122.284606, 37.801668],\n            [-122.284431, 37.801611],\n            [-122.284095, 37.801496],\n            [-122.283744, 37.801381],\n            [-122.283645, 37.801347],\n            [-122.283523, 37.801296],\n            [-122.283386, 37.801237],\n            [-122.283157, 37.801141],\n            [-122.282943, 37.801045],\n            [-122.282546, 37.800853],\n            [-122.282294, 37.800744],\n            [-122.282272, 37.800732],\n            [-122.28218, 37.800693],\n            [-122.281188, 37.800214],\n            [-122.280051, 37.799664],\n            [-122.280044, 37.79966],\n            [-122.279952, 37.799607],\n            [-122.279907, 37.799584],\n            [-122.279716, 37.799493],\n            [-122.279471, 37.799368],\n            [-122.279183, 37.799217],\n            [-122.278686, 37.798956],\n            [-122.278478, 37.798859],\n            [-122.278369, 37.798811],\n            [-122.278197, 37.798746],\n            [-122.278051, 37.798694],\n            [-122.277819, 37.798637],\n            [-122.277697, 37.798614],\n            [-122.277507, 37.798583],\n            [-122.277358, 37.798568],\n            [-122.276984, 37.798532],\n            [-122.276923, 37.798528],\n            [-122.276856, 37.798527]\n          ]\n        ]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {OBJECTID: 21, name: 'PITT-SFIA (ROUTE 1/2)', color: '#ffe800'},\n      geometry: {\n        type: 'MultiLineString',\n        coordinates: [\n          [\n            [-121.942073, 38.018937],\n            [-121.942449, 38.01892],\n            [-121.942633, 38.018917],\n            [-121.94282, 38.018919],\n            [-121.943121, 38.018915],\n            [-121.943447, 38.018913],\n            [-121.943743, 38.018913],\n            [-121.944108, 38.018909],\n            [-121.94449, 38.01891],\n            [-121.944892, 38.018911],\n            [-121.945267, 38.018911],\n            [-121.9456, 38.018911],\n            [-121.945852, 38.018909],\n            [-121.946445, 38.018912],\n            [-121.946981, 38.018924],\n            [-121.947611, 38.018963],\n            [-121.948062, 38.019005],\n            [-121.948319, 38.019033],\n            [-121.948534, 38.019066],\n            [-121.948917, 38.019132],\n            [-121.949248, 38.0192],\n            [-121.949597, 38.019284],\n            [-121.94979, 38.019335],\n            [-121.950002, 38.019394],\n            [-121.950206, 38.019454],\n            [-121.950605, 38.019575],\n            [-121.950798, 38.019635],\n            [-121.951102, 38.019731],\n            [-121.951338, 38.019803],\n            [-121.95161, 38.019887],\n            [-121.951874, 38.019969],\n            [-121.952, 38.020008],\n            [-121.952239, 38.020082],\n            [-121.952554, 38.020179],\n            [-121.952843, 38.020269],\n            [-121.953136, 38.020357],\n            [-121.953308, 38.020406],\n            [-121.953643, 38.020503],\n            [-121.953936, 38.020584],\n            [-121.954182, 38.02065],\n            [-121.954427, 38.020712],\n            [-121.954624, 38.020762],\n            [-121.954938, 38.020838],\n            [-121.955164, 38.020892],\n            [-121.9554, 38.020944],\n            [-121.955637, 38.020996],\n            [-121.955805, 38.021031],\n            [-121.955926, 38.021057],\n            [-121.956017, 38.021075],\n            [-121.956428, 38.021157],\n            [-121.956689, 38.021207],\n            [-121.957004, 38.021266],\n            [-121.95732, 38.021325],\n            [-121.957584, 38.021376],\n            [-121.957925, 38.021441],\n            [-121.958182, 38.021489],\n            [-121.958478, 38.021547],\n            [-121.958713, 38.02159],\n            [-121.958968, 38.021638],\n            [-121.959195, 38.02168],\n            [-121.959414, 38.021721],\n            [-121.959704, 38.021777],\n            [-121.959955, 38.021825],\n            [-121.960349, 38.0219],\n            [-121.960645, 38.021956],\n            [-121.961001, 38.022024],\n            [-121.96136, 38.022091],\n            [-121.961901, 38.022194],\n            [-121.962517, 38.022311],\n            [-121.962991, 38.022401],\n            [-121.963184, 38.022438],\n            [-121.96357, 38.022509],\n            [-121.963898, 38.022572],\n            [-121.964273, 38.022644],\n            [-121.964605, 38.022706],\n            [-121.965156, 38.02281],\n            [-121.965598, 38.022894],\n            [-121.966146, 38.022998],\n            [-121.966646, 38.023093],\n            [-121.967215, 38.0232],\n            [-121.967743, 38.0233],\n            [-121.96817, 38.023381],\n            [-121.968312, 38.023408],\n            [-121.96833, 38.023412],\n            [-121.968348, 38.023416],\n            [-121.96836, 38.023418],\n            [-121.968371, 38.02342],\n            [-121.968384, 38.023422],\n            [-121.968431, 38.023431],\n            [-121.968606, 38.023462],\n            [-121.968714, 38.023483],\n            [-121.968898, 38.023518],\n            [-121.969114, 38.023556],\n            [-121.969264, 38.023582],\n            [-121.969396, 38.023604],\n            [-121.969728, 38.023657],\n            [-121.970104, 38.023708],\n            [-121.970512, 38.023755],\n            [-121.970877, 38.02379],\n            [-121.970942, 38.023793],\n            [-121.971315, 38.023818],\n            [-121.971738, 38.023836],\n            [-121.972116, 38.023844],\n            [-121.972593, 38.023843],\n            [-121.972882, 38.023833],\n            [-121.973374, 38.023809],\n            [-121.973674, 38.023789],\n            [-121.974088, 38.02375],\n            [-121.974252, 38.023734],\n            [-121.974485, 38.023705],\n            [-121.974717, 38.023673],\n            [-121.975026, 38.023627],\n            [-121.975275, 38.023585],\n            [-121.975607, 38.023523],\n            [-121.976055, 38.023429],\n            [-121.976189, 38.023397],\n            [-121.976447, 38.023336],\n            [-121.976794, 38.023244],\n            [-121.977226, 38.02312],\n            [-121.977574, 38.02301],\n            [-121.978322, 38.022747],\n            [-121.978744, 38.022577],\n            [-121.979167, 38.022398],\n            [-121.979561, 38.022228],\n            [-121.979989, 38.022042],\n            [-121.980224, 38.021939],\n            [-121.980495, 38.021823],\n            [-121.980797, 38.021691],\n            [-121.981043, 38.021584],\n            [-121.981329, 38.02146],\n            [-121.981452, 38.021406],\n            [-121.981598, 38.021343],\n            [-121.98182, 38.021247],\n            [-121.982059, 38.021142],\n            [-121.982358, 38.021012],\n            [-121.982668, 38.020878],\n            [-121.982765, 38.020837],\n            [-121.982911, 38.020771],\n            [-121.983045, 38.020712],\n            [-121.983301, 38.020603],\n            [-121.983564, 38.02049],\n            [-121.98378, 38.020399],\n            [-121.983998, 38.020308],\n            [-121.984221, 38.020212],\n            [-121.984539, 38.020075],\n            [-121.984759, 38.019977],\n            [-121.985049, 38.019844],\n            [-121.985239, 38.019761],\n            [-121.985631, 38.019591],\n            [-121.98587, 38.019486],\n            [-121.986149, 38.019364],\n            [-121.986548, 38.019193],\n            [-121.986814, 38.019074],\n            [-121.986944, 38.019018],\n            [-121.987103, 38.018949],\n            [-121.987383, 38.018825],\n            [-121.987605, 38.018731],\n            [-121.987787, 38.018649],\n            [-121.988059, 38.018527],\n            [-121.98833, 38.018402],\n            [-121.988546, 38.018296],\n            [-121.988731, 38.018205],\n            [-121.988833, 38.018152],\n            [-121.988994, 38.01807],\n            [-121.989134, 38.017995],\n            [-121.989373, 38.017865],\n            [-121.989611, 38.017729],\n            [-121.989789, 38.017623],\n            [-121.990001, 38.017498],\n            [-121.990232, 38.017355],\n            [-121.9904, 38.017249],\n            [-121.990604, 38.017119],\n            [-121.990891, 38.016935],\n            [-121.991101, 38.0168],\n            [-121.991406, 38.016606],\n            [-121.991625, 38.016471],\n            [-121.991832, 38.016339],\n            [-121.992061, 38.016198],\n            [-121.99226, 38.016074],\n            [-121.99242, 38.01597],\n            [-121.992677, 38.01581],\n            [-121.992931, 38.015657],\n            [-121.99325, 38.015474],\n            [-121.993406, 38.015387],\n            [-121.993527, 38.015321],\n            [-121.993695, 38.015231],\n            [-121.993836, 38.015157],\n            [-121.994145, 38.014999],\n            [-121.994326, 38.01491],\n            [-121.994522, 38.014818],\n            [-121.994656, 38.014758],\n            [-121.995046, 38.014586],\n            [-121.995326, 38.014469],\n            [-121.995546, 38.01438],\n            [-121.99591, 38.014241],\n            [-121.996157, 38.01415],\n            [-121.996489, 38.014036],\n            [-121.996811, 38.01393],\n            [-121.99707, 38.013846],\n            [-121.997424, 38.013739],\n            [-121.997933, 38.013589],\n            [-121.998366, 38.013486],\n            [-121.998717, 38.013412],\n            [-121.999094, 38.013332],\n            [-121.99933, 38.013286],\n            [-121.999656, 38.013227],\n            [-121.999918, 38.013184],\n            [-122.000255, 38.013132],\n            [-122.000681, 38.013064],\n            [-122.001179, 38.012989],\n            [-122.001466, 38.012943],\n            [-122.001936, 38.012871],\n            [-122.002351, 38.012808],\n            [-122.002858, 38.01273],\n            [-122.003721, 38.012599],\n            [-122.004356, 38.012501],\n            [-122.004993, 38.012403],\n            [-122.005781, 38.012282],\n            [-122.006144, 38.012227],\n            [-122.006602, 38.012159],\n            [-122.007324, 38.012048],\n            [-122.008053, 38.011937],\n            [-122.008585, 38.011856],\n            [-122.009173, 38.011766],\n            [-122.009755, 38.011677],\n            [-122.010711, 38.011532],\n            [-122.01142, 38.011425],\n            [-122.012111, 38.011321],\n            [-122.012819, 38.011211],\n            [-122.013204, 38.011152],\n            [-122.013766, 38.011067],\n            [-122.014316, 38.010984],\n            [-122.014971, 38.010884],\n            [-122.015295, 38.010835],\n            [-122.015508, 38.010804],\n            [-122.015974, 38.010733],\n            [-122.016267, 38.010687],\n            [-122.016695, 38.01062],\n            [-122.016966, 38.010569],\n            [-122.01727, 38.010498],\n            [-122.017495, 38.010426],\n            [-122.017728, 38.010344],\n            [-122.018126, 38.010192],\n            [-122.018407, 38.010064],\n            [-122.018543, 38.009996],\n            [-122.018649, 38.009941],\n            [-122.018963, 38.009755],\n            [-122.019068, 38.009691],\n            [-122.019212, 38.009595],\n            [-122.019342, 38.0095],\n            [-122.01949, 38.009386],\n            [-122.019647, 38.009251],\n            [-122.019919, 38.008995],\n            [-122.02003, 38.008878],\n            [-122.020287, 38.008581],\n            [-122.020469, 38.008361],\n            [-122.020641, 38.008152],\n            [-122.020727, 38.008044],\n            [-122.020874, 38.007862],\n            [-122.021006, 38.007698],\n            [-122.021128, 38.007545],\n            [-122.021212, 38.007436],\n            [-122.021328, 38.007292],\n            [-122.021457, 38.007135],\n            [-122.021712, 38.006806],\n            [-122.021812, 38.006683],\n            [-122.022092, 38.006338],\n            [-122.022378, 38.005996],\n            [-122.022525, 38.005806],\n            [-122.022894, 38.005373],\n            [-122.023019, 38.005212],\n            [-122.0231, 38.005107],\n            [-122.02322, 38.004959],\n            [-122.023369, 38.004781],\n            [-122.023504, 38.004629],\n            [-122.02377, 38.004309],\n            [-122.023902, 38.004159],\n            [-122.024144, 38.003848],\n            [-122.024449, 38.003457],\n            [-122.024759, 38.003083],\n            [-122.025006, 38.002785],\n            [-122.025391, 38.002335],\n            [-122.025883, 38.001722],\n            [-122.026355, 38.001156],\n            [-122.026752, 38.000666],\n            [-122.02711, 38.000188],\n            [-122.027332, 37.999882],\n            [-122.027812, 37.999224],\n            [-122.028239, 37.998637],\n            [-122.028478, 37.99831],\n            [-122.028674, 37.998043],\n            [-122.028856, 37.997791],\n            [-122.029139, 37.997397],\n            [-122.02948, 37.996925],\n            [-122.029684, 37.996642],\n            [-122.029926, 37.996302],\n            [-122.030118, 37.996029],\n            [-122.030299, 37.995784],\n            [-122.030406, 37.995633],\n            [-122.030454, 37.995568],\n            [-122.030556, 37.995433],\n            [-122.030663, 37.995291],\n            [-122.030729, 37.995194],\n            [-122.030811, 37.995078],\n            [-122.031045, 37.994757],\n            [-122.031277, 37.994439],\n            [-122.031429, 37.994227],\n            [-122.031513, 37.994114],\n            [-122.031621, 37.993966],\n            [-122.031827, 37.993685],\n            [-122.031997, 37.99345],\n            [-122.032141, 37.99325],\n            [-122.032285, 37.993048],\n            [-122.032442, 37.992816],\n            [-122.032583, 37.992598],\n            [-122.032652, 37.992485],\n            [-122.032726, 37.992358],\n            [-122.032846, 37.992139],\n            [-122.032926, 37.991986],\n            [-122.033011, 37.991807],\n            [-122.033088, 37.991637],\n            [-122.033156, 37.99147],\n            [-122.033223, 37.991295],\n            [-122.033284, 37.991123],\n            [-122.033344, 37.990938],\n            [-122.033396, 37.990756],\n            [-122.033422, 37.990656],\n            [-122.033454, 37.990521],\n            [-122.033503, 37.990288],\n            [-122.033543, 37.990063],\n            [-122.033572, 37.989836],\n            [-122.033576, 37.989801],\n            [-122.033594, 37.989496],\n            [-122.033606, 37.9893],\n            [-122.033608, 37.989183],\n            [-122.03361, 37.989022],\n            [-122.033606, 37.988848],\n            [-122.033596, 37.988684],\n            [-122.033583, 37.988529],\n            [-122.033567, 37.988374],\n            [-122.033544, 37.988195],\n            [-122.033524, 37.988076],\n            [-122.033494, 37.987894],\n            [-122.033465, 37.987749],\n            [-122.033406, 37.987515],\n            [-122.033336, 37.987262],\n            [-122.033277, 37.987087],\n            [-122.033176, 37.986795],\n            [-122.033066, 37.986501],\n            [-122.032884, 37.986057],\n            [-122.032782, 37.985814],\n            [-122.032673, 37.985558],\n            [-122.032566, 37.985305],\n            [-122.032466, 37.985074],\n            [-122.032339, 37.984774],\n            [-122.032246, 37.984552],\n            [-122.032128, 37.984277],\n            [-122.032074, 37.984151],\n            [-122.031941, 37.983837],\n            [-122.031813, 37.983541],\n            [-122.0317, 37.983267],\n            [-122.031642, 37.983134],\n            [-122.03159, 37.983009],\n            [-122.031521, 37.982852],\n            [-122.031437, 37.982651],\n            [-122.031284, 37.982289],\n            [-122.031154, 37.981975],\n            [-122.03108, 37.981803],\n            [-122.031004, 37.981624],\n            [-122.03087, 37.981305],\n            [-122.030754, 37.981029],\n            [-122.03063, 37.980742],\n            [-122.030506, 37.980451],\n            [-122.030448, 37.980322],\n            [-122.030372, 37.980158],\n            [-122.030297, 37.979999],\n            [-122.030255, 37.979918],\n            [-122.030232, 37.97987],\n            [-122.030155, 37.97973],\n            [-122.030078, 37.979592],\n            [-122.029968, 37.979416],\n            [-122.029916, 37.979332],\n            [-122.029858, 37.979243],\n            [-122.029822, 37.979191],\n            [-122.029779, 37.979128],\n            [-122.029734, 37.979063],\n            [-122.029696, 37.979011],\n            [-122.029613, 37.978894],\n            [-122.029577, 37.978846],\n            [-122.029555, 37.978813],\n            [-122.029516, 37.978762],\n            [-122.029494, 37.978732],\n            [-122.029475, 37.978706],\n            [-122.02945, 37.978672],\n            [-122.02943, 37.978644],\n            [-122.029413, 37.978621],\n            [-122.029398, 37.978603],\n            [-122.029381, 37.978579],\n            [-122.029296, 37.978464],\n            [-122.029225, 37.97837],\n            [-122.029165, 37.978289],\n            [-122.029068, 37.978157],\n            [-122.029045, 37.978128],\n            [-122.029019, 37.97809],\n            [-122.029009, 37.978077],\n            [-122.028998, 37.978065],\n            [-122.028982, 37.978042],\n            [-122.028967, 37.978024],\n            [-122.028956, 37.978007],\n            [-122.028936, 37.977978],\n            [-122.028902, 37.97793],\n            [-122.028862, 37.977876],\n            [-122.028819, 37.977812],\n            [-122.02878, 37.977756],\n            [-122.028722, 37.977667],\n            [-122.028649, 37.977548],\n            [-122.02862, 37.977497],\n            [-122.028565, 37.977386],\n            [-122.028527, 37.977311],\n            [-122.028499, 37.977249],\n            [-122.028458, 37.977152],\n            [-122.028427, 37.977059],\n            [-122.028385, 37.976924],\n            [-122.028361, 37.976832],\n            [-122.028332, 37.976699],\n            [-122.028315, 37.976598],\n            [-122.028302, 37.976504],\n            [-122.028289, 37.976372],\n            [-122.028281, 37.976257],\n            [-122.028273, 37.976102],\n            [-122.028277, 37.97599],\n            [-122.028282, 37.975917],\n            [-122.028297, 37.975822],\n            [-122.028317, 37.975692],\n            [-122.028363, 37.975495],\n            [-122.028398, 37.97538],\n            [-122.028425, 37.975301],\n            [-122.028437, 37.975263],\n            [-122.028455, 37.975212],\n            [-122.028476, 37.975155],\n            [-122.028485, 37.97513],\n            [-122.028501, 37.975094],\n            [-122.028507, 37.975079],\n            [-122.028514, 37.975066],\n            [-122.028526, 37.975037],\n            [-122.028535, 37.975017],\n            [-122.028543, 37.974995],\n            [-122.02855, 37.974971],\n            [-122.028561, 37.974941],\n            [-122.02859, 37.974878],\n            [-122.028669, 37.974696],\n            [-122.028749, 37.974538],\n            [-122.028823, 37.974372],\n            [-122.028913, 37.974168],\n            [-122.028976, 37.974023],\n            [-122.02905, 37.973841],\n            [-122.029177, 37.973532],\n            [-122.029447, 37.972906],\n            [-122.029506, 37.972792],\n            [-122.029548, 37.972709],\n            [-122.029641, 37.972496],\n            [-122.029753, 37.97223],\n            [-122.029834, 37.97204],\n            [-122.029901, 37.97189],\n            [-122.030006, 37.971655],\n            [-122.030049, 37.971567],\n            [-122.030071, 37.971525],\n            [-122.030117, 37.971418],\n            [-122.030184, 37.971265],\n            [-122.030245, 37.971121],\n            [-122.030273, 37.97105],\n            [-122.030301, 37.970982],\n            [-122.03034, 37.970893],\n            [-122.030397, 37.970764],\n            [-122.030466, 37.970607],\n            [-122.0305, 37.97052],\n            [-122.030517, 37.970481],\n            [-122.030544, 37.970415],\n            [-122.030564, 37.970373],\n            [-122.030596, 37.970301],\n            [-122.030645, 37.970173],\n            [-122.030681, 37.970087],\n            [-122.030705, 37.970022],\n            [-122.030757, 37.969912],\n            [-122.030799, 37.96981],\n            [-122.030852, 37.96967],\n            [-122.030892, 37.969562],\n            [-122.030944, 37.969422],\n            [-122.030996, 37.969283],\n            [-122.031036, 37.969181],\n            [-122.031057, 37.969118],\n            [-122.031085, 37.969033],\n            [-122.031093, 37.969004],\n            [-122.031105, 37.968969],\n            [-122.031114, 37.968943],\n            [-122.031119, 37.968926],\n            [-122.031126, 37.968905],\n            [-122.031132, 37.968882],\n            [-122.031142, 37.968849],\n            [-122.031156, 37.968801],\n            [-122.03117, 37.968755],\n            [-122.031174, 37.968743],\n            [-122.031183, 37.968707],\n            [-122.031191, 37.968675],\n            [-122.031212, 37.968598],\n            [-122.03122, 37.968569],\n            [-122.031227, 37.96854],\n            [-122.031233, 37.968514],\n            [-122.03124, 37.96849],\n            [-122.031245, 37.968472],\n            [-122.031251, 37.968445],\n            [-122.031255, 37.968426],\n            [-122.03126, 37.968402],\n            [-122.031266, 37.968378],\n            [-122.031271, 37.968353],\n            [-122.031276, 37.968327],\n            [-122.031282, 37.968292],\n            [-122.031289, 37.968263],\n            [-122.031293, 37.968242],\n            [-122.031297, 37.96822],\n            [-122.031301, 37.968197],\n            [-122.031305, 37.968176],\n            [-122.03131, 37.968152],\n            [-122.031314, 37.968129],\n            [-122.031317, 37.96811],\n            [-122.031321, 37.968089],\n            [-122.031324, 37.968076],\n            [-122.031327, 37.968062],\n            [-122.031329, 37.96805],\n            [-122.031332, 37.968032],\n            [-122.031335, 37.96801],\n            [-122.031338, 37.967993],\n            [-122.031343, 37.967961],\n            [-122.031347, 37.96793],\n            [-122.031349, 37.967915],\n            [-122.031352, 37.967891],\n            [-122.031354, 37.967873],\n            [-122.031357, 37.967853],\n            [-122.031359, 37.967838],\n            [-122.03136, 37.967826],\n            [-122.031363, 37.967805],\n            [-122.031366, 37.967786],\n            [-122.031368, 37.967767],\n            [-122.031369, 37.967751],\n            [-122.031373, 37.967724],\n            [-122.031375, 37.967707],\n            [-122.031377, 37.96769],\n            [-122.031379, 37.967666],\n            [-122.031382, 37.967642],\n            [-122.031384, 37.967621],\n            [-122.031386, 37.967602],\n            [-122.031388, 37.967588],\n            [-122.03139, 37.967566],\n            [-122.031391, 37.967545],\n            [-122.031393, 37.967525],\n            [-122.031395, 37.967502],\n            [-122.031397, 37.96748],\n            [-122.031399, 37.967463],\n            [-122.031401, 37.967436],\n            [-122.031404, 37.967403],\n            [-122.031406, 37.967362],\n            [-122.031408, 37.967328],\n            [-122.03141, 37.967292],\n            [-122.031412, 37.967258],\n            [-122.031414, 37.967214],\n            [-122.031415, 37.967187],\n            [-122.031416, 37.967168],\n            [-122.031417, 37.967141],\n            [-122.031418, 37.967096],\n            [-122.031421, 37.967005],\n            [-122.031421, 37.966932],\n            [-122.031422, 37.96688],\n            [-122.031422, 37.966844],\n            [-122.031422, 37.966818],\n            [-122.031421, 37.966793],\n            [-122.03142, 37.966776],\n            [-122.031419, 37.966742],\n            [-122.031418, 37.966715],\n            [-122.031418, 37.966673],\n            [-122.031416, 37.966641],\n            [-122.031414, 37.966595],\n            [-122.031411, 37.966552],\n            [-122.031407, 37.966459],\n            [-122.031404, 37.966417],\n            [-122.031401, 37.966357],\n            [-122.031396, 37.966288],\n            [-122.03139, 37.966219],\n            [-122.031383, 37.966143],\n            [-122.031373, 37.966073],\n            [-122.031366, 37.96601],\n            [-122.031357, 37.965943],\n            [-122.031351, 37.965904],\n            [-122.031346, 37.965868],\n            [-122.03134, 37.965837],\n            [-122.031336, 37.965808],\n            [-122.031326, 37.965747],\n            [-122.031304, 37.965629],\n            [-122.031285, 37.965546],\n            [-122.03128, 37.965518],\n            [-122.03127, 37.965474],\n            [-122.03125, 37.965388],\n            [-122.031209, 37.965223],\n            [-122.031178, 37.965118],\n            [-122.031139, 37.964994],\n            [-122.0311, 37.964873],\n            [-122.031052, 37.964731],\n            [-122.030978, 37.964522],\n            [-122.030912, 37.964355],\n            [-122.030833, 37.964146],\n            [-122.030788, 37.964035],\n            [-122.030745, 37.963927],\n            [-122.030729, 37.963886],\n            [-122.030703, 37.96382],\n            [-122.030657, 37.96371],\n            [-122.030575, 37.963524],\n            [-122.030531, 37.96341],\n            [-122.030474, 37.963254],\n            [-122.030417, 37.963108],\n            [-122.030371, 37.96299],\n            [-122.030313, 37.962844],\n            [-122.030234, 37.962649],\n            [-122.030175, 37.962502],\n            [-122.030122, 37.962367],\n            [-122.030044, 37.962167],\n            [-122.029973, 37.961995],\n            [-122.029899, 37.961811],\n            [-122.029821, 37.961613],\n            [-122.029687, 37.961274],\n            [-122.029537, 37.960899],\n            [-122.029496, 37.960799],\n            [-122.029292, 37.96029],\n            [-122.029097, 37.959802],\n            [-122.028931, 37.959381],\n            [-122.028776, 37.959001],\n            [-122.028643, 37.958666],\n            [-122.028194, 37.957541],\n            [-122.027773, 37.956486],\n            [-122.027168, 37.95498],\n            [-122.026893, 37.954328],\n            [-122.026552, 37.953546],\n            [-122.026283, 37.952933],\n            [-122.026082, 37.952465],\n            [-122.025991, 37.952245],\n            [-122.025824, 37.951824],\n            [-122.025655, 37.951438],\n            [-122.025597, 37.951264],\n            [-122.025457, 37.950904],\n            [-122.02532, 37.950553],\n            [-122.025247, 37.950361],\n            [-122.025161, 37.950118],\n            [-122.025134, 37.950042],\n            [-122.025078, 37.949857],\n            [-122.025008, 37.94961],\n            [-122.024986, 37.949495],\n            [-122.024956, 37.949362],\n            [-122.024921, 37.94917],\n            [-122.024889, 37.948918],\n            [-122.024875, 37.948681],\n            [-122.024868, 37.948419],\n            [-122.024876, 37.948247],\n            [-122.024882, 37.948137],\n            [-122.024891, 37.948034],\n            [-122.024915, 37.947829],\n            [-122.024956, 37.947611],\n            [-122.024996, 37.947429],\n            [-122.025018, 37.947326],\n            [-122.025064, 37.947173],\n            [-122.025117, 37.947005],\n            [-122.025205, 37.946765],\n            [-122.02538, 37.946375],\n            [-122.025441, 37.946257],\n            [-122.025523, 37.94611],\n            [-122.025604, 37.945977],\n            [-122.025727, 37.945789],\n            [-122.025847, 37.945617],\n            [-122.026003, 37.945413],\n            [-122.026147, 37.945243],\n            [-122.026314, 37.945063],\n            [-122.026501, 37.944873],\n            [-122.026633, 37.944749],\n            [-122.02667, 37.944717],\n            [-122.026777, 37.944622],\n            [-122.027002, 37.94444],\n            [-122.027186, 37.9443],\n            [-122.027358, 37.944178],\n            [-122.027635, 37.943997],\n            [-122.027835, 37.943876],\n            [-122.028005, 37.943777],\n            [-122.028411, 37.943553],\n            [-122.028725, 37.943386],\n            [-122.029026, 37.94323],\n            [-122.02917, 37.943155],\n            [-122.029623, 37.942923],\n            [-122.029932, 37.942764],\n            [-122.030779, 37.942327],\n            [-122.031436, 37.941989],\n            [-122.032056, 37.941668],\n            [-122.0329, 37.941234],\n            [-122.033731, 37.940806],\n            [-122.034252, 37.940538],\n            [-122.034962, 37.940173],\n            [-122.035604, 37.939842],\n            [-122.03631, 37.939478],\n            [-122.037001, 37.939123],\n            [-122.037792, 37.938716],\n            [-122.038461, 37.93837],\n            [-122.039014, 37.938086],\n            [-122.039425, 37.937874],\n            [-122.04021, 37.93747],\n            [-122.040958, 37.937085],\n            [-122.041682, 37.936713],\n            [-122.042314, 37.936386],\n            [-122.043008, 37.936028],\n            [-122.043736, 37.935653],\n            [-122.04448, 37.935271],\n            [-122.045119, 37.934941],\n            [-122.045894, 37.934541],\n            [-122.046614, 37.93417],\n            [-122.046874, 37.934035],\n            [-122.04711, 37.933915],\n            [-122.047342, 37.933796],\n            [-122.047998, 37.933456],\n            [-122.048771, 37.933055],\n            [-122.049464, 37.932703],\n            [-122.050202, 37.93232],\n            [-122.050837, 37.931991],\n            [-122.05118, 37.931818],\n            [-122.051502, 37.931646],\n            [-122.051814, 37.931467],\n            [-122.052129, 37.931285],\n            [-122.05244, 37.931096],\n            [-122.052729, 37.930911],\n            [-122.053008, 37.930724],\n            [-122.053296, 37.93052],\n            [-122.05357, 37.93032],\n            [-122.053868, 37.930092],\n            [-122.054121, 37.929895],\n            [-122.054361, 37.929705],\n            [-122.054593, 37.929521],\n            [-122.055089, 37.929129],\n            [-122.055619, 37.928707],\n            [-122.056244, 37.928208],\n            [-122.05647, 37.928033],\n            [-122.056722, 37.927837],\n            [-122.057279, 37.927393],\n            [-122.057696, 37.927061],\n            [-122.057855, 37.926933],\n            [-122.05804, 37.92678],\n            [-122.058216, 37.926635],\n            [-122.058403, 37.926469],\n            [-122.058554, 37.926333],\n            [-122.058817, 37.926078],\n            [-122.059009, 37.925877],\n            [-122.059179, 37.925686],\n            [-122.059314, 37.925523],\n            [-122.059395, 37.925421],\n            [-122.059477, 37.925312],\n            [-122.059556, 37.925203],\n            [-122.05962, 37.925112],\n            [-122.059743, 37.924921],\n            [-122.059868, 37.924717],\n            [-122.059981, 37.92451],\n            [-122.060046, 37.924384],\n            [-122.060111, 37.924247],\n            [-122.060178, 37.924106],\n            [-122.060236, 37.923973],\n            [-122.060295, 37.923831],\n            [-122.060358, 37.923674],\n            [-122.060454, 37.923416],\n            [-122.060536, 37.92319],\n            [-122.060644, 37.922884],\n            [-122.06078, 37.922499],\n            [-122.060897, 37.92216],\n            [-122.060987, 37.921901],\n            [-122.061017, 37.921815],\n            [-122.061041, 37.921745],\n            [-122.061071, 37.921666],\n            [-122.061195, 37.921303],\n            [-122.061333, 37.920914],\n            [-122.061504, 37.920448],\n            [-122.061695, 37.919982],\n            [-122.061817, 37.919706],\n            [-122.061928, 37.919469],\n            [-122.062064, 37.919196],\n            [-122.062192, 37.918943],\n            [-122.062299, 37.918736],\n            [-122.062327, 37.918687],\n            [-122.062471, 37.918407],\n            [-122.062555, 37.918243],\n            [-122.062633, 37.918086],\n            [-122.062708, 37.917938],\n            [-122.062784, 37.91778],\n            [-122.062855, 37.917628],\n            [-122.062926, 37.917467],\n            [-122.062988, 37.917323],\n            [-122.063052, 37.917164],\n            [-122.063109, 37.917009],\n            [-122.063168, 37.916848],\n            [-122.063221, 37.916687],\n            [-122.063271, 37.916535],\n            [-122.06335, 37.916259],\n            [-122.06344, 37.915883],\n            [-122.063484, 37.915677],\n            [-122.063517, 37.915499],\n            [-122.063579, 37.91509],\n            [-122.063642, 37.914584],\n            [-122.063711, 37.913988],\n            [-122.063759, 37.913583],\n            [-122.06382, 37.91308],\n            [-122.063873, 37.91274],\n            [-122.063904, 37.912556],\n            [-122.063959, 37.91229],\n            [-122.064019, 37.912056],\n            [-122.064078, 37.911834],\n            [-122.064133, 37.911658],\n            [-122.064186, 37.911493],\n            [-122.064231, 37.911363],\n            [-122.064281, 37.911226],\n            [-122.064362, 37.911021],\n            [-122.064456, 37.910802],\n            [-122.064548, 37.910601],\n            [-122.064633, 37.910421],\n            [-122.064704, 37.910279],\n            [-122.064781, 37.910128],\n            [-122.064867, 37.90997],\n            [-122.064951, 37.909823],\n            [-122.065061, 37.909621],\n            [-122.065168, 37.909435],\n            [-122.065297, 37.909212],\n            [-122.065406, 37.909031],\n            [-122.065497, 37.908876],\n            [-122.065705, 37.908513],\n            [-122.065934, 37.908128],\n            [-122.066039, 37.907949],\n            [-122.066252, 37.907593],\n            [-122.066313, 37.90749],\n            [-122.066378, 37.90738],\n            [-122.066518, 37.907146],\n            [-122.066837, 37.906625],\n            [-122.067124, 37.906142],\n            [-122.067453, 37.905586],\n            [-122.06768, 37.905209],\n            [-122.06785, 37.904925],\n            [-122.067963, 37.904732],\n            [-122.068106, 37.90449],\n            [-122.068172, 37.904377],\n            [-122.06837, 37.90404],\n            [-122.068521, 37.903785],\n            [-122.068696, 37.903488],\n            [-122.068846, 37.903233],\n            [-122.069023, 37.902935],\n            [-122.069233, 37.902581],\n            [-122.069374, 37.902342],\n            [-122.069546, 37.90206],\n            [-122.069745, 37.901742],\n            [-122.069955, 37.901435],\n            [-122.070226, 37.901058],\n            [-122.070387, 37.900856],\n            [-122.070531, 37.900686],\n            [-122.070698, 37.900507],\n            [-122.070853, 37.900347],\n            [-122.07097, 37.90023],\n            [-122.071092, 37.900117],\n            [-122.071225, 37.899993],\n            [-122.07137, 37.899868],\n            [-122.071467, 37.899781],\n            [-122.071596, 37.899679],\n            [-122.071826, 37.899498],\n            [-122.072064, 37.899326],\n            [-122.072297, 37.899169],\n            [-122.072422, 37.899091],\n            [-122.072551, 37.899008],\n            [-122.072811, 37.898856],\n            [-122.072935, 37.898786],\n            [-122.07307, 37.898712],\n            [-122.073338, 37.898578],\n            [-122.073473, 37.898513],\n            [-122.073625, 37.898447],\n            [-122.073896, 37.898319],\n            [-122.074181, 37.898201],\n            [-122.074426, 37.898107],\n            [-122.07464, 37.898032],\n            [-122.074892, 37.897949],\n            [-122.075117, 37.89788],\n            [-122.075421, 37.897795],\n            [-122.075666, 37.897735],\n            [-122.075937, 37.897674],\n            [-122.076224, 37.897615],\n            [-122.076442, 37.897576],\n            [-122.076568, 37.897555],\n            [-122.076814, 37.897519],\n            [-122.077104, 37.897482],\n            [-122.077399, 37.897452],\n            [-122.077705, 37.897429],\n            [-122.077981, 37.897416],\n            [-122.078272, 37.897409],\n            [-122.078572, 37.897406],\n            [-122.078865, 37.897412],\n            [-122.079159, 37.89743],\n            [-122.079336, 37.897433],\n            [-122.07943, 37.89744],\n            [-122.079926, 37.897488],\n            [-122.080699, 37.897578],\n            [-122.081421, 37.897673],\n            [-122.083043, 37.897865],\n            [-122.083481, 37.897906],\n            [-122.083709, 37.897931],\n            [-122.083917, 37.897949],\n            [-122.08412, 37.897966],\n            [-122.084325, 37.897983],\n            [-122.084931, 37.898011],\n            [-122.085042, 37.898017],\n            [-122.085254, 37.898012],\n            [-122.08556, 37.898012],\n            [-122.08585, 37.89801],\n            [-122.086564, 37.897997],\n            [-122.087033, 37.897984],\n            [-122.08768, 37.897964],\n            [-122.08832, 37.897946],\n            [-122.088961, 37.897927],\n            [-122.089679, 37.897907],\n            [-122.090239, 37.89789],\n            [-122.09084, 37.897871],\n            [-122.091431, 37.897855],\n            [-122.091908, 37.897842],\n            [-122.092559, 37.897824],\n            [-122.093164, 37.897805],\n            [-122.093314, 37.8978],\n            [-122.093488, 37.897795],\n            [-122.093626, 37.897791],\n            [-122.094135, 37.897777],\n            [-122.094551, 37.897764],\n            [-122.095063, 37.89775],\n            [-122.095476, 37.897737],\n            [-122.095941, 37.897724],\n            [-122.09632, 37.897713],\n            [-122.096785, 37.897698],\n            [-122.097061, 37.897686],\n            [-122.097323, 37.897674],\n            [-122.09755, 37.897661],\n            [-122.097964, 37.897631],\n            [-122.098179, 37.897614],\n            [-122.098377, 37.897595],\n            [-122.098681, 37.897566],\n            [-122.099021, 37.897527],\n            [-122.099365, 37.897483],\n            [-122.099709, 37.897435],\n            [-122.10006, 37.897382],\n            [-122.10031, 37.897343],\n            [-122.100744, 37.897273],\n            [-122.101295, 37.897183],\n            [-122.101782, 37.897103],\n            [-122.102573, 37.896973],\n            [-122.103007, 37.896902],\n            [-122.103468, 37.896827],\n            [-122.104145, 37.896717],\n            [-122.104747, 37.896618],\n            [-122.105289, 37.89653],\n            [-122.105754, 37.896454],\n            [-122.106463, 37.896337],\n            [-122.106742, 37.896291],\n            [-122.107287, 37.896201],\n            [-122.107736, 37.896128],\n            [-122.108122, 37.896064],\n            [-122.108822, 37.89595],\n            [-122.109287, 37.895875],\n            [-122.110045, 37.89575],\n            [-122.110363, 37.895698],\n            [-122.110735, 37.895635],\n            [-122.111323, 37.895541],\n            [-122.111839, 37.895457],\n            [-122.112545, 37.895345],\n            [-122.112906, 37.89529],\n            [-122.113536, 37.895201],\n            [-122.113836, 37.895153],\n            [-122.115183, 37.894937],\n            [-122.116589, 37.894701],\n            [-122.117119, 37.894617],\n            [-122.117675, 37.894523],\n            [-122.118452, 37.894397],\n            [-122.119625, 37.894206],\n            [-122.120367, 37.89409],\n            [-122.120872, 37.894005],\n            [-122.121193, 37.893954],\n            [-122.121403, 37.893915],\n            [-122.121903, 37.89383],\n            [-122.122213, 37.893769],\n            [-122.122628, 37.893677],\n            [-122.122909, 37.893606],\n            [-122.123403, 37.893484],\n            [-122.124118, 37.893311],\n            [-122.12495, 37.893104],\n            [-122.125285, 37.893019],\n            [-122.125808, 37.892903],\n            [-122.126042, 37.892839],\n            [-122.126427, 37.892744],\n            [-122.127333, 37.892528],\n            [-122.127831, 37.892398],\n            [-122.128357, 37.892274],\n            [-122.128562, 37.892222],\n            [-122.128766, 37.892165],\n            [-122.129335, 37.892021],\n            [-122.129545, 37.891966],\n            [-122.129806, 37.891897],\n            [-122.130207, 37.891793],\n            [-122.130382, 37.89175],\n            [-122.131627, 37.891443],\n            [-122.132914, 37.891131],\n            [-122.133472, 37.890998],\n            [-122.133882, 37.890906],\n            [-122.134253, 37.890829],\n            [-122.134444, 37.890794],\n            [-122.13467, 37.890756],\n            [-122.134915, 37.890719],\n            [-122.135158, 37.890689],\n            [-122.135349, 37.89067],\n            [-122.135582, 37.89065],\n            [-122.135962, 37.890629],\n            [-122.136245, 37.890623],\n            [-122.136644, 37.890627],\n            [-122.137026, 37.890646],\n            [-122.137212, 37.890659],\n            [-122.137401, 37.890675],\n            [-122.13773, 37.890712],\n            [-122.137928, 37.890737],\n            [-122.138236, 37.890783],\n            [-122.138664, 37.890853],\n            [-122.139894, 37.891076],\n            [-122.140433, 37.891173],\n            [-122.141124, 37.891287],\n            [-122.141428, 37.89133],\n            [-122.141695, 37.891364],\n            [-122.142026, 37.8914],\n            [-122.142256, 37.89142],\n            [-122.142363, 37.891428],\n            [-122.142603, 37.891441],\n            [-122.142884, 37.891453],\n            [-122.143173, 37.891458],\n            [-122.143432, 37.891456],\n            [-122.143614, 37.891455],\n            [-122.143783, 37.891449],\n            [-122.144097, 37.891434],\n            [-122.14452, 37.891406],\n            [-122.145264, 37.891339],\n            [-122.145699, 37.8913],\n            [-122.146021, 37.89127],\n            [-122.146321, 37.891245],\n            [-122.146627, 37.891222],\n            [-122.146881, 37.891205],\n            [-122.147078, 37.891194],\n            [-122.147274, 37.891186],\n            [-122.147564, 37.891178],\n            [-122.147984, 37.891177],\n            [-122.148174, 37.89118],\n            [-122.148425, 37.89119],\n            [-122.148708, 37.891205],\n            [-122.149008, 37.891228],\n            [-122.149326, 37.89126],\n            [-122.149509, 37.891281],\n            [-122.149724, 37.891307],\n            [-122.149939, 37.891335],\n            [-122.150395, 37.8914],\n            [-122.150773, 37.891456],\n            [-122.152034, 37.891647],\n            [-122.153092, 37.891808],\n            [-122.153961, 37.89194],\n            [-122.15428, 37.891987],\n            [-122.154442, 37.892011],\n            [-122.154684, 37.892048],\n            [-122.156106, 37.892264],\n            [-122.156886, 37.892382],\n            [-122.157639, 37.892495],\n            [-122.158295, 37.892597],\n            [-122.158883, 37.892685],\n            [-122.159525, 37.892771],\n            [-122.160152, 37.892842],\n            [-122.160362, 37.892863],\n            [-122.160584, 37.892883],\n            [-122.160983, 37.892914],\n            [-122.161209, 37.892928],\n            [-122.161427, 37.892941],\n            [-122.161788, 37.892956],\n            [-122.16202, 37.892966],\n            [-122.162237, 37.892971],\n            [-122.162843, 37.892977],\n            [-122.163443, 37.892969],\n            [-122.163803, 37.892959],\n            [-122.163997, 37.89295],\n            [-122.164168, 37.892941],\n            [-122.164748, 37.892906],\n            [-122.164954, 37.892889],\n            [-122.165192, 37.892869],\n            [-122.165395, 37.892848],\n            [-122.165963, 37.892787],\n            [-122.166357, 37.892737],\n            [-122.16679, 37.892673],\n            [-122.167103, 37.892625],\n            [-122.167703, 37.892517],\n            [-122.168181, 37.892423],\n            [-122.168619, 37.892326],\n            [-122.169012, 37.892231],\n            [-122.169292, 37.892162],\n            [-122.169577, 37.892085],\n            [-122.170122, 37.891931],\n            [-122.170348, 37.891863],\n            [-122.170679, 37.89176],\n            [-122.170928, 37.891676],\n            [-122.171169, 37.891598],\n            [-122.171346, 37.891532],\n            [-122.171523, 37.891469],\n            [-122.17171, 37.8914],\n            [-122.17207, 37.891259],\n            [-122.17235, 37.891142],\n            [-122.172659, 37.891005],\n            [-122.172857, 37.890914],\n            [-122.172967, 37.890863],\n            [-122.173243, 37.890727],\n            [-122.173438, 37.890625],\n            [-122.173613, 37.890532],\n            [-122.173756, 37.890453],\n            [-122.173961, 37.890337],\n            [-122.174309, 37.890128],\n            [-122.17455, 37.889975],\n            [-122.174793, 37.889815],\n            [-122.175003, 37.889669],\n            [-122.17512, 37.889586],\n            [-122.175233, 37.889504],\n            [-122.175375, 37.889397],\n            [-122.175491, 37.889308],\n            [-122.175728, 37.889122],\n            [-122.175947, 37.888936],\n            [-122.176169, 37.88874],\n            [-122.176403, 37.888529],\n            [-122.176594, 37.888345],\n            [-122.176726, 37.888213],\n            [-122.177005, 37.88792],\n            [-122.177185, 37.887721],\n            [-122.177404, 37.887464],\n            [-122.17751, 37.887334],\n            [-122.177607, 37.887212],\n            [-122.177831, 37.886916],\n            [-122.177958, 37.886737],\n            [-122.178057, 37.886592],\n            [-122.178133, 37.886478],\n            [-122.178166, 37.886428],\n            [-122.178221, 37.886328],\n            [-122.178249, 37.886286],\n            [-122.178282, 37.886231],\n            [-122.178491, 37.885903],\n            [-122.178658, 37.885629],\n            [-122.178805, 37.885391],\n            [-122.178936, 37.885179],\n            [-122.179086, 37.884933],\n            [-122.179286, 37.884618],\n            [-122.179609, 37.884089],\n            [-122.179896, 37.88362],\n            [-122.180111, 37.883276],\n            [-122.180331, 37.882937],\n            [-122.18064, 37.882486],\n            [-122.180931, 37.882091],\n            [-122.18106, 37.881908],\n            [-122.181226, 37.881703],\n            [-122.181584, 37.881226],\n            [-122.181925, 37.880777],\n            [-122.182287, 37.880304],\n            [-122.18262, 37.879865],\n            [-122.183026, 37.879327],\n            [-122.18341, 37.878845],\n            [-122.183629, 37.878562],\n            [-122.183821, 37.878329],\n            [-122.184077, 37.878018],\n            [-122.184302, 37.877691],\n            [-122.184466, 37.877463],\n            [-122.184618, 37.877259],\n            [-122.184736, 37.877106],\n            [-122.184881, 37.876927],\n            [-122.185022, 37.876763],\n            [-122.185167, 37.876611],\n            [-122.185308, 37.876457],\n            [-122.18547, 37.876306],\n            [-122.185633, 37.876164],\n            [-122.185768, 37.87604],\n            [-122.185975, 37.875879],\n            [-122.186184, 37.875725],\n            [-122.186388, 37.875574],\n            [-122.186626, 37.875423],\n            [-122.187309, 37.874958],\n            [-122.187429, 37.874876],\n            [-122.187586, 37.874776],\n            [-122.187872, 37.874583],\n            [-122.18847, 37.874243],\n            [-122.189997, 37.873426],\n            [-122.193628, 37.871592],\n            [-122.194625, 37.871135],\n            [-122.196606, 37.870307],\n            [-122.200967, 37.868313],\n            [-122.202143, 37.867772],\n            [-122.202946, 37.867403],\n            [-122.203586, 37.867107],\n            [-122.204374, 37.866714],\n            [-122.205596, 37.866208],\n            [-122.206474, 37.865838],\n            [-122.207471, 37.86537],\n            [-122.208153, 37.86506],\n            [-122.208629, 37.864843],\n            [-122.209415, 37.864488],\n            [-122.209843, 37.864253],\n            [-122.21151, 37.863523],\n            [-122.213367, 37.862676],\n            [-122.214723, 37.861989],\n            [-122.216104, 37.861378],\n            [-122.217319, 37.860864],\n            [-122.217962, 37.860569],\n            [-122.218938, 37.860135],\n            [-122.219915, 37.859701],\n            [-122.221355, 37.859134],\n            [-122.238479, 37.85134],\n            [-122.239586, 37.850655],\n            [-122.240056, 37.850393],\n            [-122.24046, 37.850169],\n            [-122.240901, 37.849925],\n            [-122.241351, 37.849656],\n            [-122.241571, 37.849537],\n            [-122.241747, 37.849444],\n            [-122.241906, 37.849356],\n            [-122.242039, 37.84928],\n            [-122.242168, 37.849198],\n            [-122.24231, 37.849119],\n            [-122.242393, 37.849075],\n            [-122.24309, 37.848686],\n            [-122.244161, 37.848091],\n            [-122.244611, 37.847838],\n            [-122.245911, 37.847108],\n            [-122.246404, 37.846842],\n            [-122.24683, 37.846623],\n            [-122.247307, 37.846394],\n            [-122.247714, 37.846214],\n            [-122.248267, 37.845983],\n            [-122.248551, 37.845869],\n            [-122.250023, 37.845295],\n            [-122.251032, 37.844906],\n            [-122.25165, 37.844656],\n            [-122.251927, 37.84455],\n            [-122.252371, 37.84438],\n            [-122.252694, 37.844257],\n            [-122.253644, 37.843886],\n            [-122.254002, 37.843748],\n            [-122.254171, 37.843683],\n            [-122.254359, 37.843613],\n            [-122.254953, 37.843397],\n            [-122.255366, 37.843258],\n            [-122.25581, 37.843113],\n            [-122.256061, 37.843031],\n            [-122.256377, 37.842936],\n            [-122.256568, 37.842878],\n            [-122.256817, 37.842799],\n            [-122.257179, 37.842685],\n            [-122.257785, 37.842494],\n            [-122.258124, 37.842388],\n            [-122.258415, 37.8423],\n            [-122.261228, 37.841409],\n            [-122.261533, 37.841308],\n            [-122.26165, 37.841266],\n            [-122.261805, 37.841212],\n            [-122.262011, 37.841133],\n            [-122.262221, 37.841049],\n            [-122.262335, 37.841001],\n            [-122.262437, 37.840953],\n            [-122.262577, 37.84089],\n            [-122.262721, 37.840818],\n            [-122.262872, 37.840737],\n            [-122.263007, 37.840665],\n            [-122.263158, 37.840567],\n            [-122.263312, 37.840471],\n            [-122.263383, 37.840424],\n            [-122.263466, 37.840369],\n            [-122.26358, 37.840286],\n            [-122.263696, 37.8402],\n            [-122.263846, 37.840079],\n            [-122.263985, 37.839962],\n            [-122.264121, 37.83984],\n            [-122.264219, 37.839736],\n            [-122.264333, 37.839628],\n            [-122.264435, 37.839517],\n            [-122.264553, 37.839378],\n            [-122.264616, 37.839303],\n            [-122.2647, 37.839194],\n            [-122.264797, 37.839055],\n            [-122.264888, 37.838934],\n            [-122.264962, 37.838812],\n            [-122.265035, 37.838697],\n            [-122.265115, 37.838542],\n            [-122.265151, 37.838467],\n            [-122.265228, 37.83831],\n            [-122.265286, 37.838169],\n            [-122.265343, 37.838018],\n            [-122.265376, 37.837926],\n            [-122.265434, 37.837748],\n            [-122.265506, 37.837498],\n            [-122.265559, 37.837282],\n            [-122.265609, 37.837041],\n            [-122.265703, 37.836541],\n            [-122.265822, 37.835868],\n            [-122.265861, 37.835581],\n            [-122.265932, 37.835121],\n            [-122.265967, 37.834891],\n            [-122.26608, 37.834117],\n            [-122.266182, 37.833521],\n            [-122.266209, 37.833347],\n            [-122.266223, 37.833272]\n          ],\n          [\n            [-122.266223, 37.833272],\n            [-122.266242, 37.833187],\n            [-122.266289, 37.832956],\n            [-122.266551, 37.831691],\n            [-122.266637, 37.831245],\n            [-122.26672, 37.830865],\n            [-122.266969, 37.829645],\n            [-122.266993, 37.829541],\n            [-122.26701, 37.829461],\n            [-122.2674, 37.827569],\n            [-122.267504, 37.827066],\n            [-122.267547, 37.826888],\n            [-122.267602, 37.826666],\n            [-122.26769, 37.826358],\n            [-122.267849, 37.825838],\n            [-122.268149, 37.824951],\n            [-122.268228, 37.824702],\n            [-122.268284, 37.824541],\n            [-122.268331, 37.824388],\n            [-122.26836, 37.824292],\n            [-122.268384, 37.824222],\n            [-122.26841, 37.824145],\n            [-122.26843, 37.824084],\n            [-122.268459, 37.823999],\n            [-122.268482, 37.823931],\n            [-122.2685, 37.823877],\n            [-122.268547, 37.823729],\n            [-122.26858, 37.823624],\n            [-122.268612, 37.82349],\n            [-122.268674, 37.823233],\n            [-122.268719, 37.823044],\n            [-122.268774, 37.822819],\n            [-122.268855, 37.822479],\n            [-122.268918, 37.822252],\n            [-122.269016, 37.821886],\n            [-122.269583, 37.819828],\n            [-122.269692, 37.819431],\n            [-122.269854, 37.818831],\n            [-122.27016, 37.817787],\n            [-122.270474, 37.816811],\n            [-122.270625, 37.816364],\n            [-122.270726, 37.816043],\n            [-122.270784, 37.815843],\n            [-122.270811, 37.815732],\n            [-122.270865, 37.815487],\n            [-122.270876, 37.815432],\n            [-122.270896, 37.815301],\n            [-122.27093, 37.81504],\n            [-122.270936, 37.814932],\n            [-122.270938, 37.814854],\n            [-122.270938, 37.814854],\n            [-122.270858, 37.814403],\n            [-122.270767, 37.814035],\n            [-122.270547, 37.813539],\n            [-122.270027, 37.812683],\n            [-122.268951, 37.811691],\n            [-122.267838, 37.810589],\n            [-122.267688, 37.810365],\n            [-122.267591, 37.810093],\n            [-122.268034, 37.809454],\n            [-122.268034, 37.809454],\n            [-122.268106, 37.809342],\n            [-122.268211, 37.809176],\n            [-122.268251, 37.809113],\n            [-122.26828, 37.809066],\n            [-122.268426, 37.808835],\n            [-122.269092, 37.80776],\n            [-122.269489, 37.807113],\n            [-122.269779, 37.80664],\n            [-122.270603, 37.805288],\n            [-122.271205, 37.8043],\n            [-122.271335, 37.804087],\n            [-122.271633, 37.803634],\n            [-122.27206, 37.802936],\n            [-122.272386, 37.802362]\n          ],\n          [\n            [-122.276856, 37.798527],\n            [-122.276827, 37.798521],\n            [-122.276602, 37.798505],\n            [-122.276496, 37.798504],\n            [-122.276426, 37.798505],\n            [-122.27637, 37.798508],\n            [-122.276299, 37.798511],\n            [-122.276219, 37.798509],\n            [-122.276139, 37.798509],\n            [-122.27606, 37.798511],\n            [-122.27598, 37.798516],\n            [-122.2759, 37.798523],\n            [-122.275821, 37.798533],\n            [-122.275742, 37.798546],\n            [-122.275664, 37.798561],\n            [-122.275586, 37.798578],\n            [-122.275509, 37.798598],\n            [-122.275432, 37.79862],\n            [-122.275356, 37.798644],\n            [-122.275281, 37.798671],\n            [-122.275207, 37.798701],\n            [-122.275133, 37.798732],\n            [-122.275061, 37.798766],\n            [-122.27499, 37.798803],\n            [-122.27492, 37.798841],\n            [-122.274851, 37.798882],\n            [-122.274783, 37.798924],\n            [-122.274717, 37.798969],\n            [-122.274653, 37.799016],\n            [-122.27459, 37.799065],\n            [-122.274528, 37.799116],\n            [-122.274468, 37.799169],\n            [-122.27441, 37.799223],\n            [-122.274354, 37.79928],\n            [-122.274299, 37.799338],\n            [-122.274246, 37.799398],\n            [-122.274239, 37.799405],\n            [-122.274232, 37.799413],\n            [-122.274225, 37.799421],\n            [-122.274218, 37.799429],\n            [-122.274211, 37.799437],\n            [-122.274204, 37.799445],\n            [-122.274198, 37.799452],\n            [-122.274191, 37.79946],\n            [-122.274184, 37.799468],\n            [-122.274177, 37.799476],\n            [-122.274171, 37.799484],\n            [-122.274164, 37.799492],\n            [-122.274157, 37.7995],\n            [-122.274151, 37.799508],\n            [-122.274144, 37.799516],\n            [-122.274138, 37.799524],\n            [-122.274131, 37.799532],\n            [-122.274125, 37.799541],\n            [-122.274118, 37.799549],\n            [-122.274112, 37.799557],\n            [-122.274105, 37.799565],\n            [-122.274099, 37.799573],\n            [-122.274093, 37.799582],\n            [-122.274086, 37.79959],\n            [-122.27408, 37.799598],\n            [-122.274074, 37.799606],\n            [-122.274068, 37.799615],\n            [-122.274062, 37.799623],\n            [-122.274055, 37.799632],\n            [-122.273734, 37.800156],\n            [-122.273306, 37.800852],\n            [-122.27275, 37.80177],\n            [-122.27246, 37.802239],\n            [-122.272386, 37.802362]\n          ],\n          [\n            [-122.469106, 37.706105],\n            [-122.468903, 37.706333],\n            [-122.468809, 37.706437],\n            [-122.468678, 37.706588],\n            [-122.468434, 37.706903],\n            [-122.468029, 37.707393],\n            [-122.467923, 37.707522],\n            [-122.467832, 37.707627],\n            [-122.466801, 37.708779],\n            [-122.466732, 37.708861],\n            [-122.46667, 37.708939],\n            [-122.4666, 37.709019],\n            [-122.466526, 37.709095],\n            [-122.466449, 37.709166],\n            [-122.466376, 37.709237],\n            [-122.466284, 37.709309],\n            [-122.466215, 37.709364],\n            [-122.466126, 37.709428],\n            [-122.466028, 37.709493],\n            [-122.465941, 37.709544],\n            [-122.465846, 37.709608],\n            [-122.465752, 37.709656],\n            [-122.465664, 37.709709],\n            [-122.465569, 37.709755],\n            [-122.465466, 37.709801],\n            [-122.465351, 37.709849],\n            [-122.465245, 37.70989],\n            [-122.465148, 37.709922],\n            [-122.465035, 37.709958],\n            [-122.464925, 37.709987],\n            [-122.46481, 37.710013],\n            [-122.464685, 37.710036],\n            [-122.464576, 37.71006],\n            [-122.464464, 37.710078],\n            [-122.464349, 37.710097],\n            [-122.464248, 37.710106],\n            [-122.464125, 37.710117],\n            [-122.464, 37.710122],\n            [-122.463871, 37.710128],\n            [-122.463753, 37.710132],\n            [-122.463654, 37.710127],\n            [-122.462673, 37.710117],\n            [-122.461932, 37.710109],\n            [-122.461456, 37.710106],\n            [-122.461205, 37.710107],\n            [-122.460612, 37.710103],\n            [-122.460513, 37.710103],\n            [-122.460089, 37.7101],\n            [-122.459798, 37.710097],\n            [-122.459371, 37.710095],\n            [-122.458818, 37.710096],\n            [-122.458429, 37.710097],\n            [-122.458239, 37.710103],\n            [-122.458046, 37.710114],\n            [-122.457854, 37.710123],\n            [-122.457689, 37.710132],\n            [-122.457494, 37.710148],\n            [-122.457301, 37.710168],\n            [-122.45712, 37.710193],\n            [-122.456943, 37.71022],\n            [-122.456714, 37.710261],\n            [-122.45647, 37.710314],\n            [-122.456253, 37.710367],\n            [-122.456029, 37.710421],\n            [-122.455812, 37.710483],\n            [-122.455588, 37.710559],\n            [-122.455342, 37.710654],\n            [-122.455158, 37.710734],\n            [-122.454985, 37.71082],\n            [-122.454815, 37.710906],\n            [-122.454757, 37.710939],\n            [-122.454638, 37.711002],\n            [-122.454466, 37.711098],\n            [-122.454306, 37.711201],\n            [-122.454132, 37.711315],\n            [-122.453978, 37.711421],\n            [-122.453808, 37.711542],\n            [-122.453514, 37.711768],\n            [-122.453207, 37.712002],\n            [-122.452952, 37.712213],\n            [-122.452635, 37.712477],\n            [-122.45215, 37.712868],\n            [-122.451705, 37.713224],\n            [-122.451441, 37.713439],\n            [-122.451107, 37.713707],\n            [-122.450884, 37.713896],\n            [-122.450715, 37.714043],\n            [-122.450556, 37.714184],\n            [-122.450426, 37.714317],\n            [-122.450264, 37.714469],\n            [-122.450109, 37.714616],\n            [-122.449961, 37.714764],\n            [-122.449842, 37.714875],\n            [-122.449687, 37.715039],\n            [-122.449586, 37.715155],\n            [-122.449493, 37.715256],\n            [-122.449409, 37.715351],\n            [-122.449317, 37.71545],\n            [-122.449226, 37.715551],\n            [-122.449141, 37.715654],\n            [-122.449058, 37.71576],\n            [-122.448989, 37.715852],\n            [-122.448913, 37.715962],\n            [-122.448844, 37.716072],\n            [-122.448783, 37.716173],\n            [-122.448722, 37.716283],\n            [-122.448661, 37.716398],\n            [-122.448609, 37.716502],\n            [-122.448567, 37.716602],\n            [-122.448514, 37.716725],\n            [-122.448431, 37.716914],\n            [-122.448349, 37.717127],\n            [-122.448303, 37.717282],\n            [-122.448233, 37.71749],\n            [-122.448165, 37.717655],\n            [-122.448122, 37.717956],\n            [-122.448092, 37.718172],\n            [-122.448092, 37.718314],\n            [-122.448061, 37.718552],\n            [-122.448055, 37.718621],\n            [-122.448051, 37.718656],\n            [-122.448034, 37.718801],\n            [-122.448005, 37.719277],\n            [-122.447846, 37.720179],\n            [-122.447631, 37.721123],\n            [-122.447624, 37.721147],\n            [-122.447593, 37.721264],\n            [-122.447372, 37.722221],\n            [-122.447196, 37.723],\n            [-122.446967, 37.723855],\n            [-122.446671, 37.724539],\n            [-122.446363, 37.725104],\n            [-122.446308, 37.725188],\n            [-122.446245, 37.72529],\n            [-122.446186, 37.725395],\n            [-122.44613, 37.725479],\n            [-122.446059, 37.725571],\n            [-122.445995, 37.725663],\n            [-122.44593, 37.725755],\n            [-122.445865, 37.725839],\n            [-122.445526, 37.726234],\n            [-122.445164, 37.726612],\n            [-122.445034, 37.726729],\n            [-122.444943, 37.726806],\n            [-122.444845, 37.726909],\n            [-122.444723, 37.727013],\n            [-122.44461, 37.727109],\n            [-122.444507, 37.727194],\n            [-122.444392, 37.727285],\n            [-122.444267, 37.727381],\n            [-122.443613, 37.727828],\n            [-122.443394, 37.727959],\n            [-122.44319, 37.728081],\n            [-122.442962, 37.728209],\n            [-122.442869, 37.728256],\n            [-122.442575, 37.728409],\n            [-122.442264, 37.72856],\n            [-122.441807, 37.728764],\n            [-122.441408, 37.728925],\n            [-122.440789, 37.729147],\n            [-122.43985, 37.729516],\n            [-122.439205, 37.72978],\n            [-122.43892, 37.72988],\n            [-122.438031, 37.730328],\n            [-122.437495, 37.730633],\n            [-122.437173, 37.730829],\n            [-122.436901, 37.731003],\n            [-122.43666, 37.731183],\n            [-122.436385, 37.731366],\n            [-122.436179, 37.731508],\n            [-122.43605, 37.731595],\n            [-122.435966, 37.731656],\n            [-122.435706, 37.731839],\n            [-122.435447, 37.732004],\n            [-122.435241, 37.732136],\n            [-122.435117, 37.732222],\n            [-122.435026, 37.732295],\n            [-122.434642, 37.732542],\n            [-122.434329, 37.732752],\n            [-122.433801, 37.733121],\n            [-122.433405, 37.733368],\n            [-122.432847, 37.733721],\n            [-122.432582, 37.733918],\n            [-122.431811, 37.734415],\n            [-122.431274, 37.734758],\n            [-122.430172, 37.735479],\n            [-122.428873, 37.736323],\n            [-122.427615, 37.737145],\n            [-122.426334, 37.737984],\n            [-122.425826, 37.738339],\n            [-122.425538, 37.738547],\n            [-122.425326, 37.738713],\n            [-122.424999, 37.73895],\n            [-122.424828, 37.739072],\n            [-122.424649, 37.739215],\n            [-122.424537, 37.739296],\n            [-122.424351, 37.739428],\n            [-122.42411, 37.739622],\n            [-122.424011, 37.739738],\n            [-122.423827, 37.739869],\n            [-122.423179, 37.740563],\n            [-122.422476, 37.741588],\n            [-122.422061, 37.742264],\n            [-122.420958, 37.743961],\n            [-122.419834, 37.745675],\n            [-122.419392, 37.746361],\n            [-122.418916, 37.747089],\n            [-122.418687, 37.747518],\n            [-122.41859, 37.747722],\n            [-122.418544, 37.747813],\n            [-122.41849, 37.747912],\n            [-122.418397, 37.748166],\n            [-122.41836, 37.748248],\n            [-122.418323, 37.748339],\n            [-122.41829, 37.748442],\n            [-122.418259, 37.748552],\n            [-122.418218, 37.748731],\n            [-122.418186, 37.748868],\n            [-122.41816, 37.749093],\n            [-122.418301, 37.75055],\n            [-122.41844, 37.752086],\n            [-122.418615, 37.753786],\n            [-122.418742, 37.755411],\n            [-122.4189, 37.756821],\n            [-122.418962, 37.757461],\n            [-122.419053, 37.758554],\n            [-122.419231, 37.76021],\n            [-122.419372, 37.761849],\n            [-122.419543, 37.763429],\n            [-122.41967, 37.764723],\n            [-122.419692, 37.765024],\n            [-122.419854, 37.766637],\n            [-122.419892, 37.767184],\n            [-122.419996, 37.768204],\n            [-122.420043, 37.768923],\n            [-122.420062, 37.769113],\n            [-122.420119, 37.769442],\n            [-122.420128, 37.769528],\n            [-122.42014, 37.769621],\n            [-122.420147, 37.76977],\n            [-122.420152, 37.769886],\n            [-122.420176, 37.770065],\n            [-122.420215, 37.770362],\n            [-122.420327, 37.771558],\n            [-122.420316, 37.771965],\n            [-122.420322, 37.772277],\n            [-122.420317, 37.772531],\n            [-122.420281, 37.772812],\n            [-122.420153, 37.773345],\n            [-122.420104, 37.773593],\n            [-122.420038, 37.773762],\n            [-122.419906, 37.774022],\n            [-122.419471, 37.774777],\n            [-122.419429, 37.774913],\n            [-122.419406, 37.774983],\n            [-122.419377, 37.775045],\n            [-122.419321, 37.775113],\n            [-122.419239, 37.775191],\n            [-122.418701, 37.775596],\n            [-122.417492, 37.776574],\n            [-122.41652, 37.777348],\n            [-122.416228, 37.77756],\n            [-122.414798, 37.7787],\n            [-122.412528, 37.780489],\n            [-122.41145, 37.781351],\n            [-122.410319, 37.782234],\n            [-122.408084, 37.784002],\n            [-122.405876, 37.785769],\n            [-122.404718, 37.786653],\n            [-122.404003, 37.787215],\n            [-122.403499, 37.787631],\n            [-122.402875, 37.788109],\n            [-122.402102, 37.788723],\n            [-122.401386, 37.789267],\n            [-122.399138, 37.791042],\n            [-122.398258, 37.791728],\n            [-122.397415, 37.792407],\n            [-122.396506, 37.793169],\n            [-122.395321, 37.794057],\n            [-122.394828, 37.794362],\n            [-122.394659, 37.794469],\n            [-122.394508, 37.79455],\n            [-122.394366, 37.794631],\n            [-122.394072, 37.794782],\n            [-122.393814, 37.794904],\n            [-122.393498, 37.79506],\n            [-122.393151, 37.795219],\n            [-122.392537, 37.795517],\n            [-122.391751, 37.795841],\n            [-122.391448, 37.795976],\n            [-122.391302, 37.796041],\n            [-122.390733, 37.796294],\n            [-122.38985, 37.796687],\n            [-122.389027, 37.797053],\n            [-122.388439, 37.797315],\n            [-122.387975, 37.797522],\n            [-122.387476, 37.797743],\n            [-122.386946, 37.797979],\n            [-122.386305, 37.798265],\n            [-122.385701, 37.798534],\n            [-122.385193, 37.79876],\n            [-122.384824, 37.798924],\n            [-122.38453, 37.799055],\n            [-122.384152, 37.799223],\n            [-122.383849, 37.799358],\n            [-122.383682, 37.799432],\n            [-122.383442, 37.799539],\n            [-122.383164, 37.799663],\n            [-122.382839, 37.799808],\n            [-122.382558, 37.799933],\n            [-122.382295, 37.80005],\n            [-122.381886, 37.800232],\n            [-122.381553, 37.80038],\n            [-122.381386, 37.800454],\n            [-122.381017, 37.800618],\n            [-122.380655, 37.800779],\n            [-122.380293, 37.800941],\n            [-122.379997, 37.801072],\n            [-122.379566, 37.801264],\n            [-122.379333, 37.801367],\n            [-122.379061, 37.801484],\n            [-122.378788, 37.801599],\n            [-122.378485, 37.801723],\n            [-122.378206, 37.801835],\n            [-122.377961, 37.801929],\n            [-122.377783, 37.801997],\n            [-122.377556, 37.802081],\n            [-122.377278, 37.802182],\n            [-122.377102, 37.802244],\n            [-122.376862, 37.802327],\n            [-122.376663, 37.802394],\n            [-122.37642, 37.802474],\n            [-122.376049, 37.802592],\n            [-122.375907, 37.802636],\n            [-122.375677, 37.802705],\n            [-122.375582, 37.802734],\n            [-122.374975, 37.802906],\n            [-122.374499, 37.803034],\n            [-122.374181, 37.803113],\n            [-122.373835, 37.803197],\n            [-122.373325, 37.803313],\n            [-122.37284, 37.803416],\n            [-122.372496, 37.803485],\n            [-122.37218, 37.803544],\n            [-122.372018, 37.803573],\n            [-122.371873, 37.803599],\n            [-122.371594, 37.803647],\n            [-122.37109, 37.803733],\n            [-122.370628, 37.803811],\n            [-122.370395, 37.80385],\n            [-122.370216, 37.803881],\n            [-122.370018, 37.803914],\n            [-122.369691, 37.803969],\n            [-122.369393, 37.80402],\n            [-122.369234, 37.804047],\n            [-122.368983, 37.804089],\n            [-122.36873, 37.804132],\n            [-122.368345, 37.804197],\n            [-122.367904, 37.804272],\n            [-122.367638, 37.804317],\n            [-122.367375, 37.804361],\n            [-122.367188, 37.804393],\n            [-122.366998, 37.804425],\n            [-122.366678, 37.804479],\n            [-122.366367, 37.804532],\n            [-122.366027, 37.804589],\n            [-122.365735, 37.804639],\n            [-122.365328, 37.804708],\n            [-122.365107, 37.804745],\n            [-122.364819, 37.804794],\n            [-122.364621, 37.804827],\n            [-122.364322, 37.804878],\n            [-122.364022, 37.804929],\n            [-122.363705, 37.804982],\n            [-122.363326, 37.805046],\n            [-122.363004, 37.805101],\n            [-122.362666, 37.805158],\n            [-122.362384, 37.805206],\n            [-122.362149, 37.805246],\n            [-122.361906, 37.805287],\n            [-122.361806, 37.805303],\n            [-122.361615, 37.805336],\n            [-122.361334, 37.805383],\n            [-122.361157, 37.805413],\n            [-122.360916, 37.805454],\n            [-122.360766, 37.805479],\n            [-122.360571, 37.805512],\n            [-122.360333, 37.805553],\n            [-122.360139, 37.805586],\n            [-122.359966, 37.805615],\n            [-122.359805, 37.805642],\n            [-122.359603, 37.805676],\n            [-122.359438, 37.805704],\n            [-122.359239, 37.805738],\n            [-122.359127, 37.805757],\n            [-122.358849, 37.805804],\n            [-122.358639, 37.805839],\n            [-122.358458, 37.80587],\n            [-122.35819, 37.805915],\n            [-122.358054, 37.805938],\n            [-122.357891, 37.805966],\n            [-122.357755, 37.805989],\n            [-122.357578, 37.806019],\n            [-122.357468, 37.806037],\n            [-122.357171, 37.806087],\n            [-122.356963, 37.806122],\n            [-122.356845, 37.806143],\n            [-122.35676, 37.806157],\n            [-122.356589, 37.806186],\n            [-122.356403, 37.806217],\n            [-122.356282, 37.806238],\n            [-122.356198, 37.806252],\n            [-122.356066, 37.806274],\n            [-122.355882, 37.806305],\n            [-122.355686, 37.806339],\n            [-122.355403, 37.806386],\n            [-122.355272, 37.806408],\n            [-122.355008, 37.806453],\n            [-122.354917, 37.806468],\n            [-122.35485, 37.80648],\n            [-122.35476, 37.806495],\n            [-122.354695, 37.806506],\n            [-122.354525, 37.806535],\n            [-122.354409, 37.806554],\n            [-122.354325, 37.806569],\n            [-122.354227, 37.806585],\n            [-122.354086, 37.806609],\n            [-122.354017, 37.806621],\n            [-122.353947, 37.806633],\n            [-122.353904, 37.80664],\n            [-122.353765, 37.806663],\n            [-122.353575, 37.806695],\n            [-122.353343, 37.806735],\n            [-122.353173, 37.806763],\n            [-122.35303, 37.806788],\n            [-122.352832, 37.806821],\n            [-122.352675, 37.806848],\n            [-122.352471, 37.806882],\n            [-122.35208, 37.806948],\n            [-122.351678, 37.807016],\n            [-122.351343, 37.807073],\n            [-122.351125, 37.80711],\n            [-122.350989, 37.807133],\n            [-122.350903, 37.807147],\n            [-122.350826, 37.80716],\n            [-122.350549, 37.807207],\n            [-122.350215, 37.807264],\n            [-122.349855, 37.807325],\n            [-122.349491, 37.807386],\n            [-122.349227, 37.807431],\n            [-122.348673, 37.807524],\n            [-122.34762, 37.807702],\n            [-122.346954, 37.807817],\n            [-122.346269, 37.807931],\n            [-122.345982, 37.807981],\n            [-122.345735, 37.808021],\n            [-122.34529, 37.808096],\n            [-122.344754, 37.808186],\n            [-122.342008, 37.808651],\n            [-122.341598, 37.80872],\n            [-122.341341, 37.808763],\n            [-122.340242, 37.808948],\n            [-122.339687, 37.809041],\n            [-122.339143, 37.809133],\n            [-122.338773, 37.809194],\n            [-122.338187, 37.809285],\n            [-122.337648, 37.809363],\n            [-122.337162, 37.809429],\n            [-122.336553, 37.809505],\n            [-122.336131, 37.809552],\n            [-122.3358, 37.809588],\n            [-122.335224, 37.809645],\n            [-122.334668, 37.809694],\n            [-122.334142, 37.809735],\n            [-122.333583, 37.809772],\n            [-122.33315, 37.809797],\n            [-122.332755, 37.809816],\n            [-122.332116, 37.809842],\n            [-122.33108, 37.809866],\n            [-122.330735, 37.80987],\n            [-122.330014, 37.80987],\n            [-122.329757, 37.809867],\n            [-122.329449, 37.809862],\n            [-122.32917, 37.809857],\n            [-122.328638, 37.809842],\n            [-122.328189, 37.809825],\n            [-122.328029, 37.809818],\n            [-122.327321, 37.809778],\n            [-122.326497, 37.809718],\n            [-122.326137, 37.809687],\n            [-122.325817, 37.809649],\n            [-122.323554, 37.809392],\n            [-122.322814, 37.809368],\n            [-122.322059, 37.809327],\n            [-122.320701, 37.80925],\n            [-122.320136, 37.80922],\n            [-122.31951, 37.809162],\n            [-122.318885, 37.809106],\n            [-122.316062, 37.808815],\n            [-122.315696, 37.808781],\n            [-122.315482, 37.808758],\n            [-122.315185, 37.808731],\n            [-122.314429, 37.808664],\n            [-122.312583, 37.808473],\n            [-122.312057, 37.808422],\n            [-122.308982, 37.808129],\n            [-122.308486, 37.808084],\n            [-122.308295, 37.808064],\n            [-122.306411, 37.807806],\n            [-122.305541, 37.807685],\n            [-122.305182, 37.807598],\n            [-122.30506, 37.807577],\n            [-122.304526, 37.807461],\n            [-122.30445, 37.807442],\n            [-122.304175, 37.807385],\n            [-122.303977, 37.807343],\n            [-122.303794, 37.807301],\n            [-122.302436, 37.806996],\n            [-122.302398, 37.806989],\n            [-122.298135, 37.806031],\n            [-122.297836, 37.805959],\n            [-122.297584, 37.805879],\n            [-122.297324, 37.805794],\n            [-122.297073, 37.805706],\n            [-122.296836, 37.805615],\n            [-122.296599, 37.805523],\n            [-122.296356, 37.805421],\n            [-122.296134, 37.805318],\n            [-122.296096, 37.805302],\n            [-122.295089, 37.804897],\n            [-122.293883, 37.80441],\n            [-122.29341, 37.804204],\n            [-122.292579, 37.803875],\n            [-122.292563, 37.803872],\n            [-122.29206, 37.803669],\n            [-122.291923, 37.803616],\n            [-122.291747, 37.803548],\n            [-122.291663, 37.803513],\n            [-122.291564, 37.803468],\n            [-122.291335, 37.803381],\n            [-122.29132, 37.803376],\n            [-122.291312, 37.803371],\n            [-122.291297, 37.803365],\n            [-122.291137, 37.803291],\n            [-122.290946, 37.803223],\n            [-122.284796, 37.801721],\n            [-122.284606, 37.801668],\n            [-122.284431, 37.801611],\n            [-122.284095, 37.801496],\n            [-122.283744, 37.801381],\n            [-122.283645, 37.801347],\n            [-122.283523, 37.801296],\n            [-122.283386, 37.801237],\n            [-122.283157, 37.801141],\n            [-122.282943, 37.801045],\n            [-122.282546, 37.800853],\n            [-122.282294, 37.800744],\n            [-122.282272, 37.800732],\n            [-122.28218, 37.800693],\n            [-122.281188, 37.800214],\n            [-122.280051, 37.799664],\n            [-122.280044, 37.79966],\n            [-122.279952, 37.799607],\n            [-122.279907, 37.799584],\n            [-122.279716, 37.799493],\n            [-122.279471, 37.799368],\n            [-122.279183, 37.799217],\n            [-122.278686, 37.798956],\n            [-122.278478, 37.798859],\n            [-122.278369, 37.798811],\n            [-122.278197, 37.798746],\n            [-122.278051, 37.798694],\n            [-122.277819, 37.798637],\n            [-122.277697, 37.798614],\n            [-122.277507, 37.798583],\n            [-122.277358, 37.798568],\n            [-122.276984, 37.798532],\n            [-122.276923, 37.798528],\n            [-122.276856, 37.798527]\n          ],\n          [\n            [-122.466727, 37.684953],\n            [-122.467276, 37.685356],\n            [-122.467791, 37.685769],\n            [-122.468086, 37.686119],\n            [-122.468184, 37.686287],\n            [-122.468285, 37.686457],\n            [-122.468473, 37.68675],\n            [-122.468667, 37.687103],\n            [-122.468809, 37.687399],\n            [-122.468959, 37.687724],\n            [-122.469114, 37.688025],\n            [-122.469228, 37.688263],\n            [-122.469306, 37.688412],\n            [-122.469413, 37.688604],\n            [-122.469451, 37.68868],\n            [-122.469482, 37.688755],\n            [-122.46955, 37.688926],\n            [-122.469611, 37.689098],\n            [-122.469665, 37.689285],\n            [-122.46971, 37.689477],\n            [-122.469749, 37.68968],\n            [-122.469779, 37.689901],\n            [-122.469795, 37.690102],\n            [-122.46981, 37.690338],\n            [-122.469808, 37.690623],\n            [-122.469825, 37.690832],\n            [-122.469818, 37.691068],\n            [-122.46982, 37.691295],\n            [-122.469832, 37.69178],\n            [-122.469833, 37.691812],\n            [-122.46984, 37.691968],\n            [-122.469855, 37.692544],\n            [-122.469851, 37.693124],\n            [-122.469835, 37.693391],\n            [-122.469838, 37.69367],\n            [-122.46984, 37.693948],\n            [-122.469848, 37.694165],\n            [-122.469856, 37.694261],\n            [-122.469871, 37.694482],\n            [-122.469894, 37.694687],\n            [-122.469944, 37.694924],\n            [-122.469987, 37.695075],\n            [-122.470029, 37.695191],\n            [-122.470073, 37.695321],\n            [-122.470334, 37.696002],\n            [-122.470462, 37.696332],\n            [-122.470493, 37.696415],\n            [-122.470511, 37.696473],\n            [-122.470563, 37.696611],\n            [-122.470682, 37.696913],\n            [-122.470741, 37.697087],\n            [-122.470871, 37.697466],\n            [-122.470884, 37.697511],\n            [-122.470916, 37.697629],\n            [-122.470942, 37.697747],\n            [-122.470957, 37.697838],\n            [-122.470971, 37.697921],\n            [-122.47098, 37.698007],\n            [-122.470996, 37.698132],\n            [-122.471008, 37.698336],\n            [-122.47101, 37.698393],\n            [-122.471006, 37.69852],\n            [-122.471002, 37.698636],\n            [-122.470998, 37.699043],\n            [-122.471013, 37.699549],\n            [-122.471023, 37.700169],\n            [-122.471041, 37.700673],\n            [-122.471052, 37.7012],\n            [-122.47106, 37.701706],\n            [-122.471064, 37.701856],\n            [-122.471063, 37.701909],\n            [-122.471067, 37.702173],\n            [-122.471074, 37.702402],\n            [-122.47108, 37.702639],\n            [-122.471085, 37.70278],\n            [-122.471081, 37.703002],\n            [-122.471075, 37.703124],\n            [-122.471063, 37.703206],\n            [-122.471046, 37.703305],\n            [-122.471016, 37.703421],\n            [-122.470989, 37.703498],\n            [-122.470959, 37.703591],\n            [-122.470914, 37.703706],\n            [-122.470846, 37.703849],\n            [-122.470808, 37.703916],\n            [-122.470779, 37.703972],\n            [-122.470713, 37.704079],\n            [-122.470583, 37.704263],\n            [-122.470461, 37.704413],\n            [-122.4703, 37.704608],\n            [-122.470082, 37.704878],\n            [-122.469934, 37.705059],\n            [-122.469864, 37.705149],\n            [-122.46976, 37.705276],\n            [-122.469524, 37.705566],\n            [-122.469423, 37.705687],\n            [-122.469351, 37.705767],\n            [-122.469106, 37.706105]\n          ],\n          [\n            [-122.386655, 37.599782],\n            [-122.386721, 37.599826],\n            [-122.386987, 37.600082],\n            [-122.387483, 37.600584],\n            [-122.387696, 37.600796],\n            [-122.388117, 37.601234],\n            [-122.388787, 37.601899],\n            [-122.389715, 37.602821],\n            [-122.390234, 37.603307],\n            [-122.390656, 37.603728],\n            [-122.391122, 37.604193],\n            [-122.391435, 37.6045],\n            [-122.392204, 37.605233],\n            [-122.392459, 37.605484],\n            [-122.392981, 37.606019],\n            [-122.393405, 37.606423],\n            [-122.393745, 37.606752],\n            [-122.394104, 37.607121],\n            [-122.394396, 37.607411],\n            [-122.395019, 37.607982],\n            [-122.395445, 37.608416],\n            [-122.395726, 37.608689],\n            [-122.396003, 37.608957],\n            [-122.396505, 37.609462],\n            [-122.396853, 37.609811],\n            [-122.397283, 37.610218],\n            [-122.397707, 37.610639],\n            [-122.397815, 37.610748],\n            [-122.398332, 37.611257],\n            [-122.398737, 37.611677],\n            [-122.398866, 37.611829],\n            [-122.399232, 37.612239],\n            [-122.399469, 37.612547],\n            [-122.399673, 37.612791],\n            [-122.399816, 37.612964],\n            [-122.400005, 37.613219],\n            [-122.40019, 37.613484],\n            [-122.400655, 37.614099],\n            [-122.400809, 37.614317],\n            [-122.401288, 37.614932],\n            [-122.401645, 37.61541],\n            [-122.402026, 37.615909],\n            [-122.402329, 37.61632],\n            [-122.402734, 37.616842],\n            [-122.403059, 37.617274],\n            [-122.403159, 37.617412],\n            [-122.403482, 37.617826],\n            [-122.404185, 37.618738],\n            [-122.404687, 37.619429],\n            [-122.404838, 37.619635],\n            [-122.404945, 37.619781],\n            [-122.405191, 37.620098],\n            [-122.405634, 37.620702],\n            [-122.405913, 37.621072],\n            [-122.406123, 37.621365],\n            [-122.406399, 37.621748],\n            [-122.40655, 37.621948],\n            [-122.406647, 37.622075],\n            [-122.406818, 37.622328],\n            [-122.407048, 37.622664],\n            [-122.407201, 37.622907],\n            [-122.407346, 37.623149],\n            [-122.40764, 37.623538],\n            [-122.407808, 37.623749],\n            [-122.408078, 37.624106],\n            [-122.408262, 37.624418],\n            [-122.40848, 37.624752],\n            [-122.40868, 37.625073],\n            [-122.408929, 37.625483],\n            [-122.409273, 37.626104],\n            [-122.40947, 37.626419],\n            [-122.409804, 37.627],\n            [-122.410307, 37.627847],\n            [-122.410538, 37.628272],\n            [-122.411056, 37.629165],\n            [-122.41148, 37.62992],\n            [-122.411672, 37.630225],\n            [-122.411909, 37.630664],\n            [-122.412351, 37.631448],\n            [-122.412497, 37.631688],\n            [-122.41268, 37.631993],\n            [-122.412775, 37.632167],\n            [-122.412868, 37.632301],\n            [-122.413103, 37.632709],\n            [-122.41348, 37.633364],\n            [-122.41365, 37.633687],\n            [-122.413836, 37.633927],\n            [-122.414039, 37.634292],\n            [-122.414355, 37.634856],\n            [-122.414708, 37.635469],\n            [-122.415165, 37.636273],\n            [-122.41549, 37.636822],\n            [-122.415885, 37.637521],\n            [-122.416411, 37.638367],\n            [-122.416686, 37.638913],\n            [-122.416983, 37.639438],\n            [-122.417237, 37.639874],\n            [-122.417473, 37.64031],\n            [-122.417764, 37.640799],\n            [-122.418178, 37.641489],\n            [-122.418474, 37.641967],\n            [-122.418611, 37.642212],\n            [-122.419044, 37.642799],\n            [-122.419639, 37.643561],\n            [-122.420638, 37.644768],\n            [-122.421338, 37.645655],\n            [-122.421632, 37.645985],\n            [-122.421809, 37.646193],\n            [-122.422173, 37.646622],\n            [-122.42266, 37.64716],\n            [-122.422992, 37.647552],\n            [-122.423255, 37.647852],\n            [-122.424112, 37.648831],\n            [-122.424499, 37.649253],\n            [-122.424816, 37.649632],\n            [-122.425071, 37.649901],\n            [-122.425651, 37.650544],\n            [-122.426269, 37.651204],\n            [-122.426586, 37.651474],\n            [-122.42674, 37.651596],\n            [-122.427119, 37.651804],\n            [-122.427977, 37.652324],\n            [-122.42868, 37.652758],\n            [-122.42953, 37.653266],\n            [-122.430249, 37.653645],\n            [-122.431587, 37.654355],\n            [-122.43297, 37.655126],\n            [-122.433503, 37.655414],\n            [-122.434075, 37.655707],\n            [-122.434354, 37.65586],\n            [-122.435243, 37.656491],\n            [-122.436224, 37.657237],\n            [-122.436487, 37.657488],\n            [-122.436819, 37.657818],\n            [-122.43712, 37.658112],\n            [-122.437662, 37.658669],\n            [-122.438148, 37.659299],\n            [-122.438396, 37.659623],\n            [-122.438844, 37.660186],\n            [-122.439284, 37.660718],\n            [-122.440065, 37.661422],\n            [-122.440281, 37.661599],\n            [-122.440451, 37.661752],\n            [-122.440707, 37.661942],\n            [-122.441224, 37.662279],\n            [-122.441766, 37.662676],\n            [-122.442384, 37.663116],\n            [-122.442964, 37.663502],\n            [-122.443829, 37.66401],\n            [-122.444363, 37.664328],\n            [-122.444698, 37.66455],\n            [-122.44533, 37.664973],\n            [-122.446086, 37.665483],\n            [-122.446569, 37.66579],\n            [-122.446723, 37.665896],\n            [-122.447202, 37.666243],\n            [-122.447444, 37.666429],\n            [-122.447734, 37.666663],\n            [-122.448252, 37.667151],\n            [-122.448492, 37.667392],\n            [-122.448971, 37.667918],\n            [-122.449348, 37.668414],\n            [-122.449595, 37.668741],\n            [-122.450034, 37.669376],\n            [-122.450358, 37.669848],\n            [-122.450805, 37.670495],\n            [-122.451185, 37.67117],\n            [-122.45139, 37.6715],\n            [-122.451614, 37.671864],\n            [-122.45178, 37.672032],\n            [-122.452161, 37.672407],\n            [-122.452625, 37.67286],\n            [-122.453015, 37.673251],\n            [-122.453539, 37.673757],\n            [-122.453718, 37.673939],\n            [-122.454356, 37.674569],\n            [-122.454764, 37.674973],\n            [-122.455485, 37.675425],\n            [-122.456053, 37.675782],\n            [-122.456609, 37.676257],\n            [-122.456889, 37.676488],\n            [-122.457171, 37.676727],\n            [-122.457542, 37.677108],\n            [-122.457737, 37.677313],\n            [-122.457903, 37.677484],\n            [-122.458269, 37.67786],\n            [-122.458418, 37.678013],\n            [-122.458949, 37.678518],\n            [-122.459194, 37.678758],\n            [-122.459724, 37.679272],\n            [-122.460147, 37.679686],\n            [-122.460462, 37.679992],\n            [-122.460925, 37.680441],\n            [-122.461428, 37.680942],\n            [-122.462044, 37.681564],\n            [-122.462282, 37.681772],\n            [-122.462617, 37.682144],\n            [-122.463067, 37.682468],\n            [-122.463327, 37.68265],\n            [-122.463441, 37.682734],\n            [-122.463563, 37.682817],\n            [-122.463861, 37.683022],\n            [-122.464151, 37.683224],\n            [-122.465059, 37.683883],\n            [-122.465089, 37.683902],\n            [-122.465768, 37.684349],\n            [-122.466727, 37.684953]\n          ],\n          [\n            [-122.392604, 37.616029],\n            [-122.39316, 37.615899],\n            [-122.394211, 37.615653],\n            [-122.394879, 37.615632],\n            [-122.395393, 37.615625],\n            [-122.395757, 37.615619],\n            [-122.396337, 37.615623],\n            [-122.396751, 37.615627],\n            [-122.397311, 37.615639],\n            [-122.397686, 37.615645],\n            [-122.398004, 37.61564],\n            [-122.398469, 37.615641],\n            [-122.398924, 37.61566],\n            [-122.399647, 37.615699],\n            [-122.40019, 37.615773],\n            [-122.400629, 37.615881],\n            [-122.400993, 37.616]\n          ],\n          [\n            [-122.394208, 37.615656],\n            [-122.394307, 37.615647],\n            [-122.39487, 37.615607],\n            [-122.3957, 37.615596],\n            [-122.396902, 37.615596],\n            [-122.397654, 37.615572],\n            [-122.39827, 37.615514],\n            [-122.398487, 37.615453],\n            [-122.398597, 37.615423],\n            [-122.398814, 37.615336],\n            [-122.398959, 37.615264],\n            [-122.39913, 37.615157],\n            [-122.399239, 37.615086],\n            [-122.399404, 37.61495],\n            [-122.399567, 37.614761],\n            [-122.399671, 37.614614],\n            [-122.399722, 37.614507],\n            [-122.399838, 37.614246],\n            [-122.39987, 37.614087],\n            [-122.399876, 37.613952],\n            [-122.399879, 37.613814],\n            [-122.399851, 37.613635],\n            [-122.399811, 37.613464],\n            [-122.399774, 37.613352],\n            [-122.399698, 37.613176],\n            [-122.399612, 37.613027],\n            [-122.399534, 37.612906],\n            [-122.399232, 37.612239]\n          ]\n        ]\n      }\n    }\n  ]\n};\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nexport default {\n  type: 'FeatureCollection',\n  features: [\n    {\n      type: 'Feature',\n      properties: {\n        name: 'Lafayette (LAFY)',\n        code: 'LF',\n        address: '3601 Deer Hill Road, Lafayette CA 94549',\n        entries: '3481',\n        exits: '3616',\n        latitude: 37.893394,\n        longitude: -122.123801\n      },\n      geometry: {\n        type: 'Point',\n        coordinates: [-122.123801, 37.893394]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {\n        name: '12th St. Oakland City Center (12TH)',\n        code: '12',\n        address: '1245 Broadway, Oakland CA 94612',\n        entries: '13418',\n        exits: '13547',\n        latitude: 37.803664,\n        longitude: -122.271604\n      },\n      geometry: {\n        type: 'Point',\n        coordinates: [-122.271604, 37.803664]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {\n        name: '16th St. Mission (16TH)',\n        code: '16',\n        address: '2000 Mission Street, San Francisco CA 94110',\n        entries: '12409',\n        exits: '12351',\n        latitude: 37.765062,\n        longitude: -122.419694\n      },\n      geometry: {\n        type: 'Point',\n        coordinates: [-122.419694, 37.765062]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {\n        name: '19th St. Oakland (19TH)',\n        code: '19',\n        address: '1900 Broadway, Oakland CA 94612',\n        entries: '13108',\n        exits: '13090',\n        latitude: 37.80787,\n        longitude: -122.269029\n      },\n      geometry: {\n        type: 'Point',\n        coordinates: [-122.269029, 37.80787]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {\n        name: '24th St. Mission (24TH)',\n        code: '24',\n        address: '2800 Mission Street, San Francisco CA 94110',\n        entries: '12817',\n        exits: '12529',\n        latitude: 37.752254,\n        longitude: -122.418466\n      },\n      geometry: {\n        type: 'Point',\n        coordinates: [-122.418466, 37.752254]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {\n        name: 'Ashby (ASHB)',\n        code: 'AS',\n        address: '3100 Adeline Street, Berkeley CA 94703',\n        entries: '5452',\n        exits: '5341',\n        latitude: 37.853024,\n        longitude: -122.26978\n      },\n      geometry: {\n        type: 'Point',\n        coordinates: [-122.26978, 37.853024]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {\n        name: 'Balboa Park (BALB)',\n        code: 'BP',\n        address: '401 Geneva Avenue, San Francisco CA 94112',\n        entries: '11170',\n        exits: '9817',\n        latitude: 37.721981,\n        longitude: -122.447414\n      },\n      geometry: {\n        type: 'Point',\n        coordinates: [-122.447414, 37.721981]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {\n        name: 'Bay Fair (BAYF)',\n        code: 'BF',\n        address: '15242 Hesperian Blvd., San Leandro CA 94578',\n        entries: '5564',\n        exits: '5516',\n        latitude: 37.697185,\n        longitude: -122.126871\n      },\n      geometry: {\n        type: 'Point',\n        coordinates: [-122.126871, 37.697185]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {\n        name: 'Castro Valley (CAST)',\n        code: 'CV',\n        address: '3301 Norbridge Dr., Castro Valley CA 94546',\n        entries: '2781',\n        exits: '2735',\n        latitude: 37.690754,\n        longitude: -122.075567\n      },\n      geometry: {\n        type: 'Point',\n        coordinates: [-122.075567, 37.690754]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {\n        name: 'Civic Center/UN Plaza (CIVC)',\n        code: 'CC',\n        address: '1150 Market Street, San Francisco CA 94102',\n        entries: '24798',\n        exits: '22626',\n        latitude: 37.779528,\n        longitude: -122.413756\n      },\n      geometry: {\n        type: 'Point',\n        coordinates: [-122.413756, 37.779528]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {\n        name: 'Colma (COLM)',\n        code: 'CM',\n        address: '365 D Street, Colma CA 94014',\n        entries: '4397',\n        exits: '4214',\n        latitude: 37.684638,\n        longitude: -122.466233\n      },\n      geometry: {\n        type: 'Point',\n        coordinates: [-122.466233, 37.684638]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {\n        name: 'Coliseum/Oakland Airport (COLS)',\n        code: 'CL',\n        address: '7200 San Leandro St., Oakland CA 94621',\n        entries: '5837',\n        exits: '5902',\n        latitude: 37.754006,\n        longitude: -122.197273\n      },\n      geometry: {\n        type: 'Point',\n        coordinates: [-122.197273, 37.754006]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {\n        name: 'Concord (CONC)',\n        code: 'CN',\n        address: '1451 Oakland Avenue, Concord CA 94520',\n        entries: '6035',\n        exits: '6008',\n        latitude: 37.973737,\n        longitude: -122.029095\n      },\n      geometry: {\n        type: 'Point',\n        coordinates: [-122.029095, 37.973737]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {\n        name: 'Daly City (DALY)',\n        code: 'DC',\n        address: '500 John Daly Blvd., Daly City CA 94014',\n        entries: '8681',\n        exits: '8502',\n        latitude: 37.706121,\n        longitude: -122.469081\n      },\n      geometry: {\n        type: 'Point',\n        coordinates: [-122.469081, 37.706121]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {\n        name: 'Downtown Berkeley (DBRK)',\n        code: 'BK',\n        address: '2160 Shattuck Avenue, Berkeley CA 94704',\n        entries: '11043',\n        exits: '11762',\n        latitude: 37.869867,\n        longitude: -122.268045\n      },\n      geometry: {\n        type: 'Point',\n        coordinates: [-122.268045, 37.869867]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {\n        name: 'El Cerrito del Norte (DELN)',\n        code: 'EN',\n        address: '6400 Cutting Blvd., El Cerrito CA 94530',\n        entries: '8176',\n        exits: '8668',\n        latitude: 37.925655,\n        longitude: -122.317269\n      },\n      geometry: {\n        type: 'Point',\n        coordinates: [-122.317269, 37.925655]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {\n        name: 'Dublin/Pleasanton (DUBL)',\n        code: 'ED',\n        address: '5801 Owens Dr., Pleasanton CA 94588',\n        entries: '7702',\n        exits: '7554',\n        latitude: 37.701695,\n        longitude: -121.900367\n      },\n      geometry: {\n        type: 'Point',\n        coordinates: [-121.900367, 37.701695]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {\n        name: 'Embarcadero (EMBR)',\n        code: 'EM',\n        address: '298 Market Street, San Francisco CA 94111',\n        entries: '40376',\n        exits: '46951',\n        latitude: 37.792976,\n        longitude: -122.396742\n      },\n      geometry: {\n        type: 'Point',\n        coordinates: [-122.396742, 37.792976]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {\n        name: 'Fremont (FRMT)',\n        code: 'FM',\n        address: '2000 BART Way, Fremont CA 94536',\n        entries: '8748',\n        exits: '8673',\n        latitude: 37.557355,\n        longitude: -121.9764\n      },\n      geometry: {\n        type: 'Point',\n        coordinates: [-121.9764, 37.557355]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {\n        name: 'Fruitvale (FTVL)',\n        code: 'FV',\n        address: '3401 East 12th Street, Oakland CA 94601',\n        entries: '7701',\n        exits: '8012',\n        latitude: 37.774963,\n        longitude: -122.224274\n      },\n      geometry: {\n        type: 'Point',\n        coordinates: [-122.224274, 37.774963]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {\n        name: 'Glen Park (GLEN)',\n        code: 'GP',\n        address: '2901 Diamond Street, San Francisco CA 94131',\n        entries: '7732',\n        exits: '7072',\n        latitude: 37.732921,\n        longitude: -122.434092\n      },\n      geometry: {\n        type: 'Point',\n        coordinates: [-122.434092, 37.732921]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {\n        name: 'Hayward (HAYW)',\n        code: 'HY',\n        address: \"699 'B' Street, Hayward CA 94541\",\n        entries: '4958',\n        exits: '5003',\n        latitude: 37.670399,\n        longitude: -122.087967\n      },\n      geometry: {\n        type: 'Point',\n        coordinates: [-122.087967, 37.670399]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {\n        name: 'Lake Merritt (LAKE)',\n        code: 'LM',\n        address: '800 Madison Street, Oakland CA 94607',\n        entries: '6539',\n        exits: '6604',\n        latitude: 37.797484,\n        longitude: -122.265609\n      },\n      geometry: {\n        type: 'Point',\n        coordinates: [-122.265609, 37.797484]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {\n        name: 'MacArthur (MCAR)',\n        code: 'MA',\n        address: '555 40th Street, Oakland CA 94609',\n        entries: '9000',\n        exits: '9228',\n        latitude: 37.828415,\n        longitude: -122.267227\n      },\n      geometry: {\n        type: 'Point',\n        coordinates: [-122.267227, 37.828415]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {\n        name: 'Millbrae (MLBR)',\n        code: 'MB',\n        address: '200 North Rollins Road, Millbrae CA 94030',\n        entries: '6570',\n        exits: '6149',\n        latitude: 37.599787,\n        longitude: -122.38666\n      },\n      geometry: {\n        type: 'Point',\n        coordinates: [-122.38666, 37.599787]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {\n        name: 'Montgomery St. (MONT)',\n        code: 'MT',\n        address: '598 Market Street, San Francisco CA 94104',\n        entries: '43430',\n        exits: '45128',\n        latitude: 37.789256,\n        longitude: -122.401407\n      },\n      geometry: {\n        type: 'Point',\n        coordinates: [-122.401407, 37.789256]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {\n        name: 'North Berkeley (NBRK)',\n        code: 'NB',\n        address: '1750 Sacramento Street, Berkeley CA 94702',\n        entries: '4363',\n        exits: '4563',\n        latitude: 37.87404,\n        longitude: -122.283451\n      },\n      geometry: {\n        type: 'Point',\n        coordinates: [-122.283451, 37.87404]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {\n        name: 'North Concord/Martinez (NCON)',\n        code: 'NC',\n        address: '3700 Port Chicago Highway, Concord CA 94520',\n        entries: '2800',\n        exits: '2652',\n        latitude: 38.003275,\n        longitude: -122.024597\n      },\n      geometry: {\n        type: 'Point',\n        coordinates: [-122.024597, 38.003275]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {\n        name: 'Orinda (ORIN)',\n        code: 'OR',\n        address: '11 Camino Pablo, Orinda CA 94563',\n        entries: '2896',\n        exits: '2970',\n        latitude: 37.878361,\n        longitude: -122.183791\n      },\n      geometry: {\n        type: 'Point',\n        coordinates: [-122.183791, 37.878361]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {\n        name: 'Pleasant Hill/Contra Costa Centre (PHIL)',\n        code: 'PH',\n        address: '1365 Treat Blvd., Walnut Creek CA 94597',\n        entries: '7574',\n        exits: '7442',\n        latitude: 37.928403,\n        longitude: -122.056013\n      },\n      geometry: {\n        type: 'Point',\n        coordinates: [-122.056013, 37.928403]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {\n        name: 'Pittsburg/Bay Point (PITT)',\n        code: 'WP',\n        address: '1700 West Leland Road, Pittsburg CA 94565',\n        entries: '6262',\n        exits: '6343',\n        latitude: 38.018914,\n        longitude: -121.945154\n      },\n      geometry: {\n        type: 'Point',\n        coordinates: [-121.945154, 38.018914]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {\n        name: 'El Cerrito Plaza (PLZA)',\n        code: 'EP',\n        address: '6699 Fairmount Avenue, El Cerrito CA 94530',\n        entries: '4763',\n        exits: '4952',\n        latitude: 37.903059,\n        longitude: -122.299272\n      },\n      geometry: {\n        type: 'Point',\n        coordinates: [-122.299272, 37.903059]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {\n        name: 'Powell St. (POWL)',\n        code: 'PL',\n        address: '899 Market Street, San Francisco CA 94102',\n        entries: '29460',\n        exits: '25621',\n        latitude: 37.784991,\n        longitude: -122.406857\n      },\n      geometry: {\n        type: 'Point',\n        coordinates: [-122.406857, 37.784991]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {\n        name: 'Richmond (RICH)',\n        code: 'RM',\n        address: '1700 Nevin Avenue, Richmond CA 94801',\n        entries: '4184',\n        exits: '4029',\n        latitude: 37.936887,\n        longitude: -122.353165\n      },\n      geometry: {\n        type: 'Point',\n        coordinates: [-122.353165, 37.936887]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {\n        name: 'Rockridge (ROCK)',\n        code: 'RR',\n        address: '5660 College Avenue, Oakland CA 94618',\n        entries: '5299',\n        exits: '5775',\n        latitude: 37.844601,\n        longitude: -122.251793\n      },\n      geometry: {\n        type: 'Point',\n        coordinates: [-122.251793, 37.844601]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {\n        name: 'San Leandro (SANL)',\n        code: 'SL',\n        address: '1401 San Leandro Blvd., San Leandro CA 94577',\n        entries: '5836',\n        exits: '5921',\n        latitude: 37.722619,\n        longitude: -122.161311\n      },\n      geometry: {\n        type: 'Point',\n        coordinates: [-122.161311, 37.722619]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {\n        name: 'San Bruno (SBRN)',\n        code: 'SB',\n        address: '1151 Huntington Avenue, San Bruno CA 94066',\n        entries: '3628',\n        exits: '3634',\n        latitude: 37.637753,\n        longitude: -122.416038\n      },\n      geometry: {\n        type: 'Point',\n        coordinates: [-122.416038, 37.637753]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {\n        name: \"San Francisco Int'l Airport (SFIA)\",\n        code: 'SO',\n        address: \"International Terminal, Level 3, San Francisco Int'l Airport CA 94128\",\n        entries: '5833',\n        exits: '4904',\n        latitude: 37.616035,\n        longitude: -122.392612\n      },\n      geometry: {\n        type: 'Point',\n        coordinates: [-122.392612, 37.616035]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {\n        name: 'South Hayward (SHAY)',\n        code: 'SH',\n        address: '28601 Dixon Street, Hayward CA 94544',\n        entries: '3007',\n        exits: '2829',\n        latitude: 37.6348,\n        longitude: -122.057551\n      },\n      geometry: {\n        type: 'Point',\n        coordinates: [-122.057551, 37.6348]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {\n        name: 'South San Francisco (SSAN)',\n        code: 'SS',\n        address: '1333 Mission Road, South San Francisco CA 94080',\n        entries: '3542',\n        exits: '3441',\n        latitude: 37.664174,\n        longitude: -122.444116\n      },\n      geometry: {\n        type: 'Point',\n        coordinates: [-122.444116, 37.664174]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {\n        name: 'Union City (UCTY)',\n        code: 'UC',\n        address: '10 Union Square, Union City CA 94587',\n        entries: '4772',\n        exits: '4770',\n        latitude: 37.591208,\n        longitude: -122.017867\n      },\n      geometry: {\n        type: 'Point',\n        coordinates: [-122.017867, 37.591208]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {\n        name: 'Walnut Creek (WCRK)',\n        code: 'WC',\n        address: '200 Ygnacio Valley Road, Walnut Creek CA 94596',\n        entries: '6719',\n        exits: '6917',\n        latitude: 37.905628,\n        longitude: -122.067423\n      },\n      geometry: {\n        type: 'Point',\n        coordinates: [-122.067423, 37.905628]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {\n        name: 'West Dublin/Pleasanton (WDUB)',\n        code: 'WD',\n        address: '6501 Golden Gate Drive, Dublin CA 94568',\n        entries: '3303',\n        exits: '3447',\n        latitude: 37.699759,\n        longitude: -121.928099\n      },\n      geometry: {\n        type: 'Point',\n        coordinates: [-121.928099, 37.699759]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {\n        name: 'West Oakland (WOAK)',\n        code: 'OW',\n        address: '1451 7th Street, Oakland CA 94607',\n        entries: '7312',\n        exits: '6838',\n        latitude: 37.804675,\n        longitude: -122.294582\n      },\n      geometry: {\n        type: 'Point',\n        coordinates: [-122.294582, 37.804675]\n      }\n    }\n  ]\n};\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nconst config = {\n  version: 'v1',\n  config: {\n    visState: {\n      filters: [\n        {\n          dataId: ['bart-stops-geo-2'],\n          id: '2ua7g6t8',\n          name: ['exits'],\n          type: 'range',\n          value: [6121, 13547],\n          plotType: {\n            type: 'histogram'\n          },\n          animationWindow: 'free',\n          yAxis: null,\n          view: 'side',\n          speed: 1,\n          enabled: true\n        },\n        {\n          dataId: ['sf-zip-geo'],\n          id: 'kt1fkkbrb',\n          name: ['ZIP_CODE'],\n          type: 'range',\n          value: [94103, 94133],\n          plotType: {\n            type: 'histogram'\n          },\n          animationWindow: 'free',\n          yAxis: null,\n          view: 'side',\n          speed: 1,\n          enabled: true\n        }\n      ],\n      layers: [\n        {\n          id: 'ze2p6id',\n          type: 'geojson',\n          config: {\n            dataId: 'bart-stops-geo',\n            label: 'Bart Stops Geo',\n            color: [151, 14, 45],\n            columns: {\n              geojson: '_geojson'\n            },\n            isVisible: true,\n            visConfig: {\n              opacity: 0.8,\n              thickness: 0.5,\n              strokeColor: [77, 193, 156],\n              colorRange: {\n                name: 'Global Warming',\n                type: 'sequential',\n                category: 'Uber',\n                colors: ['#5A1846', '#900C3F', '#C70039', '#E3611C', '#F1920E', '#FFC300']\n              },\n              strokeColorRange: {\n                name: 'Global Warming',\n                type: 'sequential',\n                category: 'Uber',\n                colors: ['#5A1846', '#900C3F', '#C70039', '#E3611C', '#F1920E', '#FFC300']\n              },\n              radius: 22.5,\n              sizeRange: [0, 10],\n              radiusRange: [0, 50],\n              heightRange: [0, 500],\n              elevationScale: 5,\n              stroked: true,\n              filled: true,\n              enable3d: false,\n              wireframe: false\n            },\n            textLabel: [\n              {\n                field: null,\n                color: [255, 255, 255],\n                size: 18,\n                offset: [0, 0],\n                anchor: 'start',\n                alignment: 'center'\n              }\n            ]\n          },\n          visualChannels: {\n            colorField: null,\n            colorScale: 'quantile',\n            sizeField: null,\n            sizeScale: 'linear',\n            strokeColorField: null,\n            strokeColorScale: 'quantile',\n            heightField: null,\n            heightScale: 'linear',\n            radiusField: null,\n            radiusScale: 'linear'\n          }\n        },\n        {\n          id: 'ho3fgt9',\n          type: 'geojson',\n          config: {\n            dataId: 'sf-zip-geo',\n            label: 'SF Zip Geo',\n            color: [136, 87, 44],\n            columns: {\n              geojson: '_geojson'\n            },\n            isVisible: true,\n            visConfig: {\n              opacity: 0.8,\n              thickness: 0.5,\n              strokeColor: [255, 254, 213],\n              colorRange: {\n                name: 'UberPool 8',\n                type: 'diverging',\n                category: 'Uber',\n                colors: [\n                  '#213E9A',\n                  '#3C1FA7',\n                  '#811CB5',\n                  '#C318B0',\n                  '#D01367',\n                  '#DE0F0E',\n                  '#EC7007',\n                  '#F9E200'\n                ],\n                reversed: false\n              },\n              strokeColorRange: {\n                name: 'Global Warming',\n                type: 'sequential',\n                category: 'Uber',\n                colors: ['#5A1846', '#900C3F', '#C70039', '#E3611C', '#F1920E', '#FFC300']\n              },\n              radius: 10,\n              sizeRange: [0, 10],\n              radiusRange: [0, 50],\n              heightRange: [0, 500],\n              elevationScale: 5,\n              stroked: true,\n              filled: true,\n              enable3d: false,\n              wireframe: false\n            },\n            textLabel: [\n              {\n                field: null,\n                color: [255, 255, 255],\n                size: 18,\n                offset: [0, 0],\n                anchor: 'start',\n                alignment: 'center'\n              }\n            ]\n          },\n          visualChannels: {\n            colorField: {\n              name: 'ID',\n              type: 'integer'\n            },\n            colorScale: 'quantile',\n            sizeField: null,\n            sizeScale: 'linear',\n            strokeColorField: null,\n            strokeColorScale: 'quantile',\n            heightField: null,\n            heightScale: 'linear',\n            radiusField: null,\n            radiusScale: 'linear'\n          }\n        }\n      ],\n      interactionConfig: {\n        tooltip: {\n          fieldsToShow: {\n            'bart-stops-geo': ['name'],\n            'sf-zip-geo': ['OBJECTID', 'ZIP_CODE', 'ID', 'name', 'STREETNAME']\n          },\n          enabled: true\n        },\n        brush: {\n          size: 0.5,\n          enabled: false\n        },\n        geocoder: {\n          enabled: false\n        }\n      },\n      layerBlending: 'normal'\n    },\n\n    mapStyle: {\n      styleType: 'b9tnac',\n      mapStyles: {\n        b9tnac: {\n          accessToken: null,\n          custom: true,\n          icon:\n            'https://api.mapbox.com/styles/v1/heshan0131/cjg0ks54x300a2squ8fr9vhvq/static/-122.3391,37.7922,9,0,0/400x300?access_token=pk.eyJ1IjoidWJlcmRhdGEiLCJhIjoiY2pmc3hhd21uMzE3azJxczJhOWc4czBpYyJ9.HiDptGv2C0Bkcv_TGr_kJw&logo=false&attribution=false',\n          id: 'b9tnac',\n          label: 'label maker',\n          url: 'mapbox://styles/heshan0131/cjg0ks54x300a2squ8fr9vhvq'\n        }\n      }\n    }\n  }\n};\nconsole.log(\"hit\");\nconsole.log(config);\nexport default config;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nexport default `hex_id,value\n89283082c2fffff,64\n8928308288fffff,73\n89283082c07ffff,65\n89283082817ffff,74\n89283082c3bffff,66\n89283082883ffff,76\n89283082c03ffff,60\n89283082807ffff,68\n8928308289bffff,49\n89283082c0fffff,41\n89283082c87ffff,50\n89283082d4fffff,45\n89283082c77ffff,41\n89283082c2bffff,53\n89283082803ffff,41\n89283082813ffff,43\n89283082d5bffff,45\n89283082897ffff,40\n89283082c67ffff,42\n89283082d47ffff,51\n89283082dc3ffff,52\n89283082c33ffff,43\n89283082c23ffff,40\n89283082887ffff,36\n89283082d4bffff,36\n892830828bbffff,48\n892830828b7ffff,28\n89283082c17ffff,34\n89283082c6fffff,21\n8928308288bffff,25\n892830828abffff,26\n89283082c27ffff,27\n89283082c8fffff,33\n89283082cafffff,29\n89283082c13ffff,27\n89283082cabffff,22\n89283082c63ffff,26\n89283082d43ffff,30\n89283082d53ffff,19\n892830828a3ffff,28\n89283082d1bffff,20\n89283095367ffff,17\n8928309536bffff,26\n89283082c37ffff,16\n89283082c73ffff,17\n89283082c8bffff,15\n89283082ca7ffff,27\n89283082cb3ffff,32\n89283082c0bffff,26\n89283082ca3ffff,19\n89283082dcfffff,18\n89283082c1bffff,20\n89283082ddbffff,18\n8928309534fffff,16\n89283082d03ffff,15\n89283082cbbffff,21\n89283082cd7ffff,9\n8928309534bffff,9\n892830828c7ffff,13\n89283082cc7ffff,12\n89283082d0bffff,19\n89283082dcbffff,19\n89283082dd3ffff,15\n89283082dd7ffff,15\n892830828d7ffff,13\n89283082d17ffff,5\n8928309536fffff,8\n89283095373ffff,6\n89283082cb7ffff,15\n89283082d83ffff,9\n89283082d07ffff,4\n89283082d0fffff,3\n89283082d13ffff,6\n89283082d9bffff,5\n89283082c83ffff,11\n89283082d8bffff,4\n89283082dc7ffff,5\n89283095377ffff,5\n89283082c97ffff,4\n89283082d7bffff,2\n89283082d8fffff,1\n89283095347ffff,3\n89283095363ffff,2\n8928309537bffff,4\n89283082d93ffff,6\n89283082d73ffff,1\n8928309530bffff,1\n8928309532bffff,1`;\n\nexport const config = {\n  version: 'v1',\n  config: {\n    visState: {\n      filters: [],\n      layers: [\n        {\n          id: 'avlgol',\n          type: 'hexagonId',\n          config: {\n            dataId: 'h3-hex-id',\n            label: 'H3 Hexagon',\n            color: [241, 92, 23],\n            columns: {\n              hex_id: 'hex_id'\n            },\n            isVisible: true,\n            visConfig: {\n              opacity: 0.8,\n              colorRange: {\n                name: 'Global Warming',\n                type: 'sequential',\n                category: 'Uber',\n                colors: ['#5A1846', '#900C3F', '#C70039', '#E3611C', '#F1920E', '#FFC300']\n              },\n              coverage: 1,\n              sizeRange: [0, 500],\n              coverageRange: [0, 1],\n              elevationScale: 5\n            },\n            textLabel: [\n              {\n                field: null,\n                color: [255, 255, 255],\n                size: 18,\n                offset: [0, 0],\n                anchor: 'start',\n                alignment: 'center'\n              }\n            ]\n          },\n          visualChannels: {\n            colorField: {\n              name: 'value',\n              type: 'integer'\n            },\n            colorScale: 'quantile',\n            sizeField: null,\n            sizeScale: 'linear',\n            coverageField: null,\n            coverageScale: 'linear'\n          }\n        }\n      ],\n      interactionConfig: {\n        tooltip: {\n          fieldsToShow: {\n            'h3-hex-id': ['hex_id', 'value']\n          },\n          enabled: true\n        },\n        brush: {\n          size: 0.5,\n          enabled: false\n        },\n        geocoder: {\n          enabled: false\n        }\n      },\n      layerBlending: 'normal',\n      splitMaps: [\n        {\n          layers: {\n            avlgol: {\n              isAvailable: true,\n              isVisible: true\n            }\n          }\n        },\n        {\n          layers: {\n            avlgol: {\n              isAvailable: true,\n              isVisible: true\n            }\n          }\n        }\n      ]\n    },\n    mapStyle: {\n      styleType: 'dark',\n      topLayerGroups: {},\n      visibleLayerGroups: {\n        label: true,\n        road: true,\n        border: false,\n        building: true,\n        water: true,\n        land: true,\n        '3d building': false\n      },\n      mapStyles: {}\n    },\n    mapState: {\n      isSplit: true\n    }\n  }\n};\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nexport default `s2, value\n80858004,0.5979242952642347\n8085800c,0.5446256069712141\n80858014,0.1187171597109975\n8085801c,0.2859146314037557\n80858024,0.19549012367504126\n80858034,0.3373452974230604\n8085803c,0.9218176408795662\n80858044,0.23470692356446143\n8085804c,0.1580509670379684\n80858054,0.15992745628743954\n`;\n\nexport const dataId = 's2-data';\nexport const config = {\n  version: 'v1',\n  config: {\n    visState: {\n      filters: [],\n      layers: [\n        {\n          type: 's2',\n          config: {\n            dataId,\n            label: 'S2 Layer',\n            color: [241, 92, 23],\n            columns: {\n              token: 's2'\n            },\n            isVisible: true,\n            visConfig: {\n              opacity: 0.8,\n              strokeColor: [253, 230, 230],\n              colorRange: {\n                name: 'Global Warming',\n                type: 'sequential',\n                category: 'Uber',\n                colors: ['#5A1846', '#900C3F', '#C70039', '#E3611C', '#F1920E', '#FFC300']\n              }\n            }\n          },\n          visualChannels: {\n            colorField: {\n              name: ' value',\n              type: 'real'\n            },\n            colorScale: 'quantile'\n          }\n        }\n      ]\n    }\n  }\n};\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nexport default {\n  type: 'FeatureCollection',\n  features: [\n    {\n      type: 'Feature',\n      properties: {\n        vendor: 'A',\n        value: 10\n      },\n      geometry: {\n        type: 'LineString',\n        coordinates: [\n          [-73.78966, 40.6429, 0, 1565578338],\n          [-73.7895, 40.64267, 0, 1565578346],\n          [-73.78923, 40.6424, 0, 1565578356],\n          [-73.78905, 40.64222, 0, 1565578364],\n          [-73.7889, 40.64209, 0, 1565578365],\n          [-73.78859, 40.64191, 0, 1565578367],\n          [-73.78836, 40.64181, 0, 1565578368],\n          [-73.78793, 40.6417, 0, 1565578371],\n          [-73.78756, 40.64163, 0, 1565578373],\n          [-73.78707, 40.64159, 0, 1565578375],\n          [-73.78674, 40.64161, 0, 1565578377],\n          [-73.78659, 40.64166, 0, 1565578378],\n          [-73.78646, 40.64172, 0, 1565578379],\n          [-73.78633, 40.64182, 0, 1565578380],\n          [-73.78612, 40.6422, 0, 1565578382],\n          [-73.78607, 40.64244, 0, 1565578384],\n          [-73.7861, 40.64263, 0, 1565578385],\n          [-73.78621, 40.64305, 0, 1565578388],\n          [-73.78621, 40.64323, 0, 1565578390],\n          [-73.78619, 40.64337, 0, 1565578391],\n          [-73.78612, 40.6435, 0, 1565578392],\n          [-73.78586, 40.64382, 0, 1565578394],\n          [-73.78583, 40.64388, 0, 1565578395],\n          [-73.78582, 40.64397, 0, 1565578395],\n          [-73.78585, 40.64404, 0, 1565578396],\n          [-73.78655, 40.64488, 0, 1565578403],\n          [-73.78666, 40.64505, 0, 1565578404],\n          [-73.78685, 40.64546, 0, 1565578407],\n          [-73.7869, 40.64571, 0, 1565578409],\n          [-73.7869, 40.64592, 0, 1565578410],\n          [-73.78687, 40.64619, 0, 1565578412],\n          [-73.78677, 40.64634, 0, 1565578413],\n          [-73.78668, 40.64643, 0, 1565578414],\n          [-73.78658, 40.64649, 0, 1565578415],\n          [-73.78645, 40.64655, 0, 1565578416],\n          [-73.78629, 40.64657, 0, 1565578416],\n          [-73.78613, 40.64656, 0, 1565578417],\n          [-73.786, 40.64653, 0, 1565578418],\n          [-73.78588, 40.64647, 0, 1565578419],\n          [-73.78578, 40.6464, 0, 1565578419],\n          [-73.7857, 40.6463, 0, 1565578420],\n          [-73.78566, 40.64622, 0, 1565578421],\n          [-73.78565, 40.64607, 0, 1565578422],\n          [-73.78574, 40.64584, 0, 1565578423],\n          [-73.78588, 40.64565, 0, 1565578425],\n          [-73.78611, 40.64547, 0, 1565578427],\n          [-73.78638, 40.64534, 0, 1565578428],\n          [-73.78677, 40.6452, 0, 1565578431],\n          [-73.78702, 40.64514, 0, 1565578432],\n          [-73.78744, 40.64505, 0, 1565578434],\n          [-73.7878, 40.645, 0, 1565578436],\n          [-73.78831, 40.64496, 0, 1565578439],\n          [-73.79014, 40.64495, 0, 1565578449]\n        ]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {\n        vendor: 'B',\n        value: 4\n      },\n      geometry: {\n        type: 'LineString',\n        coordinates: [\n          [-74.33223, 40.64375, 0, 1565578213],\n          [-74.33242, 40.64353, 0, 1565578217],\n          [-74.33001, 40.64222, 0, 1565578243],\n          [-74.32882, 40.64154, 0, 1565578256],\n          [-74.32682, 40.64039, 0, 1565578278],\n          [-74.32589, 40.63985, 0, 1565578288],\n          [-74.31725, 40.63485, 0, 1565578382],\n          [-74.31404, 40.63302, 0, 1565578417],\n          [-74.30616, 40.6283, 0, 1565578504],\n          [-74.30592, 40.62814, 0, 1565578506],\n          [-74.3056, 40.62783, 0, 1565578511],\n          [-74.30549, 40.62763, 0, 1565578513],\n          [-74.30536, 40.62722, 0, 1565578518],\n          [-74.30524, 40.62704, 0, 1565578521],\n          [-74.30511, 40.62689, 0, 1565578523],\n          [-74.30447, 40.62623, 0, 1565578532],\n          [-74.30409, 40.62652, 0, 1565578536],\n          [-74.30374, 40.62689, 0, 1565578541],\n          [-74.30328, 40.62753, 0, 1565578549],\n          [-74.30297, 40.6279, 0, 1565578553],\n          [-74.30174, 40.6292, 0, 1565578570],\n          [-74.29912, 40.63154, 0, 1565578585],\n          [-74.29855, 40.63202, 0, 1565578588],\n          [-74.29796, 40.63249, 0, 1565578591],\n          [-74.29508, 40.63461, 0, 1565578606],\n          [-74.29448, 40.63508, 0, 1565578610],\n          [-74.29409, 40.6354, 0, 1565578612],\n          [-74.29373, 40.63575, 0, 1565578614],\n          [-74.29322, 40.63626, 0, 1565578617],\n          [-74.29209, 40.63753, 0, 1565578624],\n          [-74.29086, 40.63902, 0, 1565578633],\n          [-74.28998, 40.64015, 0, 1565578639],\n          [-74.28944, 40.64091, 0, 1565578644],\n          [-74.28908, 40.64151, 0, 1565578647],\n          [-74.2888, 40.64201, 0, 1565578649],\n          [-74.2883, 40.64303, 0, 1565578655],\n          [-74.28789, 40.64408, 0, 1565578660],\n          [-74.28762, 40.64494, 0, 1565578664],\n          [-74.28745, 40.6457, 0, 1565578668],\n          [-74.28733, 40.64636, 0, 1565578671],\n          [-74.28723, 40.64724, 0, 1565578676],\n          [-74.28717, 40.64812, 0, 1565578680],\n          [-74.28712, 40.65661, 0, 1565578721],\n          [-74.28709, 40.66022, 0, 1565578739],\n          [-74.28705, 40.6611, 0, 1565578743],\n          [-74.28698, 40.66175, 0, 1565578746],\n          [-74.28687, 40.6624, 0, 1565578750],\n          [-74.28667, 40.66327, 0, 1565578754],\n          [-74.28642, 40.6641, 0, 1565578758],\n          [-74.28619, 40.66472, 0, 1565578761],\n          [-74.28573, 40.66576, 0, 1565578766],\n          [-74.2853, 40.66657, 0, 1565578771],\n          [-74.28506, 40.66697, 0, 1565578773],\n          [-74.28434, 40.66804, 0, 1565578779],\n          [-74.28077, 40.67287, 0, 1565578806]\n        ]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {\n        vendor: 'A',\n        value: 7\n      },\n      geometry: {\n        type: 'LineString',\n        coordinates: [\n          [-73.87893, 40.64672, 0, 1565578095],\n          [-73.87969, 40.64624, 0, 1565578123],\n          [-73.87976, 40.64619, 0, 1565578125],\n          [-73.88064, 40.64697, 0, 1565578156],\n          [-73.88138, 40.64765, 0, 1565578181],\n          [-73.88234, 40.64849, 0, 1565578214],\n          [-73.883, 40.64911, 0, 1565578237],\n          [-73.88338, 40.64943, 0, 1565578250],\n          [-73.88349, 40.64941, 0, 1565578252],\n          [-73.88411, 40.64995, 0, 1565578273],\n          [-73.8848, 40.65076, 0, 1565578302],\n          [-73.88624, 40.6527, 0, 1565578367],\n          [-73.88632, 40.65281, 0, 1565578371],\n          [-73.88747, 40.65232, 0, 1565578386],\n          [-73.88798, 40.6521, 0, 1565578393],\n          [-73.88896, 40.65341, 0, 1565578430],\n          [-73.88978, 40.65306, 0, 1565578442],\n          [-73.89059, 40.65271, 0, 1565578454],\n          [-73.89413, 40.65747, 0, 1565578588],\n          [-73.89424, 40.65762, 0, 1565578593],\n          [-73.89595, 40.65786, 0, 1565578627],\n          [-73.89613, 40.65785, 0, 1565578630],\n          [-73.89616, 40.65796, 0, 1565578633],\n          [-73.898, 40.65768, 0, 1565578661],\n          [-73.8988, 40.65753, 0, 1565578673],\n          [-73.89955, 40.65738, 0, 1565578684],\n          [-73.90021, 40.65728, 0, 1565578695],\n          [-73.90039, 40.65724, 0, 1565578698],\n          [-73.90051, 40.65719, 0, 1565578700],\n          [-73.90063, 40.65712, 0, 1565578703],\n          [-73.90076, 40.65702, 0, 1565578706],\n          [-73.90118, 40.6566, 0, 1565578717],\n          [-73.90135, 40.65646, 0, 1565578721],\n          [-73.90282, 40.65553, 0, 1565578751],\n          [-73.90299, 40.65544, 0, 1565578755],\n          [-73.90319, 40.65536, 0, 1565578758],\n          [-73.90321, 40.65546, 0, 1565578761],\n          [-73.90337, 40.65542, 0, 1565578765],\n          [-73.90616, 40.65501, 0, 1565578836]\n        ]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {\n        vendor: 'A',\n        value: 11\n      },\n      geometry: {\n        type: 'LineString',\n        coordinates: [\n          [-74.18572, 40.68929, 0, 1565577803],\n          [-74.1858, 40.68924, 0, 1565577808],\n          [-74.18564, 40.68909, 0, 1565577821],\n          [-74.18529, 40.68929, 0, 1565577830],\n          [-74.18486, 40.68954, 0, 1565577841],\n          [-74.18482, 40.68982, 0, 1565577849],\n          [-74.18481, 40.691, 0, 1565577882],\n          [-74.18484, 40.69121, 0, 1565577888],\n          [-74.18487, 40.6913, 0, 1565577891],\n          [-74.18494, 40.69143, 0, 1565577895],\n          [-74.18506, 40.69157, 0, 1565577900],\n          [-74.18531, 40.69177, 0, 1565577907],\n          [-74.18612, 40.69232, 0, 1565577931],\n          [-74.18633, 40.69247, 0, 1565577937],\n          [-74.18641, 40.69259, 0, 1565577941],\n          [-74.18643, 40.69267, 0, 1565577943],\n          [-74.18644, 40.69272, 0, 1565577944],\n          [-74.18641, 40.69288, 0, 1565577946],\n          [-74.18636, 40.69297, 0, 1565577947],\n          [-74.18582, 40.69346, 0, 1565577954],\n          [-74.18532, 40.69402, 0, 1565577961],\n          [-74.18499, 40.6945, 0, 1565577967]\n        ]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {\n        vendor: 'B',\n        value: 6\n      },\n      geometry: {\n        type: 'LineString',\n        coordinates: [\n          [-74.00823, 40.71351, 0, 1565577838],\n          [-74.00884, 40.7138, 0, 1565577867],\n          [-74.00668, 40.71653, 0, 1565577947],\n          [-74.00625, 40.71708, 0, 1565577962],\n          [-74.00753, 40.71766, 0, 1565577996],\n          [-74.00888, 40.71827, 0, 1565578032],\n          [-74.00869, 40.71929, 0, 1565578060],\n          [-74.00858, 40.71996, 0, 1565578077],\n          [-74.01191, 40.72029, 0, 1565578205],\n          [-74.01204, 40.72031, 0, 1565578210],\n          [-74.01097, 40.72554, 0, 1565578295],\n          [-74.01078, 40.72677, 0, 1565578315],\n          [-74.01008, 40.73394, 0, 1565578431],\n          [-74.00983, 40.73694, 0, 1565578480],\n          [-74.00979, 40.73746, 0, 1565578488],\n          [-74.00989, 40.73851, 0, 1565578505],\n          [-74.0099, 40.73899, 0, 1565578513],\n          [-74.00985, 40.73929, 0, 1565578518],\n          [-74.0098, 40.73942, 0, 1565578520],\n          [-74.00967, 40.73971, 0, 1565578525],\n          [-74.00928, 40.74033, 0, 1565578536],\n          [-74.00913, 40.74065, 0, 1565578541],\n          [-74.00906, 40.74081, 0, 1565578544],\n          [-74.00887, 40.74154, 0, 1565578556],\n          [-74.00871, 40.74219, 0, 1565578567],\n          [-74.00868, 40.74235, 0, 1565578569],\n          [-74.00837, 40.74395, 0, 1565578595],\n          [-74.00803, 40.74588, 0, 1565578625],\n          [-74.00773, 40.7475, 0, 1565578651],\n          [-74.00769, 40.74775, 0, 1565578654],\n          [-74.00762, 40.74845, 0, 1565578668],\n          [-74.00768, 40.7487, 0, 1565578672],\n          [-74.00777, 40.74892, 0, 1565578677],\n          [-74.00811, 40.74959, 0, 1565578690],\n          [-74.0082, 40.7498, 0, 1565578694],\n          [-74.00825, 40.75003, 0, 1565578699],\n          [-74.00827, 40.75029, 0, 1565578703],\n          [-74.00825, 40.75055, 0, 1565578708],\n          [-74.00699, 40.75388, 0, 1565578773],\n          [-74.00664, 40.75442, 0, 1565578784],\n          [-74.00336, 40.75891, 0, 1565578881]\n        ]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {\n        vendor: 'A',\n        value: 1\n      },\n      geometry: {\n        type: 'LineString',\n        coordinates: [\n          [-73.97301, 40.67601, 0, 1565578666],\n          [-73.97161, 40.67546, 0, 1565578694],\n          [-73.97142, 40.67575, 0, 1565578712],\n          [-73.9719, 40.67641, 0, 1565578732],\n          [-73.97244, 40.67716, 0, 1565578756],\n          [-73.97234, 40.67744, 0, 1565578778],\n          [-73.96917, 40.67678, 0, 1565578836]\n        ]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {\n        vendor: 'A',\n        value: 7\n      },\n      geometry: {\n        type: 'LineString',\n        coordinates: [\n          [-74.03806, 40.74578, 0, 1565578252],\n          [-74.03893, 40.74289, 0, 1565578322],\n          [-74.03934, 40.74158, 0, 1565578354],\n          [-74.0384, 40.74142, 0, 1565578376],\n          [-74.03746, 40.74126, 0, 1565578399],\n          [-74.03824, 40.73872, 0, 1565578465],\n          [-74.03878, 40.73693, 0, 1565578511],\n          [-74.03893, 40.73693, 0, 1565578513],\n          [-74.03974, 40.73704, 0, 1565578524],\n          [-74.03979, 40.7369, 0, 1565578528],\n          [-74.03964, 40.73677, 0, 1565578531],\n          [-74.03916, 40.73685, 0, 1565578538],\n          [-74.03881, 40.73686, 0, 1565578546],\n          [-74.03854, 40.73684, 0, 1565578553],\n          [-74.03864, 40.73655, 0, 1565578562],\n          [-74.03879, 40.73571, 0, 1565578589],\n          [-74.03943, 40.73155, 0, 1565578722],\n          [-74.03954, 40.7308, 0, 1565578746],\n          [-74.03791, 40.73066, 0, 1565578753],\n          [-74.03782, 40.73065, 0, 1565578754],\n          [-74.03789, 40.73024, 0, 1565578763],\n          [-74.03795, 40.72999, 0, 1565578769],\n          [-74.03797, 40.72988, 0, 1565578770],\n          [-74.03798, 40.7298, 0, 1565578771],\n          [-74.0368, 40.7298, 0, 1565578784],\n          [-74.03646, 40.72977, 0, 1565578788],\n          [-74.03613, 40.72971, 0, 1565578791],\n          [-74.03604, 40.72969, 0, 1565578792],\n          [-74.03222, 40.72883, 0, 1565578822]\n        ]\n      }\n    },\n    {\n      type: 'Feature',\n      properties: {\n        vendor: 'B',\n        value: 15\n      },\n      geometry: {\n        type: 'LineString',\n        coordinates: [\n          [-73.79007, 40.64681, 0, 1565577697],\n          [-73.79092, 40.64643, 0, 1565577720],\n          [-73.79108, 40.64631, 0, 1565577726],\n          [-73.7912, 40.64613, 0, 1565577732],\n          [-73.79121, 40.64597, 0, 1565577737],\n          [-73.79116, 40.64581, 0, 1565577743],\n          [-73.79106, 40.6457, 0, 1565577747],\n          [-73.79094, 40.64557, 0, 1565577749],\n          [-73.79072, 40.64542, 0, 1565577751],\n          [-73.79057, 40.64534, 0, 1565577753],\n          [-73.7904, 40.64527, 0, 1565577754],\n          [-73.79022, 40.64522, 0, 1565577755],\n          [-73.78974, 40.64522, 0, 1565577758],\n          [-73.78916, 40.64528, 0, 1565577760],\n          [-73.78889, 40.64534, 0, 1565577762],\n          [-73.78855, 40.64545, 0, 1565577764],\n          [-73.78827, 40.64558, 0, 1565577765],\n          [-73.78818, 40.6456, 0, 1565577766],\n          [-73.788, 40.64562, 0, 1565577767],\n          [-73.78793, 40.64561, 0, 1565577767],\n          [-73.7878, 40.64556, 0, 1565577768],\n          [-73.78772, 40.64545, 0, 1565577769],\n          [-73.78771, 40.64534, 0, 1565577769],\n          [-73.78775, 40.64524, 0, 1565577770],\n          [-73.78784, 40.64518, 0, 1565577771],\n          [-73.78799, 40.64513, 0, 1565577771],\n          [-73.78984, 40.64512, 0, 1565577781],\n          [-73.79041, 40.64509, 0, 1565577784],\n          [-73.79124, 40.64508, 0, 1565577788],\n          [-73.79167, 40.64506, 0, 1565577790],\n          [-73.79193, 40.64508, 0, 1565577791],\n          [-73.79313, 40.64494, 0, 1565577797],\n          [-73.79412, 40.64485, 0, 1565577802],\n          [-73.79437, 40.64481, 0, 1565577804],\n          [-73.79472, 40.64474, 0, 1565577805],\n          [-73.79569, 40.64469, 0, 1565577808],\n          [-73.79623, 40.64469, 0, 1565577810],\n          [-73.79671, 40.64472, 0, 1565577811],\n          [-73.79722, 40.64478, 0, 1565577813],\n          [-73.79768, 40.64486, 0, 1565577814],\n          [-73.79813, 40.64496, 0, 1565577816],\n          [-73.79865, 40.64511, 0, 1565577817],\n          [-73.79896, 40.64522, 0, 1565577818],\n          [-73.79953, 40.64545, 0, 1565577820],\n          [-73.80022, 40.64582, 0, 1565577823],\n          [-73.80062, 40.64606, 0, 1565577824],\n          [-73.80102, 40.64636, 0, 1565577826],\n          [-73.80178, 40.64703, 0, 1565577829],\n          [-73.80245, 40.64766, 0, 1565577832],\n          [-73.80314, 40.64837, 0, 1565577836],\n          [-73.80379, 40.64909, 0, 1565577839],\n          [-73.80479, 40.65031, 0, 1565577845],\n          [-73.80528, 40.65096, 0, 1565577848],\n          [-73.80578, 40.65166, 0, 1565577851],\n          [-73.80623, 40.65236, 0, 1565577854],\n          [-73.80658, 40.65294, 0, 1565577856],\n          [-73.80681, 40.65342, 0, 1565577858],\n          [-73.80702, 40.65396, 0, 1565577860],\n          [-73.80718, 40.65449, 0, 1565577862],\n          [-73.8073, 40.65502, 0, 1565577864],\n          [-73.80738, 40.6557, 0, 1565577867],\n          [-73.80731, 40.65585, 0, 1565577868],\n          [-73.80719, 40.65642, 0, 1565577873],\n          [-73.8071, 40.6567, 0, 1565577876],\n          [-73.807, 40.65692, 0, 1565577878],\n          [-73.80687, 40.6571, 0, 1565577880],\n          [-73.80672, 40.65725, 0, 1565577881],\n          [-73.80641, 40.65752, 0, 1565577884],\n          [-73.80622, 40.65766, 0, 1565577886],\n          [-73.80606, 40.65781, 0, 1565577887],\n          [-73.80593, 40.65799, 0, 1565577888]\n        ]\n      }\n    }\n  ]\n};\n\nexport const animateTripDataId = 'animate-trip-data';\nexport const pointDataId = 'sample_taxi_trip';\n\n// animationConfig,domain 1565577697000, 1565578881000\n// filer.domain: 1565576422000, 1565577120000\nexport const pointData = {\n  fields: [\n    {\n      name: 'tpep_pickup_datetime',\n      format: 'YYYY-M-D H:m:s',\n      type: 'timestamp'\n    },\n    {name: 'pickup_longitude', format: '', type: 'real'},\n    {name: 'pickup_latitude', format: '', type: 'real'}\n  ],\n  rows: [\n    ['2019-08-12 2:23:42', -73.99389648, 40.75011063],\n    ['2019-08-12 2:32:00', -73.97642517, 40.73981094],\n    ['2019-08-12 2:21:00', -73.96870422, 40.75424576],\n    ['2019-08-12 2:28:18', -73.86306, 40.76958084],\n    ['2019-08-12 2:20:36', -73.94554138, 40.77942276],\n    ['2019-08-12 2:20:22', -73.87445831, 40.7740097],\n    ['2019-08-12 2:31:00', -73.97660065, 40.7518959]\n  ]\n};\n\nexport const replacePointData = {\n  fields: pointData.fields,\n  rows: [\n    ['2019-08-12 2:23:18', -73.97812653, 40.75257492],\n    ['2019-08-12 2:07:26', -74.00622559, 40.73387146],\n    ['2019-08-12 2:08:55', -73.97122955, 40.75518417],\n    ['2019-08-12 2:10:30', -73.97627258, 40.75893402]\n  ]\n};\n","// SPDX-License-Identifier: MIT\r\n// Copyright contributors to the kepler.gl project\r\n\r\nimport React, {Component,useEffect} from 'react';\r\nimport AutoSizer from 'react-virtualized/dist/commonjs/AutoSizer';\r\nimport styled, {ThemeProvider} from 'styled-components';\r\nimport window from 'global/window';\r\nimport {connect} from 'react-redux';\r\n\r\nimport {theme} from '@kepler.gl/styles';\r\nimport Banner from './components/banner';\r\nimport Announcement, {FormLink} from './components/announcement';\r\nimport {replaceLoadDataModal} from './factories/load-data-modal';\r\nimport {replaceMapControl} from './factories/map-control';\r\nimport {replacePanelHeader} from './factories/panel-header';\r\nimport {CLOUD_PROVIDERS_CONFIGURATION, DEFAULT_FEATURE_FLAGS} from './constants/default-settings';\r\nimport {messages} from './constants/localization';\r\nimport KeplerGlSchema from '@kepler.gl/schemas';\r\n\r\nimport {\r\n  loadRemoteMap,\r\n  loadSampleConfigurations,\r\n  onExportFileSuccess,\r\n  onLoadCloudMapSuccess\r\n} from './actions';\r\n\r\nimport {loadCloudMap, addDataToMap, addNotification, replaceDataInMap} from '@kepler.gl/actions';\r\nimport {CLOUD_PROVIDERS} from './cloud-providers';\r\n\r\nconst KeplerGl = require('@kepler.gl/components').injectComponents([\r\n  replaceLoadDataModal(),\r\n  replaceMapControl(),\r\n  replacePanelHeader()\r\n]);\r\n\r\n// Sample data\r\n/* eslint-disable no-unused-vars */\r\nimport sampleTripData, {testCsvData, sampleTripDataConfig} from './data/sample-trip-data';\r\nimport sampleGeojson from './data/sample-small-geojson';\r\nimport sampleGeojsonPoints from './data/sample-geojson-points';\r\nimport sampleGeojsonConfig from './data/sample-geojson-config';\r\nimport sampleH3Data, {config as h3MapConfig} from './data/sample-hex-id-csv';\r\nimport sampleS2Data, {config as s2MapConfig, dataId as s2DataId} from './data/sample-s2-data';\r\nimport sampleAnimateTrip, {animateTripDataId} from './data/sample-animate-trip-data';\r\nimport sampleIconCsv, {config as savedMapConfig} from './data/sample-icon-csv';\r\nimport sampleGpsData from './data/sample-gps-data';\r\n\r\n\r\nimport {processCsvData, processGeojson} from '@kepler.gl/processors';\r\nimport { RGBAImage } from 'maplibre-gl';\r\nimport { isEnumMember } from 'typescript';\r\n/* eslint-enable no-unused-vars */\r\n\r\nconst BannerHeight = 48;\r\nconst BannerKey = `banner-${FormLink}`;\r\nconst keplerGlGetState = state => state.demo.keplerGl;\r\nwindow.localStorage.setItem(\"issidebarshow\",\"1\");\r\nwindow.localStorage.setItem(\"actedupon1\",\"No\");\r\nwindow.localStorage.setItem(\"actedupon2\",\"No\");\r\nwindow.localStorage.setItem(\"actedupon3\",\"No\");\r\nwindow.localStorage.setItem(\"actedupon4\",\"No\");\r\nlet shadecolorslighter = [\r\n  \"#005854\",\r\n  \"#196A65\",\r\n  \"#327C77\",\r\n  \"#4B8E88\",\r\n  \"#64A099\",\r\n  \"#7DB2AB\",\r\n  \"#96C4BC\",\r\n  \"#AFD6CD\",\r\n  \"#C8E8DF\",\r\n  \"#E1FAF0\"\r\n];\r\nlet shadecolorsdarker = [\r\n  \"#E1FAF0\",\r\n  \"#C8E8DF\",\r\n  \"#AFD6CD\",\r\n  \"#96C4BC\",    \r\n  \"#7DB2AB\",\r\n  \"#64A099\",   \r\n  \"#4B8E88\",         \r\n  \"#327C77\",\r\n  \"#196A65\",\r\n  \"#005854\"\r\n]; \r\n\r\nconst GlobalStyle = styled.div`\r\n  font-family: ff-clan-web-pro, 'Helvetica Neue', Helvetica, sans-serif;\r\n  font-weight: 400;\r\n  font-size: 0.875em;\r\n  line-height: 1.71429;\r\n\r\n  *,\r\n  *:before,\r\n  *:after {\r\n    -webkit-box-sizing: border-box;\r\n    -moz-box-sizing: border-box;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  ul {\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n\r\n  li {\r\n    margin: 0;\r\n  }\r\n\r\n  a {\r\n    text-decoration: none;\r\n    color: ${props => props.theme.labelColor};\r\n  }\r\n`;\r\n\r\nconst CONTAINER_STYLE = {\r\n  transition: 'margin 1s, height 1s',\r\n  position: 'absolute',\r\n  width: '100%',\r\n  height: '80%',  // change to 100% on final\r\n  left: 0,\r\n  top: 0\r\n};\r\n\r\nasync function _plotdatafromgeoJSONAPI(url){\r\n  const geoJSON = await fetch(url)\r\n  const geojson = geoJSON.json();\r\n  return geojson;\r\n}\r\n\r\nlet dprops = null;\r\nlet fprops = [];\r\nlet externalDataConfig = {};\r\nlet fkey = \"\";\r\nlet fshadesort = \"darker\";\r\nlocalStorage.setItem(\"sprops\",\"darker\");\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showBanner: false,\r\n      width: window.innerWidth,\r\n      height: window.innerHeight,\r\n      mapboxtoken:\"pk.eyJ1IjoicmVhZHlmYWN0cyIsImEiOiJHdlJKV0dJIn0.DeJMH4SXQ3RQke0r_STuKA\",\r\n      initMap:false,\r\n      show:0\r\n    };    \r\n    this.loadExternalJSONData = this.loadExternalData.bind(this); // Bind the method to the class instance\r\n    this.loadExternalShadingSortData = this.loadExternalShadingSort.bind(this);\r\n    this.loadExternalShadingKeyData = this.loadExternalShadingKey.bind(this);\r\n    this.loadExternalPropsData = this.loadExternalProps.bind(this);\r\n  }\r\n  \r\n  loadExternalProps = (props) => {\r\n    this._loadExternalProps(props)\r\n  };\r\n\r\n  \r\n\r\n  loadExternalData = (data) => {\r\n    this.setState({show:1});\r\n    setTimeout(()=>{\r\n       this._loadExternalData(data);\r\n    },1000);   \r\n  };\r\n\r\n  loadExternalShadingSort = (props) =>{\r\n    this._loadExternalShadingSort(props)\r\n  };\r\n\r\n  loadExternalShadingKey = (props) =>{\r\n    this._loadExternalShadingKey(props);\r\n  };\r\n \r\n  componentDidMount() {\r\n    // if we pass an id as part of the url\r\n    // we ry to fetch along map configuration\r\n\r\n\r\n    const {params: {id, provider} = {}, location: {query = {}} = {}} = this.props;\r\n    dprops = this.props;\r\n    console.log(\"mounting Window details\");\r\n    window.loadExternalJSONData  = this.loadExternalJSONData\r\n    window.loadExternalShadingSortData = this.loadExternalShadingSortData;\r\n    window.loadExternalShadingKeyData = this.loadExternalShadingKeyData;\r\n    window.loadExternalPropsData = this.loadExternalPropsData;\r\n   // window.loadExternalProps = this.loadExternalProps;\r\n   // window.loadExternalShadingSort = this.loadExternalShadingSort;\r\n  //  window.loadExternalShadingKey = this.loadExternalShadingKey;\r\n  //  window.loadExternalData = this.loadExternalData;    \r\n//    this.loadExternalProp.current = this.loadExternalPrope;\r\n//    console.log(\"this\",this.loadExternalProp);\r\n    const cloudProvider = CLOUD_PROVIDERS.find(c => c.name === provider);\r\n    if (cloudProvider) {\r\n      this.props.dispatch(\r\n        loadCloudMap({\r\n          loadParams: query,\r\n          provider: cloudProvider,\r\n          onSuccess: onLoadCloudMapSuccess\r\n        })\r\n      );\r\n      return;\r\n    }\r\n\r\n    // Load sample using its id\r\n    if (id) {\r\n      this.props.dispatch(loadSampleConfigurations(id));\r\n    }\r\n\r\n    // Load map using a custom\r\n    if (query.mapUrl) {\r\n      // TODO?: validate map url\r\n      this.props.dispatch(loadRemoteMap({dataUrl: query.mapUrl}));\r\n    }\r\n\r\n    // delay zs to show the banner\r\n    // if (!window.localStorage.getItem(BannerKey)) {\r\n    //   window.setTimeout(this._showBanner, 3000);\r\n    // }\r\n    // load sample data\r\n    // this._loadSampleData();\r\n\r\n    // Notifications\r\n    // this._loadMockNotifications();\r\n    this.plotdatafromgeojson();\r\n  }\r\n\r\n  _showBanner = () => {\r\n    this.setState({showBanner: true});\r\n  };\r\n\r\n  _hideBanner = () => {\r\n    this.setState({showBanner: false});\r\n  };\r\n\r\n  _disableBanner = () => {\r\n    this._hideBanner();\r\n    window.localStorage.setItem(BannerKey, 'true');\r\n  };\r\n\r\n  _loadMockNotifications = () => {\r\n    const notifications = [\r\n      [{message: 'Welcome to Kepler.gl'}, 3000],\r\n      [{message: 'Something is wrong', type: 'error'}, 1000],\r\n      [{message: 'I am getting better', type: 'warning'}, 1000],\r\n      [{message: 'Everything is fine', type: 'success'}, 1000]\r\n    ];\r\n\r\n    this._addNotifications(notifications);\r\n  };\r\n\r\n  _addNotifications(notifications) {\r\n    if (notifications && notifications.length) {\r\n      const [notification, timeout] = notifications[0];\r\n\r\n      window.setTimeout(() => {\r\n        this.props.dispatch(addNotification(notification));\r\n        this._addNotifications(notifications.slice(1));\r\n      }, timeout);\r\n    }\r\n  }\r\n\r\n  \r\n  _loadExternalData(datajson) {\r\n  //  let newfdata = []\r\n  //  data.features.forEach((feat)=>{\r\n  //      let newprops = {};\r\n  //      feat.properties && Object.keys(feat.properties).forEach((fkey)=>{\r\n  //         if (fprops.includes(fkey.toUpperCase())){\r\n  //             newprops[fkey] = feat.properties[fkey];\r\n  //         }\r\n  //      });\r\n  //      newfdata.push(feat);\r\n  //      newfdata[newfdata.length-1].properties = newprops;\r\n  //  });\r\n  //  newfdata = {\"type\":\"FeatureCollection\",\"features\":newfdata};\r\n      let keysfound = \"\";\r\n      let data = datajson;\r\n      if (data.features.length === 1){\r\n          data.features.push(data.features[0]);\r\n      }\r\n      Object.keys(data.features[0].properties).forEach((skey)=>{\r\n          if (isNaN(parseFloat(data.features[0].properties[skey]))){\r\n                   \r\n          }else{\r\n              if (!fkey || fkey === null || fkey === undefined || fkey.trim().length === 0){\r\n                  fkey = skey;\r\n              }    \r\n          }\r\n          keysfound += skey + \";\";\r\n      });\r\n      if (keysfound.toUpperCase().indexOf(fkey.toUpperCase()) < 0){\r\n          fkey = \"\";\r\n          Object.keys(data.features[0].properties).forEach((key)=>{\r\n            if (isNaN(parseFloat(data.features[0].properties[key]))){\r\n                 \r\n            }else{\r\n               if (!fkey){\r\n                   fkey = key;\r\n               }    \r\n            }\r\n          });      \r\n      }  \r\n      localStorage.setItem(\"cprops\",fkey);\r\n      externalDataConfig = {\r\n        \"version\": \"v1\",\r\n        \"config\": {\r\n            \"visState\": {\r\n                \"filters\": [],\r\n                \"layers\": [\r\n                    {\r\n                        \"id\": \"mylayer\",\r\n                        \"type\": \"geojson\",\r\n                        \"config\": {\r\n                            \"dataId\": \"external_data\",\r\n                            \"label\": \"  \",\r\n                            \"color\": [\r\n                                0,\r\n                                0,\r\n                                0\r\n                            ],\r\n                            \"highlightColor\": [\r\n                                0,\r\n                                0,\r\n                                0,\r\n                                255\r\n                            ],\r\n                            \"columns\": {\r\n                                \"geojson\": \"_geojson\"\r\n                            },\r\n                            \"isVisible\": true,\r\n                            \"visConfig\": {\r\n                                \"opacity\": 0.8,\r\n                                \"strokeOpacity\": 0.8,\r\n                                \"thickness\": 0.5,\r\n                                \"strokeColor\": [\r\n                                    0,\r\n                                    0,\r\n                                    0\r\n                                ],\r\n                                \"colorRange\": {\r\n                                    \"name\": \"Global Warming\",\r\n                                    \"type\": \"sequential\",\r\n                                    \"category\": \"Uber\",\r\n                                    \"colors\": [\r\n                                      \"#005854\",\r\n                                      \"#196A65\",\r\n                                      \"#327C77\",\r\n                                      \"#4B8E88\",\r\n                                      \"#64A099\",\r\n                                      \"#7DB2AB\",\r\n                                      \"#96C4BC\",\r\n                                      \"#AFD6CD\",\r\n                                      \"#C8E8DF\",\r\n                                      \"#E1FAF0\"\r\n                                    ]\r\n                                },\r\n                                \"strokeColorRange\": {\r\n                                    \"name\": \"Global Warming\",\r\n                                    \"type\": \"sequential\",\r\n                                    \"category\": \"Uber\",\r\n                                    \"colors\": [\r\n                                      \"#005854\",\r\n                                      \"#196A65\",\r\n                                      \"#327C77\",\r\n                                      \"#4B8E88\",\r\n                                      \"#64A099\",\r\n                                      \"#7DB2AB\",\r\n                                      \"#96C4BC\",\r\n                                      \"#AFD6CD\",\r\n                                      \"#C8E8DF\",\r\n                                      \"#E1FAF0\"\r\n                                    ]\r\n                                },\r\n                                \"radius\": 10,\r\n                                \"sizeRange\": [\r\n                                    0,\r\n                                    10\r\n                                ],\r\n                                \"radiusRange\": [\r\n                                    0,\r\n                                    50\r\n                                ],\r\n                                \"heightRange\": [\r\n                                    0,\r\n                                    500\r\n                                ],\r\n                                \"elevationScale\": 5,\r\n                                \"stroked\": true,\r\n                                \"filled\": true,\r\n                                \"enable3d\": false,\r\n                                \"wireframe\": false,\r\n                                \"fixedHeight\": false\r\n                            },\r\n                            \"hidden\": false,\r\n                            \"textLabel\": [\r\n                                {\r\n                                    \"field\": null,\r\n                                    \"color\": [\r\n                                        255,\r\n                                        255,\r\n                                        255\r\n                                    ],\r\n                                    \"size\": 18,\r\n                                    \"offset\": [\r\n                                        0,\r\n                                        0\r\n                                    ],\r\n                                    \"anchor\": \"start\",\r\n                                    \"alignment\": \"center\",\r\n                                    \"outlineWidth\": 0,\r\n                                    \"outlineColor\": [\r\n                                        255,\r\n                                        0,\r\n                                        0,\r\n                                        255\r\n                                    ],\r\n                                    \"background\": false,\r\n                                    \"backgroundColor\": [\r\n                                        0,\r\n                                        0,\r\n                                        200,\r\n                                        255\r\n                                    ]\r\n                                }\r\n                            ]\r\n                        },\r\n                        \"visualChannels\": {\r\n                            \"colorField\": {\r\n                                \"name\": `${fkey}`,\r\n                                \"type\": \"integer\"\r\n                            },\r\n                            \"colorScale\": \"quantize\",\r\n                            \"strokeColorField\": null,\r\n                            \"strokeColorScale\": \"quantize\",\r\n                            \"sizeField\": null,\r\n                            \"sizeScale\": \"linear\",\r\n                            \"heightField\": null,\r\n                            \"heightScale\": \"linear\",\r\n                            \"radiusField\": null,\r\n                            \"radiusScale\": \"linear\"\r\n                        }\r\n                    }\r\n                ],\r\n                \"effects\": [],\r\n                \"interactionConfig\": {\r\n                    \"tooltip\": {\r\n                        \"fieldsToShow\": {\r\n                            \"-rxsu7t\": [\r\n                                {\r\n                                    \"name\": \"name\",\r\n                                    \"format\": null\r\n                                },\r\n                                {\r\n                                    \"name\": \"dsr_plus\",\r\n                                    \"format\": null\r\n                                },\r\n                                {\r\n                                    \"name\": \"sr_plus\",\r\n                                    \"format\": null\r\n                                },\r\n                                {\r\n                                    \"name\": \"tv\",\r\n                                    \"format\": null\r\n                                },\r\n                                {\r\n                                    \"name\": \"yield\",\r\n                                    \"format\": null\r\n                                }\r\n                            ]\r\n                        },\r\n                        \"compareMode\": false,\r\n                        \"compareType\": \"absolute\",\r\n                        \"enabled\": true\r\n                    },\r\n                    \"brush\": {\r\n                        \"size\": 0.5,\r\n                        \"enabled\": false\r\n                    },\r\n                    \"geocoder\": {\r\n                        \"enabled\": false\r\n                    },\r\n                    \"coordinate\": {\r\n                        \"enabled\": false\r\n                    }\r\n                },\r\n                \"layerBlending\": \"normal\",\r\n                \"overlayBlending\": \"normal\",\r\n                \"splitMaps\": [],\r\n                \"animationConfig\": {\r\n                    \"currentTime\": null,\r\n                    \"speed\": 1\r\n                },\r\n                \"editor\": {\r\n                    \"features\": [],\r\n                    \"visible\": true\r\n                }\r\n            },\r\n            \"mapState\": {\r\n                \"bearing\": 0,\r\n                \"dragRotate\": false,\r\n                \"latitude\": -28.924908194902354,\r\n                \"longitude\": 146.73962502148487,\r\n                \"pitch\": 0,\r\n                \"zoom\": 5.192235667667807,\r\n                \"isSplit\": false,\r\n                \"isViewportSynced\": true,\r\n                \"isZoomLocked\": false,\r\n                \"splitMapViewports\": []\r\n            },\r\n            \"mapStyle\": {\r\n                \"styleType\": \"positron\",\r\n                \"topLayerGroups\": {},\r\n                \"visibleLayerGroups\": {\r\n                    \"label\": true,\r\n                    \"road\": true,\r\n                    \"border\": false,\r\n                    \"building\": true,\r\n                    \"water\": true,\r\n                    \"land\": true,\r\n                    \"3d building\": false\r\n                },\r\n                \"threeDBuildingColor\": [\r\n                    15.035172933000911,\r\n                    15.035172933000911,\r\n                    15.035172933000911\r\n                ],\r\n                \"backgroundColor\": [\r\n                    0,\r\n                    0,\r\n                    0\r\n                ],\r\n                \"mapStyles\": {}\r\n            }\r\n        }\r\n    }      \r\n    localStorage.setItem(\"sprops\",fshadesort);\r\n    externalDataConfig.config.visState.layers[0].config.visConfig.colorRange.colors = fshadesort===\"darker\"?shadecolorsdarker:shadecolorslighter;\r\n    externalDataConfig.config.visState.layers[0].config.visConfig.colorRange.strokeColorRange = fshadesort===\"darker\"?shadecolorsdarker:shadecolorslighter;\r\n    const mapToLoad = KeplerGlSchema.load(data,externalDataConfig);\r\n    console.log(mapToLoad)\r\n    dprops.dispatch(\r\n//         addDataToMap(mapToLoad)\r\n      addDataToMap({\r\n        datasets: {\r\n            info: {label: ' ', id: \"external_data\"},\r\n            data: processGeojson(data)\r\n        },\r\n        config:mapToLoad.config,\r\n        options: {\r\n          centerMap: true,\r\n          readOnly: false,\r\n          keepExistingConfig: false\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  _loadExternalProps(props) {\r\n    this.setState({show:0});\r\n    fprops = `;${props.toUpperCase()}`;\r\n//    if (!fprops){\r\n//        fprops = [];\r\n//    }else{\r\n//        fprops = fprops.split(\";\");  \r\n//    }    \r\n    localStorage.setItem(\"props\",fprops);\r\n  }\r\n\r\n  _loadExternalShadingSort(sortvalue) {\r\n    this.setState({show:0});\r\n    fshadesort = sortvalue;\r\n  }  \r\n\r\n  _loadExternalShadingKey(key){\r\n    this.setState({show:0});\r\n    fkey = key;\r\n  }\r\n\r\n  plotdatafromgeojson = () =>{\r\n    this.setState({show:1});\r\n    _plotdatafromgeoJSONAPI(\"/geodata/suburbData.json\").then(geojson => {\r\n //      let newfdata = [];\r\n //      let cdomain = [];\r\n //      geojson.features.forEach((feat)=>{\r\n //         let f = feat;\r\n      //    f.properties[\"strokeColor\"] = \"rgb(0,0,0)\";\r\n //         newfdata.push(f);\r\n //         cdomain.push(f.properties.dsr_plus);\r\n //         return f;\r\n //     });\r\n      let colorfield = \"sr_plus\"\r\n      localStorage.setItem(\"cprops\",colorfield);\r\n\r\n      externalDataConfig = {\r\n        \"version\": \"v1\",\r\n        \"config\": {\r\n          \"hoverInfo\": {\r\n            // Disable tooltips on mouse hover\r\n            enabled: false\r\n          },         \r\n            \"visState\": {\r\n                \"filters\": [],\r\n                \"layers\": [\r\n                    {\r\n                        \"id\": \"mylayer\",\r\n                        \"type\": \"geojson\",\r\n                        \"config\": {\r\n                            \"dataId\": \"external_data\",\r\n                            \"label\": \"  \",\r\n                            \"color\": [\r\n                                0,\r\n                                0,\r\n                                0\r\n                            ],\r\n                            \"highlightColor\": [\r\n                                0,\r\n                                0,\r\n                                0,\r\n                                255\r\n                            ],\r\n                            \"columns\": {\r\n                                \"geojson\": \"_geojson\"\r\n                            },\r\n                            \"isVisible\": true,\r\n                            \"visConfig\": {\r\n                                \"opacity\": 0.8,\r\n                                \"strokeOpacity\": 0.8,\r\n                                \"thickness\": 0.5,\r\n                                \"strokeColor\": [\r\n                                    0,\r\n                                    0,\r\n                                    0\r\n                                ],\r\n                                \"colorRange\": {\r\n                                    \"name\": \"Global Warming\",\r\n                                    \"type\": \"sequential\",\r\n                                    \"category\": \"Uber\",\r\n                                    \"colors\": []\r\n                                },\r\n                                \"strokeColorRange\": {\r\n                                    \"name\": \"Global Warming\",\r\n                                    \"type\": \"sequential\",\r\n                                    \"category\": \"Uber\",\r\n                                    \"colors\": []\r\n                                },\r\n                                \"radius\": 10,\r\n                                \"sizeRange\": [\r\n                                    0,\r\n                                    10\r\n                                ],\r\n                                \"radiusRange\": [\r\n                                    0,\r\n                                    50\r\n                                ],\r\n                                \"heightRange\": [\r\n                                    0,\r\n                                    500\r\n                                ],\r\n                                \"elevationScale\": 5,\r\n                                \"stroked\": true,\r\n                                \"filled\": true,\r\n                                \"enable3d\": false,\r\n                                \"wireframe\": false,\r\n                                \"fixedHeight\": false\r\n                            },\r\n                            \"hidden\": false,\r\n                            \"textLabel\": [\r\n                                {\r\n                                    \"field\": null,\r\n                                    \"color\": [\r\n                                        255,\r\n                                        255,\r\n                                        255\r\n                                    ],\r\n                                    \"size\": 18,\r\n                                    \"offset\": [\r\n                                        0,\r\n                                        0\r\n                                    ],\r\n                                    \"anchor\": \"start\",\r\n                                    \"alignment\": \"center\",\r\n                                    \"outlineWidth\": 0,\r\n                                    \"outlineColor\": [\r\n                                        255,\r\n                                        0,\r\n                                        0,\r\n                                        255\r\n                                    ],\r\n                                    \"background\": false,\r\n                                    \"backgroundColor\": [\r\n                                        0,\r\n                                        0,\r\n                                        200,\r\n                                        255\r\n                                    ]\r\n                                }\r\n                            ]\r\n                        },\r\n                        \"visualChannels\": {\r\n                            \"colorField\": {\r\n                                \"name\": `${colorfield}`,\r\n                                \"type\": \"integer\"\r\n                            },\r\n                            \"colorScale\": \"quantize\",\r\n                            \"strokeColorField\": null,\r\n                            \"strokeColorScale\": \"quantize\",\r\n                            \"sizeField\": null,\r\n                            \"sizeScale\": \"linear\",\r\n                            \"heightField\": null,\r\n                            \"heightScale\": \"linear\",\r\n                            \"radiusField\": null,\r\n                            \"radiusScale\": \"linear\"\r\n                        }\r\n                    }\r\n                ],\r\n                \"effects\": [],\r\n                \"interactionConfig\": {\r\n                    \"tooltip\": {\r\n                        \"fieldsToShow\": {\r\n                            \"-rxsu7t\": [\r\n                                {\r\n                                    \"name\": \"name\",\r\n                                    \"format\": null\r\n                                },\r\n                                {\r\n                                    \"name\": \"dsr_plus\",\r\n                                    \"format\": null\r\n                                },\r\n                                {\r\n                                    \"name\": \"sr_plus\",\r\n                                    \"format\": null\r\n                                },\r\n                                {\r\n                                    \"name\": \"tv\",\r\n                                    \"format\": null\r\n                                },\r\n                                {\r\n                                    \"name\": \"yield\",\r\n                                    \"format\": null\r\n                                }\r\n                            ]\r\n                        },\r\n                        \"compareMode\": false,\r\n                        \"compareType\": \"absolute\",\r\n                        \"enabled\": true\r\n                    },\r\n                    \"brush\": {\r\n                        \"size\": 0.5,\r\n                        \"enabled\": false\r\n                    },\r\n                    \"geocoder\": {\r\n                        \"enabled\": false\r\n                    },\r\n                    \"coordinate\": {\r\n                        \"enabled\": false\r\n                    }\r\n                },\r\n                \"layerBlending\": \"normal\",\r\n                \"overlayBlending\": \"normal\",\r\n                \"splitMaps\": [],\r\n                \"animationConfig\": {\r\n                    \"currentTime\": null,\r\n                    \"speed\": 1\r\n                },\r\n                \"editor\": {\r\n                    \"features\": [],\r\n                    \"visible\": true\r\n                }\r\n            },\r\n            legend: {\r\n              show: false,\r\n              isSticky: true // Make legend box sticky\r\n            },             \r\n            \"mapState\": {\r\n                \"bearing\": 0,\r\n                \"dragRotate\": false,\r\n                \"latitude\": -28.924908194902354,\r\n                \"longitude\": 146.73962502148487,\r\n                \"pitch\": 0,\r\n                \"zoom\": 5.192235667667807,\r\n                \"isSplit\": false,\r\n                \"isViewportSynced\": true,\r\n                \"isZoomLocked\": false,\r\n                \"splitMapViewports\": []\r\n            },\r\n            \"mapStyle\": {\r\n                \"styleType\": \"positron\",\r\n                \"topLayerGroups\": {},\r\n                \"visibleLayerGroups\": {\r\n                    \"label\": true,\r\n                    \"road\": true,\r\n                    \"border\": false,\r\n                    \"building\": true,\r\n                    \"water\": true,\r\n                    \"land\": true,\r\n                    \"3d building\": false\r\n                },\r\n                \"threeDBuildingColor\": [\r\n                    15.035172933000911,\r\n                    15.035172933000911,\r\n                    15.035172933000911\r\n                ],\r\n                \"backgroundColor\": [\r\n                    0,\r\n                    0,\r\n                    0\r\n                ],\r\n                \"mapStyles\": {}\r\n            }\r\n        }\r\n    }      \r\n   //    externalDataConfig.config.visState.layers[0].config.colorDomain = cdomain;\r\n   //   newfdata = {\"type\":\"FeatureCollection\",\"features\":newfdata};\r\n   //   console.log(newfdata);\r\n   //   console.log(this.props);\r\n  //    let data = {datasets: {\r\n   //       info: {label: ' ', id: \"external_data\"},\r\n   //       data: processGeojson(newfdata)\r\n   //      },config:externalDataConfig\r\n   //   }\r\n      localStorage.setItem(\"sprops\",fshadesort);\r\n      externalDataConfig.config.visState.layers[0].config.visConfig.colorRange.colors = fshadesort===\"darker\"?shadecolorsdarker:shadecolorslighter;\r\n      externalDataConfig.config.visState.layers[0].config.visConfig.colorRange.strokeColorRange = fshadesort===\"darker\"?shadecolorsdarker:shadecolorslighter;\r\n      const mapToLoad = KeplerGlSchema.load(geojson,externalDataConfig);\r\n      console.log(\"hit\");\r\n      console.log(mapToLoad)\r\n      this.props.dispatch(\r\n//         addDataToMap(mapToLoad)\r\n        addDataToMap({\r\n          datasets: {\r\n              info: {label: ' ', id: \"external_data\"},\r\n              data: processGeojson(geojson)\r\n          },\r\n          config:mapToLoad.config,\r\n          options: {\r\n            centerMap: true,\r\n            readOnly: false,\r\n            keepExistingConfig: false\r\n          }\r\n        })\r\n      );\r\n    });   \r\n  }\r\n\r\n\r\n  _loadSampleData() {\r\n    this._loadPointData();\r\n    this._loadGeojsonData();\r\n    // this._loadTripGeoJson();\r\n    // this._loadIconData();\r\n    // this._loadH3HexagonData();\r\n    // this._loadS2Data();\r\n    // this._loadScenegraphLayer();\r\n    // this._loadGpsData();\r\n  }\r\n\r\n  _loadPointData() {\r\n    this.props.dispatch(\r\n      addDataToMap({\r\n        datasets: {\r\n          info: {\r\n            label: 'Sample Taxi Trips in New York City',\r\n            id: 'test_trip_data'\r\n          },\r\n          data: sampleTripData\r\n        },\r\n        options: {\r\n          // centerMap: true,\r\n          keepExistingConfig: true\r\n        },\r\n        config: sampleTripDataConfig\r\n      })\r\n    );\r\n  }\r\n\r\n  _loadScenegraphLayer() {\r\n    this.props.dispatch(\r\n      addDataToMap({\r\n        datasets: {\r\n          info: {\r\n            label: 'Sample Scenegraph Ducks',\r\n            id: 'test_trip_data'\r\n          },\r\n          data: processCsvData(testCsvData)\r\n        },\r\n        config: {\r\n          version: 'v1',\r\n          config: {\r\n            visState: {\r\n              layers: [\r\n                {\r\n                  type: '3D',\r\n                  config: {\r\n                    dataId: 'test_trip_data',\r\n                    columns: {\r\n                      lat: 'gps_data.lat',\r\n                      lng: 'gps_data.lng'\r\n                    },\r\n                    isVisible: true\r\n                  }\r\n                }\r\n              ]\r\n            }\r\n          }\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  _loadIconData() {\r\n    // load icon data and config and process csv file\r\n    this.props.dispatch(\r\n      addDataToMap({\r\n        datasets: [\r\n          {\r\n            info: {\r\n              label: 'Icon Data',\r\n              id: 'test_icon_data'\r\n            },\r\n            data: processCsvData(sampleIconCsv)\r\n          }\r\n        ]\r\n      })\r\n    );\r\n  }\r\n\r\n  _loadTripGeoJson() {\r\n    this.props.dispatch(\r\n      addDataToMap({\r\n        datasets: [\r\n          {\r\n            info: {label: 'Trip animation', id: animateTripDataId},\r\n            data: processGeojson(sampleAnimateTrip)\r\n          }\r\n        ]\r\n      })\r\n    );\r\n  }\r\n\r\n  _replaceData = () => {\r\n    // add geojson data\r\n    const sliceData = processGeojson({\r\n      type: 'FeatureCollection',\r\n      features: sampleGeojsonPoints.features.slice(0, 5)\r\n    });\r\n    this._loadGeojsonData();\r\n    window.setTimeout(() => {\r\n      this.props.dispatch(\r\n        replaceDataInMap({\r\n          datasetToReplaceId: 'bart-stops-geo',\r\n          datasetToUse: {\r\n            info: {label: 'Bart Stops Geo Replaced', id: 'bart-stops-geo-2'},\r\n            data: sliceData\r\n          }\r\n        })\r\n      );\r\n    }, 1000);\r\n  };\r\n\r\n  _loadGeojsonData() {\r\n    // load geojson\r\n    this.props.dispatch(\r\n      addDataToMap({\r\n        datasets: [\r\n          {\r\n            info: {label: 'Bart Stops Geo', id: 'bart-stops-geo'},\r\n            data: processGeojson(sampleGeojsonPoints)\r\n          },\r\n          {\r\n            info: {label: 'SF Zip Geo', id: 'sf-zip-geo'},\r\n            data: processGeojson(sampleGeojson)\r\n          }\r\n        ],\r\n        options: {\r\n          keepExistingConfig: true\r\n        },\r\n        config: sampleGeojsonConfig\r\n      })\r\n    );\r\n  }\r\n\r\n  _loadH3HexagonData() {\r\n    // load h3 hexagon\r\n    this.props.dispatch(\r\n      addDataToMap({\r\n        datasets: [\r\n          {\r\n            info: {\r\n              label: 'H3 Hexagons V2',\r\n              id: 'h3-hex-id'\r\n            },\r\n            data: processCsvData(sampleH3Data)\r\n          }\r\n        ],\r\n        config: h3MapConfig,\r\n        options: {\r\n          keepExistingConfig: true\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  _loadS2Data() {\r\n    // load s2\r\n    this.props.dispatch(\r\n      addDataToMap({\r\n        datasets: [\r\n          {\r\n            info: {\r\n              label: 'S2 Data',\r\n              id: s2DataId\r\n            },\r\n            data: processCsvData(sampleS2Data)\r\n          }\r\n        ],\r\n        config: s2MapConfig,\r\n        options: {\r\n          keepExistingConfig: true\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  _loadGpsData() {\r\n    this.props.dispatch(\r\n      addDataToMap({\r\n        datasets: [\r\n          {\r\n            info: {\r\n              label: 'Gps Data',\r\n              id: 'gps-data'\r\n            },\r\n            data: processCsvData(sampleGpsData)\r\n          }\r\n        ],\r\n        options: {\r\n          keepExistingConfig: true\r\n        }\r\n      })\r\n    );\r\n  }\r\n  _toggleCloudModal = () => {\r\n    // TODO: this lives only in the demo hence we use the state for now\r\n    // REFCOTOR using redux\r\n    this.setState({\r\n      cloudModalOpen: !this.state.cloudModalOpen\r\n    });\r\n  };\r\n\r\n  _getMapboxRef = (mapbox, index) => {\r\n    if (!mapbox) {\r\n      // The ref has been unset.\r\n      // https://reactjs.org/docs/refs-and-the-dom.html#callback-refs\r\n      // console.log(`Map ${index} has closed`);\r\n    } else {\r\n      // We expect an Map created by KeplerGl's MapContainer.\r\n      // https://visgl.github.io/react-map-gl/docs/api-reference/map\r\n      const map = mapbox.getMap();\r\n      map.on('zoomend', e => {\r\n        // console.log(`Map ${index} zoom level: ${e.target.style.z}`);\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n  render() {\r\n    let sh = this.state.show;\r\n    return <Keplertemplate show = {sh} states={this}/>\r\n  }\r\n}\r\n\r\nconst  Keplertemplate = ({show,states}) => {\r\n  console.log(show);\r\n    if (!show || parseInt(show) === 0 || typeof show === undefined || show === null){\r\n        return <div></div>\r\n    }\r\n    console.log(\"here\");\r\n    return <ThemeProvider theme={theme}>\r\n    <GlobalStyle\r\n      // this is to apply the same modal style as kepler.gl core\r\n      // because styled-components doesn't always return a node\r\n      // https://github.com/styled-components/styled-components/issues/617\r\n      ref={node => {\r\n        node ? (states.root = node) : null;\r\n      }}\r\n    >\r\n      <Banner\r\n        show={states.state.showBanner}\r\n        height={BannerHeight}\r\n        bgColor=\"#2E7CF6\"\r\n        onClose={states._hideBanner}\r\n      >\r\n        <Announcement onDisable={states._disableBanner} />\r\n      </Banner>\r\n      <div style={CONTAINER_STYLE}>\r\n        <AutoSizer>\r\n          {({height, width}) => (\r\n             <KeplerGl\r\n              mapboxApiAccessToken={states.state.mapboxtoken}\r\n              id=\"map\"\r\n              /*\r\n               * Specify path to keplerGl state, because it is not mount at the root\r\n               */\r\n              getState={keplerGlGetState}\r\n              width={width}\r\n              height={height}\r\n              cloudProviders={CLOUD_PROVIDERS}\r\n              localeMessages={messages}\r\n              onExportToCloudSuccess={onExportFileSuccess}\r\n              onLoadCloudMapSuccess={onLoadCloudMapSuccess}\r\n              featureFlags={DEFAULT_FEATURE_FLAGS}\r\n            />\r\n          )}\r\n        </AutoSizer>\r\n      </div>\r\n    </GlobalStyle>\r\n  </ThemeProvider>\r\n}    \r\n\r\nconst mapStateToProps = state => state;\r\nconst dispatchToProps = dispatch => ({dispatch});\r\n//window.loadExternalProps = App.prototype._loadExternalProps;\r\n//window.loadExternalData = App.prototype._loadExternalData;\r\n//window.loadExternalShadingSort = App.prototype._loadExternalShadingSort;\r\n//window.loadExternalShadingKey = App.prototype._loadExternalShadingKey;\r\nexport default connect(mapStateToProps, dispatchToProps)(App);\r\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nexport default `time,event_lat,event_lng,icon,icon-bk,annotation-severity,annotation-html\n2016-06-28 20:02:06,37.778564,-122.39096,accel,accel,3,\"Braking at 10:32pm, -0.3g\"\n2016-06-28 20:09:18,37.78824,-122.40894,add-person,add-person,3,\"10:33pm,37.3490528616667,-121.972682895794,accel,3,\"\"Acceleration at 10:33pm, +0.2g\"\"\"\n2016-06-28 20:03:16,38.281445,-122.29453,alert,alert,6,\"Aborted lane change, 10:34pm\"\n2016-06-28 20:05:55,37.79354,-122.40121,android,android,5,Period of dangerous driving 10:32pm-10:34pm\n2016-06-28 20:03:39,37.456535,-122.136795,apple,apple,4,\"Braking at 10:32pm, -0.3g\"\n2016-06-28 20:05:51,37.40066,-122.10239,attach,attach,3,\"10:33pm,37.3490528616667,-121.972682895794,accel,3,\"\"Acceleration at 10:33pm, +0.2g\"\"\"\n2016-06-28 20:08:20,37.77118,-122.42459,bold,bold,3,\"Aborted lane change, 10:34pm\"\n2016-06-28 20:05:16,37.879066,-122.26108,,bookmark,,Period of dangerous driving 10:32pm-10:34pm\n2016-06-28 20:03:01,37.775578,-122.39363,,brake,3,\"Braking at 10:32pm, -0.3g\"\n2016-06-28 20:03:22,37.7892,-122.408966,,briefcase,2,\"10:33pm,37.3490528616667,-121.972682895794,accel,3,\"\"Acceleration at 10:33pm, +0.2g\"\"\"\n2016-06-28 20:04:42,37.779964,-122.40398,bug,bug,3,\"Aborted lane change, 10:34pm\"\n2016-06-28 20:03:55,37.792385,-122.406494,,calculator,2,Period of dangerous driving 10:32pm-10:34pm\n2016-06-28 20:08:31,37.791046,-122.401855,calendar,calendar,5,\"Braking at 10:32pm, -0.3g\"\n2016-06-28 20:00:18,37.769897,-122.41168,,camera,2,\"10:33pm,37.3490528616667,-121.972682895794,accel,3,\"\"Acceleration at 10:33pm, +0.2g\"\"\"\n2016-06-28 20:02:13,37.798237,-122.41889,,cancel,5,\"Aborted lane change, 10:34pm\"\n2016-06-28 20:06:23,37.76018,-122.41097,,car-black,5,Period of dangerous driving 10:32pm-10:34pm\n2016-06-28 20:05:16,37.37006,-121.96353,car-suv,car-suv,4,\"Braking at 10:32pm, -0.3g\"\n2016-06-28 20:06:28,37.418655,-122.149734,car-taxi,car-taxi,3,\"10:33pm,37.3490528616667,-121.972682895794,accel,3,\"\"Acceleration at 10:33pm, +0.2g\"\"\"\n2016-06-28 20:09:41,37.787052,-122.41089,,car-uberx,,\"Aborted lane change, 10:34pm\"\n2016-06-28 20:08:20,37.780136,-122.40495,,car,4,Period of dangerous driving 10:32pm-10:34pm\n2016-06-28 20:01:57,37.753033,-122.42929,,cart,4,\"Braking at 10:32pm, -0.3g\"\n2016-06-28 20:01:29,37.749577,-122.41829,,certified,5,\"10:33pm,37.3490528616667,-121.972682895794,accel,3,\"\"Acceleration at 10:33pm, +0.2g\"\"\"\n2016-06-28 20:10:00,37.786648,-122.401634,,chart-area,3,\"Aborted lane change, 10:34pm\"\n2016-06-28 20:02:57,38.122818,-122.25759,,chart,,Period of dangerous driving 10:32pm-10:34pm\n2016-06-28 20:07:48,37.788277,-122.40152,check-alt,check-alt,1,\"Braking at 10:32pm, -0.3g\"\n2016-06-28 20:01:43,37.876453,-122.270096,,check,3,\"10:33pm,37.3490528616667,-121.972682895794,accel,3,\"\"Acceleration at 10:33pm, +0.2g\"\"\"\n2016-06-28 20:09:28,37.61695,-122.38396,circle-check,circle-check,5,\"Aborted lane change, 10:34pm\"\n2016-06-28 20:06:07,37.80718,-122.40902,,circle-ellipsis,5,Period of dangerous driving 10:32pm-10:34pm\n2016-06-28 20:05:26,37.751713,-122.42713,circle,circle,3,\"Braking at 10:32pm, -0.3g\"\n2016-06-28 20:08:57,37.75977,-122.41924,,clipboard,,\"10:33pm,37.3490528616667,-121.972682895794,accel,3,\"\"Acceleration at 10:33pm, +0.2g\"\"\"\n2016-06-28 20:08:14,37.80641,-122.404816,,clock,1,\"Aborted lane change, 10:34pm\"\n2016-06-28 20:08:44,37.751354,-122.43317,,cloud,5,Period of dangerous driving 10:32pm-10:34pm\n2016-06-28 20:02:46,37.40591,-121.943054,,code-alt,1,\"Braking at 10:32pm, -0.3g\"\n2016-06-28 20:07:07,37.74202,-122.49926,,code,1,\"10:33pm,37.3490528616667,-121.972682895794,accel,3,\"\"Acceleration at 10:33pm, +0.2g\"\"\"\n2016-06-28 20:03:39,37.80315,-122.402794,,control-off,5,\"Aborted lane change, 10:34pm\"\n2016-06-28 20:04:01,37.44642,-122.16117,,control-on,4,Period of dangerous driving 10:32pm-10:34pm\n2016-06-28 20:01:25,37.796837,-122.40023,,crosshairs-alt,5,\"Braking at 10:32pm, -0.3g\"\n2016-06-28 20:08:14,38.2984,-122.28682,,crosshairs,4,\"10:33pm,37.3490528616667,-121.972682895794,accel,3,\"\"Acceleration at 10:33pm, +0.2g\"\"\"\n2016-06-28 20:08:49,37.73762,-122.48069,,crown,2,\"Aborted lane change, 10:34pm\"\n2016-06-28 20:08:21,37.444183,-122.170074,,dangerous,4,Period of dangerous driving 10:32pm-10:34pm\n2016-06-28 20:06:49,37.77029,-122.44518,,dashboard,4,\"Braking at 10:32pm, -0.3g\"\n2016-06-28 20:03:43,37.781548,-122.41132,delete-alt,delete-alt,,\"10:33pm,37.3490528616667,-121.972682895794,accel,3,\"\"Acceleration at 10:33pm, +0.2g\"\"\"\n2016-06-28 20:09:47,37.770683,-122.403145,delete-thin,delete-thin,2,\"Aborted lane change, 10:34pm\"\n2016-06-28 20:04:15,37.780903,-122.40269,,delete,4,Period of dangerous driving 10:32pm-10:34pm\n2016-06-28 20:05:04,37.368206,-121.92748,,details,2,\"Braking at 10:32pm, -0.3g\"\n2016-06-28 20:02:47,37.890514,-122.057884,,directions,3,\"10:33pm,37.3490528616667,-121.972682895794,accel,3,\"\"Acceleration at 10:33pm, +0.2g\"\"\"\n2016-06-28 20:03:07,37.765217,-122.40161,,down-arrow-alt,3,\"Aborted lane change, 10:34pm\"\n2016-06-28 20:07:58,37.759308,-122.40985,,down-arrow-thin,3,Period of dangerous driving 10:32pm-10:34pm\n2016-06-28 20:07:23,37.96648,-121.7171,,down-arrow,2,\"Braking at 10:32pm, -0.3g\"\n2016-06-28 20:07:41,37.763405,-122.45817,,download,4,\"10:33pm,37.3490528616667,-121.972682895794,accel,3,\"\"Acceleration at 10:33pm, +0.2g\"\"\"\n2016-06-28 20:01:55,37.777637,-122.42391,,draw-shape,3,\"Aborted lane change, 10:34pm\"\n2016-06-28 20:08:19,37.789856,-122.39953,,duplicate,1,Period of dangerous driving 10:32pm-10:34pm\n2016-06-28 20:08:29,37.557186,-121.9803,,edit,4,\"Braking at 10:32pm, -0.3g\"\n2016-06-28 20:06:47,37.78949,-122.45104,,employees,4,\"10:33pm,37.3490528616667,-121.972682895794,accel,3,\"\"Acceleration at 10:33pm, +0.2g\"\"\"\n2016-06-28 20:07:11,37.795612,-122.394196,,enclosed-up-arrow,5,\"Aborted lane change, 10:34pm\"\n2016-06-28 20:03:58,38.30026,-122.30107,,eta,5,Period of dangerous driving 10:32pm-10:34pm\n2016-06-28 20:02:03,37.78702,-122.433464,,events,4,\"Braking at 10:32pm, -0.3g\"\n2016-06-28 20:06:50,37.800163,-122.46132,,eye-closed,5,\"10:33pm,37.3490528616667,-121.972682895794,accel,3,\"\"Acceleration at 10:33pm, +0.2g\"\"\"\n2016-06-28 20:07:22,37.800583,-122.44561,,eye,2,\"Aborted lane change, 10:34pm\"\n2016-06-28 20:06:02,37.29343,-121.873825,,facebook,,Period of dangerous driving 10:32pm-10:34pm\n2016-06-28 20:04:19,37.792248,-122.400986,,fare-split,,\"Braking at 10:32pm, -0.3g\"\n2016-06-28 20:02:50,37.762466,-122.46835,,files,3,\"10:33pm,37.3490528616667,-121.972682895794,accel,3,\"\"Acceleration at 10:33pm, +0.2g\"\"\"\n2016-06-28 20:09:41,37.913967,-122.04143,,film,5,\"Aborted lane change, 10:34pm\"\n2016-06-28 20:02:38,37.70338,-122.474976,,filter,4,Period of dangerous driving 10:32pm-10:34pm\n2016-06-28 20:01:50,37.698505,-121.930046,,free-rides,,\"Braking at 10:32pm, -0.3g\"\n2016-06-28 20:05:42,37.785946,-122.39721,,fullscreen-exit,3,\"10:33pm,37.3490528616667,-121.972682895794,accel,3,\"\"Acceleration at 10:33pm, +0.2g\"\"\"\n2016-06-28 20:09:09,37.80069,-122.437805,,fullscreen,2,\"Aborted lane change, 10:34pm\"\n2016-06-28 20:06:49,37.79061,-122.420425,,geofence,4,Period of dangerous driving 10:32pm-10:34pm\n2016-06-28 20:06:34,37.788998,-122.40528,,github,4,\"Braking at 10:32pm, -0.3g\"\n2016-06-28 20:07:35,37.745995,-122.17901,,globe,1,\"10:33pm,37.3490528616667,-121.972682895794,accel,3,\"\"Acceleration at 10:33pm, +0.2g\"\"\"\n2016-06-28 20:01:57,37.368294,-121.927605,,google+,5,\"Aborted lane change, 10:34pm\"\n2016-06-28 20:02:35,37.39618,-121.87303,,graph,1,Period of dangerous driving 10:32pm-10:34pm\n2016-06-28 20:05:54,37.370895,-121.99693,,heart-empty,4,\"Braking at 10:32pm, -0.3g\"\n2016-06-28 20:00:23,37.868176,-122.291626,,heart,4,\"10:33pm,37.3490528616667,-121.972682895794,accel,3,\"\"Acceleration at 10:33pm, +0.2g\"\"\"\n2016-06-28 20:07:25,37.78467,-122.46707,,help,3,\"Aborted lane change, 10:34pm\"\n2016-06-28 20:08:47,37.39412,-122.080154,,hipchat,1,Period of dangerous driving 10:32pm-10:34pm\n2016-06-28 20:09:58,37.42982,-122.146904,,home,5,\"Braking at 10:32pm, -0.3g\"\n2016-06-28 20:05:32,37.720642,-122.476135,,icons,5,\"10:33pm,37.3490528616667,-121.972682895794,accel,3,\"\"Acceleration at 10:33pm, +0.2g\"\"\"\n2016-06-28 20:00:05,37.77196,-122.288506,,id-card,2,\"Aborted lane change, 10:34pm\"\n2016-06-28 20:04:07,37.801647,-122.41509,,info,4,Period of dangerous driving 10:32pm-10:34pm\n2016-06-28 20:04:53,37.557343,-121.97734,,instagram,2,\"Braking at 10:32pm, -0.3g\"\n2016-06-28 20:09:37,37.79315,-122.394844,,italic,3,\"10:33pm,37.3490528616667,-121.972682895794,accel,3,\"\"Acceleration at 10:33pm, +0.2g\"\"\"\n2016-06-28 20:03:50,37.763123,-122.408714,,key,2,\"Aborted lane change, 10:34pm\"\n2016-06-28 20:00:16,37.80429,-122.41334,,layers,4,Period of dangerous driving 10:32pm-10:34pm\n2016-06-28 20:06:53,37.737015,-122.21498,,layout,5,\"Braking at 10:32pm, -0.3g\"\n2016-06-28 20:01:35,37.688007,-122.13062,,left-arrow-alt,,\"10:33pm,37.3490528616667,-121.972682895794,accel,3,\"\"Acceleration at 10:33pm, +0.2g\"\"\"\n2016-06-28 20:06:56,36.60167,-121.89041,,left-arrow-thin,2,\"Aborted lane change, 10:34pm\"\n2016-06-28 20:00:33,37.77245,-122.5089,,left-arrow,3,Period of dangerous driving 10:32pm-10:34pm\n2016-06-28 20:01:32,37.787792,-122.39695,,link,5,\"Braking at 10:32pm, -0.3g\"\n2016-06-28 20:08:15,37.789505,-122.39494,,linkedin,4,\"10:33pm,37.3490528616667,-121.972682895794,accel,3,\"\"Acceleration at 10:33pm, +0.2g\"\"\"\n2016-06-28 20:07:34,37.789154,-122.43993,,location,2,\"Aborted lane change, 10:34pm\"\n2016-06-28 20:00:32,37.38603,-121.972755,,lock,5,Period of dangerous driving 10:32pm-10:34pm\n2016-06-28 20:08:30,37.776512,-122.42585,,lost,,\"Braking at 10:32pm, -0.3g\"\n2016-06-28 20:05:31,37.764816,-122.413124,,mail-open,,\"10:33pm,37.3490528616667,-121.972682895794,accel,3,\"\"Acceleration at 10:33pm, +0.2g\"\"\"\n2016-06-28 20:03:24,37.80028,-122.40916,,mail-sent,2,\"Aborted lane change, 10:34pm\"\n2016-06-28 20:01:29,37.927547,-122.05777,,mail,,Period of dangerous driving 10:32pm-10:34pm\n2016-06-28 20:04:58,37.37899,-122.11877,,menu,,\"Braking at 10:32pm, -0.3g\"\n2016-06-28 20:02:13,37.78388,-122.40356,,message-phone,1,\"10:33pm,37.3490528616667,-121.972682895794,accel,3,\"\"Acceleration at 10:33pm, +0.2g\"\"\"\n2016-06-28 20:07:08,37.41093,-121.94651,,messages,,\"Aborted lane change, 10:34pm\"\n2016-06-28 20:04:38,37.776924,-122.422935,,minus-alt,1,Period of dangerous driving 10:32pm-10:34pm\n2016-06-28 20:08:29,37.80069,-122.40894,,minus,4,\"Braking at 10:32pm, -0.3g\"\n2016-06-28 20:06:47,37.79061,-122.29453,,moon,4,\"10:33pm,37.3490528616667,-121.972682895794,accel,3,\"\"Acceleration at 10:33pm, +0.2g\"\"\"\n2016-06-28 20:07:11,37.788998,-122.40121,,note,5,\"Aborted lane change, 10:34pm\"\n2016-06-28 20:03:58,37.745995,-122.136795,,notification,5,Period of dangerous driving 10:32pm-10:34pm\n2016-06-28 20:02:03,37.368294,-122.10239,,notifications-mute,4,\"Braking at 10:32pm, -0.3g\"\n2016-06-28 20:06:50,37.39618,-122.42459,,pause,5,\"10:33pm,37.3490528616667,-121.972682895794,accel,3,\"\"Acceleration at 10:33pm, +0.2g\"\"\"\n2016-06-28 20:07:22,37.370895,-122.26108,,payment,2,\"Aborted lane change, 10:34pm\"\n2016-06-28 20:06:02,37.868176,-122.39363,,phone-alt,,Period of dangerous driving 10:32pm-10:34pm\n2016-06-28 20:04:19,37.78467,-122.408966,,phone,,\"Braking at 10:32pm, -0.3g\"\n2016-06-28 20:02:50,37.39412,-122.40398,,picture,3,\"10:33pm,37.3490528616667,-121.972682895794,accel,3,\"\"Acceleration at 10:33pm, +0.2g\"\"\"\n2016-06-28 20:09:41,37.42982,-122.406494,,pin,5,\"Aborted lane change, 10:34pm\"\n2016-06-28 20:02:38,37.720642,-122.401855,,place,4,Period of dangerous driving 10:32pm-10:34pm\n2016-06-28 20:01:50,37.77196,-122.41168,,play,,\"Braking at 10:32pm, -0.3g\"\n2016-06-28 20:05:42,37.801647,-122.41889,,plus-alt,3,\"10:33pm,37.3490528616667,-121.972682895794,accel,3,\"\"Acceleration at 10:33pm, +0.2g\"\"\"\n2016-06-28 20:09:09,37.557343,-122.41097,,plus,2,\"Aborted lane change, 10:34pm\"\n2016-06-28 20:06:49,37.79315,-121.96353,,power,4,Period of dangerous driving 10:32pm-10:34pm\n2016-06-28 20:06:34,37.763123,-122.149734,,previous,4,\"Braking at 10:32pm, -0.3g\"\n2016-06-28 20:07:35,37.80429,-122.41089,,printer,1,\"10:33pm,37.3490528616667,-121.972682895794,accel,3,\"\"Acceleration at 10:33pm, +0.2g\"\"\"\n2016-06-28 20:01:57,37.737015,-122.40495,,profile,5,\"Aborted lane change, 10:34pm\"\n2016-06-28 20:02:35,37.688007,-122.42929,,promo-alt,1,Period of dangerous driving 10:32pm-10:34pm\n2016-06-28 20:05:54,36.60167,-122.41829,,promo,4,\"Braking at 10:32pm, -0.3g\"\n2016-06-28 20:00:23,37.77245,-122.401634,,receipt,4,\"10:33pm,37.3490528616667,-121.972682895794,accel,3,\"\"Acceleration at 10:33pm, +0.2g\"\"\"\n2016-06-28 20:07:25,37.787792,-122.25759,,reset,3,\"Aborted lane change, 10:34pm\"\n2016-06-28 20:08:47,37.789505,-122.40152,,right-arrow-alt,1,Period of dangerous driving 10:32pm-10:34pm\n2016-06-28 20:09:58,37.789154,-122.270096,,right-arrow-thin,5,\"Braking at 10:32pm, -0.3g\"\n2016-06-28 20:05:32,37.38603,-122.38396,,right-arrow,5,\"10:33pm,37.3490528616667,-121.972682895794,accel,3,\"\"Acceleration at 10:33pm, +0.2g\"\"\"\n2016-06-28 20:00:05,37.776512,-122.40902,,route-dot,2,\"Aborted lane change, 10:34pm\"\n2016-06-28 20:04:07,37.764816,-122.42713,,search,4,Period of dangerous driving 10:32pm-10:34pm\n2016-06-28 20:04:53,37.80028,-122.41924,,send,2,\"Braking at 10:32pm, -0.3g\"\n2016-06-28 20:09:37,37.927547,-122.404816,,settings-alt,3,\"10:33pm,37.3490528616667,-121.972682895794,accel,3,\"\"Acceleration at 10:33pm, +0.2g\"\"\"\n2016-06-28 20:03:50,37.37899,-122.43317,,settings,2,\"Aborted lane change, 10:34pm\"\n2016-06-28 20:00:16,37.78388,-121.943054,,share-alt,4,Period of dangerous driving 10:32pm-10:34pm\n2016-06-28 20:06:53,37.41093,-122.49926,,share,5,\"Braking at 10:32pm, -0.3g\"\n2016-06-28 20:01:35,37.776924,-122.402794,,sketch,,\"10:33pm,37.3490528616667,-121.972682895794,accel,3,\"\"Acceleration at 10:33pm, +0.2g\"\"\"\n2016-06-28 20:06:56,37.80069,-122.16117,,skip,2,\"Aborted lane change, 10:34pm\"\n2016-06-28 20:00:33,37.79061,-122.40023,,slanted-down-arrow,3,Period of dangerous driving 10:32pm-10:34pm\n2016-06-28 20:01:32,37.788998,-122.28682,,slanted-up-arrow,5,\"Braking at 10:32pm, -0.3g\"\n2016-06-28 20:08:15,37.745995,-122.48069,,sound-off,4,\"10:33pm,37.3490528616667,-121.972682895794,accel,3,\"\"Acceleration at 10:33pm, +0.2g\"\"\"\n2016-06-28 20:07:34,37.368294,-122.170074,,sound-on,2,\"Aborted lane change, 10:34pm\"\n2016-06-28 20:00:32,37.39618,-122.44518,,star,5,Period of dangerous driving 10:32pm-10:34pm\n2016-06-28 20:08:30,37.370895,-122.41132,,steering-wheel,,\"Braking at 10:32pm, -0.3g\"\n2016-06-28 20:05:31,37.868176,-122.403145,,stopwatch,,\"10:33pm,37.3490528616667,-121.972682895794,accel,3,\"\"Acceleration at 10:33pm, +0.2g\"\"\"\n2016-06-28 20:03:24,37.78467,-122.40269,,sun,2,\"Aborted lane change, 10:34pm\"\n2016-06-28 20:01:29,37.39412,-121.92748,,support,,Period of dangerous driving 10:32pm-10:34pm\n2016-06-28 20:04:58,37.42982,-122.057884,,surge,,\"Braking at 10:32pm, -0.3g\"\n2016-06-28 20:02:13,37.720642,-122.40161,,swerve,1,\"10:33pm,37.3490528616667,-121.972682895794,accel,3,\"\"Acceleration at 10:33pm, +0.2g\"\"\"\n2016-06-28 20:07:08,37.77196,-122.40985,,thumbs-up,,\"Aborted lane change, 10:34pm\"\n2016-06-28 20:04:38,37.801647,-121.7171,,trash,1,Period of dangerous driving 10:32pm-10:34pm\n2016-06-28 20:06:53,37.557343,-122.45817,,trip-history,5,\"10:33pm,37.3490528616667,-121.972682895794,accel,3,\"\"Acceleration at 10:33pm, +0.2g\"\"\"\n2016-06-28 20:01:35,37.79315,-122.42391,,trips,2,\"Aborted lane change, 10:34pm\"\n2016-06-28 20:06:56,37.763123,-122.39953,,trophy,4,Period of dangerous driving 10:32pm-10:34pm\n2016-06-28 20:00:33,37.80429,-121.9803,,twitter,2,\"Braking at 10:32pm, -0.3g\"\n2016-06-28 20:01:32,37.737015,-122.45104,,uber-u,3,\"10:33pm,37.3490528616667,-121.972682895794,accel,3,\"\"Acceleration at 10:33pm, +0.2g\"\"\"\n2016-06-28 20:08:15,37.688007,-122.394196,,uber,2,\"Aborted lane change, 10:34pm\"\n2016-06-28 20:07:34,36.60167,-122.30107,,underline,4,Period of dangerous driving 10:32pm-10:34pm\n2016-06-28 20:00:32,37.77245,-122.433464,,unlock,5,\"Braking at 10:32pm, -0.3g\"\n2016-06-28 20:08:30,37.787792,-122.46132,,unstar,,\"10:33pm,37.3490528616667,-121.972682895794,accel,3,\"\"Acceleration at 10:33pm, +0.2g\"\"\"\n2016-06-28 20:05:31,37.789505,-122.44561,,up-arrow-alt,2,\"Aborted lane change, 10:34pm\"\n2016-06-28 20:03:24,37.789154,-121.873825,,up-arrow-thin,3,Period of dangerous driving 10:32pm-10:34pm\n2016-06-28 20:01:29,37.38603,-122.400986,,up-arrow,5,\"Braking at 10:32pm, -0.3g\"\n2016-06-28 20:04:58,37.776512,-122.46835,,upload,4,\"10:33pm,37.3490528616667,-121.972682895794,accel,3,\"\"Acceleration at 10:33pm, +0.2g\"\"\"\n2016-06-28 20:02:13,37.764816,-122.04143,,wrench,2,\"Aborted lane change, 10:34pm\"`;\n\nexport const config = {\n  version: 'v1',\n  config: {\n    visState: {\n      filters: [],\n      layers: [\n        {\n          id: 'xbbp4of',\n          type: 'hexagon',\n          config: {\n            dataId: 'test_icon_data',\n            label: 'new layer',\n            color: [221, 178, 124],\n            columns: {\n              lat: 'event_lat',\n              lng: 'event_lng'\n            },\n            isVisible: true,\n            visConfig: {\n              opacity: 0.8,\n              worldUnitSize: 0.5,\n              resolution: 8,\n              colorRange: {\n                name: 'Global Warming',\n                type: 'sequential',\n                category: 'Uber',\n                colors: ['#5A1846', '#900C3F', '#C70039', '#E3611C', '#F1920E', '#FFC300']\n              },\n              coverage: 1,\n              sizeRange: [0, 500],\n              percentile: [0, 100],\n              elevationPercentile: [0, 100],\n              elevationScale: 5,\n              'hi-precision': false,\n              colorAggregation: 'average',\n              sizeAggregation: 'average',\n              enable3d: true\n            }\n          },\n          visualChannels: {\n            colorField: {\n              name: 'annotation-severity',\n              type: 'integer'\n            },\n            colorScale: 'quantile',\n            sizeField: null,\n            sizeScale: 'linear'\n          }\n        }\n      ],\n      interactionConfig: {\n        tooltip: {\n          fieldsToShow: {\n            test_icon_data: ['time', 'icon', 'icon-bk', 'annotation-severity', 'annotation-html'],\n            '6b69fg6ca': ['OBJECTID', 'ZIP_CODE', 'ID']\n          },\n          enabled: true\n        },\n        brush: {\n          size: 0.5,\n          enabled: false\n        },\n        geocoder: {\n          enabled: false\n        }\n      },\n      layerBlending: 'normal',\n      splitMaps: []\n    },\n    mapState: {\n      bearing: 24,\n      dragRotate: true,\n      latitude: 37.77189215118738,\n      longitude: -122.42436896812978,\n      pitch: 50,\n      zoom: 12.132280694715416,\n      isSplit: false\n    },\n    mapStyle: {\n      styleType: 'dark',\n      topLayerGroups: {\n        label: true\n      },\n      visibleLayerGroups: {\n        label: true,\n        road: true,\n        border: false,\n        building: true,\n        water: true,\n        land: true\n      }\n    }\n  }\n};\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nconst gps = `timestamp,location-lng,location-lat,ground-speed,heading,id,location-alt\n2014-08-01 00:00:23.000,90.2266981,27.6162803,0.22,0.0,Thang Kaar Thuub (3552),3217.0\n2014-08-01 00:10:07.000,90.2266713,27.6162513,0.27,140.9,Thang Kaar Thuub (3552),3212.3\n2014-08-01 00:20:07.000,90.2267115,27.6162102,0.27,110.1,Thang Kaar Thuub (3552),3209.1\n2014-08-01 00:30:07.000,90.2267409,27.6162514,0.32,0.0,Thang Kaar Thuub (3552),3206.2\n2014-08-01 00:40:07.000,90.2265545,27.6163481,0.46,0.0,Thang Kaar Thuub (3552),3231.3\n2014-08-01 00:50:07.000,90.2269491,27.6161884,0.51,0.0,Thang Kaar Thuub (3552),3178.8\n2014-08-01 01:00:07.000,90.2265336,27.6163122,0.3,99.61,Thang Kaar Thuub (3552),3257.2\n2014-08-01 01:10:07.000,90.2267568,27.6162647,0.33,0.0,Thang Kaar Thuub (3552),3192.5\n2014-08-01 01:20:07.000,90.2267296,27.6163003,0.43,0.0,Thang Kaar Thuub (3552),3199.2\n2014-08-01 01:30:16.000,90.2267121,27.6163019,0.09,172.36,Thang Kaar Thuub (3552),3222.9\n2014-08-01 01:40:21.000,90.2267198,27.6163409,0.07,0.0,Thang Kaar Thuub (3552),3216.7\n2014-08-01 01:50:06.000,90.2266872,27.6162974,0.26,105.51,Thang Kaar Thuub (3552),3215.5\n2014-08-01 02:00:06.000,90.2266652,27.6162898,0.5,157.94,Thang Kaar Thuub (3552),3219.6\n2014-08-01 02:10:07.000,90.2266452,27.6163351,0.18,160.56,Thang Kaar Thuub (3552),3220.4\n2014-08-01 02:20:07.000,90.2266829,27.6162774,0.22,169.74,Thang Kaar Thuub (3552),3216.9\n2014-08-01 02:30:07.000,90.2266533,27.6162986,0.25,145.49,Thang Kaar Thuub (3552),3224.0\n2014-08-01 02:40:07.000,90.2267379,27.6162983,0.21,195.95,Thang Kaar Thuub (3552),3225.6\n2014-08-01 02:50:07.000,90.226692,27.616304,0.19,0.0,Thang Kaar Thuub (3552),3211.8\n2014-08-01 03:00:07.000,90.2266683,27.6163021,0.28,0.0,Thang Kaar Thuub (3552),3227.1\n2014-08-01 03:10:06.000,90.2266718,27.6162954,0.24,138.94,Thang Kaar Thuub (3552),3225.1\n2014-08-01 03:20:07.000,90.2267475,27.6162578,0.06,0.0,Thang Kaar Thuub (3552),3218.9\n2014-08-01 03:30:07.000,90.2266495,27.6163363,0.05,0.0,Thang Kaar Thuub (3552),3209.9\n2014-08-01 03:40:07.000,90.2266573,27.6162552,0.33,278.53,Thang Kaar Thuub (3552),3216.8\n2014-08-01 03:50:06.000,90.200501,27.5963135,11.97,248.38,Thang Kaar Thuub (3552),3150.4\n2014-08-01 04:00:23.000,90.2029316,27.592159,11.09,102.89,Thang Kaar Thuub (3552),3173.1\n2014-08-01 04:10:06.000,90.1979269,27.5900334,14.89,226.1,Thang Kaar Thuub (3552),3078.8\n2014-08-01 04:20:06.000,90.1599981,27.5889937,9.36,214.3,Thang Kaar Thuub (3552),3219.6\n2014-08-01 04:30:06.000,90.1304977,27.5797384,17.17,256.9,Thang Kaar Thuub (3552),3066.5\n2014-08-01 04:40:06.000,90.0803941,27.5599255,10.13,278.53,Thang Kaar Thuub (3552),3100.0\n2014-08-01 04:50:06.000,90.0107878,27.5658968,11.39,235.93,Thang Kaar Thuub (3552),2666.8\n2014-08-01 05:00:06.000,89.9490298,27.5345735,9.28,214.3,Thang Kaar Thuub (3552),2309.5\n2014-08-01 06:42:41.000,82.1138274,27.4378974,15.95,64.23,Thang Kaar Ngang Ka (4002),966.3\n2014-08-01 06:42:42.000,82.1139649,27.4379582,14.9,62.91,Thang Kaar Ngang Ka (4002),969.9\n2014-08-01 06:42:43.000,82.1140881,27.4380211,13.67,58.33,Thang Kaar Ngang Ka (4002),972.8\n2014-08-01 06:42:44.000,82.1141907,27.4380927,12.54,48.5,Thang Kaar Ngang Ka (4002),974.6\n2014-08-01 06:42:45.000,82.114263,27.4381765,11.44,32.11,Thang Kaar Ngang Ka (4002),975.2\n2014-08-01 06:42:46.000,82.1143013,27.438272,11.35,13.76,Thang Kaar Ngang Ka (4002),975.8\n2014-08-01 06:42:47.000,82.11431,27.4383692,10.8,0.66,Thang Kaar Ngang Ka (4002),977.7\n2014-08-01 06:42:48.000,82.1142962,27.4384518,8.76,346.69,Thang Kaar Ngang Ka (4002),980.6\n2014-08-01 06:42:49.000,82.1142637,27.4385091,6.63,325.71,Thang Kaar Ngang Ka (4002),983.6\n2014-08-01 06:42:50.000,82.1142176,27.4385368,5.34,292.95,Thang Kaar Ngang Ka (4002),985.9\n2014-08-01 06:42:51.000,82.1141648,27.4385357,5.47,258.87,Thang Kaar Ngang Ka (4002),987.5\n2014-08-01 06:42:52.000,82.1141123,27.4385072,6.58,232.0,Thang Kaar Ngang Ka (4002),988.8\n2014-08-01 06:42:53.000,82.1140662,27.4384524,8.17,211.68,Thang Kaar Ngang Ka (4002),990.3\n2014-08-01 06:42:54.000,82.1140376,27.4383744,9.62,192.68,Thang Kaar Ngang Ka (4002),992.1\n2014-08-01 06:42:55.000,82.114036,27.4382797,10.99,176.29,Thang Kaar Ngang Ka (4002),994.3\n2014-08-01 06:42:56.000,82.1140666,27.438175,12.55,161.22,Thang Kaar Ngang Ka (4002),996.5\n2014-08-01 06:42:57.000,82.1141258,27.4380679,13.64,150.73,Thang Kaar Ngang Ka (4002),998.2\n2014-08-01 06:42:58.000,82.1142042,27.4379617,14.34,144.83,Thang Kaar Ngang Ka (4002),999.3\n2014-08-01 06:42:59.000,82.1142915,27.4378567,14.58,142.21,Thang Kaar Ngang Ka (4002),1000.9\n2014-08-01 06:43:00.000,82.1143788,27.4377539,14.18,142.21,Thang Kaar Ngang Ka (4002),1002.5\n2014-08-01 06:43:01.000,82.1144592,27.4376522,13.65,145.49,Thang Kaar Ngang Ka (4002),1004.0\n2014-08-01 06:43:02.000,82.1145274,27.4375495,13.09,150.73,Thang Kaar Ngang Ka (4002),1004.7\n2014-08-01 06:43:03.000,82.1145875,27.4374392,13.84,154.66,Thang Kaar Ngang Ka (4002),1005.1\n2014-08-01 06:43:04.000,82.1146421,27.4373208,14.33,157.94,Thang Kaar Ngang Ka (4002),1006.1\n2014-08-01 06:43:05.000,82.1146882,27.4372001,14.03,161.87,Thang Kaar Ngang Ka (4002),1007.5\n2014-08-01 06:43:06.000,82.1147188,27.4370782,13.75,169.08,Thang Kaar Ngang Ka (4002),1009.8\n2014-08-01 06:43:07.000,82.1147296,27.4369611,12.75,177.6,Thang Kaar Ngang Ka (4002),1012.1\n2014-08-01 06:43:08.000,82.1147213,27.4368536,11.67,186.12,Thang Kaar Ngang Ka (4002),1014.2\n2014-08-01 06:43:09.000,82.1146955,27.4367568,10.77,195.95,Thang Kaar Ngang Ka (4002),1017.1\n2014-08-01 06:43:10.000,82.1146547,27.436676,9.5,207.75,Thang Kaar Ngang Ka (4002),1020.1\n2014-08-01 06:43:11.000,82.1145999,27.4366146,8.5,222.82,Thang Kaar Ngang Ka (4002),1023.3\n2014-08-01 06:43:12.000,82.1145381,27.4365653,8.12,230.03,Thang Kaar Ngang Ka (4002),1026.2\n2014-08-01 06:43:13.000,82.1144759,27.4365206,7.87,230.69,Thang Kaar Ngang Ka (4002),1028.2\n2014-08-01 06:43:14.000,82.1144131,27.4364746,8.14,230.03,Thang Kaar Ngang Ka (4002),1029.8\n2014-08-01 06:43:15.000,82.1143506,27.43643,7.86,231.34,Thang Kaar Ngang Ka (4002),1030.8\n2014-08-01 06:43:16.000,82.1142864,27.4363918,7.6,237.9,Thang Kaar Ngang Ka (4002),1031.0\n2014-08-01 06:43:17.000,82.1142171,27.4363629,7.58,247.73,Thang Kaar Ngang Ka (4002),1031.9\n2014-08-01 06:43:18.000,82.114145,27.4363437,7.43,255.59,Thang Kaar Ngang Ka (4002),1033.1\n2014-08-01 06:43:19.000,82.1140733,27.4363307,7.17,259.52,Thang Kaar Ngang Ka (4002),1034.5\n2014-08-01 06:43:20.000,82.114004,27.4363217,6.85,262.14,Thang Kaar Ngang Ka (4002),1035.6\n2014-08-01 06:43:21.000,82.1139337,27.4363205,7.05,271.32,Thang Kaar Ngang Ka (4002),1036.6\n2014-08-01 06:43:22.000,82.1138619,27.4363266,7.2,276.56,Thang Kaar Ngang Ka (4002),1037.3\n2014-08-01 06:43:23.000,82.1137874,27.4363359,7.56,277.87,Thang Kaar Ngang Ka (4002),1038.6\n2014-08-01 06:43:24.000,82.1137119,27.4363441,7.51,275.91,Thang Kaar Ngang Ka (4002),1040.2\n2014-08-01 06:43:25.000,82.1136379,27.4363491,7.29,273.29,Thang Kaar Ngang Ka (4002),1041.4\n2014-08-01 06:43:26.000,82.1135644,27.4363482,7.29,267.39,Thang Kaar Ngang Ka (4002),1043.2`;\n\nexport default gps;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {IndexRoute, Route} from 'react-router';\nimport React from 'react';\nimport Demo from '../app';\nimport {getCloudProvider, DEFAULT_CLOUD_PROVIDER} from '../cloud-providers';\n\nexport function onAuthEnterCallback(nextState, replace, callback) {\n  // TODO: detect auth provider\n  const authProvider = getCloudProvider(DEFAULT_CLOUD_PROVIDER);\n\n  // Check if the current tab was opened by our previous tab\n  if (window.opener) {\n    const {location} = nextState;\n    const token = authProvider.getAccessTokenFromLocation(location);\n    window.opener.postMessage({token}, location.origin);\n  }\n\n  callback();\n}\n\nexport function buildAppRoutes(Component) {\n  return [\n    <Route key=\"auth\" path=\"auth\" component={Demo} onEnter={onAuthEnterCallback} />,\n    <Route key=\"demo\" path=\"demo\">\n      <IndexRoute component={Component} />\n      <Route path=\"map\" component={Component} />\n      <Route path=\"(:id)\" component={Component} />\n      <Route path=\"map/:provider\" component={Component} />\n    </Route>\n  ];\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport document from 'global/document';\nimport {Provider} from 'react-redux';\nimport {browserHistory, Router, Route} from 'react-router';\nimport {syncHistoryWithStore} from 'react-router-redux';\nimport store from './store';\nimport App from './app';\nimport {buildAppRoutes} from './utils/routes';\n\nconst history = syncHistoryWithStore(browserHistory, store);\n\nconst appRoute = buildAppRoutes(App);\n\nconst Root = () => (\n  <Provider store={store}>\n    <Router history={history}>\n      <Route path=\"/\" component={App}>\n        {appRoute}\n      </Route>\n      <Route path=\"/kep/:datafile\" component={App}>\n        {appRoute}\n      </Route>      \n    </Router>\n  </Provider>\n);\nlet domcreateInterval = setInterval(()=>{\n    if (document.getElementById('root')){\n        clearInterval(domcreateInterval);\n        const root = ReactDOM.createRoot(document.getElementById('root'));\n        root.render(<Root />);\n    }    \n},100);","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport keyMirror from 'keymirror';\n\nexport const VERSIONS = keyMirror({\n  v0: null,\n  v1: null\n});\n\nexport const CURRENT_VERSION = VERSIONS.v1;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {console as Console} from 'global/window';\n\nimport {CURRENT_VERSION} from './versions';\n\nexport default class Schema {\n  version: string;\n  key: string;\n  properties:\n    | {\n        [key: string]: null | Schema;\n      }\n    | string[]\n    | null;\n\n  constructor({\n    version = CURRENT_VERSION,\n    key = '',\n    properties = null\n  }: {\n    version?: string;\n    key?: string;\n    properties?:\n      | {\n          [key: string]: null | Schema;\n        }\n      | string[]\n      | null;\n  } = {}) {\n    this.version = version;\n    this.properties = properties;\n    this.key = key;\n  }\n\n  loadPropertiesOrApplySchema(\n    node: any,\n    parents: any[] = [],\n    accumulator?: any\n  ): {[key: string]: any} {\n    return this._getPropertyValueFromSchema('load', node, parents, accumulator);\n  }\n\n  savePropertiesOrApplySchema(\n    node: any,\n    parents: object[] = [],\n    accumulator?: any\n  ): {[key: string]: any} {\n    return this._getPropertyValueFromSchema('save', node, parents, accumulator);\n  }\n\n  _getPropertyValueFromSchema(operation, node: any, parents: object[] = [], accumulator) {\n    const internal = `_${operation}`;\n    return {\n      [this.key]: this.properties\n        ? Object.keys(this.properties).reduce((accu, key) => {\n            return {\n              ...accu,\n              ...(key in node\n                ? // @ts-expect-error\n                  this.properties[key]\n                  ? // if it's another schema\n                    // @ts-expect-error\n                    this.properties[key][operation]\n                    ? // call save or load\n                      // @ts-expect-error\n                      this.properties[key][internal](node[key], [...parents, node], accu)\n                    : {}\n                  : {[key]: node[key]}\n                : {})\n            };\n          }, {})\n        : node\n    };\n  }\n\n  _isCurrentVersion() {\n    return this.version === CURRENT_VERSION;\n  }\n\n  outdatedVersionError() {\n    if (!this._isCurrentVersion()) {\n      Console.error(`${this.key} ${this.version} is outdated. save should not be called anymore`);\n    }\n  }\n\n  _save(...args) {\n    // make sure nothing is saved to an outdated version\n    this.outdatedVersionError();\n    // @ts-expect-error\n    return this.save(...args);\n  }\n\n  save(node: any, parents: object[] = [], accumulator: any = {}): {[key: string]: any} {\n    return this.savePropertiesOrApplySchema(node, parents, accumulator);\n  }\n\n  _load(...args) {\n    // @ts-expect-error\n    return this.load(...args);\n  }\n\n  load(node: any, parents: object[] = [], accumulator: any = {}): {[key: string]: any} {\n    return this.loadPropertiesOrApplySchema(node, parents, accumulator);\n  }\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport pick from 'lodash.pick';\nimport {console as globalConsole} from 'global/window';\n\nimport {ProtoDataset, RGBColor} from '@kepler.gl/types';\nimport {KeplerTable} from '@kepler.gl/table';\nimport {VERSIONS} from './versions';\nimport Schema from './schema';\nimport {getFieldsFromData, getSampleForTypeAnalyze} from '@kepler.gl/utils';\n\nexport type SavedField = {\n  name: string;\n  type: string;\n  format?: string;\n  analyzerType?: string;\n};\n\nexport type ParsedField = {\n  name: string;\n  type: string;\n  format: string;\n  analyzerType: string;\n};\n\nexport type SavedDatasetV1 = {\n  version: 'v1';\n  data: {\n    id: string;\n    label: string;\n    color: RGBColor;\n    allData: any[][];\n    fields: SavedField[];\n  };\n};\n\nexport type ParsedDataset = {\n  data: {\n    fields: ParsedField[];\n    rows: any[][];\n  };\n  info: {\n    id?: string;\n    label?: string;\n    color?: RGBColor;\n  };\n};\n\n// version v0\nexport const fieldPropertiesV0 = {\n  name: null,\n  type: null\n};\n\nexport const fieldPropertiesV1 = {\n  name: null,\n  type: null,\n  format: null,\n  analyzerType: null,\n  metadata: null\n};\n\nexport class FieldSchema extends Schema {\n  save(fields) {\n    return {\n      [this.key]: fields.map(f => this.savePropertiesOrApplySchema(f)[this.key])\n    };\n  }\n  load(fields) {\n    return {[this.key]: fields};\n  }\n}\n\nexport const propertiesV0 = {\n  id: null,\n  label: null,\n  color: null,\n  allData: null,\n  fields: new FieldSchema({\n    key: 'fields',\n    version: VERSIONS.v0,\n    properties: fieldPropertiesV0\n  })\n};\n\nexport const propertiesV1 = {\n  ...propertiesV0,\n  fields: new FieldSchema({\n    key: 'fields',\n    version: VERSIONS.v1,\n    properties: fieldPropertiesV1\n  })\n};\n\nexport class DatasetSchema extends Schema {\n  key = 'dataset';\n\n  save(dataset: KeplerTable): SavedDatasetV1['data'] {\n    const datasetFlattened = dataset.dataContainer\n      ? {\n          ...dataset,\n          allData: dataset.dataContainer.flattenData()\n        }\n      : dataset;\n\n    return this.savePropertiesOrApplySchema(datasetFlattened)[this.key];\n  }\n  load(dataset: SavedDatasetV1['data']): ProtoDataset {\n    const {fields, allData} = dataset;\n    let updatedFields = fields;\n\n    // recalculate field type\n    // because we have updated type-analyzer\n    // we need to add format to each field\n    const needCalculateMeta =\n      fields[0] &&\n      (!fields[0].hasOwnProperty('format') || !fields[0].hasOwnProperty('analyzerType'));\n\n    if (needCalculateMeta) {\n      const fieldOrder = fields.map(f => f.name);\n\n      const sampleData = getSampleForTypeAnalyze({\n        fields: fieldOrder,\n        rows: allData\n      });\n      const meta = getFieldsFromData(sampleData, fieldOrder);\n\n      updatedFields = meta.map((f, i) => ({\n        ...pick(meta[i], ['name', 'type', 'format']),\n        analyzerType: meta[i].analyzerType\n      }));\n\n      updatedFields.forEach((f, i) => {\n        if (fields[i].type !== f.type) {\n          // if newly detected field type is different from saved type\n          // we log it but won't update it, cause we don't want to break people's map\n          globalConsole.warn(`detect ${f.name} type is now ${f.type} instead of ${fields[i].type}`);\n        }\n      });\n    }\n\n    // get format of all fields\n    return {\n      data: {fields: updatedFields, rows: dataset.allData},\n      info: pick(dataset, ['id', 'label', 'color'])\n    };\n  }\n}\n\nexport const datasetSchema = {\n  [VERSIONS.v0]: new DatasetSchema({\n    key: 'dataset',\n    version: VERSIONS.v0,\n    properties: propertiesV0\n  }),\n  [VERSIONS.v1]: new DatasetSchema({\n    key: 'dataset',\n    version: VERSIONS.v1,\n    properties: propertiesV1\n  })\n};\n\nexport default datasetSchema;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {VERSIONS} from './versions';\nimport Schema from './schema';\n\nexport const customMapStylePropsV1 = {\n  accessToken: null,\n  custom: null,\n  icon: null,\n  id: null,\n  label: null,\n  url: null\n};\n\nexport const CustomMapStyleSchema = new Schema({\n  version: VERSIONS.v1,\n  key: 'customStyle',\n  properties: customMapStylePropsV1\n});\n\nexport class MapStyleSchemaV1 extends Schema {\n  version = VERSIONS.v1;\n  key = 'mapStyles';\n  save(mapStyles) {\n    // save all custom styles\n    const saveCustomStyle = Object.keys(mapStyles).reduce(\n      (accu, key) => ({\n        ...accu,\n        ...(mapStyles[key].custom\n          ? {[key]: CustomMapStyleSchema.save(mapStyles[key]).customStyle}\n          : {})\n      }),\n      {}\n    );\n\n    return {[this.key]: saveCustomStyle};\n  }\n\n  load(mapStyles) {\n    // If mapStyle is an empty object, do not load it\n    return typeof mapStyles === 'object' && Object.keys(mapStyles).length\n      ? {[this.key]: mapStyles}\n      : {};\n  }\n}\n\n// version v0\nexport const propertiesV0 = {\n  styleType: null,\n  topLayerGroups: null,\n  visibleLayerGroups: null,\n  buildingLayer: null,\n  mapStyles: new MapStyleSchemaV1()\n};\n\nexport const propertiesV1 = {\n  styleType: null,\n  topLayerGroups: null,\n  visibleLayerGroups: null,\n  threeDBuildingColor: null,\n  backgroundColor: null,\n  mapStyles: new MapStyleSchemaV1()\n};\n\nconst mapStyleSchema = {\n  [VERSIONS.v0]: new Schema({\n    version: VERSIONS.v0,\n    properties: propertiesV0,\n    key: 'mapStyle'\n  }),\n  [VERSIONS.v1]: new Schema({\n    version: VERSIONS.v1,\n    properties: propertiesV1,\n    key: 'mapStyle'\n  })\n};\n\nexport default mapStyleSchema;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {VERSIONS} from './versions';\nimport Schema from './schema';\n\n// version v0\nexport const propertiesV0 = {\n  bearing: null,\n  dragRotate: null,\n  latitude: null,\n  longitude: null,\n  pitch: null,\n  zoom: null\n};\n\nexport const propertiesV1 = {\n  ...propertiesV0,\n  isSplit: null,\n  isViewportSynced: null,\n  isZoomLocked: null,\n  splitMapViewports: null\n};\n\nconst mapStateSchema = {\n  [VERSIONS.v0]: new Schema({\n    version: VERSIONS.v0,\n    properties: propertiesV0,\n    key: 'mapState'\n  }),\n  [VERSIONS.v1]: new Schema({\n    version: VERSIONS.v1,\n    properties: propertiesV1,\n    key: 'mapState'\n  })\n};\n\nexport default mapStateSchema;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport pick from 'lodash.pick';\nimport {VERSIONS} from './versions';\nimport {LAYER_VIS_CONFIGS, FILTER_VIEW_TYPES} from '@kepler.gl/constants';\nimport {isFilterValidToSave, notNullorUndefined, findById} from '@kepler.gl/utils';\nimport Schema from './schema';\nimport cloneDeep from 'lodash.clonedeep';\nimport {\n  AddDataToMapOptions,\n  AnimationConfig,\n  Editor,\n  FileLoading,\n  FileLoadingProgress,\n  Filter,\n  InteractionConfig,\n  MapInfo,\n  ParsedFilter,\n  ParsedLayer,\n  ParsedVisState,\n  SavedFilter,\n  MinSavedFilter,\n  SavedInteractionConfig,\n  SavedLayer,\n  MinSavedLayer,\n  SavedVisState,\n  SplitMap,\n  ValueOf,\n  Effect\n} from '@kepler.gl/types';\nimport {Datasets} from '@kepler.gl/table';\nimport {Layer, LayerClassesType} from '@kepler.gl/layers';\nimport {Loader} from '@loaders.gl/loader-utils';\nimport KeplerGLSchema from './schema-manager';\n\n/**\n * V0 Schema\n */\n\nexport const dimensionPropsV0 = ['name', 'type'];\n\nexport type modifiedType = {\n  strokeColor?: any;\n  strokeColorRange?: any;\n  filled?: boolean;\n  stroked?: boolean;\n};\n\nexport interface VisState {\n  mapInfo: MapInfo;\n  layers: Layer[];\n  layerData: any[];\n  layerToBeMerged: any[];\n  layerOrder: string[];\n  effects: Effect[];\n  effectOrder: string[];\n  filters: Filter[];\n  filterToBeMerged: any[];\n  datasets: Datasets;\n  editingDataset: string | undefined;\n  interactionConfig: InteractionConfig;\n  interactionToBeMerged: any;\n  layerBlending: string;\n  overlayBlending?: string;\n  hoverInfo: any;\n  clicked: any;\n  mousePos: any;\n  maxDefaultTooltips: number;\n  layerClasses: LayerClassesType;\n  animationConfig: AnimationConfig;\n  editor: Editor;\n  splitMaps: SplitMap[];\n  splitMapsToBeMerged: SplitMap[];\n  fileLoading: FileLoading | false;\n  fileLoadingProgress: FileLoadingProgress;\n  loaders: Loader[];\n  loadOptions: object;\n  initialState?: Partial<VisState>;\n  mergers: VisStateMergers<any>;\n  schema: typeof KeplerGLSchema;\n  preserveLayerOrder?: string[];\n  preserveFilterOrder?: string[];\n  preserveDatasetOrder?: string[];\n  isMergingDatasets: {\n    [datasetId: string]: boolean;\n  };\n}\n\nexport type PostMergerPayload = {\n  newDataIds: string[];\n  options?: AddDataToMapOptions;\n  layerMergers?: Merger<any>[];\n};\nexport type MergerActionPayload<S extends {}> = {\n  mergers: Merger<S>[];\n  postMergerPayload: PostMergerPayload;\n};\nexport type MergerMergeFunc<S extends {}> = (\n  state: S,\n  config: any,\n  fromConfig: boolean,\n  mergerActionPayload?: MergerActionPayload<S>\n) => S;\nexport type ReplaceParentDatasetIdsFunc<T> = (\n  item: T,\n  dataId: string,\n  dataIdToReplace: string\n) => T | null;\nexport type Merger<S extends {}> = {\n  merge: MergerMergeFunc<S>;\n  prop: string | string[];\n  toMergeProp?: string | string[];\n  preserveOrder?: string;\n  waitToFinish?: boolean;\n  waitForLayerData?: boolean;\n  replaceParentDatasetIds?: ReplaceParentDatasetIdsFunc<ValueOf<S>>;\n  saveUnmerged?: (state: S, unmerged: any) => S;\n  getChildDatasetIds?: any;\n};\nexport type VisStateMergers<S extends {}> = Merger<S>[];\n\n// in v0 geojson there is only sizeField\n\n// in v1 geojson\n// stroke base on -> sizeField\n// height based on -> heightField\n// radius based on -> radiusField\n// here we make our wiredst guess on which channel sizeField belongs to\nfunction geojsonSizeFieldV0ToV1(config) {\n  const defaultRaiuds = 10;\n  const defaultRadiusRange = [0, 50];\n\n  // if extruded, sizeField is most likely used for height\n  if (config.visConfig.extruded) {\n    return 'heightField';\n  }\n\n  // if show stroke enabled, sizeField is most likely used for stroke\n  if (config.visConfig.stroked) {\n    return 'sizeField';\n  }\n\n  // if radius changed, or radius Range Changed, sizeField is most likely used for radius\n  // this is the most unreliable guess, that's why we put it in the end\n  if (\n    config.visConfig.radius !== defaultRaiuds ||\n    config.visConfig.radiusRange.some((d, i) => d !== defaultRadiusRange[i])\n  ) {\n    return 'radiusField';\n  }\n\n  return 'sizeField';\n}\n\n// convert v0 to v1 layer config\nclass DimensionFieldSchemaV0 extends Schema {\n  version = VERSIONS.v0;\n  save(field) {\n    // should not be called anymore\n    return {\n      [this.key]: field !== null ? this.savePropertiesOrApplySchema(field)[this.key] : null\n    };\n  }\n\n  load(field, parents, accumulated) {\n    const [config] = parents.slice(-1);\n    let fieldName = this.key;\n    if (config.type === 'geojson' && this.key === 'sizeField' && field) {\n      fieldName = geojsonSizeFieldV0ToV1(config);\n    }\n    // fold into visualChannels to be load by VisualChannelSchemaV1\n    return {\n      visualChannels: {\n        ...(accumulated.visualChannels || {}),\n        [fieldName]: field\n      }\n    };\n  }\n}\n\nclass DimensionScaleSchemaV0 extends Schema {\n  version = VERSIONS.v0;\n  save(scale) {\n    return {[this.key]: scale};\n  }\n  load(scale, parents, accumulated) {\n    const [config] = parents.slice(-1);\n    // fold into visualChannels to be load by VisualChannelSchemaV1\n    if (this.key === 'sizeScale' && config.type === 'geojson') {\n      // sizeScale now split into radiusScale, heightScale\n      // no user customization, just use default\n      return {};\n    }\n\n    return {\n      visualChannels: {\n        ...(accumulated.visualChannels || {}),\n        [this.key]: scale\n      }\n    };\n  }\n}\n\n// used to convert v0 to v1 layer config\nclass LayerConfigSchemaV0 extends Schema {\n  version = VERSIONS.v0;\n  load(saved, parents, accumulated) {\n    // fold v0 layer property into config.key\n    return {\n      config: {\n        ...(accumulated.config || {}),\n        [this.key]: saved\n      }\n    };\n  }\n}\n\n// used to convert v0 to v1 layer columns\n// only return column value for each column\nclass LayerColumnsSchemaV0 extends Schema {\n  version = VERSIONS.v0;\n  load(saved, parents, accumulated) {\n    // fold v0 layer property into config.key, flatten columns\n    return {\n      config: {\n        ...(accumulated.config || {}),\n        columns: Object.keys(saved).reduce(\n          (accu, key) => ({\n            ...accu,\n            [key]: saved[key].value\n          }),\n          {}\n        )\n      }\n    };\n  }\n}\n\n// used to convert v0 to v1 layer config.visConfig\nclass LayerConfigToVisConfigSchemaV0 extends Schema {\n  version = VERSIONS.v0;\n  load(saved, parents, accumulated) {\n    // fold v0 layer property into config.visConfig\n    const accumulatedConfig = accumulated.config || {};\n    return {\n      config: {\n        ...accumulatedConfig,\n        visConfig: {\n          ...(accumulatedConfig.visConfig || {}),\n          [this.key]: saved\n        }\n      }\n    };\n  }\n}\n\nclass LayerVisConfigSchemaV0 extends Schema {\n  version = VERSIONS.v0;\n  key = 'visConfig';\n\n  load(visConfig, parents, accumulator) {\n    const [config] = parents.slice(-1);\n    const rename = {\n      geojson: {\n        extruded: 'enable3d',\n        elevationRange: 'heightRange'\n      }\n    };\n\n    if (config.type in rename) {\n      const propToRename = rename[config.type];\n      return {\n        config: {\n          ...(accumulator.config || {}),\n          visConfig: Object.keys(visConfig).reduce(\n            (accu, key) => ({\n              ...accu,\n              ...(propToRename[key]\n                ? {[propToRename[key]]: visConfig[key]}\n                : {[key]: visConfig[key]})\n            }),\n            {}\n          )\n        }\n      };\n    }\n\n    return {\n      config: {\n        ...(accumulator.config || {}),\n        visConfig\n      }\n    };\n  }\n}\n\nclass LayerConfigSchemaDeleteV0 extends Schema {\n  version = VERSIONS.v0;\n  load(value) {\n    return {};\n  }\n}\n\n/**\n * V0 -> V1 Changes\n * - layer is now a class\n * - config saved in a config object\n * - id, type, isAggregated is outside layer.config\n * - visualChannels is outside config, it defines available visual channel and\n *   property names for field, scale, domain and range of each visual chanel.\n * - enable3d, colorAggregation and sizeAggregation are moved into visConfig\n * - GeojsonLayer - added height, radius specific properties\n */\n\nexport const layerPropsV0 = {\n  id: null,\n  type: null,\n\n  // move into layer.config\n  dataId: new LayerConfigSchemaV0({key: 'dataId'}),\n  label: new LayerConfigSchemaV0({key: 'label'}),\n  color: new LayerConfigSchemaV0({key: 'color'}),\n  isVisible: new LayerConfigSchemaV0({key: 'isVisible'}),\n  hidden: new LayerConfigSchemaV0({key: 'hidden'}),\n\n  // convert visConfig\n  visConfig: new LayerVisConfigSchemaV0({key: 'visConfig'}),\n\n  // move into layer.config\n  // flatten\n  columns: new LayerColumnsSchemaV0(),\n\n  // save into visualChannels\n  colorField: new DimensionFieldSchemaV0({\n    properties: dimensionPropsV0,\n    key: 'colorField'\n  }),\n  colorScale: new DimensionScaleSchemaV0({\n    key: 'colorScale'\n  }),\n  sizeField: new DimensionFieldSchemaV0({\n    properties: dimensionPropsV0,\n    key: 'sizeField'\n  }),\n  sizeScale: new DimensionScaleSchemaV0({\n    key: 'sizeScale'\n  }),\n\n  // move into config.visConfig\n  enable3d: new LayerConfigToVisConfigSchemaV0({key: 'enable3d'}),\n  colorAggregation: new LayerConfigToVisConfigSchemaV0({\n    key: 'colorAggregation'\n  }),\n  sizeAggregation: new LayerConfigToVisConfigSchemaV0({key: 'sizeAggregation'}),\n\n  // delete\n  isAggregated: new LayerConfigSchemaDeleteV0()\n};\n\n/**\n * V1 Schema\n */\nclass ColumnSchemaV1 extends Schema {\n  save(columns, state) {\n    // starting from v1, only save column value\n    // fieldIdx will be calculated during merge\n    return {\n      [this.key]: Object.keys(columns).reduce(\n        (accu, ckey) => ({\n          ...accu,\n          // if value is null, don't save it\n          ...(columns[ckey]?.value ? {[ckey]: columns[ckey].value} : {})\n        }),\n        {}\n      )\n    };\n  }\n\n  load(columns) {\n    return {columns};\n  }\n}\n\nclass TextLabelSchemaV1 extends Schema {\n  save(textLabel) {\n    return {\n      [this.key]: textLabel.map(tl => ({\n        ...tl,\n        field: tl.field ? pick(tl.field, ['name', 'type']) : null\n      }))\n    };\n  }\n\n  load(textLabel) {\n    return {textLabel: Array.isArray(textLabel) ? textLabel : [textLabel]};\n  }\n}\n\nconst visualChannelModificationV1 = {\n  geojson: (vc, parents, accumulator) => {\n    const [layer] = parents.slice(-1);\n    const isOld = !vc.hasOwnProperty('strokeColorField');\n    // make our best guess if this geojson layer contains point\n    const isPoint =\n      vc.radiusField || layer.config.visConfig.radius !== LAYER_VIS_CONFIGS.radius.defaultValue;\n\n    if (isOld && !isPoint && layer.config.visConfig.stroked) {\n      // if stroked is true, copy color config to stroke color config\n      return {\n        strokeColorField: vc.colorField,\n        strokeColorScale: vc.colorScale\n      };\n    }\n    return {};\n  }\n};\n/**\n * V1: save [field]: {name, type}, [scale]: '' for each channel\n */\nclass VisualChannelSchemaV1 extends Schema {\n  save(visualChannels, parents) {\n    // only save field and scale of each channel\n    const [layer] = parents.slice(-1);\n    return {\n      [this.key]: Object.keys(visualChannels).reduce(\n        //  save channel to null if didn't select any field\n        (accu, key) => ({\n          ...accu,\n          [visualChannels[key].field]: layer.config[visualChannels[key].field]\n            ? pick(layer.config[visualChannels[key].field], ['name', 'type'])\n            : null,\n          [visualChannels[key].scale]: layer.config[visualChannels[key].scale]\n        }),\n        {}\n      )\n    };\n  }\n  load(vc, parents, accumulator) {\n    // fold channels into config\n    const [layer] = parents.slice(-1);\n    const modified = visualChannelModificationV1[layer.type]\n      ? visualChannelModificationV1[layer.type](vc, parents, accumulator)\n      : {};\n\n    return {\n      ...accumulator,\n      config: {\n        ...(accumulator.config || {}),\n        ...vc,\n        ...modified\n      }\n    };\n  }\n}\nconst visConfigModificationV1 = {\n  point: (visConfig, parents, accumulated) => {\n    const modified: modifiedType = {};\n    const [layer] = parents.slice(-2, -1);\n    const isOld =\n      !visConfig.hasOwnProperty('filled') && !visConfig.strokeColor && !visConfig.strokeColorRange;\n    if (isOld) {\n      // color color & color range to stroke color\n      modified.strokeColor = layer.config.color;\n      modified.strokeColorRange = cloneDeep(visConfig.colorRange);\n      if (visConfig.outline) {\n        // point layer now supports both outline and fill\n        // for older schema where filled has not been added to point layer\n        // set it to false\n        modified.filled = false;\n      }\n    }\n\n    return modified;\n  },\n  geojson: (visConfig, parents, accumulated) => {\n    // is points?\n    const modified: modifiedType = {};\n    const [layer] = parents.slice(-2, -1);\n    const isOld =\n      layer.visualChannels &&\n      !layer.visualChannels.hasOwnProperty('strokeColorField') &&\n      !visConfig.strokeColor &&\n      !visConfig.strokeColorRange;\n    // make our best guess if this geojson layer contains point\n    const isPoint =\n      (layer.visualChannels && layer.visualChannels.radiusField) ||\n      (visConfig && visConfig.radius !== LAYER_VIS_CONFIGS.radius.defaultValue);\n\n    if (isOld) {\n      // color color & color range to stroke color\n      modified.strokeColor = layer.config.color;\n      modified.strokeColorRange = cloneDeep(visConfig.colorRange);\n      if (isPoint) {\n        // if is point, set stroke to false\n        modified.filled = true;\n        modified.stroked = false;\n      }\n    }\n\n    return modified;\n  }\n};\n\nclass VisConfigSchemaV1 extends Schema {\n  key = 'visConfig';\n\n  load(visConfig, parents, accumulated) {\n    const [layer] = parents.slice(-2, -1);\n    const modified = visConfigModificationV1[layer.type]\n      ? visConfigModificationV1[layer.type](visConfig, parents, accumulated)\n      : {};\n\n    return {\n      visConfig: {\n        ...visConfig,\n        ...modified\n      }\n    };\n  }\n}\n\nexport const layerPropsV1 = {\n  id: null,\n  type: null,\n  config: new Schema({\n    version: VERSIONS.v1,\n    key: 'config',\n    properties: {\n      dataId: null,\n      label: null,\n      color: null,\n      highlightColor: null,\n      columns: new ColumnSchemaV1({\n        version: VERSIONS.v1,\n        key: 'columns'\n      }),\n      isVisible: null,\n      visConfig: new VisConfigSchemaV1({\n        version: VERSIONS.v1\n      }),\n      hidden: null,\n      textLabel: new TextLabelSchemaV1({\n        version: VERSIONS.v1,\n        key: 'textLabel'\n      })\n    }\n  }),\n  visualChannels: new VisualChannelSchemaV1({\n    version: VERSIONS.v1,\n    key: 'visualChannels'\n  })\n};\n\nexport class LayerSchemaV0 extends Schema {\n  key = 'layers';\n\n  save(layers: Layer[], parents: [VisState]): {layers: SavedLayer[]} {\n    const [visState] = parents.slice(-1);\n\n    return {\n      [this.key as 'layers']: visState.layerOrder.reduce((saved, layerId) => {\n        // save layers according to their rendering order\n        const layer = findById(layerId)(layers);\n        if (layer?.isValidToSave()) {\n          saved.push(this.savePropertiesOrApplySchema(layer).layers);\n        }\n        return saved;\n      }, [] as SavedLayer[])\n    };\n  }\n\n  load(\n    layers: SavedLayer[] | MinSavedLayer[] | undefined\n  ): {\n    layers: ParsedLayer[] | undefined;\n  } {\n    return {\n      [this.key as 'layers']: layers\n        ? layers.map(layer => this.loadPropertiesOrApplySchema(layer, layers).layers)\n        : []\n    };\n  }\n}\n\nexport class FilterSchemaV0 extends Schema {\n  key = 'filters';\n  save(filters: Filter[]): {filters: SavedFilter[]} {\n    return {\n      filters: filters\n        .filter(isFilterValidToSave)\n        .map(filter => this.savePropertiesOrApplySchema(filter).filters)\n    };\n  }\n  load(\n    filters: SavedFilter[] | MinSavedFilter[] | undefined\n  ): {filters: ParsedFilter[] | undefined} {\n    return {\n      filters: filters\n        ?.map(filter => this.loadPropertiesOrApplySchema(filter).filters)\n        // backward compatible convert enlarged to view\n        .map(filter => {\n          const {enlarged, view, ...filterProps} = filter;\n\n          const newFilter = {\n            ...filterProps,\n            // if view exist use it otherwise check for enlarged\n            view: view ? view : enlarged ? FILTER_VIEW_TYPES.enlarged : FILTER_VIEW_TYPES.side\n          };\n\n          return newFilter;\n        })\n    };\n  }\n}\n\nconst interactionPropsV0 = ['tooltip', 'brush'];\n\nclass InteractionSchemaV0 extends Schema {\n  key = 'interactionConfig';\n\n  save(interactionConfig) {\n    return Array.isArray(this.properties)\n      ? {\n          [this.key]: this.properties.reduce(\n            (accu, key) => ({\n              ...accu,\n              ...(interactionConfig[key].enabled ? {[key]: interactionConfig[key].config} : {})\n            }),\n            {}\n          )\n        }\n      : {};\n  }\n\n  load(interactionConfig) {\n    // convert v0 -> v1\n    // return enabled: false if disabled,\n    return Array.isArray(this.properties)\n      ? {\n          [this.key]: this.properties.reduce(\n            (accu, key) => ({\n              ...accu,\n              ...{\n                [key]: {\n                  ...(interactionConfig[key] || {}),\n                  enabled: Boolean(interactionConfig[key])\n                }\n              }\n            }),\n            {}\n          )\n        }\n      : {};\n  }\n}\n\nconst interactionPropsV1 = [...interactionPropsV0, 'geocoder', 'coordinate'];\n\nexport class InteractionSchemaV1 extends Schema {\n  key = 'interactionConfig';\n\n  save(\n    interactionConfig: InteractionConfig\n  ):\n    | {\n        interactionConfig: SavedInteractionConfig;\n      }\n    | {} {\n    // save config even if disabled,\n    return Array.isArray(this.properties)\n      ? {\n          [this.key]: this.properties.reduce(\n            (accu, key) => ({\n              ...accu,\n              [key]: {\n                ...interactionConfig[key].config,\n                enabled: interactionConfig[key].enabled\n              }\n            }),\n            {}\n          )\n        }\n      : {};\n  }\n  load(\n    interactionConfig: SavedInteractionConfig\n  ): {\n    interactionConfig: Partial<SavedInteractionConfig>;\n  } {\n    const modifiedConfig = interactionConfig;\n    Object.keys(interactionConfig).forEach(configType => {\n      if (configType === 'tooltip') {\n        const fieldsToShow = modifiedConfig[configType].fieldsToShow;\n        if (!notNullorUndefined(fieldsToShow)) {\n          return {[this.key]: modifiedConfig};\n        }\n        Object.keys(fieldsToShow).forEach(key => {\n          // @ts-expect-error name: fieldData should be string\n          fieldsToShow[key] = fieldsToShow[key].map(fieldData => {\n            if (!fieldData.name) {\n              return {\n                name: fieldData,\n                format: null\n              };\n            }\n            return fieldData;\n          });\n        });\n      }\n      return;\n    });\n    return {[this.key as 'interactionConfig']: modifiedConfig};\n  }\n}\n\nexport const filterPropsV0 = {\n  dataId: null,\n  id: null,\n  name: null,\n  type: null,\n  value: null,\n  // deprecated\n  enlarged: null\n};\n\nexport class DimensionFieldSchema extends Schema {\n  save(field) {\n    return {\n      [this.key]: field ? this.savePropertiesOrApplySchema(field)[this.key] : null\n    };\n  }\n\n  load(field) {\n    return {[this.key]: field};\n  }\n}\n\nexport class SplitMapsSchema extends Schema {\n  convertLayerSettings(accu, [key, value]) {\n    if (typeof value === 'boolean') {\n      return {\n        ...accu,\n        [key]: value\n      };\n    } else if (value && typeof value === 'object' && value.isAvailable) {\n      return {\n        ...accu,\n        [key]: Boolean(value.isVisible)\n      };\n    }\n    return accu;\n  }\n\n  load(splitMaps) {\n    // previous splitMaps Schema {layers: {layerId: {isVisible, isAvailable}}}\n\n    if (!Array.isArray(splitMaps) || !splitMaps.length) {\n      return {splitMaps: []};\n    }\n\n    return {\n      splitMaps: splitMaps.map(settings => ({\n        ...settings,\n        layers: Object.entries(settings.layers || {}).reduce(this.convertLayerSettings, {})\n      }))\n    };\n  }\n}\n\nexport const effectPropsV1 = {\n  id: null,\n  type: null,\n  isEnabled: null,\n  parameters: null\n};\nexport class EffectsSchema extends Schema {\n  key = 'effects';\n\n  save(effects, parents) {\n    const [visState] = parents.slice(-1);\n\n    return {\n      [this.key]: visState.effectOrder.reduce((saved, effectId) => {\n        // save effects according to their rendering order\n        /**\n         * @type {Effect | undefined}\n         */\n        const effect = findById(effectId)(effects as Effect[]);\n        if (effect?.isValidToSave()) {\n          saved.push(this.savePropertiesOrApplySchema(effect).effects);\n        }\n        return saved;\n      }, [])\n    };\n  }\n\n  load(effects) {\n    return {\n      [this.key]: effects.map(effect => {\n        // handle older configs\n        const outEffect = effect.config\n          ? {\n              id: effect.id,\n              ...effect.config,\n              parameters: {...(effect.config.params || {})}\n            }\n          : effect;\n        return this.loadPropertiesOrApplySchema(outEffect, effects).effects;\n      })\n    };\n  }\n}\n\nexport const filterPropsV1 = {\n  ...filterPropsV0,\n  plotType: null,\n  animationWindow: null,\n  yAxis: new DimensionFieldSchema({\n    version: VERSIONS.v1,\n    key: 'yAxis',\n    properties: {\n      name: null,\n      type: null\n    }\n  }),\n  // this replaced enlarged\n  view: null,\n\n  // polygon filter properties\n  layerId: null,\n  speed: null,\n\n  enabled: null\n};\n\nexport const propertiesV0 = {\n  filters: new FilterSchemaV0({\n    version: VERSIONS.v0,\n    properties: filterPropsV0\n  }),\n  layers: new LayerSchemaV0({\n    version: VERSIONS.v0,\n    properties: layerPropsV0\n  }),\n  interactionConfig: new InteractionSchemaV0({\n    version: VERSIONS.v0,\n    properties: interactionPropsV0\n  }),\n  layerBlending: null,\n  overlayBlending: null\n};\n\nexport const propertiesV1 = {\n  filters: new FilterSchemaV0({\n    version: VERSIONS.v1,\n    properties: filterPropsV1\n  }),\n  layers: new LayerSchemaV0({\n    version: VERSIONS.v1,\n    properties: layerPropsV1\n  }),\n  effects: new EffectsSchema({\n    version: VERSIONS.v1,\n    properties: effectPropsV1\n  }),\n  interactionConfig: new InteractionSchemaV1({\n    version: VERSIONS.v1,\n    properties: interactionPropsV1\n  }),\n  layerBlending: null,\n  overlayBlending: null,\n  splitMaps: new SplitMapsSchema({\n    key: 'splitMaps',\n    version: VERSIONS.v1\n  }),\n  animationConfig: new Schema({\n    version: VERSIONS.v1,\n    properties: {\n      currentTime: null,\n      speed: null\n    },\n    key: 'animationConfig'\n  }),\n  editor: new Schema({\n    version: VERSIONS.v1,\n    properties: {\n      features: null,\n      visible: null\n    },\n    key: 'editor'\n  })\n};\n\nexport class VisStateSchemaV1 extends Schema {\n  save(node: VisState, parents: any[] = [], accumulator?: any): {visState: SavedVisState} {\n    // @ts-expect-error\n    return this.savePropertiesOrApplySchema(node, parents, accumulator);\n  }\n\n  load(\n    node?: SavedVisState\n  ): {\n    visState: ParsedVisState | undefined;\n  } {\n    // @ts-expect-error\n    return this.loadPropertiesOrApplySchema(node);\n  }\n}\n\nexport const visStateSchemaV0 = new Schema({\n  version: VERSIONS.v0,\n  properties: propertiesV0,\n  key: 'visState'\n});\n\nexport const visStateSchemaV1 = new VisStateSchemaV1({\n  version: VERSIONS.v1,\n  properties: propertiesV1,\n  key: 'visState'\n});\n\nexport const visStateSchema: {\n  v0: typeof visStateSchemaV0;\n  v1: typeof visStateSchemaV1;\n} = {\n  // @ts-expect-error\n  [VERSIONS.v0]: {\n    save: toSave => visStateSchemaV0.save(toSave),\n    load: toLoad => visStateSchemaV1.load(visStateSchemaV0.load(toLoad)?.visState)\n  },\n  [VERSIONS.v1]: visStateSchemaV1\n};\n\n// test load v0\nexport default visStateSchema;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {console as Console} from 'global/window';\n\nimport {Datasets} from '@kepler.gl/table';\nimport datasetSchema from './dataset-schema';\nimport mapStyleSchema from './map-style-schema';\nimport mapStateSchema from './map-state-schema';\nimport {SavedDatasetV1, ParsedDataset} from './dataset-schema';\nimport {visStateSchema} from './vis-state-schema';\n\nimport {CURRENT_VERSION, VERSIONS} from './versions';\nimport {isPlainObject} from '@kepler.gl/utils';\n\nimport {MapInfo, SavedVisState, SavedMapStyle, ParsedConfig, BaseMapStyle} from '@kepler.gl/types';\n\nexport type SavedMapState = {\n  bearing: number;\n  dragRotate: boolean;\n  latitude: number;\n  longitude: number;\n  pitch: number;\n  zoom: number;\n  isSplit: boolean;\n  isViewportSynced?: true;\n  isZoomLocked?: false;\n  splitMapViewports?: [];\n};\n\nexport type SavedLayerGroups = {\n  [key: string]: boolean;\n};\n\nexport type SavedCustomMapStyle = {\n  [key: string]: {\n    accessToken?: string;\n    custom: BaseMapStyle['custom'];\n    icon: string;\n    id: string;\n    label: string;\n    url: string;\n  };\n};\n\n/** Schema for v1 saved configuration */\nexport type SavedConfigV1 = {\n  version: 'v1';\n  config: {\n    visState: SavedVisState;\n    mapState: SavedMapState;\n    mapStyle: SavedMapStyle;\n  };\n};\n\nexport type SavedMap = {\n  datasets: SavedDatasetV1[];\n  config: SavedConfigV1;\n  info: {\n    app: string;\n    created_at: string;\n    title: string;\n    description: string;\n  };\n};\n\nexport type LoadedMap = {datasets?: ParsedDataset[] | null; config?: ParsedConfig | null};\n\nexport const reducerSchema: {\n  [key: string]: typeof mapStateSchema | typeof visStateSchema | typeof mapStyleSchema;\n} = {\n  visState: visStateSchema,\n  mapState: mapStateSchema,\n  mapStyle: mapStyleSchema\n};\n\nexport class KeplerGLSchema {\n  _validVersions: typeof VERSIONS;\n  _version: 'v1';\n  _reducerSchemas: typeof reducerSchema;\n  _datasetSchema: typeof datasetSchema;\n  _datasetLastSaved: SavedDatasetV1[] | null;\n  _savedDataset: SavedDatasetV1[] | null;\n\n  constructor({\n    reducers = reducerSchema,\n    datasets = datasetSchema,\n    validVersions = VERSIONS,\n    version = CURRENT_VERSION\n  }: {\n    reducers?: typeof reducerSchema;\n    datasets?: typeof datasetSchema;\n    validVersions?: typeof VERSIONS;\n    version?: 'v1';\n  } = {}) {\n    this._validVersions = validVersions;\n    this._version = version;\n    this._reducerSchemas = reducers;\n    this._datasetSchema = datasets;\n\n    this._datasetLastSaved = null;\n    this._savedDataset = null;\n  }\n\n  /**\n   * stateToSave = {\n   *   datasets: [\n   *     {\n   *       version: 'v0',\n   *       data: {id, label, color, allData, fields}\n   *     },\n   *     {\n   *       version: 'v0',\n   *       data: {id, label, color, allData, fields}\n   *     }\n   *   ],\n   *   config: {\n   *     version: 'v0',\n   *     config: {}\n   *   },\n   *   info: {\n   *     app: 'kepler.gl',\n   *     create_at: 'Mon May 28 2018 21:04:46 GMT-0700 (PDT)'\n   *   }\n   * }\n   *\n   * Get config and data of current map to save\n   * @param state\n   * @returns app state to save\n   */\n  save(state: any): SavedMap {\n    return {\n      datasets: this.getDatasetToSave(state),\n      config: this.getConfigToSave(state),\n      info: {\n        app: 'kepler.gl',\n        created_at: new Date().toString(),\n        ...this.getMapInfo(state)\n      }\n    };\n  }\n\n  getMapInfo(state: any): MapInfo {\n    return state.visState.mapInfo;\n  }\n  /**\n   *  Load saved map, argument can be (datasets, config) or ({datasets, config})\n   * @param savedDatasets\n   * @param savedConfig\n   */\n  load(\n    savedDatasets: SavedMap | SavedMap['datasets'] | any,\n    savedConfig: SavedMap['config'] | any\n  ): LoadedMap {\n    // if pass dataset and config in as a single object\n    console.log(arguments);\n    if (\n      arguments.length === 1 &&\n      isPlainObject(arguments[0]) &&\n      (Array.isArray(arguments[0].datasets) || isPlainObject(arguments[0].config))\n    ) {\n      return this.load(arguments[0].datasets, arguments[0].config);\n    }\n    return {\n      ...(Array.isArray(savedDatasets) ? {datasets: this.parseSavedData(savedDatasets)} : {}),\n      ...(savedConfig ? {config: this.parseSavedConfig(savedConfig)} : {})\n    };\n  }\n\n  /**\n   * Get data to save\n   * @param state - app state\n   * @returns - dataset to save\n   */\n  getDatasetToSave(state: any): SavedDatasetV1[] {\n    const dataChangedSinceLastSave = this.hasDataChanged(state);\n    if (!dataChangedSinceLastSave) {\n      // @ts-expect-error\n      return this._savedDataset;\n    }\n\n    const {visState} = state;\n\n    const datasets = Object.values(visState.datasets as Datasets).map(ds => ({\n      version: this._version,\n      data: this._datasetSchema[this._version].save(ds)\n    }));\n\n    // keep a copy of formatted datasets to save\n    this._datasetLastSaved = visState.datasets;\n    this._savedDataset = datasets;\n\n    return datasets;\n  }\n\n  /**\n   * Get App config to save\n   * @param {Object} state - app state\n   * @returns {{version: String, config: Object}} - config to save\n   */\n  getConfigToSave(state: any): SavedConfigV1 {\n    const config = Object.keys(this._reducerSchemas).reduce(\n      (accu, key) => ({\n        ...accu,\n        ...(state[key] ? this._reducerSchemas[key][this._version].save(state[key]) : {})\n      }),\n      {}\n    );\n\n    return {\n      version: this._version,\n      // @ts-expect-error\n      config\n    };\n  }\n\n  /**\n   * Parse saved data\n   * @param datasets\n   * @returns - dataset to pass to addDataToMap\n   */\n  parseSavedData(datasets: any): ParsedDataset[] | null {\n    return datasets.reduce((accu, ds) => {\n      const validVersion = this.validateVersion(ds.version);\n      if (!validVersion) {\n        return accu;\n      }\n      accu.push(this._datasetSchema[validVersion].load(ds.data));\n      return accu;\n    }, []);\n  }\n\n  /**\n   * Parse saved App config\n   */\n  parseSavedConfig({version, config}, state = {}): ParsedConfig | null {\n    const validVersion = this.validateVersion(version);\n    if (!validVersion) {\n      return null;\n    }\n\n    return Object.keys(config).reduce(\n      (accu, key) => ({\n        ...accu,\n        ...(key in this._reducerSchemas\n          ? this._reducerSchemas[key][validVersion].load(config[key])\n          : {})\n      }),\n      {}\n    );\n  }\n\n  /**\n   * Validate version\n   * @param version\n   * @returns validVersion\n   */\n  validateVersion(version: any): string | null {\n    if (!version) {\n      Console.error('There is no version number associated with this saved map');\n      return null;\n    }\n\n    if (!this._validVersions[version]) {\n      Console.error(`${version} is not a valid version`);\n      return null;\n    }\n\n    return version;\n  }\n\n  /**\n   * Check if data has changed since last save\n   * @param state\n   * @returns - whether data has changed or not\n   */\n  hasDataChanged(state: any): boolean {\n    return true;\n    // return this._datasetLastSaved !== state.visState.datasets;\n  }\n}\n\nconst KeplerGLSchemaManager = new KeplerGLSchema();\n\nexport default KeplerGLSchemaManager;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {css} from 'styled-components';\nimport {DIMENSIONS} from '@kepler.gl/constants';\n\ntype InputProps = {\n  active: boolean;\n  disabled: boolean;\n  error: string;\n  size: string;\n  type: string;\n};\n\ntype SecondaryInputProps = {\n  error: string;\n};\n\ntype SwitchableProps = {\n  checked: boolean;\n};\n\nexport const transition = 'all .4s ease';\nexport const transitionFast = 'all .2s ease';\nexport const transitionSlow = 'all .8s ease';\n\nexport const boxShadow = '0 1px 2px 0 rgba(0,0,0,0.10)';\nexport const boxSizing = 'border-box';\nexport const borderRadius = '1px';\nexport const borderColor = '#3A414C';\nexport const borderColorLT = '#F1F1F1';\n\n// TEXT\nexport const fontFamily = `ff-clan-web-pro, 'Helvetica Neue', Helvetica, sans-serif`;\nexport const fontWeight = 400;\nexport const fontSize = '0.875em';\nexport const lineHeight = 1.71429;\nexport const labelColor = '#6A7485';\nexport const labelHoverColor = '#C6C6C6';\nexport const labelColorLT = '#6A7485';\n\nexport const textColor = '#A0A7B4';\nexport const textColorLT = '#3A414C';\nexport const dataTableTextColor = textColorLT;\nexport const titleColorLT = '#29323C';\n\nexport const subtextColor = '#6A7485';\nexport const subtextColorLT = '#A0A7B4';\nexport const subtextColorActive = '#FFFFFF';\nexport const panelToggleBorderColor = '#FFFFFF';\nexport const panelTabWidth = '30px';\n\nexport const titleTextColor = '#FFFFFF';\nexport const textColorHl = '#F0F0F0';\nexport const textColorHlLT = '#000000';\n//export const activeColor = '#1FBAD6';\n//changes made\nexport const activeColor = '#5CDBD3';\nexport const activeColorLT = '#2473BD';\nexport const activeColorHover = '#108188';\nexport const errorColor = '#F9042C';\nexport const logoColor = activeColor;\n\n// Button\nexport const btnFontFamily = fontFamily;\nexport const primaryBtnBgd = '#0F9668';\nexport const primaryBtnActBgd = '#13B17B';\nexport const primaryBtnColor = '#FFFFFF';\nexport const primaryBtnActColor = '#FFFFFF';\nexport const primaryBtnBgdHover = '#13B17B';\nexport const primaryBtnRadius = '2px';\nexport const primaryBtnFontSizeDefault = '11px';\nexport const primaryBtnFontSizeSmall = '10px';\nexport const primaryBtnFontSizeLarge = '14px';\nexport const primaryBtnBorder = '0';\n\nexport const secondaryBtnBgd = '#6A7485';\nexport const secondaryBtnActBgd = '#A0A7B4';\nexport const secondaryBtnColor = '#FFFFFF';\nexport const secondaryBtnActColor = '#FFFFFF';\nexport const secondaryBtnBgdHover = '#A0A7B4';\nexport const secondaryBtnBorder = '0';\n\nexport const ctaBtnBgd = '#0F9668';\nexport const ctaBtnBgdHover = '#13B17B';\nexport const ctaBtnActBgd = '#13B17B';\nexport const ctaBtnColor = '#FFFFFF';\nexport const ctaBtnActColor = '#FFFFFF';\n\nexport const linkBtnBgd = 'transparent';\nexport const linkBtnActBgd = linkBtnBgd;\nexport const linkBtnColor = '#A0A7B4';\nexport const linkBtnActColor = '#F1F1F1';\nexport const linkBtnActBgdHover = linkBtnBgd;\nexport const linkBtnBorder = '0';\n\nexport const negativeBtnBgd = errorColor;\nexport const negativeBtnActBgd = '#FF193E';\nexport const negativeBtnBgdHover = '#FF193E';\nexport const negativeBtnBorder = '0';\nexport const negativeBtnColor = '#FFFFFF';\nexport const negativeBtnActColor = '#FFFFFF';\n\nexport const floatingBtnBgd = '#29323C';\nexport const floatingBtnActBgd = '#3A4552';\nexport const floatingBtnBgdHover = '#3A4552';\nexport const floatingBtnBorder = '0';\nexport const floatingBtnBorderHover = '0';\nexport const floatingBtnColor = subtextColor;\nexport const floatingBtnActColor = subtextColorActive;\n\nexport const selectionBtnBgd = 'transparent';\nexport const selectionBtnActBgd = 'transparent';\nexport const selectionBtnColor = '#D3D8E0';\nexport const selectionBtnActColor = '#0F9668';\nexport const selectionBtnBgdHover = '#0F9668';\nexport const selectionBtnBorder = '1';\nexport const selectionBtnBorderColor = '#D3D8E0';\nexport const selectionBtnBorderActColor = '#0F9668';\n// Scrollbar\nexport const scrollbarThumbColorLT = labelColorLT;\nexport const scrollbarThumbColorHoverLT = textColorHlLT;\n// Input\nexport const inputBoxHeight = '34px';\nexport const inputBoxHeightSmall = '24px';\nexport const inputBoxHeightTiny = '18px';\nexport const inputPadding = '4px 10px';\nexport const inputPaddingSmall = '4px 6px';\nexport const inputPaddingTiny = '2px 4px';\nexport const inputFontSize = '11px';\nexport const inputFontSizeSmall = '10px';\nexport const inputFontWeight = 500;\nexport const inputBgd = '#29323C';\nexport const inputBgdHover = '#3A414C';\nexport const inputBgdActive = '#3A414C';\nexport const inputBgdActiveLT = '#FFFFFF';\n\nexport const inputBorderColor = '#29323C';\nexport const inputBorderHoverColor = '#3A414C';\nexport const inputBorderHoverColorLT = subtextColor;\nexport const inputBorderActiveColor = '#ffffff'; // changes done\nexport const inputBorderActiveColorLT = textColorLT;\n\nexport const inputColor = '#A0A7B4';\nexport const inputBorderRadius = '1px';\nexport const inputPlaceholderColor = '#6A7485';\nexport const inputPlaceholderColorLT = subtextColorLT;\nexport const inputPlaceholderFontWeight = 400;\nexport const inputBoxShadow = 'none';\nexport const inputBoxShadowActive = 'none';\nexport const inputBoxShadowActiveLT = 'none';\nexport const secondaryInputBgd = '#242730';\nexport const secondaryInputBgdHover = '#3A414C';\nexport const secondaryInputBgdActive = '#3A414C';\nexport const secondaryInputColor = '#A0A7B4';\nexport const secondaryInputBorderColor = '#242730';\nexport const secondaryInputBorderActiveColor = '#D3D8E0';\nexport const dropdownSelectHeight = 30;\n\n// Select\nexport const selectColor = inputColor;\nexport const selectColorLT = titleColorLT;\n\nexport const selectActiveBorderColor = '#D3D8E0';\nexport const selectFontSize = '11px';\nexport const selectFontWeight = '400';\nexport const selectFontWeightBold = '500';\n\nexport const selectColorPlaceHolder = '#6A7485';\nexport const selectColorPlaceHolderLT = selectColorLT;\nexport const selectBackground = inputBgd;\nexport const selectBackgroundHover = inputBgdHover;\nexport const selectBackgroundLT = '#FFFFFF';\nexport const selectBackgroundHoverLT = '#F8F8F9';\nexport const selectBorderColor = '#D3D8E0';\nexport const selectBorderColorLT = '#D3D8E0';\nexport const selectBorderRadius = '1px';\nexport const selectBorder = 0;\nexport const panelTabColor = subtextColor;\nexport const dropdownListHighlightBg = '#6A7485';\nexport const dropdownListHighlightBgLT = '#F8F8F9';\nexport const dropdownListShadow = '0 6px 12px 0 rgba(0,0,0,0.16)';\nexport const dropdownListBgd = '#29323C';\nexport const toolbarItemBgdHover = '#3A4552';\nexport const toolbarItemIconHover = textColorHl;\nexport const toolbarItemBorderHover = 'transparent';\nexport const toolbarItemBorderRaddius = '0px';\nexport const dropdownListBgdLT = '#FFFFFF';\nexport const dropdownListBorderTop = '#242730';\nexport const dropdownListBorderTopLT = '#D3D8E0';\nexport const dropdownListLineHeight = 20;\nexport const dropdownWrapperZ = 100;\nexport const dropdownWapperMargin = 4;\nexport const dndOverBackgroundColor = 'rgba(128, 128, 128, 0.2)';\n\n// Switch\nexport const switchWidth = 24;\nexport const switchHeight = 12;\nexport const switchLabelMargin = 12;\n\nexport const switchTrackBgd = '#29323C';\nexport const switchTrackBgdActive = activeColor;\nexport const switchTrackBorderRadius = '1px';\nexport const switchBtnBgd = '#6A7485';\nexport const switchBtnBgdActive = '#D3D8E0';\nexport const switchBtnBoxShadow = '0 2px 4px 0 rgba(0,0,0,0.40)';\nexport const switchBtnBorderRadius = '0';\nexport const switchBtnWidth = 12;\nexport const switchBtnHeight = 12;\n\nexport const secondarySwitchTrackBgd = '#242730';\nexport const secondarySwitchBtnBgd = '#3A414C';\n\n// Checkbox\nexport const checkboxWidth = 16;\nexport const checkboxHeight = 16;\nexport const checkboxMargin = 12;\nexport const checkboxBorderColor = selectBorderColor;\nexport const checkboxBorderRadius = '2px';\nexport const checkboxBorderColorLT = selectBorderColorLT;\nexport const checkboxBoxBgd = 'white';\nexport const checkboxBoxBgdChecked = primaryBtnBgd;\n\n// Radio\nexport const radioRadius = 8;\nexport const radioBorderRadius = 100;\nexport const radioBorderColor = 'transparent';\nexport const radioButtonRadius = 4;\nexport const radioButtonBgdColor = switchBtnBgdActive;\n\n// Side Panel\nexport const sidePanelHeaderBg = '#29323C';\nexport const sidePanelHeaderBorder = 'transparent';\nexport const layerConfigGroupMarginBottom = 12;\nexport const layerConfigGroupPaddingLeft = 18;\n\nexport const sidePanelInnerPadding = 16;\nexport const sidePanelBorder = 0;\nexport const sidePanelBorderColor = 'transparent';\nexport const sidePanelBg = '#242730';\nexport const sidePanelScrollBarWidth = 10;\nexport const sidePanelScrollBarHeight = 10;\nexport const sideBarCloseBtnBgd = secondaryBtnBgd;\nexport const sideBarCloseBtnColor = '#29323C';\nexport const sideBarCloseBtnBgdHover = secondaryBtnActBgd;\nexport const sidePanelTitleFontsize = '20px';\nexport const sidePanelTitleLineHeight = '1.71429';\nexport const panelBackground = '#29323C';\nexport const panelContentBackground = '#292E36';\nexport const panelBackgroundHover = '#3A4552';\nexport const panelHeaderBorderRadius = '0px';\nexport const chickletBgd = '#3A4552';\nexport const chickletBgdLT = '#D3D8E0';\nexport const panelHeaderIcon = '#6A7485';\nexport const panelHeaderIconActive = '#A0A7B4';\nexport const panelHeaderIconHover = textColorHl;\nexport const panelHeaderHeight = 48;\nexport const layerPanelHeaderHeight = 48;\nexport const panelBoxShadow = '0 6px 12px 0 rgba(0,0,0,0.16)';\nexport const panelBorderRadius = '2px';\nexport const panelBackgroundLT = '#F8F8F9';\nexport const panelToggleMarginRight = 12;\nexport const panelToggleBottomPadding = 6;\n\nexport const panelBorderColor = '#3A414C';\nexport const panelBorder = `1px solid ${borderColor}`;\nexport const panelBorderLT = `1px solid ${borderColorLT}`;\n\nexport const mapPanelBackgroundColor = '#242730';\nexport const mapPanelHeaderBackgroundColor = '#29323C';\nexport const tooltipBg = '#3A414C';\nexport const tooltipBgLT = '#1869B5';\nexport const tooltipColor = textColorHl;\nexport const tooltipColorLT = '#FFFFFF';\nexport const tooltipBoxShadow = boxShadow;\nexport const tooltipFontSize = '10px';\n\nexport const layerTypeIconSizeL = 50;\nexport const layerTypeIconPdL = 12;\nexport const layerTypeIconSizeSM = 28;\n\nexport const layerPanelToggleOptionColor = '#6A7485';\nexport const layerPanelToggleOptionColorActive = '#F0F0F0';\n\n// Sidepanel divider\nexport const sidepanelDividerBorder = '1px';\nexport const sidepanelDividerMargin = 12;\nexport const sidepanelDividerHeight = 12;\n\n// Bottom Panel\nexport const bottomInnerPdSide = 32;\nexport const bottomInnerPdVert = 6;\nexport const bottomPanelGap = 20;\nexport const bottomPanelGapPalm = 20;\nexport const bottomWidgetPaddingTop = 20;\nexport const bottomWidgetPaddingRight = 20;\nexport const bottomWidgetPaddingBottom = 30;\nexport const bottomWidgetPaddingLeft = 20;\nexport const bottomWidgetBgd = '#29323C';\n// Modal\nexport const modalTitleColor = '#3A414C';\nexport const modalTitleFontSize = '24px';\nexport const modalTitleFontSizeSmaller = '18px';\nexport const modalFooterBgd = '#F8F8F9';\nexport const modalImagePlaceHolder = '#DDDFE3';\nexport const modalPadding = '10px 0';\nexport const modalLateralPadding = '72px';\nexport const modalPortableLateralPadding = '36px';\n\nexport const modalOverLayZ = 1001;\nexport const modalOverlayBgd = 'rgba(0, 0, 0, 0.5)';\nexport const modalContentZ = 10002;\nexport const modalFooterZ = 10001;\nexport const modalTitleZ = 10003;\nexport const modalButtonZ = 10005;\nexport const modalDropdownBackground = '#FFFFFF';\n\n// Modal Dialog (Dark)\nexport const modalDialogBgd = '#3A414C';\nexport const modalDialogColor = textColorHl;\n\n// Slider\nexport const sliderBarColor = '#6A7485';\nexport const sliderBarBgd = '#3A414C';\nexport const sliderBarHoverColor = '#D3D8E0';\nexport const sliderBarRadius = '1px';\nexport const sliderBarHeight = 4;\nexport const sliderHandleHeight = 12;\nexport const sliderHandleWidth = 12;\nexport const sliderHandleColor = '#D3D8E0';\nexport const sliderHandleTextColor = sliderHandleColor;\nexport const sliderInactiveBorderColor = sliderHandleColor;\nexport const sliderBorderRadius = '0';\n\nexport const sliderHandleHoverColor = '#FFFFFF';\nexport const sliderHandleAfterContent = '';\nexport const sliderHandleShadow = '0 2px 4px 0 rgba(0,0,0,0.40)';\nexport const sliderInputHeight = 24;\nexport const sliderInputWidth = 56;\nexport const sliderInputFontSize = '10px';\nexport const sliderInputPadding = '4px 6px';\nexport const sliderMarginTopIsTime = -12;\nexport const sliderMarginTop = 12;\nexport const sliderMarginBottom = 12;\n\n// Geocoder\nexport const geocoderWidth = 360;\nexport const geocoderTop = 20;\nexport const geocoderRight = 12;\nexport const geocoderInputHeight = 36;\n\n// Map Control\nexport const mapControlTop = 52;\n\n// Plot\nexport const rangeBrushBgd = '#3A414C';\nexport const histogramFillInRange = activeColor;\nexport const histogramFillOutRange = sliderBarColor;\nexport const axisFontSize = '10px';\nexport const axisFontColor = textColor;\nexport const timeTitleFontSize = '10px';\nexport const rangePlotMargin = {top: 12, bottom: 0, left: 0, right: 0};\nexport const rangePlotMarginLarge = {top: 18, bottom: 0, left: 0, right: 0};\nexport const rangePlotH = 62;\nexport const rangePlotContainerH = 78;\nexport const rangePlotHLarge = 102;\nexport const rangePlotHLargePalm = 102;\nexport const rangePlotContainerHLarge = 120;\nexport const rangePlotContainerHLargePalm = 120;\n\n// Notification\nexport const notificationColors = {\n  info: '#276ef1',\n  error: '#f25138',\n  success: '#47b275',\n  warning: '#ffc043'\n};\n\nexport const notificationPanelWidth = 240;\nexport const notificationPanelItemWidth = notificationPanelWidth - 60;\nexport const notificationPanelItemHeight = 60;\n\n// Data Table\nconst headerRowHeight = 70;\nconst headerStatsControlHeight = 32;\nconst headerRowWStatsHeight = 364;\nconst rowHeight = 32;\nconst headerPaddingTop = 6;\nconst headerPaddingBottom = 8;\nconst cellPaddingSide = 10;\nconst edgeCellPaddingSide = 10;\nconst cellFontSize = 10;\nconst gridPaddingSide = 24;\nconst headerCellBackground = '#FFFFFF';\nconst headerCellBorderColor = '#E0E0E0';\nconst headerCellStatsBackground = '#F8FAFF';\nconst headerCellStatsControlBackground = '#EAF0FF';\nconst headerCellIconColor = '#666666';\nconst cellBorderColor = '#E0E0E0';\nconst evenRowBackground = '#FFFFFF';\nconst oddRowBackground = '#F7F7F7';\nconst optionButtonColor = '#6A7485';\nconst pinnedGridBorderColor = '#E0E0E0';\n\n// Floating Time display\nconst timeDisplayBorderRadius = 32;\nconst timeDisplayHeight = 64;\nconst timeDisplayMinWidth = 176;\nconst timeDisplayOpacity = 0.8;\nconst timeDisplayPadding = '0 24px';\n\n// Export map modal\nconst exportIntraSectionMargin = '8';\n\n// progress bar\nconst progressBarColor = primaryBtnBgd;\nconst progressBarTrackColor = '#E8E8E8';\n// Action Panel\nexport const actionPanelWidth = 110;\nexport const actionPanelHeight = 32;\n\n// Styled Token\nexport const fieldTokenRightMargin = 4;\nexport const fieldTokenHeight = 20;\nexport const fieldTokenWidth = 40;\n\nexport const textTruncate = {\n  maxWidth: '100%',\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap',\n  wordWrap: 'normal'\n};\n\n// layerConfigGroupLabel\nexport const layerConfigGroupLabelBorderLeft = '2px';\nexport const layerConfigGroupLabelMargin = '-12px';\nexport const layerConfigGroupLabelPadding = '10px';\nexport const layerConfigGroupColor = 'transparent';\n\n// layerConfigGroupLabel label\nexport const layerConfigGroupLabelLabelMargin = '0';\nexport const layerConfigGroupLabelLabelFontSize = '12px';\n\n// styledConfigGroupHeader\nexport const styledConfigGroupHeaderBorder = '2px';\n\n// layerConfigurator\n\nexport const layerConfiguratorBorder = '0';\nexport const layerConfiguratorBorderColor = '';\nexport const layerConfiguratorMargin = '12px';\nexport const layerConfiguratorPadding = '12px 0 8px 0';\n// This breakpoints are used for responsive design\nexport const breakPoints = {\n  palm: 588,\n  desk: 768\n};\n\n// effect manager\nexport const effectConfiguratorMargin = '18px 0 18px 0';\nexport const effectConfiguratorPadding = '0 0 0 18px';\nexport const effectPanelWidth = 345;\nexport const effectPanelHeight = 180;\nexport const effectPanelPaddingSide = 16;\nexport const effectPanelPaddingTop = 16;\nexport const effectPanelAddEffectFontFamily = btnFontFamily;\n\nexport const effectTypeIconMarginSide = 6;\nexport const effectTypeIconSizeL = 56;\n\nexport const effectTypeIconBgHoverColor = '#262D40';\nexport const effectPanelTextMain = '#F7F7F7';\nexport const effectPanelTextSecondary1 = '#A0A7B4';\nexport const effectPanelTextSecondary2 = '#6A7485';\nexport const effectPanelTextSecondary3 = '#5A6475';\n\nexport const effectPanelElementColor = inputBgd;\nexport const effectPanelElementColorActive = '#323843';\nexport const effectPanelElementColorHovered = inputBgdHover;\nexport const effectPanelElementColorSelected = '#454e5d';\nexport const effectPanelElementColorSun = '#F7B26B';\n\n// right panel\nexport const rightPanelMarginTop = 12;\nexport const rightPanelMarginRight = 12;\n\n// theme is passed to kepler.gl when it's mounted,\n// it is used by styled-components to pass along to\n// all child components\n\nconst input = css<InputProps>`\n  ::placeholder {\n    color: ${props => props.theme.inputPlaceholderColor};\n    font-weight: ${props => props.theme.inputPlaceholderFontWeight};\n  }\n\n  /* Disable Arrows on Number Inputs */\n  ::-webkit-inner-spin-button,\n  ::-webkit-outer-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n\n  align-items: center;\n  background-color: ${props => props.theme.inputBgd};\n  border: 1px solid\n    ${props =>\n      props.active\n        ? props.theme.inputBorderActiveColor\n        : props.error\n        ? props.theme.errorColor\n        : props.theme.inputBgd};\n  border-radius: 2px;\n  caret-color: ${props => props.theme.inputBorderActiveColor};\n  color: ${props => props.theme.inputColor};\n  display: flex;\n  font-size: ${props =>\n    ['small', 'tiny'].includes(props.size)\n      ? props.theme.inputFontSizeSmall\n      : props.theme.inputFontSize};\n  font-weight: ${props => props.theme.inputFontWeight};\n  font-family: ${props => props.theme.fontFamily};\n  height: ${props =>\n    props.size === 'small'\n      ? props.theme.inputBoxHeightSmall\n      : props.size === 'tiny'\n      ? props.theme.inputBoxHeightTiny\n      : props.theme.inputBoxHeight};\n  justify-content: space-between;\n  outline: none;\n  overflow: hidden;\n  padding: ${props =>\n    props.size === 'small'\n      ? props.theme.inputPaddingSmall\n      : props.size === 'tiny'\n      ? props.theme.inputPaddingTiny\n      : props.theme.inputPadding};\n  text-overflow: ellipsis;\n  transition: ${props => props.theme.transition};\n  white-space: nowrap;\n  width: 100%;\n  word-wrap: normal;\n  pointer-events: ${props => (props.disabled ? 'none' : 'all')};\n  opacity: ${props => (props.disabled ? 0.5 : 1)};\n  box-shadow: ${props => props.theme.inputBoxShadow};\n\n  :hover {\n    cursor: ${props => (props.type === 'number' || props.type === 'text' ? 'text' : 'pointer')};\n    background-color: ${props =>\n      props.active ? props.theme.inputBgdActive : props.theme.inputBgdHover};\n    border-color: ${props =>\n      props.active ? props.theme.inputBorderActiveColor : props.theme.inputBorderHoverColor};\n  }\n\n  :active,\n  :focus,\n  &.focus,\n  &.active {\n    background-color: ${props => props.theme.inputBgdActive};\n    border-color: ${props => props.theme.inputBorderActiveColor};\n    box-shadow: ${props => props.theme.inputBoxShadowActive};\n  }\n`;\n\nconst inputLT = css`\n  ::placeholder {\n    color: ${props => props.theme.inputPlaceholderColorLT};\n    font-weight: 400;\n  }\n  ${input}\n\n  background-color: ${props => props.theme.selectBackgroundLT};\n  border: 1px solid\n    ${props =>\n      props.active\n        ? props.theme.selectActiveBorderColor\n        : props.error\n        ? props.theme.errorColor\n        : props.theme.selectBorderColorLT};\n  color: ${props => props.theme.selectColorLT};\n  caret-color: ${props => props.theme.inputBorderActiveColorLT};\n\n  :hover {\n    background-color: ${props => props.theme.inputBgdActiveLT};\n    cursor: ${props => (['number', 'text'].includes(props.type) ? 'text' : 'pointer')};\n    border-color: ${props =>\n      props.active ? props.theme.inputBorderActiveColorLT : props.theme.inputBorderHoverColorLT};\n  }\n\n  :active,\n  :focus,\n  &.focus,\n  &.active {\n    background-color: ${props => props.theme.inputBgdActiveLT};\n    border-color: ${props => props.theme.inputBorderActiveColorLT};\n    box-shadow: ${props => props.theme.inputBoxShadowActiveLT};\n  }\n`;\n\nconst secondaryInput = css<SecondaryInputProps>`\n  ${props => props.theme.input}\n  color: ${props => props.theme.secondaryInputColor};\n  background-color: ${props => props.theme.secondaryInputBgd};\n  border: 1px solid\n    ${props => (props.error ? props.theme.errorColor : props.theme.secondaryInputBorderColor)};\n\n  :hover {\n    cursor: pointer;\n    background-color: ${props => props.theme.secondaryInputBgdHover};\n    border-color: ${props => props.theme.secondaryInputBgdHover};\n  }\n\n  :active,\n  &.active {\n    background-color: ${props => props.theme.secondaryInputBgdActive};\n    border-color: ${props => props.theme.secondaryInputBorderActiveColor};\n  }\n`;\n\nconst chickletedInputContainer = css`\n  cursor: pointer;\n  flex-wrap: wrap;\n  height: auto;\n  justify-content: start;\n  margin-bottom: 2px;\n  padding: 0px 7px 0px 4px;\n  white-space: normal;\n\n  .chickleted-input__placeholder {\n    line-height: 24px;\n    margin: 4px;\n  }\n`;\n\nconst chickletedInput = css`\n  ${props => props.theme.input} ${props => props.theme.chickletedInputContainer};\n`;\n\nconst chickletedInputLT = css`\n  ${props => props.theme.inputLT} ${props => props.theme.chickletedInputContainer};\n`;\n\nconst secondaryChickletedInput = css`\n  ${props => props.theme.secondaryInput} ${props => props.theme.chickletedInputContainer};\n`;\n\nconst inlineInput = css`\n  ${props => props.theme.input} color: ${props => props.theme.textColor};\n  font-size: 13px;\n  letter-spacing: 0.43px;\n  line-height: 18px;\n  height: 24px;\n  font-weight: 400;\n  padding-left: 4px;\n  margin-left: -4px;\n  background-color: transparent;\n  border: 1px solid transparent;\n\n  :hover {\n    height: 24px;\n    cursor: text;\n    background-color: transparent;\n    border: 1px solid ${props => props.theme.labelColor};\n  }\n\n  :active,\n  .active,\n  :focus {\n    background-color: transparent;\n    border: 1px solid ${props => props.theme.inputBorderActiveColor};\n  }\n`;\n\nconst switchTrack = css<SwitchableProps>`\n  background: ${props =>\n    props.checked ? props.theme.switchTrackBgdActive : props.theme.switchTrackBgd};\n  position: absolute;\n  top: 0;\n  left: ${props => -props.theme.switchLabelMargin}px;\n  content: '';\n  display: block;\n  width: ${props => props.theme.switchWidth}px;\n  height: ${props => props.theme.switchHeight}px;\n  border-radius: ${props => props.theme.switchTrackBorderRadius};\n`;\n\nconst switchButton = css<SwitchableProps>`\n  transition: ${props => props.theme.transition};\n  position: absolute;\n  top: ${props => (props.theme.switchHeight - props.theme.switchBtnHeight) / 2}px;\n  left: ${props =>\n    (props.checked\n      ? props.theme.switchWidth / 2\n      : (props.theme.switchHeight - props.theme.switchBtnHeight) / 2) -\n    props.theme.switchLabelMargin}px;\n  content: '';\n  display: block;\n  height: ${props => props.theme.switchBtnHeight}px;\n  width: ${props => props.theme.switchBtnWidth}px;\n  background: ${props =>\n    props.checked ? props.theme.switchBtnBgdActive : props.theme.switchBtnBgd};\n  box-shadow: ${props => props.theme.switchBtnBoxShadow};\n  border-radius: ${props => props.theme.switchBtnBorderRadius};\n`;\n\nconst inputSwitch = css`\n  user-select: none;\n  cursor: pointer;\n  line-height: ${props => props.theme.switchHeight}px;\n  font-weight: 500;\n  font-size: 12px;\n  color: ${props => props.theme.labelColor};\n  position: relative;\n  display: inline-block;\n  padding-top: 0;\n  padding-right: 0;\n  padding-bottom: 0;\n  padding-left: ${props => props.theme.switchWidth}px;\n\n  :before {\n    ${props => props.theme.switchTrack};\n  }\n\n  :after {\n    ${props => props.theme.switchButton};\n  }\n`;\n\n// This is a light version checkbox\nconst checkboxBox = css<SwitchableProps>`\n  display: block;\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: ${props => props.theme.checkboxWidth}px;\n  height: ${props => props.theme.checkboxHeight}px;\n  background: ${props =>\n    props.checked ? props.theme.checkboxBoxBgdChecked : props.theme.checkboxBoxBgd};\n  border: 1px solid\n    ${props =>\n      props.checked ? props.theme.checkboxBoxBgdChecked : props.theme.checkboxBorderColor};\n  border-radius: 2px;\n  content: '';\n`;\n\nconst checkboxCheck = css<SwitchableProps>`\n  width: 10px;\n  height: 5px;\n  border-bottom: 2px solid white;\n  border-left: 2px solid white;\n  top: 4px;\n  left: 3px;\n  transform: rotate(-45deg);\n  display: block;\n  position: absolute;\n  opacity: ${props => (props.checked ? 1 : 0)};\n  content: '';\n`;\n\nconst inputCheckbox = css`\n  display: inline-block;\n  position: relative;\n  padding-left: 32px;\n  margin-bottom: 24px;\n  line-height: 20px;\n  vertical-align: middle;\n  cursor: pointer;\n  font-size: 12px;\n  color: ${props => props.theme.labelColor};\n  margin-left: -${props => props.theme.switchLabelMargin}px;\n\n  :before {\n    ${props => props.theme.checkboxBox};\n  }\n\n  :after {\n    ${props => props.theme.checkboxCheck};\n  }\n`;\n\nconst radioTrack = css`\n  ${props => props.theme.checkboxBox}\n  width: ${props => props.theme.radioRadius * 2}px;\n  height: ${props => props.theme.radioRadius * 2}px;\n  border-radius: ${props => props.theme.radioBorderRadius}px;\n  background-color: ${props => props.theme.switchTrackBgd};\n  border-color: ${props => props.theme.radioBorderColor};\n`;\n\nconst radioButton = css`\n  border: 0;\n  display: table;\n  top: ${props => props.theme.radioRadius - props.theme.radioButtonRadius}px;\n  left: ${props => props.theme.radioRadius - props.theme.radioButtonRadius}px;\n  width: ${props => props.theme.radioButtonRadius * 2}px;\n  height: ${props => props.theme.radioButtonRadius * 2}px;\n  border-radius: ${props => props.theme.radioButtonRadius * 2}px;\n  background-color: ${props => props.theme.radioButtonBgdColor};\n`;\n\nconst inputRadio = css`\n  ${props => props.theme.inputCheckbox}\n  padding-left: ${props => props.theme.radioRadius * 2 + 8}px;\n  margin-bottom: 0;\n  margin-left: 0;\n  line-height: ${props => props.theme.radioRadius * 2}px;\n  color: ${props => props.theme.textColorHl};\n  cursor: pointer;\n\n  :before {\n    ${props => props.theme.radioTrack}\n  }\n\n  :after {\n    ${props => props.theme.radioButton}\n  }\n`;\n\nconst secondaryRadio = css<SwitchableProps>`\n  ${props => props.theme.inputRadio}\n\n  :before {\n    ${props => props.theme.radioTrack} background: ${props => props.theme.secondarySwitchTrackBgd};\n  }\n\n  :after {\n    ${props => props.theme.radioButton}\n    background: ${props =>\n      props.checked ? props.theme.switchBtnBgdActive : props.theme.secondarySwitchBtnBgd};\n  }\n`;\n\nconst secondarySwitch = css<SwitchableProps>`\n  ${props => props.theme.inputSwitch}\n\n  :before {\n    ${props => props.theme.switchTrack} background: ${props =>\n  props.checked ? props.theme.switchTrackBgdActive : props.theme.secondarySwitchTrackBgd};\n  }\n\n  :after {\n    ${props => props.theme.switchButton}\n    background: ${props =>\n      props.checked ? props.theme.switchBtnBgdActive : props.theme.secondarySwitchBtnBgd};\n  }\n`;\n\nconst dropdownScrollBar = css`\n  ::-webkit-scrollbar {\n    height: 10px;\n    width: 10px;\n  }\n\n  ::-webkit-scrollbar-corner {\n    background: ${props => props.theme.dropdownListBgd};\n  }\n\n  ::-webkit-scrollbar-track {\n    background: ${props => props.theme.dropdownListBgd};\n  }\n\n  ::-webkit-scrollbar-thumb {\n    border-radius: 10px;\n    background: ${props => props.theme.labelColor};\n    border: 3px solid ${props => props.theme.dropdownListBgd};\n  }\n\n  :vertical:hover {\n    background: ${props => props.theme.textColorHl};\n    cursor: pointer;\n  }\n`;\n\nconst dropdownScrollBarLT = css`\n  ${dropdownScrollBar} ::-webkit-scrollbar-corner {\n    background: ${props => props.theme.dropdownListBgdLT};\n  }\n\n  ::-webkit-scrollbar-track {\n    background: ${props => props.theme.dropdownListBgdLT};\n  }\n\n  ::-webkit-scrollbar-thumb {\n    border-radius: 10px;\n    background: ${props => props.theme.scrollbarThumbColorLT};\n    border: 3px solid ${props => props.theme.dropdownListBgdLT};\n  }\n\n  :vertical:hover {\n    background: ${props => props.theme.scrollbarThumbColorHoverLT};\n    cursor: pointer;\n  }\n`;\n\nconst dropdownListAnchor = css`\n  color: ${props => props.theme.selectColor};\n  padding-left: 3px;\n  font-size: ${props => props.theme.selectFontSize};\n  line-height: ${props => props.theme.dropdownListLineHeight}px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  &.disabled {\n    color: ${props => props.theme.subtextColor};\n  }\n`;\n\nconst dropdownListAnchorLT = css`\n  ${dropdownListAnchor}\n  color: ${props => props.theme.selectColorLT};\n`;\n\nconst dropdownListSize = css`\n  font-size: 11px;\n  padding: 3px 9px;\n  font-weight: 500;\n  white-space: nowrap;\n`;\n\nconst dropdownListItem = css`\n  ${dropdownListSize} &.hover,\n  &:hover {\n    cursor: pointer;\n    background-color: ${props => props.theme.dropdownListHighlightBg};\n\n    .list__item__anchor {\n      color: ${props => props.theme.textColorHl};\n    }\n  }\n`;\n\nconst dropdownListItemLT = css`\n  ${dropdownListSize}\n  color: ${props => props.theme.textColorLT};\n\n  &.hover,\n  &:hover {\n    cursor: pointer;\n    color: ${props => props.theme.textColorHlLT};\n    background-color: ${props => props.theme.dropdownListHighlightBgLT};\n\n    .list__item__anchor {\n      color: ${props => props.theme.selectColorLT};\n    }\n  }\n  &.selected {\n    background-color: ${props => props.theme.dropdownListHighlightBgLT};\n  }\n`;\n\nconst dropdownListHeader = css`\n  font-size: 11px;\n  padding: 5px 9px;\n  color: ${props => props.theme.labelColor};\n`;\n\nconst dropdownListSection = css`\n  padding: 0 0 4px 0;\n  margin-bottom: 4px;\n  border-bottom: 1px solid ${props => props.theme.labelColor};\n`;\n\nconst dropdownList = css`\n  overflow-y: auto;\n  max-height: 280px;\n  box-shadow: ${props => props.theme.dropdownListShadow};\n  border-radius: 2px;\n\n  .list__section {\n    ${props => props.theme.dropdownListSection};\n  }\n  .list__header {\n    ${props => props.theme.dropdownListHeader};\n  }\n\n  .list__item {\n    ${props => props.theme.dropdownListItem};\n  }\n\n  .list__item__anchor {\n    ${props => props.theme.dropdownListAnchor};\n  }\n\n  ${props => props.theme.dropdownScrollBar};\n`;\n\nconst dropdownListLT = css`\n  ${dropdownList} .list__item {\n    ${props => props.theme.dropdownListItemLT};\n  }\n\n  .list__item__anchor {\n    ${props => props.theme.dropdownListAnchorLT};\n  }\n\n  ${props => props.theme.dropdownScrollBarLT};\n`;\nconst sidePanelScrollBar = css`\n  ::-webkit-scrollbar {\n    height: ${props => props.theme.sidePanelScrollBarHeight}px;\n    width: ${props => props.theme.sidePanelScrollBarWidth}px;\n  }\n\n  ::-webkit-scrollbar-corner {\n    background: ${props => props.theme.sidePanelBg};\n  }\n\n  ::-webkit-scrollbar-track {\n    background: ${props => props.theme.sidePanelBg};\n  }\n\n  ::-webkit-scrollbar-thumb {\n    border-radius: 10px;\n    background: ${props => props.theme.panelBackgroundHover};\n    border: 3px solid ${props => props.theme.sidePanelBg};\n\n    :hover {\n      background: ${props => props.theme.labelColor};\n      cursor: pointer;\n    }\n  }\n`;\n\nconst panelDropdownScrollBar = css`\n  ::-webkit-scrollbar {\n    height: 10px;\n    width: 10px;\n  }\n\n  ::-webkit-scrollbar-corner {\n    background: ${props => props.theme.panelBackground};\n  }\n\n  ::-webkit-scrollbar-track {\n    background: ${props => props.theme.panelBackground};\n  }\n\n  ::-webkit-scrollbar-thumb {\n    border-radius: 10px;\n    background: ${props => props.theme.panelBackgroundHover};\n    border: 3px solid ${props => props.theme.panelBackground};\n    :hover {\n      background: ${props => props.theme.labelColor};\n      cursor: pointer;\n    }\n  }\n`;\n\nconst scrollBar = css`\n  ::-webkit-scrollbar {\n    height: 10px;\n    width: 10px;\n  }\n\n  ::-webkit-scrollbar-corner {\n    background: ${props => props.theme.panelBackground};\n  }\n\n  ::-webkit-scrollbar-track {\n    background: ${props => props.theme.panelBackground};\n  }\n\n  ::-webkit-scrollbar-thumb {\n    border-radius: 10px;\n    background: ${props => props.theme.labelColor};\n    border: 3px solid ${props => props.theme.panelBackground};\n\n    :vertical:hover {\n      background: ${props => props.theme.textColorHl};\n      cursor: pointer;\n    }\n\n    :horizontal:hover {\n      background: ${props => props.theme.textColorHl};\n      cursor: pointer;\n    }\n  }\n`;\n\nexport const modalScrollBar = css`\n  ::-webkit-scrollbar {\n    width: 14px;\n    height: 16px;\n  }\n\n  ::-webkit-scrollbar-track {\n    background: white;\n  }\n  ::-webkit-scrollbar-track:horizontal {\n    background: ${props => props.theme.textColorHl};\n  }\n  ::-webkit-scrollbar-thumb {\n    background: ${props => props.theme.scrollbarThumbColorLT};\n    border: 4px solid white;\n  }\n\n  ::-webkit-scrollbar-corner {\n    background: ${props => props.theme.textColorHl};\n  }\n\n  ::-webkit-scrollbar-thumb:hover {\n    background: ${props => props.theme.scrollbarThumbColorHoverLT};\n  }\n\n  ::-webkit-scrollbar-thumb:vertical {\n    border-radius: 7px;\n  }\n\n  ::-webkit-scrollbar-thumb:horizontal {\n    border-radius: 9px;\n    border: 4px solid ${props => props.theme.textColorHl};\n  }\n`;\n\nexport const theme = {\n  ...DIMENSIONS,\n  // templates\n  input,\n  inputLT,\n  inlineInput,\n  chickletedInput,\n  chickletedInputLT,\n  chickletedInputContainer,\n  secondaryChickletedInput,\n\n  borderColor,\n  borderColorLT,\n\n  secondaryInput,\n  dropdownScrollBar,\n  dropdownScrollBarLT,\n  dropdownList,\n  dropdownListLT,\n  dropdownListItem,\n  dropdownListItemLT,\n  dropdownListAnchor,\n  dropdownListAnchorLT,\n  dropdownListHeader,\n  dropdownListSection,\n  dropdownListShadow,\n  dropdownWrapperZ,\n  dropdownWapperMargin,\n  dndOverBackgroundColor,\n  modalScrollBar,\n  scrollBar,\n  sidePanelScrollBar,\n  inputSwitch,\n  secondarySwitch,\n  switchTrack,\n  switchButton,\n  inputCheckbox,\n  inputRadio,\n  checkboxBox,\n  checkboxCheck,\n\n  // Transitions\n  transition,\n  transitionFast,\n  transitionSlow,\n\n  // styles\n  activeColor,\n  activeColorHover,\n  borderRadius,\n  boxShadow,\n  errorColor,\n  dropdownListHighlightBg,\n  dropdownListHighlightBgLT,\n  dropdownListBgd,\n  toolbarItemBgdHover,\n  toolbarItemBorderHover,\n  toolbarItemIconHover,\n  toolbarItemBorderRaddius,\n  dropdownListBgdLT,\n  dropdownListBorderTop,\n  dropdownListBorderTopLT,\n  dropdownListLineHeight,\n\n  labelColor,\n  labelColorLT,\n  labelHoverColor,\n  mapPanelBackgroundColor,\n  mapPanelHeaderBackgroundColor,\n\n  // Select\n  selectActiveBorderColor,\n  selectBackground,\n  selectBackgroundLT,\n  selectBackgroundHover,\n  selectBackgroundHoverLT,\n  selectBorder,\n  selectBorderColor,\n  selectBorderRadius,\n  selectBorderColorLT,\n  selectColor,\n  selectColorPlaceHolder,\n  selectColorPlaceHolderLT,\n  selectFontSize,\n  selectFontWeight,\n  selectColorLT,\n  selectFontWeightBold,\n  panelTabColor,\n\n  // Input\n  inputBgd,\n  inputBgdHover,\n  inputBgdActive,\n  inputBgdActiveLT,\n  inputBoxHeight,\n  inputBoxHeightSmall,\n  inputBoxHeightTiny,\n  inputBorderColor,\n  inputBorderActiveColor,\n  inputBorderHoverColor,\n  inputBorderRadius,\n  inputColor,\n  inputPadding,\n  inputPaddingSmall,\n  inputPaddingTiny,\n  inputFontSize,\n  inputFontSizeSmall,\n  inputFontWeight,\n  inputPlaceholderColor,\n  inputPlaceholderColorLT,\n  inputPlaceholderFontWeight,\n  inputBoxShadow,\n  inputBoxShadowActive,\n  inputBoxShadowActiveLT,\n  secondaryInputBgd,\n  secondaryInputBgdHover,\n  secondaryInputBgdActive,\n  secondaryInputColor,\n  secondaryInputBorderColor,\n  secondaryInputBorderActiveColor,\n  dropdownSelectHeight,\n\n  // Switch\n  switchWidth,\n  switchHeight,\n  switchTrackBgd,\n  switchTrackBgdActive,\n  switchTrackBorderRadius,\n  switchBtnBgd,\n  switchBtnBgdActive,\n  switchBtnBoxShadow,\n  switchBtnBorderRadius,\n  switchBtnWidth,\n  switchBtnHeight,\n  switchLabelMargin,\n\n  secondarySwitchTrackBgd,\n  secondarySwitchBtnBgd,\n\n  // Checkbox\n  checkboxWidth,\n  checkboxHeight,\n  checkboxMargin,\n  checkboxBorderColor,\n  checkboxBorderRadius,\n  checkboxBorderColorLT,\n  checkboxBoxBgd,\n  checkboxBoxBgdChecked,\n\n  // Radio\n  radioRadius,\n  radioBorderRadius,\n  radioBorderColor,\n  radioButtonRadius,\n  radioButtonBgdColor,\n  radioTrack,\n  radioButton,\n  secondaryRadio,\n\n  // Button\n  btnFontFamily,\n  primaryBtnBgd,\n  primaryBtnActBgd,\n  primaryBtnColor,\n  primaryBtnActColor,\n  primaryBtnBgdHover,\n  primaryBtnRadius,\n  primaryBtnFontSizeDefault,\n  primaryBtnFontSizeSmall,\n  primaryBtnFontSizeLarge,\n  primaryBtnBorder,\n\n  secondaryBtnBgd,\n  secondaryBtnActBgd,\n  secondaryBtnBgdHover,\n  secondaryBtnColor,\n  secondaryBtnActColor,\n  secondaryBtnBorder,\n\n  negativeBtnBgd,\n  negativeBtnActBgd,\n  negativeBtnBgdHover,\n  negativeBtnBorder,\n  negativeBtnColor,\n  negativeBtnActColor,\n\n  linkBtnBgd,\n  linkBtnActBgd,\n  linkBtnColor,\n  linkBtnActColor,\n  linkBtnActBgdHover,\n  linkBtnBorder,\n\n  floatingBtnBgd,\n  floatingBtnActBgd,\n  floatingBtnBgdHover,\n  floatingBtnBorder,\n  floatingBtnBorderHover,\n  floatingBtnColor,\n  floatingBtnActColor,\n\n  ctaBtnBgd,\n  ctaBtnBgdHover,\n  ctaBtnActBgd,\n  ctaBtnColor,\n  ctaBtnActColor,\n\n  selectionBtnBgd,\n  selectionBtnActBgd,\n  selectionBtnColor,\n  selectionBtnActColor,\n  selectionBtnBgdHover,\n  selectionBtnBorder,\n  selectionBtnBorderColor,\n  selectionBtnBorderActColor,\n\n  scrollbarThumbColorLT,\n  scrollbarThumbColorHoverLT,\n\n  // Modal\n  modalTitleColor,\n  modalTitleFontSize,\n  modalTitleFontSizeSmaller,\n  modalFooterBgd,\n  modalImagePlaceHolder,\n  modalPadding,\n\n  modalDialogBgd,\n  modalDialogColor,\n\n  modalLateralPadding,\n  modalPortableLateralPadding,\n  modalOverLayZ,\n  modalOverlayBgd,\n  modalContentZ,\n  modalFooterZ,\n  modalTitleZ,\n  modalButtonZ,\n  modalDropdownBackground,\n\n  // Side Panel\n  sidePanelBg,\n  sidePanelInnerPadding,\n  sideBarCloseBtnBgd,\n  sideBarCloseBtnColor,\n  sideBarCloseBtnBgdHover,\n  sidePanelHeaderBg,\n  sidePanelHeaderBorder,\n  sidePanelScrollBarWidth,\n  sidePanelScrollBarHeight,\n  sidePanelTitleFontsize,\n  sidePanelTitleLineHeight,\n  panelHeaderBorderRadius,\n  sidePanelBorder,\n  sidePanelBorderColor,\n\n  layerConfigGroupLabelLabelFontSize,\n  layerConfigGroupMarginBottom,\n  layerConfigGroupPaddingLeft,\n\n  // Side Panel Panel\n  chickletBgd,\n  chickletBgdLT,\n  panelBackground,\n  panelContentBackground,\n  panelBackgroundHover,\n  panelBackgroundLT,\n  panelToggleMarginRight,\n  panelToggleBottomPadding,\n  panelBoxShadow,\n  panelBorderRadius,\n  panelBorder,\n  panelBorderColor,\n  panelBorderLT,\n  panelHeaderIcon,\n  panelHeaderIconActive,\n  panelHeaderIconHover,\n  panelHeaderHeight,\n  layerPanelHeaderHeight,\n  panelDropdownScrollBar,\n\n  layerTypeIconSizeL,\n  layerTypeIconPdL,\n  layerTypeIconSizeSM,\n\n  layerPanelToggleOptionColor,\n  layerPanelToggleOptionColorActive,\n\n  // Text\n  fontFamily,\n  fontWeight,\n  fontSize,\n  lineHeight,\n  textColor,\n  textColorLT,\n  dataTableTextColor,\n  textColorHl,\n  titleTextColor,\n  subtextColor,\n  subtextColorLT,\n  subtextColorActive,\n  panelToggleBorderColor,\n  panelTabWidth,\n  textTruncate,\n  titleColorLT,\n  tooltipBg,\n  tooltipBgLT,\n  tooltipColor,\n  tooltipColorLT,\n  tooltipBoxShadow,\n  tooltipFontSize,\n  logoColor,\n\n  // Sidepanel divider\n  sidepanelDividerBorder,\n  sidepanelDividerMargin,\n  sidepanelDividerHeight,\n\n  // Bottom Panel\n  bottomInnerPdSide,\n  bottomInnerPdVert,\n  bottomPanelGap,\n  bottomPanelGapPalm,\n  bottomWidgetPaddingTop,\n  bottomWidgetPaddingRight,\n  bottomWidgetPaddingBottom,\n  bottomWidgetPaddingLeft,\n  bottomWidgetBgd,\n\n  // Slider\n  sliderBarColor,\n  sliderBarBgd,\n  sliderBarHoverColor,\n  sliderBarRadius,\n  sliderBarHeight,\n  sliderHandleHeight,\n  sliderHandleWidth,\n  sliderHandleColor,\n  sliderHandleTextColor,\n  sliderInactiveBorderColor,\n  sliderBorderRadius,\n  sliderHandleHoverColor,\n  sliderHandleAfterContent,\n  sliderHandleShadow,\n  sliderInputHeight,\n  sliderInputWidth,\n  sliderMarginTopIsTime,\n  sliderMarginTop,\n  sliderMarginBottom,\n\n  // Geocoder\n  geocoderWidth,\n  geocoderTop,\n  geocoderRight,\n  geocoderInputHeight,\n\n  // Map Control\n  mapControlTop,\n\n  // Plot\n  rangeBrushBgd,\n  histogramFillInRange,\n  histogramFillOutRange,\n  axisFontSize,\n  axisFontColor,\n  timeTitleFontSize,\n  rangePlotMargin,\n  rangePlotMarginLarge,\n  rangePlotH,\n  rangePlotHLarge,\n  rangePlotHLargePalm,\n  rangePlotContainerH,\n  rangePlotContainerHLarge,\n  rangePlotContainerHLargePalm,\n\n  // Notifications\n  notificationColors,\n  notificationPanelWidth,\n  notificationPanelItemWidth,\n  notificationPanelItemHeight,\n\n  // Data Table\n  headerRowHeight,\n  headerRowWStatsHeight,\n  headerStatsControlHeight,\n  rowHeight,\n  headerPaddingTop,\n  headerPaddingBottom,\n  cellPaddingSide,\n  edgeCellPaddingSide,\n  cellFontSize,\n  gridPaddingSide,\n  optionButtonColor,\n  headerCellBackground,\n  headerCellBorderColor,\n  headerCellStatsBackground,\n  headerCellStatsControlBackground,\n  headerCellIconColor,\n  cellBorderColor,\n  evenRowBackground,\n  oddRowBackground,\n  pinnedGridBorderColor,\n  // time display\n  timeDisplayBorderRadius,\n  timeDisplayHeight,\n  timeDisplayMinWidth,\n  timeDisplayOpacity,\n  timeDisplayPadding,\n\n  // export map\n  exportIntraSectionMargin,\n\n  // Action Panel\n  actionPanelWidth,\n  actionPanelHeight,\n\n  // Breakpoints\n  breakPoints,\n\n  // progressbar\n  progressBarColor,\n  progressBarTrackColor,\n\n  // layerConfigGroupLabel\n  layerConfigGroupLabelBorderLeft,\n  layerConfigGroupLabelMargin,\n  layerConfigGroupLabelPadding,\n  layerConfigGroupColor,\n\n  // layerConfigGroupLabel label\n  layerConfigGroupLabelLabelMargin,\n\n  // StyledConfigGroupHeader\n  styledConfigGroupHeaderBorder,\n\n  // layerConfigurator\n  layerConfiguratorBorder,\n  layerConfiguratorBorderColor,\n  layerConfiguratorMargin,\n  layerConfiguratorPadding,\n\n  // Styled token\n  fieldTokenRightMargin,\n  fieldTokenHeight,\n  fieldTokenWidth,\n\n  // Effect panel\n  effectPanelWidth,\n  effectPanelHeight,\n  effectPanelPaddingSide,\n  effectPanelPaddingTop,\n  rightPanelMarginTop,\n  rightPanelMarginRight,\n  effectPanelAddEffectFontFamily,\n\n  // effect type selector\n  effectTypeIconMarginSide,\n  effectTypeIconSizeL,\n  effectTypeIconBgHoverColor,\n\n  // effectConfigurator\n  effectConfiguratorMargin,\n  effectConfiguratorPadding,\n  effectPanelTextMain,\n  effectPanelTextSecondary1,\n  effectPanelTextSecondary2,\n  effectPanelTextSecondary3,\n\n  effectPanelElementColor,\n  effectPanelElementColorActive,\n  effectPanelElementColorHovered,\n  effectPanelElementColorSun,\n  effectPanelElementColorSelected\n};\n\nexport const themeLT = {\n  ...theme,\n  // template\n  activeColor: activeColorLT,\n  input: inputLT,\n  textColor: textColorLT,\n  sidePanelBg: '#FFFFFF',\n  selectColor: selectColorLT,\n  titleTextColor: '#000000',\n  sidePanelHeaderBg: '#F7F7F7',\n  subtextColorActive: activeColorLT,\n  tooltipBg: tooltipBgLT,\n  tooltipColor: tooltipColorLT,\n  dropdownListBgd: '#FFFFFF',\n  toolbarItemBgdHover: '#F7F7F7',\n  textColorHl: activeColorLT,\n\n  inputBgd: '#F7F7F7',\n  inputBgdHover: '#FFFFFF',\n  inputBgdActive: '#FFFFFF',\n  inputBgdActiveLT: '#FFFFFF',\n  dropdownListHighlightBg: '#F0F0F0',\n  toolbarItemIconHover: activeColorLT,\n  panelBackground: '#F7F7F7',\n  panelContentBackground: '#F7F7F7',\n  bottomWidgetBgd: '#F7F7F7',\n  panelBackgroundHover: '#F7F7F7',\n  panelBorderColor: '#D3D8E0',\n  panelHeaderIconActive: '#000000',\n  panelHeaderIconHover: '#000000',\n  sideBarCloseBtnBgd: '#F7F7F7',\n  sideBarCloseBtnColor: textColorLT,\n  sideBarCloseBtnBgdHover: '#F7F7F7',\n\n  secondaryInputBgd: '#F7F7F7',\n  secondaryInputBgdActive: '#F7F7F7',\n  secondaryInputBgdHover: '#FFFFFF',\n  secondaryInputBorderActiveColor: '#000000',\n  secondaryInputBorderColor: 'none',\n  secondaryInputColor: '#545454',\n\n  chickletBgd: '#F7F7F7',\n  mapPanelBackgroundColor: '#FFFFFF',\n  mapPanelHeaderBackgroundColor: '#F7F7F7',\n\n  sliderBarColor: '#A0A7B4',\n  sliderBarBgd: '#D3D8E0',\n  sliderHandleColor: '#F7F7F7',\n  sliderInactiveBorderColor: '#F7F7F7',\n  sliderHandleTextColor: '#F7F7F7',\n  sliderHandleHoverColor: '#F7F7F7',\n\n  subtextColor: subtextColorLT,\n  switchBtnBgd: '#F7F7F7',\n  secondarySwitchBtnBgd: '#F7F7F7',\n  secondarySwitchTrackBgd: '#D3D8E0',\n  switchBtnBgdActive: '#F7F7F7',\n  switchTrackBgd: '#D3D8E0',\n  switchTrackBgdActive: activeColorLT,\n\n  // button switch background and hover color\n  primaryBtnBgd: primaryBtnActBgd,\n  primaryBtnActBgd: primaryBtnBgd,\n  primaryBtnBgdHover: primaryBtnBgd,\n\n  secondaryBtnBgd: secondaryBtnActBgd,\n  secondaryBtnActBgd: secondaryBtnBgd,\n  secondaryBtnBgdHover: secondaryBtnBgd,\n\n  floatingBtnBgd: '#F7F7F7',\n  floatingBtnActBgd: '#F7F7F7',\n  floatingBtnBgdHover: '#F7F7F7',\n  floatingBtnColor: subtextColor,\n  floatingBtnActColor: activeColorLT,\n\n  linkBtnActColor: textColorLT,\n\n  rangeBrushBgd: '#D3D8E0',\n  histogramFillInRange: activeColorLT,\n  histogramFillOutRange: '#A0A7B4',\n  axisFontColor: textColorLT\n};\n\nexport const themeBS = {\n  ...theme,\n  activeColor: '#E2E2E2',\n  dropdownListBgd: '#FFFFFF',\n  toolbarItemBgdHover: '#F7F7F7',\n  dropdownListBorderTop: 'none',\n  dropdownListHighlightBg: '#F6F6F6',\n  toolbarItemIconHover: '#000000',\n  inputBgd: '#E2E2E2',\n  inputBgdActive: '#E2E2E2',\n  inputBgdHover: 'inherit',\n  inputBorderActiveColor: '#ffffff',\n  inputColor: '#000000',\n  chickletBgd: '#E2E2E2',\n  panelBackground: '#FFFFFF',\n  panelBackgroundHover: '#EEEEEE',\n  panelContentBackground: '#FFFFFF',\n  bottomWidgetBgd: '#F7F7F7',\n  panelHeaderIconActive: '#000000',\n  panelHeaderIconHover: '#000000',\n  panelBorderColor: '#E2E2E2',\n  primaryBtnBgd: '#E2E2E2',\n  primaryBtnBgdHover: '#333333',\n  primaryBtnColor: '#000000',\n  secondaryBtnActBgd: '#EEEEEE',\n  secondaryBtnActColor: '#000000',\n  secondaryBtnBgd: '#E2E2E2',\n  secondaryBtnBgdHover: '#CBCBCB',\n  ctnBtnBgd: '#E2E2E2',\n  ctnBtnBgdHover: '333333',\n  ctnBtnColor: '#000000',\n  ctnBtnActColor: '#000000',\n\n  sideBarCloseBtnBgd: '#E2E2E2',\n  sideBarCloseBtnColor: '#000000',\n  sideBarCloseBtnBgdHover: '#FFFFFF',\n\n  floatingBtnBgd: '#FFFFFF',\n  floatingBtnActBgd: '#EEEEEE',\n  floatingBtnBgdHover: '#EEEEEE',\n  floatingBtnColor: '#757575',\n  floatingBtnActColor: '#000000',\n\n  secondaryBtnColor: '#000000',\n  secondaryInputBgd: '#F6F6F6',\n  secondaryInputBgdActive: '#F6F6F6',\n  secondaryInputBgdHover: '#F6F6F6',\n  secondaryInputBorderActiveColor: '#000000',\n  secondaryInputBorderColor: 'none',\n  secondaryInputColor: '#545454',\n  sidePanelBg: '#F6F6F6',\n  sidePanelHeaderBg: '#FFFFFF',\n  subtextColor: '#AFAFAF',\n  panelTabColor: '#AFAFAF',\n  subtextColorActive: '#000000',\n  textColor: '#000000',\n  textColorHl: '#545454',\n  mapPanelBackgroundColor: '#F6F6F6',\n  mapPanelHeaderBackgroundColor: '#FFFFFF',\n  titleTextColor: '#000000',\n  switchBtnBgdActive: '#000000',\n  switchBtnBgd: '#FFFFFF',\n  switchTrackBgdActive: '#E2E2E2',\n  secondarySwitchTrackBgd: '#E2E2E2',\n  switchTrackBgd: '#E2E2E2',\n  secondarySwitchBtnBgd: '#FFFFFF',\n  histogramFillInRange: '#000000',\n  histogramFillOutRange: '#E2E2E2',\n  rangeBrushBgd: '#E2E2E2',\n  sliderBarBgd: '#E2E2E2',\n  sliderHandleColor: '#FFFFFF',\n  sliderInactiveBorderColor: '#FFFFFF',\n  sliderHandleTextColor: '#FFFFFF',\n  sliderBarColor: '#000000'\n};\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {css} from 'styled-components';\n\n// These are useful for test or when theme doesn't define them\nexport const breakPointValues = {\n  palm: 588,\n  desk: 768\n};\n\n/**\n * Contains media rules for different device types\n * @namespace\n * @property {object}  media\n * @property {string}  media.palm - rule for palm devices\n * @property {string}  media.portable - rule for portable devices\n * @property {string}  media.desk - rule for desktops\n */\n\nexport const media = {\n  palm: (first, ...args) => css`\n    @media (max-width: ${props => (props.theme.breakPoints || breakPointValues).palm}px) {\n      ${css(first, ...args)};\n    }\n  `,\n\n  portable: (first, ...args) => css`\n    @media (max-width: ${props => (props.theme.breakPoints || breakPointValues).desk}px) {\n      ${css(first, ...args)};\n    }\n  `,\n\n  desk: (first, ...args) => css`\n    @media (min-width: ${props => (props.theme.breakPoints || breakPointValues).desk + 1}px) {\n      ${css(first, ...args)};\n    }\n  `\n};\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nexport default function noop() {}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport Task, {taskCreator} from 'react-palm/tasks';\nimport {json as requestJson} from 'd3-request';\nimport {readFileInBatches, processFileData} from '@kepler.gl/processors';\n\nexport const LOAD_FILE_TASK = Task.fromPromise(\n  ({file, fileCache, loaders, loadOptions}) =>\n    readFileInBatches({file, fileCache, loaders, loadOptions}),\n  'LOAD_FILE_TASK'\n);\n\nexport const PROCESS_FILE_DATA = Task.fromPromise(\n  processFileData,\n\n  'PROCESS_FILE_CONTENT'\n);\n\nexport const LOAD_MAP_STYLE_TASK = taskCreator(\n  ({url, id}, success, error) =>\n    requestJson(url, (err, result) => {\n      if (err) {\n        error(err);\n      } else {\n        if (!result) {\n          error(new Error('Map style response is empty'));\n        }\n        success({id, style: result});\n      }\n    }),\n\n  'LOAD_MAP_STYLE_TASK'\n);\n\n/**\n * task to upload file to cloud provider\n */\nexport const EXPORT_FILE_TO_CLOUD_TASK = Task.fromPromise(\n  ({provider, payload}) => provider.uploadMap(payload),\n\n  'EXPORT_FILE_TO_CLOUD_TASK'\n);\n\nexport const LOAD_CLOUD_MAP_TASK = Task.fromPromise(\n  ({provider, payload}) => provider.downloadMap(payload),\n\n  'LOAD_CLOUD_MAP_TASK'\n);\n\n/**\n *  task to dispatch a function as a task\n */\nexport const ACTION_TASK = Task.fromCallback(\n  (_, cb) => cb(),\n\n  'ACTION_TASK'\n);\n\nexport const DELAY_TASK = Task.fromCallback(\n  (delay, cb) => window.setTimeout(() => cb(), delay),\n\n  'DELAY_TASK'\n);\n\nexport const UNWRAP_TASK = Task.fromPromise(\n  promise => promise,\n\n  'UNWRAP'\n);\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport moment from 'moment';\nimport {MAX_GPU_FILTERS, FILTER_TYPES} from '@kepler.gl/constants';\nimport {Field, Filter} from '@kepler.gl/types';\n\nimport {set, toArray, notNullorUndefined, DataContainerInterface} from '@kepler.gl/utils';\nimport {GpuFilter} from './kepler-table';\n\n/**\n * Set gpu mode based on current number of gpu filters exists\n */\nexport function setFilterGpuMode(filter: Filter, filters: Filter[]) {\n  // filter can be applied to multiple datasets, hence gpu filter mode should also be\n  // an array, however, to keep us sane, for now, we only check if there is available channel for every dataId,\n  // if all of them has, we set gpu mode to true\n  // TODO: refactor filter so we don't keep an array of everything\n\n  filter.dataId.forEach((dataId, datasetIdx) => {\n    const gpuFilters = filters.filter(f => f.dataId.includes(dataId) && f.gpu);\n\n    if (filter.gpu && gpuFilters.length === MAX_GPU_FILTERS) {\n      set(['gpu'], false, filter);\n    }\n  });\n\n  return filter;\n}\n\n/**\n * Scan though all filters and assign gpu chanel to gpu filter\n */\nexport function assignGpuChannels(allFilters: Filter[]) {\n  return allFilters.reduce((accu, f, index) => {\n    let filters = accu;\n\n    // if gpu is true assign and validate gpu Channel\n    if (f.gpu) {\n      f = assignGpuChannel(f, accu);\n      filters = set([index], f, accu);\n    }\n\n    return filters;\n  }, allFilters);\n}\n/**\n * Assign a new gpu filter a channel based on first availability\n */\nexport function assignGpuChannel(filter: Filter, filters: Filter[]) {\n  // find first available channel\n  if (!filter.gpu) {\n    return filter;\n  }\n\n  const gpuChannel = filter.gpuChannel || [];\n\n  filter.dataId.forEach((dataId, datasetIdx) => {\n    const findGpuChannel = channel => f => {\n      const dataIdx = toArray(f.dataId).indexOf(dataId);\n      return (\n        f.id !== filter.id && dataIdx > -1 && f.gpu && toArray(f.gpuChannel)[dataIdx] === channel\n      );\n    };\n\n    if (\n      Number.isFinite(gpuChannel[datasetIdx]) &&\n      !filters.find(findGpuChannel(gpuChannel[datasetIdx]))\n    ) {\n      // if value is already assigned and valid\n      return;\n    }\n\n    let i = 0;\n\n    while (i < MAX_GPU_FILTERS) {\n      if (!filters.find(findGpuChannel(i))) {\n        gpuChannel[datasetIdx] = i;\n        return;\n      }\n      i++;\n    }\n  });\n\n  // if cannot find channel for all dataid, set gpu back to false\n  // TODO: refactor filter to handle same filter different gpu mode\n  if (!gpuChannel.length || !gpuChannel.every(Number.isFinite)) {\n    return {\n      ...filter,\n      gpu: false\n    };\n  }\n\n  return {\n    ...filter,\n    gpuChannel\n  };\n}\n/**\n * Edit filter.gpu to ensure that only\n * X number of gpu filers can coexist.\n */\nexport function resetFilterGpuMode(filters: Filter[]): Filter[] {\n  const gpuPerDataset = {};\n\n  return filters.map((f, i) => {\n    if (f.gpu) {\n      let gpu = true;\n      toArray(f.dataId).forEach(dataId => {\n        const count = gpuPerDataset[dataId];\n\n        if (count === MAX_GPU_FILTERS) {\n          gpu = false;\n        } else {\n          gpuPerDataset[dataId] = count ? count + 1 : 1;\n        }\n      });\n\n      if (!gpu) {\n        return set(['gpu'], false, f);\n      }\n    }\n\n    return f;\n  });\n}\n\n/**\n * Initial filter uniform\n */\nfunction getEmptyFilterRange() {\n  return new Array(MAX_GPU_FILTERS).fill(0).map(d => [0, 0]);\n}\n\n/**\n * Returns index of the data element.\n * @param {any} d Data element with row index info.\n * @returns number\n */\nconst defaultGetIndex = d => d.index;\n\n/**\n * Returns value at the specified row from the data container.\n * @param dc Data container.\n * @param d Data element with row index info.\n * @param fieldIndex Column index in the data container.\n * @returns\n */\nconst defaultGetData = (dc: DataContainerInterface, d: any, fieldIndex: number) => {\n  return dc.valueAt(d.index, fieldIndex);\n};\n\n/**\n * @param channels\n * @param dataId\n * @param fields\n * @return {Function} getFilterValue\n */\nconst getFilterValueAccessor = (\n  channels: (Filter | undefined)[],\n  dataId: string,\n  fields: any[]\n) => (dc: DataContainerInterface) => (getIndex = defaultGetIndex, getData = defaultGetData) => d =>\n  // for empty channel, value is 0 and min max would be [0, 0]\n  channels.map(filter => {\n    if (!filter) {\n      return 0;\n    }\n    const fieldIndex = getDatasetFieldIndexForFilter(dataId, filter);\n    const field = fields[fieldIndex];\n\n    const value =\n      filter.type === FILTER_TYPES.timeRange\n        ? field.filterProps && Array.isArray(field.filterProps.mappedValue)\n          ? field.filterProps.mappedValue[getIndex(d)]\n          : moment.utc(getData(dc, d, fieldIndex)).valueOf()\n        : getData(dc, d, fieldIndex);\n\n    return notNullorUndefined(value) ? value - filter.domain?.[0] : Number.MIN_SAFE_INTEGER;\n  });\n\n/**\n * Get filter properties for gpu filtering\n */\nexport function getGpuFilterProps(filters: Filter[], dataId: string, fields: Field[]): GpuFilter {\n  const filterRange = getEmptyFilterRange();\n  const triggers = {};\n\n  // array of filter for each channel, undefined, if no filter is assigned to that channel\n  const channels: (Filter | undefined)[] = [];\n\n  for (let i = 0; i < MAX_GPU_FILTERS; i++) {\n    const filter = filters.find(\n      f =>\n        f.gpu &&\n        f.dataId.includes(dataId) &&\n        f.gpuChannel &&\n        f.gpuChannel[f.dataId.indexOf(dataId)] === i\n    );\n\n    filterRange[i][0] = filter ? filter.value[0] - filter.domain?.[0] : 0;\n    filterRange[i][1] = filter ? filter.value[1] - filter.domain?.[0] : 0;\n\n    triggers[`gpuFilter_${i}`] = filter ? filter.name[filter.dataId.indexOf(dataId)] : null;\n    channels.push(filter);\n  }\n\n  const filterValueAccessor = getFilterValueAccessor(channels, dataId, fields);\n\n  return {\n    filterRange,\n    filterValueUpdateTriggers: triggers,\n    filterValueAccessor\n  };\n}\n\n/**\n * Return dataset field index from filter.fieldIdx\n * The index matches the same dataset index for filter.dataId\n */\nexport function getDatasetFieldIndexForFilter(dataId: string, filter: Filter): number {\n  const datasetIndex = toArray(filter.dataId).indexOf(dataId);\n  if (datasetIndex < 0) {\n    return -1;\n  }\n\n  const fieldIndex = filter.fieldIdx[datasetIndex];\n\n  return notNullorUndefined(fieldIndex) ? fieldIndex : -1;\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {console as Console} from 'global/console';\nimport {ascending, descending} from 'd3-array';\n\nimport {\n  TRIP_POINT_FIELDS,\n  SORT_ORDER,\n  ALL_FIELD_TYPES,\n  ALTITUDE_FIELDS,\n  SCALE_TYPES\n} from '@kepler.gl/constants';\nimport {\n  RGBColor,\n  Field,\n  FieldPair,\n  FieldDomain,\n  Filter,\n  ProtoDataset,\n  FilterRecord,\n  FilterDatasetOpt\n} from '@kepler.gl/types';\n\nimport {getGpuFilterProps, getDatasetFieldIndexForFilter} from './gpu-filter-utils';\n\nimport {Layer} from '@kepler.gl/layers';\nimport {\n  generateHashId,\n  getSortingFunction,\n  timeToUnixMilli,\n  createDataContainer,\n  DataForm,\n  diffFilters,\n  filterDataByFilterTypes,\n  FilterResult,\n  getFilterFunction,\n  getFilterProps,\n  getFilterRecord,\n  getNumericFieldDomain,\n  getTimestampFieldDomain,\n  getLinearDomain,\n  getLogDomain,\n  getOrdinalDomain,\n  getQuantileDomain,\n  DataContainerInterface,\n  notNullorUndefined\n} from '@kepler.gl/utils';\n\nexport type GpuFilter = {\n  filterRange: number[][];\n  filterValueUpdateTriggers: any;\n  filterValueAccessor: (\n    dc: DataContainerInterface\n  ) => (\n    getIndex?: (any) => number,\n    getData?: (dc_: DataContainerInterface, d: any, fieldIndex: number) => any\n  ) => (d: any) => number[];\n};\n\n// Unique identifier of each field\nconst FID_KEY = 'name';\n\nexport function maybeToDate(\n  isTime: boolean,\n  fieldIdx: number,\n  format: string,\n  dc: DataContainerInterface,\n  d: {index: number}\n) {\n  if (isTime) {\n    return timeToUnixMilli(dc.valueAt(d.index, fieldIdx), format);\n  }\n\n  return dc.valueAt(d.index, fieldIdx);\n}\n\nclass KeplerTable {\n  readonly id: string;\n\n  type?: string;\n  label: string;\n  color: RGBColor;\n\n  // fields and data\n  fields: Field[];\n\n  dataContainer: DataContainerInterface;\n\n  allIndexes: number[];\n  filteredIndex: number[];\n  filteredIdxCPU?: number[];\n  filteredIndexForDomain: number[];\n  fieldPairs: FieldPair[];\n  gpuFilter: GpuFilter;\n  filterRecord?: FilterRecord;\n  filterRecordCPU?: FilterRecord;\n  changedFilters?: any;\n\n  // table-injected metadata\n  sortColumn?: {\n    // column name: sorted idx\n    [key: string]: string; // ASCENDING | DESCENDING | UNSORT\n  };\n  sortOrder?: number[] | null;\n\n  pinnedColumns?: string[];\n  supportedFilterTypes?: string[] | null;\n  disableDataOperation?: boolean;\n\n  // table-injected metadata\n  metadata: object;\n\n  constructor({\n    info,\n    data,\n    color,\n    metadata,\n    supportedFilterTypes = null,\n    disableDataOperation = false\n  }: {\n    info?: ProtoDataset['info'];\n    data: ProtoDataset['data'];\n    color: RGBColor;\n    metadata?: ProtoDataset['metadata'];\n    supportedFilterTypes?: ProtoDataset['supportedFilterTypes'];\n    disableDataOperation?: ProtoDataset['disableDataOperation'];\n  }) {\n    // TODO - what to do if validation fails? Can kepler handle exceptions?\n    // const validatedData = validateInputData(data);\n    // if (!validatedData) {\n    //   return this;\n    // }\n\n    const dataContainerData = data.cols ? data.cols : data.rows;\n    const inputDataFormat = data.cols ? DataForm.COLS_ARRAY : DataForm.ROWS_ARRAY;\n\n    const dataContainer = createDataContainer(dataContainerData, {\n      // @ts-expect-error ProtoDataset field missing property fieldIdx, valueAccessor\n      fields: data.fields,\n      inputDataFormat\n    });\n\n    const datasetInfo = {\n      id: generateHashId(4),\n      label: 'new dataset',\n      type: '',\n      ...info\n    };\n    const dataId = datasetInfo.id;\n    // @ts-expect-error\n    const fields: Field[] = data.fields.map((f, i) => ({\n      ...f,\n      fieldIdx: i,\n      id: f.name,\n      displayName: f.displayName || f.name,\n      valueAccessor: getFieldValueAccessor(f, i, dataContainer)\n    }));\n\n    const allIndexes = dataContainer.getPlainIndex();\n    const defaultMetadata = {\n      id: datasetInfo.id,\n      // @ts-ignore\n      format: datasetInfo.format || '',\n      label: datasetInfo.label || ''\n    };\n\n    this.id = datasetInfo.id;\n    this.type = datasetInfo.type;\n    this.label = '  '; //datasetInfo.label changes done;\n    this.color = color;\n    this.metadata = {\n      ...defaultMetadata,\n      ...metadata\n    };\n\n    this.dataContainer = dataContainer;\n    this.allIndexes = allIndexes;\n    this.filteredIndex = allIndexes;\n    this.filteredIndexForDomain = allIndexes;\n    this.fieldPairs = findPointFieldPairs(fields);\n    this.fields = fields;\n    this.gpuFilter = getGpuFilterProps([], dataId, fields);\n    this.supportedFilterTypes = supportedFilterTypes;\n    this.disableDataOperation = disableDataOperation;\n  }\n\n  /**\n   * update table with new data\n   * @param data - new data e.g. the arrow data with new batches loaded\n   */\n  update(data: ProtoDataset['data']) {\n    const dataContainerData = data.cols ? data.cols : data.rows;\n    this.dataContainer.update?.(dataContainerData);\n    this.allIndexes = this.dataContainer.getPlainIndex();\n    this.filteredIndex = this.allIndexes;\n    this.filteredIndexForDomain = this.allIndexes;\n  }\n\n  get length() {\n    return this.dataContainer.numRows();\n  }\n\n  /**\n   * Get field\n   * @param columnName\n   */\n  getColumnField(columnName: string): Field | undefined {\n    const field = this.fields.find(fd => fd[FID_KEY] === columnName);\n    this._assetField(columnName, field);\n    return field;\n  }\n\n  /**\n   * Get fieldIdx\n   * @param columnName\n   */\n  getColumnFieldIdx(columnName: string): number {\n    const fieldIdx = this.fields.findIndex(fd => fd[FID_KEY] === columnName);\n    this._assetField(columnName, Boolean(fieldIdx > -1));\n    return fieldIdx;\n  }\n\n  /**\n   * Get displayFormat\n   * @param columnName\n   */\n  getColumnDisplayFormat(columnName) {\n    const field = this.fields.find(fd => fd[FID_KEY] === columnName);\n    this._assetField(columnName, field);\n    return field?.displayFormat;\n  }\n\n  /**\n   * Get the value of a cell\n   */\n  getValue(columnName: string, rowIdx: number): any {\n    const field = this.getColumnField(columnName);\n    return field ? field.valueAccessor({index: rowIdx}) : null;\n  }\n\n  /**\n   * Updates existing field with a new object\n   * @param fieldIdx\n   * @param newField\n   */\n  updateColumnField(fieldIdx: number, newField: Field): void {\n    this.fields = Object.assign([...this.fields], {[fieldIdx]: newField});\n  }\n\n  /**\n   * Update dataset color by custom color\n   * @param newColor\n   */\n  updateTableColor(newColor: RGBColor): void {\n    this.color = newColor;\n  }\n\n  /**\n   * Save filterProps to field and retrieve it\n   * @param columnName\n   */\n  getColumnFilterProps(columnName: string): Field['filterProps'] | null | undefined {\n    const fieldIdx = this.getColumnFieldIdx(columnName);\n    if (fieldIdx < 0) {\n      return null;\n    }\n    const field = this.fields[fieldIdx];\n    if (field.hasOwnProperty('filterProps')) {\n      return field.filterProps;\n    }\n\n    const fieldDomain = this.getColumnFilterDomain(field);\n    if (!fieldDomain) {\n      return null;\n    }\n\n    const filterProps = getFilterProps(field, fieldDomain);\n    const newField = {\n      ...field,\n      filterProps\n    };\n\n    this.updateColumnField(fieldIdx, newField);\n\n    return filterProps;\n  }\n\n  /**\n   * Apply filters to dataset, return the filtered dataset with updated `gpuFilter`, `filterRecord`, `filteredIndex`, `filteredIndexForDomain`\n   * @param filters\n   * @param layers\n   * @param opt\n   */\n  filterTable(filters: Filter[], layers: Layer[], opt?: FilterDatasetOpt): KeplerTable {\n    const {dataContainer, id: dataId, filterRecord: oldFilterRecord, fields} = this;\n\n    // if there is no filters\n    const filterRecord = getFilterRecord(dataId, filters, opt || {});\n\n    this.filterRecord = filterRecord;\n    this.gpuFilter = getGpuFilterProps(filters, dataId, fields);\n\n    // const newDataset = set(['filterRecord'], filterRecord, dataset);\n\n    if (!filters.length) {\n      this.filteredIndex = this.allIndexes;\n      this.filteredIndexForDomain = this.allIndexes;\n      return this;\n    }\n\n    this.changedFilters = diffFilters(filterRecord, oldFilterRecord);\n\n    // generate 2 sets of filter result\n    // filteredIndex used to calculate layer data\n    // filteredIndexForDomain used to calculate layer Domain\n    const shouldCalDomain = Boolean(this.changedFilters.dynamicDomain);\n    const shouldCalIndex = Boolean(this.changedFilters.cpu);\n\n    let filterResult: FilterResult = {};\n    if (shouldCalDomain || shouldCalIndex) {\n      const dynamicDomainFilters = shouldCalDomain ? filterRecord.dynamicDomain : null;\n      const cpuFilters = shouldCalIndex ? filterRecord.cpu : null;\n\n      const filterFuncs = filters.reduce((acc, filter) => {\n        const fieldIndex = getDatasetFieldIndexForFilter(this.id, filter);\n        const field = fieldIndex !== -1 ? fields[fieldIndex] : null;\n\n        return {\n          ...acc,\n          [filter.id]: getFilterFunction(field, this.id, filter, layers, dataContainer)\n        };\n      }, {});\n\n      filterResult = filterDataByFilterTypes(\n        {dynamicDomainFilters, cpuFilters, filterFuncs},\n        dataContainer\n      );\n    }\n\n    this.filteredIndex = filterResult.filteredIndex || this.filteredIndex;\n    this.filteredIndexForDomain =\n      filterResult.filteredIndexForDomain || this.filteredIndexForDomain;\n\n    return this;\n  }\n\n  /**\n   * Apply filters to a dataset all on CPU, assign to `filteredIdxCPU`, `filterRecordCPU`\n   * @param filters\n   * @param layers\n   */\n  filterTableCPU(filters: Filter[], layers: Layer[]): KeplerTable {\n    const opt = {\n      cpuOnly: true,\n      ignoreDomain: true\n    };\n\n    // no filter\n    if (!filters.length) {\n      this.filteredIdxCPU = this.allIndexes;\n      this.filterRecordCPU = getFilterRecord(this.id, filters, opt);\n      return this;\n    }\n\n    // no gpu filter\n    if (!filters.find(f => f.gpu)) {\n      this.filteredIdxCPU = this.filteredIndex;\n      this.filterRecordCPU = getFilterRecord(this.id, filters, opt);\n      return this;\n    }\n\n    // make a copy for cpu filtering\n    const copied = copyTable(this);\n\n    copied.filterRecord = this.filterRecordCPU;\n    copied.filteredIndex = this.filteredIdxCPU || [];\n\n    const filtered = copied.filterTable(filters, layers, opt);\n\n    this.filteredIdxCPU = filtered.filteredIndex;\n    this.filterRecordCPU = filtered.filterRecord;\n\n    return this;\n  }\n\n  /**\n   * Calculate field domain based on field type and data\n   * for Filter\n   */\n  getColumnFilterDomain(field: Field): FieldDomain {\n    const {dataContainer} = this;\n    const {valueAccessor} = field;\n\n    let domain;\n\n    switch (field.type) {\n      case ALL_FIELD_TYPES.real:\n      case ALL_FIELD_TYPES.integer:\n        // calculate domain and step\n        return getNumericFieldDomain(dataContainer, valueAccessor);\n\n      case ALL_FIELD_TYPES.boolean:\n        return {domain: [true, false]};\n\n      case ALL_FIELD_TYPES.string:\n      case ALL_FIELD_TYPES.date:\n        domain = getOrdinalDomain(dataContainer, valueAccessor);\n        return {domain};\n\n      case ALL_FIELD_TYPES.timestamp:\n        return getTimestampFieldDomain(dataContainer, valueAccessor);\n\n      default:\n        return {domain: getOrdinalDomain(dataContainer, valueAccessor)};\n    }\n  }\n\n  /**\n   *  Get the domain of this column based on scale type\n   */\n  getColumnLayerDomain(\n    field: Field,\n    scaleType: string\n  ): number[] | string[] | [number, number] | null {\n    const {dataContainer, filteredIndexForDomain} = this;\n\n    if (!SCALE_TYPES[scaleType]) {\n      Console.error(`scale type ${scaleType} not supported`);\n      return null;\n    }\n\n    const {valueAccessor} = field;\n    const indexValueAccessor = i => valueAccessor({index: i});\n    const sortFunction = getSortingFunction(field.type);\n\n    switch (scaleType) {\n      case SCALE_TYPES.ordinal:\n      case SCALE_TYPES.point:\n        // do not recalculate ordinal domain based on filtered data\n        // don't need to update ordinal domain every time\n        return getOrdinalDomain(dataContainer, valueAccessor);\n\n      case SCALE_TYPES.quantile:\n        return getQuantileDomain(filteredIndexForDomain, indexValueAccessor, sortFunction);\n\n      case SCALE_TYPES.log:\n        return getLogDomain(filteredIndexForDomain, indexValueAccessor);\n\n      case SCALE_TYPES.quantize:\n      case SCALE_TYPES.linear:\n      case SCALE_TYPES.sqrt:\n      default:\n        return getLinearDomain(filteredIndexForDomain, indexValueAccessor);\n    }\n  }\n\n  /**\n   * Get a sample of rows to calculate layer boundaries\n   */\n  // getSampleData(rows)\n\n  /**\n   * Parse cell value based on column type and return a string representation\n   * Value the field value, type the field type\n   */\n  // parseFieldValue(value, type)\n\n  // sortDatasetByColumn()\n\n  /**\n   * Assert whether field exist\n   * @param fieldName\n   * @param condition\n   */\n  _assetField(fieldName: string, condition: any): void {\n    if (!condition) {\n      Console.error(`${fieldName} doesnt exist in dataset ${this.id}`);\n    }\n  }\n}\n\nexport type Datasets = {\n  [key: string]: KeplerTable;\n};\n\n// HELPER FUNCTIONS (MAINLY EXPORTED FOR TEST...)\n// have to double excape\nconst specialCharacterSet = `[#_&@\\\\.\\\\-\\\\ ]`;\n\nfunction foundMatchingFields(re, suffixPair, allNames, fieldName) {\n  const partnerIdx = allNames.findIndex(\n    d => d === fieldName.replace(re, match => match.replace(suffixPair[0], suffixPair[1]))\n  );\n  let altIdx = -1;\n  if (partnerIdx > -1) {\n    // if found partner, go on and look for altitude\n    ALTITUDE_FIELDS.some(alt => {\n      altIdx = allNames.findIndex(\n        d => d === fieldName.replace(re, match => match.replace(suffixPair[0], alt))\n      );\n      return altIdx > -1;\n    });\n  }\n  return {partnerIdx, altIdx};\n}\n/**\n * Find point fields pairs from fields\n *\n * @param fields\n * @returns found point fields\n */\nexport function findPointFieldPairs(fields: Field[]): FieldPair[] {\n  const allNames = fields.map(f => f.name.toLowerCase());\n\n  // get list of all fields with matching suffixes\n  const acc: FieldPair[] = [];\n  return allNames.reduce((carry, fieldName, idx) => {\n    // This search for pairs will early exit if found.\n    for (const suffixPair of TRIP_POINT_FIELDS) {\n      // match first suffix\n      // (^|[#_&@\\.\\-\\ ])lat([#_&@\\.\\-\\ ]|$)\n      const re = new RegExp(`(^|${specialCharacterSet})${suffixPair[0]}(${specialCharacterSet}|$)`);\n\n      if (re.test(fieldName)) {\n        const {partnerIdx, altIdx} = foundMatchingFields(re, suffixPair, allNames, fieldName);\n\n        if (partnerIdx > -1) {\n          const trimName = fieldName.replace(re, '').trim();\n\n          carry.push({\n            defaultName: trimName || 'point',\n            pair: {\n              lat: {\n                fieldIdx: idx,\n                value: fields[idx].name\n              },\n              lng: {\n                fieldIdx: partnerIdx,\n                value: fields[partnerIdx].name\n              },\n              ...(altIdx > -1\n                ? {\n                    alt: {\n                      fieldIdx: altIdx,\n                      value: fields[altIdx].name\n                    }\n                  }\n                : {})\n            },\n            suffix: suffixPair\n          });\n          return carry;\n        }\n      }\n    }\n    return carry;\n  }, acc);\n}\n\n/**\n *\n * @param dataset\n * @param column\n * @param mode\n * @type\n */\nexport function sortDatasetByColumn(\n  dataset: KeplerTable,\n  column: string,\n  mode?: string\n): KeplerTable {\n  const {allIndexes, fields, dataContainer} = dataset;\n  const fieldIndex = fields.findIndex(f => f.name === column);\n  if (fieldIndex < 0) {\n    return dataset;\n  }\n\n  const sortBy = SORT_ORDER[mode || ''] || SORT_ORDER.ASCENDING;\n\n  if (sortBy === SORT_ORDER.UNSORT) {\n    dataset.sortColumn = {};\n    dataset.sortOrder = null;\n\n    return dataset;\n  }\n\n  const sortFunction = sortBy === SORT_ORDER.ASCENDING ? ascending : descending;\n  const sortOrder = allIndexes.slice().sort((a, b) => {\n    const value1 = dataContainer.valueAt(a, fieldIndex);\n    const value2 = dataContainer.valueAt(b, fieldIndex);\n    if (!notNullorUndefined(value1) && notNullorUndefined(value2)) {\n      return 1;\n    } else if (notNullorUndefined(value1) && !notNullorUndefined(value2)) {\n      return -1;\n    }\n    return sortFunction(value1, value2);\n  });\n\n  dataset.sortColumn = {\n    [column]: sortBy\n  };\n  dataset.sortOrder = sortOrder;\n\n  return dataset;\n}\n\nexport function pinTableColumns(dataset: KeplerTable, column: string): KeplerTable {\n  const field = dataset.getColumnField(column);\n  if (!field) {\n    return dataset;\n  }\n\n  let pinnedColumns;\n  if (Array.isArray(dataset.pinnedColumns) && dataset.pinnedColumns.includes(field.name)) {\n    // unpin it\n    pinnedColumns = dataset.pinnedColumns.filter(co => co !== field.name);\n  } else {\n    pinnedColumns = (dataset.pinnedColumns || []).concat(field.name);\n  }\n\n  // @ts-ignore\n  return copyTableAndUpdate(dataset, {pinnedColumns});\n}\n\nexport function copyTable(original: KeplerTable): KeplerTable {\n  return Object.assign(Object.create(Object.getPrototypeOf(original)), original);\n}\n\n/**\n * @type\n * @returns\n */\nexport function copyTableAndUpdate(\n  original: KeplerTable,\n  options: Partial<KeplerTable> = {}\n): KeplerTable {\n  return Object.entries(options).reduce((acc, entry) => {\n    acc[entry[0]] = entry[1];\n    return acc;\n  }, copyTable(original));\n}\n\nexport function getFieldValueAccessor<\n  F extends {\n    type?: Field['type'];\n    format?: Field['format'];\n  }\n>(f: F, i: number, dc: DataContainerInterface) {\n  return maybeToDate.bind(\n    null,\n    // is time\n    f.type === ALL_FIELD_TYPES.timestamp,\n    i,\n    f.format || '',\n    dc\n  );\n}\n\nexport default KeplerTable;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport uniq from 'lodash.uniq';\nimport KeplerTable, {Datasets} from './kepler-table';\nimport {ProtoDataset, RGBColor} from '@kepler.gl/types';\n\nimport {hexToRgb, validateInputData, datasetColorMaker} from '@kepler.gl/utils';\n\n// apply a color for each dataset\n// to use as label colors\nconst datasetColors = [\n  '#8F2FBF',\n  '#005CFF',\n  '#C06C84',\n  '#F8B195',\n  '#547A82',\n  '#3EACA8',\n  '#A2D4AB'\n].map(hexToRgb);\n\n/** @type {typeof import('./dataset-utils').getNewDatasetColor} */\nexport function getNewDatasetColor(datasets: Datasets): RGBColor {\n  const presetColors = datasetColors.map(String);\n  const usedColors = uniq(Object.values(datasets).map(d => String(d.color))).filter(c =>\n    presetColors.includes(c)\n  );\n\n  if (usedColors.length === presetColors.length) {\n    // if we already depleted the pool of color\n    return datasetColorMaker.next().value;\n  }\n\n  let color = datasetColorMaker.next().value;\n  while (usedColors.includes(String(color))) {\n    color = datasetColorMaker.next().value;\n  }\n\n  return color;\n}\n\n/**\n * Take datasets payload from addDataToMap, create datasets entry save to visState\n */\nexport function createNewDataEntry(\n  {info, data, ...opts}: ProtoDataset,\n  datasets: Datasets = {}\n): Datasets {\n  const validatedData = validateInputData(data);\n  if (!validatedData) {\n    return {};\n  }\n\n  // check if dataset already exists, and update it when loading data by batches incrementally\n  if (info && info.id && datasets[info.id]) {\n    // get keplerTable from datasets\n    const keplerTable = datasets[info.id];\n    // update the data in keplerTable\n    keplerTable.update(validatedData);\n    return {\n      [keplerTable.id]: keplerTable\n    };\n  }\n\n  info = info || {};\n  const color = info.color || getNewDatasetColor(datasets);\n\n  const keplerTable = new KeplerTable({info, data: validatedData, color, ...opts});\n  return {\n    [keplerTable.id]: keplerTable\n  };\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport uniq from 'lodash.uniq';\nimport pick from 'lodash.pick';\nimport flattenDeep from 'lodash.flattendeep';\nimport deepmerge from 'deepmerge';\nimport {\n  arrayInsert,\n  getInitialMapLayersForSplitMap,\n  applyFiltersToDatasets,\n  validateFiltersUpdateDatasets,\n  findById\n} from '@kepler.gl/utils';\nimport {getLayerOrderFromLayers} from '@kepler.gl/reducers';\n\nimport {LayerColumns, LayerColumn, Layer} from '@kepler.gl/layers';\nimport {createEffect} from '@kepler.gl/effects';\nimport {LAYER_BLENDINGS, OVERLAY_BLENDINGS} from '@kepler.gl/constants';\nimport {CURRENT_VERSION, VisState, VisStateMergers, KeplerGLSchemaClass} from '@kepler.gl/schemas';\n\nimport {\n  ParsedLayer,\n  ParsedVisState,\n  SavedInteractionConfig,\n  TooltipInfo,\n  SavedEditor,\n  ParsedConfig,\n  Filter,\n  Effect as EffectType,\n  ParsedEffect\n} from '@kepler.gl/types';\nimport {KeplerTable, Datasets, assignGpuChannels, resetFilterGpuMode} from '@kepler.gl/table';\n\n/**\n * Merge loaded filters with current state, if no fields or data are loaded\n * save it for later\n *\n */\nexport function mergeFilters<S extends VisState>(\n  state: S,\n  filtersToMerge: NonNullable<ParsedConfig['visState']>['filters'],\n  fromConfig?: boolean\n): S {\n  const preserveFilterOrder = fromConfig\n    ? filtersToMerge?.map(l => l.id)\n    : state.preserveFilterOrder;\n\n  if (!Array.isArray(filtersToMerge) || !filtersToMerge.length) {\n    return state;\n  }\n\n  const {validated, failed, updatedDatasets} = validateFiltersUpdateDatasets(state, filtersToMerge);\n  let updatedFilters = insertItemBasedOnPreservedOrder(\n    state.filters,\n    validated,\n    preserveFilterOrder\n  );\n\n  // merge filter with existing\n  updatedFilters = resetFilterGpuMode(updatedFilters);\n  updatedFilters = assignGpuChannels(updatedFilters);\n  // filter data\n  const datasetsToFilter = uniq(flattenDeep(validated.map(f => f.dataId)));\n\n  const filtered = applyFiltersToDatasets(\n    datasetsToFilter,\n    updatedDatasets,\n    updatedFilters,\n    state.layers\n  );\n\n  return {\n    ...state,\n    filters: updatedFilters,\n    datasets: filtered,\n    preserveFilterOrder,\n    filterToBeMerged: [...state.filterToBeMerged, ...failed]\n  };\n}\n\n// replace dataId in saved Filter\nexport function replaceFilterDatasetIds(\n  savedFilter: Filter[],\n  dataId: string,\n  dataIdToUse: string\n) {\n  const replaced: Filter[] = [];\n  savedFilter.forEach(filter => {\n    if (filter.dataId.includes(dataId)) {\n      const newDataId = filter.dataId.map(d => (d === dataId ? dataIdToUse : d));\n      replaced.push({\n        ...filter,\n        dataId: newDataId\n      });\n    }\n  });\n  return replaced.length ? replaced : null;\n}\n\nexport function isSavedLayerConfigV1(layerConfig: any): boolean {\n  // exported layer configuration contains visualChannels property\n  return layerConfig?.visualChannels;\n}\n\nexport function parseLayerConfig(\n  schema: KeplerGLSchemaClass,\n  layerConfig: any\n): ParsedLayer | undefined {\n  // assume the layer config is current version\n  const savedConfig = {\n    version: CURRENT_VERSION,\n    config: {\n      visState: {layers: [layerConfig], layerOrder: [layerConfig.id]}\n    }\n  };\n\n  return schema.parseSavedConfig(savedConfig)?.visState?.layers?.[0];\n}\n\nfunction insertItemBasedOnPreservedOrder(\n  currentItems: Filter[],\n  items: Filter[],\n  preservedOrder: any[] = [],\n  defaultStart?: boolean\n) {\n  let newItems = [...currentItems];\n\n  for (const item of items) {\n    const expectedIdx = preservedOrder.indexOf(item.id);\n    // insertAt the end by default\n    let insertAt = defaultStart ? 0 : newItems.length;\n    if (expectedIdx > 0) {\n      // look for layer to insert after\n      let i = expectedIdx + 1;\n      let preceedIdx = -1;\n      while (i-- > 0 && preceedIdx < 0) {\n        // keep looking for preceed layer that is already loaded\n        const preceedItemId = preservedOrder[i - 1];\n        preceedIdx = newItems.findIndex(d => d.id === preceedItemId);\n      }\n      if (preceedIdx > -1) {\n        // if found\n        insertAt = preceedIdx + 1;\n      }\n    }\n    newItems = arrayInsert(newItems, insertAt, item);\n  }\n  return newItems;\n}\n\nexport function createLayerFromConfig(state: VisState, layerConfig: any): Layer | null {\n  // check if the layer config is parsed\n  const parsedLayerConfig = isSavedLayerConfigV1(layerConfig)\n    ? parseLayerConfig(state.schema, layerConfig)\n    : layerConfig;\n\n  if (!parsedLayerConfig) {\n    return null;\n  }\n  // first validate config against dataset\n  const {validated, failed} = validateLayersByDatasets(\n    state.datasets,\n    state.layerClasses,\n    [parsedLayerConfig],\n    {allowEmptyColumn: true}\n  );\n\n  if (failed?.length || !validated.length) {\n    // failed\n    return null;\n  }\n\n  const newLayer = validated[0];\n  newLayer.updateLayerDomain(state.datasets);\n  return newLayer;\n}\n\n/**\n * Get loaded layer from state\n */\nexport function serializeLayer(\n  newLayer: Layer,\n  schema: KeplerGLSchemaClass\n): ParsedLayer | undefined {\n  const serializedVisState = serializeVisState(\n    {layers: [newLayer], layerOrder: [newLayer.id]},\n    schema\n  );\n  return serializedVisState?.layers?.[0];\n}\n\n/**\n * Get loaded effect from state\n */\nexport function serializeEffect(\n  newEffect: EffectType,\n  schema: KeplerGLSchemaClass\n): ParsedEffect | undefined {\n  const serializedVisState = serializeVisState(\n    {effects: [newEffect], effectOrder: [newEffect.id]},\n    schema\n  );\n  return serializedVisState?.effects?.[0];\n}\n\n/**\n * Get vis state config\n */\nexport function serializeVisState(\n  visState: Partial<VisState>,\n  schema: KeplerGLSchemaClass\n): ParsedVisState | undefined {\n  const savedState = schema.getConfigToSave({\n    visState\n  });\n  return savedState ? schema.parseSavedConfig(savedState)?.visState : undefined;\n}\n/**\n * Merge layers from de-serialized state, if no fields or data are loaded\n * save it for later\n *\n */\nexport function mergeLayers<S extends VisState>(\n  state: S,\n  layersToMerge: NonNullable<ParsedConfig['visState']>['layers'] = [],\n  fromConfig?: boolean\n): S {\n  const preserveLayerOrder = fromConfig\n    ? getLayerOrderFromLayers(layersToMerge)\n    : state.preserveLayerOrder;\n  if (!Array.isArray(layersToMerge) || !layersToMerge.length) {\n    return state;\n  }\n  // don't merge layer if dataset is being merged\n  const unmerged: ParsedLayer[] = [];\n  const toMerge: ParsedLayer[] = [];\n  layersToMerge.forEach((l: ParsedLayer) => {\n    if (l?.config?.dataId && state.isMergingDatasets[l.config.dataId]) {\n      unmerged.push(l);\n    } else {\n      toMerge.push(l);\n    }\n  });\n\n  const {validated: mergedLayer, failed} = validateLayersByDatasets(\n    state.datasets,\n    state.layerClasses,\n    toMerge\n  );\n  unmerged.push(...failed);\n  // put new layers in front of current layers\n  const {newLayerOrder, newLayers} = insertLayerAtRightOrder(\n    state.layers,\n    mergedLayer,\n    state.layerOrder,\n    preserveLayerOrder\n  );\n\n  return {\n    ...state,\n    layers: newLayers,\n    layerOrder: newLayerOrder,\n    preserveLayerOrder,\n    layerToBeMerged: [...state.layerToBeMerged, ...unmerged]\n  };\n}\n\nexport function insertLayerAtRightOrder(\n  currentLayers,\n  layersToInsert,\n  currentOrder,\n  preservedOrder: string[] = []\n) {\n  if (!layersToInsert?.length) {\n    return {newLayers: currentLayers, newLayerOrder: currentOrder};\n  }\n  // perservedOrder ['a', 'b', 'c'];\n  // layerOrder ['a', 'b', 'c']\n  const currentLayerQueue = currentOrder\n    .map(id => findById(id)(currentLayers))\n    .filter(layer => Boolean(layer));\n  const newLayers = currentLayers.concat(layersToInsert);\n  const newLayerOrderQueue = insertItemBasedOnPreservedOrder(\n    currentLayerQueue,\n    layersToInsert,\n    preservedOrder,\n    true\n  );\n\n  // reconstruct layerOrder after insert\n  const newLayerOrder = getLayerOrderFromLayers(newLayerOrderQueue);\n\n  return {\n    newLayerOrder,\n    newLayers\n  };\n}\n\n/**\n * Merge interactions with saved config\n *\n */\nexport function mergeInteractions<S extends VisState>(\n  state: S,\n  interactionToBeMerged: Partial<SavedInteractionConfig> | undefined,\n  fromConfig?: boolean\n): S {\n  const merged: Partial<SavedInteractionConfig> = {};\n  const unmerged: Partial<SavedInteractionConfig> = {};\n\n  if (interactionToBeMerged) {\n    (Object.keys(interactionToBeMerged) as Array<keyof SavedInteractionConfig>).forEach(key => {\n      if (!state.interactionConfig[key]) {\n        return;\n      }\n\n      const currentConfig =\n        key === 'tooltip' || key === 'brush' ? state.interactionConfig[key].config : null;\n\n      const {enabled, ...configSaved} = interactionToBeMerged[key] || {};\n\n      let configToMerge = configSaved;\n\n      if (key === 'tooltip') {\n        const {mergedTooltip, unmergedTooltip} = mergeInteractionTooltipConfig(\n          state,\n          configSaved as SavedInteractionConfig['tooltip']\n        );\n\n        // merge new dataset tooltips with original dataset tooltips\n        configToMerge = {\n          fieldsToShow: {\n            ...(currentConfig as TooltipInfo['config']).fieldsToShow,\n            ...mergedTooltip\n          }\n        };\n\n        if (Object.keys(unmergedTooltip).length) {\n          // @ts-expect-error\n          unmerged.tooltip = {fieldsToShow: unmergedTooltip, enabled: Boolean(enabled)};\n        }\n      }\n\n      merged[key] = {\n        ...state.interactionConfig[key],\n        enabled: Boolean(enabled),\n        ...(currentConfig\n          ? {\n              config: pick(\n                {\n                  ...currentConfig,\n                  ...configToMerge\n                },\n                Object.keys(currentConfig)\n              )\n            }\n          : {})\n      };\n    });\n  }\n\n  const nextState = {\n    ...state,\n    interactionConfig: {\n      ...state.interactionConfig,\n      ...merged\n    },\n    interactionToBeMerged: savedUnmergedInteraction(state, unmerged)\n  };\n  return nextState;\n}\n\nfunction savedUnmergedInteraction<S extends VisState>(\n  state: S,\n  unmerged: Partial<SavedInteractionConfig>\n) {\n  if (!unmerged?.tooltip?.fieldsToShow) {\n    return state.interactionToBeMerged;\n  }\n  return {\n    tooltip: {\n      ...state.interactionToBeMerged.tooltip,\n      ...(typeof unmerged?.tooltip?.enabled === 'boolean'\n        ? {enabled: unmerged.tooltip.enabled}\n        : {}),\n      fieldsToShow: {\n        ...state.interactionToBeMerged?.tooltip?.fieldsToShow,\n        ...unmerged?.tooltip?.fieldsToShow\n      }\n    }\n  };\n}\n\nfunction replaceInteractionDatasetIds(interactionConfig, dataId: string, dataIdToReplace: string) {\n  if (interactionConfig?.tooltip?.fieldsToShow[dataId]) {\n    return {\n      ...interactionConfig,\n      tooltip: {\n        ...interactionConfig.tooltip,\n        fieldsToShow: {\n          [dataIdToReplace]: interactionConfig?.tooltip?.fieldsToShow[dataId]\n        }\n      }\n    };\n  }\n  return null;\n}\n/**\n * Merge splitMaps config with current visStete.\n * 1. if current map is split, but splitMap DOESNOT contain maps\n *    : don't merge anything\n * 2. if current map is NOT split, but splitMaps contain maps\n *    : add to splitMaps, and add current layers to splitMaps\n */\nexport function mergeSplitMaps<S extends VisState>(\n  state: S,\n  splitMaps: NonNullable<ParsedConfig['visState']>['splitMaps'] = [],\n  fromConfig?: boolean\n): S {\n  const merged = [...state.splitMaps];\n  const unmerged = [];\n  splitMaps.forEach((sm, i) => {\n    const entries = Object.entries(sm.layers);\n    if (entries.length > 0) {\n      entries.forEach(([id, value]) => {\n        // check if layer exists\n        const pushTo = state.layers.find(l => l.id === id) ? merged : unmerged;\n\n        // create map panel if current map is not split\n        pushTo[i] = pushTo[i] || {\n          // keep id\n          ...sm,\n          layers: pushTo === merged ? getInitialMapLayersForSplitMap(state.layers) : []\n        };\n        pushTo[i].layers = {\n          ...pushTo[i].layers,\n          [id]: value\n        };\n      });\n    } else {\n      // We are merging if there are no layers in both split map\n      merged.push(sm);\n    }\n  });\n\n  return {\n    ...state,\n    splitMaps: merged,\n    splitMapsToBeMerged: [...state.splitMapsToBeMerged, ...unmerged]\n  };\n}\n\n/**\n * Merge effects with saved config\n */\nexport function mergeEffects<S extends VisState>(\n  state: S,\n  effects: NonNullable<ParsedConfig['visState']>['effects'],\n  fromConfig?: boolean\n): S {\n  const newEffects = [\n    ...state.effects,\n    ...(effects || [])\n      .map(effect => {\n        return fromConfig\n          ? createEffect(\n              deepmerge.all([\n                effect,\n                {\n                  // collapse all panels when loading effects\n                  isConfigActive: false\n                }\n              ])\n            )\n          : (effect as EffectType);\n      })\n      .filter(effect => {\n        return Boolean(effect && effect.isValidToSave());\n      })\n  ];\n  return {\n    ...state,\n    effects: newEffects,\n    effectOrder: newEffects.map(effect => effect.id)\n  };\n}\n\n/**\n * Merge interactionConfig.tooltip with saved config,\n * validate fieldsToShow\n *\n * @param state\n * @param tooltipConfig\n * @return - {mergedTooltip: {}, unmergedTooltip: {}}\n */\nexport function mergeInteractionTooltipConfig(\n  state: VisState,\n  tooltipConfig: Pick<TooltipInfo['config'], 'fieldsToShow'> | null = null\n) {\n  const unmergedTooltip: TooltipInfo['config']['fieldsToShow'] = {};\n  const mergedTooltip: TooltipInfo['config']['fieldsToShow'] = {};\n\n  if (\n    !tooltipConfig ||\n    !tooltipConfig.fieldsToShow ||\n    !Object.keys(tooltipConfig.fieldsToShow).length\n  ) {\n    return {mergedTooltip, unmergedTooltip};\n  }\n\n  for (const dataId in tooltipConfig.fieldsToShow) {\n    if (!state.datasets[dataId] || state.isMergingDatasets[dataId]) {\n      // is not yet loaded\n      unmergedTooltip[dataId] = tooltipConfig.fieldsToShow[dataId];\n    } else {\n      // if dataset is loaded\n      const allFields = state.datasets[dataId].fields.map(d => d.name);\n      const foundFieldsToShow = tooltipConfig.fieldsToShow[dataId].filter(field =>\n        allFields.includes(field.name)\n      );\n\n      mergedTooltip[dataId] = foundFieldsToShow;\n    }\n  }\n\n  return {mergedTooltip, unmergedTooltip};\n}\n/**\n * Merge layerBlending with saved\n *\n */\nexport function mergeLayerBlending<S extends VisState>(\n  state: S,\n  layerBlending: NonNullable<ParsedConfig['visState']>['layerBlending'],\n  fromConfig?: boolean\n): S {\n  if (layerBlending && LAYER_BLENDINGS[layerBlending]) {\n    return {\n      ...state,\n      layerBlending\n    };\n  }\n\n  return state;\n}\n\n/**\n * Merge overlayBlending with saved\n */\nexport function mergeOverlayBlending<S extends VisState>(\n  state: S,\n  overlayBlending: NonNullable<ParsedConfig['visState']>['overlayBlending'],\n  fromConfig?: boolean\n): S {\n  if (overlayBlending && OVERLAY_BLENDINGS[overlayBlending]) {\n    return {\n      ...state,\n      overlayBlending\n    };\n  }\n\n  return state;\n}\n\n/**\n * Merge animation config\n */\nexport function mergeAnimationConfig<S extends VisState>(\n  state: S,\n  animation: NonNullable<ParsedConfig['visState']>['animationConfig'],\n  fromConfig?: boolean\n): S {\n  if (animation && animation.currentTime) {\n    return {\n      ...state,\n      animationConfig: {\n        ...state.animationConfig,\n        ...animation,\n        domain: null\n      }\n    };\n  }\n\n  return state;\n}\n\n/**\n * Validate saved layer columns with new data,\n * update fieldIdx based on new fields\n *\n * @param fields\n * @param savedCols\n * @param emptyCols\n * @param options\n * @return - validated columns or null\n */\n\nexport function validateSavedLayerColumns(\n  fields: KeplerTable['fields'],\n  savedCols: {\n    [key: string]: string;\n  } = {},\n  emptyCols: LayerColumns,\n  options: {throwOnError?: boolean} = {}\n) {\n  // Prepare columns for the validator\n  const columns: typeof emptyCols = {};\n  for (const key of Object.keys(emptyCols)) {\n    columns[key] = {...emptyCols[key]};\n\n    const saved = savedCols[key];\n    if (saved) {\n      const fieldIdx = fields.findIndex(({name}) => name === saved);\n\n      if (fieldIdx > -1) {\n        // update found columns\n        columns[key].fieldIdx = fieldIdx;\n        columns[key].value = saved;\n      }\n    }\n  }\n\n  // find actual column fieldIdx, in case it has changed\n  const allColFound = Object.keys(columns).every(key =>\n    validateColumn(columns[key], columns, fields)\n  );\n\n  const rv = allColFound ? columns : null;\n  if (options.throwOnError) {\n    const requiredColumns = Object.keys(emptyCols).filter(k => !emptyCols[k].optional);\n    const missingColumns = requiredColumns.filter(k => !columns?.[k].value);\n    if (missingColumns.length) {\n      throw new Error(`Layer has missing or invalid columns: ${missingColumns.join(', ')}`);\n    }\n    const configColumns = Object.keys(savedCols);\n    const invalidColumns = configColumns.filter(k => !columns?.[k]?.value);\n    if (invalidColumns.length) {\n      throw new Error(`Layer has invalid columns: ${invalidColumns.join(', ')}`);\n    }\n  }\n\n  return rv;\n}\n\nexport function validateColumn(\n  column: LayerColumn & {validator?: typeof validateColumn},\n  columns: LayerColumns,\n  allFields: KeplerTable['fields']\n): boolean {\n  if (column.optional || column.value) {\n    return true;\n  }\n  if (column.validator) {\n    return column.validator(column, columns, allFields);\n  }\n  return false;\n}\n\n/**\n * Validate saved text label config with new data\n * refer to vis-state-schema.js TextLabelSchemaV1\n *\n * @param {Array<Object>} fields\n * @param {Object} savedTextLabel\n * @param {Object} options\n * @return {Object} - validated textlabel\n */\nexport function validateSavedTextLabel(\n  fields,\n  [layerTextLabel],\n  savedTextLabel,\n  options: {throwOnError?: boolean} = {}\n) {\n  const savedTextLabels = Array.isArray(savedTextLabel) ? savedTextLabel : [savedTextLabel];\n\n  // validate field\n  return savedTextLabels.map(textLabel => {\n    const field = textLabel.field\n      ? fields.find(fd =>\n          Object.keys(textLabel.field).every(key => textLabel.field[key] === fd[key])\n        )\n      : null;\n\n    if (field === undefined && options.throwOnError) {\n      throw new Error(`Layer has invalid text label field: ${JSON.stringify(textLabel.field)}`);\n    }\n\n    return Object.keys(layerTextLabel).reduce(\n      (accu, key) => ({\n        ...accu,\n        [key]: key === 'field' ? field : textLabel[key] || layerTextLabel[key]\n      }),\n      {}\n    );\n  });\n}\n\n/**\n * Validate saved visual channels config with new data,\n * refer to vis-state-schema.js VisualChannelSchemaV1\n */\nexport function validateSavedVisualChannels(\n  fields: KeplerTable['fields'],\n  newLayer: Layer,\n  savedLayer: ParsedLayer,\n  options: {throwOnError?: boolean} = {}\n): null | Layer {\n  Object.values(newLayer.visualChannels).forEach(({field, scale, key}) => {\n    let foundField;\n    if (savedLayer.config) {\n      if (savedLayer.config[field]) {\n        foundField = fields.find(\n          fd => savedLayer.config && fd.name === savedLayer.config[field].name\n        );\n      }\n\n      const foundChannel = {\n        ...(foundField ? {[field]: foundField} : {}),\n        ...(savedLayer.config[scale] ? {[scale]: savedLayer.config[scale]} : {})\n      };\n      if (Object.keys(foundChannel).length) {\n        newLayer.updateLayerConfig(foundChannel);\n      }\n\n      newLayer.validateVisualChannel(key);\n      if (options.throwOnError) {\n        const fieldName = savedLayer.config?.[field]?.name;\n        if (fieldName && fieldName !== newLayer.config[field]?.name) {\n          throw new Error(`Layer has invalid visual channel field: ${field}`);\n        }\n      }\n    }\n  });\n  return newLayer;\n}\n\ntype ValidateLayerOption = {\n  allowEmptyColumn?: boolean;\n  throwOnError?: boolean;\n};\n\nexport function validateLayersByDatasets(\n  datasets: Datasets,\n  layerClasses: VisState['layerClasses'],\n  layers: NonNullable<ParsedConfig['visState']>['layers'] = [],\n  options?: ValidateLayerOption\n) {\n  const validated: Layer[] = [];\n  const failed: NonNullable<ParsedConfig['visState']>['layers'] = [];\n\n  layers.forEach(layer => {\n    let validateLayer: Layer | null = null;\n\n    if (layer?.config?.dataId) {\n      if (datasets[layer.config.dataId]) {\n        // datasets are already loaded\n        validateLayer = validateLayerWithData(\n          datasets[layer.config.dataId],\n          layer,\n          layerClasses,\n          options\n        );\n      }\n    }\n\n    if (validateLayer) {\n      validated.push(validateLayer);\n    } else {\n      // datasets not yet loaded\n      failed.push(layer);\n    }\n  });\n\n  return {validated, failed};\n}\n/**\n * Validate saved layer config with new data,\n * update fieldIdx based on new fields\n */\n// eslint-disable-next-line complexity\nexport function validateLayerWithData(\n  dataset: KeplerTable,\n  savedLayer: ParsedLayer,\n  layerClasses: VisState['layerClasses'],\n  options: ValidateLayerOption = {}\n): Layer | null {\n  const {fields, id: dataId} = dataset;\n  const {type} = savedLayer;\n  const {throwOnError} = options;\n  // layer doesnt have a valid type\n  if (!type || !layerClasses.hasOwnProperty(type) || !savedLayer.config) {\n    if (throwOnError) {\n      throw new Error(`Layer has invalid type \"${type}\" or config is missing`);\n    }\n    return null;\n  }\n\n  let newLayer = new layerClasses[type]({\n    id: savedLayer.id,\n    dataId,\n    label: savedLayer.config.label,\n    color: savedLayer.config.color,\n    isVisible: savedLayer.config.isVisible,\n    hidden: savedLayer.config.hidden,\n    highlightColor: savedLayer.config.highlightColor\n  });\n\n  // find column fieldIdx\n  const columnConfig = newLayer.getLayerColumns();\n  if (Object.keys(columnConfig)) {\n    const columns = validateSavedLayerColumns(\n      fields,\n      savedLayer.config.columns,\n      columnConfig,\n      options\n    );\n    if (columns) {\n      newLayer.updateLayerConfig({columns});\n    } else if (!options.allowEmptyColumn) {\n      return null;\n    }\n  }\n\n  const textLabel =\n    savedLayer.config.textLabel && newLayer.config.textLabel\n      ? validateSavedTextLabel(\n          fields,\n          newLayer.config.textLabel,\n          savedLayer.config.textLabel,\n          options\n        )\n      : newLayer.config.textLabel;\n\n  // copy visConfig over to emptyLayer to make sure it has all the props\n  const copiedVisConfig = newLayer.copyLayerConfig(\n    newLayer.config.visConfig,\n    savedLayer.config.visConfig || {},\n    {\n      shallowCopy: ['colorRange', 'strokeColorRange']\n    }\n  );\n\n  // call layer methods to validate visConfig when switching dataset\n  const visConfig = newLayer.validateVisConfig\n    ? newLayer.validateVisConfig(dataset, copiedVisConfig)\n    : copiedVisConfig;\n\n  newLayer.updateLayerConfig({\n    visConfig,\n    textLabel\n  });\n\n  // visual channel field is saved to be {name, type}\n  // find visual channel field by matching both name and type\n  // refer to vis-state-schema.js VisualChannelSchemaV1\n  newLayer = validateSavedVisualChannels(fields, newLayer, savedLayer, options);\n\n  if (throwOnError) {\n    if (!newLayer.isValidToSave()) {\n      throw new Error(`Layer is not valid to save: ${newLayer.id}`);\n    }\n  }\n\n  return newLayer;\n}\n\nexport function mergeEditor<S extends VisState>(state: S, savedEditor: SavedEditor) {\n  if (!savedEditor) {\n    return state;\n  }\n  return {\n    ...state,\n    editor: {\n      ...state.editor,\n      features: [...state.editor.features, ...(savedEditor.features || [])],\n      // if savedEditor.visible is undefined keep state.editor.visible\n      visible: savedEditor.visible ?? state.editor.visible\n    }\n  };\n}\n\n/**\n * Validate saved layer config with new data,\n * update fieldIdx based on new fields\n */\nexport function mergeDatasetsByOrder(state: VisState, newDataEntries: Datasets): Datasets {\n  const merged = {\n    ...state.datasets,\n    ...newDataEntries\n  };\n\n  if (Array.isArray(state.preserveDatasetOrder)) {\n    // preserveDatasetOrder  might not include the  new datasets\n    const newDatasetIds = Object.keys(merged).filter(\n      id => !state.preserveDatasetOrder?.includes(id)\n    );\n    return [...state.preserveDatasetOrder, ...newDatasetIds].reduce(\n      (accu, dataId) => ({\n        ...accu,\n        ...(merged[dataId] ? {[dataId]: merged[dataId]} : {})\n      }),\n      {}\n    );\n  }\n\n  return merged;\n}\n\nexport const VIS_STATE_MERGERS: VisStateMergers<any> = [\n  {\n    merge: mergeLayers,\n    prop: 'layers',\n    toMergeProp: 'layerToBeMerged',\n    preserveOrder: 'preserveLayerOrder'\n  },\n  {\n    merge: mergeFilters,\n    prop: 'filters',\n    toMergeProp: 'filterToBeMerged',\n    preserveOrder: 'preserveFilterOrder',\n    replaceParentDatasetIds: replaceFilterDatasetIds\n  },\n  {\n    merge: mergeEffects,\n    prop: 'effects'\n  },\n  {\n    merge: mergeInteractions,\n    prop: 'interactionConfig',\n    toMergeProp: 'interactionToBeMerged',\n    replaceParentDatasetIds: replaceInteractionDatasetIds,\n    saveUnmerged: savedUnmergedInteraction\n  },\n  {merge: mergeLayerBlending, prop: 'layerBlending'},\n  {merge: mergeOverlayBlending, prop: 'overlayBlending'},\n  {merge: mergeSplitMaps, prop: 'splitMaps', toMergeProp: 'splitMapsToBeMerged'},\n  {merge: mergeAnimationConfig, prop: 'animationConfig'},\n  {merge: mergeEditor, prop: 'editor'}\n];\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {getGlobalTaskQueue} from 'react-palm/tasks';\nimport {isObject, toArray} from '@kepler.gl/utils';\nimport {ValueOf} from '@kepler.gl/types';\nimport {VisState, Merger, PostMergerPayload} from '@kepler.gl/schemas';\n\nexport function isValidMerger(merger: Merger<any>): boolean {\n  return (\n    isObject(merger) &&\n    typeof merger.merge === 'function' &&\n    (typeof merger.prop === 'string' || Array.isArray(merger.prop))\n  );\n}\n\n/**\n * Call state updater, return the tasks created by the state update with withTask()\n */\nfunction callFunctionGetTask(fn: () => any): [any, any] {\n  const before = getGlobalTaskQueue();\n  const ret = fn();\n  const after = getGlobalTaskQueue();\n  const diff = after.filter(t => !before.includes(t));\n  return [ret, diff];\n}\n\nexport function mergeStateFromMergers<State extends VisState>(\n  state: State,\n  initialState: State,\n  mergers: Merger<any>[],\n  postMergerPayload: PostMergerPayload\n): {\n  mergedState: State;\n  allMerged: boolean;\n} {\n  // const newDataIds = Object.keys(postMergerPayload.newDataEntries);\n  let mergedState = state;\n  // merge state with config to be merged\n  const mergerQueue = [...mergers];\n\n  while (mergerQueue.length) {\n    const merger = mergerQueue.shift();\n\n    if (\n      merger &&\n      isValidMerger(merger) &&\n      merger.toMergeProp &&\n      hasPropsToMerge(state, merger.toMergeProp)\n    ) {\n      // put the rest of mergers and payload for postMergeUpdater in mergerActionPayload\n      // and pass it to current merger, which (if async) knows to continue merging\n      const mergerActionPayload = {\n        mergers: mergerQueue,\n        postMergerPayload\n      };\n      // reset toMerge\n      const toMerge = getPropValueToMerger(mergedState, merger.toMergeProp, merger.toMergeProp);\n\n      mergedState = resetStateToMergeProps(mergedState, initialState, merger.toMergeProp);\n      // call merger\n      // eslint-disable-next-line no-loop-func\n      const mergeFunc = () => merger.merge(mergedState, toMerge, false, mergerActionPayload);\n      const [updatedState, newTasks] = callFunctionGetTask(mergeFunc);\n\n      mergedState = updatedState;\n\n      // check if asyncTask was created (time consuming tasks)\n      if (newTasks.length && merger.waitToFinish) {\n        // skip rest, the async merger will call applyMergerupdater() to continue\n        return {mergedState, allMerged: false};\n      }\n    }\n  }\n\n  // we merged all mergers in the queue, and we can call post merger now\n  return {mergedState, allMerged: true};\n}\n\nexport function hasPropsToMerge<State extends {}>(\n  state: State,\n  mergerProps: string | string[]\n): boolean {\n  return Array.isArray(mergerProps)\n    ? Boolean(mergerProps.some(p => state.hasOwnProperty(p)))\n    : typeof mergerProps === 'string' && state.hasOwnProperty(mergerProps);\n}\n\nexport function getPropValueToMerger<State extends {}>(\n  state: State,\n  mergerProps: string | string[],\n  toMergeProps?: string | string[]\n): Partial<State> | ValueOf<State> {\n  return Array.isArray(mergerProps)\n    ? mergerProps.reduce((accu, p, i) => {\n        if (!toMergeProps) return accu;\n        return {...accu, [toMergeProps[i]]: state[p]};\n      }, {})\n    : state[mergerProps];\n}\n\nexport function resetStateToMergeProps<State extends VisState>(\n  state: State,\n  initialState: State,\n  mergerProps: string | string[]\n) {\n  return toArray(mergerProps).reduce(\n    (accu, prop) => ({\n      ...accu,\n      [prop]: initialState[prop]\n    }),\n    state\n  );\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport Console from 'global/console';\n\nconst identity = state => state;\n\n/** Returns a function that logs a value with a given message */\nexport function log(text: string): (value: any) => void {\n  return value => Console.log(text, value);\n}\n/** Wraps a value in an object and stores it the `payload` field */\nexport function payload_<P>(payload: P) {\n  return {payload};\n}\n/** Wraps a value in an object and stores it the `payload` field */\nexport function apply_<State, P>(\n  updater: (state: State, nextPayload: P) => State,\n  payload: P\n): (state: State) => State {\n  return state => updater(state, payload);\n}\n\ntype Arg<State> = (state: State) => (nextState: State) => State;\nexport function with_<State>(fn: Arg<State>): (state: State) => State {\n  return state => fn(state)(state);\n}\n\nexport function if_<State>(pred: boolean, fn: (state: State) => State): (state: State) => State {\n  return pred ? fn : identity;\n}\n\nexport function compose_<State>(fns: Array<(s: State) => State>): (s: State) => State {\n  return state => fns.reduce((state2, fn) => fn(state2), state);\n}\n/** Returns a reducer function that merges props with state */\nexport function merge_<Props>(obj: Props): <State>(state: State) => State {\n  return state => ({...state, ...obj});\n}\n\nexport function pick_<Prop extends string>(\n  prop: Prop\n): <Value>(fn: (p: Value) => Value) => <State extends Record<Prop, Value>>(state: State) => State {\n  return fn => state => ({...state, [prop]: fn(state[prop])});\n}\n\nexport function swap_<X extends {id: string}>(item: X): (arr: X[]) => X[] {\n  return arr => arr.map(a => (a.id === item.id ? item : a));\n}\n\nexport function map_<X, T>(fn: (state: X) => T): (arr: X[]) => T[] {\n  return arr => arr.map(e => fn(e));\n}\n\nexport function filterOutById<X extends {id: string}>(id: string): (arr: X[]) => X[] {\n  return arr => arr.filter(e => e.id !== id);\n}\n\nexport function removeElementAtIndex<X>(index: number): (arr: X[]) => X[] {\n  return arr => [...arr.slice(0, index), ...arr.slice(index + 1, arr.length)];\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {arrayMove} from '@dnd-kit/sortable';\nimport {GEOCODER_LAYER_ID} from '@kepler.gl/constants';\nimport {Layer as DeckLayer, LayerProps as DeckLayerProps} from '@deck.gl/core/typed';\nimport {\n  Field,\n  TooltipField,\n  CompareType,\n  SplitMapLayers,\n  InteractionConfig,\n  Editor,\n  Feature,\n  FeatureSelectionContext,\n  Viewport\n} from '@kepler.gl/types';\nimport {\n  FindDefaultLayerPropsReturnValue,\n  Layer,\n  LayerClassesType,\n  OVERLAY_TYPE_CONST,\n  getEditorLayer\n} from '@kepler.gl/layers';\n\nimport KeplerTable, {Datasets} from '@kepler.gl/table';\nimport {VisState} from '@kepler.gl/schemas';\nimport {isFunction, getMapLayersFromSplitMaps, DataRow} from '@kepler.gl/utils';\nimport {ThreeDBuildingLayer} from '@kepler.gl/deckgl-layers';\n\nexport type LayersToRender = {\n  [layerId: string]: boolean;\n};\n\nexport type AggregationLayerHoverData = {points: any[]; colorValue?: any; elevationValue?: any};\n\nexport type LayerHoverProp = {\n  data: DataRow | AggregationLayerHoverData | null;\n  fields: Field[];\n  fieldsToShow: TooltipField[];\n  layer: Layer;\n  primaryData?: DataRow | AggregationLayerHoverData | null;\n  compareType?: CompareType;\n};\n\n/**\n * Find default layers from fields\n */\nexport function findDefaultLayer(dataset: KeplerTable, layerClasses: LayerClassesType): Layer[] {\n  if (!dataset) {\n    return [];\n  }\n  const layerProps = (Object.keys(layerClasses) as Array<keyof LayerClassesType>).reduce(\n    (previous, lc) => {\n      const result: FindDefaultLayerPropsReturnValue =\n        typeof layerClasses[lc].findDefaultLayerProps === 'function'\n          ? layerClasses[lc].findDefaultLayerProps(dataset, previous)\n          : {props: []};\n\n      const props = Array.isArray(result) ? result : result.props || [];\n      const foundLayers = result.foundLayers || previous;\n\n      return foundLayers.concat(\n        props.map(p => ({\n          ...p,\n          type: lc,\n          dataId: dataset.id\n        }))\n      );\n    },\n    [] as LayerClassesType[keyof LayerClassesType][]\n  );\n\n  // go through all layerProps to create layer\n  return layerProps.map(props => {\n    // @ts-expect-error TODO: checking props.type !== null\n    const layer = new layerClasses[props.type](props);\n    return typeof layer.setInitialLayerConfig === 'function' && dataset.dataContainer\n      ? layer.setInitialLayerConfig(dataset)\n      : layer;\n  });\n}\n\ntype MinVisStateForLayerData = {\n  datasets: VisState['datasets'];\n  animationConfig: VisState['animationConfig'];\n};\n\n/**\n * Calculate layer data based on layer type, col Config,\n * return updated layer if colorDomain, dataMap has changed.\n * Also, returns updated layer in case the input layer was in invalid state.\n * Adds an error message to the layer in case of an exception.\n */\nexport function calculateLayerData<S extends MinVisStateForLayerData>(\n  layer: Layer,\n  state: S,\n  oldLayerData?: any\n): {\n  layerData: any;\n  layer: Layer;\n} {\n  let layerData;\n  try {\n    // Make sure the layer updates data after an error\n    if (!layer.isValid) {\n      layer._oldDataUpdateTriggers = undefined;\n    }\n\n    if (!layer.type || !layer.hasAllColumns() || !layer.config.dataId) {\n      return {layer, layerData: {}};\n    }\n\n    layerData = layer.formatLayerData(state.datasets, oldLayerData);\n\n    // At this point the data for the layer is updated without errors\n    if (!layer.isValid) {\n      // Switch to visible after an error\n      layer = layer.updateLayerConfig({\n        isVisible: true\n      });\n    }\n    layer.isValid = true;\n    layer.errorMessage = null;\n  } catch (err) {\n    layer = layer.updateLayerConfig({\n      isVisible: false\n    });\n    layer.isValid = false;\n\n    layer.errorMessage =\n      err instanceof Error && err.message ? err.message.substring(0, 100) : 'Unknown error';\n\n    layerData = {};\n  }\n\n  return {\n    layer,\n    layerData\n  };\n}\n\n/**\n * Calculate props passed to LayerHoverInfo\n * @type {typeof import('./layer-utils').getLayerHoverProp}\n */\nexport function getLayerHoverProp({\n  interactionConfig,\n  hoverInfo,\n  layers,\n  layersToRender,\n  datasets\n}: {\n  interactionConfig: InteractionConfig;\n  hoverInfo: any;\n  layers: Layer[];\n  layersToRender: LayersToRender;\n  datasets: Datasets;\n}): LayerHoverProp | null {\n  if (interactionConfig.tooltip.enabled && hoverInfo && hoverInfo.picked) {\n    // if anything hovered\n    const {object, layer: overlay} = hoverInfo;\n\n    // deckgl layer to kepler-gl layer\n    const layer = layers[overlay.props.idx];\n\n    // NOTE: for binary format GeojsonLayer, deck will return object=null but hoverInfo.index >= 0\n    if (\n      (object || hoverInfo.index >= 0) &&\n      layer &&\n      layer.getHoverData &&\n      layersToRender[layer.id]\n    ) {\n      // if layer is visible and have hovered data\n      const {\n        config: {dataId}\n      } = layer;\n      if (!dataId) {\n        return null;\n      }\n      const {dataContainer, fields} = datasets[dataId];\n      const data: DataRow | null = layer.getHoverData(\n        object || hoverInfo.index,\n        dataContainer,\n        fields\n      );\n      if (!data) {\n        return null;\n      }\n      const fieldsToShow = interactionConfig.tooltip.config.fieldsToShow[dataId];\n\n      return {\n        data,\n        fields,\n        fieldsToShow,\n        layer\n      };\n    }\n  }\n\n  return null;\n}\n\nexport function renderDeckGlLayer(props: any, layerCallbacks: {[key: string]: any}) {\n  const {\n    datasets,\n    layer,\n    layerIndex,\n    data,\n    hoverInfo,\n    clicked,\n    mapState,\n    interactionConfig,\n    animationConfig,\n    mapLayers\n  } = props;\n  const dataset = datasets[layer.config.dataId];\n  const {gpuFilter} = dataset || {};\n  const objectHovered = clicked || hoverInfo;\n  const visible = !mapLayers || (mapLayers && mapLayers[layer.id]);\n  // Layer is Layer class\n  return layer.renderLayer({\n    data,\n    gpuFilter,\n    idx: layerIndex,\n    interactionConfig,\n    layerCallbacks,\n    mapState,\n    animationConfig,\n    objectHovered,\n    visible\n  });\n}\n\nexport function isLayerRenderable(layer: Layer, layerData) {\n  return layer.id !== GEOCODER_LAYER_ID && layer.shouldRenderLayer(layerData);\n}\n\nexport function isLayerVisible(layer, mapLayers) {\n  return (\n    layer.config.isVisible &&\n    // if layer.id is not in mapLayers, don't render it\n    (!mapLayers || (mapLayers && mapLayers[layer.id]))\n  );\n}\n\n// Prepare a dict of layers rendered by the deck.gl\n// Note, isVisible: false layer is passed to deck.gl here\n// return {[id]: true \\ false}\nexport function prepareLayersForDeck(\n  layers: Layer[],\n  layerData: VisState['layerData']\n): {\n  [key: string]: boolean;\n} {\n  return layers.reduce(\n    (accu, layer, idx) => ({\n      ...accu,\n      [layer.id]:\n        isLayerRenderable(layer, layerData[idx]) && layer.overlayType === OVERLAY_TYPE_CONST.deckgl\n    }),\n    {}\n  );\n}\n\n// Prepare a dict of rendered layers rendered in the map\n// This includes only the visibile layers for single map view and split map view\n// return {[id]: true \\ false}\nexport function prepareLayersToRender(\n  layers: Layer[],\n  layerData: VisState['layerData'],\n  mapLayers?: SplitMapLayers | undefined | null\n): LayersToRender {\n  return layers.reduce(\n    (accu, layer, idx) => ({\n      ...accu,\n      [layer.id]: isLayerRenderable(layer, layerData[idx]) && isLayerVisible(layer, mapLayers)\n    }),\n    {}\n  );\n}\n\ntype CustomDeckLayer = DeckLayer<DeckLayerProps>;\n\nexport function getCustomDeckLayers(deckGlProps?: any): [CustomDeckLayer[], CustomDeckLayer[]] {\n  const bottomDeckLayers = Array.isArray(deckGlProps?.layers)\n    ? deckGlProps?.layers\n    : isFunction(deckGlProps?.layers)\n    ? deckGlProps?.layers()\n    : [];\n  const topDeckLayers = Array.isArray(deckGlProps?.topLayers)\n    ? deckGlProps?.topLayers\n    : isFunction(deckGlProps?.topLayers)\n    ? deckGlProps?.topLayers()\n    : [];\n\n  return [bottomDeckLayers, topDeckLayers];\n}\n\nexport type ComputeDeckLayersProps = {\n  mapIndex?: number;\n  mapboxApiAccessToken?: string;\n  mapboxApiUrl?: string;\n  primaryMap?: boolean;\n  layersForDeck?: {[key: string]: boolean};\n  editorInfo?: {\n    editor: Editor;\n    editorMenuActive: boolean;\n    onSetFeatures: (features: Feature[]) => any;\n    setSelectedFeature: (\n      feature: Feature | null,\n      selectionContext?: FeatureSelectionContext\n    ) => any;\n    featureCollection: {\n      type: string;\n      features: Feature[];\n    };\n    selectedFeatureIndexes: number[];\n    viewport: Viewport;\n  };\n};\n\nexport function bindLayerCallbacks(layerCallbacks: LayerCallbacks = {}, idx: number) {\n  return Object.keys(layerCallbacks).reduce(\n    (accu, key) => ({\n      ...accu,\n      [key]: val => layerCallbacks[key](idx, val)\n    }),\n    {} as Record<string, (_idx: number, val: any) => void>\n  );\n}\n\nexport type LayerCallbacks = {\n  onLayerHover?: (idx: number, value: any) => void;\n  onSetLayerDomain?: (idx: number, value: any) => void;\n};\n\n// eslint-disable-next-line complexity\nexport function computeDeckLayers(\n  {visState, mapState, mapStyle}: any,\n  options?: ComputeDeckLayersProps,\n  layerCallbacks?: LayerCallbacks,\n  deckGlProps?: any\n): Layer[] {\n  const {\n    datasets,\n    layers,\n    layerOrder,\n    layerData,\n    hoverInfo,\n    clicked,\n    interactionConfig,\n    animationConfig,\n    splitMaps\n  } = visState;\n\n  const {mapIndex, mapboxApiAccessToken, mapboxApiUrl, primaryMap, layersForDeck, editorInfo} =\n    options || {};\n\n  let dataLayers: any[] = [];\n\n  if (layerData && layerData.length) {\n    const mapLayers = getMapLayersFromSplitMaps(splitMaps, mapIndex || 0);\n\n    const currentLayersForDeck = layersForDeck || prepareLayersForDeck(layers, layerData);\n\n    dataLayers = layerOrder\n      .slice()\n      .reverse()\n      .filter(id => currentLayersForDeck[id])\n      .reduce((overlays, layerId) => {\n        const layerIndex = layers.findIndex(({id}) => id === layerId);\n        const bindedLayerCallbacks = layerCallbacks\n          ? bindLayerCallbacks(layerCallbacks, layerIndex)\n          : {};\n        const layer = layers[layerIndex];\n        const data = layerData[layerIndex];\n        const layerOverlay = renderDeckGlLayer(\n          {\n            datasets,\n            layer,\n            layerIndex,\n            data,\n            hoverInfo,\n            clicked,\n            mapState,\n            interactionConfig,\n            animationConfig,\n            mapLayers\n          },\n          bindedLayerCallbacks\n        );\n        return overlays.concat(layerOverlay || []);\n      }, []);\n  }\n\n  if (!primaryMap) {\n    return dataLayers;\n  }\n\n  if (\n    mapStyle?.visibleLayerGroups['3d building'] &&\n    primaryMap &&\n    mapboxApiAccessToken &&\n    mapboxApiUrl\n  ) {\n    dataLayers.push(\n      new ThreeDBuildingLayer({\n        id: '_keplergl_3d-building',\n        mapboxApiAccessToken,\n        mapboxApiUrl,\n        threeDBuildingColor: mapStyle.threeDBuildingColor,\n        updateTriggers: {\n          getFillColor: mapStyle.threeDBuildingColor\n        }\n      })\n    );\n  }\n\n  const [customBottomDeckLayers, customTopDeckLayers] = getCustomDeckLayers(deckGlProps);\n\n  const editorLayer: any[] = [];\n  if (editorInfo) {\n    editorLayer.push(\n      getEditorLayer({\n        ...editorInfo\n      })\n    );\n  }\n\n  return [...customBottomDeckLayers, ...dataLayers, ...customTopDeckLayers, ...editorLayer];\n}\n\nexport function getLayerOrderFromLayers<T extends {id: string}>(layers: T[]): string[] {\n  return layers.map(({id}) => id);\n}\n\nexport function reorderLayerOrder(\n  layerOrder: VisState['layerOrder'],\n  originLayerId: string,\n  destinationLayerId: string\n): VisState['layerOrder'] {\n  const activeIndex = layerOrder.indexOf(originLayerId);\n  const overIndex = layerOrder.indexOf(destinationLayerId);\n\n  return arrayMove(layerOrder, activeIndex, overIndex);\n}\n\nexport function addLayerToLayerOrder(\n  layerOrder: VisState['layerOrder'],\n  layerId: string\n): string[] {\n  return [layerId, ...layerOrder];\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {\n  DEFAULT_TOOLTIP_FIELDS,\n  ALL_FIELD_TYPES,\n  TRIP_POINT_FIELDS,\n  TOOLTIP_FORMATS,\n  TOOLTIP_KEY,\n  COMPARE_TYPES\n} from '@kepler.gl/constants';\n\nimport {Field, TooltipField, CompareType} from '@kepler.gl/types';\nimport {\n  DataRow,\n  parseFieldValue,\n  getFormatter,\n  isNumber,\n  defaultFormatter,\n  notNullorUndefined\n} from '@kepler.gl/utils';\n\n/**\n * Minus sign used in tooltip formatting.\n * \\u2212 or \\u002D is the minus sign that d3-format uses for decimal number formatting\n * d3-format 2.0 uses \\u002D\n */\nexport const TOOLTIP_MINUS_SIGN = '\\u2212';\n// both are posible negative signs\nexport const NEGATIVE_SIGNS = ['\\u002D', '\\u2212'];\n\nexport const BRUSH_CONFIG: {\n  range: [number, number];\n} = {\n  range: [0, 50]\n};\n\nexport function findFieldsToShow({\n  fields,\n  id,\n  maxDefaultTooltips\n}: {\n  fields: Field[];\n  id: string;\n  maxDefaultTooltips: number;\n}): {\n  [key: string]: string[];\n} {\n  // first find default tooltip fields for trips\n  const fieldsToShow = DEFAULT_TOOLTIP_FIELDS.reduce((prev, curr) => {\n    if (fields.find(({name}) => curr.name === name)) {\n      // @ts-ignore\n      prev.push(curr);\n    }\n    return prev;\n  }, []);\n\n  return {\n    [id]: fieldsToShow.length ? fieldsToShow : autoFindTooltipFields(fields, maxDefaultTooltips)\n  };\n}\n\nfunction autoFindTooltipFields(fields, maxDefaultTooltips) {\n  const ptFields = _mergeFieldPairs(TRIP_POINT_FIELDS);\n  // filter out the default fields that contains lat and lng and any geometry\n  const fieldsToShow = fields.filter(\n    ({name, type}) =>\n      name\n        .replace(/[_,.]+/g, ' ')\n        .trim()\n        .split(' ')\n        .every(seg => !ptFields.includes(seg)) &&\n      type !== ALL_FIELD_TYPES.geojson &&\n      type !== ALL_FIELD_TYPES.geoarrow &&\n      type !== 'object'\n  );\n\n  return fieldsToShow.slice(0, maxDefaultTooltips).map(({name}) => {\n    return {\n      name,\n      format: null\n    };\n  });\n}\n\nfunction _mergeFieldPairs(pairs) {\n  return pairs.reduce((prev, pair) => [...prev, ...pair], []);\n}\n\nexport function getTooltipDisplayDeltaValue({\n  primaryData,\n  field,\n  compareType,\n  data,\n  fieldIdx\n}: {\n  field: Field;\n  data: DataRow;\n  fieldIdx: number;\n  primaryData: DataRow;\n  compareType: CompareType;\n}): string | null {\n  let displayDeltaValue: string | null = null;\n\n  if (\n    primaryData &&\n    // comparison mode only works for numeric field\n    (field.type === ALL_FIELD_TYPES.integer || field.type === ALL_FIELD_TYPES.real)\n  ) {\n    const baseDp = primaryData.valueAt(fieldIdx);\n    const dp = data.valueAt(fieldIdx);\n    if (isNumber(baseDp) && isNumber(dp)) {\n      const deltaValue = compareType === COMPARE_TYPES.RELATIVE ? dp / baseDp - 1 : dp - baseDp;\n      const deltaFormat =\n        compareType === COMPARE_TYPES.RELATIVE\n          ? TOOLTIP_FORMATS.DECIMAL_PERCENT_FULL_2[TOOLTIP_KEY]\n          : field.displayFormat || TOOLTIP_FORMATS.DECIMAL_DECIMAL_FIXED_3[TOOLTIP_KEY];\n\n      displayDeltaValue = getFormatter(deltaFormat, field)(deltaValue);\n\n      // safely cast string\n      displayDeltaValue = defaultFormatter(displayDeltaValue) as string;\n      const deltaFirstChar = displayDeltaValue.charAt(0);\n\n      if (deltaFirstChar !== '+' && !NEGATIVE_SIGNS.includes(deltaFirstChar)) {\n        displayDeltaValue = `+${displayDeltaValue}`;\n      }\n    } else {\n      displayDeltaValue = TOOLTIP_MINUS_SIGN;\n    }\n  }\n\n  return displayDeltaValue;\n}\n\nexport function getTooltipDisplayValue({\n  item,\n  field,\n  value\n}: {\n  item: TooltipField | undefined;\n  field: Field;\n  value: any;\n}): string {\n  if (!notNullorUndefined(value)) {\n    return '';\n  }\n\n  return item?.format\n    ? getFormatter(item?.format, field)(value)\n    : field.displayFormat\n    ? getFormatter(field.displayFormat, field)(value)\n    : parseFieldValue(value, field.type);\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport bbox from '@turf/bbox';\nimport {console as Console} from 'global/window';\nimport {disableStackCapturing, withTask} from 'react-palm/tasks';\nimport cloneDeep from 'lodash.clonedeep';\nimport uniq from 'lodash.uniq';\nimport get from 'lodash.get';\nimport xor from 'lodash.xor';\nimport pick from 'lodash.pick';\nimport isEqual from 'lodash.isequal';\nimport copy from 'copy-to-clipboard';\nimport deepmerge from 'deepmerge';\n// Tasks\nimport {LOAD_FILE_TASK, UNWRAP_TASK, PROCESS_FILE_DATA, DELAY_TASK} from '@kepler.gl/tasks';\n// Actions\nimport {\n  applyLayerConfig,\n  layerConfigChange,\n  layerTypeChange,\n  layerVisConfigChange,\n  layerVisualChannelConfigChange,\n  loadFilesErr,\n  loadFilesSuccess,\n  loadFileStepSuccess,\n  loadNextFile,\n  nextFileBatch,\n  ReceiveMapConfigPayload,\n  VisStateActions,\n  MapStateActions,\n  processFileContent,\n  ActionTypes\n} from '@kepler.gl/actions';\n\n// Utils\nimport {\n  set,\n  toArray,\n  arrayInsert,\n  generateHashId,\n  isPlainObject,\n  isObject,\n  addNewLayersToSplitMap,\n  computeSplitMapLayers,\n  removeLayerFromSplitMaps,\n  isRgbColor,\n  parseFieldValue,\n  applyFilterFieldName,\n  applyFiltersToDatasets,\n  featureToFilterValue,\n  filterDatasetCPU,\n  FILTER_UPDATER_PROPS,\n  generatePolygonFilter,\n  getDefaultFilter,\n  getFilterIdInFeature,\n  getTimeWidgetTitleFormatter,\n  isInRange,\n  LIMITED_FILTER_EFFECT_PROPS,\n  updateFilterDataId,\n  getFilterPlot,\n  getDefaultFilterPlotType\n} from '@kepler.gl/utils';\n\n// Mergers\nimport {\n  VIS_STATE_MERGERS,\n  validateLayerWithData,\n  createLayerFromConfig,\n  serializeLayer,\n  serializeVisState,\n  parseLayerConfig\n} from './vis-state-merger';\nimport {mergeStateFromMergers, isValidMerger} from './merger-handler';\nimport {Layer, LayerClasses, LAYER_ID_LENGTH} from '@kepler.gl/layers';\nimport {\n  EDITOR_MODES,\n  SORT_ORDER,\n  FILTER_TYPES,\n  FILTER_VIEW_TYPES,\n  MAX_DEFAULT_TOOLTIPS,\n  DEFAULT_TEXT_LABEL,\n  COMPARE_TYPES\n} from '@kepler.gl/constants';\nimport {\n  pick_,\n  merge_,\n  swap_,\n  apply_,\n  compose_,\n  removeElementAtIndex,\n  filterOutById\n} from './composer-helpers';\n\nimport KeplerGLSchema, {VisState, Merger, PostMergerPayload} from '@kepler.gl/schemas';\n\nimport {Filter, InteractionConfig, AnimationConfig, Editor, Field} from '@kepler.gl/types';\nimport {Loader} from '@loaders.gl/loader-utils';\n\nimport {calculateLayerData, findDefaultLayer, getLayerOrderFromLayers} from './layer-utils';\nimport {\n  copyTableAndUpdate,\n  Datasets,\n  pinTableColumns,\n  sortDatasetByColumn,\n  assignGpuChannel,\n  setFilterGpuMode,\n  createNewDataEntry\n} from '@kepler.gl/table';\nimport {findFieldsToShow} from './interaction-utils';\nimport {hasPropsToMerge, getPropValueToMerger} from './merger-handler';\nimport {mergeDatasetsByOrder} from './vis-state-merger';\nimport {fixEffectOrder} from '@kepler.gl/utils';\nimport {createEffect} from '@kepler.gl/effects';\n\n// react-palm\n// disable capture exception for react-palm call to withTask\ndisableStackCapturing();\n\n/**\n * Updaters for `visState` reducer. Can be used in your root reducer to directly modify kepler.gl's state.\n * Read more about [Using updaters](../advanced-usage/using-updaters.md)\n *\n * @public\n * @example\n *\n * import keplerGlReducer, {visStateUpdaters} from 'kepler.gl/reducers';\n * // Root Reducer\n * const reducers = combineReducers({\n *  keplerGl: keplerGlReducer,\n *  app: appReducer\n * });\n *\n * const composedReducer = (state, action) => {\n *  switch (action.type) {\n *    case 'CLICK_BUTTON':\n *      return {\n *        ...state,\n *        keplerGl: {\n *          ...state.keplerGl,\n *          foo: {\n *             ...state.keplerGl.foo,\n *             visState: visStateUpdaters.enlargeFilterUpdater(\n *               state.keplerGl.foo.visState,\n *               {idx: 0}\n *             )\n *          }\n *        }\n *      };\n *  }\n *  return reducers(state, action);\n * };\n *\n * export default composedReducer;\n */\n/* eslint-disable no-unused-vars */\n// @ts-ignore\nconst visStateUpdaters = null;\n/* eslint-enable no-unused-vars */\n\nexport const defaultInteractionConfig: InteractionConfig = {\n  tooltip: {\n    id: 'tooltip',\n    label: 'interactions.tooltip',\n    enabled: true,\n    config: {\n      fieldsToShow: {},\n      compareMode: false,\n      compareType: COMPARE_TYPES.ABSOLUTE\n    }\n  },\n  geocoder: {\n    id: 'geocoder',\n    label: 'interactions.geocoder',\n    enabled: false,\n    position: null\n  },\n  brush: {\n    id: 'brush',\n    label: 'interactions.brush',\n    enabled: false,\n    config: {\n      // size is in km\n      size: 0.5\n    }\n  },\n  coordinate: {\n    id: 'coordinate',\n    label: 'interactions.coordinate',\n    enabled: false,\n    position: null\n  }\n};\n\nexport const DEFAULT_ANIMATION_CONFIG: AnimationConfig = {\n  domain: null,\n  currentTime: null,\n  speed: 1,\n  isAnimating: false,\n  timeFormat: null,\n  timezone: null,\n  defaultTimeFormat: null,\n  hideControl: false,\n  duration: null\n};\n\nexport const DEFAULT_EDITOR: Editor = {\n  mode: EDITOR_MODES.DRAW_POLYGON,\n  features: [],\n  selectedFeature: null,\n  visible: true\n};\n\n/**\n * Default initial `visState`\n * @memberof visStateUpdaters\n * @constant\n * @public\n */\nexport const INITIAL_VIS_STATE: VisState = {\n  // map info\n  mapInfo: {\n    title: '',\n    description: ''\n  },\n  // layers\n  layers: [],\n  layerData: [],\n  layerToBeMerged: [],\n  layerOrder: [],\n\n  // filters\n  filters: [],\n  filterToBeMerged: [],\n\n  // a collection of multiple dataset\n  datasets: {},\n  editingDataset: undefined,\n\n  // effects\n  effects: [],\n  effectOrder: [],\n\n  interactionConfig: defaultInteractionConfig,\n  interactionToBeMerged: {},\n\n  layerBlending: 'normal',\n  overlayBlending: 'normal',\n  hoverInfo: undefined,\n  clicked: undefined,\n  mousePos: {},\n  maxDefaultTooltips: MAX_DEFAULT_TOOLTIPS,\n\n  // this is used when user split maps\n  splitMaps: [\n    // this will contain a list of objects to\n    // describe the state of layer availability and visibility for each map\n    // [\n    //   {\n    //      layers: {layer_id: true | false}\n    //   }\n    // ]\n  ],\n  splitMapsToBeMerged: [],\n  isMergingDatasets: {},\n  // defaults layer classes\n  layerClasses: LayerClasses,\n\n  // default animation\n  // time in unix timestamp (milliseconds) (the number of seconds since the Unix Epoch)\n  animationConfig: DEFAULT_ANIMATION_CONFIG,\n\n  editor: DEFAULT_EDITOR,\n\n  fileLoading: false,\n  fileLoadingProgress: {},\n\n  loaders: [],\n  loadOptions: {},\n\n  // visStateMergers\n  mergers: VIS_STATE_MERGERS,\n\n  // kepler schemas\n  schema: KeplerGLSchema\n};\n\ntype UpdateStateWithLayerAndDataType = {\n  layers: Layer[];\n  layerData: any[];\n};\n\n/**\n * Update state with updated layer and layerData\n *\n */\nexport function updateStateWithLayerAndData<S extends UpdateStateWithLayerAndDataType>(\n  state: S,\n  {layerData, layer, idx}: {layerData?: any; layer: Layer; idx: number}\n): S {\n  return {\n    ...state,\n    layers: state.layers.map((lyr, i) => (i === idx ? layer : lyr)),\n    layerData: layerData\n      ? state.layerData.map((d, i) => (i === idx ? layerData : d))\n      : state.layerData\n  };\n}\n\nexport function updateStateOnLayerVisibilityChange<S extends VisState>(state: S, layer: Layer): S {\n  let newState = state;\n  if (state.splitMaps.length) {\n    newState = {\n      ...state,\n      splitMaps: layer.config.isVisible\n        ? addNewLayersToSplitMap(state.splitMaps, layer)\n        : removeLayerFromSplitMaps(state.splitMaps, layer)\n    };\n  }\n\n  if (layer.config.animation.enabled) {\n    newState = updateAnimationDomain(state);\n  }\n\n  return newState;\n}\n\n/**\n * Compares two objects (or arrays) and returns a new object with only the\n * properties that have changed between the two objects.\n */\nfunction pickChangedProps<T>(prev: T, next: T): Partial<T> {\n  const changedProps: Partial<T> = {};\n  const pickPropsOf = obj => {\n    Object.keys(obj).forEach(key => {\n      if (!changedProps.hasOwnProperty(key) && !isEqual(prev[key], next[key])) {\n        changedProps[key] = next[key];\n      }\n    });\n  };\n  pickPropsOf(prev);\n  pickPropsOf(next);\n  return changedProps;\n}\n\nconst VISUAL_CHANNEL_PROP_TYPES = ['field', 'scale', 'domain', 'aggregation'];\n\n/**\n * Apply layer config\n * @memberof visStateUpdaters\n * @returns nextState\n */\n// eslint-disable-next-line complexity, max-statements\nexport function applyLayerConfigUpdater(\n  state: VisState,\n  action: VisStateActions.ApplyLayerConfigUpdaterAction\n): VisState {\n  const {oldLayerId, newLayerConfig, layerIndex} = action;\n  const newParsedLayer =\n    // will move visualChannels to the config prop\n    parseLayerConfig(state.schema, newLayerConfig);\n  const oldLayer = state.layers.find(l => l.id === oldLayerId);\n  if (!oldLayer || !newParsedLayer) {\n    return state;\n  }\n  if (layerIndex !== null && layerIndex !== undefined && state.layers[layerIndex] !== oldLayer) {\n    // layerIndex is provided, but it doesn't match the oldLayer\n    return state;\n  }\n  const dataset = state.datasets[newParsedLayer.config.dataId];\n  if (!dataset) {\n    return state;\n  }\n  // Make sure the layer is valid and convert it to Layer\n  const newLayer = validateLayerWithData(dataset, newParsedLayer, state.layerClasses);\n  if (!newLayer) {\n    return state;\n  }\n\n  let nextState = state;\n\n  if (newLayer.type && newLayer.type !== oldLayer.type) {\n    const oldLayerIndex = state.layers.findIndex(l => l.id === oldLayerId);\n    if (oldLayerIndex >= 0) {\n      nextState = layerTypeChangeUpdater(nextState, layerTypeChange(oldLayer, newLayer.type));\n      // layerTypeChangeUpdater changes the id of the layer, so we need to obtain the new id\n      // but first make sure that the layer was not removed\n      if (nextState.layers.length === state.layers.length) {\n        const newLayerId = nextState.layers[oldLayerIndex].id;\n        nextState = applyLayerConfigUpdater(\n          nextState,\n          applyLayerConfig(newLayerId, {...newLayerConfig, id: newLayerId})\n        );\n      }\n    }\n    return nextState;\n  }\n\n  // serializeLayer() might return null if the old layer is not valid,\n  // we should still apply the changes in that case\n  const serializedOldLayer = serializeLayer(oldLayer, state.schema) ?? {config: {}};\n  const serializedNewLayer = serializeLayer(newLayer, state.schema);\n  if (!serializedNewLayer) {\n    return state;\n  }\n  if (!isEqual(serializedOldLayer, serializedNewLayer)) {\n    const changed = pickChangedProps(serializedOldLayer.config, serializedNewLayer.config);\n\n    if ('visConfig' in changed) {\n      if (changed.visConfig) {\n        nextState = layerVisConfigChangeUpdater(\n          nextState,\n          layerVisConfigChange(oldLayer, changed.visConfig)\n        );\n      }\n      delete changed.visConfig;\n    }\n\n    Object.keys(oldLayer.visualChannels).forEach(channelName => {\n      const channel = oldLayer.visualChannels[channelName];\n      const channelPropNames = VISUAL_CHANNEL_PROP_TYPES.map(prop => channel[prop]);\n      if (channelPropNames.some(prop => prop in changed)) {\n        nextState = layerVisualChannelChangeUpdater(\n          nextState,\n          layerVisualChannelConfigChange(\n            oldLayer,\n            pick(newLayer.config, channelPropNames),\n            channelName\n          )\n        );\n        for (const prop of channelPropNames) {\n          delete changed[prop];\n        }\n      }\n    });\n\n    if (Object.keys(changed).length > 0) {\n      nextState = layerConfigChangeUpdater(\n        nextState,\n        layerConfigChange(oldLayer, pick(newLayer.config, Object.keys(changed)))\n      );\n    }\n  }\n\n  return nextState;\n}\n\n/**\n * Update layer base config: dataId, label, column, isVisible\n * @memberof visStateUpdaters\n * @returns nextState\n */\n// eslint-disable-next-line complexity\nexport function layerConfigChangeUpdater(\n  state: VisState,\n  action: VisStateActions.LayerConfigChangeUpdaterAction\n): VisState {\n  const {oldLayer} = action;\n  const idx = state.layers.findIndex(l => l.id === oldLayer.id);\n  const props = Object.keys(action.newConfig);\n  if (\n    typeof action.newConfig.dataId === 'string' &&\n    action.newConfig.dataId !== oldLayer.config.dataId\n  ) {\n    const {dataId, ...restConfig} = action.newConfig;\n    const stateWithDataId = layerDataIdChangeUpdater(state, {\n      oldLayer,\n      newConfig: {dataId}\n    });\n    const nextLayer = stateWithDataId.layers.find(l => l.id === oldLayer.id);\n    return nextLayer && Object.keys(restConfig).length\n      ? layerConfigChangeUpdater(stateWithDataId, {oldLayer: nextLayer, newConfig: restConfig})\n      : stateWithDataId;\n  }\n\n  let newLayer = oldLayer.updateLayerConfig(action.newConfig);\n\n  let layerData;\n\n  if (newLayer.shouldCalculateLayerData(props)) {\n    const oldLayerData = state.layerData[idx];\n\n    const updateLayerDataResult = calculateLayerData(newLayer, state, oldLayerData);\n    newLayer = updateLayerDataResult.layer;\n    layerData = updateLayerDataResult.layerData;\n  }\n\n  let newState = state;\n  if ('isVisible' in action.newConfig) {\n    newState = updateStateOnLayerVisibilityChange(state, newLayer);\n  }\n\n  return updateStateWithLayerAndData(newState, {\n    layer: newLayer,\n    layerData,\n    idx\n  });\n}\n\n/**\n * Updates isValid flag of a layer.\n * Updates isVisible based on the value of isValid.\n * Triggers update of data for the layer in order to get errors again during next update iteration.\n * @memberof visStateUpdaters\n * @returns nextState\n */\nexport function layerSetIsValidUpdater(\n  state: VisState,\n  action: VisStateActions.LayerSetIsValidUpdaterAction\n): VisState {\n  const {oldLayer, isValid} = action;\n\n  const idx = state.layers.findIndex(l => l.id === oldLayer.id);\n  const layerToUpdate = state.layers[idx];\n  if (layerToUpdate) {\n    let newLayer;\n    let newData = null;\n\n    if (isValid) {\n      // Trigger data update in order to show errors again if present.\n      const {layer, layerData} = calculateLayerData(layerToUpdate, state, undefined);\n      newLayer = layer;\n      newData = layerData;\n    } else {\n      newLayer = layerToUpdate.updateLayerConfig({\n        isVisible: false\n      });\n      newLayer.isValid = false;\n    }\n\n    return updateStateWithLayerAndData(state, {idx, layer: newLayer, layerData: newData});\n  }\n\n  return state;\n}\n\nfunction addOrRemoveTextLabels(newFields, textLabel, defaultTextLabel = DEFAULT_TEXT_LABEL) {\n  let newTextLabel = textLabel.slice();\n\n  const currentFields = textLabel.map(tl => tl.field && tl.field.name).filter(d => d);\n\n  const addFields = newFields.filter(f => !currentFields.includes(f.name));\n  const deleteFields = currentFields.filter(f => !newFields.find(fd => fd.name === f));\n\n  // delete\n  newTextLabel = newTextLabel.filter(tl => tl.field && !deleteFields.includes(tl.field.name));\n  newTextLabel = !newTextLabel.length ? [defaultTextLabel] : newTextLabel;\n\n  // add\n  newTextLabel = [\n    ...newTextLabel.filter(tl => tl.field),\n    ...addFields.map(af => ({\n      ...defaultTextLabel,\n      field: af\n    }))\n  ];\n\n  return newTextLabel;\n}\n\nfunction updateTextLabelPropAndValue(idx, prop, value, textLabel) {\n  if (!textLabel[idx].hasOwnProperty(prop)) {\n    return textLabel;\n  }\n\n  let newTextLabel = textLabel.slice();\n\n  if (prop === 'field' && value === null && textLabel.length > 1) {\n    // remove label when field value is set to null\n    newTextLabel.splice(idx, 1);\n  } else if (prop) {\n    newTextLabel = textLabel.map((tl, i) => (i === idx ? {...tl, [prop]: value} : tl));\n  }\n\n  return newTextLabel;\n}\n\n/**\n * Update layer base config: dataId, label, column, isVisible\n * @memberof visStateUpdaters\n * @returns nextState\n */\nexport function layerTextLabelChangeUpdater(\n  state: VisState,\n  action: VisStateActions.LayerTextLabelChangeUpdaterAction\n): VisState {\n  const {oldLayer, idx, prop, value} = action;\n  const {textLabel} = oldLayer.config;\n\n  // when adding a new empty text label,\n  // rely on the layer's default config, or use the constant DEFAULT_TEXT_LABEL\n  const defaultTextLabel =\n    oldLayer.getDefaultLayerConfig({dataId: ''})?.textLabel?.[0] ?? DEFAULT_TEXT_LABEL;\n\n  let newTextLabel = textLabel.slice();\n  if (!textLabel[idx] && idx === textLabel.length) {\n    // if idx is set to length, add empty text label\n    newTextLabel = [...textLabel, defaultTextLabel];\n  }\n\n  if (idx === 'all' && prop === 'fields') {\n    newTextLabel = addOrRemoveTextLabels(value, textLabel, defaultTextLabel);\n  } else {\n    newTextLabel = updateTextLabelPropAndValue(idx, prop, value, newTextLabel);\n  }\n  // update text label prop and value\n  return layerConfigChangeUpdater(state, {\n    oldLayer,\n    newConfig: {textLabel: newTextLabel}\n  });\n}\n\nfunction validateExistingLayerWithData(dataset, layerClasses, layer, schema) {\n  const loadedLayer = serializeLayer(layer, schema);\n  return loadedLayer\n    ? validateLayerWithData(dataset, loadedLayer, layerClasses, {\n        allowEmptyColumn: true\n      })\n    : null;\n}\n\n/**\n * Update layer config dataId\n * @memberof visStateUpdaters\n * @returns nextState\n */\nexport function layerDataIdChangeUpdater(\n  state: VisState,\n  action: {\n    oldLayer: Layer;\n    newConfig: {\n      dataId: string;\n    };\n  }\n): VisState {\n  const {oldLayer, newConfig} = action;\n  const {dataId} = newConfig;\n\n  if (!oldLayer || !state.datasets[dataId]) {\n    return state;\n  }\n  const idx = state.layers.findIndex(l => l.id === oldLayer.id);\n\n  let newLayer = oldLayer.updateLayerConfig({dataId});\n  // this may happen when a layer is new (type: null and no columns) but it's not ready to be saved\n  if (newLayer.isValidToSave()) {\n    const validated = validateExistingLayerWithData(\n      state.datasets[dataId],\n      state.layerClasses,\n      newLayer,\n      state.schema\n    );\n    // if cant validate it with data create a new one\n    if (!validated) {\n      // @ts-expect-error TODO: checking oldLayer.type !== null\n      newLayer = new state.layerClasses[oldLayer.type]({dataId, id: oldLayer.id});\n    } else {\n      newLayer = validated;\n    }\n  }\n\n  newLayer = newLayer.updateLayerConfig({\n    isVisible: oldLayer.config.isVisible,\n    isConfigActive: true\n  });\n\n  newLayer.updateLayerDomain(state.datasets);\n  const {layerData, layer} = calculateLayerData(newLayer, state, undefined);\n\n  return updateStateWithLayerAndData(state, {layerData, layer, idx});\n}\n\nexport function setInitialLayerConfig(layer, datasets, layerClasses): Layer {\n  let newLayer = layer;\n  if (!Object.keys(datasets).length) {\n    // no data is loaded\n    return layer;\n  }\n  if (!layer.config.dataId) {\n    // set layer dataId\n    newLayer = layer.updateLayerConfig({dataId: Object.keys(datasets)[0]});\n  }\n  const dataset = datasets[newLayer.config.dataId];\n  if (!dataset) {\n    return layer;\n  }\n\n  // find defaut layer props\n  const result =\n    typeof layerClasses[newLayer.type].findDefaultLayerProps === 'function'\n      ? layerClasses[newLayer.type].findDefaultLayerProps(dataset, [])\n      : {props: []};\n\n  // an array of possible props, use 1st one\n  const props = Array.isArray(result) ? result : result.props || [];\n\n  if (props.length) {\n    newLayer = new layerClasses[layer.type]({\n      ...props[0],\n      label: newLayer.config.label,\n      dataId: newLayer.config.dataId,\n      isVisible: true,\n      isConfigActive: newLayer.config.isConfigActive\n    });\n\n    return typeof newLayer.setInitialLayerConfig === 'function'\n      ? newLayer.setInitialLayerConfig(dataset)\n      : newLayer;\n  }\n\n  return newLayer;\n}\n/**\n * Update layer type. Previews layer config will be copied if applicable.\n * @memberof visStateUpdaters\n * @public\n */\nexport function layerTypeChangeUpdater(\n  state: VisState,\n  action: VisStateActions.LayerTypeChangeUpdaterAction\n): VisState {\n  const {oldLayer, newType} = action;\n  if (!oldLayer) {\n    return state;\n  }\n  const oldId = oldLayer.id;\n  const idx = state.layers.findIndex(l => l.id === oldId);\n\n  if (!state.layerClasses[newType]) {\n    Console.error(`${newType} is not a valid layer type`);\n    return state;\n  }\n  let newLayer = new state.layerClasses[newType]({\n    // keep old layer lable and isConfigActive\n    label: oldLayer.config.label,\n    isConfigActive: oldLayer.config.isConfigActive,\n    dataId: oldLayer.config.dataId\n  });\n\n  if (!oldLayer.type) {\n    // if setting layer type on an empty layer\n    newLayer = setInitialLayerConfig(newLayer, state.datasets, state.layerClasses);\n  } else {\n    // get a mint layer, with new id and type\n    // because deck.gl uses id to match between new and old layer.\n    // If type has changed but id is the same, it will break\n    newLayer.assignConfigToLayer(oldLayer.config, oldLayer.visConfigSettings);\n    newLayer.updateLayerDomain(state.datasets);\n  }\n\n  const {clicked, hoverInfo} = state;\n\n  let newState = {\n    ...state,\n    clicked: oldLayer.isLayerHovered(clicked) ? undefined : clicked,\n    hoverInfo: oldLayer.isLayerHovered(hoverInfo) ? undefined : hoverInfo\n  };\n\n  const {layerData, layer} = calculateLayerData(newLayer, newState);\n  newState = updateStateWithLayerAndData(newState, {layerData, layer, idx});\n\n  if (layer.config.animation.enabled || oldLayer.config.animation.enabled) {\n    newState = updateAnimationDomain(newState);\n  }\n\n  // update splitMap layer id\n  if (state.splitMaps.length) {\n    newState = {\n      ...newState,\n      splitMaps: newState.splitMaps.map(settings => {\n        const {[oldId]: oldLayerMap, ...otherLayers} = settings.layers;\n        return oldId in settings.layers\n          ? {\n              ...settings,\n              layers: {\n                ...otherLayers,\n                [layer.id]: oldLayerMap\n              }\n            }\n          : settings;\n      })\n    };\n  }\n\n  // update layerOrder with new id\n  newState = {\n    ...newState,\n    layerOrder: newState.layerOrder.map(layerId =>\n      layerId === oldLayer.id ? newLayer.id : layerId\n    )\n  };\n\n  return newState;\n}\n\n/**\n * Update layer visual channel\n * @memberof visStateUpdaters\n * @returns {Object} nextState\n * @public\n */\nexport function layerVisualChannelChangeUpdater(\n  state: VisState,\n  action: VisStateActions.LayerVisualChannelConfigChangeUpdaterAction\n): VisState {\n  const {oldLayer, newConfig, channel} = action;\n  if (!oldLayer.config.dataId) {\n    return state;\n  }\n  const dataset = state.datasets[oldLayer.config.dataId];\n\n  const idx = state.layers.findIndex(l => l.id === oldLayer.id);\n  const newLayer = oldLayer.updateLayerConfig(newConfig);\n\n  newLayer.updateLayerVisualChannel(dataset, channel);\n\n  const oldLayerData = state.layerData[idx];\n  const {layerData, layer} = calculateLayerData(newLayer, state, oldLayerData);\n\n  return updateStateWithLayerAndData(state, {layerData, layer, idx});\n}\n\n/**\n * Update layer `visConfig`\n * @memberof visStateUpdaters\n * @public\n */\nexport function layerVisConfigChangeUpdater(\n  state: VisState,\n  action: VisStateActions.LayerVisConfigChangeUpdaterAction\n): VisState {\n  const {oldLayer} = action;\n  const idx = state.layers.findIndex(l => l.id === oldLayer.id);\n  const props = Object.keys(action.newVisConfig);\n  const newVisConfig = {\n    ...oldLayer.config.visConfig,\n    ...action.newVisConfig\n  };\n\n  const newLayer = oldLayer.updateLayerConfig({visConfig: newVisConfig});\n\n  if (newLayer.shouldCalculateLayerData(props)) {\n    const oldLayerData = state.layerData[idx];\n    const {layerData, layer} = calculateLayerData(newLayer, state, oldLayerData);\n    return updateStateWithLayerAndData(state, {layerData, layer, idx});\n  }\n\n  return updateStateWithLayerAndData(state, {layer: newLayer, idx});\n}\n\n/**\n * Update filter property\n * @memberof visStateUpdaters\n * @public\n */\nexport function setFilterAnimationTimeUpdater(\n  state: VisState,\n  action: VisStateActions.SetFilterAnimationTimeUpdaterAction\n): VisState {\n  return setFilterUpdater(state, action);\n}\n\n/**\n * Update filter animation window\n * @memberof visStateUpdaters\n * @public\n */\nexport function setFilterAnimationWindowUpdater(\n  state: VisState,\n  {id, animationWindow}: VisStateActions.SetFilterAnimationWindowUpdaterAction\n): VisState {\n  return {\n    ...state,\n    filters: state.filters.map(f =>\n      f.id === id\n        ? {\n            ...f,\n            animationWindow\n          }\n        : f\n    )\n  };\n}\n/**\n * Update filter property\n * @memberof visStateUpdaters\n * @public\n */\nexport function setFilterUpdater(\n  state: VisState,\n  action: VisStateActions.SetFilterUpdaterAction\n): VisState {\n  const {idx, prop, value, valueIndex = 0} = action;\n  const oldFilter = state.filters[idx];\n\n  if (!oldFilter) {\n    Console.error(`filters.${idx} is undefined`);\n    return state;\n  }\n  let newFilter = set([prop], value, oldFilter);\n  let newState = state;\n\n  const {dataId} = newFilter;\n\n  // Ensuring backward compatibility\n  let datasetIds = toArray(dataId);\n\n  switch (prop) {\n    // TODO: Next PR for UI if we update dataId, we need to consider two cases:\n    // 1. dataId is empty: create a default filter\n    // 2. Add a new dataset id\n    case FILTER_UPDATER_PROPS.dataId:\n      // if trying to update filter dataId. create an empty new filter\n      newFilter = updateFilterDataId(dataId);\n      break;\n\n    case FILTER_UPDATER_PROPS.name:\n      // we are supporting the current functionality\n      // TODO: Next PR for UI filter name will only update filter name but it won't have side effects\n      // we are gonna use pair of datasets and fieldIdx to update the filter\n      const datasetId = newFilter.dataId[valueIndex];\n      const {filter: updatedFilter, dataset: newDataset} = applyFilterFieldName(\n        newFilter,\n        state.datasets[datasetId],\n        value,\n        valueIndex,\n        {mergeDomain: false}\n      );\n      if (!updatedFilter) {\n        return state;\n      }\n\n      newFilter = updatedFilter;\n\n      if (newFilter.gpu) {\n        newFilter = setFilterGpuMode(newFilter, state.filters);\n        newFilter = assignGpuChannel(newFilter, state.filters);\n      }\n\n      newState = set(['datasets', datasetId], newDataset, state);\n\n      // only filter the current dataset\n      break;\n    case FILTER_UPDATER_PROPS.layerId:\n      // We need to update only datasetId/s if we have added/removed layers\n      // - check for layerId changes (XOR works because of string values)\n      // if no differences between layerIds, don't do any filtering\n      // @ts-ignore\n      const layerIdDifference = xor(newFilter.layerId, oldFilter.layerId);\n\n      const layerDataIds = uniq<string>(\n        layerIdDifference\n          .map(lid =>\n            get(\n              state.layers.find(l => l.id === lid),\n              ['config', 'dataId']\n            )\n          )\n          .filter(d => d) as string[]\n      );\n\n      // only filter datasetsIds\n      datasetIds = layerDataIds;\n\n      // Update newFilter dataIds\n      const newDataIds = uniq<string>(\n        newFilter.layerId\n          ?.map(lid =>\n            get(\n              state.layers.find(l => l.id === lid),\n              ['config', 'dataId']\n            )\n          )\n          .filter(d => d) as string[]\n      );\n\n      newFilter = {\n        ...newFilter,\n        dataId: newDataIds\n      };\n\n      break;\n    default:\n      break;\n  }\n\n  const enlargedFilter = state.filters.find(f => f.view === FILTER_VIEW_TYPES.enlarged);\n\n  if (enlargedFilter && enlargedFilter.id !== newFilter.id) {\n    // there should be only one enlarged filter\n    newFilter.view = FILTER_VIEW_TYPES.side;\n  }\n\n  // save new filters to newState\n  newState = set(['filters', idx], newFilter, newState);\n\n  // if we are currently setting a prop that only requires to filter the current\n  // dataset we will pass only the current dataset to applyFiltersToDatasets and\n  // updateAllLayerDomainData otherwise we pass the all list of datasets as defined in dataId\n  const datasetIdsToFilter = LIMITED_FILTER_EFFECT_PROPS[prop]\n    ? [datasetIds[valueIndex]]\n    : datasetIds;\n\n  // filter data\n  const filteredDatasets = applyFiltersToDatasets(\n    datasetIdsToFilter,\n    newState.datasets,\n    newState.filters,\n    newState.layers\n  );\n\n  newState = set(['datasets'], filteredDatasets, newState);\n  // dataId is an array\n  // pass only the dataset we need to update\n  newState = updateAllLayerDomainData(newState, datasetIdsToFilter, newFilter);\n\n  return newState;\n}\n\n/**\n * Set the property of a filter plot\n * @memberof visStateUpdaters\n * @public\n */\nexport const setFilterPlotUpdater = (\n  state: VisState,\n  {idx, newProp, valueIndex = 0}: VisStateActions.SetFilterPlotUpdaterAction\n): VisState => {\n  let newFilter = {...state.filters[idx], ...newProp};\n  const prop = Object.keys(newProp)[0];\n  if (prop === 'yAxis') {\n    const plotType = getDefaultFilterPlotType(newFilter);\n    // TODO: plot is not supported in multi dataset filter for now\n    if (plotType) {\n      newFilter = {\n        ...newFilter,\n        ...getFilterPlot({...newFilter, plotType}, state.datasets[newFilter.dataId[valueIndex]]),\n        plotType\n      };\n    }\n  }\n\n  return {\n    ...state,\n    filters: state.filters.map((f, i) => (i === idx ? newFilter : f))\n  };\n};\n\n/**\n * Add a new filter\n * @memberof visStateUpdaters\n * @public\n */\nexport const addFilterUpdater = (\n  state: VisState,\n  action: VisStateActions.AddFilterUpdaterAction\n): VisState =>\n  !action.dataId\n    ? state\n    : {\n        ...state,\n        filters: [...state.filters, getDefaultFilter({dataId: action.dataId, id: action.id})]\n      };\n\n/**\n * Set layer color palette ui state\n * @memberof visStateUpdaters\n */\nexport const layerColorUIChangeUpdater = (\n  state: VisState,\n  {oldLayer, prop, newConfig}: VisStateActions.LayerColorUIChangeUpdaterAction\n): VisState => {\n  const oldVixConfig = oldLayer.config.visConfig[prop];\n  const newLayer = oldLayer.updateLayerColorUI(prop, newConfig);\n  const newVisConfig = newLayer.config.visConfig[prop];\n  if (oldVixConfig !== newVisConfig) {\n    return layerVisConfigChangeUpdater(state, {\n      oldLayer,\n      newVisConfig: {\n        [prop]: newVisConfig\n      }\n    });\n  }\n  return {\n    ...state,\n    layers: state.layers.map(l => (l.id === oldLayer.id ? newLayer : l))\n  };\n};\n\n/**\n * Start and end filter animation\n * @memberof visStateUpdaters\n * @public\n */\nexport const toggleFilterAnimationUpdater = (\n  state: VisState,\n  action: VisStateActions.ToggleFilterAnimationUpdaterAction\n): VisState => ({\n  ...state,\n  filters: state.filters.map((f, i) => (i === action.idx ? {...f, isAnimating: !f.isAnimating} : f))\n});\n\n/**\n * @memberof visStateUpdaters\n * @public\n */\nexport const toggleLayerAnimationUpdater = (\n  state: VisState,\n  action: VisStateActions.ToggleLayerAnimationUpdaterAction\n): VisState => ({\n  ...state,\n  animationConfig: {\n    ...state.animationConfig,\n    isAnimating: !state.animationConfig.isAnimating\n  }\n});\n\n/**\n * Hide and show layer animation control\n * @memberof visStateUpdaters\n * @public\n */\nexport const toggleLayerAnimationControlUpdater = (\n  state: VisState,\n  action: VisStateActions.ToggleLayerAnimationControlUpdaterAction\n): VisState => ({\n  ...state,\n  animationConfig: {\n    ...state.animationConfig,\n    hideControl: !state.animationConfig.hideControl\n  }\n});\n\n/**\n * Change filter animation speed\n * @memberof visStateUpdaters\n * @public\n */\nexport const updateFilterAnimationSpeedUpdater = (\n  state: VisState,\n  action: VisStateActions.UpdateFilterAnimationSpeedUpdaterAction\n): VisState => ({\n  ...state,\n  filters: state.filters.map((f, i) => (i === action.idx ? {...f, speed: action.speed} : f))\n});\n\n/**\n * Reset animation config current time to a specified value\n * @memberof visStateUpdaters\n * @public\n *\n */\nexport const setLayerAnimationTimeUpdater = (\n  state: VisState,\n  {value}: VisStateActions.SetLayerAnimationTimeUpdaterAction\n): VisState => ({\n  ...state,\n  animationConfig: {\n    ...state.animationConfig,\n    currentTime: value\n  }\n});\n\n/**\n * Update animation speed with the vertical speed slider\n * @memberof visStateUpdaters\n * @public\n *\n */\nexport const updateLayerAnimationSpeedUpdater = (\n  state: VisState,\n  {speed}: VisStateActions.UpdateLayerAnimationSpeedUpdaterAction\n): VisState => {\n  return {\n    ...state,\n    animationConfig: {\n      ...state.animationConfig,\n      speed\n    }\n  };\n};\n\n/**\n * Show larger time filter at bottom for time playback (apply to time filter only)\n * @memberof visStateUpdaters\n * @public\n */\nexport const setFilterViewUpdater = (\n  state: VisState,\n  action: VisStateActions.SetFilterViewUpdaterAction\n) => {\n  const {view, idx} = action;\n  const shouldResetOtherFiltersView = view === FILTER_VIEW_TYPES.enlarged;\n  return {\n    ...state,\n    filters: state.filters.map((f, i) =>\n      i === idx\n        ? {\n            ...f,\n            view\n          }\n        : shouldResetOtherFiltersView\n        ? {\n            ...f,\n            view: FILTER_VIEW_TYPES.side\n          }\n        : f\n    )\n  };\n};\n\n/**\n * Toggles filter feature visibility\n * @memberof visStateUpdaters\n */\nexport const toggleFilterFeatureUpdater = (\n  state: VisState,\n  action: VisStateActions.ToggleFilterFeatureUpdaterAction\n): VisState => {\n  const filter = state.filters[action.idx];\n  const isVisible = get(filter, ['value', 'properties', 'isVisible']);\n\n  let newState = setFilterUpdater(state, {\n    idx: action.idx,\n    prop: 'enabled',\n    value: !isVisible\n  });\n\n  newState = setFilterUpdater(newState, {\n    idx: action.idx,\n    prop: 'value',\n    value: featureToFilterValue(filter.value, filter.id, {\n      isVisible: !isVisible\n    })\n  });\n\n  return newState;\n};\n\n/**\n * Remove a filter\n * @memberof visStateUpdaters\n * @public\n */\nexport const removeFilterUpdater = (\n  state: VisState,\n  action: VisStateActions.RemoveFilterUpdaterAction\n): VisState => {\n  const {idx} = action;\n  const {dataId, id} = state.filters[idx];\n\n  const newFilters = [\n    ...state.filters.slice(0, idx),\n    ...state.filters.slice(idx + 1, state.filters.length)\n  ];\n\n  const filteredDatasets = applyFiltersToDatasets(dataId, state.datasets, newFilters, state.layers);\n  const newEditor =\n    getFilterIdInFeature(state.editor.selectedFeature) === id\n      ? {\n          ...state.editor,\n          selectedFeature: null\n        }\n      : state.editor;\n\n  let newState = set(['filters'], newFilters, state);\n  newState = set(['datasets'], filteredDatasets, newState);\n  newState = set(['editor'], newEditor, newState);\n\n  return updateAllLayerDomainData(newState, dataId, undefined);\n};\n\n/**\n * Add a new layer\n * @memberof visStateUpdaters\n * @public\n */\nexport const addLayerUpdater = (\n  state: VisState,\n  action: VisStateActions.AddLayerUpdaterAction\n): VisState => {\n  let newLayer;\n  let newLayerData;\n  if (action.config) {\n    newLayer = createLayerFromConfig(state, action.config);\n    if (!newLayer) {\n      Console.warn(\n        'Failed to create layer from config, it usually means the config is not be in correct format',\n        action.config\n      );\n      return state;\n    }\n\n    const result = calculateLayerData(newLayer, state);\n    newLayer = result.layer;\n    newLayerData = result.layerData;\n  } else {\n    // create an empty layer with a specific dataset or a default one\n    const defaultDataset = action.datasetId ?? Object.keys(state.datasets)[0];\n    newLayer = new Layer({\n      isVisible: true,\n      isConfigActive: true,\n      dataId: defaultDataset\n    });\n    newLayerData = {};\n  }\n\n  let newState = {\n    ...state,\n    layers: [...state.layers, newLayer],\n    layerData: [...state.layerData, newLayerData],\n    // add new layer at the top\n    layerOrder: [newLayer.id, ...state.layerOrder],\n    splitMaps: addNewLayersToSplitMap(state.splitMaps, newLayer)\n  };\n\n  if (newLayer.config.animation.enabled) {\n    newState = updateAnimationDomain(newState);\n  }\n\n  return newState;\n};\n\n/**\n * remove layer\n * @memberof visStateUpdaters\n * @public\n */\nexport function removeLayerUpdater<T extends VisState>(\n  state: T,\n  {id}: VisStateActions.RemoveLayerUpdaterAction\n): T {\n  const idx = Number.isFinite(id)\n    ? // support older API, remove layer by idx\n      Number(id)\n    : state.layers.findIndex(l => l.id === id);\n  if (idx < 0 || idx >= state.layers.length) {\n    // invalid index\n    Console.warn(`can not remove layer with invalid id|idx ${id}`);\n    return state;\n  }\n\n  const {layers, layerData, layerOrder, clicked, hoverInfo} = state;\n  const layerToRemove = layers[idx];\n  const newState = {\n    ...state,\n    layers: filterOutById(layerToRemove.id)(layers),\n    layerData: removeElementAtIndex(idx)(layerData),\n    layerOrder: layerOrder.filter(layerId => layerId !== layerToRemove.id),\n    clicked: layerToRemove.isLayerHovered(clicked) ? undefined : clicked,\n    hoverInfo: layerToRemove.isLayerHovered(hoverInfo) ? undefined : hoverInfo,\n    splitMaps: removeLayerFromSplitMaps(state.splitMaps, layerToRemove)\n    // TODO: update filters, create helper to remove layer form filter (remove layerid and dataid) if mapped\n  };\n\n  return updateAnimationDomain(newState);\n}\n\n/**\n * Reorder layer\n * @memberof visStateUpdaters\n * @public\n */\nexport const reorderLayerUpdater = (\n  state: VisState,\n  {order}: VisStateActions.ReorderLayerUpdaterAction\n): VisState => ({\n  ...state,\n  layerOrder: order\n});\n\n/**\n * duplicate layer\n * @memberof visStateUpdaters\n * @public\n */\nexport const duplicateLayerUpdater = (\n  state: VisState,\n  {id}: VisStateActions.DuplicateLayerUpdaterAction\n): VisState => {\n  const idx = Number.isFinite(id)\n    ? // support older API, remove layer by idx\n      Number(id)\n    : state.layers.findIndex(l => l.id === id);\n  if (idx < 0 || !state.layers[idx]) {\n    Console.warn(`layer ${idx} not found in layerOrder`);\n    return state;\n  }\n\n  const {layers} = state;\n  const original = layers[idx];\n\n  const originalLayerOrderIdx = state.layerOrder.findIndex(lid => lid === original.id);\n  let newLabel = `Copy of ${original.config.label}`;\n  let postfix = 0;\n  // eslint-disable-next-line no-loop-func\n  while (layers.find(l => l.config.label === newLabel)) {\n    newLabel = `Copy of ${original.config.label} ${++postfix}`;\n  }\n\n  // collect layer config from original\n  const loadedLayer = serializeLayer(original, state.schema);\n\n  // assign new id and label to copied layer\n  if (!loadedLayer?.config) {\n    return state;\n  }\n  loadedLayer.config.label = newLabel;\n  loadedLayer.id = generateHashId(LAYER_ID_LENGTH);\n\n  // add layer to state\n  let nextState = addLayerUpdater(state, {config: loadedLayer});\n  // retrieve newly created layer\n  const newLayer = nextState.layers[nextState.layers.length - 1];\n  // update layer order with newLyaer.id\n  const newLayerOrder = arrayInsert(\n    nextState.layerOrder.slice(1, nextState.layerOrder.length),\n    originalLayerOrderIdx,\n    newLayer.id\n  );\n\n  nextState = reorderLayerUpdater(nextState, {order: newLayerOrder});\n\n  return updateAnimationDomain(nextState);\n};\n\n/**\n * Add a new effect\n * @memberof visStateUpdaters\n * @public\n */\nexport const addEffectUpdater = (\n  state: VisState,\n  action: VisStateActions.AddEffectUpdaterAction\n): VisState => {\n  const newEffect = createEffect(action.config);\n\n  // collapse configurators for other effects\n  state.effects.forEach(effect => effect.setProps({isConfigActive: false}));\n\n  const effects = [...state.effects, newEffect];\n  const effectOrder = fixEffectOrder(effects, [newEffect.id, ...state.effectOrder]);\n\n  return {\n    ...state,\n    effects,\n    effectOrder\n  };\n};\n\n/**\n * remove effect\n * @memberof visStateUpdaters\n * @public\n */\nexport const removeEffectUpdater = (\n  state: VisState,\n  {id}: VisStateActions.RemoveEffectUpdaterAction\n): VisState => {\n  const idx = state.effects.findIndex(l => l.id === id);\n  if (idx < 0 || idx >= state.effects.length) {\n    Console.warn(`can not remove effect with invalid id ${id}`);\n    return state;\n  }\n\n  const {effects, effectOrder} = state;\n  const effectToRemove = effects[idx];\n  return {\n    ...state,\n    // @ts-expect-error fixed in ts\n    effects: filterOutById(effectToRemove.id)(effects),\n    effectOrder: effectOrder.filter(effectId => effectId !== effectToRemove.id)\n  };\n};\n\n/**\n * Reorder effect\n * @memberof visStateUpdaters\n * @public\n */\nexport const reorderEffectUpdater = (\n  state: VisState,\n  {order}: VisStateActions.ReorderEffectUpdaterAction\n): VisState => ({\n  ...state,\n  effectOrder: fixEffectOrder(state.effects, [...order])\n});\n\n/**\n * Update effect\n * @memberof visStateUpdaters\n * @public\n */\nexport const updateEffectUpdater = (\n  state: VisState,\n  {id, props}: VisStateActions.UpdateEffectUpdaterAction\n): VisState => {\n  const idx = state.effects.findIndex(l => l.id === id);\n  if (idx < 0 || idx >= state.effects.length) {\n    Console.warn(`can not update effect with invalid id ${id}`);\n    return state;\n  }\n\n  let effectOrder = state.effectOrder;\n  if (props.id !== undefined && props.id !== id) {\n    const idx2 = state.effects.findIndex(l => l.id === props.id);\n    if (idx2 >= 0) {\n      Console.warn(`can not update effect with existing effect id ${id}`);\n      return state;\n    }\n\n    effectOrder = effectOrder.map(effectOrderId =>\n      effectOrderId === id ? (props.id as string) : effectOrderId\n    );\n  }\n\n  const newEffects = [...state.effects];\n  newEffects[idx].setProps(props);\n\n  return {\n    ...state,\n    effects: newEffects,\n    effectOrder\n  };\n};\n\n/**\n * Remove a dataset and all layers, filters, tooltip configs that based on it\n * @memberof visStateUpdaters\n * @public\n */\nexport function removeDatasetUpdater<T extends VisState>(\n  state: T,\n  action: VisStateActions.RemoveDatasetUpdaterAction\n): T {\n  // extract dataset key\n  const {dataId: datasetKey} = action;\n  const {datasets} = state;\n\n  // check if dataset is present\n  if (!datasets[datasetKey]) {\n    return state;\n  }\n\n  /* eslint-disable no-unused-vars */\n  const {\n    layers,\n    datasets: {[datasetKey]: dataset, ...newDatasets}\n  } = state;\n  /* eslint-enable no-unused-vars */\n\n  const layersToRemove = layers.filter(l => l.config.dataId === datasetKey).map(l => l.id);\n\n  // remove layers and datasets\n  let newState = layersToRemove.reduce((accu, id) => removeLayerUpdater(accu, {id}), {\n    ...state,\n    datasets: newDatasets\n  });\n\n  // remove filters\n  const filters = newState.filters.filter(filter => !filter.dataId.includes(datasetKey));\n\n  newState = {...newState, filters};\n\n  return removeDatasetFromInteractionConfig(newState, {dataId: datasetKey});\n}\n\nfunction removeDatasetFromInteractionConfig(state, {dataId}) {\n  let {interactionConfig} = state;\n  const {tooltip} = interactionConfig;\n  if (tooltip) {\n    const {config} = tooltip;\n    /* eslint-disable no-unused-vars */\n    const {[dataId]: fields, ...fieldsToShow} = config.fieldsToShow;\n    /* eslint-enable no-unused-vars */\n    interactionConfig = {\n      ...interactionConfig,\n      tooltip: {...tooltip, config: {...config, fieldsToShow}}\n    };\n  }\n\n  return {...state, interactionConfig};\n}\n/**\n * update layer blending mode\n * @memberof visStateUpdaters\n * @public\n */\nexport const updateLayerBlendingUpdater = (\n  state: VisState,\n  action: VisStateActions.UpdateLayerBlendingUpdaterAction\n): VisState => ({\n  ...state,\n  layerBlending: action.mode\n});\n\n/**\n * update overlay blending mode\n * @memberof visStateUpdaters\n * @public\n */\nexport const updateOverlayBlendingUpdater = (\n  state: VisState,\n  action: VisStateActions.UpdateOverlayBlendingUpdaterAction\n): VisState => ({\n  ...state,\n  overlayBlending: action.mode\n});\n\n/**\n * Display dataset table in a modal\n * @memberof visStateUpdaters\n * @public\n */\nexport const showDatasetTableUpdater = (\n  state: VisState,\n  action: VisStateActions.ShowDatasetTableUpdaterAction\n): VisState => {\n  return {\n    ...state,\n    editingDataset: action.dataId\n  };\n};\n\n/**\n * Add custom color for datasets and layers\n * @memberof visStateUpdaters\n * @public\n */\nexport const updateTableColorUpdater = (\n  state: VisState,\n  action: VisStateActions.UpdateDatasetColorUpdater\n): VisState => {\n  return updateDatasetPropsUpdater(state, {dataId: action.dataId, props: {color: action.newColor}});\n};\n\n/**\n * reset visState to initial State\n * @memberof visStateUpdaters\n * @public\n */\nexport const resetMapConfigUpdater = (state: VisState): VisState => ({\n  ...INITIAL_VIS_STATE,\n  ...state.initialState,\n  initialState: state.initialState\n});\n\n/**\n * Propagate `visState` reducer with a new configuration. Current config will be override.\n * @memberof visStateUpdaters\n * @public\n */\nexport const receiveMapConfigUpdater = (\n  state: VisState,\n  {\n    payload: {config = {}, options = {}}\n  }: {\n    type?: typeof ActionTypes.RECEIVE_MAP_CONFIG;\n    payload: ReceiveMapConfigPayload;\n  }\n): VisState => {\n  if (!config.visState) {\n    return state;\n  }\n\n  const {keepExistingConfig} = options;\n\n  // reset config if keepExistingConfig is falsy\n  let mergedState = !keepExistingConfig ? resetMapConfigUpdater(state) : state;\n  for (const merger of state.mergers) {\n    if (isValidMerger(merger) && hasPropsToMerge(config.visState, merger.prop)) {\n      mergedState = merger.merge(\n        mergedState,\n        getPropValueToMerger(config.visState, merger.prop, merger.toMergeProp),\n        // fromConfig\n        true\n      );\n    }\n  }\n\n  return mergedState;\n};\n\n/**\n * Trigger layer hover event with hovered object\n * @memberof visStateUpdaters\n * @public\n */\nexport const layerHoverUpdater = (\n  state: VisState,\n  action: VisStateActions.OnLayerHoverUpdaterAction\n): VisState => ({\n  ...state,\n  hoverInfo: {\n    // deck.gl info is mutable\n    ...action.info,\n    ...(Number.isFinite(action.mapIndex) ? {mapIndex: action.mapIndex} : {})\n  }\n});\n\n/* eslint-enable max-statements */\n\n/**\n * Update `interactionConfig`\n * @memberof visStateUpdaters\n * @public\n */\nexport function interactionConfigChangeUpdater(\n  state: VisState,\n  action: VisStateActions.InteractionConfigChangeUpdaterAction\n): VisState {\n  const {config} = action;\n\n  const interactionConfig = {\n    ...state.interactionConfig,\n    ...{[config.id]: config}\n  };\n\n  // Don't enable tooltip and brush at the same time\n  // but coordinates can be shown at all time\n  const contradict = ['brush', 'tooltip'];\n\n  if (\n    contradict.includes(config.id) &&\n    config.enabled &&\n    !state.interactionConfig[config.id].enabled\n  ) {\n    // only enable one interaction at a time\n    contradict.forEach(k => {\n      if (k !== config.id) {\n        interactionConfig[k] = {...interactionConfig[k], enabled: false};\n      }\n    });\n  }\n\n  const newState = {\n    ...state,\n    interactionConfig\n  };\n\n  if (config.id === 'geocoder' && !config.enabled) {\n    return removeDatasetUpdater(newState, {dataId: 'geocoder_dataset'});\n  }\n\n  return newState;\n}\n\n/**\n * Trigger layer click event with clicked object\n * @memberof visStateUpdaters\n * @public\n */\nexport const layerClickUpdater = (\n  state: VisState,\n  action: VisStateActions.OnLayerClickUpdaterAction\n): VisState => ({\n  ...state,\n  mousePos: state.interactionConfig.coordinate.enabled\n    ? {\n        ...state.mousePos,\n        pinned: state.mousePos.pinned ? null : cloneDeep(state.mousePos)\n      }\n    : state.mousePos,\n  clicked: action.info && action.info.picked ? action.info : null\n});\n\n/**\n * Trigger map click event, unselect clicked object\n * @memberof visStateUpdaters\n * @public\n */\nexport const mapClickUpdater = (\n  state: VisState,\n  action: VisStateActions.OnMapClickUpdaterAction\n): VisState => {\n  return {\n    ...state,\n    clicked: null\n  };\n};\n\n/**\n * Trigger map move event\n * @memberof visStateUpdaters\n * @public\n */\nexport const mouseMoveUpdater = (\n  state: VisState,\n  {evt}: VisStateActions.OnMouseMoveUpdaterAction\n): VisState => {\n  if (Object.values(state.interactionConfig).some(config => config.enabled)) {\n    return {\n      ...state,\n      mousePos: {\n        ...state.mousePos,\n        ...(Array.isArray(evt.point) ? {mousePosition: [...evt.point]} : {}),\n        ...(Array.isArray(evt.lngLat) ? {coordinate: [...evt.lngLat]} : {})\n      }\n    };\n  }\n\n  return state;\n};\n/**\n * Toggle visibility of a layer for a split map\n * @memberof visStateUpdaters\n * @public\n */\nexport const toggleSplitMapUpdater = (\n  state: VisState,\n  action: MapStateActions.ToggleSplitMapUpdaterAction\n): VisState =>\n  state.splitMaps && state.splitMaps.length === 0\n    ? {\n        ...state,\n        // maybe we should use an array to store state for a single map as well\n        // if current maps length is equal to 0 it means that we are about to split the view\n        splitMaps: computeSplitMapLayers(state.layers, {duplicate: false})\n      }\n    : closeSpecificMapAtIndex(state, action);\n\n/**\n * Toggle visibility of a layer in a split map\n * @memberof visStateUpdaters\n * @public\n */\nexport const toggleLayerForMapUpdater = (\n  state: VisState,\n  {mapIndex, layerId}: VisStateActions.ToggleLayerForMapUpdaterAction\n): VisState => {\n  const {splitMaps} = state;\n\n  return {\n    ...state,\n    splitMaps: splitMaps.map((sm, i) =>\n      i === mapIndex\n        ? {\n            ...splitMaps[i],\n            layers: {\n              ...splitMaps[i].layers,\n              // if layerId not in layers, set it to visible\n              [layerId]: !splitMaps[i].layers[layerId]\n            }\n          }\n        : sm\n    )\n  };\n};\n\n/**\n * Add new dataset to `visState`, with option to load a map config along with the datasets\n * @memberof visStateUpdaters\n * @public\n */\n// eslint-disable-next-line complexity\nexport const updateVisDataUpdater = (\n  state: VisState,\n  action: VisStateActions.UpdateVisDataUpdaterAction\n): VisState => {\n  // datasets can be a single data entries or an array of multiple data entries\n  const {config, options} = action;\n\n  // apply config if passed from action\n  // TODO: we don't handle asyn mergers here yet\n  const previousState = config\n    ? receiveMapConfigUpdater(state, {\n        payload: {config, options}\n      })\n    : state;\n\n  const datasets = toArray(action.datasets);\n\n  const newDataEntries = datasets.reduce(\n    // @ts-expect-error  Type '{}' is missing the following properties from type 'ProtoDataset': data, info\n    (accu, {info = {}, ...rest} = {}) => ({\n      ...accu,\n      ...(createNewDataEntry({info, ...rest}, state.datasets) || {})\n    }),\n    {}\n  );\n\n  // save new dataset entry to state\n  const mergedState = {\n    ...previousState,\n    datasets: mergeDatasetsByOrder(previousState, newDataEntries)\n  };\n\n  // merge state with config to be merged\n  const layerMergers = state.mergers.filter(m => m.waitForLayerData);\n  const datasetMergers = state.mergers.filter(m => !layerMergers.includes(m));\n\n  const newDataIds = Object.keys(newDataEntries);\n  const postMergerPayload = {\n    newDataIds,\n    options,\n    layerMergers\n  };\n\n  return applyMergersUpdater(mergedState, {mergers: datasetMergers, postMergerPayload});\n};\n\n/**\n * Add new dataset to `visState`, with option to load a map config along with the datasets\n */\nexport function applyMergersUpdater(\n  state: VisState,\n  action: {\n    mergers: Merger<any>[];\n    postMergerPayload: PostMergerPayload;\n  }\n): VisState {\n  const {mergers, postMergerPayload} = action;\n\n  // merge state with config to be merged\n  const mergeStateResult = mergeStateFromMergers(\n    state,\n    {\n      ...INITIAL_VIS_STATE,\n      ...state.initialState\n    },\n    mergers,\n    // newDataIds,\n    postMergerPayload\n  );\n\n  // if all merged, kickup post merge process\n  // if not wait\n  return mergeStateResult.allMerged\n    ? postMergeUpdater(mergeStateResult.mergedState, postMergerPayload)\n    : mergeStateResult.mergedState;\n}\n\n/**\n * Add new dataset to `visState`, with option to load a map config along with the datasets\n */\nfunction postMergeUpdater(mergedState: VisState, postMergerPayload: PostMergerPayload): VisState {\n  const {newDataIds, options, layerMergers} = postMergerPayload;\n  const newFilters = mergedState.filters.filter(f =>\n    f.dataId.find(fDataId => newDataIds.includes(fDataId))\n  );\n  const datasetFiltered: string[] = uniq(\n    newFilters.reduce((accu, f) => [...accu, ...f.dataId], [] as string[])\n  );\n  const dataEmpty = newDataIds.length < 1;\n\n  let newLayers = !dataEmpty\n    ? mergedState.layers.filter(l => l.config.dataId && newDataIds.includes(l.config.dataId))\n    : [];\n\n  const newDataEntries = newDataIds.reduce(\n    (accu, id) => ({\n      ...accu,\n      [id]: mergedState.datasets[id]\n    }),\n    {}\n  );\n\n  if (!newLayers.length && (options || {}).autoCreateLayers !== false) {\n    // no layer merged, find defaults\n    const result = addDefaultLayers(mergedState, newDataEntries);\n    mergedState = result.state;\n    newLayers = result.newLayers;\n  }\n\n  if (mergedState.splitMaps.length) {\n    // if map is split, add new layers to splitMaps\n    newLayers = mergedState.layers.filter(\n      l => l.config.dataId && newDataIds.includes(l.config.dataId)\n    );\n    mergedState = {\n      ...mergedState,\n      splitMaps: addNewLayersToSplitMap(mergedState.splitMaps, newLayers)\n    };\n  }\n\n  // if no tooltips merged add default tooltips\n  newDataIds.forEach(dataId => {\n    const tooltipFields = mergedState.interactionConfig.tooltip.config.fieldsToShow[dataId];\n    // loading dataset: autoCreateTooltips is false and we don't want to run addDefaultTooltips when tooltipFields is empty\n    if (\n      options?.autoCreateTooltips !== false &&\n      (!Array.isArray(tooltipFields) || !tooltipFields.length)\n    ) {\n      // adding dataset: autoCreateTooltips is true\n      mergedState = addDefaultTooltips(mergedState, newDataEntries[dataId]);\n    }\n  });\n\n  const updatedDatasets = dataEmpty\n    ? Object.keys(mergedState.datasets)\n    : uniq(Object.keys(newDataEntries).concat(datasetFiltered));\n\n  let updatedState = updateAllLayerDomainData(mergedState, updatedDatasets, undefined);\n\n  // register layer animation domain,\n  // need to be called after layer data is calculated\n  updatedState = updateAnimationDomain(updatedState);\n\n  // try to process layerMergers after dataset+datasetMergers\n  return layerMergers && layerMergers.length > 0\n    ? applyMergersUpdater(updatedState, {\n        mergers: layerMergers,\n        postMergerPayload: {...postMergerPayload, layerMergers: []}\n      })\n    : updatedState;\n}\n\n/**\n * Rename an existing dataset in `visState`\n * @memberof visStateUpdaters\n * @public\n */\nexport function renameDatasetUpdater(\n  state: VisState,\n  action: VisStateActions.RenameDatasetUpdaterAction\n): VisState {\n  return updateDatasetPropsUpdater(state, {dataId: action.dataId, props: {label: action.label}});\n}\n\nconst ALLOWED_UPDATE_DATASET_PROPS = ['label', 'color', 'metadata'];\n\n/**\n * Validates properties before updating the dataset.\n * Makes sure each property is in the allowed list\n * Makes sure color value is RGB\n * Performs deep merge when updating metadata\n */\nconst validateDatasetUpdateProps = (props, dataset) => {\n  const validatedProps = Object.entries(props).reduce((acc, entry) => {\n    const [key, value] = entry;\n    // is it allowed ?\n    if (!ALLOWED_UPDATE_DATASET_PROPS.includes(key)) {\n      return acc;\n    }\n\n    // if we are adding a color but it is not RGB we don't accept the value\n    // in the future as we add more props we should change this if into a switch\n    if (key === 'color' && !isRgbColor(value)) {\n      return acc;\n    }\n\n    // do we need deep merge ?\n    return {...acc, [key]: isPlainObject(value) ? deepmerge(dataset[key] || {}, value) : value};\n  }, {});\n\n  return validatedProps;\n};\n\n/**\n * Update Dataset props (label, color, meta). Do not use to update data or any related properties\n * @memberof visStateUpdaters\n * @public\n */\nexport function updateDatasetPropsUpdater(\n  state: VisState,\n  action: VisStateActions.UpdateDatasetPropsUpdaterAction\n): VisState {\n  const {dataId, props} = action;\n  const {datasets} = state;\n  const existing = datasets[dataId];\n\n  if (existing) {\n    const validatedProps = validateDatasetUpdateProps(props, existing);\n    //  validate props: just color for now\n    //  we only allow label, color and meta to be updated\n    // const newTable = copyTableAndUpdate(existing, validatedProps);\n    return {\n      ...state,\n      datasets: {\n        ...datasets,\n        [dataId]: copyTableAndUpdate(existing, validatedProps)\n      }\n    };\n  }\n\n  return state;\n}\n\n/**\n * When a user clicks on the specific map closing icon\n * the application will close the selected map\n * and will merge the remaining one with the global state\n * TODO: i think in the future this action should be called merge map layers with global settings\n * @param {Object} state `visState`\n * @param {Object} action action\n * @returns {Object} nextState\n */\nexport function closeSpecificMapAtIndex<S extends VisState>(\n  state: S,\n  action: MapStateActions.ToggleSplitMapUpdaterAction\n): S {\n  // retrieve layers meta data from the remaining map that we need to keep\n  const indexToRetrieve = 1 - action.payload;\n  const mapLayers = state.splitMaps[indexToRetrieve]?.layers;\n  const {layers} = state;\n\n  // update layer visibility\n  const newLayers = layers.map(layer =>\n    mapLayers && !mapLayers[layer.id] && layer.config.isVisible\n      ? layer.updateLayerConfig({\n          // if layer.id is not in mapLayers, it should be inVisible\n          isVisible: false\n        })\n      : layer\n  );\n\n  // delete map\n  return {\n    ...state,\n    layers: newLayers,\n    splitMaps: []\n  };\n}\n\n/**\n * Trigger file loading dispatch `addDataToMap` if succeed, or `loadFilesErr` if failed\n * @memberof visStateUpdaters\n * @public\n */\nexport const loadFilesUpdater = (\n  state: VisState,\n  action: VisStateActions.LoadFilesUpdaterAction\n): VisState => {\n  const {files, onFinish = loadFilesSuccess} = action;\n  if (!files.length) {\n    return state;\n  }\n\n  const fileLoadingProgress = Array.from(files).reduce(\n    (accu, f, i) => merge_(initialFileLoadingProgress(f, i))(accu),\n    {}\n  );\n\n  const fileLoading = {\n    fileCache: [],\n    filesToLoad: files,\n    onFinish\n  };\n\n  const nextState = merge_({fileLoadingProgress, fileLoading})(state);\n\n  return loadNextFileUpdater(nextState);\n};\n\n/**\n * Sucessfully loaded one file, move on to the next one\n * @memberof visStateUpdaters\n * @public\n */\nexport function loadFileStepSuccessUpdater(\n  state: VisState,\n  action: VisStateActions.LoadFileStepSuccessAction\n): VisState {\n  if (!state.fileLoading) {\n    return state;\n  }\n  const {fileName, fileCache} = action;\n  const {filesToLoad, onFinish} = state.fileLoading;\n  const stateWithProgress = updateFileLoadingProgressUpdater(state, {\n    fileName,\n    progress: {percent: 1, message: 'Done'}\n  });\n\n  // save processed file to fileCache\n  const stateWithCache = pick_('fileLoading')(merge_({fileCache}))(stateWithProgress);\n\n  return withTask(\n    stateWithCache,\n    DELAY_TASK(200).map(filesToLoad.length ? loadNextFile : () => onFinish(fileCache))\n  );\n}\n\n// withTask<T>(state: T, task: any): T\n\n/**\n *\n * @memberof visStateUpdaters\n * @public\n */\nexport function loadNextFileUpdater(state: VisState): VisState {\n  if (!state.fileLoading) {\n    return state;\n  }\n  const {filesToLoad} = state.fileLoading;\n  const [file, ...remainingFilesToLoad] = filesToLoad;\n\n  // save filesToLoad to state\n  const nextState = pick_('fileLoading')(merge_({filesToLoad: remainingFilesToLoad}))(state);\n\n  const stateWithProgress = updateFileLoadingProgressUpdater(nextState, {\n    fileName: file.name,\n    progress: {percent: 0, message: 'loading...'}\n  });\n\n  const {loaders, loadOptions} = state;\n  return withTask(\n    stateWithProgress,\n    makeLoadFileTask(\n      file,\n      nextState.fileLoading && nextState.fileLoading.fileCache,\n      loaders,\n      loadOptions\n    )\n  );\n}\n\nexport function makeLoadFileTask(file, fileCache, loaders: Loader[] = [], loadOptions = {}) {\n  return LOAD_FILE_TASK({file, fileCache, loaders, loadOptions}).bimap(\n    // prettier ignore\n    // success\n    gen =>\n      nextFileBatch({\n        gen,\n        fileName: file.name,\n        onFinish: result =>\n          processFileContent({\n            content: result,\n            fileCache\n          })\n      }),\n\n    // error\n    err => loadFilesErr(file.name, err)\n  );\n}\n\n/**\n *\n * @memberof visStateUpdaters\n * @public\n */\nexport function processFileContentUpdater(\n  state: VisState,\n  action: VisStateActions.ProcessFileContentUpdaterAction\n): VisState {\n  const {content, fileCache} = action.payload;\n\n  const stateWithProgress = updateFileLoadingProgressUpdater(state, {\n    fileName: content.fileName,\n    progress: {percent: 1, message: 'processing...'}\n  });\n\n  return withTask(\n    stateWithProgress,\n    PROCESS_FILE_DATA({content, fileCache}).bimap(\n      result => loadFileStepSuccess({fileName: content.fileName, fileCache: result}),\n      err => loadFilesErr(content.fileName, err)\n    )\n  );\n}\n\nexport function parseProgress(prevProgress = {}, progress) {\n  // This happens when receiving query metadata or other cases we don't\n  // have an update for the user.\n  if (!progress || !progress.percent) {\n    return {};\n  }\n\n  return {\n    percent: progress.percent\n  };\n}\n\n/**\n * gets called with payload = AsyncGenerator<???>\n * @memberof visStateUpdaters\n * @public\n */\nexport const nextFileBatchUpdater = (\n  state: VisState,\n  {\n    payload: {gen, fileName, progress, accumulated, onFinish}\n  }: VisStateActions.NextFileBatchUpdaterAction\n): VisState => {\n  const stateWithProgress = updateFileLoadingProgressUpdater(state, {\n    fileName,\n    progress: parseProgress(state.fileLoadingProgress[fileName], progress)\n  });\n\n  return withTask(stateWithProgress, [\n    ...(fileName.endsWith('arrow') && accumulated?.data?.length > 0\n      ? [\n          PROCESS_FILE_DATA({content: accumulated, fileCache: []}).bimap(\n            result => loadFilesSuccess(result),\n            err => loadFilesErr(fileName, err)\n          )\n        ]\n      : []),\n    UNWRAP_TASK(gen.next()).bimap(\n      ({value, done}) => {\n        return done\n          ? onFinish(accumulated)\n          : nextFileBatch({\n              gen,\n              fileName,\n              progress: value.progress,\n              accumulated: value,\n              onFinish\n            });\n      },\n      err => loadFilesErr(fileName, err)\n    )\n  ]);\n};\n\n/**\n * Trigger loading file error\n * @memberof visStateUpdaters\n * @public\n */\nexport const loadFilesErrUpdater = (\n  state: VisState,\n  {error, fileName}: VisStateActions.LoadFilesErrUpdaterAction\n): VisState => {\n  // update ui with error message\n  Console.warn(error);\n  if (!state.fileLoading) {\n    return state;\n  }\n  const {filesToLoad, onFinish, fileCache} = state.fileLoading;\n\n  const nextState = updateFileLoadingProgressUpdater(state, {\n    fileName,\n    progress: {error}\n  });\n\n  // kick off next file or finish\n  return withTask(\n    nextState,\n    DELAY_TASK(200).map(filesToLoad.length ? loadNextFile : () => onFinish(fileCache))\n  );\n};\n\n/**\n * When select dataset for export, apply cpu filter to selected dataset\n * @memberof visStateUpdaters\n * @public\n */\nexport const applyCPUFilterUpdater = (\n  state: VisState,\n  {dataId}: VisStateActions.ApplyCPUFilterUpdaterAction\n): VisState => {\n  // apply cpuFilter\n  const dataIds = toArray(dataId);\n\n  return dataIds.reduce((accu, id) => filterDatasetCPU(accu, id), state);\n};\n\n/**\n * User input to update the info of the map\n * @memberof visStateUpdaters\n * @public\n */\nexport const setMapInfoUpdater = (\n  state: VisState,\n  action: VisStateActions.SetMapInfoUpdaterAction\n): VisState => ({\n  ...state,\n  mapInfo: {\n    ...state.mapInfo,\n    ...action.info\n  }\n});\n/**\n * Helper function to update All layer domain and layer data of state\n */\nexport function addDefaultLayers(\n  state: VisState,\n  datasets: Datasets\n): {state: VisState; newLayers: Layer[]} {\n  const empty: Layer[] = [];\n  const defaultLayers = Object.values(datasets).reduce((accu: Layer[], dataset) => {\n    const foundLayers = findDefaultLayer(dataset, state.layerClasses);\n    return foundLayers && foundLayers.length ? accu.concat(foundLayers) : accu;\n  }, empty);\n\n  return {\n    state: {\n      ...state,\n      layers: [...state.layers, ...defaultLayers],\n      layerOrder: [\n        // put new layers on top of old ones in reverse\n        ...getLayerOrderFromLayers(defaultLayers),\n        ...state.layerOrder\n      ]\n    },\n    newLayers: defaultLayers\n  };\n}\n\n/**\n * helper function to find default tooltips\n * @param {Object} state\n * @param {Object} dataset\n * @returns {Object} nextState\n */\nexport function addDefaultTooltips(state, dataset) {\n  const tooltipFields = findFieldsToShow({\n    ...dataset,\n    maxDefaultTooltips: state.maxDefaultTooltips\n  });\n  const merged = {\n    ...state.interactionConfig.tooltip.config.fieldsToShow,\n    ...tooltipFields\n  };\n\n  return set(['interactionConfig', 'tooltip', 'config', 'fieldsToShow'], merged, state);\n}\n\nexport function initialFileLoadingProgress(file, index) {\n  const fileName = file.name || `Untitled File ${index}`;\n  return {\n    [fileName]: {\n      // percent of current file\n      percent: 0,\n      message: '',\n      fileName,\n      error: null\n    }\n  };\n}\n\nexport function updateFileLoadingProgressUpdater(state, {fileName, progress}) {\n  // @ts-expect-error\n  return pick_('fileLoadingProgress')(pick_(fileName)(merge_(progress)))(state);\n}\n/**\n * Helper function to update layer domains for an array of datasets\n */\nexport function updateAllLayerDomainData(\n  state: VisState,\n  dataId: string | string[],\n  updatedFilter?: Filter\n): VisState {\n  const dataIds = typeof dataId === 'string' ? [dataId] : dataId;\n  const newLayers: Layer[] = [];\n  const newLayerData: any[] = [];\n\n  state.layers.forEach((oldLayer, i) => {\n    if (oldLayer.config.dataId && dataIds.includes(oldLayer.config.dataId)) {\n      // No need to recalculate layer domain if filter has fixed domain\n      const newLayer =\n        updatedFilter && updatedFilter.fixedDomain\n          ? oldLayer\n          : oldLayer.updateLayerDomain(state.datasets, updatedFilter);\n\n      const {layerData, layer} = calculateLayerData(newLayer, state, state.layerData[i]);\n\n      newLayers.push(layer);\n      newLayerData.push(layerData);\n    } else {\n      newLayers.push(oldLayer);\n      newLayerData.push(state.layerData[i]);\n    }\n  });\n\n  const newState = {\n    ...state,\n    layers: newLayers,\n    layerData: newLayerData\n  };\n\n  return newState;\n}\n\nexport function updateAnimationDomain<S extends VisState>(state: S): S {\n  // merge all animatable layer domain and update global config\n  const animatableLayers = state.layers.filter(\n    l =>\n      l.config.isVisible &&\n      l.config.animation &&\n      l.config.animation.enabled &&\n      // @ts-expect-error trip-layer-only\n      Array.isArray(l.animationDomain)\n  );\n\n  if (!animatableLayers.length) {\n    return {\n      ...state,\n      animationConfig: {\n        ...state.animationConfig,\n        domain: null,\n        defaultTimeFormat: null\n      }\n    };\n  }\n\n  const mergedDomain: [number, number] = animatableLayers.reduce(\n    (accu, layer) => [\n      // @ts-expect-error trip-layer-only\n      Math.min(accu[0], layer.animationDomain[0]),\n      // @ts-expect-error trip-layer-only\n      Math.max(accu[1], layer.animationDomain[1])\n    ],\n    [Number(Infinity), -Infinity]\n  );\n  const defaultTimeFormat = getTimeWidgetTitleFormatter(mergedDomain);\n\n  return {\n    ...state,\n    animationConfig: {\n      ...state.animationConfig,\n      currentTime: isInRange(state.animationConfig.currentTime, mergedDomain)\n        ? state.animationConfig.currentTime\n        : mergedDomain[0],\n      domain: mergedDomain,\n      defaultTimeFormat\n    }\n  };\n}\n\n/**\n * Update the status of the editor\n * @memberof visStateUpdaters\n */\nexport const setEditorModeUpdater = (\n  state: VisState,\n  {mode}: VisStateActions.SetEditorModeUpdaterAction\n): VisState => ({\n  ...state,\n  editor: {\n    ...state.editor,\n    mode,\n    selectedFeature: null\n  }\n});\n\n// const featureToFilterValue = (feature) => ({...feature, id: feature.id});\n/**\n * Update editor features\n * @memberof visStateUpdaters\n */\nexport function setFeaturesUpdater(\n  state: VisState,\n  {features = []}: VisStateActions.SetFeaturesUpdaterAction\n): VisState {\n  const lastFeature = features.length && features[features.length - 1];\n\n  const newState = {\n    ...state,\n    editor: {\n      ...state.editor,\n      // only save none filter features to editor\n      features: features.filter(f => !getFilterIdInFeature(f)),\n      mode: lastFeature && lastFeature.properties.isClosed ? EDITOR_MODES.EDIT : state.editor.mode\n    }\n  };\n\n  // Retrieve existing feature\n  const {selectedFeature} = state.editor;\n\n  // If no feature is selected we can simply return since no operations\n  if (!selectedFeature) {\n    return newState;\n  }\n\n  // TODO: check if the feature has changed\n  const feature = features.find(f => f.id === selectedFeature.id);\n\n  // if feature is part of a filter\n  const filterId = feature && getFilterIdInFeature(feature);\n  if (filterId && feature) {\n    // add bbox for polygon filter to speed up filtering\n    if (feature.properties) feature.properties.bbox = bbox(feature);\n    const featureValue = featureToFilterValue(feature, filterId);\n    const filterIdx = state.filters.findIndex(fil => fil.id === filterId);\n    // @ts-ignore\n    return setFilterUpdater(newState, {\n      idx: filterIdx,\n      prop: 'value',\n      value: featureValue\n    });\n  }\n\n  return newState;\n}\n\n/**\n * Set the current selected feature\n * @memberof uiStateUpdaters\n */\nexport const setSelectedFeatureUpdater = (\n  state: VisState,\n  {feature, selectionContext}: VisStateActions.SetSelectedFeatureUpdaterAction\n): VisState => {\n  // add bbox for polygon filter to speed up filtering\n   if (feature && feature.properties) feature.properties.bbox = bbox(feature);\n  return {\n    ...state,\n    editor: {\n      ...state.editor,\n      selectedFeature: feature,\n      selectionContext\n    }\n  };\n};\n\n/**\n * Delete existing feature from filters\n * @memberof visStateUpdaters\n */\nexport function deleteFeatureUpdater(\n  state: VisState,\n  {feature}: VisStateActions.DeleteFeatureUpdaterAction\n): VisState {\n  if (!feature) {\n    return state;\n  }\n\n  const newState = {\n    ...state,\n    editor: {\n      ...state.editor,\n      selectedFeature: null\n    }\n  };\n\n  if (getFilterIdInFeature(feature)) {\n    const filterIdx = newState.filters.findIndex(f => f.id === getFilterIdInFeature(feature));\n\n    return filterIdx > -1 ? removeFilterUpdater(newState, {idx: filterIdx}) : newState;\n  }\n\n  // modify editor object\n  const newEditor = {\n    ...state.editor,\n    features: state.editor.features.filter(f => f.id !== feature.id),\n    selectedFeature: null\n  };\n\n  return {\n    ...state,\n    editor: newEditor\n  };\n}\n\n/**\n * Toggle feature as layer filter\n * @memberof visStateUpdaters\n */\nexport function setPolygonFilterLayerUpdater(\n  state: VisState,\n  payload: VisStateActions.SetPolygonFilterLayerUpdaterAction\n): VisState {\n  const {layer, feature} = payload;\n  const filterId = getFilterIdInFeature(feature);\n\n  // let newFilter = null;\n  let filterIdx;\n  let newLayerId = [layer.id];\n  let newState = state;\n  // If polygon filter already exists, we need to find out if the current layer is already included\n  if (filterId) {\n    filterIdx = state.filters.findIndex(f => f.id === filterId);\n\n    if (!state.filters[filterIdx]) {\n      // what if filter doesn't exist?... not possible.\n      // because features in the editor is passed in from filters and editors.\n      // but we will move this feature back to editor just in case\n      const noneFilterFeature = {\n        ...feature,\n        properties: {\n          ...feature.properties,\n          filterId: null\n        }\n      };\n\n      return {\n        ...state,\n        editor: {\n          ...state.editor,\n          features: [...state.editor.features, noneFilterFeature],\n          selectedFeature: noneFilterFeature\n        }\n      };\n    }\n    const filter = state.filters[filterIdx];\n    const {layerId = []} = filter;\n    const isLayerIncluded = layerId.includes(layer.id);\n\n    newLayerId = isLayerIncluded\n      ? // if layer is included, remove it\n        layerId.filter(l => l !== layer.id)\n      : [...layerId, layer.id];\n  } else {\n    // if we haven't create the polygon filter, create it\n    const newFilter = generatePolygonFilter([], feature);\n    filterIdx = state.filters.length;\n\n    // add feature, remove feature from eidtor\n    newState = {\n      ...state,\n      filters: [...state.filters, newFilter],\n      editor: {\n        ...state.editor,\n        features: state.editor.features.filter(f => f.id !== feature.id),\n        selectedFeature: newFilter.value\n      }\n    };\n  }\n\n  return setFilterUpdater(newState, {\n    idx: filterIdx,\n    prop: 'layerId',\n    value: newLayerId\n  });\n}\n\n/**\n * @memberof visStateUpdaters\n * @public\n */\nexport function sortTableColumnUpdater(\n  state: VisState,\n  {dataId, column, mode}: VisStateActions.SortTableColumnUpdaterAction\n): VisState {\n  const dataset = state.datasets[dataId];\n  if (!dataset) {\n    return state;\n  }\n  let sortMode = mode;\n  if (!sortMode) {\n    const currentMode = get(dataset, ['sortColumn', column]);\n    // @ts-ignore - should be fixable in a TS file\n    sortMode = currentMode\n      ? Object.keys(SORT_ORDER).find(m => m !== currentMode)\n      : SORT_ORDER.ASCENDING;\n  }\n\n  const sorted = sortDatasetByColumn(dataset, column, sortMode);\n  return set(['datasets', dataId], sorted, state);\n}\n\n/**\n * @memberof visStateUpdaters\n * @public\n */\nexport function pinTableColumnUpdater(\n  state: VisState,\n  {dataId, column}: VisStateActions.PinTableColumnUpdaterAction\n): VisState {\n  const dataset = state.datasets[dataId];\n  if (!dataset) {\n    return state;\n  }\n  const newDataset = pinTableColumns(dataset, column);\n\n  return set(['datasets', dataId], newDataset, state);\n}\n\n/**\n * Copy column content as strings\n * @memberof visStateUpdaters\n * @public\n */\nexport function copyTableColumnUpdater(\n  state: VisState,\n  {dataId, column}: VisStateActions.CopyTableColumnUpdaterAction\n): VisState {\n  const dataset = state.datasets[dataId];\n  if (!dataset) {\n    return state;\n  }\n  const fieldIdx = dataset.fields.findIndex(f => f.name === column);\n  if (fieldIdx < 0) {\n    return state;\n  }\n  const {type} = dataset.fields[fieldIdx];\n  const text = dataset.dataContainer\n    .map(row => parseFieldValue(row.valueAt(fieldIdx), type), true)\n    .join('\\n');\n\n  copy(text);\n\n  return state;\n}\n\n/**\n * Set display format from columns from user selection\n * @memberof visStateUpdaters\n * @public\n */\nexport function setColumnDisplayFormatUpdater(\n  state: VisState,\n  {dataId, formats}: VisStateActions.SetColumnDisplayFormatUpdaterAction\n): VisState {\n  const dataset = state.datasets[dataId];\n  if (!dataset) {\n    return state;\n  }\n  let newFields = dataset.fields;\n  Object.keys(formats).forEach(column => {\n    const fieldIdx = dataset.fields.findIndex(f => f.name === column);\n    if (fieldIdx >= 0) {\n      const displayFormat = formats[column];\n      const field = newFields[fieldIdx];\n      newFields = swap_(merge_({displayFormat})(field) as {id: string})(\n        newFields as {id: string}[]\n      ) as Field[];\n    }\n  });\n\n  const newDataset = copyTableAndUpdate(dataset, {fields: newFields as Field[]});\n  return pick_('datasets')(merge_({[dataId]: newDataset}))(state);\n}\n\n/**\n * Update editor\n */\nexport function toggleEditorVisibilityUpdater(\n  state: VisState,\n  action: VisStateActions.ToggleEditorVisibilityUpdaterAction\n): VisState {\n  return {\n    ...state,\n    editor: {\n      ...state.editor,\n      visible: !state.editor.visible\n    }\n  };\n}\n\nexport function setFilterAnimationTimeConfigUpdater(\n  state: VisState,\n  {idx, config}: VisStateActions.SetFilterAnimationTimeConfigAction\n): VisState {\n  const oldFilter = state.filters[idx];\n  if (!oldFilter) {\n    Console.error(`filters.${idx} is undefined`);\n    return state;\n  }\n  if (oldFilter.type !== FILTER_TYPES.timeRange) {\n    Console.error(\n      `setFilterAnimationTimeConfig can only be called to update a time filter. check filter.type === 'timeRange'`\n    );\n    return state;\n  }\n\n  const updates = checkTimeConfigArgs(config);\n\n  return pick_('filters')(swap_(merge_(updates)(oldFilter)))(state);\n}\n\nfunction checkTimeConfigArgs(config) {\n  const allowed = ['timeFormat', 'timezone'];\n  return Object.keys(config).reduce((accu, prop) => {\n    if (!allowed.includes(prop)) {\n      Console.error(\n        `setLayerAnimationTimeConfig takes timeFormat and/or timezone as options, found ${prop}`\n      );\n      return accu;\n    }\n\n    // here we are NOT checking if timezone or timeFormat input is valid\n    accu[prop] = config[prop];\n    return accu;\n  }, {});\n}\n/**\n * Update editor\n */\nexport function setLayerAnimationTimeConfigUpdater(\n  state: VisState,\n  {config}: VisStateActions.SetLayerAnimationTimeConfigAction\n): VisState {\n  if (!config) {\n    return state;\n  }\n  const updates = checkTimeConfigArgs(config);\n  return pick_('animationConfig')(merge_(updates))(state);\n}\n\n// Find dataId from a saved visState property:\n// layers, filters, interactions, layerBlending, overlayBlending, splitMaps, animationConfig, editor\n// replace it with another dataId\nfunction defaultReplaceParentDatasetIds(value: any, dataId: string, dataIdToReplace: string) {\n  if (Array.isArray(value)) {\n    // for layers, filters, call defaultReplaceParentDatasetIds on each item in array\n    const replaced = value\n      .map(v => defaultReplaceParentDatasetIds(v, dataId, dataIdToReplace))\n      .filter(d => d);\n    return replaced.length ? replaced : null;\n  }\n  if (typeof value.dataId === 'string' && value.dataId === dataId) {\n    // others\n    return {\n      ...value,\n      dataId: dataIdToReplace\n    };\n  } else if (Array.isArray(value.dataId) && value.dataId.includes(dataId)) {\n    // filter\n    return {\n      ...value,\n      dataId: value.dataId.map(d => (d === dataId ? dataIdToReplace : d))\n    };\n  } else if (value.config?.dataId && value.config?.dataId === dataId) {\n    // layer\n    return {\n      ...value,\n      config: {\n        ...value.config,\n        dataId: dataIdToReplace\n      }\n    };\n  } else if (isObject(value) && value.hasOwnProperty(dataId)) {\n    // for value saved as {[dataId]: {...}}\n    return {[dataIdToReplace]: value[dataId]};\n  }\n\n  return null;\n}\n\n// Find datasetIds derived a saved visState Property;\nfunction findChildDatasetIds(value) {\n  if (Array.isArray(value)) {\n    // for layers, filters, call defaultReplaceParentDatasetIds on each item in array\n    const childDataIds = value.map(findChildDatasetIds).filter(d => d);\n    return childDataIds.length ? childDataIds : null;\n  }\n\n  // child data id usually stores in the derived dataset info\n  return value?.newDataset?.info.id || null;\n}\n\n// moved unmerged layers, filters, interactions\nfunction moveValueToBeMerged(state, propValues, {prop, toMergeProp, saveUnmerged}) {\n  // remove prop value from state\n  // TODO: should we add remove updater to merger as well?\n  if (!propValues) {\n    return state;\n  }\n  const stateRemoved =\n    prop === 'layers'\n      ? propValues.reduce((accu, propValue) => removeLayerUpdater(accu, {id: propValue.id}), state)\n      : Array.isArray(state[prop])\n      ? {\n          ...state,\n          [prop]: state[prop].filter(p => !propValues.find(propValue => p.id === propValue.id))\n        }\n      : // if not array, we won't remove it, remove dataset should handle it\n        state;\n\n  // move to stateToBeMerged\n  const toBeMerged = {\n    [toMergeProp]: saveUnmerged\n      ? // call merge saveUnmerged method\n        saveUnmerged(stateRemoved, propValues)\n      : // if toMergeProp is araay, append to it\n      Array.isArray(stateRemoved[toMergeProp])\n      ? [...stateRemoved[toMergeProp], ...propValues]\n      : // save propValues to toMerge\n      isObject(stateRemoved[toMergeProp])\n      ? {\n          ...stateRemoved[toMergeProp],\n          ...propValues\n        }\n      : stateRemoved[toMergeProp]\n  };\n\n  return {\n    ...stateRemoved,\n    ...toBeMerged\n  };\n}\n\nfunction replaceDatasetAndDeps<T extends VisState>(\n  state: T,\n  dataId: string,\n  dataIdToUse: string\n): T {\n  return compose_<T>([\n    apply_(replaceDatasetDepsInState, {dataId, dataIdToUse}),\n    apply_(removeDatasetUpdater, {dataId})\n  ])(state);\n}\n\nexport function prepareStateForDatasetReplace<T extends VisState>(\n  state: T,\n  dataId: string,\n  dataIdToUse: string\n): T {\n  const serializedState = serializeVisState(state, state.schema);\n  const nextState = replaceDatasetAndDeps(state, dataId, dataIdToUse);\n  // make a copy of layerOrder, because layer id will be removed from it by calling removeLayerUpdater\n  const preserveLayerOrder = [...state.layerOrder];\n\n  // preserve dataset order\n  nextState.preserveDatasetOrder = Object.keys(state.datasets).map(d =>\n    d === dataId ? dataIdToUse : d\n  );\n\n  // preserveLayerOrder\n  if (nextState.layerToBeMerged?.length) {\n    // copy split maps to be merged, because it will be reset in remove layer\n    nextState.splitMapsToBeMerged = serializedState?.splitMaps ?? [];\n    nextState.layerOrder = [...preserveLayerOrder];\n  }\n\n  return nextState;\n}\n\nexport function replaceDatasetDepsInState<T extends VisState>(\n  state: T,\n  {dataId, dataIdToUse}: {dataId: string; dataIdToUse: string}\n): T {\n  const serializedState = serializeVisState(state, state.schema);\n\n  const nextState = state.mergers.reduce(\n    (\n      accuState,\n      {prop, toMergeProp, replaceParentDatasetIds, getChildDatasetIds, saveUnmerged, preserveOrder}\n    ) => {\n      // get dataset ids that are depends on this dataset\n      const props = toArray(prop);\n      const toMergeProps = toArray(toMergeProp);\n      const savedProps = serializedState ? props.map(p => serializedState[p]) : [];\n\n      let replacedState = accuState;\n      savedProps.forEach((propValue, i) => {\n        const mergerOptions = {\n          prop: props[i],\n          toMergeProp: toMergeProps[i],\n          getChildDatasetIds,\n          saveUnmerged\n        };\n\n        const replacedItem =\n          replaceParentDatasetIds?.(propValue, dataId, dataIdToUse) ||\n          defaultReplaceParentDatasetIds(propValue, dataId, dataIdToUse);\n        replacedState = replacedItem\n          ? replacePropValueInState(replacedState, replacedItem, mergerOptions)\n          : replacedState;\n\n        if (\n          mergerOptions.toMergeProp !== undefined &&\n          replacedState[mergerOptions.toMergeProp]?.length &&\n          preserveOrder\n        ) {\n          replacedState[preserveOrder] = propValue.map(item => item.id);\n        }\n      });\n\n      return replacedState;\n    },\n    state\n  );\n\n  return nextState;\n}\n\nfunction replacePropValueInState(\n  state,\n  replacedItem,\n  {prop, toMergeProp, getChildDatasetIds, saveUnmerged}\n) {\n  // prop is depends on the dataset to be replaced\n  // remove prop from state, and move it to toBeMerged\n  let nextState = moveValueToBeMerged(state, replacedItem, {prop, toMergeProp, saveUnmerged});\n  const childDataIds = getChildDatasetIds?.(replacedItem) || findChildDatasetIds(replacedItem);\n\n  if (childDataIds) {\n    nextState = toArray(childDataIds).reduce((accu, childDataId) => {\n      // shouldn't need to change child dataset id,\n      // but still need to move out of state and merge back in\n      return replaceDatasetAndDeps(accu, childDataId, childDataId);\n    }, nextState);\n  }\n  return nextState;\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {ActionTypes} from '@kepler.gl/actions';\nimport {handleActions} from 'redux-actions';\nimport * as visStateUpdaters from './vis-state-updaters';\n\n/**\n * Important: Do not rename `actionHandler` or the assignment pattern of property value.\n * It is used to generate documentation\n */\nconst actionHandler = {\n  [ActionTypes.ADD_FILTER]: visStateUpdaters.addFilterUpdater,\n\n  [ActionTypes.ADD_LAYER]: visStateUpdaters.addLayerUpdater,\n\n  [ActionTypes.APPLY_LAYER_CONFIG]: visStateUpdaters.applyLayerConfigUpdater,\n\n  [ActionTypes.DUPLICATE_LAYER]: visStateUpdaters.duplicateLayerUpdater,\n\n  [ActionTypes.SET_FILTER_VIEW]: visStateUpdaters.setFilterViewUpdater,\n\n  [ActionTypes.INTERACTION_CONFIG_CHANGE]: visStateUpdaters.interactionConfigChangeUpdater,\n\n  [ActionTypes.LAYER_CLICK]: visStateUpdaters.layerClickUpdater,\n\n  [ActionTypes.LAYER_CONFIG_CHANGE]: visStateUpdaters.layerConfigChangeUpdater,\n\n  [ActionTypes.LAYER_SET_IS_VALID]: visStateUpdaters.layerSetIsValidUpdater,\n\n  [ActionTypes.LAYER_HOVER]: visStateUpdaters.layerHoverUpdater,\n\n  [ActionTypes.LAYER_TYPE_CHANGE]: visStateUpdaters.layerTypeChangeUpdater,\n\n  [ActionTypes.LAYER_VIS_CONFIG_CHANGE]: visStateUpdaters.layerVisConfigChangeUpdater,\n\n  [ActionTypes.LAYER_TEXT_LABEL_CHANGE]: visStateUpdaters.layerTextLabelChangeUpdater,\n\n  [ActionTypes.LAYER_VISUAL_CHANNEL_CHANGE]: visStateUpdaters.layerVisualChannelChangeUpdater,\n\n  [ActionTypes.LAYER_COLOR_UI_CHANGE]: visStateUpdaters.layerColorUIChangeUpdater,\n\n  [ActionTypes.TOGGLE_LAYER_ANIMATION]: visStateUpdaters.toggleLayerAnimationUpdater,\n\n  [ActionTypes.TOGGLE_LAYER_ANIMATION_CONTROL]: visStateUpdaters.toggleLayerAnimationControlUpdater,\n\n  [ActionTypes.LOAD_FILES]: visStateUpdaters.loadFilesUpdater,\n\n  [ActionTypes.LOAD_FILES_ERR]: visStateUpdaters.loadFilesErrUpdater,\n\n  [ActionTypes.LOAD_NEXT_FILE]: visStateUpdaters.loadNextFileUpdater,\n\n  [ActionTypes.LOAD_FILE_STEP_SUCCESS]: visStateUpdaters.loadFileStepSuccessUpdater,\n\n  [ActionTypes.MAP_CLICK]: visStateUpdaters.mapClickUpdater,\n\n  [ActionTypes.MOUSE_MOVE]: visStateUpdaters.mouseMoveUpdater,\n\n  [ActionTypes.RECEIVE_MAP_CONFIG]: visStateUpdaters.receiveMapConfigUpdater,\n\n  [ActionTypes.REMOVE_DATASET]: visStateUpdaters.removeDatasetUpdater,\n\n  [ActionTypes.REMOVE_FILTER]: visStateUpdaters.removeFilterUpdater,\n\n  [ActionTypes.REMOVE_LAYER]: visStateUpdaters.removeLayerUpdater,\n\n  [ActionTypes.REORDER_LAYER]: visStateUpdaters.reorderLayerUpdater,\n\n  [ActionTypes.RESET_MAP_CONFIG]: visStateUpdaters.resetMapConfigUpdater,\n\n  [ActionTypes.SET_FILTER]: visStateUpdaters.setFilterUpdater,\n\n  [ActionTypes.SET_FILTER_ANIMATION_TIME]: visStateUpdaters.setFilterAnimationTimeUpdater,\n\n  [ActionTypes.SET_FILTER_ANIMATION_TIME_CONFIG]:\n    visStateUpdaters.setFilterAnimationTimeConfigUpdater,\n\n  [ActionTypes.SET_FILTER_ANIMATION_WINDOW]: visStateUpdaters.setFilterAnimationWindowUpdater,\n\n  [ActionTypes.SET_FILTER_PLOT]: visStateUpdaters.setFilterPlotUpdater,\n\n  [ActionTypes.SET_MAP_INFO]: visStateUpdaters.setMapInfoUpdater,\n\n  [ActionTypes.SHOW_DATASET_TABLE]: visStateUpdaters.showDatasetTableUpdater,\n\n  [ActionTypes.UPDATE_TABLE_COLOR]: visStateUpdaters.updateTableColorUpdater,\n\n  [ActionTypes.TOGGLE_FILTER_ANIMATION]: visStateUpdaters.toggleFilterAnimationUpdater,\n\n  [ActionTypes.UPDATE_FILTER_ANIMATION_SPEED]: visStateUpdaters.updateFilterAnimationSpeedUpdater,\n\n  [ActionTypes.SET_LAYER_ANIMATION_TIME]: visStateUpdaters.setLayerAnimationTimeUpdater,\n\n  [ActionTypes.UPDATE_LAYER_ANIMATION_SPEED]: visStateUpdaters.updateLayerAnimationSpeedUpdater,\n\n  [ActionTypes.TOGGLE_LAYER_FOR_MAP]: visStateUpdaters.toggleLayerForMapUpdater,\n\n  [ActionTypes.TOGGLE_SPLIT_MAP]: visStateUpdaters.toggleSplitMapUpdater,\n\n  [ActionTypes.UPDATE_LAYER_BLENDING]: visStateUpdaters.updateLayerBlendingUpdater,\n\n  [ActionTypes.UPDATE_OVERLAY_BLENDING]: visStateUpdaters.updateOverlayBlendingUpdater,\n\n  [ActionTypes.UPDATE_VIS_DATA]: visStateUpdaters.updateVisDataUpdater,\n\n  [ActionTypes.RENAME_DATASET]: visStateUpdaters.renameDatasetUpdater,\n\n  [ActionTypes.UPDATE_DATASET_PROPS]: visStateUpdaters.updateDatasetPropsUpdater,\n\n  [ActionTypes.SET_FEATURES]: visStateUpdaters.setFeaturesUpdater,\n\n  [ActionTypes.DELETE_FEATURE]: visStateUpdaters.deleteFeatureUpdater,\n\n  [ActionTypes.SET_POLYGON_FILTER_LAYER]: visStateUpdaters.setPolygonFilterLayerUpdater,\n\n  [ActionTypes.SET_SELECTED_FEATURE]: visStateUpdaters.setSelectedFeatureUpdater,\n\n  [ActionTypes.SET_EDITOR_MODE]: visStateUpdaters.setEditorModeUpdater,\n\n  [ActionTypes.TOGGLE_EDITOR_VISIBILITY]: visStateUpdaters.toggleEditorVisibilityUpdater,\n\n  [ActionTypes.TOGGLE_FILTER_FEATURE]: visStateUpdaters.toggleFilterFeatureUpdater,\n\n  [ActionTypes.APPLY_CPU_FILTER]: visStateUpdaters.applyCPUFilterUpdater,\n\n  [ActionTypes.SORT_TABLE_COLUMN]: visStateUpdaters.sortTableColumnUpdater,\n\n  [ActionTypes.PIN_TABLE_COLUMN]: visStateUpdaters.pinTableColumnUpdater,\n\n  [ActionTypes.COPY_TABLE_COLUMN]: visStateUpdaters.copyTableColumnUpdater,\n\n  [ActionTypes.SET_COLUMN_DISPLAY_FORMAT]: visStateUpdaters.setColumnDisplayFormatUpdater,\n\n  [ActionTypes.NEXT_FILE_BATCH]: visStateUpdaters.nextFileBatchUpdater,\n\n  [ActionTypes.PROCESS_FILE_CONTENT]: visStateUpdaters.processFileContentUpdater,\n\n  [ActionTypes.SET_LAYER_ANIMATION_TIME_CONFIG]:\n    visStateUpdaters.setLayerAnimationTimeConfigUpdater,\n\n  [ActionTypes.ADD_EFFECT]: visStateUpdaters.addEffectUpdater,\n\n  [ActionTypes.REORDER_EFFECT]: visStateUpdaters.reorderEffectUpdater,\n\n  [ActionTypes.REMOVE_EFFECT]: visStateUpdaters.removeEffectUpdater,\n\n  [ActionTypes.UPDATE_EFFECT]: visStateUpdaters.updateEffectUpdater\n};\n\n// construct vis-state reducer\nexport const visStateReducerFactory = (initialState = {}) =>\n  // @ts-expect-error\n  handleActions(actionHandler, {\n    ...visStateUpdaters.INITIAL_VIS_STATE,\n    ...initialState,\n    initialState\n  });\n\nexport default visStateReducerFactory();\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport geoViewport from '@mapbox/geo-viewport';\nimport booleanWithin from '@turf/boolean-within';\nimport bboxPolygon from '@turf/bbox-polygon';\nimport {fitBounds} from '@math.gl/web-mercator';\nimport deepmerge from 'deepmerge';\nimport pick from 'lodash.pick';\n\nimport {getCenterAndZoomFromBounds, validateBounds, MAPBOX_TILE_SIZE} from '@kepler.gl/utils';\nimport {MapStateActions, ReceiveMapConfigPayload, ActionTypes} from '@kepler.gl/actions';\nimport {MapState, Bounds, Viewport} from '@kepler.gl/types';\n\n/**\n * Updaters for `mapState` reducer. Can be used in your root reducer to directly modify kepler.gl's state.\n * Read more about [Using updaters](../advanced-usage/using-updaters.md)\n * @public\n * @example\n *\n * import keplerGlReducer, {mapStateUpdaters} from 'kepler.gl/reducers';\n * // Root Reducer\n * const reducers = combineReducers({\n *  keplerGl: keplerGlReducer,\n *  app: appReducer\n * });\n *\n * const composedReducer = (state, action) => {\n *  switch (action.type) {\n *    // click button to close side panel\n *    case 'CLICK_BUTTON':\n *      return {\n *        ...state,\n *        keplerGl: {\n *          ...state.keplerGl,\n *          foo: {\n *             ...state.keplerGl.foo,\n *             mapState: mapStateUpdaters.fitBoundsUpdater(\n *               mapState, {payload: [127.34, 31.09, 127.56, 31.59]]}\n *             )\n *          }\n *        }\n *      };\n *  }\n *  return reducers(state, action);\n * };\n *\n * export default composedReducer;\n */\n/* eslint-disable no-unused-vars */\n// @ts-ignore\nconst mapStateUpdaters = null;\n/* eslint-enable no-unused-vars */\n\n/**\n * Default initial `mapState`\n * @memberof mapStateUpdaters\n * @constant\n * @property pitch Default: `0`\n * @property bearing Default: `0`\n * @property latitude Default: `37.75043`\n * @property longitude Default: `-122.34679`\n * @property zoom Default: `9`\n * @property dragRotate Default: `false`\n * @property width Default: `800`\n * @property height Default: `800`\n * @property minZoom: `undefined`,\n * @property maxZoom: `undefined`,\n * @property maxBounds: `undefined`,\n * @property isSplit: `false`,\n * @property isViewportSynced: `true`,\n * @property isZoomLocked: `false`,\n * @property splitMapViewports: `[]`\n * @public\n */\nexport const INITIAL_MAP_STATE: MapState = {\n  pitch: 0,\n  bearing: 0,\n  // changes done by me\n  latitude: -35.282001,\n  longitude:  149.128998,  \n  zoom: 9,\n  dragRotate: false,\n  width: 800,\n  height: 800,\n  minZoom: undefined,\n  maxZoom: undefined,\n  maxBounds: undefined,\n  isSplit: false,\n  isViewportSynced: true,\n  isZoomLocked: false,\n  splitMapViewports: []\n};\n\n/* Updaters */\n/**\n * Update map viewport\n * @memberof mapStateUpdaters\n * @public\n */\nexport const updateMapUpdater = (\n  state: MapState,\n  action: MapStateActions.UpdateMapUpdaterAction\n): MapState => {\n  const {viewport, mapIndex = 0} = action.payload;\n\n  if (state.isViewportSynced) {\n    // The `updateViewport` function is typed as (Viewport, Viewport) -> Viewport but here the\n    // expected typing is (MapState, Viewport) -> MapState.\n    // this could be a potential bug as we treat Viewport and MapState as equal seemingly\n    // @ts-expect-error Type 'Viewport' is missing the following properties from type 'MapState': isSplit, isViewportSynced, isZoomLocked, splitMapViewports\n    return updateViewport(state, viewport);\n  }\n\n  let otherViewportMapIndex = -1;\n  const splitMapViewports = state.splitMapViewports.map((currentViewport, i) => {\n    if (i === mapIndex) {\n      // update the matching viewport with the newViewport info in the action payload\n      return updateViewport(currentViewport, viewport);\n    }\n\n    otherViewportMapIndex = i;\n    // make no changes to the other viewport (yet)\n    return currentViewport;\n  });\n\n  // make conditional updates to the other viewport not matching this payload's `mapIndex`\n  if (Number.isFinite(otherViewportMapIndex) && otherViewportMapIndex > -1) {\n    // width and height are a special case and are always updated\n    splitMapViewports[otherViewportMapIndex] = {\n      ...splitMapViewports[otherViewportMapIndex],\n      width: splitMapViewports[mapIndex].width,\n      height: splitMapViewports[mapIndex].height\n    };\n\n    if (state.isZoomLocked) {\n      // update the other viewport with the new zoom from the split viewport that was updated with this payload's `mapIndex`\n      splitMapViewports[otherViewportMapIndex] = {\n        ...splitMapViewports[otherViewportMapIndex],\n        zoom: splitMapViewports[mapIndex].zoom\n      };\n    }\n  }\n\n  return {\n    // update the top-level mapState viewport with the most recently interacted-with split viewport\n    // WHY? this avoids zoom and bounds \"jumping\" due to a \"stale\" top-level mapState viewport when:\n    //  1. toggling off the unsynced viewports mode to switch to the synced viewports mode\n    //  2. toggling on the zoom lock during an unsynced viewports mode\n    ...state,\n    ...splitMapViewports[mapIndex],\n    // update the mapState with the new array of split viewports\n    splitMapViewports\n  };\n};\n\n/**\n * Fit map viewport to bounds\n * @memberof mapStateUpdaters\n * @public\n */\nexport const fitBoundsUpdater = (\n  state: MapState,\n  action: MapStateActions.FitBoundsUpdaterAction\n): MapState => {\n  const centerAndZoom = getCenterAndZoomFromBounds(action.payload, {\n    width: state.width,\n    height: state.height\n  });\n  if (!centerAndZoom) {\n    // bounds is invalid\n    return state;\n  }\n\n  const newState = {\n    ...state,\n    latitude: centerAndZoom.center[1],\n    longitude: centerAndZoom.center[0],\n    // For marginal or invalid bounds, zoom may be NaN. Make sure to provide a valid value in order\n    // to avoid corrupt state and potential crashes as zoom is expected to be a number\n    ...(Number.isFinite(centerAndZoom.zoom) ? {zoom: centerAndZoom.zoom} : {})\n  };\n\n  // if fitting to bounds while split and unsynced\n  // copy the new latitude, longitude, and zoom values to each split viewport\n  if (newState.splitMapViewports.length) {\n    newState.splitMapViewports = newState.splitMapViewports.map(currentViewport => ({\n      ...currentViewport,\n      latitude: newState.latitude,\n      longitude: newState.longitude,\n      zoom: newState.zoom\n    }));\n  }\n\n  return newState;\n};\n\n/**\n * Toggle between 3d and 2d map.\n * @memberof mapStateUpdaters\n * @public\n */\nexport const togglePerspectiveUpdater = (\n  state: MapState,\n  action: MapStateActions.TogglePerspectiveUpdaterAction\n): MapState => {\n  const newState = {\n    ...state,\n    ...{\n      pitch: state.dragRotate ? 0 : 50,\n      bearing: state.dragRotate ? 0 : 24\n    },\n    dragRotate: !state.dragRotate\n  };\n\n  // if toggling 3d and 2d while split and unsynced\n  // copy the new pitch, bearing, and dragRotate values to each split viewport\n  if (newState.splitMapViewports.length) {\n    newState.splitMapViewports = newState.splitMapViewports.map(currentViewport => ({\n      ...currentViewport,\n      pitch: newState.pitch,\n      bearing: newState.bearing,\n      dragRotate: newState.dragRotate\n    }));\n  }\n\n  return newState;\n};\n\n/**\n * reset mapState to initial State\n * @memberof mapStateUpdaters\n * @public\n */\nexport const resetMapConfigUpdater = (state: MapState): MapState => ({\n  ...INITIAL_MAP_STATE,\n  ...state.initialState,\n  initialState: state.initialState\n});\n\n// consider case where you have a split map and user wants to reset\n/**\n * Update `mapState` to propagate a new config\n * @memberof mapStateUpdaters\n * @public\n */\nexport const receiveMapConfigUpdater = (\n  state: MapState,\n  {\n    // @ts-expect-error\n    payload: {config = {}, options = {}, bounds = null}\n  }: {\n    type?: typeof ActionTypes.RECEIVE_MAP_CONFIG;\n    payload: ReceiveMapConfigPayload;\n  }\n): MapState => {\n  /**\n   * @type {Partial<MapState>}\n   */\n  const mapState = (config || {}).mapState || {};\n  // merged received mapState with previous state\n  // state also may include properties that are new to an existing, saved project's mapState\n\n  let mergedState = deepmerge<MapState>(state, mapState, {\n    // note: deepmerge by default will merge arrays by concatenating them\n    // but we need to overwrite destination arrays with source arrays, if present\n    // https://github.com/TehShrike/deepmerge#arraymerge-example-overwrite-target-array\n    arrayMerge: (_destinationArray, sourceArray) => sourceArray\n  });\n\n  // if center map\n  // center map will override mapState config\n  if (options.centerMap && bounds) {\n    mergedState = fitBoundsUpdater(mergedState, {\n      payload: bounds\n    });\n  }\n\n  return {\n    ...mergedState,\n    // update width if `isSplit` has changed\n    ...getMapDimForSplitMap(mergedState.isSplit, state)\n  };\n};\n\n/**\n * Toggle between one or split maps\n * @memberof mapStateUpdaters\n * @public\n */\nexport const toggleSplitMapUpdater = (\n  state: MapState,\n  action: MapStateActions.ToggleSplitMapUpdaterAction\n): MapState => ({\n  ...state,\n  ...getMapDimForSplitMap(!state.isSplit, state),\n  isSplit: !state.isSplit,\n  ...(!state.isSplit === false\n    ? {\n        // if toggling to no longer split (single mode) then reset a few properties\n        isViewportSynced: true,\n        isZoomLocked: false,\n        splitMapViewports: []\n      }\n    : {})\n});\n\n/**\n * Toggle between locked and unlocked split viewports\n * @memberof mapStateUpdaters\n * @public\n */\nexport const toggleSplitMapViewportUpdater = (\n  state: MapState,\n  action: MapStateActions.ToggleSplitMapViewportUpdaterAction\n) => {\n  // new map state immediately gets the new, optional payload values for isViewportSynced and/or isZoomLocked\n  const newMapState = {\n    ...state,\n    ...(action.payload || {})\n  };\n\n  if (newMapState.isViewportSynced) {\n    // switching from unsynced to synced viewports\n    newMapState.splitMapViewports = [];\n  } else {\n    // switching from synced to unsynced viewports\n    // or already in unsynced mode and toggling locked zoom\n\n    if (state.isZoomLocked && !newMapState.isZoomLocked) {\n      // switching off locked zoom while unsynced\n      // don't copy the mapStates to left and right viewports because there will be zoom \"jumping\"\n      return newMapState;\n    }\n\n    if (!state.isZoomLocked && newMapState.isZoomLocked) {\n      // switching on locked zoom while unsynced\n      // only copy zoom viewport property from the most recently interacted-with viewport to the other\n      // TODO: do we want to check for a match a different way, such as a combo of `latitude` and `longitude`?\n      const lastUpdatedViewportIndex = newMapState.splitMapViewports.findIndex(\n        v => newMapState.zoom === v.zoom\n      );\n\n      const splitMapViewports = newMapState.splitMapViewports.map((currentViewport, i) => {\n        if (i === lastUpdatedViewportIndex) {\n          // no zoom to modify here\n          return currentViewport;\n        }\n        // the other viewport gets the most recently interacted-with viewport's zoom\n        // WHY? the viewport the user was last interacting with will set zoom across the board for smooth UX\n        return {\n          ...currentViewport,\n          zoom: newMapState.splitMapViewports[lastUpdatedViewportIndex].zoom\n        };\n      });\n\n      newMapState.splitMapViewports = splitMapViewports;\n\n      return newMapState;\n    }\n\n    // if current viewport is synced, and we are unsyncing it\n    // or already in unsynced mode and NOT toggling locked zoom\n    // make a fresh copy of the current viewport object, assign it to splitMapViewports[]\n    // pickViewportPropsFromMapState is called twice to avoid memory allocation conflicts\n    const leftViewport = pickViewportPropsFromMapState(newMapState);\n    const rightViewport = pickViewportPropsFromMapState(newMapState);\n    newMapState.splitMapViewports = [leftViewport, rightViewport];\n  }\n\n  // return new state\n  return newMapState;\n};\n\n// Helpers\nexport function getMapDimForSplitMap(isSplit, state) {\n  // cases:\n  // 1. state split: true - isSplit: true\n  // do nothing\n  // 2. state split: false - isSplit: false\n  // do nothing\n  if (state.isSplit === isSplit) {\n    return {};\n  }\n\n  const width =\n    state.isSplit && !isSplit\n      ? // 3. state split: true - isSplit: false\n        // double width\n        state.width * 2\n      : // 4. state split: false - isSplit: true\n        // split width\n        state.width / 2;\n\n  return {\n    width\n  };\n}\n\nfunction updateViewportBasedOnBounds(state: MapState, newMapState: MapState) {\n  // Get the new viewport bounds\n  const viewportBounds = geoViewport.bounds(\n    [newMapState.longitude, newMapState.latitude],\n    newMapState.zoom,\n    [newMapState.width, newMapState.height],\n    MAPBOX_TILE_SIZE\n  );\n  // Generate turf Polygon from bounds for comparison\n  const viewportBoundsPolygon = bboxPolygon(viewportBounds);\n  // @ts-ignore\n  const newStateMaxBounds: Bounds = newMapState.maxBounds;\n  // @ts-ignore\n  const maxBoundsPolygon = bboxPolygon(newStateMaxBounds);\n\n  // If maxBounds has changed reset the viewport to snap to bounds\n  const hasMaxBoundsChanged =\n    !state.maxBounds || !state.maxBounds.every((val, idx) => val === newStateMaxBounds[idx]);\n  if (hasMaxBoundsChanged) {\n    // Check if the newMapState viewport is within maxBounds\n    if (!booleanWithin(viewportBoundsPolygon, maxBoundsPolygon)) {\n      const {latitude, longitude, zoom} = fitBounds({\n        width: newMapState.width,\n        height: newMapState.width,\n        bounds: [\n          [newStateMaxBounds[0], newStateMaxBounds[1]],\n          [newStateMaxBounds[2], newStateMaxBounds[3]]\n        ]\n      });\n\n      newMapState = {\n        ...newMapState,\n        latitude,\n        longitude,\n        // For marginal or invalid bounds, zoom may be NaN. Make sure to provide a valid value in order\n        // to avoid corrupt state and potential crashes as zoom is expected to be a number\n        ...(Number.isFinite(zoom) ? {zoom} : {})\n      };\n    }\n    return newMapState;\n  }\n\n  // Check if the newMapState viewport is within maxBounds\n  if (!booleanWithin(viewportBoundsPolygon, maxBoundsPolygon)) {\n    newMapState = {\n      ...newMapState,\n      longitude: state.longitude,\n      latitude: state.latitude,\n      zoom: state.zoom\n    };\n  }\n\n  return newMapState;\n}\n\nexport function pickViewportPropsFromMapState(state: MapState): Viewport {\n  return pick(state, [\n    'width',\n    'height',\n    'zoom',\n    'pitch',\n    'bearing',\n    'latitude',\n    'longitude',\n    'dragRotate',\n    'minZoom',\n    'maxZoom',\n    'maxBounds'\n  ]);\n}\n\n/** Select items from object whose value is not undefined */\nconst definedProps = obj =>\n  Object.entries(obj).reduce(\n    (accu, [k, v]) => ({...accu, ...(v !== undefined ? {[k]: v} : {})}),\n    {}\n  );\n\nfunction updateViewport(originalViewport: Viewport, viewportUpdates: Viewport): Viewport {\n  let newViewport = {\n    ...originalViewport,\n    ...(definedProps(viewportUpdates) || {})\n  };\n\n  // Make sure zoom level doesn't go bellow minZoom if defined\n  if (newViewport.minZoom && newViewport.zoom && newViewport.zoom < newViewport.minZoom) {\n    newViewport.zoom = newViewport.minZoom;\n  }\n  // Make sure zoom level doesn't go above maxZoom if defined\n  if (newViewport.maxZoom && newViewport.zoom && newViewport.zoom > newViewport.maxZoom) {\n    newViewport.zoom = newViewport.maxZoom;\n  }\n  // Limit viewport update based on maxBounds\n  if (newViewport.maxBounds && validateBounds(newViewport.maxBounds)) {\n    // @ts-expect-error Type 'Viewport' is missing the following properties from type 'MapState': isSplit, isViewportSynced, isZoomLocked, splitMapViewports\n    newViewport = updateViewportBasedOnBounds(originalViewport, newViewport);\n  }\n\n  return newViewport;\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {handleActions} from 'redux-actions';\nimport {ActionTypes} from '@kepler.gl/actions';\nimport * as mapStateUpdaters from './map-state-updaters';\n\n/**\n * Important: Do not rename `actionHandler` or the assignment pattern of property value.\n * It is used to generate documentation\n */\nconst actionHandler = {\n  [ActionTypes.UPDATE_MAP]: mapStateUpdaters.updateMapUpdater,\n  [ActionTypes.FIT_BOUNDS]: mapStateUpdaters.fitBoundsUpdater,\n  [ActionTypes.TOGGLE_PERSPECTIVE]: mapStateUpdaters.togglePerspectiveUpdater,\n  [ActionTypes.RECEIVE_MAP_CONFIG]: mapStateUpdaters.receiveMapConfigUpdater,\n  [ActionTypes.RESET_MAP_CONFIG]: mapStateUpdaters.resetMapConfigUpdater,\n  [ActionTypes.TOGGLE_SPLIT_MAP]: mapStateUpdaters.toggleSplitMapUpdater,\n  [ActionTypes.TOGGLE_SPLIT_MAP_VIEWPORT]: mapStateUpdaters.toggleSplitMapViewportUpdater\n};\n\n/* Reducer */\nexport const mapStateReducerFactory = (initialState = {}) =>\n  // @ts-expect-error\n  handleActions(actionHandler, {\n    ...mapStateUpdaters.INITIAL_MAP_STATE,\n    ...initialState,\n    initialState\n  });\n\nexport default mapStateReducerFactory();\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport Task, {withTask} from 'react-palm/tasks';\nimport cloneDeep from 'lodash.clonedeep';\nimport Console from 'global/console';\n\n// Utils\nimport {\n  getDefaultLayerGroupVisibility,\n  isValidStyleUrl,\n  getStyleDownloadUrl,\n  mergeLayerGroupVisibility,\n  editTopMapStyle,\n  editBottomMapStyle,\n  getStyleImageIcon,\n  generateHashId,\n  isPlainObject,\n  hexToRgb,\n  colorMaybeToRGB\n} from '@kepler.gl/utils';\nimport {\n  DEFAULT_MAP_STYLES,\n  DEFAULT_LAYER_GROUPS,\n  DEFAULT_MAPBOX_API_URL,\n  NO_MAP_ID,\n  DEFAULT_BLDG_COLOR,\n  DEFAULT_BACKGROUND_COLOR,\n  BASE_MAP_BACKGROUND_LAYER_IDS\n} from '@kepler.gl/constants';\nimport {ACTION_TASK, LOAD_MAP_STYLE_TASK} from '@kepler.gl/tasks';\nimport {rgb} from 'd3-color';\n\nimport {\n  RGBColor,\n  LayerGroup,\n  BaseMapStyle,\n  MapStyles,\n  InputStyle,\n  VisibleLayerGroups\n} from '@kepler.gl/types';\nimport {\n  ActionTypes,\n  ReceiveMapConfigPayload,\n  KeplerGlInitPayload,\n  MapStyleActions,\n  loadMapStyles,\n  loadMapStyleErr\n} from '@kepler.gl/actions';\n\nexport type MapboxStyleUrl = string;\n\nexport type MapStyle = {\n  styleType: string;\n  visibleLayerGroups: VisibleLayerGroups;\n  topLayerGroups: VisibleLayerGroups;\n  mapStyles: MapStyles;\n  // save mapbox access token\n  mapboxApiAccessToken: string | null;\n  mapboxApiUrl: string;\n  mapStylesReplaceDefault: boolean;\n  inputStyle: InputStyle;\n  threeDBuildingColor: RGBColor;\n  backgroundColor: RGBColor;\n  custom3DBuildingColor: boolean;\n  bottomMapStyle: any;\n  topMapStyle: any;\n  initialState?: MapStyle;\n  isLoading: {\n    [key: string]: boolean;\n  };\n};\n\nconst getDefaultState = (): MapStyle => {\n  const visibleLayerGroups = {};\n  //Changes done\n  const styleType = 'positron';\n  const topLayerGroups = {};\n\n  return {\n    styleType,\n    visibleLayerGroups,\n    topLayerGroups,\n    mapStyles: DEFAULT_MAP_STYLES.reduce(\n      (accu, curr) => ({\n        ...accu,\n        [curr.id]: curr\n      }),\n      {}\n    ),\n    // save mapbox access token\n    mapboxApiAccessToken: null,\n    mapboxApiUrl: DEFAULT_MAPBOX_API_URL,\n    mapStylesReplaceDefault: false,\n    inputStyle: getInitialInputStyle(),\n    threeDBuildingColor: hexToRgb(DEFAULT_BLDG_COLOR),\n    custom3DBuildingColor: false,\n    backgroundColor: hexToRgb(DEFAULT_BACKGROUND_COLOR),\n    isLoading: {},\n    bottomMapStyle: undefined,\n    topMapStyle: undefined\n  };\n};\n\n/**\n * Updaters for `mapStyle`. Can be used in your root reducer to directly modify kepler.gl's state.\n * Read more about [Using updaters](../advanced-usage/using-updaters.md)\n * @public\n * @example\n *\n * import keplerGlReducer, {mapStyleUpdaters} from 'kepler.gl/reducers';\n * // Root Reducer\n * const reducers = combineReducers({\n *  keplerGl: keplerGlReducer,\n *  app: appReducer\n * });\n *\n * const composedReducer = (state, action) => {\n *  switch (action.type) {\n *    // click button to hide label from background map\n *    case 'CLICK_BUTTON':\n *      return {\n *        ...state,\n *        keplerGl: {\n *          ...state.keplerGl,\n *          foo: {\n *             ...state.keplerGl.foo,\n *             mapStyle: mapStyleUpdaters.mapConfigChangeUpdater(\n *               mapStyle,\n *               {payload: {visibleLayerGroups: {label: false, road: true, background: true}}}\n *             )\n *          }\n *        }\n *      };\n *  }\n *  return reducers(state, action);\n * };\n *\n * export default composedReducer;\n */\n/* eslint-disable no-unused-vars */\n// @ts-ignore\nconst mapStyleUpdaters = null;\n/* eslint-enable no-unused-vars */\n/**\n * Default initial `mapStyle`\n * @memberof mapStyleUpdaters\n * @constant\n * @property styleType - Default: `'dark'`\n * @property visibleLayerGroups - Default: `{}`\n * @property topLayerGroups - Default: `{}`\n * @property mapStyles - mapping from style key to style object\n * @property mapboxApiAccessToken - Default: `null`\n * @Property mapboxApiUrl - Default null\n * @Property mapStylesReplaceDefault - Default: `false`\n * @property inputStyle - Default: `{}`\n * @property threeDBuildingColor - Default: `[r, g, b]`\n * @property backgroundColor - Default: `[r, g, b]`\n * @public\n */\nexport const INITIAL_MAP_STYLE: MapStyle = getDefaultState();\n\ninterface GetMapStylesParam {\n  styleType: string;\n  visibleLayerGroups: {[id: string]: LayerGroup | boolean};\n  topLayerGroups: {[id: string]: LayerGroup | boolean};\n  mapStyles: {[id: string]: any};\n}\n\n/**\n * Create two map styles from preset map style, one for top map one for bottom\n *\n * @param {string} styleType - current map style\n * @param {Object} visibleLayerGroups - visible layers of bottom map\n * @param {Object} topLayerGroups - visible layers of top map\n * @param {Object} mapStyles - a dictionary of all map styles\n * @returns {Object} bottomMapStyle | topMapStyle | isRaster\n */\nexport function getMapStyles({\n  styleType,\n  visibleLayerGroups,\n  topLayerGroups,\n  mapStyles\n}: GetMapStylesParam) {\n  const mapStyle = mapStyles[styleType];\n\n  // style might not be loaded yet\n  if (!mapStyle || !mapStyle.style) {\n    return {};\n  }\n\n  const editable = Object.keys(visibleLayerGroups).length;\n\n  const bottomMapStyle = !editable\n    ? mapStyle.style\n    : editBottomMapStyle({\n        id: styleType,\n        mapStyle,\n        visibleLayerGroups\n      });\n\n  const hasTopLayer = editable > 0 && Object.values(topLayerGroups).some(v => v);\n\n  // mute top layer if not visible in bottom layer\n  const topLayers =\n    hasTopLayer &&\n    Object.keys(topLayerGroups).reduce(\n      (accu, key) => ({\n        ...accu,\n        [key]: topLayerGroups[key] && visibleLayerGroups[key]\n      }),\n      {} as {[id: string]: LayerGroup | boolean}\n    );\n\n  const topMapStyle = hasTopLayer\n    ? editTopMapStyle({\n        id: styleType,\n        mapStyle,\n        visibleLayerGroups: topLayers\n      })\n    : null;\n\n  return {bottomMapStyle, topMapStyle, editable};\n}\n\nfunction findLayerFillColor(layer) {\n  return layer && layer.paint && layer.paint['background-color'];\n}\n\n// need to be careful because some basemap layer.paint['background-color'] values may be an interpolate array expression instead of a color string\n// https://docs.mapbox.com/mapbox-gl-js/style-spec/layers/#paint-background-background-color\n// https://docs.mapbox.com/mapbox-gl-js/style-spec/expressions/#interpolate\nfunction getPaintColor(color) {\n  if (Array.isArray(color) && color[0] === 'interpolate') {\n    // get color of first zoom break\n    // [\"interpolate\", [\"linear\"], [\"zoom\"], 11, \"hsl(35, 32%, 91%)\", 13, \"hsl(35, 12%, 89%)\"]\n    return color[4];\n  }\n  return color;\n}\n\nfunction get3DBuildingColor(style): RGBColor {\n  // set building color to be the same as the background color.\n  if (!style.style) {\n    return hexToRgb(DEFAULT_BLDG_COLOR);\n  }\n\n  const backgroundLayer = (style.style.layers || []).find(({id}) => id === 'background');\n\n  const buildingLayer = (style.style.layers || []).find(({id}) => id.match(/building/));\n\n  const buildingColor =\n    findLayerFillColor(buildingLayer) || findLayerFillColor(backgroundLayer) || DEFAULT_BLDG_COLOR;\n\n  // brighten or darken building based on style\n  const operation = style.id.match(/(?=(dark|night))/) ? 'brighter' : 'darker';\n\n  const alpha = 0.2;\n  const rgbObj = rgb(buildingColor)[operation]([alpha]);\n  return [rgbObj.r, rgbObj.g, rgbObj.b];\n}\n\nfunction getBackgroundColorFromStyleBaseLayer(\n  style: BaseMapStyle,\n  backupBackgroundColor: RGBColor\n): RGBColor {\n  if (!style.style) {\n    return colorMaybeToRGB(backupBackgroundColor) || backupBackgroundColor;\n  }\n\n  // @ts-expect-error style.style not typed\n  const baseLayer = (style.style.layers || []).find(({id}) =>\n    BASE_MAP_BACKGROUND_LAYER_IDS.includes(id)\n  );\n\n  const backgroundColorOfBaseLayer = getPaintColor(findLayerFillColor(baseLayer));\n\n  const newBackgroundColor =\n    typeof backgroundColorOfBaseLayer === 'string'\n      ? backgroundColorOfBaseLayer\n      : backupBackgroundColor;\n\n  const newBackgroundColorAsRGBArray = colorMaybeToRGB(newBackgroundColor)\n    // if newBackgroundColor was in string HSL format it can introduce RGB numbers with decimals,\n    // which may render the background-color CSS of the <StyledMap> container incorrectly when using our own color utils `rgbToHex()`\n    // so we attempt to round to nearest integer here\n    ?.map(channelNumber => Math.round(channelNumber)) as RGBColor | null;\n\n  return newBackgroundColorAsRGBArray || backupBackgroundColor;\n}\n\n// determine new backgroundColor from either previous state basemap style, previous state backgroundColor, or the DEFAULT_BACKGROUND_COLOR\nfunction getBackgroundColor(previousState: MapStyle, styleType: string) {\n  const previousStateMapStyle = previousState.mapStyles[previousState.styleType];\n  const backupBackgroundColor = previousState.backgroundColor || DEFAULT_BACKGROUND_COLOR;\n  const backgroundColor =\n    styleType === NO_MAP_ID\n      ? // if the style has switched to the \"no basemap\" style,\n        // attempt to detect backgroundColor of the previous basemap if it was a mapbox basemap\n        // and set it as the \"no basemap\" backgroundColor\n        getBackgroundColorFromStyleBaseLayer(previousStateMapStyle, backupBackgroundColor)\n      : // otherwise leave it alone and rely on the previous state's preexisting backgroundColor\n        // or DEFAULT_BACKGROUND_COLOR as a last resort\n        backupBackgroundColor;\n\n  return backgroundColor;\n}\n\nfunction getLayerGroupsFromStyle(style) {\n  return Array.isArray(style?.layers)\n    ? DEFAULT_LAYER_GROUPS.filter(lg => style.layers.filter(lg.filter).length)\n    : [];\n}\n\n// Updaters\n\n/**\n * @memberof mapStyleUpdaters\n * @public\n */\nexport const requestMapStylesUpdater = (\n  state: MapStyle,\n  {payload: {mapStyles, onSuccess}}: MapStyleActions.RequestMapStylesUpdaterAction\n): MapStyle => {\n  const toLoad = Object.keys(mapStyles).reduce(\n    (accu, id) => ({\n      ...accu,\n      ...(!state.isLoading[id] ? {[id]: mapStyles[id]} : {})\n    }),\n    {}\n  );\n  const loadMapStyleTasks = getLoadMapStyleTasks(\n    toLoad,\n    state.mapboxApiAccessToken,\n    state.mapboxApiUrl,\n    onSuccess\n  );\n\n  const isLoading = Object.keys(toLoad).reduce(\n    (accu, key) => ({\n      ...accu,\n      [key]: true\n    }),\n    {}\n  );\n  const nextState = {\n    ...state,\n    isLoading\n  };\n  return withTask(nextState, loadMapStyleTasks);\n};\n\n/**\n * Propagate `mapStyle` reducer with `mapboxApiAccessToken` and `mapStylesReplaceDefault`.\n * if mapStylesReplaceDefault is true mapStyles is emptied; loadMapStylesUpdater() will\n * populate mapStyles.\n *\n * @memberof mapStyleUpdaters\n * @public\n */\nexport const initMapStyleUpdater = (\n  state: MapStyle,\n  {\n    payload = {}\n  }: {\n    type?: typeof ActionTypes.INIT;\n    payload: KeplerGlInitPayload;\n  }\n): MapStyle => ({\n  ...state,\n  // save mapbox access token to map style state\n  mapboxApiAccessToken: payload.mapboxApiAccessToken || state.mapboxApiAccessToken,\n  mapboxApiUrl: payload.mapboxApiUrl || state.mapboxApiUrl,\n  mapStyles: !payload.mapStylesReplaceDefault ? state.mapStyles : {},\n  mapStylesReplaceDefault: payload.mapStylesReplaceDefault || false\n});\n// });\n\n/**\n * Update `visibleLayerGroups`to change layer group visibility\n * @memberof mapStyleUpdaters\n * @public\n */\nexport const mapConfigChangeUpdater = (\n  state: MapStyle,\n  action: MapStyleActions.MapConfigChangeUpdaterAction\n): MapStyle => {\n  return {\n    ...state,\n    ...action.payload,\n    ...getMapStyles({\n      ...state,\n      ...action.payload\n    })\n  };\n};\n\nconst hasStyleObject = style => isPlainObject(style?.style);\n\n/**\n * Change to another map style. The selected style should already been loaded into `mapStyle.mapStyles`\n * @memberof mapStyleUpdaters\n * @public\n */\nexport const mapStyleChangeUpdater = (\n  state: MapStyle,\n  {payload: {styleType, onSuccess}}: MapStyleActions.MapStyleChangeUpdaterAction\n): MapStyle => {\n  if (\n    // we might not have received the style yet\n    !state.mapStyles[styleType] ||\n    // or if it is a managed custom style asset\n    // and if it has not been hydrated with URL info yet (during app first initialization)\n    // and it does not have a style object (during adding a custom style)\n    (state.mapStyles[styleType]?.custom === 'MANAGED' &&\n      !state.mapStyles[styleType]?.url &&\n      !hasStyleObject(state.mapStyles[styleType]))\n  ) {\n    return state;\n  }\n\n  if (!hasStyleObject(state.mapStyles[styleType])) {\n    // style hasn't loaded yet\n    return requestMapStylesUpdater(\n      {\n        ...state,\n        styleType\n      },\n      {\n        payload: {\n          mapStyles: {\n            [styleType]: state.mapStyles[styleType]\n          },\n          onSuccess\n        }\n      }\n    );\n  }\n\n  const defaultLGVisibility = getDefaultLayerGroupVisibility(state.mapStyles[styleType]);\n\n  const visibleLayerGroups = mergeLayerGroupVisibility(\n    defaultLGVisibility,\n    state.visibleLayerGroups\n  );\n\n  const threeDBuildingColor: RGBColor = state.custom3DBuildingColor\n    ? state.threeDBuildingColor\n    : get3DBuildingColor(state.mapStyles[styleType]);\n\n  // determine new backgroundColor from either previous state basemap style, previous state backgroundColor, or the DEFAULT_BACKGROUND_COLOR\n  const backgroundColor = getBackgroundColor(state, styleType);\n\n  return {\n    ...state,\n    styleType,\n    visibleLayerGroups,\n    threeDBuildingColor,\n    backgroundColor,\n    ...getMapStyles({\n      ...state,\n      visibleLayerGroups,\n      styleType\n    })\n  };\n};\n\n/**\n * Callback when load map style success\n * @memberof mapStyleUpdaters\n * @public\n */\nexport const loadMapStylesUpdater = (\n  state: MapStyle,\n  action: MapStyleActions.LoadMapStylesUpdaterAction\n): MapStyle => {\n  const {newStyles, onSuccess} = action.payload || {};\n\n  const addLayerGroups = Object.keys(newStyles).reduce(\n    (accu, id) => ({\n      ...accu,\n      [id]: {\n        ...newStyles[id],\n        layerGroups: newStyles[id].layerGroups || getLayerGroupsFromStyle(newStyles[id].style)\n      }\n    }),\n    {}\n  );\n  // reset isLoading\n  const isLoading = Object.keys(state.isLoading).reduce(\n    (accu, key) => ({\n      ...accu,\n      ...(state.isLoading[key] && hasStyleObject(newStyles[key])\n        ? {[key]: false}\n        : {[key]: state.isLoading[key]})\n    }),\n    {}\n  );\n  // add new styles to state\n  const newState = {\n    ...state,\n    isLoading,\n    mapStyles: {\n      ...state.mapStyles,\n      ...addLayerGroups\n    }\n  };\n\n  const tasks = createActionTask(onSuccess, {styleType: state.styleType});\n\n  const nextState = newStyles[state.styleType]\n    ? mapStyleChangeUpdater(newState, {payload: {styleType: state.styleType}})\n    : newState;\n\n  return tasks ? withTask(nextState, tasks) : nextState;\n};\n\nfunction createActionTask(action, payload) {\n  if (typeof action === 'function') {\n    return ACTION_TASK().map(_ => action(payload));\n  }\n\n  return null;\n}\n\n/**\n * Callback when load map style error\n * @memberof mapStyleUpdaters\n * @public\n */\n// do nothing for now, if didn't load, skip it\nexport const loadMapStyleErrUpdater = (\n  state: MapStyle,\n  {payload: {ids, error}}: MapStyleActions.LoadMapStyleErrUpdaterAction\n): MapStyle => {\n  Console.error(error);\n  // reset isLoading\n  const isLoading = Object.keys(state.isLoading).reduce(\n    (accu, key) => ({\n      ...accu,\n      ...(state.isLoading[key] && (ids || []).includes(key)\n        ? {[key]: false}\n        : {[key]: state.isLoading[key]})\n    }),\n    {}\n  );\n\n  return {\n    ...state,\n    isLoading\n  };\n};\n\n/**\n * Load map style object when pass in saved map config\n * @memberof mapStyleUpdaters\n * @param state `mapStyle`\n * @param action\n * @param action.payload saved map config `{mapStyle, visState, mapState}`\n * @returns nextState or `react-pam` tasks to load map style object\n */\nexport const receiveMapConfigUpdater = (\n  state: MapStyle,\n  {\n    payload: {config}\n  }: {\n    type?: typeof ActionTypes.RECEIVE_MAP_CONFIG;\n    payload: ReceiveMapConfigPayload;\n  }\n): MapStyle => {\n  const {mapStyle} = config || {};\n\n  if (!mapStyle) {\n    return state;\n  }\n\n  // merge default mapStyles\n  const merged = mapStyle.mapStyles\n    ? {\n        ...mapStyle,\n        mapStyles: {\n          ...mapStyle.mapStyles,\n          ...state.mapStyles\n        }\n      }\n    : mapStyle;\n\n  // set custom3DBuildingColor: true if mapStyle contains threeDBuildingColor\n  // @ts-expect-error\n  merged.custom3DBuildingColor =\n    // @ts-expect-error\n    Boolean(mapStyle.threeDBuildingColor) || merged.custom3DBuildingColor;\n  const newState = mapConfigChangeUpdater(state, {payload: merged});\n\n  return mapStyleChangeUpdater(newState, {payload: {styleType: newState.styleType}});\n};\n\nfunction getLoadMapStyleTasks(mapStyles, mapboxApiAccessToken, mapboxApiUrl, onSuccess) {\n  return [\n    Task.all(\n      Object.values(mapStyles)\n        // @ts-expect-error\n        .map(({id, url, accessToken}) => ({\n          id,\n          url: isValidStyleUrl(url)\n            ? getStyleDownloadUrl(url, accessToken || mapboxApiAccessToken, mapboxApiUrl)\n            : url\n        }))\n        .map(LOAD_MAP_STYLE_TASK)\n    ).bimap(\n      // success\n      results =>\n        loadMapStyles(\n          results.reduce(\n            (accu, {id, style}) => ({\n              ...accu,\n              [id]: {\n                ...mapStyles[id],\n                style\n              }\n            }),\n            {}\n          ),\n          onSuccess\n        ),\n      // error\n      err => loadMapStyleErr(Object.keys(mapStyles), err)\n    )\n  ];\n}\n/**\n * Reset map style config to initial state\n * @memberof mapStyleUpdaters\n * @param state `mapStyle`\n * @returns nextState\n * @public\n */\nexport const resetMapConfigMapStyleUpdater = (state: MapStyle): MapStyle => {\n  const emptyConfig = {\n    ...INITIAL_MAP_STYLE,\n    mapboxApiAccessToken: state.mapboxApiAccessToken,\n    mapboxApiUrl: state.mapboxApiUrl,\n    mapStylesReplaceDefault: state.mapStylesReplaceDefault,\n    ...state.initialState,\n    mapStyles: state.mapStyles,\n    initialState: state.initialState\n  };\n\n  return mapStyleChangeUpdater(emptyConfig, {payload: {styleType: emptyConfig.styleType}});\n};\n\n/**\n * Callback when a custom map style object is received\n * @memberof mapStyleUpdaters\n * @public\n */\nexport const loadCustomMapStyleUpdater = (\n  state: MapStyle,\n  {payload: {icon, style, error}}: MapStyleActions.LoadCustomMapStyleUpdaterAction\n): MapStyle => ({\n  ...state,\n  // @ts-expect-error\n  inputStyle: {\n    ...state.inputStyle,\n    // style json and icon will load asynchronously\n    ...(style\n      ? {\n          id:\n            state.inputStyle.custom === 'MANAGED'\n              ? state.inputStyle.id // custom MANAGED type\n              : // @ts-expect-error\n                style.id || generateHashId(), // custom LOCAL type\n          // make a copy of the style object\n          style: cloneDeep(style),\n          // @ts-expect-error\n          label: state.inputStyle.label || style.name,\n          // gathering layer group info from style json\n          layerGroups: getLayerGroupsFromStyle(style)\n        }\n      : {}),\n    ...(icon ? {icon} : {}),\n    ...(error ? {error} : {})\n  }\n});\n\n/**\n * Input a custom map style object\n * @memberof mapStyleUpdaters\n * @public\n */\nexport const inputMapStyleUpdater = (\n  state: MapStyle,\n  {payload: {inputStyle, mapState}}: MapStyleActions.InputMapStyleUpdaterAction\n): MapStyle => {\n  const updated = {\n    ...state.inputStyle,\n    ...inputStyle\n  };\n\n  // differentiate between either a url to hosted style json that needs an icon url,\n  // or an icon already available client-side as a data uri\n  const isValidUrl = isValidStyleUrl(updated.url);\n  const isUpdatedIconDataUri = updated.icon?.startsWith('data:image');\n  const isValid = isValidUrl || Boolean(updated.uploadedFile);\n\n  const icon =\n    isValidUrl && !isUpdatedIconDataUri\n      ? getStyleImageIcon({\n          mapState,\n          styleUrl: updated.url || '',\n          mapboxApiAccessToken: updated.accessToken || state.mapboxApiAccessToken || '',\n          mapboxApiUrl: state.mapboxApiUrl || DEFAULT_MAPBOX_API_URL\n        })\n      : updated.icon;\n\n  return {\n    ...state,\n    inputStyle: {\n      ...updated,\n      isValid,\n      icon\n    }\n  };\n};\n\n/**\n * Add map style from user input to reducer and set it to current style\n * This action is called when user click confirm after putting in a valid style url in the custom map style dialog.\n * It should not be called from outside kepler.gl without a valid `inputStyle` in the `mapStyle` reducer.\n * @memberof mapStyleUpdaters\n */\nexport const addCustomMapStyleUpdater = (state: MapStyle): MapStyle => {\n  const styleId = state.inputStyle.id;\n  if (!styleId) return state;\n\n  const newState = getNewStateWithCustomMapStyle(state);\n  // set new style\n  return mapStyleChangeUpdater(newState, {payload: {styleType: styleId}});\n};\n\n/**\n * Edit map style from user input to reducer.\n * This action is called when user clicks confirm after editing an existing custom style in the custom map style dialog.\n * It should not be called from outside kepler.gl without a valid `inputStyle` in the `mapStyle` reducer.\n * @memberof mapStyleUpdaters\n */\nexport const editCustomMapStyleUpdater = (state: MapStyle): MapStyle => {\n  return getNewStateWithCustomMapStyle(state);\n};\n\nfunction getNewStateWithCustomMapStyle(state: MapStyle): MapStyle {\n  const styleId = state.inputStyle.id;\n  if (!styleId) return state;\n\n  return {\n    ...state,\n    // @ts-expect-error Property 'layerGroups' is missing in type 'InputStyle' but required in type 'BaseMapStyle'. Legacy case?\n    mapStyles: {\n      ...state.mapStyles,\n      [styleId]: {\n        ...state.mapStyles[styleId], // do not unintentionally drop any additional properties\n        ...state.inputStyle\n      }\n    },\n    // set to default\n    inputStyle: getInitialInputStyle()\n  };\n}\n\n/**\n * Remove a custom map style from `state.mapStyle.mapStyles`.\n * @memberof mapStyleUpdaters\n */\nexport const removeCustomMapStyleUpdater = (\n  state: MapStyle,\n  action: MapStyleActions.RemoveCustomMapStyleUpdaterAction\n): MapStyle => {\n  const {id} = action.payload;\n\n  // eslint-disable-next-line no-unused-vars\n  const {[id]: _, ...restOfMapStyles} = state.mapStyles;\n\n  const newState = {\n    ...state,\n    mapStyles: restOfMapStyles\n  };\n\n  if (state.styleType === id) {\n    // if removing a custom style that is also the current active base map,\n    // then reset to the default active base map (`mapStyle.styleType`)\n    return mapStyleChangeUpdater(newState, {payload: {styleType: getDefaultState().styleType}});\n  }\n\n  return newState;\n};\n\n/**\n * Updates 3d building color\n * @memberof mapStyleUpdaters\n */\nexport const set3dBuildingColorUpdater = (\n  state: MapStyle,\n  {payload: color}: MapStyleActions.Set3dBuildingColorUpdaterAction\n): MapStyle => ({\n  ...state,\n  threeDBuildingColor: color,\n  custom3DBuildingColor: true\n});\n\n/**\n * Updates background color\n * @memberof mapStyleUpdaters\n */\nexport const setBackgroundColorUpdater = (\n  state: MapStyle,\n  {payload: color}: MapStyleActions.SetBackgroundColorUpdaterAction\n): MapStyle => ({\n  ...state,\n  backgroundColor: color\n});\n\n/**\n * Return the initial input style\n * @return Object\n */\nexport function getInitialInputStyle(): InputStyle {\n  return {\n    id: null,\n    accessToken: null,\n    error: false,\n    isValid: false,\n    label: null,\n    style: null,\n    url: null,\n    icon: null,\n    custom: 'LOCAL',\n    uploadedFile: null\n  };\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {handleActions} from 'redux-actions';\nimport {ActionTypes} from '@kepler.gl/actions';\nimport * as mapStyleUpdaters from './map-style-updaters';\n\n/**\n * Important: Do not rename `actionHandler` or the assignment pattern of property value.\n * It is used to generate documentation\n */\nconst actionHandler = {\n  [ActionTypes.INIT]: mapStyleUpdaters.initMapStyleUpdater,\n  [ActionTypes.INPUT_MAP_STYLE]: mapStyleUpdaters.inputMapStyleUpdater,\n  [ActionTypes.MAP_CONFIG_CHANGE]: mapStyleUpdaters.mapConfigChangeUpdater,\n  [ActionTypes.MAP_STYLE_CHANGE]: mapStyleUpdaters.mapStyleChangeUpdater,\n  [ActionTypes.REQUEST_MAP_STYLES]: mapStyleUpdaters.requestMapStylesUpdater,\n  [ActionTypes.LOAD_MAP_STYLES]: mapStyleUpdaters.loadMapStylesUpdater,\n  [ActionTypes.LOAD_MAP_STYLE_ERR]: mapStyleUpdaters.loadMapStyleErrUpdater,\n  [ActionTypes.RECEIVE_MAP_CONFIG]: mapStyleUpdaters.receiveMapConfigUpdater,\n  [ActionTypes.LOAD_CUSTOM_MAP_STYLE]: mapStyleUpdaters.loadCustomMapStyleUpdater,\n  [ActionTypes.ADD_CUSTOM_MAP_STYLE]: mapStyleUpdaters.addCustomMapStyleUpdater,\n  [ActionTypes.EDIT_CUSTOM_MAP_STYLE]: mapStyleUpdaters.editCustomMapStyleUpdater,\n  [ActionTypes.REMOVE_CUSTOM_MAP_STYLE]: mapStyleUpdaters.removeCustomMapStyleUpdater,\n  [ActionTypes.RESET_MAP_CONFIG]: mapStyleUpdaters.resetMapConfigMapStyleUpdater,\n  [ActionTypes.SET_3D_BUILDING_COLOR]: mapStyleUpdaters.set3dBuildingColorUpdater,\n  [ActionTypes.SET_BACKGROUND_COLOR]: mapStyleUpdaters.setBackgroundColorUpdater,\n  [ActionTypes.RESET_MAP_CONFIG]: mapStyleUpdaters.resetMapConfigMapStyleUpdater\n};\n\nexport const mapStyleReducerFactory = (initialState = {}) =>\n  // @ts-expect-error\n  handleActions(actionHandler, {\n    ...mapStyleUpdaters.INITIAL_MAP_STYLE,\n    ...initialState,\n    initialState\n  });\n\nexport default mapStyleReducerFactory();\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {\n  ADD_DATA_ID,\n  DATA_TABLE_ID,\n  DEFAULT_NOTIFICATION_TOPICS,\n  DELETE_DATA_ID,\n  EXPORT_DATA_TYPE,\n  EXPORT_HTML_MAP_MODES,\n  EXPORT_IMG_RATIOS,\n  EXPORT_MAP_FORMATS,\n  RESOLUTIONS,\n  MAP_CONTROLS,\n  ExportImage\n} from '@kepler.gl/constants';\nimport {LOCALE_CODES} from '@kepler.gl/localization';\nimport {createNotification, errorNotification, calculateExportImageSize} from '@kepler.gl/utils';\nimport {payload_, apply_, compose_} from './composer-helpers';\n\nimport {\n  ActionTypes,\n  KeplerGlInitPayload,\n  LoadFilesErrUpdaterAction,\n  UIStateActions\n} from '@kepler.gl/actions';\nimport {\n  ExportData,\n  ExportHtml,\n  ExportJson,\n  ExportMap,\n  MapControlItem,\n  MapControls,\n  UiState\n} from '@kepler.gl/types';\n\nexport const DEFAULT_ACTIVE_SIDE_PANEL = 'layer';\nexport const DEFAULT_MODAL = ADD_DATA_ID;\n\n/**\n * Updaters for `uiState` reducer. Can be used in your root reducer to directly modify kepler.gl's state.\n * Read more about [Using updaters](../advanced-usage/using-updaters.md)\n *\n * @public\n * @example\n *\n * import keplerGlReducer, {uiStateUpdaters} from 'kepler.gl/reducers';\n * // Root Reducer\n * const reducers = combineReducers({\n *  keplerGl: keplerGlReducer,\n *  app: appReducer\n * });\n *\n * const composedReducer = (state, action) => {\n *  switch (action.type) {\n *    // click button to close side panel\n *    case 'CLICK_BUTTON':\n *      return {\n *        ...state,\n *        keplerGl: {\n *          ...state.keplerGl,\n *          foo: {\n *             ...state.keplerGl.foo,\n *             uiState: uiStateUpdaters.toggleSidePanelUpdater(\n *               uiState, {payload: null}\n *             )\n *          }\n *        }\n *      };\n *  }\n *  return reducers(state, action);\n * };\n *\n * export default composedReducer;\n */\n/* eslint-disable no-unused-vars */\n// @ts-ignore\nconst uiStateUpdaters = null;\n/* eslint-enable no-unused-vars */\n\nconst DEFAULT_MAP_CONTROLS_FEATURES: MapControlItem = {\n  show: true,\n  active: false,\n  disableClose: false,\n  // defines which map index users are interacting with (through map controls)\n  activeMapIndex: 0\n};\n\n/**\n * A list of map control visibility and whether is it active.\n * @memberof uiStateUpdaters\n * @constant\n * @property visibleLayers Default: `{show: true, active: false}`\n * @property mapLegend Default: `{show: true, active: false}`\n * @property toggle3d Default: `{show: true}`\n * @property splitMap Default: `{show: true}`\n * @property mapDraw Default: `{show: true, active: false}`\n * @property mapLocale Default: `{show: false, active: false}`\n * @public\n */\nexport const DEFAULT_MAP_CONTROLS: MapControls = (Object.keys(MAP_CONTROLS) as Array<\n  keyof typeof MAP_CONTROLS\n>).reduce(\n  (final, current) => ({\n    ...final,\n    [current]: DEFAULT_MAP_CONTROLS_FEATURES\n  }),\n  {} as MapControls\n);\n\n/**\n * Default image export config\n * @memberof uiStateUpdaters\n * @constant\n * @property ratio Default: `'SCREEN'`,\n * @property resolution Default: `'ONE_X'`,\n * @property legend Default: `false`,\n * @property mapH Default: 0,\n * @property mapW Default: 0,\n * @property imageSize Default: {zoomOffset: 0, scale: 1, imageW: 0, imageH: 0},\n * @property imageDataUri Default: `''`,\n * @property exporting Default: `false`\n * @property error Default: `false`\n * @property escapeXhtmlForWebpack Default: `true`\n * @public\n */\nexport const DEFAULT_EXPORT_IMAGE: ExportImage = {\n  // user options\n  ratio: EXPORT_IMG_RATIOS.SCREEN,\n  resolution: RESOLUTIONS.ONE_X,\n  legend: false,\n  mapH: 0,\n  mapW: 0,\n  imageSize: {\n    zoomOffset: 0,\n    scale: 1,\n    imageW: 0,\n    imageH: 0\n  },\n  // when this is set to true, the mock map viewport will move to the center of data\n  center: false,\n  // exporting state\n  imageDataUri: '',\n  // exporting: used to attach plot-container to dom\n  exporting: false,\n  // processing: used as loading indicator when export image is being produced\n  processing: false,\n  error: false,\n  // whether to apply fix for uglify error in dom-to-image (should be true for webpack builds)\n  escapeXhtmlForWebpack: true\n};\n\nexport const DEFAULT_LOAD_FILES = {\n  fileLoading: false\n};\n\n/**\n * Default initial `exportData` settings\n * @memberof uiStateUpdaters\n * @constant\n * @property selectedDataset Default: `''`,\n * @property dataType Default: `'csv'`,\n * @property filtered Default: `true`,\n * @public\n */\nexport const DEFAULT_EXPORT_DATA: ExportData = {\n  selectedDataset: '',\n  dataType: EXPORT_DATA_TYPE.CSV,\n  filtered: true\n};\n\n/**\n * @constant\n */\nexport const DEFAULT_NOTIFICATIONS = [];\n\n/**\n * @constant\n * @property exportMapboxAccessToken - Default: null, this is used when we provide a default mapbox token for users to take advantage of\n * @property userMapboxToken - Default: '', mapbox token provided by user through input field\n * @property mode - Default: 'READ', read only or editable\n * @public\n */\nexport const DEFAULT_EXPORT_HTML: ExportHtml = {\n  exportMapboxAccessToken: null,\n  userMapboxToken: '',\n  mode: EXPORT_HTML_MAP_MODES.READ\n};\n\n/**\n * @constant\n * @property hasData - Default: 'true',\n * @public\n */\nexport const DEFAULT_EXPORT_JSON: ExportJson = {\n  hasData: true\n};\n\n/**\n * Export Map Config\n * @constant\n * @property HTML - Default: 'DEFAULT_EXPORT_HTML',\n * @property JSON - Default: 'DEFAULT_EXPORT_JSON',\n * @property format - Default: 'HTML',\n * @public\n */\nexport const DEFAULT_EXPORT_MAP: ExportMap = {\n  [EXPORT_MAP_FORMATS.HTML]: DEFAULT_EXPORT_HTML,\n  [EXPORT_MAP_FORMATS.JSON]: DEFAULT_EXPORT_JSON,\n  format: EXPORT_MAP_FORMATS.HTML\n};\n\n/**\n * Default initial `uiState`\n * @memberof uiStateUpdaters\n * @constant\n * @property readOnly Default: `false`\n * @property activeSidePanel Default: `'layer'`\n * @property currentModal Default: `'addData'`\n * @property datasetKeyToRemove Default: `null`\n * @property visibleDropdown Default: `null`\n * @property exportImage Default: [`DEFAULT_EXPORT_IMAGE`](#default_export_image)\n * @property exportData Default: [`DEFAULT_EXPORT_DATA`](#default_export_data)\n * @property exportMap Default: [`DEFAULT_EXPORT_MAP`](#default_export_map)\n * @property mapControls Default: [`DEFAULT_MAP_CONTROLS`](#default_map_controls)\n * @property notifications Default: `[]`\n * @property notifications Default: `[]`\n * @property loadFiles\n * @property isSidePanelCloseButtonVisible Default: `true`\n * @public\n */\nexport const INITIAL_UI_STATE: UiState = {\n  readOnly: false,\n  activeSidePanel: DEFAULT_ACTIVE_SIDE_PANEL,\n  currentModal: DEFAULT_MODAL,\n  datasetKeyToRemove: null,\n  visibleDropdown: null,\n  // export image modal ui\n  exportImage: DEFAULT_EXPORT_IMAGE,\n  // export data modal ui\n  exportData: DEFAULT_EXPORT_DATA,\n  // html export\n  exportMap: DEFAULT_EXPORT_MAP,\n  // map control panels\n  mapControls: DEFAULT_MAP_CONTROLS,\n  // ui notifications\n  notifications: DEFAULT_NOTIFICATIONS,\n  // load files\n  loadFiles: DEFAULT_LOAD_FILES,\n  // Locale of the UI\n  locale: LOCALE_CODES.en,\n  layerPanelListView: 'list',\n  filterPanelListView: 'list',\n  isSidePanelCloseButtonVisible: true\n};\n\n/* Updaters */\n/**\n * @memberof uiStateUpdaters\n */\nexport const initUiStateUpdater = (\n  state: UiState,\n  action: {\n    type?: typeof ActionTypes['INIT'];\n    payload: KeplerGlInitPayload;\n  }\n): UiState => ({\n  ...state,\n  ...(action.payload || {}).initialUiState\n});\n\n/**\n * Toggle active side panel\n * @memberof uiStateUpdaters\n * @param state `uiState`\n * @param action\n * @param action.payload id of side panel to be shown, one of `layer`, `filter`, `interaction`, `map`. close side panel if `null`\n * @returns nextState\n * @public\n */\nexport const toggleSidePanelUpdater = (\n  state: UiState,\n  {payload: id}: UIStateActions.ToggleSidePanelUpdaterAction\n): UiState => {\n  return id === state.activeSidePanel\n    ? state\n    : {\n        ...state,\n        activeSidePanel: id\n      };\n};\n\n/**\n * Show and hide modal dialog\n * @memberof uiStateUpdaters\n * @param state `uiState`\n * @param action\n * @paramaction.payload id of modal to be shown, null to hide modals. One of:\n *  - [`DATA_TABLE_ID`](../constants/default-settings.md#data_table_id)\n *  - [`DELETE_DATA_ID`](../constants/default-settings.md#delete_data_id)\n *  - [`ADD_DATA_ID`](../constants/default-settings.md#add_data_id)\n *  - [`EXPORT_IMAGE_ID`](../constants/default-settings.md#export_image_id)\n *  - [`EXPORT_DATA_ID`](../constants/default-settings.md#export_data_id)\n *  - [`ADD_MAP_STYLE_ID`](../constants/default-settings.md#add_map_style_id)\n * @returns nextState\n * @public\n */\nexport const toggleModalUpdater = (\n  state: UiState,\n  {payload: id}: UIStateActions.ToggleModalUpdaterAction\n): UiState => ({\n  ...state,\n  currentModal: id\n});\n\n/**\n * Hide and show side panel header dropdown, activated by clicking the share link on top of the side panel\n * @memberof uiStateUpdaters\n * @public\n */\nexport const showExportDropdownUpdater = (\n  state: UiState,\n  {payload: id}: UIStateActions.ShowExportDropdownUpdaterAction\n): UiState => ({\n  ...state,\n  visibleDropdown: id\n});\n\n/**\n * Hide side panel header dropdown, activated by clicking the share link on top of the side panel\n * @memberof uiStateUpdaters\n * @public\n */\nexport const hideExportDropdownUpdater = (state: UiState): UiState => ({\n  ...state,\n  visibleDropdown: null\n});\n\n/**\n * Toggle side panel close button on top left of the side panel\n * @memberof uiStateUpdaters\n * @public\n */\nexport const toggleSidePanelCloseButtonUpdater = (\n  state: UiState,\n  {payload: {show}}: UIStateActions.ToggleSidePanelCloseButtonUpdaterAction\n): UiState => ({\n  ...state,\n  isSidePanelCloseButtonVisible: show\n});\n\n/**\n * Toggle active map control panel\n * @memberof uiStateUpdaters\n * @param state `uiState`\n * @param action action\n * @param action.payload map control panel id, one of the keys of: [`DEFAULT_MAP_CONTROLS`](#default_map_controls)\n * @returns nextState\n * @public\n */\nexport const toggleMapControlUpdater = (\n  state: UiState,\n  {payload: {panelId, index = 0}}: UIStateActions.ToggleMapControlUpdaterAction\n): UiState => ({\n  ...state,\n  mapControls: {\n    ...state.mapControls,\n    [panelId]: {\n      ...state.mapControls[panelId],\n      active: !state.mapControls[panelId].active,\n      activeMapIndex: index\n    }\n  }\n});\n\n/**\n * Toggle map control visibility\n * @memberof uiStateUpdaters\n * @param state `uiState`\n * @param action action\n * @param action.payload map control panel id, one of the keys of: [`DEFAULT_MAP_CONTROLS`](#default_map_controls)\n * @returns nextState\n * @public\n */\nexport const setMapControlVisibilityUpdater = (\n  state: UiState,\n  {payload: {panelId, show}}: UIStateActions.setMapControlVisibilityUpdaterAction\n): UiState => {\n  if (!state.mapControls?.[panelId]) {\n    return state;\n  }\n\n  return {\n    ...state,\n    mapControls: {\n      ...state.mapControls,\n      [panelId]: {\n        ...state.mapControls[panelId],\n        show: Boolean(show)\n      }\n    }\n  };\n};\n\n/**\n * Toggle active map control panel\n * @memberof uiStateUpdaters\n * @param state `uiState`\n * @param action\n * @param action.payload dataset id\n * @returns nextState\n * @public\n */\nexport const openDeleteModalUpdater = (\n  state: UiState,\n  {payload: datasetKeyToRemove}: UIStateActions.OpenDeleteModalUpdaterAction\n): UiState => ({\n  ...state,\n  currentModal: DELETE_DATA_ID,\n  datasetKeyToRemove\n});\n\n/**\n * Set `exportImage.legend` to `true` or `false`\n * @memberof uiStateUpdaters\n * @param state `uiState`\n * @returns nextState\n * @public\n */\nexport const setExportImageSettingUpdater = (\n  state: UiState,\n  {payload: newSetting}: UIStateActions.SetExportImageSettingUpdaterAction\n): UiState => {\n  const updated = {...state.exportImage, ...newSetting};\n  const imageSize = calculateExportImageSize(updated) || state.exportImage.imageSize;\n\n  return {\n    ...state,\n    exportImage: {\n      ...updated,\n      // @ts-expect-error\n      // TODO: calculateExportImageSize does not return imageSize.zoomOffset,\n      // do we need take this value from current state, or return defaul value = 0\n      imageSize\n    }\n  };\n};\n\n/**\n * Set `exportImage.setExportImageDataUri` to a image dataUri\n * @memberof uiStateUpdaters\n * @param state `uiState`\n * @param action\n * @param action.payload export image data uri\n * @returns nextState\n * @public\n */\nexport const setExportImageDataUriUpdater = (\n  state: UiState,\n  {payload: dataUri}: UIStateActions.SetExportImageDataUriUpdaterAction\n): UiState => ({\n  ...state,\n  exportImage: {\n    ...state.exportImage,\n    processing: false,\n    imageDataUri: dataUri\n  }\n});\n\n/**\n * @memberof uiStateUpdaters\n * @public\n */\nexport const setExportImageErrorUpdater = (\n  state: UiState,\n  {payload: error}: UIStateActions.SetExportImageErrorUpdaterAction\n): UiState => ({\n  ...state,\n  exportImage: {\n    ...state.exportImage,\n    processing: false,\n    error\n  }\n});\n\n/**\n * Delete cached export image\n * @memberof uiStateUpdaters\n * @public\n */\nexport const cleanupExportImageUpdater = (state: UiState): UiState => ({\n  ...state,\n  exportImage: {\n    ...state.exportImage,\n    exporting: false,\n    imageDataUri: '',\n    error: false,\n    processing: false,\n    center: false\n  }\n});\n\n/**\n * Start image exporting flow\n * @memberof uiStateUpdaters\n * @param state\n * @param options\n * @returns {UiState}\n * @public\n */\nexport const startExportingImageUpdater = (\n  state: UiState,\n  {payload: options = {}}: {payload: Partial<ExportImage>}\n): UiState => {\n  const imageSettings = {\n    ...options,\n    exporting: true\n  };\n\n  return compose_([\n    cleanupExportImageUpdater,\n    apply_(setExportImageSettingUpdater, payload_(imageSettings))\n  ])(state);\n};\n\n/**\n * Set selected dataset for export\n * @memberof uiStateUpdaters\n * @param state `uiState`\n * @param action\n * @param action.payload dataset id\n * @returns nextState\n * @public\n */\nexport const setExportSelectedDatasetUpdater = (\n  state: UiState,\n  {payload: dataset}: UIStateActions.SetExportSelectedDatasetUpdaterAction\n): UiState => ({\n  ...state,\n  exportData: {\n    ...state.exportData,\n    selectedDataset: dataset\n  }\n});\n\n/**\n * Set data format for exporting data\n * @memberof uiStateUpdaters\n * @param state `uiState`\n * @param action\n * @param action.payload one of `'text/csv'`\n * @returns nextState\n * @public\n */\nexport const setExportDataTypeUpdater = (\n  state: UiState,\n  {payload: dataType}: UIStateActions.SetExportDataTypeUpdaterAction\n): UiState => ({\n  ...state,\n  exportData: {\n    ...state.exportData,\n    dataType\n  }\n});\n\n/**\n * Whether to export filtered data, `true` or `false`\n * @memberof uiStateUpdaters\n * @param state `uiState`\n * @param action\n * @param action.payload\n * @returns nextState\n * @public\n */\nexport const setExportFilteredUpdater = (\n  state: UiState,\n  {payload: filtered}: UIStateActions.SetExportFilteredUpdaterAction\n): UiState => ({\n  ...state,\n  exportData: {\n    ...state.exportData,\n    filtered\n  }\n});\n\n/**\n * Whether to including data in map config, toggle between `true` or `false`\n * @memberof uiStateUpdaters\n * @param state `uiState`\n * @returns nextState\n * @public\n */\nexport const setExportDataUpdater = (state: UiState): UiState => ({\n  ...state,\n  exportMap: {\n    ...state.exportMap,\n    [EXPORT_MAP_FORMATS.JSON]: {\n      ...state.exportMap[EXPORT_MAP_FORMATS.JSON],\n      hasData: !state.exportMap[EXPORT_MAP_FORMATS.JSON].hasData\n    }\n  }\n});\n\n/**\n * whether to export a mapbox access to HTML single page\n * @param state - `uiState`\n * @param action\n * @param action.payload\n * @returns nextState\n * @public\n */\nexport const setUserMapboxAccessTokenUpdater = (\n  state: UiState,\n  {payload: userMapboxToken}: UIStateActions.SetUserMapboxAccessTokenUpdaterAction\n): UiState => ({\n  ...state,\n  exportMap: {\n    ...state.exportMap,\n    [EXPORT_MAP_FORMATS.HTML]: {\n      ...state.exportMap[EXPORT_MAP_FORMATS.HTML],\n      userMapboxToken\n    }\n  }\n});\n\n/**\n * Sets the export map format\n * @param state - `uiState`\n * @param action\n * @param action.payload format to use to export the map into\n * @return nextState\n */\nexport const setExportMapFormatUpdater = (\n  state: UiState,\n  {payload: format}: UIStateActions.SetExportMapFormatUpdaterAction\n): UiState => ({\n  ...state,\n  exportMap: {\n    ...state.exportMap,\n    // @ts-expect-error\n    format\n  }\n});\n\n/**\n * Set the export html map mode\n * @param state - `uiState`\n * @param action\n * @param action.payload to be set (available modes: EXPORT_HTML_MAP_MODES)\n * @return nextState\n */\nexport const setExportMapHTMLModeUpdater = (\n  state: UiState,\n  {payload: mode}: UIStateActions.SetExportHTMLMapModeUpdaterAction\n): UiState => ({\n  ...state,\n  exportMap: {\n    ...state.exportMap,\n    [EXPORT_MAP_FORMATS.HTML]: {\n      ...state.exportMap[EXPORT_MAP_FORMATS.HTML],\n      mode\n    }\n  }\n});\n\n/**\n * Adds a new notification.\n * Updates a notification in case of matching ids.\n * @memberof uiStateUpdaters\n * @param state `uiState`\n * @param action\n * @param action.payload Params of a notification\n * @returns nextState\n * @public\n */\nexport const addNotificationUpdater = (\n  state: UiState,\n  {payload}: UIStateActions.AddNotificationUpdaterAction\n): UiState => {\n  const oldNotifications = state.notifications || [];\n  // @ts-expect-error\n  const payloadId = payload?.id;\n  const notificationToUpdate = payloadId ? oldNotifications.find(n => n.id === payloadId) : null;\n\n  let notifications;\n  if (notificationToUpdate) {\n    notifications = oldNotifications.map(n =>\n      n.id === payloadId ? createNotification({...payload, count: n.count + 1}) : n\n    );\n  } else {\n    notifications = [...oldNotifications, createNotification(payload)];\n  }\n\n  return {...state, notifications};\n};\n\n/**\n * Remove a notification\n * @memberof uiStateUpdaters\n * @param state `uiState`\n * @param action\n * @param action.payload id of the notification to be removed\n * @returns nextState\n * @public\n */\nexport const removeNotificationUpdater = (\n  state: UiState,\n  {payload: id}: UIStateActions.RemoveNotificationUpdaterAction\n): UiState => ({\n  ...state,\n  notifications: state.notifications.filter(n => n.id !== id)\n});\n\n/**\n * Fired when file loading begin\n * @memberof uiStateUpdaters\n * @param state `uiState`\n * @returns nextState\n * @public\n */\nexport const loadFilesUpdater = (state: UiState): UiState => ({\n  ...state,\n  loadFiles: {\n    ...state.loadFiles,\n    fileLoading: true\n  }\n});\n\n/**\n * Handles loading file success and set fileLoading property to false\n * @memberof uiStateUpdaters\n * @param state `uiState`\n * @returns nextState\n */\nexport const loadFilesSuccessUpdater = (state: UiState): UiState => ({\n  ...state,\n  loadFiles: {\n    ...state.loadFiles,\n    fileLoading: false\n  }\n});\n\n/**\n * Handles load file error and set fileLoading property to false\n * @memberof uiStateUpdaters\n * @param state\n * @param action\n * @param action.error\n * @returns nextState\n * @public\n */\nexport const loadFilesErrUpdater = (state: UiState, {error}: LoadFilesErrUpdaterAction): UiState =>\n  addNotificationUpdater(\n    {\n      ...state,\n      loadFiles: {\n        ...state.loadFiles,\n        fileLoading: false\n      }\n    },\n    {\n      payload: errorNotification({\n        message: (error || {}).message || 'Failed to upload files',\n        topic: DEFAULT_NOTIFICATION_TOPICS.global\n      })\n    }\n  );\n\n/**\n * Handles toggle map split and reset all map control index to 0\n * @memberof uiStateUpdaters\n * @param state\n * @returns nextState\n * @public\n */\nexport const toggleSplitMapUpdater = (state: UiState): UiState => ({\n  ...state,\n  mapControls: Object.entries(state.mapControls).reduce(\n    (acc, entry) => ({\n      ...acc,\n      [entry[0]]: {\n        ...entry[1],\n        activeMapIndex: 0\n      }\n    }),\n    {} as MapControls\n  )\n});\n\n/**\n * Toggle modal data\n * @memberof uiStateUpdaters\n * @param state\n * @returns nextState\n * @public\n */\nexport const showDatasetTableUpdater = (state: UiState): UiState =>\n  toggleModalUpdater(state, {payload: DATA_TABLE_ID});\n\n/**\n * Set the locale of the UI\n * @memberof uiStateUpdaters\n * @param state `uiState`\n * @param action\n * @param action.payload\n * @param action.payload.locale locale\n * @returns nextState\n * @public\n */\nexport const setLocaleUpdater = (\n  state: UiState,\n  {payload: {locale}}: UIStateActions.SetLocaleUpdaterAction\n): UiState => ({\n  ...state,\n  locale\n});\n\n/**\n * Toggle layer panel list view\n * @memberof uiStateUpdaters\n * @param state `uiState`\n * @param action\n * @param action.payload layer panel listView value. Can be 'list' or 'sortByDataset'\n * @returns nextState\n * @public\n */\nexport const togglePanelListViewUpdater = (\n  state: UiState,\n  {payload: {panelId, listView}}: UIStateActions.TogglePanelListViewAction\n): UiState => {\n  const stateProp =\n    panelId === 'layer'\n      ? 'layerPanelListView'\n      : panelId === 'filter'\n      ? 'filterPanelListView'\n      : null;\n  if (!stateProp || state[stateProp] === listView) {\n    return state;\n  }\n  return {\n    ...state,\n    [stateProp]: listView\n  };\n};\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {handleActions} from 'redux-actions';\nimport {ActionTypes} from '@kepler.gl/actions';\nimport * as uiStateUpdaters from './ui-state-updaters';\n\n/**\n * Important: Do not rename `actionHandler` or the assignment pattern of property value.\n * It is used to generate documentation\n */\nconst actionHandler = {\n  [ActionTypes.INIT]: uiStateUpdaters.initUiStateUpdater,\n  [ActionTypes.TOGGLE_SIDE_PANEL]: uiStateUpdaters.toggleSidePanelUpdater,\n  [ActionTypes.TOGGLE_MODAL]: uiStateUpdaters.toggleModalUpdater,\n  [ActionTypes.SHOW_EXPORT_DROPDOWN]: uiStateUpdaters.showExportDropdownUpdater,\n  [ActionTypes.HIDE_EXPORT_DROPDOWN]: uiStateUpdaters.hideExportDropdownUpdater,\n  [ActionTypes.TOGGLE_SIDE_PANEL_CLOSE_BUTTON]: uiStateUpdaters.toggleSidePanelCloseButtonUpdater,\n  [ActionTypes.OPEN_DELETE_MODAL]: uiStateUpdaters.openDeleteModalUpdater,\n  [ActionTypes.TOGGLE_MAP_CONTROL]: uiStateUpdaters.toggleMapControlUpdater,\n  [ActionTypes.SET_MAP_CONTROL_VISIBILITY]: uiStateUpdaters.setMapControlVisibilityUpdater,\n  [ActionTypes.ADD_NOTIFICATION]: uiStateUpdaters.addNotificationUpdater,\n  [ActionTypes.REMOVE_NOTIFICATION]: uiStateUpdaters.removeNotificationUpdater,\n\n  [ActionTypes.SET_EXPORT_IMAGE_SETTING]: uiStateUpdaters.setExportImageSettingUpdater,\n  [ActionTypes.SET_EXPORT_IMAGE_DATA_URI]: uiStateUpdaters.setExportImageDataUriUpdater,\n  [ActionTypes.SET_EXPORT_IMAGE_ERROR]: uiStateUpdaters.setExportImageErrorUpdater,\n  [ActionTypes.CLEANUP_EXPORT_IMAGE]: uiStateUpdaters.cleanupExportImageUpdater,\n  [ActionTypes.START_EXPORTING_IMAGE]: uiStateUpdaters.startExportingImageUpdater,\n\n  [ActionTypes.SET_EXPORT_SELECTED_DATASET]: uiStateUpdaters.setExportSelectedDatasetUpdater,\n  [ActionTypes.SET_EXPORT_DATA_TYPE]: uiStateUpdaters.setExportDataTypeUpdater,\n  [ActionTypes.SET_EXPORT_FILTERED]: uiStateUpdaters.setExportFilteredUpdater,\n  [ActionTypes.SET_EXPORT_DATA]: uiStateUpdaters.setExportDataUpdater,\n  [ActionTypes.SET_USER_MAPBOX_ACCESS_TOKEN]: uiStateUpdaters.setUserMapboxAccessTokenUpdater,\n\n  [ActionTypes.SET_EXPORT_MAP_FORMAT]: uiStateUpdaters.setExportMapFormatUpdater,\n\n  [ActionTypes.SET_EXPORT_MAP_HTML_MODE]: uiStateUpdaters.setExportMapHTMLModeUpdater,\n  [ActionTypes.LOAD_FILES]: uiStateUpdaters.loadFilesUpdater,\n  [ActionTypes.LOAD_FILES_ERR]: uiStateUpdaters.loadFilesErrUpdater,\n\n  [ActionTypes.TOGGLE_SPLIT_MAP]: uiStateUpdaters.toggleSplitMapUpdater,\n  [ActionTypes.SHOW_DATASET_TABLE]: uiStateUpdaters.showDatasetTableUpdater,\n  [ActionTypes.SET_LOCALE]: uiStateUpdaters.setLocaleUpdater,\n  [ActionTypes.TOGGLE_PANEL_LIST_VIEW]: uiStateUpdaters.togglePanelListViewUpdater\n};\n\n/* Reducer */\nexport const uiStateReducerFactory = (initialState = {}) =>\n  // @ts-expect-error\n  handleActions(actionHandler, {\n    ...uiStateUpdaters.INITIAL_UI_STATE,\n    ...initialState,\n    // @ts-ignore\n    initialState\n  });\n\nexport default uiStateReducerFactory();\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {withTask} from 'react-palm/tasks';\nimport Console from 'global/console';\nimport {generateHashId, getError, isPlainObject, toArray} from '@kepler.gl/utils';\nimport {\n  EXPORT_FILE_TO_CLOUD_TASK,\n  ACTION_TASK,\n  DELAY_TASK,\n  LOAD_CLOUD_MAP_TASK\n} from '@kepler.gl/tasks';\nimport {\n  exportFileSuccess,\n  exportFileError,\n  postSaveLoadSuccess,\n  loadCloudMapSuccess,\n  loadCloudMapError,\n  resetProviderStatus,\n  removeNotification,\n  toggleModal,\n  addNotification,\n  addDataToMap,\n  ProviderActions\n} from '@kepler.gl/actions';\nimport {\n  DEFAULT_NOTIFICATION_TYPES,\n  DEFAULT_NOTIFICATION_TOPICS,\n  DATASET_FORMATS,\n  OVERWRITE_MAP_ID\n} from '@kepler.gl/constants';\nimport {ExportFileToCloudPayload} from '@kepler.gl/types';\n\nimport {FILE_CONFLICT_MSG, MapListItem} from '@kepler.gl/cloud-providers';\nimport {DATASET_HANDLERS} from '@kepler.gl/processors';\n\ntype ActionPayload<P> = {\n  type?: string;\n  payload: P;\n};\n\nexport type ProviderState = {\n  isProviderLoading: boolean;\n  isCloudMapLoading: boolean;\n  providerError: any;\n  currentProvider: string | null;\n  successInfo: any;\n  mapSaved: null | string;\n  initialState?: any;\n  visualizations: MapListItem[];\n};\n\nexport const INITIAL_PROVIDER_STATE: ProviderState = {\n  isProviderLoading: false,\n  isCloudMapLoading: false,\n  providerError: null,\n  currentProvider: null,\n  successInfo: {},\n  mapSaved: null,\n  visualizations: []\n};\n\nfunction createActionTask(action, payload) {\n  if (typeof action === 'function') {\n    return ACTION_TASK().map(_ => action(payload));\n  }\n\n  return null;\n}\n\nfunction _validateProvider(provider, method) {\n  if (!provider) {\n    Console.error(`provider is not defined`);\n    return false;\n  }\n\n  if (typeof provider[method] !== 'function') {\n    Console.error(`${method} is not a function of Cloud provider: ${provider.name}`);\n    return false;\n  }\n\n  return true;\n}\n\nfunction createGlobalNotificationTasks({\n  type,\n  message,\n  delayClose = true\n}: {\n  type?: string;\n  message: string;\n  delayClose?: boolean;\n}) {\n  const id = generateHashId();\n  const successNote = {\n    id,\n    type: DEFAULT_NOTIFICATION_TYPES[type || ''] || DEFAULT_NOTIFICATION_TYPES.success,\n    topic: DEFAULT_NOTIFICATION_TOPICS.global,\n    message\n  };\n  const task = ACTION_TASK().map(_ => addNotification(successNote));\n  return delayClose ? [task, DELAY_TASK(3000).map(_ => removeNotification(id))] : [task];\n}\n\n/**\n * This method will export the current kepler config file to the chosen cloud proder\n * add returns a share URL\n *\n */\nexport const exportFileToCloudUpdater = (\n  state: ProviderState,\n  action: ActionPayload<ExportFileToCloudPayload>\n): ProviderState => {\n  const {mapData, provider, options = {}, onSuccess, onError, closeModal} = action.payload;\n\n  if (!_validateProvider(provider, 'uploadMap')) {\n    return state;\n  }\n\n  const newState = {\n    ...state,\n    isProviderLoading: true,\n    currentProvider: provider.name\n  };\n\n  // payload called by provider.uploadMap\n  const payload = {\n    mapData,\n    options\n  };\n  const uploadFileTask = EXPORT_FILE_TO_CLOUD_TASK({provider, payload}).bimap(\n    // success\n    response => exportFileSuccess({response, provider, options, onSuccess, closeModal}),\n    // error\n    error => exportFileError({error, provider, options, onError})\n  );\n\n  return withTask(newState, uploadFileTask);\n};\n\nexport const exportFileSuccessUpdater = (\n  state: ProviderState,\n  action: ActionPayload<ProviderActions.ExportFileSuccessPayload>\n): ProviderState => {\n  const {response, provider, options = {}, onSuccess, closeModal} = action.payload;\n\n  const newState = {\n    ...state,\n    isProviderLoading: false,\n    // TODO: do we always have to store this?\n    successInfo: response,\n    ...(!options.isPublic\n      ? {\n          mapSaved: provider.name\n        }\n      : {})\n  };\n\n  const tasks = [\n    createActionTask(onSuccess, {response, provider, options}),\n    closeModal &&\n      ACTION_TASK().map(_ => postSaveLoadSuccess(`Map saved to ${state.currentProvider}!`))\n  ].filter(d => d);\n\n  return tasks.length ? withTask(newState, tasks) : newState;\n};\n\n/**\n * Close modal on success and display notification\n */\nexport const postSaveLoadSuccessUpdater = (\n  state: ProviderState,\n  action: ActionPayload<ProviderActions.PostSaveLoadSuccessPayload>\n): ProviderState => {\n  const message = action.payload || `Saved / Load to ${state.currentProvider} Success`;\n\n  const tasks = [\n    ACTION_TASK().map(_ => toggleModal(null)),\n    ACTION_TASK().map(_ => resetProviderStatus()),\n    ...createGlobalNotificationTasks({message})\n  ];\n\n  return withTask(state, tasks);\n};\n\nexport const exportFileErrorUpdater = (\n  state: ProviderState,\n  action: ActionPayload<ProviderActions.ExportFileErrorPayload>\n): ProviderState => {\n  const {error, provider, onError} = action.payload;\n\n  const newState = {\n    ...state,\n    isProviderLoading: false\n  };\n\n  if (isFileConflict(error)) {\n    newState.mapSaved = provider.name;\n    return withTask(newState, [ACTION_TASK().map(_ => toggleModal(OVERWRITE_MAP_ID))]);\n  }\n\n  newState.providerError = getError(error);\n  const task = createActionTask(onError, {error, provider});\n\n  return task ? withTask(newState, task) : newState;\n};\n\nexport const loadCloudMapUpdater = (\n  state: ProviderState,\n  action: ActionPayload<ProviderActions.LoadCloudMapPayload>\n): ProviderState => {\n  const {loadParams, provider, onSuccess, onError} = action.payload;\n  if (!loadParams) {\n    Console.warn('load map error: loadParams is undefined');\n    return state;\n  }\n  if (!_validateProvider(provider, 'downloadMap')) {\n    return state;\n  }\n\n  const newState = {\n    ...state,\n    isProviderLoading: true,\n    isCloudMapLoading: true\n  };\n\n  // payload called by provider.downloadMap\n  const uploadFileTask = LOAD_CLOUD_MAP_TASK({provider, payload: loadParams}).bimap(\n    // success\n    // @ts-expect-error\n    response => loadCloudMapSuccess({response, loadParams, provider, onSuccess, onError}),\n    // error\n    // @ts-expect-error\n    error => loadCloudMapError({error, provider, onError})\n  );\n\n  return withTask(newState, uploadFileTask);\n};\n\nfunction isFileConflict(error) {\n  return error && error.message === FILE_CONFLICT_MSG;\n}\n\nfunction checkLoadMapResponseError(response) {\n  if (!response || !isPlainObject(response)) {\n    return new Error('Load map response is empty');\n  }\n  if (!isPlainObject(response.map)) {\n    return new Error(`Load map response should be an object property \"map\"`);\n  }\n  if (!response.map.datasets || !response.map.config) {\n    return new Error(`Load map response.map should be an object with property datasets or config`);\n  }\n\n  return null;\n}\n\nfunction getDatasetHandler(format) {\n  const defaultHandler = DATASET_HANDLERS[DATASET_FORMATS.csv];\n  if (!format) {\n    Console.warn('format is not provided in load map response, will use csv by default');\n    return defaultHandler;\n  }\n\n  if (!DATASET_HANDLERS[format]) {\n    const supportedFormat = Object.keys(DATASET_FORMATS)\n      .map(k => `'${k}'`)\n      .join(', ');\n    Console.warn(\n      `unknown format ${format}. Please use one of ${supportedFormat}, will use csv by default`\n    );\n    return defaultHandler;\n  }\n\n  return DATASET_HANDLERS[format];\n}\n\nfunction parseLoadMapResponse(response, loadParams, provider) {\n  const {map, format} = response;\n  const processorMethod = getDatasetHandler(format);\n\n  const parsedDatasets = toArray(map.datasets).map((ds, i) => {\n    if (format === DATASET_FORMATS.keplergl) {\n      // no need to obtain id, directly pass them in\n      return processorMethod(ds);\n    }\n    const info = (ds && ds.info) || {id: generateHashId(6)};\n    const data = processorMethod(ds.data || ds);\n    return {info, data};\n  });\n\n  const info = {\n    ...map.info,\n    provider: provider.name,\n    loadParams\n  };\n  return {\n    datasets: parsedDatasets,\n    info,\n    ...(map.config ? {config: map.config} : {})\n  };\n}\n\nexport const loadCloudMapSuccessUpdater = (\n  state: ProviderState,\n  action: ActionPayload<ProviderActions.LoadCloudMapSuccessPayload>\n): ProviderState => {\n  const {response, loadParams, provider, onSuccess, onError} = action.payload;\n\n  const formatError = checkLoadMapResponseError(response);\n  if (formatError) {\n    // if response format is not correct\n    return exportFileErrorUpdater(state, {\n      payload: {error: formatError, provider, onError}\n    });\n  }\n\n  const newState = {\n    ...state,\n    mapSaved: provider.name,\n    currentProvider: provider.name,\n    isCloudMapLoading: false,\n    isProviderLoading: false\n  };\n\n  const payload = parseLoadMapResponse(response, loadParams, provider);\n\n  const tasks = [\n    ACTION_TASK().map(_ => addDataToMap(payload)),\n    createActionTask(onSuccess, {response, loadParams, provider}),\n    ACTION_TASK().map(_ => postSaveLoadSuccess(`Map from ${provider.name} loaded`))\n  ].filter(d => d);\n\n  return tasks.length ? withTask(newState, tasks) : newState;\n};\n\nexport const loadCloudMapErrorUpdater = (\n  state: ProviderState,\n  action: ActionPayload<ProviderActions.LoadCloudMapErrorPayload>\n): ProviderState => {\n  const message = getError(action.payload.error) || `Error loading saved map`;\n\n  Console.warn(message);\n\n  const newState = {\n    ...state,\n    isProviderLoading: false,\n    isCloudMapLoading: false,\n    providerError: null\n  };\n\n  return withTask(\n    newState,\n    createGlobalNotificationTasks({type: 'error', message, delayClose: false})\n  );\n};\n\nexport const resetProviderStatusUpdater = (state: ProviderState): ProviderState => ({\n  ...state,\n  isProviderLoading: false,\n  providerError: null,\n  isCloudMapLoading: false,\n  successInfo: {}\n});\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {handleActions} from 'redux-actions';\nimport * as providerStateUpdaters from './provider-state-updaters';\nimport {ProviderActionTypes as ActionTypes} from '@kepler.gl/actions';\n\n/**\n * Important: Do not rename `actionHandler` or the assignment pattern of property value.\n * It is used to generate documentation\n */\nconst actionHandler = {\n  [ActionTypes.EXPORT_FILE_TO_CLOUD]: providerStateUpdaters.exportFileToCloudUpdater,\n  [ActionTypes.EXPORT_FILE_SUCCESS]: providerStateUpdaters.exportFileSuccessUpdater,\n  [ActionTypes.EXPORT_FILE_ERROR]: providerStateUpdaters.exportFileErrorUpdater,\n  [ActionTypes.RESET_PROVIDER_STATUS]: providerStateUpdaters.resetProviderStatusUpdater,\n  [ActionTypes.POST_SAVE_LOAD_SUCCESS]: providerStateUpdaters.postSaveLoadSuccessUpdater,\n  [ActionTypes.LOAD_CLOUD_MAP]: providerStateUpdaters.loadCloudMapUpdater,\n  [ActionTypes.LOAD_CLOUD_MAP_SUCCESS]: providerStateUpdaters.loadCloudMapSuccessUpdater,\n  [ActionTypes.LOAD_CLOUD_MAP_ERROR]: providerStateUpdaters.loadCloudMapErrorUpdater\n};\n\n// construct provider-state reducer\nexport const providerStateReducerFactory = (initialState = {}) =>\n  // @ts-expect-error\n  handleActions(actionHandler, {\n    ...providerStateUpdaters.INITIAL_PROVIDER_STATE,\n    ...initialState,\n    initialState\n  });\n\nexport default providerStateReducerFactory();\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {Bounds} from '@kepler.gl/types';\nimport {Layer} from '@kepler.gl/layers';\n\nconst MAX_LATITUDE = 90;\nconst MIN_LATITUDE = -90;\nconst MAX_LONGITUDE = 180;\nconst MIN_LONGITUDE = -180;\n\n/**\n * return center of map from given points\n * @param layers\n * @returns coordinates of map center, empty if not found\n */\nexport function findMapBounds(layers: Layer[]): Bounds | null {\n  // find bounds in formatted layerData\n  // take ALL layers into account when finding map bounds\n  const availableLayerBounds: Bounds | [] = layers.reduce((res, l) => {\n    if (l.meta && l.meta.bounds) {\n      // @ts-expect-error\n      res.push(l.meta.bounds);\n    }\n    return res;\n  }, []);\n  // return null if no layer is available\n  if (availableLayerBounds.length === 0) {\n    return null;\n  }\n  // merge bounds in each layer\n  const newBounds = (availableLayerBounds as Bounds).reduce(\n    (res, b) => {\n      return [\n        Math.min(res[0], b[0]),\n        Math.min(res[1], b[1]),\n        Math.max(res[2], b[2]),\n        Math.max(res[3], b[3])\n      ];\n    },\n    [MAX_LONGITUDE, MAX_LATITUDE, MIN_LONGITUDE, MIN_LATITUDE]\n  );\n  // @ts-expect-error\n  return newBounds;\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {\n  toggleModalUpdater,\n  loadFilesSuccessUpdater as uiStateLoadFilesSuccessUpdater,\n  toggleMapControlUpdater,\n  toggleSplitMapUpdater as uiStateToggleSplitMapUpdater\n} from './ui-state-updaters';\nimport {\n  updateVisDataUpdater as visStateUpdateVisDataUpdater,\n  setMapInfoUpdater,\n  layerTypeChangeUpdater,\n  toggleSplitMapUpdater as visStateToggleSplitMapUpdater,\n  prepareStateForDatasetReplace\n} from './vis-state-updaters';\nimport {\n  receiveMapConfigUpdater as stateMapConfigUpdater,\n  toggleSplitMapUpdater as mapStateToggleSplitMapUpdater\n} from './map-state-updaters';\nimport {\n  mapStyleChangeUpdater,\n  receiveMapConfigUpdater as styleMapConfigUpdater\n} from './map-style-updaters';\nimport {filesToDataPayload} from '@kepler.gl/processors';\nimport {payload_, apply_, with_, if_, compose_, merge_, pick_} from './composer-helpers';\nimport {MapState, UiState, AddDataToMapPayload, ParsedConfig} from '@kepler.gl/types';\nimport {MapStyle} from './map-style-updaters';\nimport {ProviderState} from './provider-state-updaters';\nimport {\n  loadFilesSuccessUpdaterAction,\n  MapStyleChangeUpdaterAction,\n  LayerTypeChangeUpdaterAction,\n  ToggleSplitMapUpdaterAction,\n  ReplaceDataInMapPayload\n} from '@kepler.gl/actions';\nimport {VisState} from '@kepler.gl/schemas';\nimport {Layer} from '@kepler.gl/layers';\nimport {isPlainObject} from '@kepler.gl/utils';\nimport {findMapBounds} from './data-utils';\nimport {BASE_MAP_COLOR_MODES, OVERLAY_BLENDINGS} from '@kepler.gl/constants';\n\nexport type KeplerGlState = {\n  visState: VisState;\n  mapState: MapState;\n  mapStyle: MapStyle;\n  uiState: UiState;\n  providerState: ProviderState;\n};\n\n// compose action to apply result multiple reducers, with the output of one\n\n/**\n * Some actions will affect the entire kepler.lg instance state.\n * The updaters for these actions is exported as `combinedUpdaters`. These updater take the entire instance state\n * as the first argument. Read more about [Using updaters](../advanced-usage/using-updaters.md)\n * @public\n * @example\n *\n * import keplerGlReducer, {combinedUpdaters} from 'kepler.gl/reducers';\n * // Root Reducer\n * const reducers = combineReducers({\n *  keplerGl: keplerGlReducer,\n *  app: appReducer\n * });\n *\n * const composedReducer = (state, action) => {\n *  switch (action.type) {\n *    // add data to map after receiving data from remote sources\n *    case 'LOAD_REMOTE_RESOURCE_SUCCESS':\n *      return {\n *        ...state,\n *        keplerGl: {\n *          ...state.keplerGl,\n *          // pass in kepler.gl instance state to combinedUpdaters\n *          map:  combinedUpdaters.addDataToMapUpdater(\n *           state.keplerGl.map,\n *           {\n *             payload: {\n *               datasets: action.datasets,\n *               options: {readOnly: true},\n *               config: action.config\n *              }\n *            }\n *          )\n *        }\n *      };\n *  }\n *  return reducers(state, action);\n * };\n *\n * export default composedReducer;\n */\n\n/* eslint-disable no-unused-vars */\n// @ts-ignore\nconst combinedUpdaters = null;\n/* eslint-enable no-unused-vars */\n\nexport const isValidConfig = config =>\n  isPlainObject(config) && isPlainObject(config.config) && config.version;\n\nexport const defaultAddDataToMapOptions = {\n  centerMap: true,\n  keepExistingConfig: false,\n  autoCreateLayers: true,\n  autoCreateTooltips: true\n};\n\n/**\n * Combine data and full configuration update in a single action\n *\n * @memberof combinedUpdaters\n * @param {Object} state kepler.gl instance state, containing all subreducer state\n * @param {Object} action\n * @param {Object} action.payload `{datasets, options, config}`\n * @param action.payload.datasets - ***required** datasets can be a dataset or an array of datasets\n * Each dataset object needs to have `info` and `data` property.\n * @param [action.payload.options] option object `{centerMap: true}`\n * @param [action.payload.config] map config\n * @param [action.payload.info] map info contains title and description\n * @returns nextState\n *\n * @typedef {Object} Dataset\n * @property info -info of a dataset\n * @property info.id - id of this dataset. If config is defined, `id` should matches the `dataId` in config.\n * @property info.label - A display name of this dataset\n * @property data - ***required** The data object, in a tabular format with 2 properties `fields` and `rows`\n * @property data.fields - ***required** Array of fields,\n * @property data.fields.name - ***required** Name of the field,\n * @property data.rows - ***required** Array of rows, in a tabular format with `fields` and `rows`\n *\n * @public\n */\nexport const addDataToMapUpdater = (\n  state: KeplerGlState,\n  {payload}: {payload: AddDataToMapPayload}\n): KeplerGlState => {\n  const {datasets, config, info} = payload;\n\n  const options = {\n    ...defaultAddDataToMapOptions,\n    ...payload.options\n  };\n\n  // check if progresive loading dataset by bataches, and update visState directly\n  const isProgressiveLoading =\n    Array.isArray(datasets) &&\n    datasets[0]?.info.format === 'arrow' &&\n    datasets[0]?.info.id &&\n    datasets[0]?.info.id in state.visState.datasets;\n  if (isProgressiveLoading) {\n    return compose_<KeplerGlState>([\n      pick_('visState')(\n        apply_<VisState, any>(visStateUpdateVisDataUpdater, {\n          datasets,\n          options,\n          config\n        })\n      )\n    ])(state);\n  }\n\n  // @ts-expect-error\n  let parsedConfig: ParsedConfig = config;\n\n  if (isValidConfig(config)) {\n    // if passed in saved config\n    // @ts-expect-error\n    parsedConfig = state.visState.schema.parseSavedConfig(config);\n  }\n  const oldLayers = state.visState.layers;\n  const filterNewlyAddedLayers = (layers: Layer[]) =>\n    layers.filter(nl => !oldLayers.find(ol => ol === nl));\n\n  // Returns undefined if not found, to make typescript happy\n  const findMapBoundsIfCentered = (layers: Layer[]) => {\n    const bounds = options.centerMap && findMapBounds(layers);\n    return bounds ? bounds : undefined;\n  };\n\n  return compose_<KeplerGlState>([\n    pick_('visState')(\n      apply_<VisState, any>(visStateUpdateVisDataUpdater, {\n        datasets,\n        options,\n        config: parsedConfig\n      })\n    ),\n\n    if_(\n      Boolean(info),\n      pick_('visState')(\n        apply_<VisState, any>(setMapInfoUpdater, {info})\n      )\n    ),\n    with_(({visState}) =>\n      pick_('mapState')(\n        apply_(\n          stateMapConfigUpdater,\n          payload_({\n            config: parsedConfig,\n            options,\n            bounds: findMapBoundsIfCentered(filterNewlyAddedLayers(visState.layers))\n          })\n        )\n      )\n    ),\n    pick_('mapStyle')(apply_(styleMapConfigUpdater, payload_({config: parsedConfig, options}))),\n    pick_('uiState')(apply_(uiStateLoadFilesSuccessUpdater, payload_(null))),\n    pick_('uiState')(apply_(toggleModalUpdater, payload_(null))),\n    pick_('uiState')(merge_(options.hasOwnProperty('readOnly') ? {readOnly: options.readOnly} : {}))\n  ])(state);\n};\n\nexport const loadFilesSuccessUpdater = (\n  state: KeplerGlState,\n  action: loadFilesSuccessUpdaterAction\n): KeplerGlState => {\n  // still more to load\n  const payloads = filesToDataPayload(action.result);\n  const nextState = compose_([\n    pick_('visState')(\n      merge_({\n        fileLoading: false,\n        fileLoadingProgress: {}\n      })\n    )\n  ])(state);\n  // make multiple add data to map calls\n  const stateWithData = compose_(payloads.map(p => apply_(addDataToMapUpdater, payload_(p))))(\n    nextState\n  );\n  return stateWithData as KeplerGlState;\n};\n\nexport const addDataToMapComposed = addDataToMapUpdater;\n\n/**\n * Helper which updates map overlay blending mode in visState,\n * but only if it's not currently in the `normal` mode.\n */\nconst updateOverlayBlending = overlayBlending => visState => {\n  if (visState.overlayBlending !== OVERLAY_BLENDINGS.normal.value) {\n    return {\n      ...visState,\n      overlayBlending\n    };\n  }\n  return visState;\n};\n\n/**\n * Helper which updates `darkBaseMapEnabled` in all the layers in visState which\n * have this config setting (or in one specific layer if the `layerId` param is provided).\n */\nconst updateDarkBaseMapLayers = (\n  darkBaseMapEnabled: boolean,\n  layerId: string | null = null\n) => visState => ({\n  ...visState,\n  layers: visState.layers.map(layer => {\n    if (!layerId || layer.id === layerId) {\n      if (layer.visConfigSettings.hasOwnProperty('darkBaseMapEnabled')) {\n        const {visConfig} = layer.config;\n        return layer.updateLayerConfig({\n          visConfig: {...visConfig, darkBaseMapEnabled}\n        });\n      }\n    }\n    return layer;\n  })\n});\n\n/**\n * Updater that changes the map style by calling mapStyleChangeUpdater on visState.\n * In addition to that, it does the following:\n *\n *   1. Update map overlay blending mode in accordance with the colorMode of the\n *      base map, but only if it's not in the `normal` mode.\n *\n *   2. Update all the layers which have the `darkBaseMapEnabled` config setting\n *      adjusting it in accordance with the colorMode of the base map.\n *\n */\nexport const combinedMapStyleChangeUpdater = (\n  state: KeplerGlState,\n  action: MapStyleChangeUpdaterAction\n): KeplerGlState => {\n  const {payload} = action;\n  const {mapStyle} = state;\n  const getColorMode = key => mapStyle.mapStyles[key]?.colorMode;\n  const prevColorMode = getColorMode(mapStyle.styleType);\n  const nextColorMode = getColorMode(payload.styleType);\n  let {visState} = state;\n  if (nextColorMode !== prevColorMode) {\n    switch (nextColorMode) {\n      case BASE_MAP_COLOR_MODES.DARK:\n        visState = compose_([\n          updateOverlayBlending(OVERLAY_BLENDINGS.screen.value),\n          updateDarkBaseMapLayers(true)\n        ])(visState);\n        break;\n      case BASE_MAP_COLOR_MODES.LIGHT:\n        visState = compose_([\n          updateOverlayBlending(OVERLAY_BLENDINGS.darken.value),\n          updateDarkBaseMapLayers(false)\n        ])(visState);\n        break;\n      default:\n      // do nothing\n    }\n  }\n  return {\n    ...state,\n    visState,\n    mapStyle: mapStyleChangeUpdater(mapStyle, {payload: {...payload}})\n  };\n};\n\n/**\n * Updater that changes the layer type by calling `layerTypeChangeUpdater` on visState.\n * In addition to that, if the new layer type has the `darkBaseMapEnabled` config\n * setting, we adjust it in accordance with the colorMode of the base map.s\n */\nexport const combinedLayerTypeChangeUpdater = (\n  state: KeplerGlState,\n  action: LayerTypeChangeUpdaterAction\n): KeplerGlState => {\n  let {visState} = state;\n  const oldLayerIndex = visState.layers.findIndex(layer => layer === action.oldLayer);\n  visState = layerTypeChangeUpdater(visState, action);\n  const newLayer = visState.layers[oldLayerIndex];\n  if (newLayer?.visConfigSettings.hasOwnProperty('darkBaseMapEnabled')) {\n    const {mapStyle} = state;\n    const {colorMode} = mapStyle.mapStyles[mapStyle.styleType];\n    const {darkBaseMapEnabled} = newLayer.config.visConfig;\n    switch (colorMode) {\n      case BASE_MAP_COLOR_MODES.DARK:\n        if (!darkBaseMapEnabled) {\n          visState = updateDarkBaseMapLayers(true, newLayer.id)(visState);\n        }\n        break;\n      case BASE_MAP_COLOR_MODES.LIGHT:\n        if (darkBaseMapEnabled) {\n          visState = updateDarkBaseMapLayers(false, newLayer.id)(visState);\n        }\n        break;\n      default:\n      // do nothing\n    }\n  }\n  return {\n    ...state,\n    visState\n  };\n};\n\n/**\n * Make mapLegend active when toggleSplitMap action is called\n */\nexport const toggleSplitMapUpdater = (\n  state: KeplerGlState,\n  action: ToggleSplitMapUpdaterAction\n): KeplerGlState => {\n  const newState = {\n    ...state,\n    visState: visStateToggleSplitMapUpdater(state.visState, action),\n    uiState: uiStateToggleSplitMapUpdater(state.uiState),\n    mapState: mapStateToggleSplitMapUpdater(state.mapState, action)\n  };\n\n  const isSplit = newState.visState.splitMaps.length !== 0;\n  const isLegendActive = newState.uiState.mapControls?.mapLegend?.active;\n  if (isSplit && !isLegendActive) {\n    newState.uiState = toggleMapControlUpdater(newState.uiState, {\n      payload: {panelId: 'mapLegend', index: action.payload}\n    });\n  }\n\n  return newState;\n};\n\nconst defaultReplaceDataToMapOptions = {\n  keepExistingConfig: true,\n  centerMap: true,\n  autoCreateLayers: false\n};\n\n/**\n * Updater replace a dataset in state\n */\nexport const replaceDataInMapUpdater = (\n  state: KeplerGlState,\n  {payload}: {payload: ReplaceDataInMapPayload}\n): KeplerGlState => {\n  const {datasetToReplaceId, datasetToUse, options = {}} = payload;\n  const addDataToMapOptions = {...defaultReplaceDataToMapOptions, ...options};\n\n  // check if dataset is there\n  if (!state.visState.datasets[datasetToReplaceId]) {\n    return state;\n  }\n  // datasetToUse is ProtoDataset\n  const dataIdToUse = datasetToUse.info.id;\n  if (!dataIdToUse) {\n    return state;\n  }\n  // remove dataset and put dependencies in toBeMerged\n  const preparedState = {\n    ...state,\n    visState: prepareStateForDatasetReplace(state.visState, datasetToReplaceId, dataIdToUse)\n  };\n\n  const nextState = addDataToMapUpdater(\n    preparedState,\n    payload_({\n      datasets: datasetToUse,\n      // should zoom to new dataset\n      options: addDataToMapOptions\n    })\n  );\n\n  return nextState;\n};\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {ActionTypes} from '@kepler.gl/actions';\nimport * as combinedUpdaters from './combined-updaters';\n\n/**\n * Important: Do not rename `actionHandler` or the assignment pattern of property value.\n * It is used to generate documentation\n */\nconst actionHandler = {\n  [ActionTypes.ADD_DATA_TO_MAP]: combinedUpdaters.addDataToMapUpdater,\n  [ActionTypes.MAP_STYLE_CHANGE]: combinedUpdaters.combinedMapStyleChangeUpdater,\n  [ActionTypes.LAYER_TYPE_CHANGE]: combinedUpdaters.combinedLayerTypeChangeUpdater,\n  [ActionTypes.LOAD_FILES_SUCCESS]: combinedUpdaters.loadFilesSuccessUpdater,\n  [ActionTypes.TOGGLE_SPLIT_MAP]: combinedUpdaters.toggleSplitMapUpdater,\n  [ActionTypes.REPLACE_DATA_IN_MAP]: combinedUpdaters.replaceDataInMapUpdater\n};\n\nexport default actionHandler;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {combineReducers} from 'redux';\n\nimport {visStateReducerFactory} from './vis-state';\nimport {mapStateReducerFactory} from './map-state';\nimport {mapStyleReducerFactory} from './map-style';\nimport {uiStateReducerFactory} from './ui-state';\nimport {providerStateReducerFactory} from './provider-state';\n\nimport composers from './composers';\n\nimport {VisState} from '@kepler.gl/schemas';\nimport {MapState, UiState} from '@kepler.gl/types';\nimport {MapStyle} from './map-style-updaters';\nimport {ProviderState} from './provider-state-updaters';\n\nexport type KeplerGlState = {\n  visState: VisState;\n  mapState: MapState;\n  mapStyle: MapStyle;\n  uiState: UiState;\n  providerState: ProviderState;\n};\n\nconst combined = (\n  initialState: Partial<KeplerGlState> = {},\n  extraReducers: {[x: string]: unknown} = {}\n) => {\n  return combineReducers({\n    visState: visStateReducerFactory(initialState.visState),\n    mapState: mapStateReducerFactory(initialState.mapState),\n    mapStyle: mapStyleReducerFactory(initialState.mapStyle),\n    uiState: uiStateReducerFactory(initialState.uiState),\n    providerState: providerStateReducerFactory(initialState.providerState),\n    ...extraReducers\n  });\n};\n\nexport const coreReducerFactory = (\n  initialState: Partial<KeplerGlState> = {},\n  extraReducers = {}\n) => (state, action) => {\n  if (composers[action.type]) {\n    return composers[action.type](state, action);\n  }\n  return combined(initialState, extraReducers)(state, action);\n};\n\nexport default coreReducerFactory();\n\n/**\n * Connect subreducer `mapState`, used with `injectComponents`. Learn more at\n * [Replace UI Component](../advanced-usages/replace-ui-component.md#pass-custom-component-props)\n *\n * @param {*} reduxState\n * @public\n */\nexport const mapStateLens = (reduxState: KeplerGlState) => ({mapState: reduxState.mapState});\n\n/**\n * Connect subreducer `mapStyle`, used with `injectComponents`. Learn more at\n * [Replace UI Component](../advanced-usages/replace-ui-component.md#pass-custom-component-props)\n *\n * @param {*} reduxState\n * @public\n */\nexport const mapStyleLens = (reduxState: KeplerGlState) => ({mapStyle: reduxState.mapStyle});\n\n/**\n * Connect subreducer `visState`, used with `injectComponents`. Learn more at\n * [Replace UI Component](../advanced-usages/replace-ui-component.md#pass-custom-component-props)\n *\n * @param {*} reduxState\n * @public\n */\nexport const visStateLens = (reduxState: KeplerGlState) => ({visState: reduxState.visState});\n\n/**\n * Connect subreducer `uiState`, used with `injectComponents`. Learn more at\n * [Replace UI Component](../advanced-usages/replace-ui-component.md#pass-custom-component-props)\n *\n * @param {*} reduxState\n * @public\n */\nexport const uiStateLens = (reduxState: KeplerGlState) => ({uiState: reduxState.uiState});\n\n/**\n * Connect subreducer `providerState`, used with `injectComponents`. Learn more at\n * [Replace UI Component](../advanced-usages/replace-ui-component.md#pass-custom-component-props)\n *\n * @param {*} reduxState\n * @public\n */\nexport const providerStateLens = (reduxState: KeplerGlState) => ({\n  providerState: reduxState.providerState\n});\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {ActionTypes, keplerGlInit, _actionFor, _updateProperty} from '@kepler.gl/actions';\nimport {handleActions} from 'redux-actions';\n\nimport {coreReducerFactory} from './core';\n\n// INITIAL_STATE\nconst initialCoreState = {};\n\nexport function provideInitialState(initialState, extraReducers?) {\n  const coreReducer = coreReducerFactory(initialState, extraReducers);\n\n  const handleRegisterEntry = (\n    state,\n    {\n      payload: {\n        id,\n        mint,\n        mapboxApiAccessToken,\n        mapboxApiUrl,\n        mapStylesReplaceDefault,\n        initialUiState\n      }\n    }\n  ) => {\n    // by default, always create a mint state even if the same id already exist\n    // if state.id exist and mint=false, keep the existing state\n    const previousState = state[id] && mint === false ? state[id] : undefined;\n\n    return {\n      // register entry to kepler.gl passing in mapbox config to mapStyle\n      ...state,\n      [id]: coreReducer(\n        previousState,\n        keplerGlInit({mapboxApiAccessToken, mapboxApiUrl, mapStylesReplaceDefault, initialUiState})\n      )\n    };\n  };\n\n  const handleDeleteEntry = (state, {payload: id}) =>\n    Object.keys(state).reduce(\n      (accu, curr) => ({\n        ...accu,\n        ...(curr === id ? {} : {[curr]: state[curr]})\n      }),\n      {}\n    );\n\n  const handleRenameEntry = (state, {payload: {oldId, newId}}) =>\n    Object.keys(state).reduce(\n      (accu, curr) => ({\n        ...accu,\n        ...{[curr === oldId ? newId : curr]: state[curr]}\n      }),\n      {}\n    );\n\n  return (state = initialCoreState, action) => {\n    // update child states\n    Object.keys(state).forEach(id => {\n      const updateItemState = coreReducer(state[id], _actionFor(id, action));\n      state = _updateProperty(state, id, updateItemState);\n    });\n\n    // perform additional state reducing (e.g. switch action.type etc...)\n    const handlers = {\n      [ActionTypes.REGISTER_ENTRY]: handleRegisterEntry,\n      [ActionTypes.DELETE_ENTRY]: handleDeleteEntry,\n      [ActionTypes.RENAME_ENTRY]: handleRenameEntry\n    };\n\n    // TODO: Understand why the Lint sees an error here, while the IDE does not.\n    return handleActions(handlers, initialCoreState)(state, action);\n  };\n}\n\nconst _keplerGlReducer = provideInitialState(initialCoreState);\n\nfunction mergeInitialState(saved = {}, provided = {}, extraInitialStateKeys: string[] = []) {\n  const keys = ['mapState', 'mapStyle', 'visState', 'uiState', ...extraInitialStateKeys];\n\n  // shallow merge each reducer\n  const newState = keys.reduce(\n    (accu, key) => ({\n      ...accu,\n      ...(saved[key] && provided[key]\n        ? {[key]: {...saved[key], ...provided[key]}}\n        : {[key]: saved[key] || provided[key] || {}})\n    }),\n    {}\n  );\n\n  return newState;\n}\n\nfunction decorate(target, savedInitialState = {}) {\n  const targetInitialState = savedInitialState;\n\n  /**\n   * Returns a kepler.gl reducer that will also pass each action through additional reducers spiecified.\n   * The parameter should be either a reducer map or a reducer function.\n   * The state passed into the additional action handler is the instance state.\n   * It will include all the subreducers `visState`, `uiState`, `mapState` and `mapStyle`.\n   * `.plugin` is only meant to be called once when mounting the keplerGlReducer to the store.\n   * **Note** This is an advanced option to give you more freedom to modify the internal state of the kepler.gl instance.\n   * You should only use this to adding additional actions instead of replacing default actions.\n   *\n   * @mixin keplerGlReducer.plugin\n   * @memberof keplerGlReducer\n   * @param {Object|Function} customReducer - A reducer map or a reducer\n   * @param {Object} options - options to be applied to custom reducer logic\n   * @param {Object} options.override - objects that describe which action to override, e.g. {[ActionTypes.LAYER_TYPE_CHANGE]: true}\n   * @public\n   * @example\n   * const myKeplerGlReducer = keplerGlReducer\n   *  .plugin({\n   *    // 1. as reducer map\n   *    HIDE_AND_SHOW_SIDE_PANEL: (state, action) => ({\n   *      ...state,\n   *      uiState: {\n   *        ...state.uiState,\n   *        readOnly: !state.uiState.readOnly\n   *      }\n   *    })\n   *  })\n   * .plugin(handleActions({\n   *   // 2. as reducer\n   *   'HIDE_MAP_CONTROLS': (state, action) => ({\n   *     ...state,\n   *     uiState: {\n   *       ...state.uiState,\n   *       mapControls: hiddenMapControl\n   *     }\n   *   })\n   * }, {}));\n   */\n  target.plugin = function plugin(customReducer, options) {\n    if (typeof customReducer === 'object') {\n      // if only provided a reducerMap, wrap it in a reducer\n      customReducer = handleActions(customReducer, {});\n    }\n\n    // use 'function' keyword to enable 'this'\n    return decorate((state = {}, action: {type?: string} = {}) => {\n      let nextState = state;\n      if (action.type && !options?.override?.[action.type]) {\n        nextState = this(state, action);\n      }\n\n      // for each entry in the staten\n      Object.keys(nextState).forEach(id => {\n        // update child states\n        nextState = _updateProperty(\n          nextState,\n          id,\n          customReducer(nextState[id], _actionFor(id, action))\n        );\n      });\n      return nextState;\n    });\n  };\n\n  /**\n   * Return a reducer that initiated with custom initial state.\n   * The parameter should be an object mapping from `subreducer` name to custom subreducer state,\n   * which will be shallow **merged** with default initial state.\n   *\n   * Default subreducer state:\n   *  - [`visState`](./vis-state.md#INITIAL_VIS_STATE)\n   *  - [`mapState`](./map-state.md#INITIAL_MAP_STATE)\n   *  - [`mapStyle`](./map-style.md#INITIAL_MAP_STYLE)\n   *  - [`uiState`](./ui-state.md#INITIAL_UI_STATE)\n   * @mixin keplerGlReducer.initialState\n   * @memberof keplerGlReducer\n   * @param {Object} iniSt - custom state to be merged with default initial state\n   * @param {Object} extraReducers - optional custom reducers in addition to the default `visState`, `mapState`, `mapStyle`, and `uiState`\n   * @public\n   * @example\n   * const myKeplerGlReducer = keplerGlReducer\n   *  .initialState({\n   *    uiState: {readOnly: true}\n   *  });\n   */\n  target.initialState = function initialState(iniSt, extraReducers = {}) {\n    // passing through extraInitialStateKeys and extraReducers allows external customization by adding additional subreducers and state beyond the default `visState`, `mapState`, `mapStyle`, and `uiState`\n    const extraInitialStateKeys = Object.keys(extraReducers);\n    const merged = mergeInitialState(targetInitialState, iniSt, extraInitialStateKeys);\n    const targetReducer = provideInitialState(merged, extraReducers);\n\n    return decorate(targetReducer, merged);\n  };\n\n  return target;\n}\n\n/**\n * Kepler.gl reducer to be mounted to your store. You can mount `keplerGlReducer` at property `keplerGl`, if you choose\n * to mount it at another address e.g. `foo` you will need to specify it when you mount `KeplerGl` component in your app with `getState: state => state.foo`\n * @public\n * @example\n * import keplerGlReducer from 'kepler.gl/reducers';\n * import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\n * import {taskMiddleware} from 'react-palm/tasks';\n *\n * const initialState = {};\n * const reducers = combineReducers({\n *   // <-- mount kepler.gl reducer in your app\n *   keplerGl: keplerGlReducer,\n *\n *   // Your other reducers here\n *   app: appReducer\n * });\n *\n * // using createStore\n * export default createStore(reducer, initialState, applyMiddleware(taskMiddleware));\n */\nconst keplerGlReducer = decorate(_keplerGlReducer);\nexport default keplerGlReducer;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {createSelector} from 'reselect';\n\n// NOTE: default formats must match file-handler-test.js\nconst DEFAULT_FILE_EXTENSIONS = ['csv', 'json', 'geojson', 'arrow'];\nconst DEFAULT_FILE_FORMATS = ['CSV', 'Json', 'GeoJSON', 'Arrow'];\n\nexport const getFileFormatNames = createSelector(\n  // @ts-expect-error\n  state => state.loaders,\n  loaders => [...DEFAULT_FILE_FORMATS, ...loaders.map(loader => loader.name)]\n);\n\nexport const getFileExtensions = createSelector(\n  // @ts-expect-error\n  state => state.loaders,\n  loaders => [...DEFAULT_FILE_EXTENSIONS, ...loaders.flatMap(loader => loader.extensions)]\n);\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport {Blob} from 'global/window';\nimport {csvFormatRows} from 'd3-dsv';\n\nimport {EXPORT_DATA_TYPE} from '@kepler.gl/constants';\nimport {Field} from '@kepler.gl/types';\nimport KeplerTable, {Datasets} from '@kepler.gl/table';\n\nimport {\n  createIndexedDataContainer,\n  DataContainerInterface,\n  parseFieldValue,\n  downloadFile,\n  DEFAULT_DATA_NAME\n} from '@kepler.gl/utils';\n\ninterface StateType {\n  visState: {datasets: Datasets};\n  appName?: string;\n}\n\nexport function exportData(state: StateType, options) {\n  const {visState, appName} = state;\n  const {datasets} = visState;\n  const {selectedDataset, dataType, filtered} = options;\n  // get the selected data\n  const filename = appName ? appName : DEFAULT_DATA_NAME;\n  const selectedDatasets = datasets[selectedDataset]\n    ? [datasets[selectedDataset]]\n    : Object.values(datasets);\n  if (!selectedDatasets.length) {\n    // error: selected dataset not found.\n    return;\n  }\n\n  selectedDatasets.forEach(selectedData => {\n    const {dataContainer, fields, label, filteredIdxCPU = []} = selectedData as KeplerTable;\n    const toExport = filtered\n      ? createIndexedDataContainer(dataContainer, filteredIdxCPU)\n      : dataContainer;\n\n    // start to export data according to selected data type\n    switch (dataType) {\n      case EXPORT_DATA_TYPE.CSV: {\n        const csv = formatCsv(toExport, fields);\n\n        const fileBlob = new Blob([csv], {type: 'text/csv'});\n        downloadFile(fileBlob, `${filename}_${label}.csv`);\n        break;\n      }\n      // TODO: support more file types.\n      default:\n        break;\n    }\n  });\n}\n\n/**\n * On export data to csv\n * @param dataContainer\n * @param fields `dataset.fields`\n * @returns csv string\n */\nexport function formatCsv(data: DataContainerInterface, fields: Field[]): string {\n  const columns = fields.map(f => f.displayName || f.name);\n  const formattedData = [columns];\n\n  // parse geojson object as string\n  for (const row of data.rows(true)) {\n    formattedData.push(row.map((d, i) => parseFieldValue(d, fields[i].type)));\n  }\n\n  return csvFormatRows(formattedData);\n}\n\nconst exporters = {\n  exportData\n};\n\nexport default exporters;\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\n// Extra helpers for redux\n// We are exposing this secause react-palm has no UMD module and\n// users need taskMiddleware to initiate their redux middle ware\nimport {taskMiddleware} from 'react-palm/tasks';\nimport {Middleware} from 'redux';\n\n/**\n * This method is used to enhance redux middleware and provide\n * functionality to support react-palm\n * @param middlewares current redux middlewares\n * @returns {*[]} the original list of middlewares plus the react-palm middleware\n */\nexport function enhanceReduxMiddleware(middlewares: Middleware[] = []): Middleware[] {\n  return [...middlewares, taskMiddleware];\n}\n","// SPDX-License-Identifier: MIT\n// Copyright contributors to the kepler.gl project\n\nimport window from 'global/window';\n\n/**\n * Generate a hash string based on number of character\n * @param {number} count\n * @returns {string} hash string\n */\nexport function generateHashId(count: number = 6): string {\n  return Math.random()\n    .toString(36)\n    .substr(count);\n}\n\n/**\n * Generate a hash string based on string\n * @param str\n * @returns\n */\nexport function generateHashIdFromString(str: string): string {\n  // generate hash string based on string\n  let hash = 0;\n  let i;\n  let chr;\n  let len;\n  if (str.length === 0) return hash.toString();\n  for (i = 0, len = str.length; i < len; i++) {\n    chr = str.charCodeAt(i);\n    // eslint-disable-next-line no-bitwise\n    hash = (hash << 5) - hash + chr;\n    // eslint-disable-next-line no-bitwise\n    hash |= 0; // Convert to 32bit integer\n  }\n  return hash.toString(36);\n}\n\n/**\n * Detect chrome\n * @returns {boolean} - yes or no\n */\nexport function isChrome(): boolean {\n  // Chrome 1+\n  return window.chrome && window.chrome.webstore;\n}\n\n/**\n * Capitalize first letter of a string\n * @param {string} str\n * @returns {string}\n */\nexport function capitalizeFirstLetter(str) {\n  return typeof str === 'string' ? str.charAt(0).toUpperCase() + str.slice(1) : str;\n}\n\n/**\n * Convert camel style names to title\n * strokeColor -> Stroke Color\n * @param {string} str\n * @returns {string}\n */\nexport function camelToTitle(str: string): string {\n  const breakWord = str.replace(/([A-Z])/g, ' $1');\n  return capitalizeFirstLetter(breakWord);\n}\n\n/**\n * Convert names to camel style\n * Stroke Color -> strokeColor\n * @param {string} str\n * @returns {string}\n */\nexport const camelize = (str: string): string => {\n  return str.replace(/(?:^\\w|[A-Z]|\\b\\w|\\s+)/g, (match, index) => {\n    if (Number(match) === 0) return ''; // or if (/\\s+/.test(match)) for white spaces\n    return index === 0 ? match.toLowerCase() : match.toUpperCase();\n  });\n};\n\n/**\n * Converts non-arrays to arrays.  Leaves arrays alone.  Converts\n * undefined values to empty arrays ([] instead of [undefined]).\n * Otherwise, just returns [item] for non-array items.\n *\n * @param {*} item\n * @returns {array} boom! much array. very indexed. so useful.\n */\nexport function toArray<T>(item: T | T[]): T[] {\n  if (Array.isArray(item)) {\n    return item;\n  }\n\n  if (typeof item === 'undefined' || item === null) {\n    return [];\n  }\n\n  return [item];\n}\n\n/**\n * immutably insert value to an Array or Object\n * @param {Array|Object} obj\n * @param {Number|String} key\n * @param {*} value\n * @returns {Array|Object}\n */\nexport const insertValue = <T extends any[] | object>(\n  obj: T,\n  key: number | string,\n  value: any\n): T => {\n  if (Array.isArray(obj) && typeof key === 'number') {\n    return [...obj.slice(0, key), value, ...obj.slice(key + 1, obj.length)] as T;\n  }\n\n  return {...obj, [key]: value};\n};\n\n/**\n * check if value is a loose object including a plain object, array, function\n * @param {*} value\n */\nexport function isObject(value): boolean {\n  return value !== null && (typeof value === 'object' || typeof value === 'function');\n}\n\n/**\n * whether is an object\n * @returns {boolean} - yes or no\n */\nexport function isPlainObject(obj: unknown): obj is Record<string, unknown> {\n  return obj === Object(obj) && typeof obj !== 'function' && !Array.isArray(obj);\n}\n\nconst setPath = <T extends any[] | object>(\n  [key, ...next]: (string | number)[],\n  value: any,\n  obj: object | any[]\n): T => {\n  // is Object allows js object, array and function\n  if (!isObject(obj)) {\n    return obj as T;\n  }\n\n  if (next.length === 0) {\n    return insertValue(obj, key, value) as T;\n  }\n\n  // @ts-ignore\n  return insertValue(obj, key, setPath(next, value, obj.hasOwnProperty(key) ? obj[key] : {}));\n};\n\n/**\n * Immutable version of _.set\n * @param {Array<String|Number>} path\n * @param {*} value\n * @param {Object} obj\n * @returns {Object}\n */\n// @ts-ignore\nexport const set = <T extends any[] | object>(path: (string | number)[], value: any, obj: T): T =>\n  obj === null ? obj : setPath(path, value, obj);\n\ntype ErrorObject = {\n  error?: any;\n  err?: any;\n  message?: any;\n};\n\n/**\n * Get error information of unknown type\n * Extracts as much human readable information as possible\n * Ensure result is an Error object suitable for throw or promise rejection\n *\n * @private\n * @param {*}  err - Unknown error\n * @return {string} - human readable error msg\n */\nexport function getError(err?: Error | ErrorObject | string): string {\n  if (!err) {\n    return 'Something went wrong';\n  }\n\n  if (typeof err === 'string') {\n    return err;\n  } else if (err instanceof Error) {\n    return err.message;\n  } else if (typeof err === 'object') {\n    return err.error\n      ? getError(err.error)\n      : err.err\n      ? getError(err.err)\n      : err.message\n      ? getError(err.message)\n      : JSON.stringify(err);\n  }\n\n  // @ts-ignore\n  return null;\n}\n\nexport function arrayInsert<T>(arr: T[], index: number, val: T): T[] {\n  if (!Array.isArray(arr)) {\n    return arr;\n  }\n\n  return [...arr.slice(0, index), val, ...arr.slice(index)];\n}\n\nexport function hasMobileWidth(breakPointValues: {palm: number; desk: number}): boolean {\n  const mobileWidth = window.matchMedia(`(max-width: ${breakPointValues.palm}px)`);\n  return mobileWidth.matches;\n}\n\nexport function hasPortableWidth(breakPointValues: {palm: number; desk: number}): boolean {\n  const mobileWidth = window.matchMedia(`(max-width: ${breakPointValues.desk}px)`);\n  return mobileWidth.matches;\n}\n\nexport function isTest(): boolean {\n  return typeof process !== 'undefined' && process?.env?.NODE_ENV === 'test';\n}\n\n/**\n * Filters an object by an arbitrary predicate\n * Returns a new object containing all elements that match the predicate\n * @param {Object} obj Object to be filtered\n * @param {Function} predicate Predicate by which the object will be filtered\n * @returns {Object}\n */\nexport function filterObjectByPredicate(obj, predicate) {\n  return Object.entries(obj).reduce(\n    (acc, entry) => (predicate(entry[0], entry[1]) ? {...acc, [entry[0]]: entry[1]} : acc),\n    {}\n  );\n}\n\nexport function isFunction(func): boolean {\n  return typeof func === 'function';\n}\n\nexport function findById(id: string): <X extends {id: string}>(arr: X[]) => X | undefined {\n  return arr => arr.find(a => a.id === id);\n}\n\n/**\n * Returns array difference from\n */\nexport function arrayDifference<X extends {id: string}>(source: X[]): (compare: X[]) => X[] {\n  return compare =>\n    source.reduce((acc, element) => {\n      const foundElement = findById(element.id)(compare);\n      return foundElement ? [...acc, foundElement] : acc;\n    }, [] as X[]);\n}\n"],"sourceRoot":""}